


#include "IV_Control_A.h"
#include <string.h> 

EXEC SQL INCLUDE SQLCA.H;
extern int int_g_eu_condexists; 


int IV_Proc_PrnFooterWeb(FILE *bill,

					 FILE *fl_userlog,
					 char *chr_p_billdt,
					 char *chr_p_client,
					 SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
		 			 IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,
		 			 char p_mastsub,
		 			 double p_totcomm,
		 			 double p_totcust,
					 double p_tottran,
					 double p_totcash,
					 double p_totca,
					 double p_tototh,
					 double p_totdepo,
					 int *int_currpos,
		 			 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{


struct sqlca sqlca;
int int_retstat;
IV_SERV_MAST_STRUCT l_ivservmast_struct;
IV_EXCHANGERATE_STRUCT l_iv_exchangerate_struct;
IV_SERVICE_CHRG_STRUCT l_iv_service_chrg_struct;

int i=0;
int int_ret=0;
int int_headerlen = 0;
int n = 0; 

int int_newlen =0;
int int_retbcuststat=0;
int int_exchret=0;
int int_paymentret=0;
int int_creditbalret=0;
int int_netcommret=0;
int int_commtaxret =0;
int int_tottaxret = 0;
int int_voldisret =0;
int int_totosret =0;
int int_minfeeret =0;
int int_totcommret =0;
int int_l_dtottaxret=0;

EXEC SQL BEGIN DECLARE SECTION;


double int_h_servcode;
double dbl_h_commtax=0;
double dbl_h_spcialfee=0.0;
double netcomm=0;
double h_rt = 0.0;
char   h_currencycode[4];
char   chr_h_emu_ccy_A[4] = APL_NULL_STRING;
char	 h_ibbsclient[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
char	 h_mstclt[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
char   chr_h_mstacc1[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
double outstandingamount =0;
double dbl_creditbal=0;
double dbl_abscreditbal =0;
double Payment =0;
char   chr_p_to_ccy[4];
double taxfeeamount =0;
double edufeeamount =0.0;
double minfeeamount =0;
double voldiscountamount =0;
double h_exchgrt=0;

static int int_l_populated = 0;  
char **chr_l_tmpfoot  = NULL;
int  number_a = 0;
int int_l_lines = 0;
char *chr_dupaddr;

char chr_tmpaddr[181];
char chr_l_h_corporate_addr[321];
int int_ilen;
int int_l_pagelength = 0;
short int_l_condexists = 0;

double dbl_h_schdl_fee = 0.0;
short i_schdl_fee = 0;


short i_servcode =0;
short i_commtax=0;
short i_currencycode=0;
short i_exchrt=0;
short i_fromccy=0;
short i_toccy=0;
short i_emu_ccy=0;


EXEC SQL VAR l_iv_clt_setup_struct.b_ccycd IS STRING;
EXEC SQL VAR l_ivservmast_struct.service_det IS STRING;
EXEC SQL VAR chr_h_emu_ccy_A IS STRING;
EXEC SQL VAR h_mstclt IS STRING; 
EXEC SQL VAR chr_h_mstacc1 IS STRING;
EXEC SQL VAR h_ibbsclient IS STRING; 

EXEC SQL END DECLARE SECTION;

char chr_f_exchrt[20], chr_f_payment[20], chr_f_creditbal[20], chr_f_netcomm[20];
char chr_f_commtax[20], chr_f_tottax[20], chr_f_voldisfee[20], chr_f_totosamt[20];
char chr_f_minfee[20], chr_f_totcomm[20]; 
char chr_f_euronetcomm[20];
char chr_l_amtstr[30]; 
double roundedamount = 0.0;
char chr_l_footnote[241]; 
char chr_l_footnote1[241]; 
char chr_l_foot[241];
char chr_l_foot1[241];
int int_nlength = 0;
char chr_prev[1];
int int_icount;
int int_jcount;
char chr_new[241];

double l_tottaxret = 0.0;
char chr_f_tottaxret[20];

double l_taxfee = TAXFEE;


IV_CLIENTDET_STRUCT_H l_iv_clientdet_struct_h;
char chr_l_recacc[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_l_rec_ccy[APL_CCYCODE_LEN] = APL_NULL_STRING;
int int_l_retstat = 0;


char chr_l_from_ccy[APL_CCYCODE_LEN];
char chr_l_to_ccy[APL_CCYCODE_LEN];
double l_ae_rate_to_print = 0.0;
double l_ae_rate = 0.0;
double dbl_h_totcust=0.0,dbl_h_tottran=0.0,dbl_h_totcash=0.0,dbl_h_totca=0.0,dbl_h_tototh=0.0,dbl_h_totcomm=0.0, edurate=0.0,dbl_h_totdepo=0.0;


#define  LINERR_WIDTH							68
char chr_l_temp_footer1[241]					=	APL_NULL_STRING;
char *chr_l_temp_footer2							=	NULL;
char chr_l_line_footer[LINERR_WIDTH]			=	APL_NULL_STRING;
int int_l_len_footer								=	0;
int int_l_lines_footer							=	0;
int int_l_counter									=	0;

#ifdef EMU_PROCESSING
	char chr_l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	int int_l_emutransperiod = 0, int_euronetcommret =0;
	double dbl_l_convnetcomm =0.0;
#endif

memset(chr_f_exchrt, APL_NULL_CHAR, 20);
memset(chr_f_payment, APL_NULL_CHAR, 20);
memset(chr_f_creditbal, APL_NULL_CHAR, 20);
memset(chr_f_netcomm, APL_NULL_CHAR, 20);
memset(chr_f_commtax, APL_NULL_CHAR, 20);
memset(chr_f_tottax, APL_NULL_CHAR, 20);
memset(chr_f_voldisfee, APL_NULL_CHAR, 20);
memset(chr_f_totosamt, APL_NULL_CHAR, 20);
memset(chr_f_minfee, APL_NULL_CHAR, 20);
memset(chr_f_totcomm, APL_NULL_CHAR, 20);
memset(chr_l_footnote, APL_NULL_CHAR, 241);
memset(chr_l_footnote1, APL_NULL_CHAR, 241);
memset(chr_h_mstacc1, APL_NULL_CHAR, APL_CLIENT_LENGTH);
memset(chr_f_tottaxret,APL_NULL_CHAR, 20);

l_ae_rate = 0.0;

if (APL_FAILURE == ConvToFxFn_GR(l_iv_clt_setup_struct.b_ccycd,
								  l_iv_clt_setup_struct.fees_ccy,
                          g_mt_commonsys_params_struct_h.dom_ccy,
								  chr_p_billdt, &l_ae_rate,&int_l_retstat,l_debug_info_ptr) )
{
	APL_GOBACK_FAIL
}

 Alert("Custody Fee :|%lf||%lf|",p_totcust,l_ae_rate);
 Alert("Transaction Fee :|%lf||%lf|",p_tottran,l_ae_rate);
 Alert("Cash Item Fee :|%lf||%lf|",p_totcash,l_ae_rate);
 Alert("CA Fee :|%lf||%lf|",p_totca,l_ae_rate);
 
 dbl_h_totcust = p_totcust * l_ae_rate;
 dbl_h_tottran = p_tottran * l_ae_rate;
 dbl_h_totcash = p_totcash * l_ae_rate;
 dbl_h_totca   = p_totca * l_ae_rate;
 dbl_h_tototh  = p_tototh * l_ae_rate;
 dbl_h_totcomm = p_totcomm * l_ae_rate;
 dbl_h_totdepo = p_totdepo * l_ae_rate;

   
   if ( APL_FAILURE == CO_Chk_CntryEnabled( "BILL_PRINTING",
                                          "PAGE_LENGTH",
                                          &int_l_condexists,
                                          l_debug_info_ptr) )
   {
      APL_GOBACK_FAIL
   }

   if (int_l_condexists)
      int_l_pagelength = 70;
   else  int_l_pagelength = 58;

   fprintf(bill,"\n<BR>\n<TABLE id='Table3' borderColor='#000000' cellSpacing='0' cellPadding='1' width='50%%' border='1' class='ez1'>");
	fprintf(bill,"\n<tr borderColor='#e8eff9'><td class=\'hot2\'>SUMMARY</td><td></td><td></td></tr>");
	
	int_totcommret = IV_Proc_Round(&dbl_h_tottran,l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>TRANSACTION FEES</td><td align='right'>%s</td></tr>",chr_f_totcomm);
	}

	int_totcommret = IV_Proc_Round(&dbl_h_totcust,l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>SAFE CUSTODY FEES</td><td align='right'>%s</td></tr>",chr_f_totcomm);
			
	}
	
	int_totcommret = IV_Proc_Round(&dbl_h_totcash,l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>CASH SERVICE FEES</td><td align='right'>%s</td></tr>",chr_f_totcomm);
			
	}
	/* HDFCIV_004 PJ */
	int_totcommret = IV_Proc_Round(&dbl_h_totca,l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>CORPORATE ACTION FEES</td><td align='right'>%s</td></tr>",chr_f_totcomm);
			
	}

	int_totcommret = IV_Proc_Round(&dbl_h_tototh,l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>OTHER FEES</td><td align='right'>%s</td></tr>",chr_f_totcomm);
				
	}
	/* PJ UT Fix */
	/*	Depository Charges	Rohit	*/
	/* int_totcommret = IV_Proc_Round(&dbl_h_totdepo,l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>DEPOSITORY SERVICE FEES</td><td align='right'>%s</td></tr>",chr_f_totcomm);
			
	} */

	int_totcommret = IV_Proc_Round(&dbl_h_totcomm,l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>TOTAL FEES (%s)</td><td align='right'>%s</td></tr>",l_iv_clt_setup_struct.fees_ccy,chr_f_totcomm);
				
	}


   if (strcmp(l_iv_clt_setup_struct.b_ccycd,l_iv_clt_setup_struct.fees_ccy)!=0)
	{
	fprintf(bill,"\n<tr borderColor='#e8eff9'><td>TOTAL FEES(%s)</td>",l_iv_clt_setup_struct.b_ccycd);
			
	int_totcommret = IV_Proc_Round(&p_totcomm,l_iv_clt_setup_struct.b_ccycd,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 
      fprintf(bill,"<td  align='right'>%s</td></tr>",chr_f_totcomm);
		
		if (APL_FAILURE == ConvToFxFn_GR(l_iv_clt_setup_struct.b_ccycd,
											 l_iv_clt_setup_struct.fees_ccy,
											 g_mt_commonsys_params_struct_h.dom_ccy,
											 chr_p_billdt,
											 &h_rt,
											 &int_retstat,
											 l_debug_info_ptr) )
		{
			fprintf(fl_userlog,"Failed To Fetch Exchange Rate Between %s and %s \n",l_iv_clt_setup_struct.b_ccycd, g_mt_commonsys_params_struct_h.dom_ccy);
			APL_GOBACK_FAIL
		}

		l_ae_rate_to_print = 0.0;

		if ( !strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind, "D" ) )
			l_ae_rate_to_print = h_rt;
		else
			l_ae_rate_to_print = 1.0/ h_rt;
      fprintf(bill,"\n<tr borderColor='#e8eff9'><td>EXCHANGE RATE</td><td align='right'>%.8lf</td></tr>",l_ae_rate_to_print);
			
	 }
	}



	memset(&l_ivservmast_struct, NULL , sizeof(IV_SERV_MAST_STRUCT));
	memset(&l_iv_service_chrg_struct, NULL , sizeof(IV_SERVICE_CHRG_STRUCT));

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRGDel(VOLDISCOUNTFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVICES)\n");
			APL_GOBACK_FAIL
		}
		else if (int_retstat == IV_NO_DATA_FOUND_ERR)
		{
			fprintf(fl_userlog,"Service detail  not found for volume discount fees \n");
			APL_GOBACK_FAIL
			
		}
	}
	

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRG(chr_p_billdt,chr_p_client,p_mastsub,VOLDISCOUNTFEE,&l_iv_service_chrg_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVCHARGE)\n");
			APL_GOBACK_FAIL
		}
	}

	
   
   if ( l_iv_service_chrg_struct.comm_amt )
	{
		   fprintf(bill,"\n<tr borderColor='#e8eff9'><td>%s (%s)</td>",l_ivservmast_struct.service_det,l_iv_clt_setup_struct.b_ccycd);	
			
			voldiscountamount = l_iv_service_chrg_struct.comm_amt;
		
			int_voldisret = IV_Proc_Round(&l_iv_service_chrg_struct.comm_amt,l_iv_service_chrg_struct.b_ccycd,chr_f_voldisfee,l_debug_info_ptr);
			if (int_voldisret == 1)
			{
				

				roundedamount = 0.0;
				memset(chr_l_amtstr, APL_NULL_CHAR, 30);
				sscanf(chr_f_voldisfee, "%lf", &roundedamount);
				
				CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_service_chrg_struct.b_ccycd,l_debug_info_ptr); 
				strcpy(chr_f_voldisfee, chr_l_amtstr + 10); 
            fprintf(bill,"<td align='right'>%s</td></tr>",chr_f_voldisfee);
			}
			else
			{	
				fprintf(fl_userlog,"Returned Failed from Rounder1\n"); 
				APL_GOBACK_FAIL
			}
	}


	memset(&l_ivservmast_struct, NULL , sizeof(IV_SERV_MAST_STRUCT));
	memset(&l_iv_service_chrg_struct, NULL , sizeof(IV_SERVICE_CHRG_STRUCT));

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRGDel(TAXFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVICES)\n");
			APL_GOBACK_FAIL
		}
		else if (int_retstat == IV_NO_DATA_FOUND_ERR)
		{
			fprintf(fl_userlog,"Service detail  not found \n");
			CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,APL_NULL_STRING, APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			APL_GOBACK_FAIL
		}
	}

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRG(chr_p_billdt,chr_p_client,p_mastsub,TAXFEE,&l_iv_service_chrg_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVCHARGE)\n");
			APL_GOBACK_FAIL
		}
		else if (int_retstat == IV_NO_DATA_FOUND_ERR)
		{
			l_iv_service_chrg_struct.comm_amt = 0;
		}
	}
   
	if (l_iv_service_chrg_struct.comm_amt > 0)
	{
	fprintf(bill,"\n<tr borderColor='#e8eff9'><td>%s @",l_ivservmast_struct.service_det);

	/* Bageshri */
	/*int_commtaxret = IV_Proc_Round(&l_iv_clt_setup_struct.comm_tax_amt,l_iv_clt_setup_struct.b_ccycd,chr_f_commtax,l_debug_info_ptr);
	if (int_commtaxret == 1)
	{
	  if(l_iv_clt_setup_struct.comm_tax_amt > 0)
	  {
		int i = 0;

		for (i = 0; chr_f_commtax[i]; i++)
		{
			if ( chr_f_commtax[i] != ' ' )
				fprintf(bill,"%c", chr_f_commtax[i]);
		}

		if ( !strchr(chr_f_commtax, '.') )
		{
		fprintf(bill, ".00");
		}
		}
		else
		fprintf(bill,"0.00");
		}*/


	EXEC SQL	SELECT SCHDL_FEE
		INTO :dbl_h_schdl_fee:i_schdl_fee
		FROM IV_DEAL_FEE
		WHERE CLIENT =:chr_p_client AND DATEOF_BILLING = :chr_p_billdt
		AND CONS_FLAG = :p_mastsub
		AND SERVICE_CD =:l_taxfee;

	IS_ANY_ORA_ERROR	

		int_commtaxret = IV_Proc_Round(&dbl_h_schdl_fee,l_iv_clt_setup_struct.b_ccycd,chr_f_commtax,l_debug_info_ptr);

	if (int_commtaxret == 1)
	{
		if(dbl_h_schdl_fee > 0)
		{
			int i = 0;

			for (i = 0; chr_f_commtax[i]; i++)
			{
				if ( chr_f_commtax[i] != ' ' )
					fprintf(bill,"%c", chr_f_commtax[i]);
			}

			if ( !strchr(chr_f_commtax, '.') )
			{
				fprintf(bill, ".00");
			}
		}
		else
			fprintf(bill,"0.00");

		fprintf(bill," %s </td>",l_iv_clt_setup_struct.b_ccycd);
	}
	else  
	{
		fprintf(fl_userlog,"Returned Failed from Rounder3\n"); 
		APL_GOBACK_FAIL 
	}

	taxfeeamount = l_iv_service_chrg_struct.comm_amt;

	int_tottaxret = IV_Proc_Round(&l_iv_service_chrg_struct.comm_amt,l_iv_service_chrg_struct.b_ccycd,chr_f_tottax,l_debug_info_ptr);
	if (int_tottaxret == 1)
	{


		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_tottax, "%lf", &roundedamount);

		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_service_chrg_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_tottax, chr_l_amtstr + 10); 

		fprintf(bill,"<td  align='right'>%s</td></tr>",chr_f_tottax);


		if (int_g_eu_condexists !=  0)
		{
			  if (strcmp(l_iv_clt_setup_struct.b_ccycd,g_mt_commonsys_params_struct_h.dom_ccy) != 0)
			  {
				  if (APL_FAILURE == IV_Proc_ConvToFxFn(l_iv_clt_setup_struct.b_ccycd,
							  g_mt_commonsys_params_struct_h.dom_ccy,
							  g_mt_commonsys_params_struct_h.dom_ccy,
							  chr_p_billdt,
							  &h_rt,
							  &int_retstat,
							  l_debug_info_ptr) )
           {
             fprintf(fl_userlog,"Failed To Fetch Exchange Rate Between %s and %s \n",l_iv_clt_setup_struct.b_ccycd, g_mt_commonsys_params_struct_h.dom_ccy);
             APL_GOBACK_FAIL
           }
             l_ae_rate_to_print = 0.0;

             if ( !strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind, "D" ) )
             {
                l_ae_rate_to_print = h_rt;
             }
             else
             {
                l_ae_rate_to_print = 1.0/ h_rt;
             }
              l_tottaxret= (l_ae_rate_to_print * l_iv_service_chrg_struct.comm_amt);
              int_l_dtottaxret = IV_Proc_Round(&l_tottaxret,g_mt_commonsys_params_struct_h.dom_ccy,chr_f_tottaxret,l_debug_info_ptr);
              if (int_l_dtottaxret == 1)
              {
                 roundedamount = 0.0;
                 memset(chr_l_amtstr, APL_NULL_CHAR, 30);
                 sscanf(chr_f_tottaxret, "%lf", &roundedamount);
                 CO_Rtv_FormatAmt(roundedamount, chr_l_amtstr, 'Y', 'Y', l_debug_info_ptr);
                 CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', g_mt_commonsys_params_struct_h.dom_ccy,l_debug_info_ptr);
                 strcpy(chr_f_tottaxret, chr_l_amtstr + 10);
					  fprintf(bill," %s </td><td  align='right'>%s</td></tr>",g_mt_commonsys_params_struct_h.dom_ccy,chr_f_tottaxret);
              }
			}
      }

	}
  } 
  else
     { taxfeeamount = 0 ;}
  
	EXEC SQL SELECT FIELD_VAL INTO :edurate FROM PRO_GSSPLVAL WHERE MAIN_FUN = 'BILLING_TAX' AND SUB_PROCESS = 'EDUCATION_CESS';

	IS_ANY_ORA_ERROR
	
		if(sqlca.sqlcode!=0)
		{
			fprintf(fl_userlog,"No Records for DOMCPAC in gssplval\n");
			APL_GOBACK_FAIL
		}
	if (l_iv_service_chrg_struct.comm_amt > 0 && edurate > 0)
	{
	fprintf(bill,"\n<tr borderColor='#e8eff9'><td>EDUCATION CESS @");

	int_commtaxret = IV_Proc_Round(&edurate,l_iv_clt_setup_struct.b_ccycd,chr_f_commtax,l_debug_info_ptr);
	if (int_commtaxret == 1)
	{
	  if(edurate > 0)
	  {
		int i = 0;

		for (i = 0; chr_f_commtax[i]; i++)
		{
			if ( chr_f_commtax[i] != ' ' )
				fprintf(bill,"%c", chr_f_commtax[i]);
		}
		
			if ( !strchr(chr_f_commtax, '.') )
					{
						fprintf(bill, ".00");
					}
	  }
     else
		fprintf(bill,"0.00");
		
	  fprintf(bill," %s </td>",l_iv_clt_setup_struct.b_ccycd);
	}
	else  
   {
		fprintf(fl_userlog,"Returned Failed from Rounder3\n"); 
		APL_GOBACK_FAIL 
	}

	edufeeamount =  (taxfeeamount * edurate) /100 ;
	fprintf(bill,"<td align='right'>%.2lf</td></tr>",edufeeamount);

  } 
  else
     { edufeeamount = 0 ;}



	netcomm = p_totcomm + voldiscountamount + minfeeamount+ taxfeeamount + edufeeamount;  
   fprintf(bill,"\n<tr borderColor='#e8eff9' class='ez3'><td>TOTAL COMMISSION %s</td>",l_iv_clt_setup_struct.b_ccycd);
	int_netcommret = IV_Proc_Round(&netcomm,l_iv_clt_setup_struct.b_ccycd,chr_f_netcomm,l_debug_info_ptr);
	if (int_netcommret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_netcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_netcomm, chr_l_amtstr + 10); 
      fprintf(bill,"<td align='right'>%s</td></tr></table><BR>",chr_f_netcomm);
	
	}
	else  
	{
		fprintf(fl_userlog,"Returned Failed from Rounder4\n"); 
		APL_GOBACK_FAIL 
	}
	
	/* PJ UT Fix */
	/*	Depository Charges	Rohit	*/
	if (APL_FAILURE == IV_Proc_PrnDepoWeb(bill,fl_userlog,chr_p_billdt,chr_p_client,l_iv_clt_setup_struct,p_mastsub,&p_totdepo,&int_currpos,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Depository Charges not found for client: %s and dateof_billing :%s\n",chr_p_client,chr_p_billdt);
	}
	netcomm = netcomm + p_totdepo;


	/* HDFCIV_004 PJ */	
	if (APL_FAILURE == IV_Proc_PrnOthWeb(bill,fl_userlog,chr_p_billdt,chr_p_client,l_iv_clt_setup_struct,p_mastsub,&dbl_h_spcialfee,&int_currpos,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Other Charges not found for client: %s and dateof_billing :%s\n",chr_p_client,chr_p_billdt);
	}
	/* Now convert amount into fee currency */

	netcomm = netcomm + dbl_h_spcialfee;
   fprintf(bill,"\n<tr class='heading'><td></td><td></td><td>NET BILL AMOUNT %s</td>",l_iv_clt_setup_struct.b_ccycd);
	int_netcommret = IV_Proc_Round(&netcomm,l_iv_clt_setup_struct.b_ccycd,chr_f_netcomm,l_debug_info_ptr);
	if (int_netcommret == 1)
	{


		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_netcomm, "%lf", &roundedamount);

		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_netcomm, chr_l_amtstr + 10); 
      fprintf(bill,"<td align='right'>%s</td></tr>",chr_f_netcomm);

	}
	else  
	{
		fprintf(fl_userlog,"Returned Failed from Rounder4\n"); 
		APL_GOBACK_FAIL 
	}
if (l_sys_ivcntl_param_struct.generate_ind == 'N')
	outstandingamount = l_iv_clt_setup_struct.last_lost_amt;
else
	outstandingamount = l_iv_clt_setup_struct.total_osamount; 

	dbl_creditbal  = outstandingamount + netcomm;

	EXEC SQL SELECT cln_master into :chr_h_mstacc1 from
	MT_CLIENT WHERE CLN_CODE = :l_iv_clt_setup_struct.client;

	IS_ANY_ORA_ERROR



if ( (p_mastsub =='C') || ( (strcmp(chr_h_mstacc1, l_iv_clt_setup_struct.client)) &&  ( l_iv_clt_setup_struct.b_gen_ind == 'S')) )
{
	if (dbl_creditbal >= 0)
		fprintf(bill,"\n<tr class='heading'><td></td><td></td><td>TOTAL AMOUNT OUTSTANDING ");
	else
		fprintf(bill,"\n<tr class='heading'><td></td><td></td><td>CURRENT CREDIT BALANCE "); 

	
   fprintf(bill," %s </td>",l_iv_clt_setup_struct.b_ccycd);

	dbl_abscreditbal = fabs(dbl_creditbal);

	int_creditbalret = IV_Proc_Round(&dbl_abscreditbal,l_iv_clt_setup_struct.b_ccycd,chr_f_creditbal,l_debug_info_ptr);
	if (int_creditbalret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_creditbal, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_creditbal, chr_l_amtstr + 10); 
      fprintf(bill,"<td align='right'>%s</td></tr>",chr_f_creditbal);
	}
	else
   {
		fprintf(fl_userlog,"Returned Failed from Rounder5\n"); 
		APL_GOBACK_FAIL
	}
	
}

fprintf(bill,"</table>");
	{

	RETURN_SUCCESS:
				APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_Proc_PrnFooter succesfully\n",NULL,NULL);
				}
            return(APL_SUCCESS);

        RETURN_FAILURE:
				APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_Proc_PrnFooter unsuccesfully\n",NULL,NULL);
				}
            return (APL_FAILURE);
    }
}
