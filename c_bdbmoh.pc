

#include <CO_HostStructdef.h>

#define MAROCLEAR_CODE   "0002"
#define END_OF_FILERR_MARK   "03"
#define CD_AFFILIATED_IND "0121"
EXEC SQL INCLUDE sqlca;



main(int argc,char **argv)
{
DL_DEAL_MARCLR_STRUCT_H l_dl_deal_marclr_struct_h;
DL_DEAL_MARCLR_STRUCT_I l_dl_deal_marclr_struct_i;
INTL_REPT_STRUCT_H  *l_intl_rept_struct_ha                    =  NULL;
DEBUG_INFO_STRUCT_H *l_debug_info_ptr = (DEBUG_INFO_STRUCT_H *) NULL;
FILE *l_finifile,*l_logfile,*l_ptr_hoff_file;
int int_l_count=0;
int int_num=0;
char int_h_count[9]=APL_NULL_STRING;

int int_l_jul_date=0;
char int_h_jul_date[4]          = APL_NULL_STRING;
char chr_l_rej_hoff_file[PATH_LENGTH]=APL_NULL_STRING;
char chr_l_handoff_dir[PATH_LENGTH]=APL_NULL_STRING;
char chr_l_header[21]=APL_NULL_STRING;
char chr_l_footer[11]=APL_NULL_STRING;
char chr_l_sys_date[11]=APL_NULL_STRING;
char chr_l_rej_hoff_file_name[13]=APL_NULL_STRING;

char h_temp1[11] = APL_NULL_STRING;
char h_temp2[23] = APL_NULL_STRING;
char h_temp3[2] = APL_NULL_STRING;
char h_temp4[32] = APL_NULL_STRING;
char h_temp5[24] = APL_NULL_STRING;
char h_temp6[11] = APL_NULL_STRING;
char h_temp7[87] = APL_NULL_STRING;
char h_dl_client[25] = APL_NULL_STRING;
char h_brokercomm[11] = APL_NULL_STRING;
char h_broker_identity[12] = APL_NULL_STRING;
char h_grossamount[14] = APL_NULL_STRING;
char h_instr_isin[13] = APL_NULL_STRING;
char h_netamount[14] = APL_NULL_STRING;
char h_pr[11] = APL_NULL_STRING;
char h_qty[10] = APL_NULL_STRING;
char h_rec_del[2] = APL_NULL_STRING;
char h_mcl_ref[11] = APL_NULL_STRING;
char h_dlt[11] = APL_NULL_STRING;
char h_upld_date[11] = APL_NULL_STRING;
char h_error_cd[3] = APL_NULL_STRING;
char chr_h_dt_of_rej[11] = APL_NULL_STRING;
char **temp;
int int_retval=0;

char chr_l_inifile[PATH_LENGTH] = APL_NULL_STRING;
char chr_uname[APL_USERID_LEN] = APL_NULL_STRING;
char chr_custody_id_b[APL_USERID_LEN] = APL_NULL_STRING;
char chr_passwd[APL_USERID_LEN] = APL_NULL_STRING;
char chr_l_junk2[23] = APL_NULL_STRING;

EXEC SQL BEGIN DECLARE SECTION;

EXEC SQL VAR chr_uname IS STRING;
EXEC SQL VAR chr_passwd IS STRING;
EXEC SQL VAR chr_l_sys_date IS STRING;

EXEC SQL VAR h_temp1 IS STRING;
EXEC SQL VAR h_temp2 IS STRING;
EXEC SQL VAR h_temp3 IS STRING;
EXEC SQL VAR h_temp4 IS STRING;
EXEC SQL VAR h_temp5 IS STRING;
EXEC SQL VAR h_temp6 IS STRING;
EXEC SQL VAR h_temp7 IS STRING;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR h_brokercomm IS STRING;
EXEC SQL VAR h_broker_identity IS STRING;
EXEC SQL VAR h_grossamount IS STRING;
EXEC SQL VAR h_instr_isin IS STRING;
EXEC SQL VAR h_netamount IS STRING;
EXEC SQL VAR h_pr IS STRING;
EXEC SQL VAR h_qty IS STRING;
EXEC SQL VAR h_rec_del IS STRING;
EXEC SQL VAR h_mcl_ref IS STRING;
EXEC SQL VAR h_dlt IS STRING;
EXEC SQL VAR h_upld_date IS STRING;
EXEC SQL VAR h_error_cd IS STRING;
EXEC SQL VAR chr_h_dt_of_rej IS STRING;

short i_temp1  = 0;
short i_temp2  = 0;
short i_temp3  = 0;
short i_temp4  = 0;
short i_temp5  = 0;
short i_temp6  = 0;
short i_temp7  = 0;
short i_dl_client  = 0;
short i_brokercomm  = 0;
short i_broker_identity  = 0;
short i_grossamount  = 0;
short i_instr_isin  = 0;
short i_netamount  = 0;
short i_pr  = 0;
short i_qty  = 0;
short i_rec_del  = 0;
short i_mcl_ref  = 0;
short i_dlt  = 0;
short i_upld_date  = 0;
short i_error_cd  = 0;

   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;

EXEC SQL END DECLARE SECTION;

l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
strcat(chr_l_inifile,"intl_sun.cfg");
if ( ( l_finifile=fopen(chr_l_inifile,"r") ) == NULL)
   {
   APL_GOBACK_FAIL
   }
sqlca.sqlcode=0;

APL_FETCH_DB_LOGIN_DETAILS(l_finifile, chr_custody_id_b, chr_uname, chr_passwd, APL_OUT_FILE, &l_debug_info_ptr);

EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;


    if (APL_FAILURE == CO_Rtv_RptFileName( "HF",
            APL_LOGFILE_DESC,
                 100,
                 "MAROCLEAR UPLOADING",
                 NULL,
                 &l_logfile,
                 &l_debug_info_ptr ))
   {
   APL_GOBACK_FAIL;
   }

   if ( APL_FAILURE == CO_ReadToken(l_finifile,
                "INTL_HF_PATH",
                chr_l_rej_hoff_file,
                &l_debug_info_ptr ))
    {
   fprintf(l_logfile,"\nReturning unsuccessfully from CO_ReadToken\n");
   APL_GOBACK_FAIL
    }
	 strcpy(chr_l_handoff_dir,chr_l_rej_hoff_file);
fclose(l_finifile);

if (APL_FAILURE == CO_SplitStr( argv[9],
		  '|',
		  &int_num,
		  &temp ))
{
fprintf(l_logfile,"Returns unsuccessfully from CO_SplitStr\n");
}
if  (int_num==0)
{
		fprintf(l_logfile,"\n Zero argments \n");
}

fprintf(l_logfile,"Program Name : %s\n",argv[0]);
fprintf(l_logfile,"KEY          : %s\n",argv[1]);
fprintf(l_logfile,"START DATE   : %s\n",argv[2]);
fprintf(l_logfile,"ARGV[9]		  : %s\n",argv[9]);


strncpy(chr_h_dt_of_rej,argv[9],10);
fprintf(l_logfile,"The chr_date for which handoff is to be generated is : %s\n",chr_h_dt_of_rej);

EXEC SQL SELECT PROCESSING_STATUS INTO :chr_g_restart_data:g_restart_data_i
FROM SYS_BATCHPROC
WHERE PROCESS_NAME=:argv[0]
AND   PROC_INIT=:argv[1]
AND   STARTDATE=:argv[2]
AND   STATUS='started'
FOR UPDATE OF PROCESSING_STATUS,STATUS;

if(APL_ZERO_RESULT_SET)
{
CO_ProcMonitor(l_logfile,"E:No entry in batch_in_proc\n",NULL,NULL);
APL_GOBACK_FAIL
}

fprintf(l_logfile,"The Date is : %s\n",argv[2]);

strcpy(chr_l_rej_hoff_file_name,"AO");
chr_l_rej_hoff_file_name[2]=argv[2][8];
chr_l_rej_hoff_file_name[3]=argv[2][9];
chr_l_rej_hoff_file_name[4]=argv[2][3];
chr_l_rej_hoff_file_name[5]=argv[2][4];
chr_l_rej_hoff_file_name[6]=argv[2][0];
chr_l_rej_hoff_file_name[7]=argv[2][1];
chr_l_rej_hoff_file_name[8]='\0';
strcat(chr_l_rej_hoff_file_name,".TXT");

fprintf(l_logfile,"The h_file name is : %s\n",chr_l_rej_hoff_file_name);



strcat(chr_l_rej_hoff_file,chr_l_rej_hoff_file_name);
fprintf(l_logfile,"The rejection h_file name is : %s\n",chr_l_rej_hoff_file);
   if ((l_ptr_hoff_file = fopen(chr_l_rej_hoff_file,"w")) == NULL)
   {
      fprintf(l_logfile,"Unable to create Hoff h_file \n");
      APL_GOBACK_FAIL
   }

fprintf(l_logfile,"The user id is : %s\n",argv[3]);
fprintf(l_logfile,"The report_date is : %s\n",argv[2]);

 
   strcpy(l_intl_rept_struct_ha->report_name, chr_l_rej_hoff_file_name); 
   strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   l_intl_rept_struct_ha->report_width = 100;
   strcpy(l_intl_rept_struct_ha->task_desc,"AOR Handoff Generation");
   strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   strcpy(l_intl_rept_struct_ha->usr, argv[3]);

   
   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }




strcpy(chr_l_header,"01");
strcat(chr_l_header,CD_AFFILIATED_IND);
strcat(chr_l_header,MAROCLEAR_CODE);

EXEC SQL SELECT to_char(SYS_DATE,'DD/MM/YYYY') into :chr_l_sys_date
FROM PRO_SYS_DATE;

strcat(chr_l_header,chr_l_sys_date);
fprintf(l_ptr_hoff_file,"%s\n",chr_l_header);



printf("The sqlca.sqlcode is : %d\n",sqlca.sqlcode);



EXEC SQL DECLARE upd_trade_cursor CURSOR FOR
	SELECT  rpad(nvl(client,' '),24,' '),
			  rpad(nvl(instr_isin,' '),12,' '),
			  rpad(nvl(to_char(QTY),' '),9,' '),
			  rpad(nvl(REC_DEL,' '),1,' '),
			  rpad(nvl(deal_date,' '),10,' '),
			  lpad(nvl(to_char(ERROR_CD),' '),2,'0')
	FROM DL_MAROCLEAR
	WHERE ((ERROR_CD=12) OR (ERROR_CD=15));

	EXEC SQL OPEN upd_trade_cursor;
		 fprintf(l_logfile,"SQLCODE : %d\n",sqlca.sqlcode);
	for(;;)
	{	  
			sqlca.sqlcode=0;
		  EXEC SQL FETCH upd_trade_cursor 
	     INTO	 :h_dl_client:i_dl_client,
					 :h_instr_isin:i_instr_isin,
					 :h_qty:i_qty,
					 :h_rec_del:i_rec_del,
					 :h_dlt:i_dlt,
		  			 :h_error_cd:i_error_cd ;
		 fprintf(l_logfile,"SQLCODE : %d\n",sqlca.sqlcode);
   	 if (APL_ZERO_RESULT_SET) 
		 {
			break;
		 }
		else
		{
			fprintf(l_logfile,"A/C : %s, QTY: %s, TRDT: %s, ISIN: %s\n",h_dl_client,h_qty,h_dlt,h_instr_isin);
         int_retval=UpdtCmaroclErrCode(h_dl_client,h_qty,h_rec_del,h_dlt,h_instr_isin,h_error_cd,l_logfile,&l_debug_info_ptr);
		}
	}
	EXEC SQL CLOSE upd_trade_cursor;

EXEC SQL DECLARE rej_trade_cursor CURSOR FOR
   SELECT  rpad(nvl(TEMP1,' '),10,' '),
			  rpad(nvl(TEMP2,' '),22,' '),
			  rpad(nvl(TEMP3,' '),1,' '),
			  rpad(nvl(TEMP4,' '),31,' '),
			  rpad(nvl(TEMP5,' '),23,' '),
			  rpad(nvl(TEMP6,' '),10,' '),
			  rpad(nvl(TEMP7,' '),86,' '),
			  rpad(nvl(client,' '),24,' '),
			  rpad(nvl(to_char(brokercomm),' '),10,' '),
			  rpad(nvl(BROKER_IDENTITY,' '),11,' '),
			  rpad(nvl(to_char(GROSS_AMOUNT),' '),13,' '),
			  rpad(nvl(instr_isin,' '),12,' '),
			  rpad(nvl(to_char(NET_AMOUNT),' '),13,' '),
			  rpad(nvl(to_char(COST),' '),10,' '),
			  rpad(nvl(to_char(QTY),' '),9,' '),
			  rpad(nvl(REC_DEL,' '),1,' '),
			  rpad(nvl(MCL_REF,' '),10,' '),
			  rpad(nvl(deal_date,' '),10,' '),
			  rpad(nvl(UPLOAD_DATE,' '),10,' '),
			  lpad(nvl(to_char(ERROR_CD),' '),2,'0')
	FROM DL_MAROCLEAR
	WHERE ERROR_CD  not in (1,4,7,8)
	AND UPLOAD_DATE=:chr_h_dt_of_rej;
	
fprintf(l_logfile,"Sqlca.sqlcode after building cursor : %d\n",sqlca.sqlcode);
EXEC SQL OPEN rej_trade_cursor;
int_l_count=0;
for(;;)
{
		  EXEC SQL FETCH rej_trade_cursor 
		  INTO 	  :h_temp1:i_temp1,
					 :h_temp2:i_temp2,
					 :h_temp3:i_temp3,
					 :h_temp4:i_temp4,
					 :h_temp5:i_temp5,
					 :h_temp6:i_temp6,
					 :h_temp7:i_temp7,
					 :h_dl_client:i_dl_client,
					 :h_brokercomm:i_brokercomm,
					 :h_broker_identity:i_broker_identity,
					 :h_grossamount:i_grossamount,
					 :h_instr_isin:i_instr_isin,
					 :h_netamount:i_netamount,
					 :h_pr:i_pr,
					 :h_qty:i_qty,
					 :h_rec_del:i_rec_del,
					 :h_mcl_ref:i_mcl_ref,
					 :h_dlt:i_dlt,
					 :h_upld_date:i_upld_date,
		  			 :h_error_cd:i_error_cd ;

   				 if (APL_ZERO_RESULT_SET) break;

					 printf("The l_debuglist h_code is : %d\n",sqlca.sqlcode);
					 printf("The client is : %s\n",h_dl_client);

					 fprintf(l_ptr_hoff_file,"%s",h_temp1);
					 fprintf(l_ptr_hoff_file,"%s",h_instr_isin);
					 fprintf(l_ptr_hoff_file,"%s",h_temp2);
					 fprintf(l_ptr_hoff_file,"%s",h_qty);
					 fprintf(l_ptr_hoff_file,"%s",h_pr);
					 fprintf(l_ptr_hoff_file,"%s",h_grossamount);
					 fprintf(l_ptr_hoff_file,"%s",h_temp3);
					 fprintf(l_ptr_hoff_file,"%s",h_brokercomm);
					 fprintf(l_ptr_hoff_file,"%s",h_temp4);
					 fprintf(l_ptr_hoff_file,"%s",h_netamount);
					 fprintf(l_ptr_hoff_file,"%s",h_broker_identity);
					 fprintf(l_ptr_hoff_file,"%s",h_temp5);
					 fprintf(l_ptr_hoff_file,"%s",h_rec_del);
					 fprintf(l_ptr_hoff_file,"%s",h_temp6);
					 fprintf(l_ptr_hoff_file,"%s",h_dlt);
					 fprintf(l_ptr_hoff_file,"%s",h_temp7);
					 fprintf(l_ptr_hoff_file,"%s",h_dl_client);
					 fprintf(l_ptr_hoff_file,"%s",h_mcl_ref);
					 fprintf(l_ptr_hoff_file,"%s\n",h_error_cd);
					 int_l_count++;
}

EXEC SQL CLOSE rej_trade_cursor;

sprintf(int_h_count,"%.8d",int_l_count);
strcpy(chr_l_footer,END_OF_FILERR_MARK);
strcat(chr_l_footer,int_h_count);
fprintf(l_ptr_hoff_file,"%s\n",chr_l_footer);

RETURN_SUCCESS:
     EXEC SQL UPDATE SYS_BATCHPROC
     SET  status  = 'completed'
     WHERE PROCESS_NAME=:argv[0]
     AND   PROC_INIT=:argv[1]
     AND   STARTDATE=:argv[2]
     AND   STATUS='started';	

	CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);	
	CO_Proc_RptClose(l_ptr_hoff_file, &l_debug_info_ptr);	
	EXEC SQL COMMIT RELEASE;
	exit(APL_SUCCESS);

RETURN_FAILURE:
	CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
	CO_Proc_RptClose(l_ptr_hoff_file, &l_debug_info_ptr);
	EXEC SQL COMMIT RELEASE;
	exit(APL_FAILURE);

}


int UpdtCmaroclErrCode(char *h_dl_client,char *h_qty,char *h_rec_del,char *h_dlt,char *h_instr_isin,char *p_err_code,FILE *p_logfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

char chr_l_trcode1;
char chr_l_trcode2;

char chr_l_confdt[APL_DATE_LEN] = APL_NULL_STRING;
char chr_l_trade_status[3] =  APL_NULL_STRING;
char temp[30]=APL_NULL_STRING;
char chr_l_failcode_A[3] = APL_NULL_STRING;
int int_upd_err_code=0;
int int_int_qty=0;
EXEC SQL BEGIN DECLARE SECTION;

EXEC SQL VAR chr_l_confdt IS STRING;
EXEC SQL VAR chr_l_trade_status IS STRING;
EXEC SQL VAR chr_l_failcode_A IS STRING;
short i_confdate = 0;
short i_deal_status = 0;
short i_failreas_cd = 0;
EXEC SQL END DECLARE SECTION;
fprintf(p_logfile,"Account is : %s, ISIN is : %s, Trdt is : %s, quantity is : %s.\n",h_dl_client,h_instr_isin,h_dlt,h_qty);

if(APL_FAILURE == CO_Trim(h_dl_client,' ','R',temp,l_debug_info_ptr))
{
  CO_ProcMonitor(p_logfile,"\nError  in type",NULL,NULL);
  APL_GOBACK_FAIL;
}
strcpy(h_dl_client,temp);
if(APL_FAILURE == CO_Trim(h_qty,' ','R',temp,l_debug_info_ptr))
{
  CO_ProcMonitor(p_logfile,"\nError  in type",NULL,NULL);
  APL_GOBACK_FAIL;
}
strcpy(h_qty,temp);

fprintf(p_logfile,"Account is : %s, ISIN is : %s, Trdt is : %s, quantity is : %s.\n",h_dl_client,h_instr_isin,h_dlt,h_qty);
fprintf(p_logfile,"INSIDE THE UpdtCmaroclErrCode TO UPDATE ERR_CODE\n");
fprintf(p_logfile,"The l_debuglist h_code is : %s\n",p_err_code);

if (!strcmp(h_rec_del,"A"))
{
chr_l_trcode1='2';
chr_l_trcode2='4';
}
else
{
chr_l_trcode1='1';
chr_l_trcode2='3';
}

fprintf(p_logfile,"Recdel : %s  , Tecode : %c %c\n",h_rec_del,chr_l_trcode1,chr_l_trcode2);
sqlca.sqlcode=0;
EXEC SQL SELECT VAL_FDT,DEAL_STAT,failreason_cd
			INTO :chr_l_confdt:i_confdate,
				  :chr_l_trade_status:i_deal_status,
				  :chr_l_failcode_A:i_failreas_cd
			FROM DL_DEAL
			WHERE ltrim(rtrim(CLIENT))=:h_dl_client
				AND to_char(QTY)=:h_qty
				AND DEAL_CD in (:chr_l_trcode1,:chr_l_trcode2)
				AND to_char(DEAL_DATE,'DD/MM/YYYY')=:h_dlt
				AND INSTR_CODE in (select instr_code from MT_INSTRUMENT where ltrim(rtrim(instr_isin))=:h_instr_isin); 
fprintf(p_logfile,"The sqlca.sqlcode is : %d\n",sqlca.sqlcode); 
fprintf(p_logfile,"The trade_status  is : %s\n",chr_l_trade_status);
fprintf(p_logfile,"The conf chr_date   is : %s, i_confdate is : %d\n",chr_l_confdt,i_confdate);
fprintf(p_logfile,"The failreason_cd    is : %s\n",chr_l_failcode_A);

if (i_confdate != -1)
{
	if (!strcmp(p_err_code,"12"))
		int_upd_err_code=7;
	else
		int_upd_err_code=8;
}
fprintf(p_logfile,"Error h_code is : updated : %d\n",int_upd_err_code);
fprintf(p_logfile,"SQLCA>SQLCODE 1: %d\n",sqlca.sqlcode);

int_int_qty=atoi(h_qty);
fprintf(p_logfile,"Char Qty : %s,    Interger Qty : %d\n",h_qty,int_int_qty);

fprintf(p_logfile,"Account is : %s, ISIN is : %s, Trdt is : %s, quantity is : %s.\n",h_dl_client,h_instr_isin,h_dlt,h_qty);
sqlca.sqlcode=0;
EXEC SQL UPDATE DL_MAROCLEAR 
			SET ERROR_CD=:int_upd_err_code
			WHERE ltrim(rtrim(CLIENT))=:h_dl_client
			AND QTY=:int_int_qty
			AND DEAL_DATE=:h_dlt  
			AND instr_isin=:h_instr_isin;

fprintf(p_logfile,"SQLCA>SQLCODE  : after update : %d\n",sqlca.sqlcode);
EXEC SQL COMMIT WORK;

fprintf(p_logfile,"SQLCA>SQLCODE : %d\n",sqlca.sqlcode);

IS_ANY_ORA_ERROR;
fprintf(p_logfile,"A/C : %s, QTY: %s, TRDT: %s, ISIN: %s\n",h_dl_client,h_qty,h_dlt,h_instr_isin);


RETURN_SUCCESS : return(APL_SUCCESS);
RETURN_FAILURE : return(APL_FAILURE);

}
