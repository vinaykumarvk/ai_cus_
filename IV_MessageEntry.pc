













 
#include "stdio_64.h"
#include "MS_Swift.h"
#include "IV_Control_A.h"

/** Added by 09/05/2012 **/
#define APL_IF_DEBUG if(1)
/** Added by 09/05/2012 **/

EXEC SQL INCLUDE SQLCA;

int MS_Mod_MsgEnt(MS_MSGENT_STRUCT p_ms_msgent_struct_a,int *int_p_retstat,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
EXEC SQL BEGIN DECLARE SECTION;
MS_MSGENT_STRUCT l_ms_msgent_structa;
EXEC SQL VAR l_ms_msgent_structa.client IS STRING;
EXEC SQL VAR l_ms_msgent_structa.proc_init IS STRING;
EXEC SQL VAR l_ms_msgent_structa.swift_msg_no IS STRING;
EXEC SQL VAR l_ms_msgent_structa.info_file IS STRING;
EXEC SQL VAR l_ms_msgent_structa.proc_data IS STRING;
EXEC SQL END DECLARE SECTION;
struct sqlca sqlca;

#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif
l_ms_msgent_structa = p_ms_msgent_struct_a;

	EXEC SQL UPDATE MS_MSGENT 
                 SET swift_count = :l_ms_msgent_structa.swift_count,
                     telex_count = :l_ms_msgent_structa.telex_count, 
                     fax_count = :l_ms_msgent_structa.fax_count, 
                     gcn_count = :l_ms_msgent_structa.gcn_count,
		     status    = :l_ms_msgent_structa.status_ind
                 WHERE rowid = :l_ms_msgent_structa.rowid;

        if(sqlca.sqlcode < 0)
          *int_p_retstat = IV_CRITCAL_ERROR_IND;

        IS_ANY_ORA_ERROR;

        APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Mod_MsgEnt\n",NULL,NULL);

        }
        return APL_SUCCESS;

RETURN_FAILURE:
        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of MS_Mod_MsgEnt\n",NULL,NULL);
        }
        return APL_FAILURE;



}
int MS_Mod_MsgEntAdd(MS_MSGENT_STRUCT p_ms_msgent_struct_a,int *int_p_retstat,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
EXEC SQL BEGIN DECLARE SECTION;
MS_MSGENT_STRUCT l_ms_msgent_structb;

EXEC SQL VAR l_ms_msgent_structb.client IS STRING;
EXEC SQL VAR l_ms_msgent_structb.proc_init IS STRING;
EXEC SQL VAR l_ms_msgent_structb.swift_msg_no IS STRING;
EXEC SQL VAR l_ms_msgent_structb.info_file IS STRING;
EXEC SQL VAR l_ms_msgent_structb.proc_data IS STRING;
EXEC SQL END DECLARE SECTION;

/* PJ */
memset(&l_ms_msgent_structb, NULL, sizeof(MS_MSGENT_STRUCT));
struct sqlca sqlca;

#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif

l_ms_msgent_structb = p_ms_msgent_struct_a;



	

	EXEC SQL INSERT INTO MS_MSGENT
            VALUES (:l_ms_msgent_structb.swift_msg_no, :l_ms_msgent_structb.proc_init, :l_ms_msgent_structb.swift_msg_seqno,
                    :l_ms_msgent_structb.client, :l_ms_msgent_structb.info_file, 
                    :l_ms_msgent_structb.swift_count, :l_ms_msgent_structb.telex_count, 
                    :l_ms_msgent_structb.fax_count, :l_ms_msgent_structb.gcn_count, 
                    :l_ms_msgent_structb.clts_count, :l_ms_msgent_structb.status_ind, 
                    :l_ms_msgent_structb.auto_tran_ind, :l_ms_msgent_structb.proc_data);

     IS_ANY_ORA_ERROR

        APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of InsIMSGENT\n",NULL,NULL);

        }
        return APL_SUCCESS;

RETURN_FAILURE:
        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of InsIMSGENT\n",NULL,NULL);
        }
        return APL_FAILURE;

}
