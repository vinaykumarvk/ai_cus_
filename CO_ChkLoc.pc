





#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int MT_Chk_Loc(char *p_loccode,char p_pcexist,char p_pcauth,char p_pcdel,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca sqlca;	
   char chr_p_pcstatus[3];
   short p_i_Status;
   int int_pcexist;
   int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

   

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_Chk_Loc\n",
		NULL,NULL);
 }

   p_i_Status =0;
   int_pcexist =0;

   memset(chr_p_pcstatus,NULL,3);

   if (!strlen(p_loccode))
	{
	APL_DATA_MISSING("Location", APL_NULL_STRING, APL_NULL_STRING);
    	int_error_flag = APL_FAILURE;
	}

   if (int_error_flag == APL_FAILURE)
	{
//AIX- Warnings Removal
    	int_error_flag = APL_FAILURE;
	APL_GOBACK_FAIL
	}

   
   
  if (int_error_flag == APL_FAILURE)
	{
	APL_GOBACK_FAIL
	}

  EXEC SQL SELECT NVL(COUNT(*),0) into int_pcexist
		FROM MT_LOCATION
		WHERE LOCATION_CD =:p_loccode;

	IS_ANY_ORA_ERROR

		/*Smita - Changed Col Name - HDFCCA Base Version*/
  EXEC SQL SELECT STATUS into :chr_p_pcstatus:p_i_Status
		FROM MT_LOCATION
		WHERE LOCATION_CD =:p_loccode;

	IS_ANY_ORA_ERROR

  chr_p_pcstatus[2] = '\0' ;
 if (p_pcexist =='Y')
    	{
	if (int_pcexist == 0)
	   {
		if(CO_InsertErr(
			l_debug_info_ptr,
			ERR_LOCN_NOTFND, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
		APL_GOBACK_FAIL
  		int_error_flag = APL_FAILURE;
	   } 
	}

 if (p_pcexist =='N')
	{
	if (int_pcexist != 0)
	   {
		if(CO_InsertErr(
			l_debug_info_ptr,
			ERR_LOCN_EXISTS, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
		APL_GOBACK_FAIL
  		int_error_flag = APL_FAILURE;
	   } 
	}

   if (int_error_flag == APL_FAILURE)
	{
	APL_GOBACK_FAIL
	}

 if (p_pcauth =='N')
	{
	if (!strcmp(chr_p_pcstatus,STATUS_AUTH))
	   {
		if(CO_InsertErr(
			l_debug_info_ptr,
			ERR_LOCN_AUTHORIZED, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
		APL_GOBACK_FAIL
  		int_error_flag = APL_FAILURE;
	   } 
	}

 if (p_pcauth =='Y')
	{
	if (strcmp(chr_p_pcstatus,STATUS_AUTH))
	   {
		if(CO_InsertErr(
			l_debug_info_ptr,
			ERR_LOCN_NOT_AUTHORIZED, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
		APL_GOBACK_FAIL
  		int_error_flag = APL_FAILURE;
	   } 
	}


 if (p_pcdel =='N')
	{
	if (!strcmp(chr_p_pcstatus,STATUS_DEL_UAUTH))
	   {
		if(CO_InsertErr(
			l_debug_info_ptr,
			ERR_LOCN_MARKED_DEL, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
		APL_GOBACK_FAIL
  		int_error_flag = APL_FAILURE;
	   } 
	}

 if (p_pcdel =='Y')
	{
	if (strcmp(chr_p_pcstatus,STATUS_DEL_UAUTH))
	   {
		if(CO_InsertErr(
			l_debug_info_ptr,
			ERR_LOCN_MARKED_DEL, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
		APL_GOBACK_FAIL
  		int_error_flag = APL_FAILURE;
	   } 
	}


   if (int_error_flag == APL_FAILURE)
	{
	APL_GOBACK_FAIL
	}
   else APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Success in MT_Chk_Loc. Getting out\n",
		NULL,NULL);
 }

	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Failed in MT_Chk_Loc. Going out\n",
		NULL,NULL);
 }

	return(APL_FAILURE);
	}
}

