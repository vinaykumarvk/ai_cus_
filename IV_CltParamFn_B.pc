




#include "stdio_64.h"
#include <string.h>
#include <strings.h> /* Bageshri HDFCIV_001*/
#include <stdlib.h>

#include "IV_Control_A.h"
#include "IV_Control.h"

EXEC SQL INCLUDE SQLCA;



int IV_Mod_AddNewCustServDet(const IV_CLIENTSERVDEP_STRUCT_H *p_iv_clientservdep_struct_h, 
		      int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	int IV_Chk_ServDepncy(const long l_servcode, const char *l_paramcode, 
			     int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_IVParam_Type(long l_servcode, int *int_l_retstat, 
				      DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_NewIVCUSTPARAM(const IV_CLIENTPARAM_STRUCT_H *l_iv_clientparam_struct_ha_a, 
				   int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_IVSSRVBasis(long l_servcode, char *l_chargebasis, 
			   char *l_feebasis, IV_SERV_BASIS_STRUCT *l_iv_serv_basis_structa, 
			   int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_IVSRVBasisNew(const IV_CLIENT_SERV_BASIS_STRUCT *l_iv_client_serv_basis_struct, 
				   int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Chk_FeeChargeType(const long l_servcode, 
					   const char *l_chargebasis, 
					   const char *l_feebasis, 
					   const char l_chargetype, 
					   const char l_feetype, 
					   int *int_l_retstat, 
					   DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_Bill_FrmGendt_DlvDt(DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_ChkTxnServDepncy(const char *l_paramcode, 
				       const char *l_feebasis, 
				       const char *l_chargebasis, 
				       int *int_l_retstat, 
				       DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_ChkAdmServDepncy(const char *chr_l_client, 
				       const long l_servcode, 
					   const char *chr_l_apl_frm_date,    /* Added apl_frm_date by monica for kotak ISKB_1737 */
				       const char *l_paramcode, int *int_l_retstat, 
				       DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	

	char chr_l_param_code[IV_PARAM_LEN];
	int int_l_status = 0, int_l_status2 = 0;
	long l_servcode = p_iv_clientservdep_struct_h->service_cd;
	IV_CLIENTPARAM_STRUCT_H l_iv_clientparam_struct_ha_a;
	IV_SERV_BASIS_STRUCT l_iv_serv_basis_structa;
	IV_CLIENT_SERV_BASIS_STRUCT l_iv_client_serv_basis_struct;
	int cnt_servcode = 0;  /* Added for Billing Service Upload */

	EXEC SQL BEGIN DECLARE SECTION;

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	memset(chr_l_param_code, APL_NULL_CHAR, IV_PARAM_LEN);

	fprintf(APL_OUT_FILE, "The chr_value now is : %s",p_iv_clientservdep_struct_h->dealadm_feeccy);

	

	if ( APL_SUCCESS == IV_Rtv_Bill_FrmGendt_DlvDt(l_debug_info_ptr) )
	{
		CO_InsertErr(l_debug_info_ptr, ERR_SERV_DETAILS_NC, APL_NULL_STRING, 
			       APL_NULL_STRING, APL_NULL_STRING, __LINE__, 
			       __FILE__);

		APL_GOBACK_FAIL
	}
	else if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

     

	int_l_status = 0; 

	if ( APL_FAILURE == IV_Rtv_IVParam_Type(p_iv_clientservdep_struct_h->service_cd, 
					       &int_l_status, l_debug_info_ptr) )
	{
		if ( int_l_status == IV_CRITCAL_ERROR_IND )
		{
			*int_p_retstat = int_l_status;

			APL_GOBACK_FAIL
		}		
	}
	else if ( strlen(p_iv_clientservdep_struct_h->parameter_cd) )
	{
		

		strcpy(chr_l_param_code, p_iv_clientservdep_struct_h->parameter_cd);

		int_l_status2 = 0; 

		if ( l_servcode == TXNFEE )
		{
			if ( APL_FAILURE == 
				IV_ChkTxnServDepncy(chr_l_param_code, 
						p_iv_clientservdep_struct_h->fees_base, 
						p_iv_clientservdep_struct_h->chrg_base,
						&int_l_status2, l_debug_info_ptr) )	
			{
				*int_p_retstat = int_l_status2;

				APL_GOBACK_FAIL
			}
		}
		else if ((l_servcode == ADM_CUST_FEE_IND) ||(l_servcode == ADM_TXN_FEE_IND))
		{
			if ( APL_FAILURE == 
				IV_ChkAdmServDepncy(p_iv_clientservdep_struct_h->client,
						    l_servcode, p_iv_clientservdep_struct_h->apl_frm_date,chr_l_param_code,  /* Added apl_frm_date by monica for kotak ISKB_1737 */
						    &int_l_status2, l_debug_info_ptr) )	
			{
				*int_p_retstat = int_l_status2;

				APL_GOBACK_FAIL
			}
		}
		else
		{
			if ( APL_FAILURE == 
				IV_Chk_ServDepncy(l_servcode, chr_l_param_code, 
						&int_l_status2, l_debug_info_ptr) )	
			{
				*int_p_retstat = int_l_status2;

				APL_GOBACK_FAIL
			}
		}

		strcpy(l_iv_clientparam_struct_ha_a.client, p_iv_clientservdep_struct_h->client);
		l_iv_clientparam_struct_ha_a.service_cd = p_iv_clientservdep_struct_h->service_cd;
		strcpy(l_iv_clientparam_struct_ha_a.parameter_cd, p_iv_clientservdep_struct_h->parameter_cd);
		strcpy(l_iv_clientparam_struct_ha_a.apl_frm_date, p_iv_clientservdep_struct_h->apl_frm_date); /* Added by Monica for kotak ISKB_1737 */
					

		int_l_status2 = 0; 

		if ( APL_FAILURE == 
				IV_Mod_NewIVCUSTPARAM(&l_iv_clientparam_struct_ha_a, &int_l_status2, 
						  l_debug_info_ptr) )
		{
			*int_p_retstat = int_l_status2;

			APL_GOBACK_FAIL
		}

	} 
	else if ( !strcmp(p_iv_clientservdep_struct_h->client, 
			  l_mt_core_sys_params_struct_h.custody_clt_cd) )
	{
		

		CO_InsertErr(l_debug_info_ptr, ERR_INTRNL_SERV_DEP_MANDATORY, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       APL_NULL_STRING, __LINE__, __FILE__);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

     

	int_l_status = 0; 

	if ( APL_FAILURE == IV_Rtv_IVSSRVBasis(p_iv_clientservdep_struct_h->service_cd, 
					      APL_NULL_STRING, APL_NULL_STRING, 
					      &l_iv_serv_basis_structa, &int_l_status, 
					      l_debug_info_ptr) )
	{
		if ( int_l_status == IV_CRITCAL_ERROR_IND )	
		{
			*int_p_retstat = int_l_status;

			APL_GOBACK_FAIL
		}
		else if ( int_l_status == IV_NO_DATA_FOUND_ERR )
		{
		     if( ( strcmp(p_iv_clientservdep_struct_h->chrg_base," ") !=0) ||
			   (  strcmp(p_iv_clientservdep_struct_h->fees_base," ") != 0 ))
			{
				char chr_l_buffer[BUFFER_LEN];

				memset(chr_l_buffer, APL_NULL_CHAR, BUFFER_LEN);

				ltoa_r(p_iv_clientservdep_struct_h->service_cd, chr_l_buffer, 
				       BUFFER_LEN - 1);

				CO_InsertErr(l_debug_info_ptr, ERR_INVALID_CHRGFEE_BASIS,
					       chr_l_buffer, APL_NULL_STRING, 
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);

				APL_GOBACK_FAIL
			}
		}
	}
	else if ( !strcmp(p_iv_clientservdep_struct_h->client, 
			  l_mt_core_sys_params_struct_h.custody_clt_cd) && 
		 (!strcmp(p_iv_clientservdep_struct_h->fees_base, " ") || 
		  !strcmp(p_iv_clientservdep_struct_h->chrg_base, " ")) )
	{
		

		CO_InsertErr(l_debug_info_ptr, ERR_INTRNL_SERV_CHRG_MANDATORY, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       APL_NULL_STRING, __LINE__, __FILE__);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

	strcpy(l_iv_client_serv_basis_struct.client, p_iv_clientservdep_struct_h->client);

	l_iv_client_serv_basis_struct.service_cd = p_iv_clientservdep_struct_h->service_cd;
	
	strcpy(l_iv_client_serv_basis_struct.chrg_base, p_iv_clientservdep_struct_h->chrg_base);

	l_iv_client_serv_basis_struct.chrg_clas = p_iv_clientservdep_struct_h->chrg_clas;

	strcpy(l_iv_client_serv_basis_struct.fees_base, p_iv_clientservdep_struct_h->fees_base);

	l_iv_client_serv_basis_struct.fees_class = p_iv_clientservdep_struct_h->fees_class;
	
	strcpy(l_iv_client_serv_basis_struct.dealadm_feeccy , p_iv_clientservdep_struct_h->dealadm_feeccy);

	strcpy(l_iv_client_serv_basis_struct.bill_acc , p_iv_clientservdep_struct_h->bill_acc); /* Bageshri HDFCIV_001*/

	l_iv_client_serv_basis_struct.b_freq = p_iv_clientservdep_struct_h->b_freq; /* Bageshri HDFCIV_001*/


	/*added by shruthi kumbla for kotak annual minimum billing start*/
	l_iv_client_serv_basis_struct.incld_in_ann_min_fee= p_iv_clientservdep_struct_h->incld_in_ann_min_fee;
	if(l_iv_client_serv_basis_struct.incld_in_ann_min_fee !='Y')
		l_iv_client_serv_basis_struct.incld_in_ann_min_fee = 'N';
	/*added by shruthi kumbla for kotak annual minimum billing end*/
	
		/*added for kotak ISKB_1737 start*/
		strcpy(l_iv_client_serv_basis_struct.pls_month, p_iv_clientservdep_struct_h->pls_month);
		strcpy(l_iv_client_serv_basis_struct.apl_frm_date, p_iv_clientservdep_struct_h->apl_frm_date);
		/*added for kotak ISKB_1737 ends*/
		
		Alert("PLS_MONTH |%s| ",l_iv_client_serv_basis_struct.pls_month);

	if( ( strcmp(p_iv_clientservdep_struct_h->fees_base," ") != 0) && 
	   (  strcmp(p_iv_clientservdep_struct_h->chrg_base," ") != 0 ))
	{
	     

		int_l_status = 0; 

		if ( APL_FAILURE == IV_Rtv_IVSSRVBasis(
						p_iv_clientservdep_struct_h->service_cd, 
						(char *)p_iv_clientservdep_struct_h->chrg_base,
						(char *)p_iv_clientservdep_struct_h->fees_base, 
						&l_iv_serv_basis_structa, &int_l_status, 
						l_debug_info_ptr) )//Changes done for AIX Migration
		{
			if ( int_l_status == IV_CRITCAL_ERROR_IND )
			{
				APL_GOBACK_FAIL
			}
			else if ( int_l_status == IV_NO_DATA_FOUND_ERR )
			{
				*int_p_retstat = IV_CRITCAL_ERROR_IND;

				CO_InsertErr(l_debug_info_ptr, ERR_INVALID_CHRGFEE_BASIS,
					       APL_NULL_STRING, APL_NULL_STRING,
					       APL_NULL_STRING, __LINE__, 
					       __FILE__ );

				APL_GOBACK_FAIL
			}
		}

		int_l_status = 0; 

		if ( APL_FAILURE == IV_Chk_FeeChargeType(
						l_iv_client_serv_basis_struct.service_cd, 
						l_iv_client_serv_basis_struct.chrg_base, 
						l_iv_client_serv_basis_struct.fees_base, 
						l_iv_client_serv_basis_struct.chrg_clas, 
						l_iv_client_serv_basis_struct.fees_class, 
						&int_l_status, l_debug_info_ptr) )
		{
			if ( int_l_status == IV_NO_DATA_FOUND_ERR )
			{
				char chr_l_buffer[BUFFER_LEN];

				memset(chr_l_buffer, APL_NULL_CHAR, BUFFER_LEN);

				ltoa_r(l_iv_client_serv_basis_struct.service_cd, chr_l_buffer, 
				       BUFFER_LEN - 1);

				*int_p_retstat = IV_CRITCAL_ERROR_IND;

				CO_InsertErr(l_debug_info_ptr, ERR_CHRGFEE_CANTBE_FORSERV, 
					       chr_l_buffer, APL_NULL_STRING,  
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);
			}
			else if ( int_l_status == IV_SUCCESS )
			{
				CO_InsertErr(l_debug_info_ptr, ERR_INVALID_CHRGFEE_TYPE, 
					       APL_NULL_STRING, APL_NULL_STRING,
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);
			}

			APL_GOBACK_FAIL
		}

	} 

	/* Added for Billing Services Upload - Starts */
	EXEC SQL SELECT COUNT(SERVICE_CD)
	INTO :cnt_servcode 
	FROM IV_CLIENT_SERV_BASIS
	WHERE ( (SERVICE_CD = :l_iv_client_serv_basis_struct.service_cd) AND
	(CLIENT=:l_iv_client_serv_basis_struct.client) AND 
	(APL_FRM_DATE=:l_iv_client_serv_basis_struct.apl_frm_date));
	
	Alert("PPD: sql code is: |%d|", sqlca.sqlcode );
	Alert("PPD: cnt_servcode is: |%d|", cnt_servcode );
	
	if ( cnt_servcode >= 1)
	{
		CO_InsertErr(l_debug_info_ptr, ERR_DUPLICATE_SERVCD_CLIENT, 
					       APL_NULL_STRING, APL_NULL_STRING,
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);
						   
		APL_GOBACK_FAIL

	}
	/* Added for Billing Services Upload - Ends */ 

	l_iv_client_serv_basis_struct.minimumfee = p_iv_clientservdep_struct_h->minimumfee;
	l_iv_client_serv_basis_struct.nil_fees = p_iv_clientservdep_struct_h->nil_fees;
	l_iv_client_serv_basis_struct.maximum_fee = p_iv_clientservdep_struct_h->maximum_fee;
	fprintf(APL_OUT_FILE, "The chr_value before before IV_Mod_IVSRVBasisNew is : %s",p_iv_clientservdep_struct_h->dealadm_feeccy);
	strcpy(l_iv_client_serv_basis_struct.dealadm_feeccy, p_iv_clientservdep_struct_h->dealadm_feeccy);
	strcpy(l_iv_client_serv_basis_struct.bill_acc , p_iv_clientservdep_struct_h->bill_acc); /* Bageshri HDFCIV_001*/
	Alert("Include in annual minimum fee |%c| ",l_iv_client_serv_basis_struct.incld_in_ann_min_fee);

	fprintf(APL_OUT_FILE, "The chr_value before IV_Mod_IVSRVBasisNew is : %s",l_iv_client_serv_basis_struct.dealadm_feeccy);

	int_l_status = 0; 

	if ( APL_FAILURE == IV_Mod_IVSRVBasisNew(&l_iv_client_serv_basis_struct, &int_l_status, 
					     l_debug_info_ptr) )
	{
		*int_p_retstat = int_l_status;

		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_AddNewCustServDet().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_AddNewCustServDet().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Mod_ChgCustServDet(const IV_CLIENTSERVDEP_STRUCT_H *p_iv_clientservdep_struct_h, 
		      int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	int IV_Chk_ServDepncy(const long l_servcode, const char *l_paramcode, 
			     int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_IVParam_Type(long l_servcode, int *int_l_retstat, 
				      DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_IVCUSTPARAM(const char *chr_l_client, 
				     const long l_servcode, const char *chr_l_apl_frm_date,
				     IV_CLIENTPARAM_STRUCT_H *l_iv_clientparam_struct_ha_a, 
				     int *int_l_retstat, 
				     DEBUG_INFO_STRUCT_H **l_debug_info_ptr);    /* Added by Monica for kotak ISKB_1737 */

	extern int IV_Mod_NewIVCUSTPARAM(const IV_CLIENTPARAM_STRUCT_H *l_iv_clientparam_struct_ha_a, 
				     int *int_l_retstat, 
				     DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_DelIVCSTFEEAllParam(const IV_CLIENTFEE_STRUCT_H *l_iv_clientfee_struct_hc,
					      int *int_l_retstat, 
					      DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_IVCUSTPARAM(const IV_CLIENTPARAM_STRUCT_H *l_iv_clientparam_struct_ha_a, 
				   int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_IVCUSTPARAMRowDel(const char *chr_l_client, 
					const long l_servcode, const char *chr_l_apl_frm_date, int *int_l_retstat, 
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr);/* Added by Monica for kotak ISKB_1737 */

	extern int IV_Rtv_IVSSRVBasis(long l_servcode, char *l_chargebasis, 
				     char *l_feebasis, 
				     IV_SERV_BASIS_STRUCT *l_iv_serv_basis_structa, 
				     int *int_l_retstat, 
				     DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_IVSRVBasis(char *chr_l_client, long l_servcode, char *chr_l_apl_frm_date,  /* Added by monica for kotak ISKB_1737 */
				    IV_CLIENT_SERV_BASIS_STRUCT *l_iv_client_serv_basis_struct, 
				    int *int_l_retstat, 
				    DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_IVSRVBasis(const IV_CLIENT_SERV_BASIS_STRUCT *l_iv_client_serv_basis_struct, 
				   int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_Bill_FrmGendt_DlvDt(DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_ChkTxnServDepncy(const char *p_paramcode, 
				       const char *p_feebasis, 
				       const char *p_chargebasis, 
				       int *int_p_retstat, 
				       DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_ChkAdmServDepncy(const char *p_client, 
				       const long p_servcode, 
					   const char *p_apl_frm_date,   /* Added apl_frm_date by monica for kotak ISKB_1737 */
				       const char *p_paramcode, 
				       int *int_p_retstat, 
				       DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	

	char chr_l_delprevslabs = 'N', chr_l_deladmslabs = 'N';
	
	char chr_l_param_code[IV_PARAM_LEN], chr_l_isbetblgenanddlv = 'N';
	int int_l_status = 0, int_l_status2 = 0, int_l_status3 = 0;
	long l_servcode = p_iv_clientservdep_struct_h->service_cd;
	IV_CLIENTPARAM_STRUCT_H l_iv_clientparam_struct_ha_a, l_iv_newclientparam_struct_h;
	IV_CLIENT_SERV_BASIS_STRUCT l_iv_client_serv_basis_struct, l_iv_newclient_serv_basis_struct;
	IV_SERV_BASIS_STRUCT l_iv_serv_basis_structa;
	IV_CLIENTFEE_STRUCT_H l_iv_clientfee_struct_hc;

	EXEC SQL BEGIN DECLARE SECTION;

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	memset(chr_l_param_code, APL_NULL_CHAR, IV_PARAM_LEN);

	

	if ( APL_SUCCESS == IV_Rtv_Bill_FrmGendt_DlvDt(l_debug_info_ptr) )
	{
		chr_l_isbetblgenanddlv = 'Y';
	}
	else if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

     

	int_l_status = 0; 

	if ( APL_FAILURE == IV_Rtv_IVParam_Type(p_iv_clientservdep_struct_h->service_cd, 
					       &int_l_status, l_debug_info_ptr) )
	{
		if ( int_l_status == IV_CRITCAL_ERROR_IND )
		{
			*int_p_retstat = int_l_status;

			APL_GOBACK_FAIL
		}		
		else if ( strlen(p_iv_clientservdep_struct_h->parameter_cd) )
		{
			*int_p_retstat = IV_CRITCAL_ERROR_IND;

			CO_InsertErr(l_debug_info_ptr, ERR_INVALID_SERVDEP, 
				       APL_NULL_STRING, APL_NULL_STRING, 
				       APL_NULL_STRING, __LINE__, __FILE__);

			APL_GOBACK_FAIL
		}
	}
	else if ( !strlen(p_iv_clientservdep_struct_h->parameter_cd) )
	{
		

		if ( !strcmp(p_iv_clientservdep_struct_h->client, 
			     l_mt_core_sys_params_struct_h.custody_clt_cd) )
		{
			CO_InsertErr(l_debug_info_ptr, ERR_INTRNL_SERV_DEP_MANDATORY, 
				       APL_NULL_STRING, APL_NULL_STRING, 
				       APL_NULL_STRING, __LINE__, __FILE__);

			*int_p_retstat = IV_CRITCAL_ERROR_IND;

			APL_GOBACK_FAIL
		}

		int_l_status2 = 0; 

		if ( APL_FAILURE == 
				IV_Rtv_IVCUSTPARAM(p_iv_clientservdep_struct_h->client, 
						  p_iv_clientservdep_struct_h->service_cd,  p_iv_clientservdep_struct_h->apl_frm_date,
						  &l_iv_clientparam_struct_ha_a, &int_l_status2, 
						  l_debug_info_ptr) )      /* Added by Monica for kotak ISKB_1737 */
		{
			if ( int_l_status == IV_CRITCAL_ERROR_IND )
			{
				*int_p_retstat = int_l_status;

				APL_GOBACK_FAIL
			}
		}
		else
		{
			

			if ( chr_l_isbetblgenanddlv == 'Y' )
			{
				CO_InsertErr(l_debug_info_ptr, ERR_SERV_DETAILS_NC, 
					       APL_NULL_STRING, APL_NULL_STRING,
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);

				APL_GOBACK_FAIL
			}

			chr_l_delprevslabs = 'Y';
			chr_l_deladmslabs = 'Y'; 

			int_l_status2 = 0; 

Alert("apl_frm_date %s",p_iv_clientservdep_struct_h->apl_frm_date);

			if ( APL_FAILURE == 
				IV_Mod_IVCUSTPARAMRowDel(p_iv_clientservdep_struct_h->client,
						p_iv_clientservdep_struct_h->service_cd, 
						p_iv_clientservdep_struct_h->apl_frm_date,
						&int_l_status2, l_debug_info_ptr) )/*added by Monica for ISKB_1737*/
			{
				if ( int_l_status2 == IV_NO_DATA_FOUND_ERR )
				{
					*int_p_retstat = IV_CRITCAL_ERROR_IND;

					CO_InsertErr(l_debug_info_ptr, 
						       ERR_ACCESSSTAMP_CHGD, 
						       APL_NULL_STRING, 
						       APL_NULL_STRING, 
						       APL_NULL_STRING, 
						       __LINE__, __FILE__);
				}

				APL_GOBACK_FAIL
			}

		} 
	}
	else 
	{
		

		strcpy(chr_l_param_code, p_iv_clientservdep_struct_h->parameter_cd);

		int_l_status2 = IV_SUCCESS;

		if ( l_servcode == TXNFEE )
		{
			if ( APL_FAILURE == 
				IV_ChkTxnServDepncy(chr_l_param_code, 
						p_iv_clientservdep_struct_h->fees_base, 
						p_iv_clientservdep_struct_h->chrg_base,
						&int_l_status2, l_debug_info_ptr) )	
			{
				*int_p_retstat = int_l_status2;

				APL_GOBACK_FAIL
			}
		}
		else if ((l_servcode == ADM_CUST_FEE_IND) ||(l_servcode == ADM_TXN_FEE_IND))
		{
			if ( APL_FAILURE == 
				IV_ChkAdmServDepncy(p_iv_clientservdep_struct_h->client,
						    l_servcode,p_iv_clientservdep_struct_h->apl_frm_date,chr_l_param_code,    /* Added apl_frm_date by monica for kotak ISKB_1737 */
						    &int_l_status2, l_debug_info_ptr) )	
			{
				*int_p_retstat = int_l_status2;

				APL_GOBACK_FAIL
			}
		}
		else
		{
			if ( APL_FAILURE == 
				IV_Chk_ServDepncy(l_servcode, chr_l_param_code, 
						&int_l_status2, l_debug_info_ptr) )	
			{
				*int_p_retstat = int_l_status2;

				APL_GOBACK_FAIL
			}
		}

		int_l_status2 = 0; 

		if ( APL_FAILURE == 
				IV_Rtv_IVCUSTPARAM(p_iv_clientservdep_struct_h->client, 
						  p_iv_clientservdep_struct_h->service_cd, p_iv_clientservdep_struct_h->apl_frm_date, 
						  &l_iv_clientparam_struct_ha_a, &int_l_status2, 
						  l_debug_info_ptr) )     /* Added for kotak ISKB_1737 */
		{
			if ( int_l_status2 == IV_CRITCAL_ERROR_IND )
			{
				APL_GOBACK_FAIL
			}
			else if ( int_l_status2 == IV_NO_DATA_FOUND_ERR )
			{
				

				if ( chr_l_isbetblgenanddlv == 'Y' )
				{
					CO_InsertErr(l_debug_info_ptr, 
						       ERR_SERV_DETAILS_NC, 
						       APL_NULL_STRING, 
						       APL_NULL_STRING,
						       APL_NULL_STRING, 
						       __LINE__, __FILE__);

					APL_GOBACK_FAIL
				}

				strcpy(l_iv_newclientparam_struct_h.client, 
				       p_iv_clientservdep_struct_h->client);

				l_iv_newclientparam_struct_h.service_cd = 
						p_iv_clientservdep_struct_h->service_cd;

				strcpy(l_iv_newclientparam_struct_h.parameter_cd, 
				       p_iv_clientservdep_struct_h->parameter_cd);
		strcpy(l_iv_newclientparam_struct_h.apl_frm_date,p_iv_clientservdep_struct_h->apl_frm_date);/*added by Monica for ISKB_1737*/
				int_l_status3 = 0; 

				if ( APL_FAILURE == 
					IV_Mod_NewIVCUSTPARAM(&l_iv_newclientparam_struct_h, 
							  &int_l_status3, 
							  l_debug_info_ptr) )
				{
					*int_p_retstat = IV_CRITCAL_ERROR_IND;

					APL_GOBACK_FAIL
				}

			} 
		}
		else if ( strcmp(l_iv_clientparam_struct_ha_a.parameter_cd, 
				 p_iv_clientservdep_struct_h->parameter_cd) )
		{
			

			if ( chr_l_isbetblgenanddlv == 'Y' )
			{
				CO_InsertErr(l_debug_info_ptr, ERR_SERV_DETAILS_NC, 
					       APL_NULL_STRING, APL_NULL_STRING,
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);

				APL_GOBACK_FAIL
			}

			strcpy(l_iv_newclientparam_struct_h.client, 
			       p_iv_clientservdep_struct_h->client);

			l_iv_newclientparam_struct_h.service_cd = 
						p_iv_clientservdep_struct_h->service_cd;

			strcpy(l_iv_newclientparam_struct_h.parameter_cd, 
			       p_iv_clientservdep_struct_h->parameter_cd);

			int_l_status3 = 0; 
strcpy(l_iv_newclientparam_struct_h.apl_frm_date,p_iv_clientservdep_struct_h->apl_frm_date);/*added by Monica for ISKB_1737*/
			if ( APL_FAILURE == 
				IV_Mod_IVCUSTPARAM(&l_iv_newclientparam_struct_h, &int_l_status3,
						  l_debug_info_ptr) )
			{
				*int_p_retstat = IV_CRITCAL_ERROR_IND;

				APL_GOBACK_FAIL
			}

			chr_l_delprevslabs = 'Y';
			chr_l_deladmslabs = 'Y'; 

		} 

	} 

     

	int_l_status = 0; 

	if ( APL_FAILURE == IV_Rtv_IVSSRVBasis(p_iv_clientservdep_struct_h->service_cd, 
					      APL_NULL_STRING, APL_NULL_STRING, 
					      (IV_SERV_BASIS_STRUCT *)NULL, 
					      &int_l_status, l_debug_info_ptr) )
	{
		if ( int_l_status == IV_CRITCAL_ERROR_IND )
		{
			*int_p_retstat = int_l_status;

			APL_GOBACK_FAIL
		}
		else if ( strcmp(p_iv_clientservdep_struct_h->fees_base, " ") || 
			  strcmp(p_iv_clientservdep_struct_h->chrg_base, " ") )
		{
			char chr_l_buffer[BUFFER_LEN];

			memset(chr_l_buffer, APL_NULL_CHAR, BUFFER_LEN);

			ltoa_r(p_iv_clientservdep_struct_h->service_cd, chr_l_buffer, 
			       BUFFER_LEN - 1);

			*int_p_retstat = IV_CRITCAL_ERROR_IND;

			CO_InsertErr(l_debug_info_ptr, ERR_INVALID_CHRGFEE_BASIS, 
				       chr_l_buffer, APL_NULL_STRING, 
				       APL_NULL_STRING, __LINE__, __FILE__);

			APL_GOBACK_FAIL
		}
	}
	else 
	{
		

		if ( !strcmp(p_iv_clientservdep_struct_h->client, 
			     l_mt_core_sys_params_struct_h.custody_clt_cd) && 
		    (!strcmp(p_iv_clientservdep_struct_h->fees_base, " ") || 
		     !strcmp(p_iv_clientservdep_struct_h->chrg_base, " ")) )
		{
			CO_InsertErr(l_debug_info_ptr, ERR_INTRNL_SERV_CHRG_MANDATORY, 
				       APL_NULL_STRING, APL_NULL_STRING, 
				       APL_NULL_STRING, __LINE__, __FILE__);

			*int_p_retstat = IV_CRITCAL_ERROR_IND;

			APL_GOBACK_FAIL
		}

		

		

		memset(l_iv_client_serv_basis_struct.client, APL_NULL_CHAR, APL_CLIENT_LENGTH);
		memset(l_iv_client_serv_basis_struct.fees_base, APL_NULL_CHAR, IV_STRING_LEN);
		memset(l_iv_client_serv_basis_struct.chrg_base, APL_NULL_CHAR, IV_STRING_LEN);
		memset(l_iv_client_serv_basis_struct.dealadm_feeccy, APL_NULL_CHAR, APL_CCYCODE_LEN);
		memset(l_iv_client_serv_basis_struct.bill_acc, APL_NULL_CHAR, APL_CLIENT_LENGTH_GL);/* Bageshri HDFCIV_001*/


		l_iv_client_serv_basis_struct.service_cd = 0L;
		l_iv_client_serv_basis_struct.minimumfee = 0.0;
		l_iv_client_serv_basis_struct.maximum_fee = 0.0;
		l_iv_client_serv_basis_struct.nil_fees = 0.0;
		l_iv_client_serv_basis_struct.fees_class = NULL;
		l_iv_client_serv_basis_struct.chrg_clas = NULL;
		l_iv_client_serv_basis_struct.b_freq = NULL;/* Bageshri HDFCIV_001*/
		

		int_l_status = 0;

		if ( APL_FAILURE == 
				IV_Rtv_IVSRVBasis((char *)p_iv_clientservdep_struct_h->client, 
						 p_iv_clientservdep_struct_h->service_cd, 
						  (char *)p_iv_clientservdep_struct_h->apl_frm_date,   /* Added by monica for kotak ISKB_1737 */
						 &l_iv_client_serv_basis_struct, &int_l_status, 
						 l_debug_info_ptr) )//Changes done for AIX Migration
		{
			if ( int_l_status == IV_CRITCAL_ERROR_IND )
			{
				*int_p_retstat = int_l_status;

				APL_GOBACK_FAIL
			}
		}

		

		if ( strcmp(l_iv_client_serv_basis_struct.fees_base, 
			    p_iv_clientservdep_struct_h->fees_base) || 
		     strcmp(l_iv_client_serv_basis_struct.chrg_base, 
			    p_iv_clientservdep_struct_h->chrg_base) )
		{
			if ( chr_l_isbetblgenanddlv == 'Y' )
			{
				CO_InsertErr(l_debug_info_ptr, ERR_SERV_DETAILS_NC, 
					       APL_NULL_STRING, APL_NULL_STRING,
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);

				APL_GOBACK_FAIL
			}
		}

		if (strcmp(l_iv_client_serv_basis_struct.fees_base, 
			   p_iv_clientservdep_struct_h->fees_base) || 
		    strcmp(l_iv_client_serv_basis_struct.chrg_base, 
			   p_iv_clientservdep_struct_h->chrg_base) || 
		    (l_iv_client_serv_basis_struct.fees_class != p_iv_clientservdep_struct_h->fees_class) || 
		    (l_iv_client_serv_basis_struct.chrg_clas != p_iv_clientservdep_struct_h->chrg_clas))
		{
			chr_l_delprevslabs = 'Y';
		}

	}	
	
	if (!strlen(l_iv_client_serv_basis_struct.client))
	{
		if ( APL_FAILURE ==
            IV_Rtv_IVSRVBasis((char *)p_iv_clientservdep_struct_h->client,
                   p_iv_clientservdep_struct_h->service_cd,
				   (char *)p_iv_clientservdep_struct_h->apl_frm_date,   /* Added by monica for kotak ISKB_1737 */
                   &l_iv_client_serv_basis_struct, &int_l_status,
                   l_debug_info_ptr) )//Changes done for AIX Migration
      {
         if ( int_l_status == IV_CRITCAL_ERROR_IND )
         {
            *int_p_retstat = int_l_status;

            APL_GOBACK_FAIL
         }
      }	
	}

	if ((l_servcode == ADM_TXN_FEE_IND) && (strlen(p_iv_clientservdep_struct_h->dealadm_feeccy) > 0 ) && (strlen(l_iv_client_serv_basis_struct.dealadm_feeccy) > 0 ))
	{

		if ( strcmp(l_iv_client_serv_basis_struct.dealadm_feeccy, p_iv_clientservdep_struct_h->dealadm_feeccy) != 0 )
		{
			if ( chr_l_isbetblgenanddlv == 'Y' )
			{
            CO_InsertErr(l_debug_info_ptr, ERR_SERV_DETAILS_NC,APL_NULL_STRING, APL_NULL_STRING,
							APL_NULL_STRING, __LINE__,__FILE__);
				APL_GOBACK_FAIL
         }
			
			chr_l_delprevslabs = 'Y';
      }
	}


	

	

	memset(l_iv_newclient_serv_basis_struct.client, APL_NULL_CHAR, APL_CLIENT_LENGTH);
	memset(l_iv_newclient_serv_basis_struct.fees_base, APL_NULL_CHAR, IV_STRING_LEN);
	memset(l_iv_newclient_serv_basis_struct.chrg_base, APL_NULL_CHAR, IV_STRING_LEN);
	memset(l_iv_newclient_serv_basis_struct.dealadm_feeccy, APL_NULL_CHAR, APL_CCYCODE_LEN);
	memset(l_iv_newclient_serv_basis_struct.bill_acc, APL_NULL_CHAR, APL_CLIENT_LENGTH_GL);	/* Bageshri HDFCIV_001*/

	strcpy(l_iv_newclient_serv_basis_struct.client, p_iv_clientservdep_struct_h->client);
	strcpy(l_iv_newclient_serv_basis_struct.fees_base, p_iv_clientservdep_struct_h->fees_base);
	strcpy(l_iv_newclient_serv_basis_struct.chrg_base, p_iv_clientservdep_struct_h->chrg_base);

	l_iv_newclient_serv_basis_struct.service_cd = p_iv_clientservdep_struct_h->service_cd;
	l_iv_newclient_serv_basis_struct.fees_class = p_iv_clientservdep_struct_h->fees_class;
	l_iv_newclient_serv_basis_struct.chrg_clas = p_iv_clientservdep_struct_h->chrg_clas;
	l_iv_newclient_serv_basis_struct.minimumfee = p_iv_clientservdep_struct_h->minimumfee;
	l_iv_newclient_serv_basis_struct.nil_fees = p_iv_clientservdep_struct_h->nil_fees;
	l_iv_newclient_serv_basis_struct.maximum_fee = p_iv_clientservdep_struct_h->maximum_fee;
	
	strcpy(l_iv_newclient_serv_basis_struct.dealadm_feeccy, p_iv_clientservdep_struct_h->dealadm_feeccy);
	strcpy(l_iv_newclient_serv_basis_struct.bill_acc, p_iv_clientservdep_struct_h->bill_acc);	/* Bageshri HDFCIV_001*/
	l_iv_newclient_serv_basis_struct.b_freq = p_iv_clientservdep_struct_h->b_freq;  /* Bageshri HDFCIV_001*/
		/*added by shruthi kumbla for kotak annual minimum billing*/
	
	
		/*added by shruthi kumbla for kotak annual minimum billing start*/
	l_iv_newclient_serv_basis_struct.incld_in_ann_min_fee= p_iv_clientservdep_struct_h->incld_in_ann_min_fee;
	if(l_iv_newclient_serv_basis_struct.incld_in_ann_min_fee !='Y')
		l_iv_newclient_serv_basis_struct.incld_in_ann_min_fee = 'N';
	/*added by shruthi kumbla for kotak annual minimum billing end*/
	
		/*added for kotak ISKB_1737 start*/
		strcpy(l_iv_newclient_serv_basis_struct.pls_month, p_iv_clientservdep_struct_h->pls_month);
		strcpy(l_iv_newclient_serv_basis_struct.apl_frm_date, p_iv_clientservdep_struct_h->apl_frm_date);
		/*added for kotak ISKB_1737 end*/

	

	int_l_status2 = 0; 

	if ( APL_FAILURE == IV_Mod_IVSRVBasis(&l_iv_newclient_serv_basis_struct, &int_l_status2, 
					     l_debug_info_ptr) )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

	if ( chr_l_delprevslabs == 'Y' ) 
	{
		strcpy(l_iv_clientfee_struct_hc.client, p_iv_clientservdep_struct_h->client);

		l_iv_clientfee_struct_hc.service_cd = p_iv_clientservdep_struct_h->service_cd;

		strcpy(l_iv_clientfee_struct_hc.apl_frm_date, p_iv_clientservdep_struct_h->apl_frm_date);
		int_l_status = 0; 

		if ( APL_FAILURE == IV_Mod_DelIVCSTFEEAllParam(&l_iv_clientfee_struct_hc, 
							       &int_l_status, 
							       l_debug_info_ptr) )
		{
			if ( int_l_status == IV_CRITCAL_ERROR_IND )
			{
				*int_p_retstat = int_l_status;

				APL_GOBACK_FAIL
			}
		}

	} 

	

	if ( chr_l_deladmslabs == 'Y' )
	{
		strcpy(l_iv_clientfee_struct_hc.client, p_iv_clientservdep_struct_h->client);

		if ( p_iv_clientservdep_struct_h->service_cd == CUSTODYFEE )
		{
			l_iv_clientfee_struct_hc.service_cd = ADM_CUST_FEE_IND;
		}
		else if ( p_iv_clientservdep_struct_h->service_cd == TXNFEE )
		{
			l_iv_clientfee_struct_hc.service_cd = ADM_TXN_FEE_IND;
		}

		int_l_status = IV_SUCCESS;

		if ( APL_FAILURE == IV_Mod_DelIVCSTFEEAllParam(&l_iv_clientfee_struct_hc, 
							       &int_l_status, 
							       l_debug_info_ptr) )
		{
			if ( int_l_status == IV_CRITCAL_ERROR_IND )
			{
				*int_p_retstat = int_l_status;

				APL_GOBACK_FAIL
			}
		}

		int_l_status = IV_SUCCESS;

	Alert("apl_frm_date %s",p_iv_clientservdep_struct_h->apl_frm_date);

		if ( APL_FAILURE == 
				IV_Mod_IVCUSTPARAMRowDel(p_iv_clientservdep_struct_h->client,
						     l_iv_clientfee_struct_hc.service_cd, 
							 p_iv_clientservdep_struct_h->apl_frm_date,/*added by Monica for ISKB_1737*/
						     &int_l_status, l_debug_info_ptr) )
		{
			if ( int_l_status == IV_CRITCAL_ERROR_IND )
			{
				*int_p_retstat = int_l_status;

				APL_GOBACK_FAIL
			}
		}

	} 

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_ChgCustServDet().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_ChgCustServDet().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Mod_DelCustServDet(const char *p_client, const long p_servcode,const char *p_apl_frm_date, /*added by Monica for ISKB_1737*/
		      int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	extern int IV_Mod_IVCUSTPARAMRowDel(const char *chr_l_client, 
					const long l_servcode,const char *chr_l_apl_frm_date, int *int_l_retstat, /*added by Monica for ISKB_1737*/
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_DelIVCSTFEEAllParam(const IV_CLIENTFEE_STRUCT_H *l_iv_clientfee_struct_hc,
					      int *int_l_retstat, 
					      DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Mod_IVSRVBasisRowDel(const char *chr_l_client, 
				       const long l_servcode,const char *chr_l_apl_frm_date,  int *int_l_retstat, /*added by Monica for ISKB_1737*/
				       DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	extern int IV_Rtv_Bill_FrmGendt_DlvDt(DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	

	int int_l_status = 0;
	IV_CLIENTFEE_STRUCT_H l_iv_clientfee_struct_hc;

	EXEC SQL BEGIN DECLARE SECTION;

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	

	if ( APL_SUCCESS == IV_Rtv_Bill_FrmGendt_DlvDt(l_debug_info_ptr) )
	{
		CO_InsertErr(l_debug_info_ptr, ERR_SERV_DETAILS_NC, APL_NULL_STRING, 
			       APL_NULL_STRING, APL_NULL_STRING, __LINE__, 
			       __FILE__);

		APL_GOBACK_FAIL
	}
	else if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

	int_l_status = 0;

	Alert("p_apl_frm_date %s",p_apl_frm_date);
	if ( APL_FAILURE == IV_Mod_IVCUSTPARAMRowDel(p_client, p_servcode, p_apl_frm_date,/*added by Monica for ISKB_1737*/
						 &int_l_status, l_debug_info_ptr) )
	{
		if ( int_l_status == IV_CRITCAL_ERROR_IND )
		{
			*int_p_retstat = int_l_status;

			APL_GOBACK_FAIL
		}
	}

	strcpy(l_iv_clientfee_struct_hc.client, p_client);
	l_iv_clientfee_struct_hc.service_cd = p_servcode;
	int_l_status = 0;
	strcpy(l_iv_clientfee_struct_hc.apl_frm_date, p_apl_frm_date);/*added by Monica for ISKB_1737*/

	if ( APL_FAILURE == IV_Mod_DelIVCSTFEEAllParam(&l_iv_clientfee_struct_hc, &int_l_status, 
						       l_debug_info_ptr) )
	{
		if ( int_l_status == IV_CRITCAL_ERROR_IND )
		{
			*int_p_retstat = int_l_status;

			APL_GOBACK_FAIL
		}
	}

	int_l_status = 0;

	if (APL_FAILURE == IV_Mod_IVSRVBasisRowDel(p_client, p_servcode, p_apl_frm_date,/*added by Monica for ISKB_1737*/
					       &int_l_status, l_debug_info_ptr))
	{
		if ( int_l_status == IV_CRITCAL_ERROR_IND )
		{
			*int_p_retstat = int_l_status;

			APL_GOBACK_FAIL
		}
		else if ( int_l_status == IV_NO_DATA_FOUND_ERR )
		{
			

		     

			*int_p_retstat = IV_NO_DATA_FOUND_ERR;

			APL_GOBACK_FAIL
		}
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_DelCustServDet().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_DelCustServDet().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Chk_ServDepncy(const long p_servcode, const char *p_paramcode, 
		     int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	extern int IV_Chk_IVParam_Type_Code(const long l_servcode, 
					       const char *l_paramcode, 
					       int *int_l_status, 
					       DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	

	char chr_l_param_code[IV_PARAM_LEN], chr_l_temp_param_code[IV_PARAM_LEN]=APL_NULL_STRING;/* Bageshri HDFCIV_001*/
	char *chr_l_last; 
	int int_l_status = 0;

	EXEC SQL BEGIN DECLARE SECTION;

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

 chr_l_last = (char *) calloc(IV_PARAM_LEN,sizeof(char));
	memset(chr_l_param_code, APL_NULL_CHAR, IV_PARAM_LEN);
	memset(chr_l_temp_param_code, APL_NULL_CHAR, IV_PARAM_LEN);

	strcpy(chr_l_param_code, p_paramcode);
	

	/* strcpy(chr_l_temp_param_code, strtok_r(chr_l_param_code, ";", &chr_l_last)); */		/* Bageshri HDFCIV_001*/
	 strtok_r(chr_l_param_code, ";", &chr_l_last);
	 strcpy(chr_l_temp_param_code,  chr_l_param_code);
	/**********************/

	while ( strlen(chr_l_temp_param_code)>1 )		/* Bageshri HDFCIV_001*/
	{
		

		int_l_status = 0; 

		if ( APL_FAILURE == 
			IV_Chk_IVParam_Type_Code(p_servcode, 
						    chr_l_temp_param_code, 
						    &int_l_status, l_debug_info_ptr) )
		{
			if ( int_l_status == IV_NO_DATA_FOUND_ERR )
			{
				*int_p_retstat = IV_CRITCAL_ERROR_IND;

				CO_InsertErr(l_debug_info_ptr, ERR_INVALID_SERVDEP, 
					       APL_NULL_STRING, APL_NULL_STRING,
					       APL_NULL_STRING, __LINE__, 
					       __FILE__);
			}

			APL_GOBACK_FAIL
		}

		

		if ( !strcmp(chr_l_temp_param_code, "LOCATION") &&	/* Bageshri HDFCIV_001*/
		      strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind, "Y") )
		{
			*int_p_retstat = IV_CRITCAL_ERROR_IND;

			CO_InsertErr(l_debug_info_ptr, 102, APL_NULL_STRING, APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);		

			APL_GOBACK_FAIL
		}
		
		
		
		if(chr_l_last == (char *)NULL)
		{	
			strcpy(chr_l_temp_param_code, APL_NULL_STRING);
		}
		else
		{
			 if(strlen(chr_l_last) > 0)
			 {
			strcpy(chr_l_temp_param_code, strtok_r(chr_l_last,";",&chr_l_last));
			
			 }
			 else{
	memset(chr_l_temp_param_code, APL_NULL_CHAR, IV_PARAM_LEN);
			 }
			 
		}	  
		
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Chk_ServDepncy().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Chk_ServDepncy().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}
