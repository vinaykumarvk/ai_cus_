


#include "IV_Control_A.h"
EXEC SQL INCLUDE SQLCA.H;
//shailesh 26-12-2007 ISKB_430_11C
#define STYLE "<STYLE>.heading{background:#e8eff9;; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #021882; font-weight: bold;}.lableblue{color: #000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: bold; text-decoration: none}.normalbold{font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: bold; text-decoration: none}.normal{font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #000000}.lablered{font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #aa1133; font-weight: bold;}.ez1{background:#e8eff9;; color: #000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: normal; text-decoration: none}.ez4{background:#e8eff9; color: #000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: bold; text-decoration: none text-align: center}.lableredbg{background:#ffeeef; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #aa1133; font-weight: bold;}.tablerecord{background:#F2FDFF;; color:#000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: normal; text-decoration: none}.record{background:#F2FFF4;; color:#000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: normal; text-decoration: none}@page Section1 {size:8.5in 11.0in;margin:1.0in 1.25in 1.0in 1.25in;} div.Section1 {page:Section1;} H3 {page-break-before: always }</STYLE>"

int IV_PrntSumCovPg_Web(FILE *bill,
		FILE *fl_techlog,	
		FILE *fl_userlog,	
		char *chr_p_billdt,
		char *chr_p_client,
		SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
		IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,			
		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	Alert("Calling IV_PrntSumCovPg_Web for client |%s|",chr_p_client);
	fflush(stdout);

	char    chr_l_inifile[PATH_LENGTH]        = APL_NULL_STRING;
	FILE    *l_finifile                       = (FILE *) NULL;


	/* Unused variable char chr_t_billdt[11]= APL_NULL_STRING;*/
	char l_prev_date[20] = APL_NULL_STRING;
	char l_prev_date_temp[20] = APL_NULL_STRING;
	short i_prev_date = 0;
	char l_upto_date[20] = APL_NULL_STRING;
	char l_client_name[1000] = APL_NULL_STRING;
	char l_image_path[2000] = APL_NULL_STRING;
	char l_subclient_query[4000] = APL_NULL_STRING;
	char l_client[20] = APL_NULL_STRING;
	char b_ccycd[10] = APL_NULL_STRING;
	char l_mst_sub_ind[2] = APL_NULL_STRING;

	char l_address1[500] = APL_NULL_STRING;
	char l_address2[500] = APL_NULL_STRING;
	char l_city[200] = APL_NULL_STRING;
	char l_state[200] = APL_NULL_STRING;
	char l_country[200] = APL_NULL_STRING;
	char chr_l_main_funcarea[APL_MAINFUNCAREA_LEN]=APL_NULL_STRING;
	char chr_l_subfunc[APL_MAINFUNCAREA_LEN]=APL_NULL_STRING;
	char chr_l_service_reg[21] = APL_NULL_STRING;
	char chr_l_sac_code[10] = APL_NULL_STRING;//Changes done by Dimple Shah for ISKB_9564 GST

	short i_client_name = 0, i_address1=0, i_address2=0, i_city=0, i_state=0, i_country=0;
	short i_tel = 0;
	short i_pin = 0;
	short i_cln_contact2 = 0;
	short i_bill_month = 0;
	short i_sys_date = 0;

	double g_tot_trans = 0.0;
	double g_tot_cust = 0.0;
	double g_tot_ca = 0.0;
	double g_tot_oth = 0.0;
	double g_tot_comm = 0.0;
	double g_tot_tax = 0.0;
	double g_tot_educess = 0.0;
	double g_final_total = 0.0;

	double p_tot_trans = 0.0;
	double p_tot_cust = 0.0;
	double p_tot_ca = 0.0;
	double p_tot_oth = 0.0;
	double p_tot_comm = 0.0;
	double p_tot_tax = 0.0;
	double p_tot_educess = 0.0;
	double p_final_total = 0.0;

	double roundedamount = 0.0;
	char chr_l_amtstr[30]; 
	int int_totamtret = 0;
	char chr_tot_comm_amt[20] = APL_NULL_STRING;

	double p_tot_adj = 0.0;
	double p_tot_adj_comm = 0.0;
	double p_tot_depo = 0.0;
	double p_tot_outstanding = 0.0;

	double g_tot_adj = 0.0;
	double g_tot_adj_comm = 0.0;
	double g_tot_depo = 0.0;
	double g_tot_outstanding = 0.0;
	int	int_retstat = 0;

	char l_return_value[25] = APL_NULL_STRING;	/* JC - 25/07/2007 */
	char l_err_desc[100] = APL_NULL_STRING;		/* JC - 25/07/2007 */
   
       
	char l_pin[20] = APL_NULL_STRING;//shailesh 26-12-2007 ISKB_430_11C
	char l_tel[21] = APL_NULL_STRING;//shailesh 26-12-2007 ISKB_430_11C
	char l_cln_contact2[130] = APL_NULL_STRING;//shailesh 26-12-2007 ISKB_430_11C
	char l_bill_month[20] = APL_NULL_STRING;//shailesh 26-12-2007 ISKB_430_11C
	char l_sys_date[20] = APL_NULL_STRING;//shailesh 26-12-2007 ISKB_430_11C
	char chr_l_footnote[241];//Added by Anjaneyulu for ISKB_1737
	short i_footnote = 0;//Added by Anjaneyulu for ISKB_1737
	

	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR l_client_name IS STRING;
	EXEC SQL VAR l_address1 IS STRING;
	EXEC SQL VAR l_address2 IS STRING;
	EXEC SQL VAR l_city IS STRING;
	EXEC SQL VAR l_state IS STRING;
	EXEC SQL VAR l_country IS STRING;
	struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	char l_chr_client[11] = APL_NULL_STRING;
	memset(l_chr_client,APL_NULL_CHAR, sizeof(l_chr_client));

	Alert("Client before copy chr_p_client = |%s|", chr_p_client);
	fflush(stdout);
	strcpy(l_chr_client, chr_p_client);
	Alert("Client After Copy is : |%s|",l_chr_client);
	fflush(stdout);
	strcpy(chr_p_client,APL_NULL_STRING);

	memset(l_return_value, APL_NULL_CHAR, sizeof(l_return_value)); /* JC - 25/07/2007 - HB_IV_007 */
	memset(l_err_desc, APL_NULL_CHAR, sizeof(l_err_desc)); /* JC - 25/07/2007 - HB_IV_007 */

	memset(l_client_name, APL_NULL_CHAR, sizeof(l_client_name));
	memset(l_address1, APL_NULL_CHAR, sizeof(l_address1));
	memset(l_address2, APL_NULL_CHAR, sizeof(l_address2));
	memset(l_city, APL_NULL_CHAR, sizeof(l_city));
	memset(l_state, APL_NULL_CHAR, sizeof(l_state));
	memset(l_country, APL_NULL_CHAR, sizeof(l_country));
	memset(chr_l_main_funcarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
	memset(chr_l_subfunc,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
	memset(chr_l_service_reg,APL_NULL_CHAR,21);
	memset(chr_l_sac_code,APL_NULL_CHAR,21);//Changes done by Dimple Shah for ISKB_9564 GST

	memset(l_prev_date,APL_NULL_CHAR,sizeof(l_prev_date));
	memset(l_upto_date,APL_NULL_CHAR,sizeof(l_upto_date));

	memset(l_bill_month,APL_NULL_CHAR,sizeof(l_bill_month));

	strncpy(l_prev_date,l_sys_ivcntl_param_struct.b_prev_date,10);
	strncpy(l_upto_date,l_sys_ivcntl_param_struct.b_upto_date,10);

	Alert("Check : l_prev_date : |%s|",l_prev_date);
	Alert("Check : l_upto_date : |%s|",l_upto_date);
	fflush(stdout);

	memset(b_ccycd,APL_NULL_CHAR,sizeof(b_ccycd));
	strcpy(b_ccycd,l_iv_clt_setup_struct.b_ccycd);
	Alert("Check : b_ccycd : |%s|",b_ccycd);
	fflush(stdout);

	memset(l_subclient_query,APL_NULL_CHAR,4000);
	memset(chr_tot_comm_amt, APL_NULL_CHAR, 20);

	memset(l_prev_date_temp,APL_NULL_CHAR,sizeof(l_prev_date_temp));
	memset(chr_l_footnote, APL_NULL_CHAR, 241);//Added by Anjaneyulu for ISKB_1737

	EXEC SQL SELECT TO_CHAR(TO_DATE(:l_prev_date,'DD/MM/YYYY') + 1,'DD/MM/YYYY') 
		INTO :l_prev_date_temp:i_prev_date FROM DUAL;

	Alert("Sqlca sqlcode is = |%d|",sqlca.sqlcode);
	IS_ANY_ORA_ERROR

	Alert("Check : l_prev_date_temp : |%s|", l_prev_date_temp);
	fflush(stdout);
	memset(l_prev_date,APL_NULL_CHAR,sizeof(l_prev_date));
	strcpy(l_prev_date,l_prev_date_temp);
	Alert("Check : l_prev_date after copy : |%s|", l_prev_date);
	fflush(stdout);


       /* shailesh 26-12-2007 ISKB_430_11C */
	Alert("Client before Copy is l_chr_client : |%s|",l_chr_client);
	fflush(stdout);

	strcpy(chr_p_client,l_chr_client);

	Alert("Client passed chr_p_client  = |%s|",chr_p_client);
	fflush(stdout);
	Alert("Client passed l_chr_client = |%s|",l_chr_client);
	fflush(stdout);

	EXEC SQL SELECT A.CLN_NAME,NVL(A.CLN_ADD_1,' '),NVL(A.CLN_ADD_2,' '),NVL(A.CLN_ADD_PIN,' - '),NVL(A.CLN_TEL,' - '),
		NVL(A.CLN_CONTACT2,' - ') 
		INTO :l_client_name:i_client_name,
			:l_address1:i_address1,
			:l_address2:i_address2,
			:l_pin:i_pin,
			:l_tel:i_tel,
			:l_cln_contact2:i_cln_contact2 
		FROM MT_CLIENT A
		WHERE A.CLN_CODE=:l_chr_client;
	Alert("sqlca.sqlcode 0 = |%d|",sqlca.sqlcode);
	fflush(stdout);

	if(sqlca.sqlcode !=0)
	{
	fprintf(fl_userlog,"FILE::IV_PrntSumCovPg_Web.pc  2 -- :|%d|\n",sqlca.sqlcode);
	APL_GOBACK_FAIL
	}

	Alert("Client passed chr_p_client  = |%s|",chr_p_client);
	fflush(stdout);
	Alert("Client passed l_chr_client = |%s|",l_chr_client);
	fflush(stdout);
	EXEC SQL SELECT B.MAP_DESC,C.MAP_DESC,DECODE(A.COUNTRY,'IN','INDIA',A.COUNTRY) 
		INTO :l_city:i_city,:l_state:i_state,:l_country:i_country
		FROM MT_CLIENT A,PRO_SGENSTAT B,PRO_SGENSTAT C
		WHERE A.CLN_CODE=:l_chr_client
		AND A.CITY=B.MAP_VAL AND B.MAP_TYPE='CITY'
		AND A.STATE=C.MAP_VAL AND C.MAP_TYPE='STATE';
	Alert("sqlca.sqlcode 1 = |%d|",sqlca.sqlcode);
	fflush(stdout);

	if(sqlca.sqlcode ==1403)
	{
	fprintf(fl_userlog,"FILE::IV_PrntSumCovPg_Web.pc  3 -- CITY,STATE AND COUNTRY NOT FOUND FOR CLIENT :%s",l_chr_client);
	}

	
	/*EXEC SQL SELECT 
				CASE WHEN LAST_DAY(B_PREV_DATE)-B_PREV_DATE >          
						  ABS(B_UPTO_DATE-LAST_DAY(B_PREV_DATE))
					  THEN   TO_CHAR(ADD_MONTHS(B_PREV_DATE,0),'MON - YYYY') 
					  ELSE   TO_CHAR(ADD_MONTHS(B_UPTO_DATE,0),'MON - YYYY') 
				END  INTO   :l_bill_month 
			FROM      SYS_IVCONTROLPARAM;*/

EXEC SQL SELECT CASE WHEN 
LAST_DAY(TO_DATE(SUBSTR(:chr_p_billdt,0,10),'DD/MM/YYYY'))
        -TO_DATE(SUBSTR(:chr_p_billdt,0,10),'DD/MM/YYYY')> 15
	THEN   TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(:chr_p_billdt,0,10),'DD/MM/YYYY'),-1),'Month - YYYY') 
	ELSE   TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(:chr_p_billdt,0,10),'DD/MM/YYYY'),0),'Month - YYYY') 
	END  INTO :l_bill_month:i_bill_month FROM DUAL;
	Alert("sqlca.sqlcode 2 = |%d|",sqlca.sqlcode);
	fflush(stdout);

			
		 Alert(" --l_bill_month - = [%s]",l_bill_month);
		fflush(stdout);

	 if(sqlca.sqlcode !=0)
	{
	fprintf(fl_userlog,"FILE::IV_PrntSumCovPg_Web.pc  4 -- :|%d|\n",sqlca.sqlcode);
	APL_GOBACK_FAIL
	}


	/*	ISKB_2010	Change in Date Format	*/ 
	memset(l_sys_date,APL_NULL_CHAR,sizeof(l_sys_date));

	 EXEC SQL SELECT  TO_CHAR(SYS_DATE,'Month DD, YYYY') INTO :l_sys_date:i_sys_date  FROM PRO_SYS_DATE;
	Alert("sqlca.sqlcode 3 = |%d|",sqlca.sqlcode);
	fflush(stdout);

	if(sqlca.sqlcode !=0)
	{
	fprintf(fl_userlog,"FILE::IV_PrntSumCovPg_Web.pc  5 -- :|%d|\n",sqlca.sqlcode);
	APL_GOBACK_FAIL
	}

	memset(chr_l_inifile,APL_NULL_CHAR,sizeof(chr_l_inifile));
	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH") );
	strcat(chr_l_inifile,"intl_sun.cfg");

	 fprintf(fl_userlog,"Path for chr_l_inifile |%s|\n",chr_l_inifile);
	 if ( (l_finifile = fopen(chr_l_inifile,"r") ) == (FILE *) NULL )
	 {
		 fprintf(fl_userlog,"Error : Failed to Open File intl_sun.cfg\n");
		 fprintf(fl_techlog,"Error : Failed to Open File intl_sun.cfg\n");
		 APL_GOBACK_FAIL
	 }

	 fprintf(fl_userlog,"Entering CO_ReadToken Function\n");
	 memset(l_image_path,APL_NULL_CHAR,sizeof(l_image_path));
	 if (APL_FAILURE == CO_ReadToken(l_finifile,"INTL_IMG_PATH", l_image_path, l_debug_info_ptr))
	 {
		   fprintf(fl_userlog,"Error : Cannot Read INTL_IMG_PATH \n");
		   fprintf(fl_techlog,"Error : Image path not found\n");
		   APL_GOBACK_FAIL
	 }

	Alert("l_image_path :|%s|", l_image_path);
	fflush(stdout);


	fprintf(bill,"<HTML><HEAD><META http-equiv='Content-Type' content='text/html; charset=UTF-16'></META>\n");

	fprintf(bill,"%s",STYLE);
	fprintf(bill,"</HEAD><BODY>");

	fprintf(bill,"<TABLE id=\'Table3\' borderColor=\'#000000\' cellSpacing=\'0\' cellPadding=\'1\' width='100%%' border=\'0\'><tr><td borderColor='#ffffff' border='1'>&nbsp;</td><td borderColor='#ffffff' border=\'1\'>\n<BR>\n");

	fprintf(bill,"<TABLE cellSpacing='0' cellPadding='0' width='100%%' border='0' ><TR class=\'lableredbg\'><TD  width='25%%'><img src=\"%s\" width=\"150\" height=\"60\" ALIGN=\"LEFT\"></TD><TD  width='5%%'>&nbsp;</TD><td width=\'70%%\' align='left'>%s<br>%s",l_image_path,g_mt_commonsys_params_struct_h.ca_identname,g_mt_commonsys_params_struct_h.ca_address);
//shailesh 26-12-2007 ISKB_430_11C
fprintf(bill,"</TD></TR></TABLE>\n<BR>\n"); 
fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='0' width='100%%' border='0'><tr><td><b>Date</b>&nbsp;:&nbsp;%s</td></tr><tr><td>&nbsp;</td></tr><tr><td>To,</td></tr><tr><td>&nbsp;</td></tr><tr><td class='normalbold' width='85%%' align='LEFT' >%s</td></tr><tr><td  width='85%%' align='LEFT' >%s</td></tr><tr><td>%s</td></tr><tr><td>%s</td></tr><tr><td>%s</td></tr><tr><td>PIN - %s</td></tr><tr><td>%s</td></tr><tr><td>Ph : %s</td></tr>\n</table><br><br>\n\n",l_sys_date,l_client_name,l_address1,l_address2,l_city,l_state,l_pin,l_country,l_tel);	
fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='0' width='100%%' border='0'><tr><td><b><u>Kind Attn : %s</u></b></td></TR></TABLE>\n<br>\n\n",l_cln_contact2);
//(ISKB_9564)Below code changes done by Dimple Shah
fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='0' width='100%%' border='0'><tr><td>Dear Sir / Madam,</td></TR><tr><td>&nbsp;</td></tr><tr><td><u>Sub:</u> Custodial Services Advise for the month of&nbsp;<b>%s</b> for <b>%s</b>.</td></tr><tr><td>&nbsp;</td></tr><TR><td>Please find the summary of custodial services fees towards safekeeping of shares and transactions for the month of&nbsp;<b>%s</b>.</td></TR></TABLE>\n<br>\n\n",l_bill_month,l_client_name,l_bill_month);



	Alert("Client passed chr_p_client  = |%s|",chr_p_client);
	fflush(stdout);
	Alert("Client passed l_chr_client = |%s|",l_chr_client);
	fflush(stdout);
	strcpy(l_subclient_query,"SELECT DISTINCT(A.CLIENT),B.CLN_NAME ");
	strcat(l_subclient_query,"FROM IV_SERVICE_CHRG A,MT_CLIENT B,IV_CLIENTSETUP C ");
	strcat(l_subclient_query,"WHERE A.DATEOF_BILLING='");
	strcat(l_subclient_query,chr_p_billdt);
	strcat(l_subclient_query,"' AND A.MASTER_CLT = '");
	strcat(l_subclient_query,l_chr_client);
	strcat(l_subclient_query,"' AND A.CLIENT= B.CLN_CODE");
	strcat(l_subclient_query," AND A.CLIENT = C.CLIENT");
	strcat(l_subclient_query," AND C.SEND_TO_MASTER_IND ='M'");
	strcat(l_subclient_query," UNION SELECT DISTINCT(A.CLIENT),B.CLN_NAME ");
	strcat(l_subclient_query,"FROM IV_SERVICE_CHRG A,MT_CLIENT B,IV_CLIENTSETUP C ");
	strcat(l_subclient_query,"WHERE A.DATEOF_BILLING='");
	strcat(l_subclient_query,chr_p_billdt);
	strcat(l_subclient_query,"' AND A.CLIENT = '");
	strcat(l_subclient_query,l_chr_client);
	strcat(l_subclient_query,"' AND A.CLIENT= B.CLN_CODE");
	strcat(l_subclient_query," AND A.CLIENT = C.CLIENT");
	strcat(l_subclient_query," ORDER BY 1 ");

	printf("\nl_subclient_query :|%s|\n",l_subclient_query);
	fflush(stdout);

	EXEC SQL PREPARE SUBCLIENT FROM :l_subclient_query;

	EXEC SQL DECLARE subbill CURSOR FOR SUBCLIENT;	

		
	fprintf(fl_userlog, "ORA for declaration of cursor subbill -- [%d]\n", sqlca.sqlcode);
	if(sqlca.sqlcode != 0)
	{
		fprintf(fl_techlog, "Failed in declaration of cursor subbill \n");
	}


	IS_ANY_ORA_ERROR
	

	EXEC SQL OPEN subbill;
	if(sqlca.sqlcode != 0)
	{
		fprintf(fl_techlog, "Failed in opening of cursor subbill \n");
	}
	IS_ANY_ORA_ERROR

	 fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='0' width='100%%' border='0'>\n<tr>\n<td class=\'ez4\' align=\"LEFT\">Client Name</td>\n<td class=\'ez4\' align='CENTER'>&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"CENTER\">&nbsp;</td>\n<td class=\'ez4\' align=\"RIGHT\"  width =\"135\" wrap>Bill Amount for %s (%s)&nbsp;</td>\n<td class=\'ez4\' align=\"RIGHT\">Unpaid Amount (%s)&nbsp;</td>\n<td class=\'ez4\' align=\"RIGHT\">Total Amount (%s)</td>\n</tr>\n",l_bill_month,b_ccycd,b_ccycd,b_ccycd);
    fprintf(bill,"<tr><td>&nbsp;<td></tr>");

	for(;;)
	{
		memset(l_client,APL_NULL_CHAR,sizeof(l_client));
		memset(l_client_name,APL_NULL_CHAR,sizeof(l_client_name));
		EXEC SQL FETCH subbill INTO :l_client,:l_client_name;

		fprintf(fl_userlog, "Fetching cursor subbill for Client [%s] ORA -- [%d]\n", l_client, sqlca.sqlcode);
		Alert("After Fetch l_client:|%s|\n",l_client);
		fflush(stdout);
		Alert("Sqlca sqlcode |%d|",sqlca.sqlcode);
		fflush(stdout);

		if(sqlca.sqlcode == 1403)
		{
			Alert("Breaking From Loop");
			break;
		}

		/*	ISKB_2316	Client Setup of Sub-Client	*/
		Alert("Before Calling IV_Rtv_IVCUSTSETUP....");
		fflush(stdout);
		if (APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_client,
                           &l_iv_clt_setup_struct,
                           &int_retstat,
                           l_debug_info_ptr))
                          {
                                  if ( int_retstat == IV_CRITCAL_ERROR_IND)
                                  {
                                          fprintf(fl_userlog,"Fatal Error In Billing Customer Setup Table\n");
                                          CO_InsertErr(   l_debug_info_ptr,
                                                          DB_ERR_NO,
                                                          "BCUSTSETUP",
                                                          APL_NULL_STRING,
                                                          APL_NULL_STRING,
                                                          __LINE__,
                                                          __FILE__);
                                          APL_GOBACK_FAIL
                                  }
                                  else if (int_retstat == IV_NO_DATA_FOUND_ERR)
                                  {
                                          fprintf(fl_userlog,"Billing Setup Not Found For Account:%s\n",l_client);
                                          CO_InsertErr(   l_debug_info_ptr,
                                                          ERR_BILLCNTRL_PARAM_NOTFND,
                                                          APL_NULL_STRING,
                                                          APL_NULL_STRING,
                                                          APL_NULL_STRING,
                                                          __LINE__,
                                                          __FILE__);

                                          APL_GOBACK_FAIL
                                  }
                          }


		Alert("Before Calling IV_PrntSumBill_Web for Client |%s|",l_client);
		fflush(stdout);
		if (APL_FAILURE == IV_PrntSumBill_Web(bill,
					fl_techlog,
					fl_userlog,
					chr_p_billdt,
					l_client,
					l_sys_ivcntl_param_struct,
					l_iv_clt_setup_struct,
					'I',
					&p_tot_trans,
					&p_tot_cust,
					&p_tot_ca,
					&p_tot_oth,
					&p_tot_comm,
					&p_tot_adj,
					&p_tot_adj_comm,
					&p_tot_tax,
					&p_tot_educess,
					&p_tot_depo,
					&p_tot_outstanding,
					&p_final_total,
					l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Failed To Print Consolidated Bill For Account[%s]\n", l_client);
			fprintf(fl_techlog,"Failed To Print Consolidated Bill For Account[%s]\n", l_client);
			APL_GOBACK_FAIL
		}
		fprintf(bill,"<tr><td>&nbsp;</td></tr>\n"); // shailesh 26-12-2007 ISKB_430_11C

		 g_tot_trans = g_tot_trans + p_tot_trans;
		 g_tot_cust = g_tot_cust + p_tot_cust;
		 g_tot_ca = g_tot_ca + p_tot_ca;
		 g_tot_oth = g_tot_oth + p_tot_oth;
	
		 g_tot_comm = g_tot_comm + p_tot_comm;
		 g_tot_adj = g_tot_adj + p_tot_adj;
		 g_tot_adj_comm = g_tot_adj_comm + p_tot_adj_comm;
		 g_tot_tax = g_tot_tax + p_tot_tax;
		 g_tot_educess = g_tot_educess + p_tot_educess;
		 g_tot_depo = g_tot_depo + p_tot_depo;
		 g_tot_outstanding = g_tot_outstanding + p_tot_outstanding;
		 g_final_total = g_final_total + p_final_total;

	}
	EXEC SQL CLOSE subbill;	

	/********* Total bill Print ***********************************************************/

	printf("After Sub Clients Print ---- \n");
	fflush(stdout);

	fprintf(bill,"<tr class='lableredbg'>\n");
	fprintf(bill,"<td align='LEFT'>Total</td>\n"); //shailesh 26-12-2007 ISKB_430_11C


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_trans, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_trans: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	  fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
        shailesh 26-12-2007 ISKB_430_11C*/
	fprintf(bill,"<td>&nbsp;</td>\n");

       /*
	EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_cust, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_cust: l_err_desc -- %s\n", l_err_desc);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
       shailesh 26-12-2007 ISKB_430_11C */
	fprintf(bill,"<td>&nbsp;</td>\n");


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_ca, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_ca: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
       shailesh 26-12-2007 ISKB_430_11C */
	fprintf(bill,"<td>&nbsp;</td>\n");


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_oth, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_oth: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
       shailesh 26-12-2007 ISKB_430_11C */
	fprintf(bill,"<td>&nbsp;</td>\n");


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_comm, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_comm: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
        shailesh 26-12-2007 ISKB_430_11C */
	fprintf(bill,"<td>&nbsp;</td>\n");


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_adj, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_adj: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
        shailesh 26-12-2007 ISKB_430_11C */
	fprintf(bill,"<td>&nbsp;</td>\n");

	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_adj_comm, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_adj_comm: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
        shailesh 26-12-2007 ISKB_430_11C */


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_tax, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_tax: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
         shailesh 26-12-2007 ISKB_340_11C  */
	fprintf(bill,"<td>&nbsp;</td>\n");


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_educess, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_educess: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
         shailesh 26-12-2007 ISKB_340_11C  */
        fprintf(bill,"<td>&nbsp;</td>\n");


	/*EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_depo, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_depo: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
          shailesh 26-12-2007 ISKB_340_11C  */ 
      	fprintf(bill,"<td>&nbsp;</td>\n");

	EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_comm,:l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_adj_comm: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td  align='RIGHT'>%s</td>\n", l_return_value);

	EXEC SQL CALL SP_PRINT_FORMATTING(:g_tot_outstanding, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_tot_outstanding: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td  align='RIGHT'>%s</td>\n", l_return_value);


	EXEC SQL CALL SP_PRINT_FORMATTING(:g_final_total, :l_return_value, :l_err_desc);
	if(strlen(l_err_desc) > 0)
	{
		printf("JC:::::Error in formatting for g_final_total: l_err_desc -- %s\n", l_err_desc);
		fflush(stdout);
	}
	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td>\n", l_return_value);
       //shailesh 26-12-2007 ISKB_430_11C
	fprintf(bill,"</tr>\n"); 
	fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");

	fprintf(bill,"<tr class='lableredbg'><td align='LEFT'><b>Total Amount Payable</b></td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");
	fprintf(bill,"<td>&nbsp;</td>\n");

	fprintf(bill,"<td class='lableredbg' align='RIGHT'>%s</td></tr>\n", l_return_value);
	fprintf(bill,"</table>\n<br><br>\n");
 //(ISKB_9564)Below code changes done by Dimple Shah for GST
	fprintf(bill,"<table>\n<tr>\n<td class=\"normal\" width=\"100%%\" >You are requested to make the above payment within 15 days of receipt of this Advise.</td></tr><tr><td>&nbsp;</td></tr><tr><td class=\"normal\" width=\"100%%\">Incase you require any further clarification with regards to the above, please do not hesitate to contact us.</td></tr>\n");
	fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");
	fprintf(bill,"<tr><td class=\"normal\" width=\"100%%\">Regards,</td></tr>\n");
	fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");
	fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");
	fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");
	fprintf(bill,"<tr><td class=\"normal\" width=\"100%%\">Please note that this is a computer generated advise and hence does not require any signature.</td></tr>\n");
	fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");


	strcpy(chr_l_main_funcarea,"SERVICE_TAX");
	strcpy(chr_l_subfunc,"REG_NO");

	/*(ISKB_9564)Changes done by Dimple Shah for GST Starts*/
	/*if(APL_FAILURE == CO_Rtv_FldVal("SERVICE_TAX","REG_NO",&chr_l_service_reg,l_debug_info_ptr))
	{
			  APL_GOBACK_FAIL
	}*/
	if(APL_FAILURE == CO_Rtv_FldVal("GSTN_NO","GSTN_NO",&chr_l_service_reg,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
	//(ISKB_9564)Changes done by Dimple Shah for GST SAC Code
	if(APL_FAILURE == CO_Rtv_FldVal("IV_BILL_PRINT","SAC_CODE",&chr_l_sac_code,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}

	printf("Service Tax Reg No |%s|\n",chr_l_service_reg);
	fflush(stdout);
	/*Changes by Mrinal for ISKB_8060/ISKB_8558 to show a footer note in the bill -Starts */
	fprintf(bill,"<tr><td class=\"normal\" width=\"100%%\">GSTN No. %s.</td></tr><br>\n",chr_l_service_reg);
	//fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");
	fprintf(bill,"<tr><td class=\"normal\" width=\"100%%\">SAC Code of Services :%s</td></tr><br>\n",chr_l_sac_code);
	fprintf(bill,"<tr><td>&nbsp;</td></tr>\n");
	//fprintf(bill,"<tr><td class=\"normal\" width=\"100%%\">ST is Service Tax, SBC is Swachh Bharat Cess & KKC is Krishi Kalyan Cess charged at the applicable rates inforce from time to time.</td></tr></table><br>\n");
	fprintf(bill,"<tr><td class=\"normal\" width=\"100%%\">GST is Goods  & Services Tax charged at the applicable rates inforce from time to time.</td></tr><tr><td class=\"normal\" width=\"100%%\">Please note that this statement / advices should not be construed as a 'Tax invoices' under the Goods and Services Tax Law. The addressee should not avail input tax credit (if any) as reflecting on this statement / advice.</td></tr></table><br>\n");
	/*Changes done by Dimple Shah for GST Ends*/
	fflush(bill);
	/*Changes by Mrinal for ISKB_8060/ISKB_8558 to show a footer note in the bill -Ends */

	/*Added by Anjaneyulu for display FootNote in Invoice for ISKB_1737 - Starts*/
	/*printf("\nAnjaneyulu - ISKB_1737 client:%s\n",chr_p_client);
	EXEC SQL SELECT INFORMATION INTO :chr_l_footnote:i_footnote FROM IV_CLIENTSETUP WHERE CLIENT = :chr_p_client;
	IS_ANY_ORA_ERROR
	
	printf("\ni_footnote=%d\n",i_footnote);
	
	if(i_footnote == -1)
	{
		EXEC SQL SELECT INFORMATION INTO :chr_l_footnote:i_footnote FROM IV_CLIENTSETUP WHERE CLIENT = 'KOTAKBN';
	IS_ANY_ORA_ERROR
	}
	
	if(i_footnote >= 0)
	{
		//fprintf(bill,"<TABLE cellSpacing='0' cellPadding='0' width='100%%' height='60' border='0' ><TR class=\'lableredbg\'><td width=\'70%%\' align='center'>%s<br>",chr_l_footnote);
		fprintf(bill,"</TD></TR></TABLE>\n<BR>\n");
		
		fprintf(bill,"<table>\n<tr>\n<td class=\"normal\" width=\"100%%\" >%s</td></tr></table><br>\n",chr_l_footnote);
	}*/
/*Added by Anjaneyulu for display FootNote in Invoice for ISKB_1737 - End*/

	/*(ISKB_9564)Changes done by Dimple Shah for GST Starts*/
	/*fprintf(bill,"<table>\n");
	fprintf(bill,"<tr><td class=\"normal\" width=\"100%%\">Please note that this statement / advices should not be construed as a 'Tax invoices' under the Goods and Services Tax Law. The addressee should not avail input tax credit (if any) as reflecting on this statement / advice.</td></tr></table><br>\n");*/
	/*(ISKB_9564)Changes done by Dimple Shah for GST Ends*/
	fflush(bill);


//fclose(l_finifile);

RETURN_SUCCESS:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSumCovPg_Web Successfully\n",NULL,NULL);
		fclose(l_finifile);
		return(APL_SUCCESS);

RETURN_FAILURE:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSumCovPg_Web UnSuccessfully\n",NULL,NULL);
		fclose(l_finifile);
		return (APL_FAILURE);

}
