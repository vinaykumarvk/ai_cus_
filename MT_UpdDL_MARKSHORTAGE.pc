/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Master Maintenance
 *
 * File Name           :      MT_UpdDL_MARKSHORTAGE.pc
 *
 * Description         :      This file contains db functions for updating
 *                            Master Details.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description       RFS No.
 * ---------   --------  ------------     -------------     ---------
 * 23/02/2006   1.0       Rahul        New file       HDFCDL_013
 *
 *********************************************************************/


#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int CR_Proc_InstrQtyRound_Chk (double chr_p_val, char *p_instr_code, double *int_p_retval, DEBUG_INFO_STRUCT_H **l_debug_info_ptr );


int DL_ModDbDL_MARKSHORTAGE(DL_MARKSHORTAGE_STRUCT_H *p_dl_markshortage_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
	double char_l_val = 0.0;            /* Added by Gouse - Decimal Length for MF- 01/10/2011 */
	/* Variable Declarations */
  DL_MARKSHORTAGE_STRUCT_I *l_dl_markshortage_struct_i;

  struct sqlca sqlca;

  char chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
  char chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
  char chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
  short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
  short p_i_access_stamp_compare;
  short p_i_status = 0;
  int int_error_flag = APL_SUCCESS;
  int int_l_rowexists = 0;
  char  *l_key_codes[4];
  char  *l_key_values[4];
  char  chr_l_table_name[50] = APL_NULL_STRING;
  char  chr_l_field_val[40] = APL_NULL_STRING;
  char l_exch_code[4] =  APL_NULL_STRING;
  char l_mkt_type[4] =  APL_NULL_STRING; /* SLB CHANGES - AMISH */
  short i_mkt_type = 0;
  short i_exch_code = 0; 
  /** ADDED BY AMISH **/
   int int_return;
  double mark_qty = 0;
  double pool_qty = 0;
  double l_cur_qty = 0;
  double l_final_qty = 0;
/* changes by amish --01/06 */


  char l_cpclt[11] = APL_NULL_STRING;
  short i_cpclt = 0;

   /* changes by amish --27/05 */
  char l_domcpclt[11] = APL_NULL_STRING;
  short i_domcpclt = 0;

  char l_mkttype[4] = APL_NULL_STRING;
  short i_mkttype = 0;

  char l_domcp_custody[11] = APL_NULL_STRING;
  short i_domcp_custody = 0;

  char l_cp_cltname[67] = APL_NULL_STRING;
  short i_cp_cltname = 0;

  /* added by amish -31/05 --start */
  char l_dl_date[20] = APL_NULL_STRING;
  short i_dl_date = 0;

  char l_setl_date[20] = APL_NULL_STRING;
  short i_setl_date = 0;

  char l_payin_date[20] = APL_NULL_STRING;
  short i_payin_date = APL_NULL_STRING;

  char l_payout_date[20] = APL_NULL_STRING;
  short i_payout_date = 0;
/* added by amish --31/05 --end */
  /* changes by amish --01/06 -start */
  char l_dl_class[3] =  APL_NULL_STRING;
  short i_dl_class = 0;

  char l_orig_refno[17] = APL_NULL_STRING;
  short i_orig_refno = 0;
  /* added by amish --01/06 --end */
/**ADDED BY AMISH********/

  char l_locn_code[5] = APL_NULL_STRING;
  short i_locn_code = 0;
	char l_seqno[10] = APL_NULL_STRING;
	short i_seqno = 0;

 /* added by amish --02/06 --start */
	double l_avail_quant = 0;
	double l_pool_quant = 0;
 /* added by amish --02/06 --end */
/* added by amish --05/06 -- start */
	double l_orig_qty = 0;
	short i_orig_qty = 0;
/* added by amish --05/06 -- end */	

//HB_12174 - New deal column added for deal creation
	char l_trd_exch_code[4] =  APL_NULL_STRING;
	short i_trd_exch_code = 0;
	char l_trd_mkttype[4] = APL_NULL_STRING;
	short i_trd_mkttype = 0;
	char l_trd_settlement_no[16] =  APL_NULL_STRING;
	short i_trd_settlement_no = 0;
	//HB_12174 - New deal column added for deal creation
	//T1 Settlement changes CS0083804
	char l_settlement_no[16] =  APL_NULL_STRING;
	short i_settlement_no = 0;
	int auction_flag = 0;
	char l_str_start_date[APL_DATE_LEN] = APL_NULL_STRING;
	char l_str_payin_date[APL_DATE_LEN] = APL_NULL_STRING;
	char l_str_payout_date[APL_DATE_LEN] = APL_NULL_STRING;
//T1 Settlement changes CS0083804
 SYS_DL_DEAL_STRUCT_H *p_dl_deal_struct_h;
 SYS_DL_DEAL_STRUCT_I *p_dl_deal_struct_i;  	

 p_dl_deal_struct_h =(SYS_DL_DEAL_STRUCT_H *) calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
 p_dl_deal_struct_i =(SYS_DL_DEAL_STRUCT_I *) calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));  

 	APL_MALLOC_FAIL(p_dl_deal_struct_h);
  	APL_MALLOC_FAIL(p_dl_deal_struct_i);
/****************ENDS***************/

		int	int_retval = APL_SUCCESS;
#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	 APL_FUNCTION_ENTER(APL_OUT_FILE)

  l_dl_markshortage_struct_i=(DL_MARKSHORTAGE_STRUCT_I*)calloc(1,sizeof(DL_MARKSHORTAGE_STRUCT_I));

  APL_MALLOC_FAIL(l_dl_markshortage_struct_i)

  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;

  EXEC SQL BEGIN DECLARE SECTION;

  EXEC SQL VAR p_dl_markshortage_struct_h->h_settlement_no IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_checker IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_maker IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_dl_client IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_dl_ref_no IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_instr_code IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_status IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_pool_trans IS STRING;
  EXEC SQL VAR p_dl_markshortage_struct_h->h_access_stamp IS STRING;

  EXEC SQL END DECLARE SECTION;

  if (!strlen(p_dl_markshortage_struct_h->h_settlement_no)) l_dl_markshortage_struct_i->i_settlement_no =-1;
     else l_dl_markshortage_struct_i->i_settlement_no =0;
 


  if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}
/*	
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function DL_ModDbDL_MarkShortage\n",
													NULL,p_intl_envdatastruct_h);
 	}

		strcpy(p_dl_markshortage_struct_h->h_status,STATUS_UAUTH);
    l_dl_markshortage_struct_i->i_status =0;
   	strcpy(p_dl_markshortage_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_dl_markshortage_struct_i->i_maker=0;
  	strcpy(p_dl_markshortage_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_dl_markshortage_struct_i->i_maker_dt=0;
		strcpy(p_dl_markshortage_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_dl_markshortage_struct_i->i_access_stamp =0;

		EXEC SQL INSERT INTO DL_MARKSHORTAGE VALUES (:p_dl_markshortage_struct_h:l_dl_markshortage_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	}
	else
	
	{
*/
  
/* changes by amish --16/05 */ 
 printf("\n file batch no is |%d|\n",p_dl_markshortage_struct_h -> h_filebatch_no); 
	Alert("deal refno is |%s|",p_dl_markshortage_struct_h -> h_dl_ref_no);
	Alert("Client is |%s|",p_dl_markshortage_struct_h -> h_dl_client);
 fflush(stdout);
  l_key_codes[0]="DL_REF_NO";
   l_key_codes[1]="DL_CLIENT";
	l_key_codes[2]="FILEBATCH_NO";
	l_key_codes[3]=APL_NULL_STRING;
	
	l_key_values[0]=p_dl_markshortage_struct_h -> h_dl_ref_no;
	Alert("Keyvalue 1 is |%s|",l_key_values[0]);
 	fflush(stdout);
	l_key_values[1]=p_dl_markshortage_struct_h -> h_dl_client;
	Alert("Keyvalue 2 is |%s|",l_key_values[1]);
 fflush(stdout);
	 l_key_values[2]= ltoa(p_dl_markshortage_struct_h -> h_filebatch_no);
	Alert("Keyvalues 3 is |%s|",l_key_values[2]);
 fflush(stdout);
	l_key_values[3] = APL_NULL_STRING;

		
    strcpy(chr_l_table_name,"DL_MARKSHORTAGE");

     int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "ACCESS_STAMP",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

	Alert(" After Calling CR_Rtv_MastChldChrVal chk sana ");
	fflush(stdout);

		strcpy(chr_acc_stamp_compare,chr_l_field_val);
    printf("\n access stamp after mast chld val  is |%s|\n", chr_acc_stamp_compare); 
 fflush(stdout);
		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "STATUS",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_status_compare,chr_l_field_val); 
/*
	}
*/
/********************CHECK FOR QUANTITY--AMISH **********************************/
/*
   EXEC SQL select qty into :pool_qty FROM dl_poolaccdmp    
   where depo_code in
	(
	  select depo_code from dl_poolaccdmp 
		WHERE settlemt_no=:p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
		AND instr_code=:p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code
	)
	AND settlemt_no=:p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
	AND instr_code=:p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code;
*/	

  /* changes by amish --26/05 */ 
	 printf("\n *****************before query execute **********************************************************\n");
	printf("\n settlement no is |%s|\n",p_dl_markshortage_struct_h->h_settlement_no);
 fflush(stdout);
	printf("\ninstr code is |%s|\n",p_dl_markshortage_struct_h->h_instr_code);
 fflush(stdout);
	printf("\n depo code is |%s|\n",p_dl_markshortage_struct_h->h_depo_cd);
 fflush(stdout);
	printf("\n file batch no is|%d| \n",p_dl_markshortage_struct_h->h_filebatch_no);
 fflush(stdout);
	 
   EXEC SQL select nvl(qty,0) into :pool_qty FROM dl_poolaccdmp 
	where	
	 settlemt_no=:p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
	AND instr_code=:p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code
	/* commented by amish 31/05-- */
	/*
	 AND DEPO_CODE = :p_dl_markshortage_struct_h->h_depo_cd:l_dl_markshortage_struct_i->i_depo_cd
	 */
	AND FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no:l_dl_markshortage_struct_i->i_filebatch_no
	AND MKT_TYPE IN (SELECT MKT_TYPE FROM DL_DEAL 
							WHERE IDENTIY_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
							AND CLIENT = :p_dl_markshortage_struct_h->h_dl_client);

				/* SLB CHANGES - AMISH 12042008 */
	printf("\n sqlca code for query in pool acc table is |%d|\n",sqlca.sqlcode);
 fflush(stdout);

	printf("\n sqlca code for query in poolaccdump table  is |%d|\n",sqlca.sqlcode);
 fflush(stdout);
    printf("\n QTY IN POOLACCDMP TABLE IS |%lf|\n",pool_qty);
 fflush(stdout);

    IS_ANY_ORA_ERROR;	

 /* changes by amish --26/05 */
 	EXEC SQL SELECT MKT_TYPE INTO :l_mkt_type:i_mkt_type FROM DL_DEAL 
								WHERE IDENTIY_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
								AND CLIENT = :p_dl_markshortage_struct_h->h_dl_client;

				IS_ANY_ORA_ERROR;

   EXEC SQL select nvl(sum(a.avail_qty),0) into :mark_qty from dl_markshortage A ,DL_DEAL B
   where a.settlement_no = :p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
   AND a.instr_code = :p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code
   AND a.FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no:l_dl_markshortage_struct_i->i_filebatch_no
   AND a.STATUS in ('UU','AA')
   AND B.MKT_TYPE = :l_mkt_type
   AND a.dl_client= B.CLIENT
   AND A.DL_REF_NO = B.IDENTIY_NO;

	/* changes by amish --01/06 */
	printf("\n sqlca code for query in markshortage table is |%d|\n",sqlca.sqlcode);
 fflush(stdout);
	printf("\n QTY IN markshortage TABLE IS |%lf|\n",mark_qty);
 fflush(stdout);
   IS_ANY_ORA_ERROR;	


    EXEC SQL select nvl(avail_qty,0) into :l_cur_qty from dl_markshortage 
	WHERE 
	FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no:l_dl_markshortage_struct_i->i_filebatch_no
	and DL_REF_NO = :p_dl_markshortage_struct_h->h_dl_ref_no:l_dl_markshortage_struct_i->i_dl_ref_no
	and DL_CLIENT = :p_dl_markshortage_struct_h->h_dl_client:l_dl_markshortage_struct_i->i_dl_client
	and instr_code = :p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code;
	/* changes by amish --01/06 */
	printf("\n sqlca code for fetchin available quantity of current record  |%d|\n",sqlca.sqlcode);
 fflush(stdout);
	printf("\n QTY of current record in markshortage TABLE IS |%lf|\n",l_cur_qty);
 fflush(stdout);


   IS_ANY_ORA_ERROR;	

	l_final_qty = mark_qty - l_cur_qty + p_dl_markshortage_struct_h->h_avail_qty;

	printf("\n final available quantity in markshortage table is |%lf|\n",l_final_qty);
 	fflush(stdout);
   /* Added by Gouse - Decimal Length for MF- 01/10/2011 - Start */
   IF_COND_EXISTS("QTY_RND_MF_MKT","QTY_RND_FOR_MF_MKT")
   {
        CR_Proc_InstrQtyRound_Chk(p_dl_markshortage_struct_h->h_avail_qty,p_dl_markshortage_struct_h->h_instr_code, &char_l_val, l_debug_info_ptr );
        p_dl_markshortage_struct_h->h_avail_qty =char_l_val;
	Alert("Chk : Available Qty in condition = |%lf|",p_dl_markshortage_struct_h->h_avail_qty);
	fflush(stdout);
   }
    
	//T1 Settlement changes CS0083804
	EXEC SQL select MKT_TYPE, EXCH_CODE into :p_dl_markshortage_struct_h->h_mkt_type,:p_dl_markshortage_struct_h->h_exch_code from dl_markshortage 
	WHERE 
	FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no:l_dl_markshortage_struct_i->i_filebatch_no
	and DL_REF_NO = :p_dl_markshortage_struct_h->h_dl_ref_no:l_dl_markshortage_struct_i->i_dl_ref_no
	and DL_CLIENT = :p_dl_markshortage_struct_h->h_dl_client:l_dl_markshortage_struct_i->i_dl_client
	and settlement_no = :p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no;
	//T1 Settlement changes CS0083804
		printf("\n sqlca code for fetchin MKT_TYPE ,EXCH_CODE  |%d|\n",sqlca.sqlcode);
 fflush(stdout);
 IS_ANY_ORA_ERROR
	Alert("\n p_dl_markshortage_struct_h->h_mkt_type |%s|\n",p_dl_markshortage_struct_h->h_mkt_type);
	Alert("\n p_dl_markshortage_struct_h->h_exch_code |%s|\n",p_dl_markshortage_struct_h->h_exch_code);

 
	if( (!strcmp(p_dl_markshortage_struct_h->h_mkt_type,"14")&& (strcmp(p_dl_markshortage_struct_h->h_exch_code,"NSE") == 0)) ||
		(!strcmp(p_dl_markshortage_struct_h->h_mkt_type,"4")&& (strcmp(p_dl_markshortage_struct_h->h_exch_code,"BSE") == 0)) ||
		(!strcmp(p_dl_markshortage_struct_h->h_mkt_type,"02")&& (strcmp(p_dl_markshortage_struct_h->h_exch_code,"MCS") == 0)))
		{
			EXEC SQL SELECT START_DATE,PAY_IN_DT,PAY_OUT_DT INTO :l_str_start_date,l_str_payin_date,l_str_payout_date FROM MT_SETTL_CAL
			WHERE SETTL_NO=:p_dl_markshortage_struct_h->h_settlement_no
			AND SETTL_TYPE=:p_dl_markshortage_struct_h->h_mkt_type
			AND EXCH_CODE=:p_dl_markshortage_struct_h->h_exch_code;
			Alert("sqlca.sqlcode==>|%d|",sqlca.sqlcode);
			Alert("l_str_start_date==>|%s|",l_str_start_date);
			Alert("l_str_payin_date==>|%s|",l_str_payin_date);
			Alert("l_str_payout_date==>|%s|",l_str_payout_date);
			Alert("shrinath");
			IS_ANY_ORA_ERROR
			auction_flag=1;
		}
		//T1 Settlement changes CS0083804
    /* Added by Gouse - Decimal Length for MF- 01/10/2011 - End */
   if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
	{
		 if(l_final_qty <= pool_qty)
			{
				    printf(" \n QTY WITHIN LIMIT \n");
 fflush(stdout);
				  	p_i_checker =-1;
					p_i_checkerdt =-1;
					strcpy(p_dl_markshortage_struct_h->h_checker,APL_NULL_STRING);
					strcpy(p_dl_markshortage_struct_h->h_checker_dt,APL_NULL_STRING);

					APL_IF_DEBUG
					{
						CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function MT_ModDBNoDlvDet\n",
						NULL,p_intl_envdatastruct_h);
					}
					printf("\n IN MODIFY MODE-------------\n");
					fflush(stdout);
					printf("\n access stamp h_access_stamp---------|%s|\n",p_dl_markshortage_struct_h->h_access_stamp);
					fflush(stdout);
					printf("\n access stamp chr_acc_stamp_compare----|%s|\n",chr_acc_stamp_compare);
					fflush(stdout);
					if (!strcmp(p_dl_markshortage_struct_h->h_access_stamp,chr_acc_stamp_compare))
					 {
						strcpy(p_dl_markshortage_struct_h->h_access_stamp,chr_sys_access_stamp);
						printf("\n access stamp h_access_stamp---------|%s|\n",p_dl_markshortage_struct_h->h_access_stamp);
					fflush(stdout);

						l_dl_markshortage_struct_i->i_access_stamp =0;
						strcpy(p_dl_markshortage_struct_h->h_status,STATUS_UAUTH);
						l_dl_markshortage_struct_i->i_status =0;



						EXEC SQL UPDATE DL_MARKSHORTAGE  SET 
						MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
						MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
						CHECKER =:p_dl_markshortage_struct_h->h_checker:p_i_checker,
						CHECKER_DT =:p_dl_markshortage_struct_h->h_checker:p_i_checkerdt,
						SETTLEMENT_NO =:p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no,
						DL_CLIENT =:p_dl_markshortage_struct_h->h_dl_client:l_dl_markshortage_struct_i->i_dl_client,
						DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no:l_dl_markshortage_struct_i->i_dl_ref_no,
						INSTR_CODE=:p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code,
						QTY =:p_dl_markshortage_struct_h->h_qty:l_dl_markshortage_struct_i->i_qty,
						AVAIL_QTY =:p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
						ALLOT_QTY=:p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,/* CHNAGES BY AMISH --01/06 */
						SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
						POOL_TRANS=:p_dl_markshortage_struct_h->h_pool_trans:l_dl_markshortage_struct_i->i_pool_trans,
						
						STATUS=:p_dl_markshortage_struct_h->h_status:l_dl_markshortage_struct_i->i_status
						WHERE 
						DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
						AND DL_CLIENT = :p_dl_markshortage_struct_h->h_dl_client
						AND FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no;/* changes by amish --01/06 */
                  /* CHANGES BY AMISH --16/05 */
						Alert("SQLCA.sqlcode = |%d|",sqlca.sqlcode);
						fflush(stdout);
						IS_ANY_ORA_ERROR;	

						EXEC SQL UPDATE DL_DEAL SET 
						AVAIL_QTY = :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
						SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty
						WHERE
						IDENTIY_NO = :p_dl_markshortage_struct_h->h_dl_ref_no
						AND CLIENT = :p_dl_markshortage_struct_h->h_dl_client;
				
						/* CHANGES BY AMISH --16/05 */
						printf("\nUPDATE IN DEAL TABLE IN MODIFY MODE |%d|\n",sqlca.sqlcode);
						fflush(stdout);
						IS_ANY_ORA_ERROR;

						
					 }
					 else 
					 {
						if (CO_InsertErr
							(l_debug_info_ptr,
							 ERR_ACCESSSTAMP_CHGD, 
							 APL_NULL_STRING,
							 APL_NULL_STRING,
							 APL_NULL_STRING,
							 __LINE__,
							 __FILE__
							) != APL_SUCCESS)
							APL_GOBACK_FAIL
							APL_GOBACK_FAIL
					  } 
			}
			else
			{
				 printf(" \n QTY OUT OF LIMIT \n");
						fflush(stdout);
				 if (CO_InsertErr
					(l_debug_info_ptr,
					 ERR_DL_MARKSHORTAGE_QTY_INVALID, 
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 __LINE__,
					 __FILE__
					) != APL_SUCCESS)
					APL_GOBACK_FAIL
					APL_GOBACK_FAIL	
			 }

	}
	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered authorize of Function MT_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

		if (!strcmp(p_dl_markshortage_struct_h->h_access_stamp,chr_acc_stamp_compare))
		  {
   			if(strcmp(p_dl_markshortage_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
	    		strcpy(p_dl_markshortage_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_dl_markshortage_struct_i->i_access_stamp =0;
   	    		strcpy(p_dl_markshortage_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_dl_markshortage_struct_i->i_checker=0;
  				strcpy(p_dl_markshortage_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_dl_markshortage_struct_i->i_checker_dt=0;
				strcpy(p_dl_markshortage_struct_h->h_status,STATUS_AUTH);
	    		l_dl_markshortage_struct_i->i_status =0;
				/*
				strcpy(p_dl_deal_struct_h->h_indentity_no,"MS_");
				
				strcat(p_dl_deal_struct_h->h_indentity_no,p_dl_markshortage_struct_h->h_dl_ref_no);
				*/
				
				printf("\n in auth mode------------------------ \n");
						fflush(stdout);
				/* SLB CHANGES 12042008 */
				EXEC SQL SELECT MKT_TYPE INTO :l_mkt_type:i_mkt_type FROM DL_DEAL 
								WHERE IDENTIY_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
								AND CLIENT = :p_dl_markshortage_struct_h->h_dl_client;

				IS_ANY_ORA_ERROR;

				EXEC SQL select nvl(qty,0) into :l_pool_quant FROM dl_poolaccdmp    
				WHERE
				FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no
				AND settlemt_no=:p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
				AND instr_code=:p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code
				AND MKT_TYPE IN (SELECT MKT_TYPE FROM DL_DEAL 
								WHERE IDENTIY_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
								AND CLIENT = :p_dl_markshortage_struct_h->h_dl_client);
				/* SLB CHANGES - AMISH 12042008 */
				printf("\n sqlca code for query in pool acc table is |%d|\n",sqlca.sqlcode);
						fflush(stdout);
				 IS_ANY_ORA_ERROR;
				
				printf("\n QTY IN POOLACCDMP TABLE IS |%lf|\n",l_pool_quant);
						fflush(stdout);

				/* changes by amish -- 01/06 */
				EXEC SQL select nvl(sum(A.AVAIL_QTY),0) into :l_avail_quant from dl_markshortage A ,DL_DEAL B
				where A.settlement_no = :p_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
				and A.instr_code = :p_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code
				and A.FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no
				AND B.MKT_TYPE = :l_mkt_type
				AND a.dl_client= B.CLIENT
                 AND A.DL_REF_NO = B.IDENTIY_NO;


              /* SLB CHANGES - AMISH 12042008 */
				
				printf("\n sqlca code for query in markshortage table is |%d|\n",sqlca.sqlcode);
						fflush(stdout);
				IS_ANY_ORA_ERROR;	
				
				printf("\n QTY IN dl_markshortage TABLE IS |%lf|\n",l_avail_quant);
						fflush(stdout);
				if(l_pool_quant == l_avail_quant)
				{
						strcpy(p_dl_deal_struct_h->h_origindentity_no,p_dl_markshortage_struct_h->h_dl_ref_no);
						strcpy(p_dl_deal_struct_h->h_dl_client,p_dl_markshortage_struct_h->h_dl_client);
						printf("\nclient IN AUT is : %s\n",p_dl_deal_struct_h->h_dl_client);
						fflush(stdout);
						printf("AMISH--------Orig Identity No is IS |%s| \n",p_dl_deal_struct_h->h_origindentity_no);
						fflush(stdout);
						strcpy(p_dl_deal_struct_h->h_dlt,chr_sys_access_stamp);
						strcpy(p_dl_deal_struct_h->h_setldt,chr_sys_access_stamp);
						/*
						strcpy(p_dl_deal_struct_h->h_origindentity_no,p_dl_deal_struct_h->h_indentity_no);	
						*/
						/* changes by amish -05/06 */
						/*
						p_dl_deal_struct_h->h_origquantity=p_dl_markshortage_struct_h->h_qty;
						*/

						/*
						strcpy(chr_sys_date,chr_sys_access_stamp);
						*/
						printf("\n this is yours p_dl_deal_struct_h->h_dl_client %s \n",p_dl_deal_struct_h->h_dl_client);      
						fflush(stdout);
						strcpy(p_dl_deal_struct_h->h_deal_status,STATUS_CONF);
						strcpy(p_dl_deal_struct_h->h_dl_secstatus,STATUS_CONF);
						strcpy(p_dl_deal_struct_h->h_dl_mnystatus,STATUS_CONF); 
						
						 /* changes by amish --27/05 */
						/* changes by amish --31/05 */
						//HB_12174 - new columns added - Interoperability
						EXEC SQL SELECT EXCH_CODE,CP_CLT,DOMESTIC_CPCLT,MKT_TYPE,DOMCP_CUSTODYCLT,CP_CLTNAME,DEAL_DATE,
							  SETL_DATE,PAYIN_DT,PAYOUT_DT,DL_CLASS,ORIG_REFNO,LOCATION_CD,ORIG_QTY,TRD_EXCH,TRD_MKT_TYPE,TRD_SETL_NO,SETTLEMENT_NO
							into :l_exch_code:i_exch_code,:l_cpclt:i_cpclt,:l_domcpclt:i_domcpclt,:l_mkttype:i_mkttype,:l_domcp_custody:i_domcp_custody,:l_cp_cltname:i_cp_cltname,:l_dl_date:i_dl_date,:l_setl_date:i_setl_date,:l_payin_date:i_payin_date,:l_payout_date:i_payout_date,:l_dl_class:i_dl_class,:l_orig_refno:i_orig_refno,:l_locn_code:i_locn_code,:l_orig_qty:i_orig_qty,:l_trd_exch_code:i_trd_exch_code ,:l_trd_mkttype:i_trd_mkttype,:l_trd_settlement_no:i_trd_settlement_no,l_settlement_no:i_settlement_no 
							FROM DL_DEAL
							WHERE
							CLIENT = :p_dl_deal_struct_h->h_dl_client
							AND IDENTIY_NO = :p_dl_markshortage_struct_h->h_dl_ref_no;
						IS_ANY_ORA_ERROR
								if(auction_flag==1)
								{
								strcpy(p_dl_deal_struct_h->h_settlement_no,l_settlement_no);
								}
								else
								{
								strcpy(p_dl_deal_struct_h->h_settlement_no,p_dl_markshortage_struct_h->h_settlement_no);	
								}
							//HB_12174 - new columns added - Interoperability
							strcpy(p_dl_deal_struct_h->h_trd_exch,l_trd_exch_code);
							strcpy(p_dl_deal_struct_h->h_trd_setl_no,l_trd_settlement_no);
							//HB_12174 - new columns added - Interoperability
							
							Alert("\n HB_12174 Traded Exch : |%s| \n",l_trd_exch_code);
							
						strcpy(p_dl_deal_struct_h->h_exch_code,l_exch_code);
						strcpy(p_dl_deal_struct_h->h_countclt,l_cpclt);
						/* changes by amish --27/05 */
						strcpy(p_dl_deal_struct_h->h_domcpclt_cd,l_domcpclt);
						/* SLB CHANGES - AMISH 04042008*/
						/* strcpy(p_dl_deal_struct_h->h_mkt_type,l_mkttype); */

						     if( (!strcmp(l_exch_code,"NSE")) &&  (!strcmp(l_mkttype,"23") || !strcmp(l_mkttype,"24") || !strcmp(l_mkttype,"25")))
						     {
						           strcpy(p_dl_deal_struct_h->h_mkt_type,"25");
								   strcpy(p_dl_deal_struct_h->h_trd_mkt_type,"25"); //HB_12174 - new columns added - Interoperability
						     }
						     else if( (!strcmp(l_exch_code,"BSE")) &&  (!strcmp(l_mkttype,"18") || !strcmp(l_mkttype,"19") || !strcmp(l_mkttype,"20")))
						     {
						          strcpy(p_dl_deal_struct_h->h_mkt_type,"20");
								  strcpy(p_dl_deal_struct_h->h_trd_mkt_type,"20"); //HB_12174 - new columns added - Interoperability
						     }
			                 else
		                     {
						            strcpy(p_dl_deal_struct_h->h_mkt_type,l_mkttype);
									strcpy(p_dl_deal_struct_h->h_trd_mkt_type,l_trd_mkttype); //HB_12174 - new columns added - Interoperability
			                 }	
						/* SLB CHANGES - AMISH 04042008*/
						strcpy(p_dl_deal_struct_h->h_domcp_custodyclt,l_domcp_custody);
						 strcpy(p_dl_deal_struct_h->h_countcltnm,l_cp_cltname);
						 /* changes by amish --31/05 --start */
						 strcpy(p_dl_deal_struct_h->h_dlt,l_dl_date);
						 strcpy(p_dl_deal_struct_h->h_setldt,l_setl_date);
						 strcpy(p_dl_deal_struct_h->h_payin_dt,l_payin_date);
						 strcpy(p_dl_deal_struct_h->h_payout_dt,l_payout_date);
						 /* changes by amish -- 31/05 --end */
							printf("\nEXCHANGE CODE IS |%s|\n",p_dl_deal_struct_h->h_exch_code);
						fflush(stdout);
							 printf("\ncounter party  IS |%s|\n",l_cpclt);
						fflush(stdout);
							 printf("\n deal class is |%s|\n",l_dl_class);
						fflush(stdout);
							 strcpy(p_dl_deal_struct_h->h_loccode,l_locn_code);
							 /* changes by amish -- 05/06 */
							 p_dl_deal_struct_h->h_origquantity=l_orig_qty;
							 printf("\n location code is |%s|\n",p_dl_deal_struct_h->h_loccode);
						fflush(stdout);
							 printf("\n ORIGINAL QUANTITY IS |%lf|\n",p_dl_deal_struct_h->h_origquantity);
						fflush(stdout);
							if(!strcmp(l_dl_class,SHORTAGERDEAL))
								{
									printf("\nin ifffffffffffffffffffff\n");
						fflush(stdout);
									 strcpy(p_dl_deal_struct_h->h_origindentity_no,l_orig_refno);
								}
							else
								{
									printf("\n in else *********************8\n");
						fflush(stdout);
									 strcpy(p_dl_deal_struct_h->h_origindentity_no,p_dl_markshortage_struct_h->h_dl_ref_no);	
								}	
						if(p_dl_markshortage_struct_h->h_shortage_qty == 0)
							 {  
								/*
									p_dl_deal_struct_h->h_allot_qty = p_dl_markshortage_struct_h->h_allot_qty;	
									int_return=DL_Mod_DefaultDealMS(p_dl_deal_struct_h,p_dl_markshortage_struct_h,p_intl_envdatastruct_h,l_debug_info_ptr); 
									*/
									//T1 Settlement changes CS0083804
									if(auction_flag==1)
									{
										Alert("if auction_flag");
											EXEC SQL UPDATE DL_DEAL SET 
									QTY = :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
									ALLOT_QTY = :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
									SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
									AVAIL_QTY= 0,
/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  LOG NO 351
									MKT_TYPE=:p_dl_markshortage_struct_h->h_mkt_type,
									SETTLEMENT_NO=:p_dl_markshortage_struct_h->h_settlement_no,
									DEAL_DATE=:l_str_start_date,
									SETL_DATE=:l_str_payin_date,
									PAYIN_DT=:l_str_payin_date,
									PAYOUT_DT=:l_str_payout_date
									WHERE
									IDENTIY_NO = :p_dl_markshortage_struct_h->h_dl_ref_no
									AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
									/* CHANGES BY AMISH --16/05 */	
									printf("\nUPDATE IN DEAL TABLE IN AUT MODE(SHORTAGE=0) |%d|\n",sqlca.sqlcode);
									IS_ANY_ORA_ERROR;									
									}
									else
									{
										EXEC SQL UPDATE DL_DEAL SET 
									QTY = :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
									ALLOT_QTY = :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
									SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
									AVAIL_QTY= 0
/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  LOG NO 351
									WHERE
									IDENTIY_NO = :p_dl_markshortage_struct_h->h_dl_ref_no
									AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
									/* CHANGES BY AMISH --16/05 */	
									printf("\nUPDATE IN DEAL TABLE IN AUT MODE(SHORTAGE=0) |%d|\n",sqlca.sqlcode);
									IS_ANY_ORA_ERROR;									
									}


					
							 }
							else
							 {

									//T1 Settlement changes CS0083804
									if(auction_flag==1)
									{
										Alert("else auction_flag");
									printf("\n UPDATING  PARTIAL_IND_B as Y ");
									fflush(stdout);
  							  /* shailesh 31-03-2008 ISKB 1028 Issue Log 111 changes for RSTT tag in message */ 
								EXEC SQL UPDATE DL_DEAL 
									SET
								   QTY      =  :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,	
									ALLOT_QTY = :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
								SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
									AVAIL_QTY= 0, 
									PARTIAL_IND_B= 'Y', /* shailesh 31-03-2008  ISKB 1028 Issue Log 111*/ 
/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  - LOG NO 351									MKT_TYPE=:p_dl_markshortage_struct_h->h_mkt_type,
									SETTLEMENT_NO=:p_dl_markshortage_struct_h->h_settlement_no,
									DEAL_DATE=:l_str_start_date,
									SETL_DATE=:l_str_payin_date,
									PAYIN_DT=:l_str_payin_date,
									PAYOUT_DT=:l_str_payout_date
									WHERE
									IDENTIY_NO = :p_dl_markshortage_struct_h->h_dl_ref_no
									AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
								printf("\nUPDATE IN DEAL TABLE IN AUT MODE |%d|\n",sqlca.sqlcode);/* CHANGES BY AMISH --16/05 */
								IS_ANY_ORA_ERROR;										
									}
									else
									{
									printf("\n UPDATING  PARTIAL_IND_B as Y ");
									fflush(stdout);
  							  /* shailesh 31-03-2008 ISKB 1028 Issue Log 111 changes for RSTT tag in message */ 
								EXEC SQL UPDATE DL_DEAL 
									SET
								   QTY      =  :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,	
									ALLOT_QTY = :p_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
								SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
									AVAIL_QTY= 0, 
									PARTIAL_IND_B= 'Y' /* shailesh 31-03-2008  ISKB 1028 Issue Log 111*/ 
/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  - LOG NO 351
									WHERE
									IDENTIY_NO = :p_dl_markshortage_struct_h->h_dl_ref_no
									AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
								printf("\nUPDATE IN DEAL TABLE IN AUT MODE |%d|\n",sqlca.sqlcode);/* CHANGES BY AMISH --16/05 */
								IS_ANY_ORA_ERROR;	
									}


								EXEC SQL SELECT DL_MARKSHORTAGESEQ.NEXTVAL INTO :l_seqno:i_seqno FROM DUAL;
								IS_ANY_ORA_ERROR;

								strcpy(p_dl_deal_struct_h->h_indentity_no,"SH_");
								strcat(p_dl_deal_struct_h->h_indentity_no,l_seqno);   	
								strcpy(p_dl_deal_struct_h->h_deal_status,STATUS_CONF);
								printf("\n*********identity no is     |%s|\n",p_dl_deal_struct_h->h_indentity_no);
						fflush(stdout);
								/*
									p_dl_deal_struct_h->h_allot_qty = p_dl_markshortage_struct_h->h_allot_qty;
									*/
								p_dl_deal_struct_h->h_qty = p_dl_markshortage_struct_h->h_shortage_qty;	
								printf("AMISH--------STATUS  IS |%s| \n",p_dl_deal_struct_h->h_deal_status);
						fflush(stdout);

								if( APL_FAILURE==DL_Mod_DefaultDealMS(p_dl_deal_struct_h,p_dl_markshortage_struct_h,p_intl_envdatastruct_h,l_debug_info_ptr))
								{
									printf("\n Unsuccessfully from DL_Mod_DefaultDealMS ");
						fflush(stdout);
									APL_GOBACK_FAIL;
								}
								if(APL_FAILURE == DL_Mod_Posn(p_dl_deal_struct_h->h_dl_client,
																		p_dl_deal_struct_h->h_instr_code,
																		p_dl_deal_struct_h->h_loccode,
																		"",
																		'C',
																		'2',
																		&p_dl_markshortage_struct_h->h_shortage_qty,
																		 'D',
																		 "FREE",
																		 l_debug_info_ptr))
								{
									APL_GOBACK_FAIL;
								}
										
																		
							/*
								EXEC SQL UPDATE DL_SAFEK
									
										SET SAFEKEEP_POS = SAFEKEEP_POS + :p_dl_markshortage_struct_h->h_avail_qty,
											
											 VAL_REC	=	VAL_REC - ( :p_dl_markshortage_struct_h->h_qty )
											 
										WHERE
											INSTR_CODE = :p_dl_deal_struct_h->h_instr_code
										AND LOCATION_CD = :p_dl_deal_struct_h->h_loccode
										AND CLIENT = :p_dl_deal_struct_h->h_dl_client
										AND BLOCK_TYPE = 'FREE';
								IS_ANY_ORA_ERROR;
							*/
											

								printf("\nAMISH-------------COMPLETED-----------------\n");
						fflush(stdout);
							 }		
						

							EXEC SQL UPDATE DL_MARKSHORTAGE SET 
							CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
							CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
							ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
							STATUS =:p_dl_markshortage_struct_h->h_status:l_dl_markshortage_struct_i->i_status
							WHERE 
							DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
							AND DL_CLIENT = :p_dl_markshortage_struct_h->h_dl_client
							AND  FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no;/* CHANGES BY AMISH --16/05 */
							IS_ANY_ORA_ERROR;	
				}
				else
				{
					if (CO_InsertErr
					(l_debug_info_ptr,
					 ERR_POOLQTY_NOTEQUAL_MARKQ, 
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 __LINE__,
					 __FILE__
					) != APL_SUCCESS)
					APL_GOBACK_FAIL;
					APL_GOBACK_FAIL;

				}
			}
	   	else  
	    	{
	    		EXEC SQL DELETE DL_MARKSHORTAGE 
				WHERE 
					DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
					AND DL_CLIENT = :p_dl_markshortage_struct_h->h_dl_client
				AND  FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no;
				/* CHANGES BY AMISH --16/05 */
				/*
					SETTLEMENT_NO =:p_dl_markshortage_struct_h->h_settlement_no AND 
					DL_CLIENT =:p_dl_markshortage_struct_h->h_dl_client AND
					DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no AND
					INSTR_CODE=:p_dl_markshortage_struct_h->h_instr_code AND
					QTY =:p_dl_markshortage_struct_h->h_qty AND
					AVAIL_QTY =:p_dl_markshortage_struct_h->h_avail_qty AND					
					ALLOT_QTY=:p_dl_markshortage_struct_h->h_allot_qty AND
					SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty AND
					POOL_TRANS=:p_dl_markshortage_struct_h->h_pool_trans;			
					STATUS=:p_dl_markshortage_struct_h->h_status; 
          */
			   IS_ANY_ORA_ERROR
	    	}
	   }
		else 
		{
			if (CO_InsertErr
					(l_debug_info_ptr,
					 ERR_ACCESSSTAMP_CHGD, 
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 __LINE__,
					 __FILE__
					) != APL_SUCCESS)
				APL_GOBACK_FAIL;
					APL_GOBACK_FAIL;
		} 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered reset of Function MT_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

		if (!strcmp(p_dl_markshortage_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(!strcmp(p_dl_markshortage_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
	    		strcpy(p_dl_markshortage_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_dl_markshortage_struct_i->i_access_stamp =0;
	   	    	strcpy(p_dl_markshortage_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_dl_markshortage_struct_i->i_checker=0;
  		    	strcpy(p_dl_markshortage_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_dl_markshortage_struct_i->i_checker_dt=0;
		   	    strcpy(p_dl_markshortage_struct_h->h_status,STATUS_AUTH);
	    		l_dl_markshortage_struct_i->i_status =0;

	    		EXEC SQL UPDATE DL_MARKSHORTAGE SET 
				CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            	CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
				ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            	STATUS =:p_dl_markshortage_struct_h->h_status:l_dl_markshortage_struct_i->i_status
				WHERE 
						DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
						AND DL_CLIENT = :p_dl_markshortage_struct_h->h_dl_client
				AND  FILEBATCH_NO = :p_dl_markshortage_struct_h->h_filebatch_no;
				/* CHANGES BY AMISH --16/05 */
				/*
					SETTLEMENT_NO =:p_dl_markshortage_struct_h->h_settlement_no AND 
					DL_CLIENT =:p_dl_markshortage_struct_h->h_dl_client AND
					DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no AND
					INSTR_CODE=:p_dl_markshortage_struct_h->h_instr_code AND
					QTY =:p_dl_markshortage_struct_h->h_qty AND
					AVAIL_QTY=:p_dl_markshortage_struct_h->h_avail_qty AND					
					ALLOT_QTY=:p_dl_markshortage_struct_h->h_allot_qty AND
					SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty AND
					POOL_TRANS=:p_dl_markshortage_struct_h->h_pool_trans;
				
			  	AND
					STATUS=:p_dl_markshortage_struct_h->h_status;  
              */
				IS_ANY_ORA_ERROR;	
			}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
		strcpy(p_dl_markshortage_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_dl_markshortage_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered delete of Function MT_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

	   if (!strcmp(p_dl_markshortage_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_dl_markshortage_struct_h->h_access_stamp,chr_sys_access_stamp);
			printf("\n access stamp in delete mode is |%s|\n", chr_sys_access_stamp);
			l_dl_markshortage_struct_i->i_access_stamp =0;
	        strcpy(p_dl_markshortage_struct_h->h_status,STATUS_DEL_UAUTH);
			 printf("\n status in delete mode is |%s|\n", p_dl_markshortage_struct_h->h_status);
			l_dl_markshortage_struct_i->i_status =0;

			EXEC SQL UPDATE DL_MARKSHORTAGE SET 
				   	MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					CHECKER =:p_dl_markshortage_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_dl_markshortage_struct_h->h_checker:p_i_checkerdt,
            		STATUS =:p_dl_markshortage_struct_h->h_status:l_dl_markshortage_struct_i->i_status,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
				WHERE 
					DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no
					AND DL_CLIENT = :p_dl_markshortage_struct_h->h_dl_client;
			/* CHANGES BY AMISH --16/05 */
			/*
					SETTLEMENT_NO =:p_dl_markshortage_struct_h->h_settlement_no AND 
					DL_CLIENT =:p_dl_markshortage_struct_h->h_dl_client AND
					DL_REF_NO =:p_dl_markshortage_struct_h->h_dl_ref_no AND
					INSTR_CODE=:p_dl_markshortage_struct_h->h_instr_code AND
					QTY =:p_dl_markshortage_struct_h->h_qty AND
					AVAIL_QTY =:p_dl_markshortage_struct_h->h_avail_qty AND					
					ALLOT_QTY=:p_dl_markshortage_struct_h->h_allot_qty AND
					SHORTAGE_QTY=:p_dl_markshortage_struct_h->h_shortage_qty AND
					POOL_TRANS=:p_dl_markshortage_struct_h->h_pool_trans;
		 
			AND
					STATUS=:p_dl_markshortage_struct_h->h_status; 
 */
              
					IS_ANY_ORA_ERROR;	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}


 if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
 APL_GOBACK_SUCCESS

 RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_dl_markshortage_struct_i);
		return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_dl_markshortage_struct_i);
		return(APL_FAILURE);
	}

}

