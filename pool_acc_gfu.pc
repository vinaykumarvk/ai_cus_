/*
 **    COPYRIGHT NOTICE
 **
 **   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 **
 **   These materials are confidential and proprietary to
 **    Polaris Software Lab Limited and no part of these materials should
 **    be reproduced, published, transmitted or distributed in any form or
 **    by any means, electronic, mechanical, photocopying, recording or
 **    otherwise, or stored in any information storage or retrieval system
 **    of any nature nor should the materials be disclosed to third parties
 **    or used in any other manner for which this is not authorized, without
 **    the prior express written authorization of Polaris Software Lab Limited.
 **/
/*********************************************************************
 **
 ** Module Name         :      DEAL PROCESSING
 **
 ** File Name           :      pool_acc_gfu.pc
 **
 ** Description         :      Pool Account Dump
 **
 **
 **
 **            Version Control Block
 **
 ** Date        Version     Author           Description        RFS No.
 ** ---------   --------  ---------------  ------------------   ---------
 ** 16/02/2006   1.0       AMOL             New File            HDFCDL_010
 **************************************************************************/

#include<stdio_64.h>
#include <stdlib.h>
#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "DL_Interface.h"
#include "BT_Common.h"
#include "Intellect_Error.h"
#include "CO_IndStructdef.h"


EXEC SQL INCLUDE SQLCA.H;

int DL_ModDBPool_Acc_GFU(DL_POOLACCDMP_STRUCT_H *p_dl_poolaccdmp_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	   /* Variable Declarations */
	  DL_POOLACCDMP_STRUCT_I *l_dl_poolaccdmp_struct_i;

	  struct sqlca sqlca;

	  int   int_retval = APL_SUCCESS;

	  /*Calloc*/
	  l_dl_poolaccdmp_struct_i=(DL_POOLACCDMP_STRUCT_I*)calloc(1,sizeof(DL_POOLACCDMP_STRUCT_I));

		APL_MALLOC_FAIL(l_dl_poolaccdmp_struct_i)


		if (!strlen(p_dl_poolaccdmp_struct_h->h_benef_acctype)) l_dl_poolaccdmp_struct_i->i_benef_acctype =-1;
		     else l_dl_poolaccdmp_struct_i->i_benef_acctype =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_mkt_type)) l_dl_poolaccdmp_struct_i->i_mkt_type =-1;
		     else l_dl_poolaccdmp_struct_i->i_mkt_type =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_settlemt_no)) l_dl_poolaccdmp_struct_i->i_settlemt_no =-1;
		     else l_dl_poolaccdmp_struct_i->i_settlemt_no =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_bl_lc_code)) l_dl_poolaccdmp_struct_i->i_bl_lc_code =-1;
		     else l_dl_poolaccdmp_struct_i->i_bl_lc_code =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_icrel_date)) l_dl_poolaccdmp_struct_i->i_icrel_date =-1;
		     else l_dl_poolaccdmp_struct_i->i_icrel_date =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_access_stamp)) l_dl_poolaccdmp_struct_i->i_access_stamp =-1;
		     else l_dl_poolaccdmp_struct_i->i_access_stamp =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_maker)) l_dl_poolaccdmp_struct_i->i_maker =-1;
		     else l_dl_poolaccdmp_struct_i->i_maker =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_maker_dt)) l_dl_poolaccdmp_struct_i->i_maker_dt =-1;
		     else l_dl_poolaccdmp_struct_i->i_maker_dt =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_checker)) l_dl_poolaccdmp_struct_i->i_checker =-1;
		     else l_dl_poolaccdmp_struct_i->i_checker =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_checker_dt)) l_dl_poolaccdmp_struct_i->i_checker_dt =-1;
		     else l_dl_poolaccdmp_struct_i->i_checker_dt =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_status)) l_dl_poolaccdmp_struct_i->i_status =-1;
		     else l_dl_poolaccdmp_struct_i->i_status =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_instr_code)) l_dl_poolaccdmp_struct_i->i_instr_code =-1;
		     else l_dl_poolaccdmp_struct_i->i_instr_code =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_depo_code)) l_dl_poolaccdmp_struct_i->i_depo_code =-1;
		     else l_dl_poolaccdmp_struct_i->i_depo_code =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_exch_code)) l_dl_poolaccdmp_struct_i->i_exch_code =-1;
		     else l_dl_poolaccdmp_struct_i->i_exch_code =0;
		if (!strlen(p_dl_poolaccdmp_struct_h->h_dp_id)) l_dl_poolaccdmp_struct_i->i_dp_id =-1;
		     else l_dl_poolaccdmp_struct_i->i_dp_id =0;

		
		printf("\n\n*********************Before Insert*********************");
		/*printf("\nOBGDAYBUYVOL |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgdaybuyvol,strlen(p_dl_nse_obl_struct_h->h_obgdaybuyvol));*/

	
		EXEC SQL INSERT INTO DL_POOLACCDMP VALUES (:p_dl_poolaccdmp_struct_h:l_dl_poolaccdmp_struct_i);
		if(sqlca.sqlcode)
		{
			printf("\n Failed SQLCODE is |%d|\n ",sqlca.sqlcode);
		 }
		IS_ANY_ORA_ERROR
		
		APL_GOBACK_SUCCESS							

		RETURN_SUCCESS: 

				printf("\n Sucess Inside DL_ModDBPool_Acc_GFU \n");		
		return(APL_SUCCESS);

		RETURN_FAILURE:
	
		printf("\n Error Inside DL_ModDBPool_Acc_GFU \n");
		return(APL_FAILURE);

} 
