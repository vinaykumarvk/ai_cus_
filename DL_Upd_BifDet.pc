
#include "stdio_64.h"
#include "Intellect_Common.h"
#include "DL_Interface.h"
#include "Intellect_Error.h"
#include "CO_IndStructdef.h"
#include "CO_Commdef.h"

EXEC SQL INCLUDE SQLCA.H;


int DL_Upd_BifDet(char *chr_p_dl_client,
				  char *chr_p_dl_identiyno,
				  char *chr_p_location_cd,
				  double *int_p_qty_oth,
				  int *int_p_multi_exists,
				  INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
				  DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	int int_l_count=0;
	double int_l_qty_oth=0;
	int int_l_multi_exists = 0;

	DL_BIFDET_STRUCT_H   *l_dl_bifdet_struct_h;

	l_dl_bifdet_struct_h =  (DL_BIFDET_STRUCT_H *)calloc(1,sizeof(DL_BIFDET_STRUCT_H));
 	APL_MALLOC_FAIL(l_dl_bifdet_struct_h);
	memset(l_dl_bifdet_struct_h,NULL,sizeof(DL_BIFDET_STRUCT_H));


		printf("\n Entered Function DL_Upd_BifDet \n");

		EXEC SQL SELECT  COUNT(*) INTO :int_l_count FROM DL_BIFDET
			WHERE client=:chr_p_dl_client
			AND identiy_no=:chr_p_dl_identiyno
			AND dp_id !=:chr_p_location_cd;

		printf("\n No of Bifurcation Records other than|%s| are|%d| ERROR=|%d|\n",chr_p_location_cd,int_l_count,sqlca.sqlcode);
	
		IS_ANY_ORA_ERROR;

		if( int_l_count > 0)
		{		
			 
			 int_l_multi_exists = 1;

			 EXEC SQL SELECT qty INTO :int_l_qty_oth FROM DL_BIFDET
					  WHERE client=:chr_p_dl_client 
					  AND identiy_no=:chr_p_dl_identiyno
					  AND dp_id != :chr_p_location_cd;
			
			printf("\n Other Qty=|%lf| ERROR=|%d|\n",int_l_qty_oth,sqlca.sqlcode);
			IS_ANY_ORA_ERROR
	
			
			*int_p_multi_exists = int_l_multi_exists;
			*int_p_qty_oth = int_l_qty_oth;
	
			printf("\n int_p_qty_oth=|%lf| ERROR=|%d|\n",*int_p_qty_oth,sqlca.sqlcode);

			printf("\n Before Returning int_p_multi_exists=|%d| \n",*int_p_multi_exists);
		}

	

APL_GOBACK_SUCCESS

RETURN_SUCCESS :

APL_IF_DEBUG
	{
		CO_ProcMonitor(   APL_OUT_FILE,"Leaving Function DL_Upd_BifDet with success\n",NULL,NULL);
	}
	return(APL_SUCCESS);

RETURN_FAILURE :

APL_IF_DEBUG
	{
		CO_ProcMonitor(  APL_OUT_FILE,"Leaving Function DL_Upd_BifDet with errors\n",&p_intl_envdatastruct_h,l_debug_info_ptr);
	}
	return(APL_FAILURE);
}

