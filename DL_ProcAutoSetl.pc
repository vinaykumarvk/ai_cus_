








#include "CO_HostStructdef.h" 
#include<stdlib.h>
#include<string.h>

EXEC SQL INCLUDE SQLCA.H;

#define	COMMIT_COUNT_G 				100
#define  PAGELENGTH 				24
#define	QUANTITY_LEN  				26
#define  CNAME_LEN_A 			66
#define	INSTR_NAME_LEN_D		  131
/* AIX Warnings removal */
#ifdef FILE_NAME_LEN
#undef FILE_NAME_LEN
#endif
#define  FILE_NAME_LEN 		99
#define  APL_FILENAME_LENGTH 		99
#define  SEPARATOR 		     "|"
#define  AMOUNT_LEN_B  				18
#define  APL_MAXLINE_SIZE 	  500 
#define  LCL_FEED_SIZE      1000
#define  LCL_ASTFILERR_SIZE    800
#define  LCL_ISIN_LEN 			13

#define  CISLO_LEN_5 		 5
#define  CISLO_LEN_6 		 6
#define  LOCAL_REFNO_LEN 	12
#define  NONSTDCD_LEN 	 8
#define  IDMACP_LEN 		11
#define  STATCD_LEN  	 3
#define  RCMACP_LEN 		13
#define  PORTI_LEN 	 	 5
#define  BUYSEL_LEN 	 	 2
#define  ISIN_LEN 			13
#define  QTY_LEN 			12
#define  AMT_LEN 		16
#define  BURZO_LEN 		11
#define  ZUCTO_LEN 		11
#define  FTRD_LEN 			11

#define  AST_MAXLINE_SIZE   500 

int main(int argc,char **argv) // AIX - Warnings removal
{
   DEBUG_INFO_STRUCT_H **l_debug_info_ptr = NULL; // AIX - Warnings removal
	INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;
	FILE *l_finifile;

	char chr_p_filename_a[APL_FILENAME_LENGTH];

   int int_l_retval=0;

	int int_num = 0;

	char **temp;
	char *y;
   char chr_uname[APL_USERID_LEN] = APL_NULL_STRING;
   char chr_custody_id_b[APL_USERID_LEN]   = APL_NULL_STRING;
   char chr_passwd[APL_PASSWD_LEN] = APL_NULL_STRING;
	char chr_l_logdir[PATH_LENGTH] = APL_NULL_STRING;
	char chr_l_uploaddir[PATH_LENGTH] = APL_NULL_STRING;
	char chr_l_inifile[PATH_LENGTH] = APL_NULL_STRING;

   EXEC SQL VAR chr_uname IS STRING;
   EXEC SQL VAR chr_custody_id_b IS STRING;
   EXEC SQL VAR chr_passwd IS STRING;

	memset(&l_intl_env_data_h, NULL, sizeof(INTL_ENV_DATA_STRUCT_H));

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	strcpy(chr_p_filename_a,APL_NULL_STRING);

  #ifdef SYS_DEBUG
	  fprintf(APL_OUT_FILE, "\n\tEntered MAIN. Going for Filename, File allocation etc\n");
  #endif

	if ( ( l_finifile=fopen(chr_l_inifile,"r") ) == NULL)
	{
		exit(-1);
	}

	

   

  APL_FETCH_DB_LOGIN_DETAILS(l_finifile, chr_custody_id_b, chr_uname, chr_passwd, APL_OUT_FILE, l_debug_info_ptr) //AIX Warning Removal



	if ( APL_FAILURE == CO_ReadToken(l_finifile,
					"INTL_LOG_PATH",
					chr_l_logdir,
					l_debug_info_ptr ))//AIX Warning Removal
	{
		exit(-1);
	}

	if ( APL_FAILURE == CO_ReadToken(l_finifile,
					"INTL_UPL_PATH",
					chr_l_uploaddir,
					l_debug_info_ptr ))//AIX Warning Removal
	{
		exit(-1);
	}

   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;

   if (sqlca.sqlcode)
   {
      exit(-1);
   }
   else
   {
		

	   fprintf(APL_OUT_FILE, "\n\tString split processtion called\n");

		if (APL_FAILURE == CO_SplitStr(	argv[9],
													'|',
													&int_num,
													&temp ))
		{
  			#ifdef SYS_DEBUG
	  			fprintf(APL_OUT_FILE, "\n\tString split processtion failed\n");
  			#endif

			exit(-1);
		}

		if (int_num ==0)
		{
			#ifdef SYS_DEBUG
				fprintf(APL_OUT_FILE, "\n\tThere were no params. Mandatory data missing\n");
			#endif

  			APL_DATA_MISSING("File Name",APL_NULL_STRING,APL_NULL_STRING)
			exit(-1);
		}

      strcpy(chr_p_filename_a, temp[1]);

		

		strcpy(l_intl_env_data_h.usr, argv[3]);
		strcpy(l_intl_env_data_h.h_mode, argv[4]);
		strcpy(l_intl_env_data_h.processtion, argv[5]);
		strcpy(l_intl_env_data_h.auth_req, argv[6]);
		strcpy(l_intl_env_data_h.subprocess, argv[7]);
		strcpy(l_intl_env_data_h.h_process, argv[8]);

		

		if (APL_FAILURE == CO_RtvSysParams(l_debug_info_ptr))//AIX Warning Removal
		{
			exit(-1);
		}

			#ifdef SYS_DEBUG
				fprintf(APL_OUT_FILE, "Successfully got Sys Params\n");
				fprintf(APL_OUT_FILE, "userid   : (%s)\n",l_intl_env_data_h.usr);
				fprintf(APL_OUT_FILE, "mode     : (%s)\n",l_intl_env_data_h.h_mode);
				fprintf(APL_OUT_FILE, "function : (%s)\n",l_intl_env_data_h.processtion);
				fprintf(APL_OUT_FILE, "auth_req : (%s)\n",l_intl_env_data_h.auth_req);
				fprintf(APL_OUT_FILE, "subfun   : (%s)\n",l_intl_env_data_h.subprocess);
				fprintf(APL_OUT_FILE, "action   : (%s)\n",l_intl_env_data_h.h_process);
				fprintf(APL_OUT_FILE, "About to call Market Price updation Fn\n");
			#endif

      	int_l_retval = DL_Proc_AutoSetl_Gen(chr_p_filename_a, 
										argv,
										chr_l_uploaddir, 
										chr_l_logdir, 
										&l_intl_env_data_h, 
										l_debug_info_ptr);//AIX Warning Removal

      	if ( int_l_retval == APL_FAILURE )
      	{
				#ifdef SYS_DEBUG
					fprintf(APL_OUT_FILE, "Unsuccessful in CR_Proc_AutoMP Exiting from main\n");
				#endif
         	exit(-1);
      	}
      	else
      	{
				#ifdef SYS_DEBUG
					fprintf(APL_OUT_FILE, "CDBAMPrcFn Successful , Exiting from main\n");
				#endif

        	 	EXEC SQL UPDATE SYS_BATCHPROC
         		SET  status = 'completed'
         			WHERE PROCESS_NAME=:argv[0]
         				AND   PROC_INIT=:argv[1]
         				AND   STARTDATE=:argv[2]
         				AND   STATUS='started';

         	EXEC SQL COMMIT WORK RELEASE;
         	exit(0);
      	}
   }

APL_GOBACK_SUCCESS // AIX - Warning removal

   RETURN_SUCCESS : exit(0);
   RETURN_FAILURE : exit(-1);
}

int DL_Proc_AutoSetl_Gen(	char *chr_p_filename_a,
						char **argv,
						char *p_uploaddir,
						char *chr_p_logdir,
						INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   

  FILE *l_fp_ASt   = NULL;
  FILE *p_logfile    = NULL;
  FILE *l_feedfile    = NULL;

  struct sqlca sqlca;

  char chr_l_now[APL_DATE_LEN] = APL_NULL_STRING;
  char chr_l_logfile_name[FILE_NAME_LEN] = APL_NULL_STRING;
  char chr_l_feedfile_name[FILE_NAME_LEN] = APL_NULL_STRING;
  char chr_l_settlementdate[APL_DATE_LEN];
  char chr_l_sysdate_b[APL_DATE_LEN];
  char chr_l_year[7];

  int int_l_error_flag = APL_SUCCESS;
  int int_l_chkflg = 0;
  int int_l_no_amprc = 0;
  int int_l_no_noamprc = 0;
  int int_l_no_unmatch = 0;

  short l_i_sysdate =0;
  short l_i_settlementdate =0;

   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;

  sqlca.sqlcode = 0;



   #ifdef SYS_DEBUG
      fprintf(APL_OUT_FILE, "Entered Function DL_Proc_AutoSetl_Gen\n");
      fprintf(APL_OUT_FILE, "The filename is : %s\n", chr_p_filename_a);
   #endif

	if (	CO_Rtv_RptFileName("3i",
						  	APL_LOGFILE_DESC,
							100,argv[5],
							argv,
							&p_logfile,
							l_debug_info_ptr) != APL_SUCCESS )//AIX Warning Removal
	{
  		APL_GOBACK_FAIL
	}

	

	memset(chr_l_settlementdate,APL_NULL_CHAR,APL_DATE_LEN);
	memset(chr_l_year,APL_NULL_CHAR,7);

	
	

	chr_l_year[0] = chr_p_filename_a[0];
	chr_l_year[1] = chr_p_filename_a[1];
	chr_l_year[2] = chr_p_filename_a[2];
	chr_l_year[3] = chr_p_filename_a[3];
	if (strcmp(chr_l_year,"FMVT") != 0)
	{
      CO_ProcMonitor(p_logfile,"Wrong Filename ! Does not match with specified format !!",NULL,NULL);
		APL_GOBACK_FAIL
	}
	memset(chr_l_year,APL_NULL_CHAR,7);
	
	chr_l_year[0] = chr_p_filename_a[4];
	chr_l_year[1] = chr_p_filename_a[5];
	chr_l_year[2] = chr_p_filename_a[6];
	chr_l_year[3] = chr_p_filename_a[7];
	chr_l_year[4] = chr_p_filename_a[8];
	chr_l_year[5] = chr_p_filename_a[9];

	EXEC SQL SELECT SYS_DATE INTO :chr_l_sysdate_b:l_i_sysdate FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR

	


	EXEC SQL SELECT DECODE(LEAST(TO_DATE(:chr_l_year,'YYMMDD'),TO_DATE(:chr_l_sysdate_b)), 
										TO_DATE(:chr_l_year,'YYMMDD'),TO_DATE(:chr_l_year,'YYMMDD'),
										TO_DATE(:chr_l_sysdate_b), ADD_MONTHS(TO_DATE(:chr_l_year,'yymmdd'),-1200))
				INTO :chr_l_settlementdate FROM DUAL;

	if( sqlca.sqlcode == -911)
	{
      CO_ProcMonitor(p_logfile,"Wrong Filename ! Does not match with specified format !!",NULL,NULL);
		APL_GOBACK_FAIL
	}

	IS_ANY_ORA_ERROR

	chr_l_settlementdate[11] ='1';
	chr_l_settlementdate[12] ='2';
											
	sqlca.sqlcode =0;

   



	

   strcpy(chr_l_feedfile_name, p_uploaddir);
   strcat(chr_l_feedfile_name, chr_p_filename_a);

   l_feedfile = fopen(chr_l_feedfile_name, "r");

	

	if (l_feedfile == NULL)
	{
  		if (CO_InsertErr
  				(l_debug_info_ptr,
  				ERR_FDFILE_NOTVALID,
  				
  				APL_NULL_STRING,
  				APL_NULL_STRING,
  				APL_NULL_STRING,
  				__LINE__,
  				__FILE__
  				) != APL_SUCCESS)
  				APL_GOBACK_FAIL
      CO_ProcMonitor(p_logfile,"File could not be opened",NULL,NULL);
  		APL_GOBACK_FAIL
	}

   

  EXEC SQL SELECT PROCESSING_STATUS INTO :chr_g_restart_data:g_restart_data_i
     FROM SYS_BATCHPROC
     WHERE PROCESS_NAME=:argv[0]
        AND   PROC_INIT=:argv[1]
        AND   STARTDATE=:argv[2]
        AND   STATUS='started'
     FOR UPDATE OF PROCESSING_STATUS,STATUS;

  if(APL_ZERO_RESULT_SET)
   {
      CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
      APL_GOBACK_FAIL
   }

  IS_ANY_ORA_ERROR

   #ifdef SYS_DEBUG
      fprintf(p_logfile, "CDBAStGenFn successfully locked the batch record\n");
   #endif

   

   if (APL_FAILURE == CO_Rtv_RptFileName( "AS", 
            "Automatic Settlement",
            160,
            argv[5],
            argv,
            &l_fp_ASt,
            l_debug_info_ptr ))
      {
      APL_GOBACK_FAIL
      }

   if (APL_FAILURE == DL_Proc_AutoSetl	(l_feedfile,
											chr_l_settlementdate,
                                 l_fp_ASt,
                                 p_logfile,
                                 argv,
                                 p_intl_envdatastruct_h,
                                 l_debug_info_ptr ))
   {
      APL_GOBACK_FAIL
   }

   APL_GOBACK_SUCCESS

     RETURN_SUCCESS :

	CO_ProcMonitor(p_logfile," Successful ! in CDBAStGenFn",l_debug_info_ptr,p_intl_envdatastruct_h);

   DL_Prnt_AutoSetl_Line(l_fp_ASt);

   if (APL_FAILURE == CO_Proc_RptClose(  l_fp_ASt,
                                       l_debug_info_ptr))
      {
      APL_GOBACK_FAIL
      }



   fclose(l_feedfile);
   fclose(p_logfile);

   return(APL_SUCCESS);

    RETURN_FAILURE :

	CO_ProcMonitor(p_logfile," Failed in CDBAStGenFn",l_debug_info_ptr,p_intl_envdatastruct_h);

	if (l_fp_ASt != NULL)
   	DL_Prnt_AutoSetl_Line(l_fp_ASt);
   fclose(l_feedfile);
   fclose(p_logfile);

	if (l_fp_ASt != NULL)
   	CO_Proc_RptClose(l_fp_ASt, l_debug_info_ptr);

   return(APL_FAILURE);
}

int DL_Proc_AutoSetl	(FILE *p_feedfile,
					 char *p_settlementdate,
                FILE *p_fp_ast,
                FILE *p_logfile,
                char **argv,
                INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
                DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{
	

 	DL_DEAL_SSTDET_STRUCT_H *l_dl_deal_sstdet_struct_h;

	struct sqlca sqlca;

	int int_ctr =0;
	int int_l_pglen_m =0;
	int int_p_reccount =0;
	int i=0;
	int int_i32 =0;
	int int_i48 =0;
	int i50 =0;
	int int_oth =0;
	int int_imax =0;
	int int_imax32 =0;
	int int_imax48 =0;
	int imax50 =0;
	int int_maxoth =0;
	int int_l_h_qty_declen =0;
	int int_l_h_amount_declen =0;

	int int_p_locrefnosize =0,int_ij =0;

	short p_i_account =0;
	short p_i_refno  =0;
	short p_i_ispartial  =0;
	short p_i_isin  =0;
	short p_i_instr_dt  =0;
	short p_i_moneydt  =0;
	short p_i_trcode  =0;
	short p_i_price  =0;
	short p_i_amount =0;
	short p_i_qty =0;
	short p_i_brkcomm  =0;
	short p_i_access_stamp  =0;
	short l_i_qty_declen =0;
	short l_i_amount_declen =0;

	char chr_p_temp_locrefno[LOCAL_REFNO_LEN];
	char chr_junk;
	char chr_p_linebuf[APL_MAXLINE_SIZE];
	char chr_p_linebuf_temp[APL_MAXLINE_SIZE];                
	char p_dealcd[APL_FLAG_LENGTH] = APL_NULL_STRING;  
	char chr_p_rep_buf[177];
	char h_instr_isin[13]= APL_NULL_STRING;
	char chr_p_buf[30];
	char chr_h_str_amount[17]=APL_NULL_STRING;
        char chr_l_str_amount[17]=APL_NULL_STRING;

	double l_h_quantity_a =0;
	double chr_l_h_amount =0;
	double h_qty =0;
	double l_db_amount =0;
	double h_amt =0,dbl_h_tmp_amount=0;

   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;

	EXEC SQL VAR h_instr_isin IS STRING;
	EXEC SQL VAR p_dealcd IS STRING;
	EXEC SQL VAR chr_h_str_amount IS STRING;

	

	char chr_p_cislo[LCL_ASTFILERR_SIZE][CISLO_LEN_5];
	char chr_p_cislo_prevodu[LCL_ASTFILERR_SIZE][CISLO_LEN_6];
	char chr_p_statcode[LCL_ASTFILERR_SIZE][STATCD_LEN];
	char chr_p_locrefno[LCL_ASTFILERR_SIZE][LOCAL_REFNO_LEN];
	char chr_p_nonstdcode[LCL_ASTFILERR_SIZE][NONSTDCD_LEN];
	char chr_p_idmacp[LCL_ASTFILERR_SIZE][IDMACP_LEN];
	char chr_p_rcmacp[LCL_ASTFILERR_SIZE][RCMACP_LEN];
	char chr_p_proti[LCL_ASTFILERR_SIZE][PORTI_LEN];
	char chr_p_buysel[LCL_ASTFILERR_SIZE][BUYSEL_LEN];
	char chr_p_isin[LCL_ASTFILERR_SIZE][ISIN_LEN];
	char p_quantity[LCL_ASTFILERR_SIZE][QTY_LEN];
	char chr_p_amount[LCL_ASTFILERR_SIZE][AMT_LEN];
	char chr_p_burzo[LCL_ASTFILERR_SIZE][BURZO_LEN];
	char chr_p_zucto[LCL_ASTFILERR_SIZE][ZUCTO_LEN];
	char chr_p_ftrd[LCL_ASTFILERR_SIZE][FTRD_LEN];
	char chr_p_temp_cislo_prevodu[CISLO_LEN_6];
        char chr_p_temp_proti[PORTI_LEN];

	

	char chr_p_cislo32[LCL_ASTFILERR_SIZE][CISLO_LEN_5];
	char chr_p_cislo_prevodu32[LCL_ASTFILERR_SIZE][CISLO_LEN_6];
	char chr_p_statcode32[LCL_ASTFILERR_SIZE][STATCD_LEN];
	char chr_p_locrefno32[LCL_ASTFILERR_SIZE][LOCAL_REFNO_LEN];
	char chr_p_nonstdcode32[LCL_ASTFILERR_SIZE][NONSTDCD_LEN];
	char chr_p_idmacp32[LCL_ASTFILERR_SIZE][IDMACP_LEN];
	char chr_p_rcmacp32[LCL_ASTFILERR_SIZE][RCMACP_LEN];
	char chr_p_proti32[LCL_ASTFILERR_SIZE][PORTI_LEN];
	char chr_p_buysel32[LCL_ASTFILERR_SIZE][BUYSEL_LEN];
	char chr_p_isin32[LCL_ASTFILERR_SIZE][ISIN_LEN];
	char chr_p_qty32[LCL_ASTFILERR_SIZE][QTY_LEN];
	char chr_p_amount32[LCL_ASTFILERR_SIZE][AMT_LEN];
	char chr_p_burzo32[LCL_ASTFILERR_SIZE][BURZO_LEN];
	char chr_p_zucto32[LCL_ASTFILERR_SIZE][ZUCTO_LEN];
	char chr_p_ftrd32[LCL_ASTFILERR_SIZE][FTRD_LEN];

	

	char chr_p_cislo48[LCL_ASTFILERR_SIZE][CISLO_LEN_5];
	char chr_p_cislo_prevodu48[LCL_ASTFILERR_SIZE][CISLO_LEN_6];
	char chr_p_statcode48[LCL_ASTFILERR_SIZE][STATCD_LEN];
	char chr_p_locrefno48[LCL_ASTFILERR_SIZE][LOCAL_REFNO_LEN];
	char chr_p_nonstdcode48[LCL_ASTFILERR_SIZE][NONSTDCD_LEN];
	char chr_p_idmacp48[LCL_ASTFILERR_SIZE][IDMACP_LEN];
	char chr_p_rcmacp48[LCL_ASTFILERR_SIZE][RCMACP_LEN];
	char chr_p_proti48[LCL_ASTFILERR_SIZE][PORTI_LEN];
	char chr_p_buysel48[LCL_ASTFILERR_SIZE][BUYSEL_LEN];
	char chr_p_isin48[LCL_ASTFILERR_SIZE][ISIN_LEN];
	char chr_p_qty48[LCL_ASTFILERR_SIZE][QTY_LEN];
	char chr_p_amount48[LCL_ASTFILERR_SIZE][AMT_LEN];
	char chr_p_burzo48[LCL_ASTFILERR_SIZE][BURZO_LEN];
	char chr_p_zucto48[LCL_ASTFILERR_SIZE][ZUCTO_LEN];
	char chr_p_ftrd48[LCL_ASTFILERR_SIZE][FTRD_LEN];

	

	char p_cislo50[LCL_ASTFILERR_SIZE][CISLO_LEN_5];
	char p_cislo_prevodu50[LCL_ASTFILERR_SIZE][CISLO_LEN_6];
	char p_statcode50[LCL_ASTFILERR_SIZE][STATCD_LEN];
	char p_locrefno50[LCL_ASTFILERR_SIZE][LOCAL_REFNO_LEN];
	char p_nonstdcode50[LCL_ASTFILERR_SIZE][NONSTDCD_LEN];
	char p_idmacp50[LCL_ASTFILERR_SIZE][IDMACP_LEN];
	char p_rcmacp50[LCL_ASTFILERR_SIZE][RCMACP_LEN];
	char p_proti50[LCL_ASTFILERR_SIZE][PORTI_LEN];
	char p_buysel50[LCL_ASTFILERR_SIZE][BUYSEL_LEN];
	char p_isin50[LCL_ASTFILERR_SIZE][ISIN_LEN];
	char p_qty50[LCL_ASTFILERR_SIZE][QTY_LEN];
	char p_amount50[LCL_ASTFILERR_SIZE][AMT_LEN];
	char p_burzo50[LCL_ASTFILERR_SIZE][BURZO_LEN];
	char p_zucto50[LCL_ASTFILERR_SIZE][ZUCTO_LEN];
	char p_ftrd50[LCL_ASTFILERR_SIZE][FTRD_LEN];


	

	l_dl_deal_sstdet_struct_h = (DL_DEAL_SSTDET_STRUCT_H *)calloc(1,sizeof(DL_DEAL_SSTDET_STRUCT_H));

	

	if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
    		{APL_GOBACK_FAIL }

	for(i=0;i<LCL_ASTFILERR_SIZE;i++)
	{
		memset(chr_p_cislo[i],'\0',CISLO_LEN_5);
		memset(chr_p_cislo_prevodu[i],'\0',CISLO_LEN_6);
		memset(chr_p_statcode[i],'\0',STATCD_LEN);
		memset(chr_p_locrefno[i],'\0',LOCAL_REFNO_LEN);
		memset(chr_p_nonstdcode[i],'\0',NONSTDCD_LEN);
		memset(chr_p_idmacp[i],'\0',IDMACP_LEN);
		memset(chr_p_rcmacp[i],'\0',RCMACP_LEN);
		memset(chr_p_proti[i],'\0',PORTI_LEN);
		memset(chr_p_buysel[i],'\0',BUYSEL_LEN);
		memset(chr_p_isin[i],'\0',ISIN_LEN);
		memset(p_quantity[i],'\0',QTY_LEN);
		memset(chr_p_amount[i],'\0',AMT_LEN);
		memset(chr_p_burzo[i],'\0',BURZO_LEN);
		memset(chr_p_zucto[i],'\0',ZUCTO_LEN);
		memset(chr_p_ftrd[i],'\0',FTRD_LEN);

		memset(chr_p_cislo32[i],'\0',CISLO_LEN_5);
		memset(chr_p_cislo_prevodu32[i],'\0',CISLO_LEN_6);
		memset(chr_p_statcode32[i],'\0',STATCD_LEN);
		memset(chr_p_locrefno32[i],'\0',LOCAL_REFNO_LEN);
		memset(chr_p_nonstdcode32[i],'\0',NONSTDCD_LEN);
		memset(chr_p_idmacp32[i],'\0',IDMACP_LEN);
		memset(chr_p_rcmacp32[i],'\0',RCMACP_LEN);
		memset(chr_p_proti32[i],'\0',PORTI_LEN);
		memset(chr_p_buysel32[i],'\0',BUYSEL_LEN);
		memset(chr_p_isin32[i],'\0',ISIN_LEN);
		memset(chr_p_qty32[i],'\0',QTY_LEN);
		memset(chr_p_amount32[i],'\0',AMT_LEN);
		memset(chr_p_burzo32[i],'\0',BURZO_LEN);
		memset(chr_p_zucto32[i],'\0',ZUCTO_LEN);
		memset(chr_p_ftrd32[i],'\0',FTRD_LEN);

		memset(chr_p_cislo48[i],'\0',CISLO_LEN_5);
		memset(chr_p_cislo_prevodu48[i],'\0',CISLO_LEN_6);
		memset(chr_p_statcode48[i],'\0',STATCD_LEN);
		memset(chr_p_locrefno48[i],'\0',LOCAL_REFNO_LEN);
		memset(chr_p_nonstdcode48[i],'\0',NONSTDCD_LEN);
		memset(chr_p_idmacp48[i],'\0',IDMACP_LEN);
		memset(chr_p_rcmacp48[i],'\0',RCMACP_LEN);
		memset(chr_p_proti48[i],'\0',PORTI_LEN);
		memset(chr_p_buysel48[i],'\0',BUYSEL_LEN);
		memset(chr_p_isin48[i],'\0',ISIN_LEN);
		memset(chr_p_qty48[i],'\0',QTY_LEN);
		memset(chr_p_amount48[i],'\0',AMT_LEN);
		memset(chr_p_burzo48[i],'\0',BURZO_LEN);
		memset(chr_p_zucto48[i],'\0',ZUCTO_LEN);
		memset(chr_p_ftrd48[i],'\0',FTRD_LEN);

		memset(p_cislo50[i],'\0',CISLO_LEN_5);
		memset(p_cislo_prevodu50[i],'\0',CISLO_LEN_6);
		memset(p_statcode50[i],'\0',STATCD_LEN);
		memset(p_locrefno50[i],'\0',LOCAL_REFNO_LEN);
		memset(p_nonstdcode50[i],'\0',NONSTDCD_LEN);
		memset(p_idmacp50[i],'\0',IDMACP_LEN);
		memset(p_rcmacp50[i],'\0',RCMACP_LEN);
		memset(p_proti50[i],'\0',PORTI_LEN);
		memset(p_buysel50[i],'\0',BUYSEL_LEN);
		memset(p_isin50[i],'\0',ISIN_LEN);
		memset(p_qty50[i],'\0',QTY_LEN);
		memset(p_amount50[i],'\0',AMT_LEN);
		memset(p_burzo50[i],'\0',BURZO_LEN);
		memset(p_zucto50[i],'\0',ZUCTO_LEN);
		memset(p_ftrd50[i],'\0',FTRD_LEN);
	}
	i =0;
                   		
	while(!feof(p_feedfile))
	{
		

		memset(chr_p_cislo[i],'\0',CISLO_LEN_5);
		memset(chr_p_cislo_prevodu[i],'\0',CISLO_LEN_6);
		memset(chr_p_statcode[i],'\0',STATCD_LEN);
		memset(chr_p_locrefno[i],'\0',LOCAL_REFNO_LEN);
		memset(chr_p_nonstdcode[i],'\0',NONSTDCD_LEN);
		memset(chr_p_idmacp[i],'\0',IDMACP_LEN);
		memset(chr_p_rcmacp[i],'\0',RCMACP_LEN);
		memset(chr_p_proti[i],'\0',PORTI_LEN);
		memset(chr_p_buysel[i],'\0',BUYSEL_LEN);
		memset(chr_p_isin[i],'\0',ISIN_LEN);
		memset(p_quantity[i],'\0',QTY_LEN);
		memset(chr_p_amount[i],'\0',AMT_LEN);
		memset(chr_p_burzo[i],'\0',BURZO_LEN);
		memset(chr_p_zucto[i],'\0',ZUCTO_LEN);
		memset(chr_p_ftrd[i],'\0',FTRD_LEN);


		

	  	

		memset(chr_p_linebuf_temp,APL_NULL_CHAR,APL_MAXLINE_SIZE);
		fscanf(p_feedfile,"%[^\n]\n",chr_p_linebuf_temp);                         
		memset(chr_p_linebuf,APL_NULL_CHAR,APL_MAXLINE_SIZE);
		CO_Trim(chr_p_linebuf_temp,' ','L',chr_p_linebuf,l_debug_info_ptr);           

	   	

     
	  
		
		

      

		strncpy(chr_p_cislo[i],chr_p_linebuf+10,4); 
		strncpy(chr_p_cislo_prevodu[i],chr_p_linebuf+16,5);
	   memset(chr_p_temp_cislo_prevodu,APL_NULL_CHAR,CISLO_LEN_6);
      if(CO_Trim(chr_p_cislo_prevodu[i],'0','L',chr_p_temp_cislo_prevodu,l_debug_info_ptr) == APL_FAILURE)
      {
            APL_GOBACK_FAIL
      }

      memset(chr_p_cislo_prevodu[i],APL_NULL_CHAR,CISLO_LEN_6);
      strcpy(chr_p_cislo_prevodu[i],chr_p_temp_cislo_prevodu);

		strncpy(chr_p_buysel[i],chr_p_linebuf+22,1);
		strncpy(chr_p_locrefno[i],chr_p_linebuf+44,11);

      memset(chr_p_temp_proti,APL_NULL_CHAR,PORTI_LEN);
	   if(chr_p_buysel[i][0] == '2')
      {
         strncpy(chr_p_proti[i],chr_p_linebuf+95,4);
      }
      else
      {
         strncpy(chr_p_proti[i],chr_p_linebuf+81,4);
		}

      if(CO_Trim(chr_p_proti[i],'0','L',chr_p_temp_proti,l_debug_info_ptr) == APL_FAILURE)
      {
            APL_GOBACK_FAIL
      }
      memset(chr_p_proti[i],APL_NULL_CHAR,PORTI_LEN);
      strcpy(chr_p_proti[i],chr_p_temp_proti);

		strncpy(chr_p_isin[i],chr_p_linebuf+108,12);
		strncpy(p_quantity[i],chr_p_linebuf+133,11);
		strncpy(chr_p_amount[i],chr_p_linebuf+146,16);
		strncpy(chr_p_idmacp[i],chr_p_linebuf+220,10);
		strncpy(chr_p_rcmacp[i],chr_p_linebuf+231,12);
		strncpy(chr_p_statcode[i],chr_p_linebuf+249,2);
		strncpy(chr_p_nonstdcode[i],chr_p_linebuf+252,7);
		strncpy(chr_p_zucto[i],chr_p_linebuf+194,10);
		strncpy(chr_p_burzo[i],chr_p_linebuf+205,10);
		strncpy(chr_p_ftrd[i],chr_p_linebuf+284,10);

		
		
		

		memset(chr_p_temp_locrefno,APL_NULL_CHAR,LOCAL_REFNO_LEN);
		strcpy(chr_p_temp_locrefno,chr_p_locrefno[i]);

		int_p_locrefnosize = 11; 
		while(chr_p_locrefno[i][int_p_locrefnosize] ==' ')
		{
			chr_p_temp_locrefno[int_p_locrefnosize] = '\0';
			int_p_locrefnosize--;
			if(int_p_locrefnosize<0)
			{
				break;
			}
		}
		memset(chr_p_locrefno[i],APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
		strcpy(chr_p_locrefno[i],chr_p_temp_locrefno);

		memset(chr_p_temp_locrefno,APL_NULL_CHAR,LOCAL_REFNO_LEN);
		

		
		l_h_quantity_a =0;
		l_h_quantity_a = atof(p_quantity[i]);
		chr_l_h_amount =0;
		chr_l_h_amount = atof(chr_p_amount[i]);
		int_l_h_qty_declen =0;
		int_l_h_amount_declen =0;
		l_i_qty_declen =0;
		l_i_amount_declen =0;
		sqlca.sqlcode =0;

		EXEC SQL SELECT AMOUNT_DECIMAL_LEN INTO :int_l_h_amount_declen:l_i_amount_declen
					FROM MT_CORE_SYS_PARAMS;
		IS_ANY_ORA_ERROR

		EXEC SQL SELECT QTY_DEC_LEN INTO :int_l_h_qty_declen:l_i_qty_declen
					FROM MT_CORE_SYS_PARAMS;
		IS_ANY_ORA_ERROR


		memset (p_quantity[i],'\0',QTY_LEN);
		memset (chr_p_amount[i],'\0',AMT_LEN); 
		sprintf(p_quantity[i],"%.*lf",int_l_h_qty_declen,l_h_quantity_a);
		sprintf(chr_p_amount[i],"%.*lf",int_l_h_amount_declen,chr_l_h_amount); 
		i++;
	}
	int_imax =i;
	
	if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
     	{APL_GOBACK_FAIL }

	

	i =0;
	int_i32 =0;
	int_i48 =0;
	i50 =0;
	int_imax32 =0;
	int_imax48 =0;
	imax50 =0;

	while(i <= int_imax)
	{
		if (!strcmp(chr_p_statcode[i],"32"))
		{
			memset(chr_p_cislo32[int_i32],'\0',CISLO_LEN_5);
			memset(chr_p_cislo_prevodu32[int_i32],'\0',CISLO_LEN_6);
			memset(chr_p_statcode32[int_i32],'\0',STATCD_LEN);
			memset(chr_p_locrefno32[int_i32],'\0',LOCAL_REFNO_LEN);
			memset(chr_p_nonstdcode32[int_i32],'\0',NONSTDCD_LEN);
			memset(chr_p_idmacp32[int_i32],'\0',IDMACP_LEN);
			memset(chr_p_rcmacp32[int_i32],'\0',RCMACP_LEN);
			memset(chr_p_proti32[int_i32],'\0',PORTI_LEN);
			memset(chr_p_buysel32[int_i32],'\0',BUYSEL_LEN);
			memset(chr_p_isin32[int_i32],'\0',ISIN_LEN);
			memset(chr_p_qty32[int_i32],'\0',QTY_LEN);
			memset(chr_p_amount32[int_i32],'\0',AMT_LEN);
			memset(chr_p_burzo32[int_i32],'\0',BURZO_LEN);
			memset(chr_p_zucto32[int_i32],'\0',ZUCTO_LEN);
			memset(chr_p_ftrd32[int_i32],'\0',FTRD_LEN);
			
			strcpy(chr_p_cislo32[int_i32],chr_p_cislo[i]);
			strcpy(chr_p_cislo_prevodu32[int_i32],chr_p_cislo_prevodu[i]);
			strcpy(chr_p_statcode32[int_i32],chr_p_statcode[i]);
			strcpy(chr_p_locrefno32[int_i32],chr_p_locrefno[i]);
			strcpy(chr_p_nonstdcode32[int_i32],chr_p_nonstdcode[i]);
			strcpy(chr_p_idmacp32[int_i32],chr_p_idmacp[i]);
			strcpy(chr_p_rcmacp32[int_i32],chr_p_rcmacp[i]);
			strcpy(chr_p_proti32[int_i32],chr_p_proti[i]);
			strcpy(chr_p_buysel32[int_i32],chr_p_buysel[i]);
			strcpy(chr_p_isin32[int_i32],chr_p_isin[i]);
			strcpy(chr_p_qty32[int_i32],p_quantity[i]);
			strcpy(chr_p_amount32[int_i32],chr_p_amount[i]);
			strcpy(chr_p_burzo32[int_i32],chr_p_burzo[i]);
			strcpy(chr_p_zucto32[int_i32],chr_p_zucto[i]);
			strcpy(chr_p_ftrd32[int_i32],chr_p_ftrd[i]);

			int_imax32 = int_i32;
			int_i32 ++;
		}

		if (!strcmp(chr_p_statcode[i],"48"))
		{
			memset(chr_p_cislo48[int_i48],'\0',CISLO_LEN_5);
			memset(chr_p_cislo_prevodu48[int_i48],'\0',CISLO_LEN_6);
			memset(chr_p_statcode48[int_i48],'\0',STATCD_LEN);
			memset(chr_p_locrefno48[int_i48],'\0',LOCAL_REFNO_LEN);
			memset(chr_p_nonstdcode48[int_i48],'\0',NONSTDCD_LEN);
			memset(chr_p_idmacp48[int_i48],'\0',IDMACP_LEN);
			memset(chr_p_rcmacp48[int_i48],'\0',RCMACP_LEN);
			memset(chr_p_proti48[int_i48],'\0',PORTI_LEN);
			memset(chr_p_buysel48[int_i48],'\0',BUYSEL_LEN);
			memset(chr_p_isin48[int_i48],'\0',ISIN_LEN);
			memset(chr_p_qty48[int_i48],'\0',QTY_LEN);
			memset(chr_p_amount48[int_i48],'\0',AMT_LEN);
			memset(chr_p_burzo48[int_i48],'\0',BURZO_LEN);
			memset(chr_p_zucto48[int_i48],'\0',ZUCTO_LEN);
			memset(chr_p_ftrd48[int_i48],'\0',FTRD_LEN);
			
			strcpy(chr_p_cislo48[int_i48],chr_p_cislo[i]);
			strcpy(chr_p_cislo_prevodu48[int_i48],chr_p_cislo_prevodu[i]);
			strcpy(chr_p_statcode48[int_i48],chr_p_statcode[i]);
			strcpy(chr_p_locrefno48[int_i48],chr_p_locrefno[i]);
			strcpy(chr_p_nonstdcode48[int_i48],chr_p_nonstdcode[i]);
			strcpy(chr_p_idmacp48[int_i48],chr_p_idmacp[i]);
			strcpy(chr_p_rcmacp48[int_i48],chr_p_rcmacp[i]);
			strcpy(chr_p_proti48[int_i48],chr_p_proti[i]);
			strcpy(chr_p_buysel48[int_i48],chr_p_buysel[i]);
			strcpy(chr_p_isin48[int_i48],chr_p_isin[i]);
			strcpy(chr_p_qty48[int_i48],p_quantity[i]);
			strcpy(chr_p_amount48[int_i48],chr_p_amount[i]);
			strcpy(chr_p_burzo48[int_i48],chr_p_burzo[i]);
			strcpy(chr_p_zucto48[int_i48],chr_p_zucto[i]);
			strcpy(chr_p_ftrd48[int_i48],chr_p_ftrd[i]);

			int_imax48 = int_i48;
			int_i48 ++;
		}

		if (!strcmp(chr_p_statcode[i],"50"))
		{
			memset(p_cislo50[i50],'\0',CISLO_LEN_5);
			memset(p_cislo_prevodu50[i50],'\0',CISLO_LEN_6);
			memset(p_statcode50[i50],'\0',STATCD_LEN);
			memset(p_locrefno50[i50],'\0',LOCAL_REFNO_LEN);
			memset(p_nonstdcode50[i50],'\0',NONSTDCD_LEN);
			memset(p_idmacp50[i50],'\0',IDMACP_LEN);
			memset(p_rcmacp50[i50],'\0',RCMACP_LEN);
			memset(p_proti50[i50],'\0',PORTI_LEN);
			memset(p_buysel50[i50],'\0',BUYSEL_LEN);
			memset(p_isin50[i50],'\0',ISIN_LEN);
			memset(p_qty50[i50],'\0',QTY_LEN);
			memset(p_amount50[i50],'\0',AMT_LEN);
			memset(p_burzo50[i50],'\0',BURZO_LEN);
			memset(p_zucto50[i50],'\0',ZUCTO_LEN);
			memset(p_ftrd50[i50],'\0',FTRD_LEN);
			
			strcpy(p_cislo50[i50],chr_p_cislo[i]);
			strcpy(p_cislo_prevodu50[i50],chr_p_cislo_prevodu[i]);
			strcpy(p_statcode50[i50],chr_p_statcode[i]);
			strcpy(p_locrefno50[i50],chr_p_locrefno[i]);
			strcpy(p_nonstdcode50[i50],chr_p_nonstdcode[i]);
			strcpy(p_idmacp50[i50],chr_p_idmacp[i]);
			strcpy(p_rcmacp50[i50],chr_p_rcmacp[i]);
			strcpy(p_proti50[i50],chr_p_proti[i]);
			strcpy(p_buysel50[i50],chr_p_buysel[i]);
			strcpy(p_isin50[i50],chr_p_isin[i]);
			strcpy(p_qty50[i50],p_quantity[i]);
			strcpy(p_amount50[i50],chr_p_amount[i]);
			strcpy(p_burzo50[i50],chr_p_burzo[i]);
			strcpy(p_zucto50[i50],chr_p_zucto[i]);
			strcpy(p_ftrd50[i50],chr_p_ftrd[i]);

			imax50 = i50;
			i50++;
		}
	 	i++;
	}
	

   DL_Prnt_AutoSetl_Hdr(p_fp_ast);

	if (!strlen(chr_p_locrefno32[0]))
	{
		int_imax32 = -1;
	}

	if (!strlen(chr_p_locrefno48[0]))
	{
		int_imax48 = -1;
	}

	if (!strlen(p_locrefno50[0]))
	{
		imax50 = -1;
	}

	if ( (int_imax +1) > (int_imax32+1)+(int_imax48+1)+(imax50+1))
	{
		int_maxoth = (int_imax+1) - (int_imax32 +int_imax48 +imax50 +3); 
		int_oth =0;
		while (int_oth <= int_maxoth) 
		{
			if ((strcmp(chr_p_statcode[int_oth],"32"))
					&& (strcmp(chr_p_statcode[int_oth],"48"))
					&& (strcmp(chr_p_statcode[int_oth],"50")))
			{
			chr_junk = ' ';

			memset(chr_p_rep_buf,APL_NULL_CHAR,177);
			memset(chr_p_buf,APL_NULL_CHAR,30);
		
			sprintf(chr_p_buf,"%c",chr_junk);
			strcpy(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%6s"," "); 
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);

			sprintf(chr_p_buf,"%5.5s",chr_p_cislo_prevodu[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%3s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			sprintf(chr_p_buf,"%11.11s",chr_p_locrefno[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%2s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);

			sprintf(chr_p_buf,"%2.2s",chr_p_statcode[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%2s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);

			sprintf(chr_p_buf,"%7.7s",chr_p_nonstdcode[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%6s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);

			sprintf(chr_p_buf,"%10.10s",chr_p_idmacp[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%4s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			sprintf(chr_p_buf,"%12.12s",chr_p_rcmacp[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%3s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			sprintf(chr_p_buf,"%4.4s",chr_p_proti[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%7s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			sprintf(chr_p_buf,"%1.1s",chr_p_buysel[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%6s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			sprintf(chr_p_buf,"%12.12s",chr_p_isin[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%2s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);

			sprintf(chr_p_buf,"%11.11s",p_quantity[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%1s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			sprintf(chr_p_buf,"%15.15s",chr_p_amount[int_oth]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%2s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_burzo[int_oth][0],chr_p_burzo[int_oth][1],chr_p_burzo[int_oth][2],chr_p_burzo[int_oth][3],chr_p_burzo[int_oth][5],chr_p_burzo[int_oth][6],chr_p_burzo[int_oth][8],chr_p_burzo[int_oth][9]);
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%2s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			
			sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_zucto[int_oth][0],chr_p_zucto[int_oth][1],chr_p_zucto[int_oth][2], chr_p_zucto[int_oth][3],chr_p_zucto[int_oth][5],chr_p_zucto[int_oth][6],chr_p_zucto[int_oth][8],chr_p_zucto[int_oth][9]);
			
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
			sprintf(chr_p_buf,"%2s"," ");
			strcat(chr_p_rep_buf,chr_p_buf);
			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			
			sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_ftrd[int_oth][0],chr_p_ftrd[int_oth][1],chr_p_ftrd[int_oth][2], chr_p_ftrd[int_oth][3],chr_p_ftrd[int_oth][5],chr_p_ftrd[int_oth][6],chr_p_ftrd[int_oth][8],chr_p_ftrd[int_oth][9]);

			strcat(chr_p_rep_buf,chr_p_buf);


			strcat(chr_p_rep_buf,"\n"); 

			memset(chr_p_buf,APL_NULL_CHAR,30);
	
			if(strcmp(chr_p_nonstdcode[int_oth],chr_p_nonstdcode[int_oth-1]))
			{
  	     		if (++int_l_pglen_m == PAGELENGTH)
  	     		{
  	     			DL_Prnt_AutoSetl_Line(p_fp_ast);
  		   		fprintf(p_fp_ast,"\f");
  		   		fprintf(p_fp_ast,"\n");
  		   		DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         		int_l_pglen_m = 7;
     	  		}
				fprintf(p_fp_ast, chr_p_nonstdcode[int_oth]);
  		   	fprintf(p_fp_ast,"\n");
			}

			fprintf(p_fp_ast, chr_p_rep_buf);

  	     if (++int_l_pglen_m == PAGELENGTH)
  	     {
  	     	DL_Prnt_AutoSetl_Line(p_fp_ast);
  		   fprintf(p_fp_ast,"\f");
  		   fprintf(p_fp_ast,"\n");
  		   DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         int_l_pglen_m = 7;
     	  }
		 int_oth++;
		 }
		 else {int_oth++;}
     }	
	}

	i   =0;
	int_i32 =0;
	int_i48 =0;
	i50 =0;

	if(strlen(chr_p_locrefno32[0]))
	{
   	DL_Prnt_AutoSetl_32(p_fp_ast,chr_p_nonstdcode32[0]);
	}

	while (int_i32 <= int_imax32)
	{
		chr_junk = ' ';

		memset(chr_p_rep_buf,APL_NULL_CHAR,177);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		
		sprintf(chr_p_buf,"%c",chr_junk);
		strcpy(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%5.5s",chr_p_cislo_prevodu32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%3s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%11.11s",chr_p_locrefno32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%2.2s",chr_p_statcode32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%7.7s",chr_p_nonstdcode32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%10.10s",chr_p_idmacp32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%4s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%12.12s",chr_p_rcmacp32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%3s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%4.4s",chr_p_proti32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%7s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%1.1s",chr_p_buysel32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%12.12s",chr_p_isin32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%11.11s",chr_p_qty32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%1s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%15.15s",chr_p_amount32[int_i32]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);



sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_burzo32[int_i32][0],chr_p_burzo32[int_i32][1],chr_p_burzo32[int_i32][2],chr_p_burzo32[int_i32][3],chr_p_burzo32[int_i32][5],chr_p_burzo32[int_i32][6],chr_p_burzo32[int_i32][8],chr_p_burzo32[int_i32][9]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		
sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_zucto32[int_i32][0],chr_p_zucto32[int_i32][1],chr_p_zucto32[int_i32][2], chr_p_zucto32[int_i32][3],chr_p_zucto32[int_i32][5],chr_p_zucto32[int_i32][6],chr_p_zucto32[int_i32][8],chr_p_zucto32[int_i32][9]);

		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		
sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_ftrd32[int_i32][0],chr_p_ftrd32[int_i32][1],chr_p_ftrd32[int_i32][2], chr_p_ftrd32[int_i32][3],chr_p_ftrd32[int_i32][5],chr_p_ftrd32[int_i32][6],chr_p_ftrd32[int_i32][8],chr_p_ftrd32[int_i32][9]);

		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		
		strcat(chr_p_rep_buf,"\n"); 




		if(strcmp(chr_p_nonstdcode32[int_i32],chr_p_nonstdcode32[int_i32-1]))
		{
  	     	if (++int_l_pglen_m == PAGELENGTH)
  	     	{
  	     		DL_Prnt_AutoSetl_Line(p_fp_ast);
  		   	fprintf(p_fp_ast,"\f");
  		   	fprintf(p_fp_ast,"\n");
  		   	DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         	int_l_pglen_m = 7;
     	  	}
			fprintf(p_fp_ast, chr_p_nonstdcode32[int_i32]);
  		  	fprintf(p_fp_ast,"\n");
		}

		fprintf(p_fp_ast, chr_p_rep_buf);

      if (++int_l_pglen_m == PAGELENGTH)
      {
        	DL_Prnt_AutoSetl_Line(p_fp_ast);
         fprintf(p_fp_ast,"\f");
         fprintf(p_fp_ast,"\n");
         DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         DL_Prnt_AutoSetl_32(p_fp_ast,chr_p_nonstdcode32[int_i32]);
         int_l_pglen_m = 7;
      }
		int_i32++;
   }	

	if(strlen(chr_p_locrefno48[0]))
	{
   	DL_Prnt_AutoSetl_48(p_fp_ast,chr_p_nonstdcode48[0]);
	}

	while (int_i48 <= int_imax48)
	{
		chr_junk = ' ';

		memset(chr_p_rep_buf,APL_NULL_CHAR,177);
		
		sprintf(chr_p_buf,"%c",chr_junk);
		strcpy(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," "); 
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%5.5s",chr_p_cislo_prevodu48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%3s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%11.11s",chr_p_locrefno48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%2.2s",chr_p_statcode48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%7.7s",chr_p_nonstdcode48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%10.10s",chr_p_idmacp48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%4s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%12.12s",chr_p_rcmacp48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%3s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%4.4s",chr_p_proti48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%7s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%1.1s",chr_p_buysel48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%12.12s",chr_p_isin48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%11.11s",chr_p_qty48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%1s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%15.15s",chr_p_amount48[int_i48]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

	
sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_burzo48[int_i48][0],chr_p_burzo48[int_i48][1],chr_p_burzo48[int_i48][2],chr_p_burzo48[int_i48][3],chr_p_burzo48[int_i48][5],chr_p_burzo48[int_i48][6],chr_p_burzo48[int_i48][8],chr_p_burzo48[int_i48][9]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		
sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_zucto48[int_i48][0],chr_p_zucto48[int_i48][1],chr_p_zucto48[int_i48][2], chr_p_zucto48[int_i48][3],chr_p_zucto48[int_i48][5],chr_p_zucto48[int_i48][6],chr_p_zucto48[int_i48][8],chr_p_zucto48[int_i48][9]);

		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		
sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",chr_p_ftrd48[int_i48][0],chr_p_ftrd48[int_i48][1],chr_p_ftrd48[int_i48][2], chr_p_ftrd48[int_i48][3],chr_p_ftrd48[int_i48][5],chr_p_ftrd48[int_i48][6],chr_p_ftrd48[int_i48][8],chr_p_ftrd48[int_i48][9]);
strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		
		strcat(chr_p_rep_buf,"\n");


		if(strcmp(chr_p_nonstdcode48[int_i48],chr_p_nonstdcode48[int_i48-1]))
		{
  	     	if (++int_l_pglen_m == PAGELENGTH)
  	     	{
  	     		DL_Prnt_AutoSetl_Line(p_fp_ast);
  		   	fprintf(p_fp_ast,"\f");
  		   	fprintf(p_fp_ast,"\n");
  		   	DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         	int_l_pglen_m = 7;
     	  	}
			fprintf(p_fp_ast, chr_p_nonstdcode48[int_i48]);
  		  	fprintf(p_fp_ast,"\n");
		}

		fprintf(p_fp_ast, chr_p_rep_buf);

      if (++int_l_pglen_m == PAGELENGTH)
      {
        	DL_Prnt_AutoSetl_Line(p_fp_ast);
         fprintf(p_fp_ast,"\f");
         fprintf(p_fp_ast,"\n");
         DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         DL_Prnt_AutoSetl_48(p_fp_ast,chr_p_nonstdcode48[int_i48]);
         int_l_pglen_m = 7;
      }
		int_i48++;
   }	

	if(strlen(p_locrefno50[0]))
	{
   	DL_Prnt_AutoSetl_50(p_fp_ast,p_nonstdcode50[0]);
	}

	while (i50 <= imax50)
	{
	sqlca.sqlcode =0;

	memset(l_dl_deal_sstdet_struct_h->h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(l_dl_deal_sstdet_struct_h->h_indentity_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
	memset(l_dl_deal_sstdet_struct_h->h_ispart_,APL_NULL_CHAR,APL_FLAG_LENGTH);
	memset(l_dl_deal_sstdet_struct_h->h_newindentity_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
	memset(l_dl_deal_sstdet_struct_h->h_instrdate,APL_NULL_CHAR,APL_DATE_LEN);
	memset(l_dl_deal_sstdet_struct_h->h_moneydate,APL_NULL_CHAR,APL_DATE_LEN);
	memset(l_dl_deal_sstdet_struct_h->h_sel_forreg,APL_NULL_CHAR,APL_FLAG_LENGTH);
	memset(l_dl_deal_sstdet_struct_h->h_access_stamp,APL_NULL_CHAR,APL_DATE_LEN);
	chr_junk = '*';

	EXEC SQL VAR l_dl_deal_sstdet_struct_h->h_dl_client IS STRING;
	EXEC SQL VAR l_dl_deal_sstdet_struct_h->h_indentity_no IS STRING;
	EXEC SQL VAR l_dl_deal_sstdet_struct_h->h_instrdate IS STRING;
	EXEC SQL VAR l_dl_deal_sstdet_struct_h->h_moneydate IS STRING;

	p_i_account =0;
	p_i_refno =0;
	p_i_ispartial =0;
	p_i_isin =0;
	p_i_instr_dt =0;
	p_i_moneydt =0;
	p_i_trcode =0;
	p_i_price =0;
	p_i_amount =0;
	p_i_qty =0;
	p_i_brkcomm =0;
	p_i_access_stamp =0;
	h_amt=0.0;
	
	EXEC SQL SELECT 	CLIENT,
							IDENTIY_NO,
							PARTIAL_IND_B,
							INSTRUMENT_DT,
							MONEY_SETL_DT,
							DEAL_CD,
							COST,
							AMOUNT,
							QTY,
							BROKERCOMM,
							ACCESS_STAMP
					INTO
						:l_dl_deal_sstdet_struct_h->h_dl_client:p_i_account,
						:l_dl_deal_sstdet_struct_h->h_indentity_no:p_i_refno,
						:l_dl_deal_sstdet_struct_h->h_ispart_:p_i_ispartial,
						:l_dl_deal_sstdet_struct_h->h_instrdate:p_i_instr_dt,
						:l_dl_deal_sstdet_struct_h->h_moneydate:p_i_moneydt,
						:p_dealcd:p_i_trcode,
						:l_dl_deal_sstdet_struct_h->h_pr:p_i_price,
						:h_amt:p_i_amount,
						:h_qty:p_i_qty,
						:l_dl_deal_sstdet_struct_h->h_brokercomm:p_i_brkcomm,
						:l_dl_deal_sstdet_struct_h->h_access_stamp:p_i_access_stamp
					FROM DL_DEAL
						WHERE LCL_IDENTNO =:p_locrefno50[i50]
							FOR UPDATE OF DEAL_STAT;

	if (sqlca.sqlcode == 1403)
	{
		chr_junk ='*';
		fprintf(p_logfile, 
					"\nNo records int_found for the Local Refno %s\n",
					p_locrefno50[i50]);
		sqlca.sqlcode =0;
	}

	if (sqlca.sqlcode == -2112)
	{
		chr_junk ='*';
		fprintf(p_logfile, 
					"\nToo many records available for the Local Refno %s\n",
					p_locrefno50[i50]);
		sqlca.sqlcode =0;
	}

	IS_ANY_ORA_ERROR
	
	sqlca.sqlcode =0;

	EXEC SQL SELECT INSTR_ISIN
						INTO :h_instr_isin:p_i_isin
				FROM MT_INSTRUMENT WHERE
					INSTR_CODE =( SELECT INSTR_CODE FROM DL_DEAL WHERE
									LCL_IDENTNO =:p_locrefno50[i50]);

	IS_ANY_ORA_ERROR
	
	sqlca.sqlcode =0;

	
	
		
	memset(chr_l_str_amount,APL_NULL_CHAR,17);
	memset(chr_h_str_amount,APL_NULL_CHAR,17);

   l_db_amount =0.0;	
	l_db_amount =atof(p_amount50[i50]);
	printf("Amount from table %lf\n",h_amt);
		printf("Amount from h_file %s",p_amount50[i50]);
			printf("\nAmount in double %lf",l_db_amount);
	if(h_amt != l_db_amount)
	{
		chr_junk ='*';
		fprintf(p_logfile, 
					"Amount in h_file does not match for the LR No  %s\n",
					p_locrefno50[i50]);
	}
	else {if(h_qty !=atof(p_qty50[i50]))
	{
		chr_junk ='*';
		fprintf(p_logfile, 
					"Quantity in File does not match does not match for the LR No  %s\n",
					p_locrefno50[i50]);
	}
	else {if(strlen(l_dl_deal_sstdet_struct_h->h_instrdate) || strlen(l_dl_deal_sstdet_struct_h->h_moneydate))
	{
		chr_junk ='*';
		fprintf(p_logfile, 
					"Instrurity & money settlement dates are not NULL for LR No  %s\n",
					p_locrefno50[i50]);
	}
	
	else {if(strcmp(h_instr_isin,p_isin50[i50])) 
	{
		chr_junk ='*';
		fprintf(p_logfile, 
					"ISIN number in the h_file does not match for the LR No %s\n",
					p_locrefno50[i50]);
	}
	else {
			strcpy(l_dl_deal_sstdet_struct_h->h_instrdate,p_settlementdate);

			if((!strcmp(p_dealcd,"3")) || (!strcmp(p_dealcd,"4")) || (!strcmp(p_dealcd,"5")) || (!strcmp(p_dealcd,"6")) || (!strcmp(p_dealcd,"7")) || (!strcmp(p_dealcd,"8")))
			{
				strcpy(l_dl_deal_sstdet_struct_h->h_moneydate,p_settlementdate);
			}
			if (APL_SUCCESS == DL_Proc_DLSetlSing(l_dl_deal_sstdet_struct_h,
                                          APL_NULL_STRING,
														p_intl_envdatastruct_h,
														l_debug_info_ptr))
			{ 
				chr_junk =' ';
			}
			else {
			chr_junk ='*';
			fprintf(p_logfile, 
					"CDBUpdSSTDetFn Failed for the LR No  %s\n",
					p_locrefno50[i50]);
		if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
   	{
      	#ifdef SYS_DEBUG
      		fprintf(APL_OUT_FILE, "\n\nGoing to free errors\n\n");
      	#endif

 	     fprintf(p_logfile, "\n\n");
   	   CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
      	CO_FreeErrLst(l_debug_info_ptr);
   	}

			}}}}}
			
		memset(chr_p_rep_buf,APL_NULL_CHAR,177);
		
		sprintf(chr_p_buf,"%c",chr_junk);
		strcpy(chr_p_rep_buf,chr_p_buf);
		sprintf(chr_p_buf,"%6s"," "); 
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%5.5s",p_cislo_prevodu50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%3s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%11.11s",p_locrefno50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%2.2s",p_statcode50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%7.7s",p_nonstdcode50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%10.10s",p_idmacp50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%4s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%12.12s",p_rcmacp50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%3s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%4.4s",p_proti50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%7s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%1.1s",p_buysel50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%6s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%12.12s",p_isin50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%11.11s",p_qty50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%1s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		sprintf(chr_p_buf,"%15.15s",p_amount50[i50]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);



if (chr_junk == ' ') 
{
	sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",p_settlementdate[6],p_settlementdate[7],p_settlementdate[8],p_settlementdate[9],p_settlementdate[3],p_settlementdate[4],p_settlementdate[0],p_settlementdate[1]);
}

else
{
	sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",p_burzo50[i50][0],p_burzo50[i50][1],p_burzo50[i50][2],p_burzo50[i50][3],p_burzo50[i50][5],p_burzo50[i50][6],p_burzo50[i50][8],p_burzo50[i50][9]);
}
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		sprintf(chr_p_buf,"%2s"," ");
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);

		
sprintf(chr_p_buf,"%c%c %c%c %c%c %c%c",p_ftrd50[i50][0],p_ftrd50[i50][1],p_ftrd50[i50][2], p_ftrd50[i50][3],p_ftrd50[i50][5],p_ftrd50[i50][6],p_ftrd50[i50][8],p_ftrd50[i50][9]);
		strcat(chr_p_rep_buf,chr_p_buf);
		memset(chr_p_buf,APL_NULL_CHAR,30);
		

		strcat(chr_p_rep_buf,"\n");
		

		if(strcmp(p_nonstdcode50[i50],chr_p_nonstdcode[i50-1]))
		{
  	     	if (++int_l_pglen_m == PAGELENGTH)
  	     	{
  	     		DL_Prnt_AutoSetl_Line(p_fp_ast);
  		   	fprintf(p_fp_ast,"\f");
  		   	fprintf(p_fp_ast,"\n");
  		   	DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         	int_l_pglen_m = 7;
     	  	}
			fprintf(p_fp_ast, p_nonstdcode50[i50]);
  		  	fprintf(p_fp_ast,"\n");
		}

		fprintf(p_fp_ast, chr_p_rep_buf);

      if (++int_l_pglen_m == PAGELENGTH)
      {
        	DL_Prnt_AutoSetl_Line(p_fp_ast);
         fprintf(p_fp_ast,"\f");
         fprintf(p_fp_ast,"\n");
         DL_Prnt_AutoSetl_Hdr(p_fp_ast);
         DL_Prnt_AutoSetl_50(p_fp_ast,p_nonstdcode50[i50]);
         int_l_pglen_m = 7;
      }
		i50++;
   }	
	sqlca.sqlcode =0;

	if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
	{
		#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE, "\n\nGoing to free errors\n\n");
		#endif

		fprintf(p_logfile, "\n\n");
		CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
		CO_FreeErrLst(l_debug_info_ptr);
	}

  if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  		 {APL_GOBACK_FAIL } 

  APL_GOBACK_SUCCESS
 
  RETURN_SUCCESS :
	{
		EXEC SQL COMMIT WORK;

    	EXEC SQL SELECT PROCESSING_STATUS INTO :chr_g_restart_data:g_restart_data_i
     		FROM SYS_BATCHPROC
     	WHERE PROCESS_NAME=:argv[0]
     		AND PROC_INIT=:argv[1]
     		AND STARTDATE=:argv[2]
     		AND STATUS='started'
     	FOR UPDATE OF PROCESSING_STATUS,STATUS;

     	if(APL_ZERO_RESULT_SET) 
		{
     		CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
     		APL_GOBACK_FAIL
      }

		CO_ProcMonitor(p_logfile, "No Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
		CO_FreeErrLst(l_debug_info_ptr);

		return(APL_SUCCESS);
	}

  RETURN_FAILURE :
	{
		EXEC SQL ROLLBACK WORK;
		CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
		CO_FreeErrLst(l_debug_info_ptr);

		return(APL_FAILURE);
	}
}

int DL_Prnt_AutoSetl_50(FILE *fp, char *chr_p_nonstdcode)
{
   int i;
   fprintf(fp, "\n");
   for (i=0;i<175;fprintf(fp, "="),i++);
   fprintf(fp, "\n     50     Prevod je v prodku zauctovan tento ucteni den (OK)\n");
   for (i=0;i<175;fprintf(fp, "="),i++);
   fprintf(fp, "\n");
   return(1);
}

int DL_Prnt_AutoSetl_Hdr(FILE *fp)
{
   int i;
	char p_dt[APL_DATE_LEN];
	char chr_p_day[10];
	char chr_p_month[10];
	char chr_p_year[5];
	char chr_p_corpname[41];
	int int_p_pad =0;
	struct sqlca sqlca;
	sqlca.sqlcode =0;
	memset (p_dt,APL_NULL_CHAR,APL_DATE_LEN);
	memset (chr_p_day,APL_NULL_CHAR,10);
	memset (chr_p_month,APL_NULL_CHAR,10);
	memset (chr_p_year,APL_NULL_CHAR,5);
	memset (chr_p_corpname,APL_NULL_CHAR,41);
   fprintf(fp, "\n");
   for (i=0;i<175;fprintf(fp, "-"),i++);
   fprintf(fp, "\n");
	sqlca.sqlcode =0;
	EXEC SQL SELECT CA_IDENTNAME INTO :chr_p_corpname FROM 
				MT_COMMON_SYS_PARAMS;
	int_p_pad = (88 -((strlen(chr_p_corpname))/2));	
	for  (i=0;i<int_p_pad;fprintf(fp," "),i++);
   fprintf(fp, "%s\n",chr_p_corpname);
   for (i=0;i<175;fprintf(fp, "-"),i++);
	sqlca.sqlcode =0;
	EXEC SQL SELECT SYS_DATE INTO :p_dt FROM PRO_SYS_DATE;
	strncpy(chr_p_year,p_dt+6,4);
	sqlca.sqlcode =0;
	EXEC SQL SELECT TO_CHAR(TO_DATE(:p_dt),'MONTH'),
						 TO_CHAR(TO_DATE(:p_dt),'DAY')
								INTO :chr_p_month,:chr_p_day
									FROM DUAL;
   fprintf(fp, "\n%52sDEALS FROM TODAY 'PR.DAT' FILE            %s,  %2.2s. %s %s\n"," ",chr_p_day,p_dt,chr_p_month,chr_p_year);
   for (i=0;i<175;fprintf(fp, "-"),i++);
   fprintf(fp, 
 "\nCislo   Cislo   Externi   Stav  Nestandar. |   IDMACP       RCMACP        PROTI  Smer objedn.   ISIN      Prevadene      Cena          Burzovni     Zuctovani      Last \n");

   fprintf(fp, 
 "davky  prevodu identity  dealu kod SCP    | cislo klienta cislo klienta  strana 1=Buy,2=Sell              mnozstvi                      den         prevodu     FTRD.TXT  \n");
   fprintf(fp, "\n");
   for (i=0;i<175;fprintf(fp, "-"),i++);
   fprintf(fp, "\n");
   return(1);
}

int DL_Prnt_AutoSetl_Line(FILE *fp)
{
   int i;
   for (i=0;i<176;fprintf(fp, "-"),i++);
   fprintf(fp, "\n");
   return(1);
}

int DL_Prnt_AutoSetl_32(FILE *fp,char *chr_p_nonstdcode)
{
   int i;
   fprintf(fp, "\n");
   for (i=0;i<175;fprintf(fp, "="),i++);
   fprintf(fp, "\n     32     Prevod prosel uspesne databazovou kontrolou, dosud nenastal den vyporadani\n");
   for (i=0;i<175;fprintf(fp, "="),i++);
   fprintf(fp, "\n");
   return(1);
}

int DL_Prnt_AutoSetl_48(FILE *fp,char *chr_p_nonstdcode)
{
   int i;
   fprintf(fp, "\n");
   for (i=0;i<175;fprintf(fp, "="),i++);
   fprintf(fp, "\n     48     Prevod je suspendovan, protoze neprosel v SCP !!! Po oprave cisla uctu bude prevod znovuodeslan do SCP !!!\n");
   for (i=0;i<175;fprintf(fp, "="),i++);
   fprintf(fp, "\n");
   return(1);
}


