


#include "IV_Control_A.h"
#include<string.h>
EXEC SQL INCLUDE SQLCA.H;


int IV_Proc_PrnTranDETWEB(	FILE *bill,
				  	FILE *fl_userlog,	
					char *chr_p_billdt,
					char *chr_p_client,
					IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,
					char p_mastsub,
					double *p_tottran,
					int *int_currpos,
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{


struct sqlca sqlca;

int   int_l_pagelength = 0;
short int_l_condexists = 0;
int int_headerlen = 8;
int int_counter=0;
int int_retval=0;
int int_l_count=0;

int int_retstat=0;

double dbl_h_txnfee = TXNFEE;
double dbl_h_bogfee = BOG_MSG_FEE;
double dbl_h_manualtrdfee= MANUALDEALFEE;
double dbl_h_deltxnfee = DELV_TXN_FEE ;
double dbl_h_latetxnfee = LATETXNFEE ;
double dbl_h_repairfee = REPAIRFEE ;
double dbl_h_mutualfundfee = MUTUALFUND_TXN_FEE ;  /* Mutual Fund Transaction Charges Bageshri */
double dbl_h_bucktxnfee = BUCK_TXN_FEE;  /* Bucket Transaction Charges Bageshri */
double roundedamount = 0.0;
char h_entry =BILLABLE_DEAL_IND;
char chr_h_bl_upto_dt[APL_DATE_LEN];
char h_newdt[20];
char chr_h_uniquerefnum[15];
char *int_pos = NULL;
char chr_f_amt[20],chr_l_amtstr[30];

EXEC SQL BEGIN DECLARE SECTION;

	
 
	char h_dl_client[APL_CLIENT_LENGTH];
	char h_dl_class[3];
	char h_exch_code[4];
	char h_settlement_no[16];
	char h_instr_code[9];
	char h_instr_name[131];
	char h_domestic_cpclt[APL_CLIENT_LENGTH];
	char h_cpclt_name[66];
	char h_indentity_no[17];
	char h_instr_isin[13];
	char h_deal_date[APL_DATE_LEN];
	char h_crn_no[17];
	char h_currency_cd[4];
	char h_trade_type[41];
	double dbl_h_qty;
	double dbl_h_cost;
	double dbl_h_brokercomm;
	double dbl_h_net_amt;
	double dbl_h_bill_amt;
	char chr_h_bill_basis[APL_CCYCODE_LEN]=APL_NULL_STRING;
	char chr_h_bl_prv_dt[APL_DATE_LEN]=APL_NULL_STRING;


	
	short i_dl_client;
	short i_dl_class;
	short i_exch_code;
	short i_settlement_no;
	short i_instr_code;
	short i_instr_name;
	short i_domestic_cpclt;
	short i_cpclt_name;
	short i_indentity_no;
	short i_instr_isin;
	short i_deal_date;
	short i_crn_no;
	short i_qty;
	short i_cost;
	short i_brokercomm;
	short i_net_amt;
	short i_bill_amt;
   short int_i_count;
	short i_b_basis;
	short i_bl_prv_date;
   short i_newdt;
   short i_uniquerefnum;
   short i_currency_cd;
	short i_trade_type;
EXEC SQL VAR l_iv_clt_setup_struct.b_ccycd IS STRING;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR h_dl_class IS STRING;
EXEC SQL VAR h_exch_code IS STRING;
EXEC SQL VAR h_settlement_no IS STRING;
EXEC SQL VAR h_instr_code IS STRING;
EXEC SQL VAR h_instr_name IS STRING;
EXEC SQL VAR h_domestic_cpclt IS STRING;
EXEC SQL VAR h_cpclt_name IS STRING;
EXEC SQL VAR h_indentity_no IS STRING;
EXEC SQL VAR h_instr_isin IS STRING;
EXEC SQL VAR h_deal_date IS STRING;
EXEC SQL VAR h_crn_no IS STRING;
EXEC SQL VAR h_currency_cd IS STRING;
EXEC SQL VAR g_mt_commonsys_params_struct_h.nation_code IS STRING;
EXEC SQL VAR chr_h_bl_upto_dt  IS STRING;
EXEC SQL VAR h_newdt  IS STRING;
EXEC SQL VAR chr_h_uniquerefnum  IS STRING;
EXEC SQL VAR h_trade_type IS STRING;
EXEC SQL END DECLARE SECTION;
sqlca.sqlcode=0;


   
   if ( APL_FAILURE == CO_Chk_CntryEnabled( "BILL_PRINTING",
                                          "PAGE_LENGTH",
                                          &int_l_condexists,
                                          l_debug_info_ptr) )
   {
      APL_GOBACK_FAIL
   }

   if (int_l_condexists)
      int_l_pagelength = 70;
   else  int_l_pagelength = 58;


	if (APL_FAILURE == IV_Proc_PrnTranHdrDETWEB(bill,int_currpos,l_iv_clt_setup_struct,&int_retval,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
		APL_GOBACK_FAIL;

	}



printf("CURSOR NORMAL INSTRUCTION \n");
fflush(stdout);
EXEC SQL DECLARE normaltran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT, D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST, A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DL_CLASS NOT IN ('17', '19' , '27')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_txnfee
					 AND C.CONS_FLAG = 'I' )
UNION
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT, D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST, A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DL_CLASS NOT IN ('17','19','27')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_txnfee
					 AND C.CONS_FLAG = 'I' )
ORDER BY 1,2;

IS_ANY_ORA_ERROR
EXEC SQL OPEN normaltran;
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}
fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>NORMAL INSTRUCTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
(*int_currpos)++;
(*int_currpos)++;


for(;;)
{

	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
   strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
	dbl_h_bill_amt = 0;

	EXEC SQL FETCH normaltran INTO
   :h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
	
	if (sqlca.sqlcode == 1403) break;
	int_counter++;	

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL

	
	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
	fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
}

EXEC SQL CLOSE normaltran; 

if (int_counter == 0) 
{
	fprintf(bill,"\n<tr><td colspan='7'>NO TRANSACTIONS FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}
else
{
	(*int_currpos)++;
	(*int_currpos)++;
}


	
int_counter = 0;

EXEC SQL DECLARE intrafirmtran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DL_CLASS ='27'
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
                                  WHERE C.CLIENT = :chr_p_client
                                         AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
                                         AND C.SERVICE_CD = :dbl_h_txnfee
                                         AND C.CONS_FLAG = 'I' )

UNION


SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DL_CLASS ='27'
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
                                  WHERE C.CLIENT = :chr_p_client
                                         AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
                                         AND C.SERVICE_CD = :dbl_h_txnfee
                                         AND C.CONS_FLAG = 'I' )

ORDER BY 1,2;

EXEC SQL OPEN intrafirmtran;
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
        fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
        APL_GOBACK_FAIL
}

fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>INTRA FIRM INSTRUCTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
for(;;)
{

        strcpy(h_dl_client,APL_NULL_STRING);
		  strcpy(h_dl_class,APL_NULL_STRING);
		  strcpy(h_exch_code,APL_NULL_STRING);
		  strcpy(h_settlement_no,APL_NULL_STRING);
		  strcpy(h_instr_code,APL_NULL_STRING);
		  strcpy(h_instr_name,APL_NULL_STRING);
		  strcpy(h_domestic_cpclt,APL_NULL_STRING);
		  strcpy(h_cpclt_name,APL_NULL_STRING);
        strcpy(h_indentity_no, APL_NULL_STRING);
        strcpy(h_instr_isin, APL_NULL_STRING);
		  strcpy(h_deal_date, APL_NULL_STRING);
		  strcpy(h_crn_no, APL_NULL_STRING);
		  strcpy(h_currency_cd, APL_NULL_STRING);
		  strcpy(h_trade_type, APL_NULL_STRING);
		  dbl_h_qty=0;
		  dbl_h_cost=0;
		  dbl_h_brokercomm=0;
		  dbl_h_net_amt=0;
		  dbl_h_bill_amt = 0;

        EXEC SQL FETCH intrafirmtran INTO
 :h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;

        if (sqlca.sqlcode == 1403) break;

		  int_counter++;

		  int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

		  if (int_retstat == 1)
		  {

			  roundedamount = 0.0;
			  memset(chr_l_amtstr, APL_NULL_CHAR, 30);
			  sscanf(chr_f_amt, "%lf", &roundedamount);
			  CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

		  }
		  else
			  APL_GOBACK_FAIL

	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
		   fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
}

EXEC SQL CLOSE intrafirmtran;

if (int_counter == 0)
{
	     fprintf(bill,"\n<tr><td colspan='7'>NO INTRA FIRM TRANSACTIONS FOR ACCOUNT %s</td></tr>",chr_p_client);
        (*int_currpos)++;
        (*int_currpos)++;
        (*int_currpos)++;
}
else
{
        (*int_currpos)++;
        (*int_currpos)++;
}


int_counter=0;
printf("CURSOR REPAIR INSTRUCTION \n");
fflush(stdout);
EXEC SQL DECLARE repairtran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.DATEOF_INPUT, A.UNIQ_IDENT_NO, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_repairfee
					 AND C.CONS_FLAG = 'I' )
UNION
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.DATEOF_INPUT, A.UNIQ_IDENT_NO, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_repairfee
					 AND C.CONS_FLAG = 'I' )
ORDER BY 1,2;

EXEC SQL OPEN repairtran;
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}

fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>REPAIR INSTRUCTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
for(;;)
{

	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
	strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
   strcpy(h_newdt,APL_NULL_STRING);
	strcpy(chr_h_uniquerefnum,APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
	dbl_h_bill_amt = 0;

	EXEC SQL FETCH repairtran INTO
		:h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_newdt:i_newdt,:chr_h_uniquerefnum:i_uniquerefnum, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
	
	if (sqlca.sqlcode == 1403) break;

   EXEC SQL SELECT NVL(COUNT(*),0)  INTO :int_l_count
   FROM DL_SFEREJ
   WHERE UNIQ_IDENT_NO = :chr_h_uniquerefnum
   AND CLIENT = :h_dl_client
   AND IDENTIY_NO = :h_indentity_no ;

   if (sqlca.sqlcode !=0 && sqlca.sqlcode !=1403)
      IS_ANY_ORA_ERROR

   if (int_l_count > 0)
   {
	int_counter++;	

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL
	
	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
	fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
   }
}

EXEC SQL CLOSE repairtran; 

if (int_counter == 0) 
{
	fprintf(bill,"\n<tr><td colspan='7'>NO REPAIR TRANSACTIONS FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}
else
{
	(*int_currpos)++;
	(*int_currpos)++;
}



int_counter=0;
printf("CURSOR MANUAL INSTRUCTION \n");
fflush(stdout);
EXEC SQL DECLARE manualtran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.ENTRY=:h_entry
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND A.DL_CLASS NOT IN ('17','19')
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_manualtrdfee 
					 AND C.CONS_FLAG = 'I' )
UNION
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt
AND A.ENTRY= :h_entry
AND A.DEAL_STAT !='DD'
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND A.DL_CLASS NOT IN ('17','19')
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_manualtrdfee
					 AND C.CONS_FLAG = 'I' )
ORDER BY 1,2;

EXEC SQL OPEN manualtran;
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}

fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>MANUAL INSTRUCTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
for(;;)
{

	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
	strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
	dbl_h_bill_amt = 0;

	EXEC SQL FETCH manualtran INTO
		:h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
  
	
	if (sqlca.sqlcode == 1403) break;

	int_counter++;	

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL
	
	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
   fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
}

EXEC SQL CLOSE manualtran; 

if (int_counter == 0) 
{
	fprintf(bill,"\n<tr><td colspan='7'>NO MANUAL TRANSACTIONS FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}
else
{
	(*int_currpos)++;
	(*int_currpos)++;
}


int_counter=0;
EXEC SQL SELECT B_BASIS
INTO :chr_h_bill_basis:i_b_basis
FROM INVOICE_SYSTEMPARAM;


IS_ANY_ORA_ERROR
memset(chr_h_bl_upto_dt, APL_NULL_CHAR, APL_DATE_LEN);
strcpy(chr_h_bl_upto_dt,chr_p_billdt);
strcpy(chr_h_bl_upto_dt,strtok_r(chr_h_bl_upto_dt," ",&int_pos));
strcat(chr_h_bl_upto_dt," 23:59:59");




EXEC SQL SELECT MAX(DATEOF_BILLING) into :chr_h_bl_prv_dt :i_bl_prv_date
FROM IV_SERVICE_CHRG WHERE DATEOF_BILLING < :chr_p_billdt;

IS_ANY_ORA_ERROR
/* Bageshri */
if(i_bl_prv_date == -1)
EXEC SQL SELECT B_PREV_DATE into :chr_h_bl_prv_dt :i_bl_prv_date
FROM SYS_IVCONTROLPARAM;

IS_ANY_ORA_ERROR
/**********************************/
printf("Before Deleted cursor \n");
IS_ANY_ORA_ERROR
if (strcmp(chr_h_bill_basis,"AUTO_SETL_DT")==0)
{
printf("CURSOR DELETED ASD INSTRUCTION \n");
fflush(stdout);
EXEC SQL DECLARE deltran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND A.CLT_REQDEL_IND ='Y'
AND A.CHECKER_DT  IS NOT NULL
AND A.CHECKER_DT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.CHECKER_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_deltxnfee
					 AND C.CONS_FLAG = 'I' )
UNION
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
       D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A. CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DEAL_STAT ='DD'
AND A.CLT_REQDEL_IND ='Y'
AND A.CHECKER_DT  IS NOT NULL
AND A.CHECKER_DT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.CHECKER_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_deltxnfee
					 AND C.CONS_FLAG = 'I' )
ORDER BY 1,2;
}
else
{
printf("CURSOR DELETED NONASD INSTRUCTION \n");
fflush(stdout);
EXEC SQL DECLARE deltran1 CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DEAL_STAT ='DD'
AND A.CLT_REQDEL_IND ='Y'
AND A.CHECKER_DT  IS NOT NULL
AND A.DATEOF_INPUT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DATEOF_INPUT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_deltxnfee
					 AND C.CONS_FLAG = 'I' )
UNION
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
       D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND A.DEAL_STAT ='DD'
AND A.CLT_REQDEL_IND ='Y'
AND A.CHECKER_DT  IS NOT NULL
AND A.DATEOF_INPUT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DATEOF_INPUT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_deltxnfee
					 AND C.CONS_FLAG = 'I' )
ORDER BY 1,2;
}


if (strcmp(chr_h_bill_basis,"AUTO_SETL_DT")==0)
{
	EXEC SQL OPEN deltran;
}
else
{
	EXEC SQL OPEN deltran1;
}

printf("Inside Deleted cursor \n");
printf("The chr_value of sqlcoe is %d \n",sqlca.sqlcode);
IS_ANY_ORA_ERROR


if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}

fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>DELETED INSTRUCTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");

for(;;)
{

	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
	strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
	dbl_h_bill_amt = 0;
						
	if (strcmp(chr_h_bill_basis,"AUTO_SETL_DT")==0)
	{
		EXEC SQL FETCH deltran INTO
		:h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
	}
	else
	{
		EXEC SQL FETCH deltran1 INTO
		:h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
	}
	
	if (sqlca.sqlcode == 1403) break;

	int_counter++;	

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL

	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
   fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");	
		
}
if (strcmp(chr_h_bill_basis,"AUTO_SETL_DT")==0)
{
	EXEC SQL CLOSE deltran; 
}
else
{
	EXEC SQL CLOSE deltran1;
}

if (int_counter == 0) 
{
	fprintf(bill,"\n<tr><td colspan='7'>NO DELETED TRANSACTIONS FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}
else
{
	(*int_currpos)++;
	(*int_currpos)++;
}



memset(chr_h_bl_upto_dt, APL_NULL_CHAR, APL_DATE_LEN);
int_counter=0;

strcpy(chr_h_bl_upto_dt,chr_p_billdt);
strcpy(chr_h_bl_upto_dt,strtok_r(chr_h_bl_upto_dt," ",&int_pos));
strcat(chr_h_bl_upto_dt," 23:59:59");

printf("The chr_date is %s \n",chr_p_billdt);
printf("CURSOR LATE INSTRUCTION \n");
fflush(stdout);
EXEC SQL DECLARE latetran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 E.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, F.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B,INVOICE_SYSTEMPARAM C, MT_CORE_SYS_PARAMS D, MT_PARTY E, PRO_SGENSTAT F
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND A.CHECKER IS NOT NULL
AND A.DL_CLASS  NOT IN ('17','19')
AND A.DOMESTIC_CPCLT = E.PTY_CODE
AND F.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = F.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt 
AND A.DEAL_STAT !='DD'
AND (  (C.b_basis ='INP' and  A.DATEOF_INPUT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS') ) or
          (C.b_basis ='ASD' and (A.INSTRUMENT_DT is not null 
											and A.INSTRUMENT_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')) ) )
AND (  ( A.DATEOF_INPUT  > A.setl_date )  OR
          ( A.domestic_cpclt = D.custody_clt_cd and
            ( ( concat(to_char(setl_date-C.late_dl_days_b,'dd/mm/yyyy'),concat(C.latetime_b,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS=1 ) OR
            ( concat(to_char(setl_date-C.late_dl_days_d,'dd/mm/yyyy'),concat(C.latetime_d,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS =2 ) ) ) OR
          ( A.domestic_cpclt != d.custody_clt_cd and
            ( ( concat(to_char(setl_date-C.late_dl_days_a,'dd/mm/yyyy'),concat(C.latetime_a,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS=1 ) or
            ( concat(to_char(setl_date-c.late_dl_days_c,'dd/mm/yyyy'),concat(C.latetime_c,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS =2 ) ) ) )
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_latetxnfee
					 AND C.CONS_FLAG = 'I' )
UNION
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 E.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, F.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B,INVOICE_SYSTEMPARAM C, MT_CORE_SYS_PARAMS D, MT_PARTY E, PRO_SGENSTAT F
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND A.CHECKER IS NOT NULL
AND A.DL_CLASS NOT IN ('17','19') 
AND A.DOMESTIC_CPCLT = E.PTY_CODE
AND F.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = F.MAP_VAL
AND A.DL_CLASS NOT in (SELECT DL_CLASS FROM IV_DEAL_TYPE WHERE (NATION_CD = :g_mt_commonsys_params_struct_h.nation_code OR NATION_CD ='XX'))
AND TO_CHAR(A.DATEOFBILLING,'DD/MM/YYYY HH24:MI:SS') = :chr_p_billdt 
AND A.DEAL_STAT !='DD'
AND (  (C.b_basis ='INP' and  A.DATEOF_INPUT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS') ) or
          (C.b_basis ='ASD' and (A.INSTRUMENT_DT is not null 
											and A.INSTRUMENT_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')) ) )
AND (  ( A.DATEOF_INPUT  > A.setl_date )  OR
          ( A.domestic_cpclt = D.custody_clt_cd and
            ( ( concat(to_char(setl_date-C.late_dl_days_b,'dd/mm/yyyy'),concat(C.latetime_b,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS=1 ) OR
            ( concat(to_char(setl_date-C.late_dl_days_d,'dd/mm/yyyy'),concat(C.latetime_d,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS =2 ) ) ) OR
          ( A.domestic_cpclt != d.custody_clt_cd and
            ( ( concat(to_char(setl_date-C.late_dl_days_a,'dd/mm/yyyy'),concat(C.latetime_a,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS=1 ) or
            ( concat(to_char(setl_date-c.late_dl_days_c,'dd/mm/yyyy'),concat(C.latetime_c,':00')) < TO_DATE(A.DATEOF_INPUT,'DD/MM/YYYY HH24:MI:SS')
                and B.PROD_CLASS =2 ) ) ) )
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				  WHERE C.CLIENT = :chr_p_client 
					 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
					 AND C.SERVICE_CD = :dbl_h_latetxnfee
					 AND C.CONS_FLAG = 'I' )
ORDER BY 1,2;

EXEC SQL OPEN latetran;
printf("Inside late cursor \n");
printf("The chr_value of sqlcoe is %d \n",sqlca.sqlcode);
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}

fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>LATE INSTRUCTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");

for(;;)
{

	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
	strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
	dbl_h_bill_amt = 0;

	EXEC SQL FETCH latetran INTO
		:h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
	
	if (sqlca.sqlcode == 1403) break;

	int_counter++;	

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL
	
	
	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
   fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");

}

EXEC SQL CLOSE latetran; 

if (int_counter == 0) 
{
	fprintf(bill,"\n<tr><td colspan='7'>NO LATE TRANSACTIONS FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}

 
if (strcmp(g_mt_commonsys_params_struct_h.nation_code,"GR") == 0)
{
memset(chr_h_bl_upto_dt, APL_NULL_CHAR, APL_DATE_LEN);
memset(chr_h_bl_prv_dt, APL_NULL_CHAR, APL_DATE_LEN);
int_counter=0;
strcpy(chr_h_bl_upto_dt,chr_p_billdt);
strcpy(chr_h_bl_upto_dt,strtok_r(chr_h_bl_upto_dt," ",&int_pos));
strcat(chr_h_bl_upto_dt," 23:59:59");

EXEC SQL SELECT MAX(DATEOF_BILLING) into :chr_h_bl_prv_dt :i_bl_prv_date
FROM IV_SERVICE_CHRG WHERE DATEOF_BILLING < :chr_p_billdt;
IS_ANY_ORA_ERROR

/* Bageshri */
if(i_bl_prv_date == -1)
EXEC SQL SELECT B_PREV_DATE into :chr_h_bl_prv_dt :i_bl_prv_date
FROM SYS_IVCONTROLPARAM;

IS_ANY_ORA_ERROR
/**********************************/

printf("The chr_date is %s \n",chr_p_billdt);
printf("CURSOR BOG INSTRUCTION \n");
fflush(stdout);
EXEC SQL DECLARE curBOGMSG CURSOR FOR
SELECT DISTINCT A.CLIENT, C.DL_CLASS, C.EXCH_CODE, C.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, C.DOMESTIC_CPCLT,
		 D.PTY_CODE, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(C.DEAL_DATE,'dd/mm/yyyy'), C.CRN_NO, C.QTY, C.COST,
		 C.BROKERCOMM, C.NET_AMT, C.CURRENCY_CD, E.MAP_DESC, C.COMM_AMT
FROM   DL_MSGLINK A, MT_INSTRUMENT B, DL_DEAL C, MT_PARTY D, PRO_SGENSTAT E
WHERE	 A.CLIENT   =  :chr_p_client
AND    A.CLIENT   =  C.CLIENT
AND	 A.IDENTIY_NO     =  C.IDENTIY_NO
AND	 C.INSTR_CODE	 =  B.INSTR_CODE
AND    C.DEAL_STAT = 'CS'
AND	 A.SWIFT_MSG_NO	 =  '54B'
AND 	 A.MSG_IN_OUT_IND	 =  'O'
AND A.DATE_OF_INPUT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DATE_OF_INPUT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND C.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND C.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
              WHERE C.CLIENT = :chr_p_client
                AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
                AND C.SERVICE_CD = :dbl_h_bogfee
                AND C.CONS_FLAG = 'I' )
UNION ALL
SELECT DISTINCT A.CLIENT, C.DL_CLASS, C.EXCH_CODE, C.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, C.DOMESTIC_CPCLT, D.PTY_CODE, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(C.DEAL_DATE,'dd/mm/yyyy'), C.CRN_NO, C.QTY, C.COST, C.BROKERCOMM, C.NET_AMT, C.CURRENCY_CD, E.MAP_DESC, C.COMM_AMT
FROM DL_HISMSGLINK A, MT_INSTRUMENT B, DL_HISDEAL C, MT_PARTY D, PRO_SGENSTAT E
WHERE  A.CLIENT   =  :chr_p_client
AND    A.CLIENT   =  C.CLIENT
AND    A.IDENTIY_NO     =  C.IDENTIY_NO
AND    C.INSTR_CODE    =  B.INSTR_CODE
AND    C.DEAL_STAT = 'CS'
AND    A.SWIFT_MSG_NO    =  '54B'
AND    A.MSG_IN_OUT_IND    =  'O'
AND A.DATE_OF_INPUT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DATE_OF_INPUT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND C.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND C.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
              WHERE C.CLIENT = :chr_p_client
                AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
                AND C.SERVICE_CD = :dbl_h_bogfee
                AND C.CONS_FLAG = 'I' )
GROUP BY A.IDENTIY_NO, B.INSTR_ISIN;

EXEC SQL OPEN curBOGMSG;
printf("Inside BOG MESSAGE cursor \n");
printf("The chr_value of sqlcoe is %d \n",sqlca.sqlcode);
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}

(*int_currpos)++;
fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr><td class='heading' colspan='3'>TRANSACTIONS FOR WHICH BOG MESSAGES WERE SENT</td></tr><tr><td>&nbsp;</td></tr>");
 fprintf(bill,"\n<tr class='ez4'><td width='15%%'>TYPE</td><td width='10%%'>EXCH</td><td>SETTLEMENT NO</td><td>SCRIP CODE - NAME</td><td>TXN REF NO</td><td>ISIN</td><td>DEAL DATE</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
 fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td width='10%%'>CRN NO</td><td>QUANTITY</td><td>BROKER CODE - NAME</td><td>MARKET RATE</td><td>BROKER RATE</td><td>NET VALUE</td></tr>");

for(;;)
{
	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
	strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
	dbl_h_bill_amt = 0;

	EXEC SQL FETCH curBOGMSG INTO
		:h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
	if (sqlca.sqlcode == 1403) break;

	int_counter++;	

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL
	
	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
   fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");	
}

EXEC SQL CLOSE curBOGMSG; 

if (int_counter == 0) 
{
	fprintf(bill,"\n<tr><td colspan='7'>NO BOG MESSAGE SENT FOR INSTRUCTIONS FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}
fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
}

/***** Basket Trnsaction ******/
printf("The chr_date is %s \n",chr_p_billdt);
printf("CURSOR BASKET TRANSACTION \n");
int_counter=0;
fflush(stdout);

EXEC SQL DECLARE bastran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND INFORMATON IS NOT NULL
AND A.CHECKER_DT  IS NOT NULL
AND A.CHECKER_DT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.CHECKER_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
		WHERE C.CLIENT = :chr_p_client
		AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
		AND C.SERVICE_CD = :dbl_h_bucktxnfee
		AND C.CONS_FLAG = 'I' )
UNION
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME, A.DOMESTIC_CPCLT,
		 D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'), A.CRN_NO, A.QTY, A.COST,
		 A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
WHERE A.CLIENT = :chr_p_client
AND A.INSTR_CODE = B.INSTR_CODE
AND INFORMATON IS NOT NULL
AND A.CHECKER_DT  IS NOT NULL
AND A.CHECKER_DT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.CHECKER_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
AND A.DOMESTIC_CPCLT = D.PTY_CODE
AND E.MAP_TYPE = 'TYPEOFTRD'
AND A.DL_CLASS = E.MAP_VAL
AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
		WHERE C.CLIENT = :chr_p_client
		AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
		AND C.SERVICE_CD = :dbl_h_bucktxnfee
		AND C.CONS_FLAG = 'I' )
ORDER BY 1,2;


EXEC SQL OPEN bastran;
printf("Inside Basket cursor \n");
printf("The chr_value of sqlcoe is %d \n",sqlca.sqlcode);
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}
fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>BASKET TRANSACTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");

for(;;)
{

	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
	strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
	dbl_h_bill_amt = 0;

	EXEC SQL FETCH bastran INTO
		:h_dl_client:i_dl_client, :h_dl_class:i_dl_class, :h_exch_code:i_exch_code, :h_settlement_no:i_settlement_no, :h_instr_code:i_instr_code, :h_instr_name:i_instr_name, :h_domestic_cpclt:i_domestic_cpclt, :h_cpclt_name:i_cpclt_name, :h_indentity_no:i_indentity_no, :h_instr_isin:i_instr_isin, :h_deal_date:i_deal_date, :h_crn_no:i_crn_no, :dbl_h_qty:i_qty, :dbl_h_cost:i_cost, :dbl_h_brokercomm:i_brokercomm, :dbl_h_net_amt:i_net_amt, :h_currency_cd:i_currency_cd, :h_trade_type:i_trade_type, :dbl_h_bill_amt:i_bill_amt;
	if (sqlca.sqlcode == 1403) break;

	int_counter++;

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL
	

	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

	int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
	fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
}

EXEC SQL CLOSE bastran;

if (int_counter == 0)
{
	fprintf(bill,"\n<tr><td colspan='7'>NO BASKET TRANSACTIONS  FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}


/***** Mutual Fund Trnsaction Bageshri ******/
printf("The date of billing is |%s| |%s| |%s| |%c| |%s|\n",chr_p_billdt,chr_h_bl_prv_dt,chr_h_bl_upto_dt,p_mastsub,chr_p_client);
printf("CURSOR MUTUAL FUND TRANSACTION \n");
int_counter=0;
fflush(stdout);

EXEC SQL DECLARE mutftran CURSOR FOR
SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME,
		 A.DOMESTIC_CPCLT, D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'),
		 A.CRN_NO, A.QTY, A.COST, A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
		 FROM DL_DEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
		 WHERE A.CLIENT = :chr_p_client
		 AND A.INSTR_CODE = B.INSTR_CODE
		 AND A.MF_SEQNO IS NOT NULL
		 AND A.CHECKER_DT  IS NOT NULL
                 AND A.CHECKER_DT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
                 AND A.CHECKER_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
		 AND A.DOMESTIC_CPCLT = D.PTY_CODE
		 AND E.MAP_TYPE = 'TYPEOFTRD'
		 AND A.DL_CLASS = E.MAP_VAL
		 AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				 WHERE C.CLIENT = :chr_p_client
				 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
				 AND C.SERVICE_CD = :dbl_h_mutualfundfee
				 AND C.CONS_FLAG = :p_mastsub )
		 UNION
		 SELECT DISTINCT A.CLIENT, A.DL_CLASS, A.EXCH_CODE, A.SETTLEMENT_NO, B.INSTR_CODE, B.INSTR_NAME,
		 A.DOMESTIC_CPCLT, D.PTY_NAME, A.IDENTIY_NO, B.INSTR_ISIN, TO_CHAR(A.DEAL_DATE,'dd/mm/yyyy'),
		 A.CRN_NO, A.QTY, A.COST, A.BROKERCOMM, A.NET_AMT, A.CURRENCY_CD, E.MAP_DESC, A.COMM_AMT
		 FROM DL_HISDEAL A, MT_INSTRUMENT B, MT_PARTY D, PRO_SGENSTAT E
		 WHERE A.CLIENT = :chr_p_client
		 AND A.INSTR_CODE = B.INSTR_CODE
		 AND A.MF_SEQNO IS NOT NULL
		 AND A.CHECKER_DT  IS NOT NULL
                 AND A.CHECKER_DT > TO_DATE(:chr_h_bl_prv_dt,'DD/MM/YYYY HH24:MI:SS')
                 AND A.CHECKER_DT <= TO_DATE(:chr_h_bl_upto_dt,'DD/MM/YYYY HH24:MI:SS')
		 AND A.DOMESTIC_CPCLT = D.PTY_CODE
		 AND E.MAP_TYPE = 'TYPEOFTRD'
		 AND A.DL_CLASS = E.MAP_VAL
		 AND EXISTS ( SELECT 1 FROM IV_SERVICE_CHRG C
				 WHERE C.CLIENT = :chr_p_client
				 AND TO_CHAR(C.DATEOF_BILLING,'DD/MM/YYYY HH24:MI:SS') =:chr_p_billdt
				 AND C.SERVICE_CD = :dbl_h_mutualfundfee
				 AND C.CONS_FLAG = :p_mastsub )
		 ORDER BY 1,2;


		 EXEC SQL OPEN mutftran;
		 printf("Inside Mutual Fund cursor \n");
		 printf("The chr_value of sqlcoe is %d \n",sqlca.sqlcode);
		 IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(MUTFRANSAC)\n");
	APL_GOBACK_FAIL
}
fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td colspan='3'>MUTUAL FUND TRANSACTIONS</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
fprintf(bill,"\n<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");

for(;;)
{
	strcpy(h_dl_client,APL_NULL_STRING);
	strcpy(h_dl_class,APL_NULL_STRING);
	strcpy(h_exch_code,APL_NULL_STRING);
	strcpy(h_settlement_no,APL_NULL_STRING);
	strcpy(h_instr_code,APL_NULL_STRING);
	strcpy(h_instr_name,APL_NULL_STRING);
	strcpy(h_domestic_cpclt,APL_NULL_STRING);
	strcpy(h_cpclt_name,APL_NULL_STRING);
	strcpy(h_indentity_no, APL_NULL_STRING);
	strcpy(h_instr_isin, APL_NULL_STRING);
	strcpy(h_deal_date, APL_NULL_STRING);
	strcpy(h_crn_no, APL_NULL_STRING);
	strcpy(h_currency_cd, APL_NULL_STRING);
	strcpy(h_trade_type, APL_NULL_STRING);
	dbl_h_qty=0;
	dbl_h_cost=0;
	dbl_h_brokercomm=0;
	dbl_h_net_amt=0;
   dbl_h_bill_amt = 0;

	EXEC SQL FETCH mutftran
		            INTO  :h_dl_client:i_dl_client,
				            :h_dl_class:i_dl_class,
								:h_exch_code:i_exch_code,
								:h_settlement_no:i_settlement_no,
								:h_instr_code:i_instr_code,
								:h_instr_name:i_instr_name,
								:h_domestic_cpclt:i_domestic_cpclt,
								:h_cpclt_name:i_cpclt_name,
								:h_indentity_no:i_indentity_no,
								:h_instr_isin:i_instr_isin,
								:h_deal_date:i_deal_date,
								:h_crn_no:i_crn_no,
								:dbl_h_qty:i_qty,
								:dbl_h_cost:i_cost,
								:dbl_h_brokercomm:i_brokercomm,
								:dbl_h_net_amt:i_net_amt,
								:h_currency_cd:i_currency_cd,
								:h_trade_type:i_trade_type,
								:dbl_h_bill_amt:i_bill_amt;

	if (sqlca.sqlcode == 1403) break;

	int_counter++;

	int_retstat= IV_Proc_Round(&dbl_h_bill_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);

	}
	else
		APL_GOBACK_FAIL
			
	fprintf(bill,"\n<tr><td width='15%%'>%s</td><td witdth='10%%'>%s</td><td>%s</td><td>%s - %s</td><td>%s</td><td>%s</td><td>%s</td></tr><tr><td>%s</td><td width='10%%'>%s</td><td>%d</td><td>%s - %s</td>", h_trade_type, h_exch_code, h_settlement_no, h_instr_code, h_instr_name, h_indentity_no, h_instr_isin, h_deal_date, chr_l_amtstr, h_crn_no, (int)dbl_h_qty, h_domestic_cpclt, h_cpclt_name);

	int_retstat= IV_Proc_Round(&dbl_h_cost,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			int_retstat= IV_Proc_Round(&dbl_h_brokercomm,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			int_retstat= IV_Proc_Round(&dbl_h_net_amt,h_currency_cd,chr_f_amt,l_debug_info_ptr);

	if (int_retstat == 1)
	{

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30);
		sscanf(chr_f_amt, "%lf", &roundedamount);
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', h_currency_cd,l_debug_info_ptr);
		fprintf(bill,"<td>%s</td>",chr_l_amtstr);

	}
	else
		APL_GOBACK_FAIL

			fprintf(bill,"</tr>");
	fprintf(bill,"\n<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>");
}

EXEC SQL CLOSE mutftran;

if (int_counter == 0)
{
	fprintf(bill,"\n<tr><td colspan='7'>NO MUTUAL FUND TRANSACTIONS  FOR ACCOUNT %s</td></tr>",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
}
fprintf(bill,"\n<tr><td></td></tr><tr><td>&nbsp;</td></tr>");
fprintf(bill,"\n</table><br>");
APL_GOBACK_SUCCESS



        {

        RETURN_SUCCESS:
                APL_IF_DEBUG
					 {
						CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of IV_Proc_PrnTranDETWEB\n",NULL,NULL);	
					 }	
                return(APL_SUCCESS);

        RETURN_FAILURE:
                APL_IF_DEBUG
					 {
						CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of IV_Proc_PrnTranDETWEB\n",NULL,NULL);	
					 }
                return (APL_FAILURE);
        }

}
