#include "CR_Common.h"
#include "CO_Commdef.h"

EXEC SQL INCLUDE SQLCA.H;

int CO_Get_Narrative(char p_acc_typ_ind,
					 char *chr_p_client,
					 char *chr_p_corp_id,
					 int chr_l_seq_no,	
					 char *chr_p_evt_class,
					 char *chr_p_instr_code,
					 char *chr_p_instr_isin,
					 char *chr_p_instr_name,
					 char *chr_p_notice_dt,
					 char *p_description,
					 char *chr_p_ind,
					 char *p_rowid,	
					 FILE *g_logfile,	
					 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)

{


	char chr_evt_class[4]=APL_NULL_STRING;
	char chr_qty_paid[22]=APL_NULL_STRING;
	double l_int_qty_paid=0.0;
	double l_int_qty_paid_temp=0.0;
	int l_int_qty_paid_num=0;
	short i_qty_paid=0;
	char l_chr_rec_dt[20]=APL_NULL_STRING;
	short i_chr_rec_dt = 0;
	char chr_l_description[40]=APL_NULL_STRING;
	double l_ipo_rate=0.0;
	char  chr_g_log_buffer[BUFFER_LEN] = APL_NULL_STRING;
	char chr_l_bkbld_ind[2] = APL_NULL_STRING;
	double l_int_qty_paid_allot =0.0;
	double l_int_qty_paid_appl =0.0;

	short i_qty_paid_allot=0;
	short i_qty_paid_appl=0;

	double l_int_max_amt=0.0;
	short i_max_amt=0;
	
	EXEC SQL BEGIN DECLARE SECTION;	
	
	EXEC SQL VAR chr_qty_paid IS STRING;
	EXEC SQL VAR l_chr_rec_dt IS STRING;

	EXEC SQL END DECLARE SECTION;	
	
	printf("\n Entered into CO_GET_NARRATIVE :chr_p_corp_id=|%s|\n",chr_p_corp_id);
	fflush(stdout);

	printf("\n Inside CO_GET_NARRATIVE ROWID=|%s| \n",p_rowid);
	
	printf("Passed Values are:chr_p_ind=|%s| chr_p_client=|%s| chr_p_corp_id=|%s|chr_l_seq_no=|%d|chr_p_evt_class=|%s| chr_p_instr_code=|%s| chr_p_instr_isin=|%s|chr_p_instr_name=|%s| chr_p_notice_dt=|%s|,p_description=|%s| \n",chr_p_ind,chr_p_client,chr_p_corp_id,chr_l_seq_no,chr_p_evt_class,chr_p_instr_code,chr_p_instr_isin,chr_p_instr_name,chr_p_notice_dt,p_description);
	
	fflush(stdout);
	

   if(!strcmp(chr_p_evt_class,"CD") || !strcmp(chr_p_evt_class,"BI")|| !strcmp(chr_p_evt_class,"RD")|| !strcmp(chr_p_evt_class,"PT")|| !strcmp(chr_p_evt_class,"PC") || !strcmp(chr_p_evt_class,"CV") || !strcmp(chr_p_evt_class,"PO") || !strcmp(chr_p_evt_class,"BO")  || !strcmp(chr_p_evt_class,"SD") || !strcmp(chr_p_evt_class,"SP"))
    {
		memset(l_chr_rec_dt,APL_NULL_CHAR,20);
		EXEC SQL SELECT TO_CHAR(nvl(rec_date,nvl(bc_from_date,ex_date)),'DDMMYY') INTO :l_chr_rec_dt:i_chr_rec_dt
			FROM caevent
			WHERE corp_id=:chr_p_corp_id;

			IS_ANY_ORA_ERROR
	printf("\n Entered into CA_GENAE 4TTT1 chr_p_corp_id=|%s|chr_p_client=|%s|chr_l_seq_no=|%d|\n",chr_p_corp_id,chr_p_client,chr_l_seq_no);
			
	fflush(stdout);
				
		/**sprintf(chr_g_log_buffer,"Before Fetching QTY \n");
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);	**/


			printf("\n 1: Error fetching CACHEQUE qty=|%d| \n",sqlca.sqlcode);
	fflush(stdout);
			sqlca.sqlcode =0;	
			EXEC SQL SELECT nvl(quantity_paid,0.0) INTO :l_int_qty_paid
				FROM CACHEQUE
				WHERE corp_id=:chr_p_corp_id
				AND SEQNUM_PAY=:chr_l_seq_no
				AND client=:chr_p_client;
	
		/**sprintf(chr_g_log_buffer,"Eror Fetching QTY =|%d|\n",sqlca.sqlcode);	
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);**/
		
		printf("\n Error fetching CACHEQUE qty=|%d| \n",sqlca.sqlcode);
			
	fflush(stdout);
		/**	IS_ANY_ORA_ERROR
			***/
		
    }

	/**	26/07/2006	Chnages:Amit Bhosale quantity_paid changed to FRACT_QTY_RECD	**/

	printf("\n Checking For Fractional BONUS chr_p_evt_class=|%s| l_int_qty_paid=|%lf| \n",chr_p_evt_class,l_int_qty_paid);

	if(!strcmp(chr_p_evt_class,"BO") || ( !strcmp(chr_p_evt_class,"SP") && !strcmp(chr_p_ind,"K")))
	{
		EXEC SQL SELECT ROUND(NVL(FRACT_QTY_RECD,0.0),2) INTO :l_int_qty_paid_temp
				FROM CACHEQUE
				WHERE corp_id=:chr_p_corp_id
				AND SEQNUM_PAY=:chr_l_seq_no
				AND client=:chr_p_client;

		IS_ANY_ORA_ERROR
	
		printf("\n Inside Check Fraction l_int_qty_paid=|%lf| \n",l_int_qty_paid_temp);

	}
		
	printf("\n Entered into CA_GENAE 4TTT1\n");


/*	if(!strcmp(chr_p_evt_class,"NSA"))
	{
		EXEC SQL SELECT NVL(qtyshallot,0) INTO :l_int_qty_paid:i_qty_paid FROM ca_nis_allotment
			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client;

		IS_ANY_ORA_ERROR
	}
*/	if(!strcmp(chr_p_evt_class,"NSP"))
	{
		EXEC SQL SELECT NVL(aqty,0) INTO :l_int_qty_paid:i_qty_paid FROM ca_nis_application
			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client;

		IS_ANY_ORA_ERROR
	}
	if(!strcmp(chr_p_evt_class,"NS") && !strcmp(chr_p_ind,"F"))
	{


		EXEC SQL SELECT NVL(GREATEST(bqty1*brate1,bqty2*brate2,bqty3*brate3),0) INTO :l_int_max_amt:i_max_amt
					FROM ca_nis_bid
		  			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND BREVNO=:chr_l_seq_no;
		
		IS_ANY_ORA_ERROR

		EXEC SQL SELECT NVL(DECODE(:l_int_max_amt,brate1*bqty1,bqty1,bqty2*brate2,bqty2,brate3*bqty3,bqty3),0)
					INTO :l_int_qty_paid:i_qty_paid
					FROM ca_nis_bid
		  			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND BREVNO=:chr_l_seq_no;

		IS_ANY_ORA_ERROR

		EXEC SQL SELECT NVL(DECODE(:l_int_max_amt,brate1*bqty1,brate1,bqty2*brate2,brate2,brate3*bqty3,brate3),0)
					INTO :l_ipo_rate
					FROM ca_nis_bid
		  			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND BREVNO=:chr_l_seq_no;
		
		IS_ANY_ORA_ERROR

		printf("\n FOR NS:l_int_max_amt=|%lf| l_int_qty_paid=|%lf| l_ipo_rate=|%lf| \n",l_int_max_amt,l_int_qty_paid,l_ipo_rate);
	
/*		EXEC SQL SELECT NVL(GREATEST(bqty1,bqty2,bqty3),0) INTO :l_int_qty_paid:i_qty_paid
					FROM ca_nis_bid
		  			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND BREVNO=:chr_l_seq_no;
		
		IS_ANY_ORA_ERROR
			
		EXEC SQL SELECT NVL(GREATEST(brate1,brate2,brate3),0) INTO :l_ipo_rate 
		FROM ca_nis_bid 
			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND BREVNO=:chr_l_seq_no;	

		IS_ANY_ORA_ERROR
*/			
	}
		
	if(!strcmp(chr_p_evt_class,"BB"))
	{
/*		EXEC SQL SELECT NVL(applied_qty,0) INTO :l_int_qty_paid:i_qty_paid FROM ca_application
			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND CLN_SRNO=:chr_l_seq_no;

		IS_ANY_ORA_ERROR
*/
		EXEC SQL SELECT NVL(alloted_qty,0) INTO :l_int_qty_paid:i_qty_paid FROM ca_rtbb_allotment
			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND ROWID=:p_rowid;
			
		IS_ANY_ORA_ERROR
		
		EXEC SQL SELECT BK_BUILD_IND INTO :chr_l_bkbld_ind FROM CAEVENT
			WHERE corp_id=:chr_p_corp_id;

		IS_ANY_ORA_ERROR

		printf("\n Here:BK_BUILD_IND=|%s|\n",chr_l_bkbld_ind);

		if(strcmp(chr_l_bkbld_ind,"Y")==0)
		{
			EXEC SQL SELECT NVL(EARNINGS,0) INTO :l_ipo_rate FROM CAEVENT
			WHERE corp_id=:chr_p_corp_id;
		
			IS_ANY_ORA_ERROR

		}
		else if(strcmp(chr_l_bkbld_ind,"N")==0)
		{
			EXEC SQL SELECT NVL(ADD_ALLOT_QTY,0) INTO :l_ipo_rate FROM ca_rtbb_allotment
			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client;

			IS_ANY_ORA_ERROR
		}

	}
	if(!strcmp(chr_p_evt_class,"PO"))
	{
			EXEC SQL SELECT NVL(PUT_CALL_QTY,0) INTO :l_int_qty_paid:i_qty_paid FROM ca_putcall_app
			WHERE r_corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client
			AND notice_date=:chr_p_notice_dt;

			IS_ANY_ORA_ERROR
		
	}
	if(!strcmp(chr_p_evt_class,"RT") && !strcmp(chr_p_ind,"G"))
	{               
                        /*Commented By Prateek Singh For CA-Rights-Accounting entries- Sr No 161
			EXEC SQL SELECT NVL(APPLIED_QTY,0) INTO :l_int_qty_paid:i_qty_paid FROM ca_application
			WHERE CORP_ID=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND CLN_SRNO=:chr_l_seq_no;*/

                        /*Added By Prateek Singh for CA-Rights-Accounting entries- Sr No 161-START*/
			EXEC SQL SELECT NVL(SUM(APPLIED_QTY+ ADDQTY_APP),0) INTO :l_int_qty_paid:i_qty_paid FROM ca_application
			WHERE CORP_ID=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND CLN_SRNO=:chr_l_seq_no;
			/*Added By Prateek Singh for CA-Rights-Accounting entries- Sr No 161-END*/  

			IS_ANY_ORA_ERROR
		
	}
	if(!strcmp(chr_p_evt_class,"RT") && !strcmp(chr_p_ind,"H"))
	{
			EXEC SQL SELECT NVL(SUM(APPLIED_QTY + ADDQTY_APP),0) INTO :l_int_qty_paid_appl:i_qty_paid_appl FROM ca_application
			WHERE CORP_ID=:chr_p_corp_id AND CLN_CODE=:chr_p_client;
			
			IS_ANY_ORA_ERROR

			EXEC SQL SELECT NVL((ALLOTED_QTY + ADD_ALLOT_QTY),0) INTO :l_int_qty_paid_allot:i_qty_paid_allot FROM ca_rtbb_allotment
			WHERE CORP_ID=:chr_p_corp_id AND CLN_CODE=:chr_p_client;

			IS_ANY_ORA_ERROR

			printf("\n chr_p_evt_class=|%s| l_int_qty_paid_appl=|%lf| l_int_qty_paid_allot=|%lf| \n",chr_p_evt_class,l_int_qty_paid_appl,l_int_qty_paid_allot);

			if(l_int_qty_paid_appl > l_int_qty_paid_allot)
			{
				printf("\n Rights Refund \n");
				l_int_qty_paid= l_int_qty_paid_appl - l_int_qty_paid_allot;
			}
		

	}
	
/**	Check:Cash in Liue(BO) Quantity should xxxx.xx	**/


	if(!strcmp(chr_p_evt_class,"BO") || ( !strcmp(chr_p_evt_class,"SP") && !strcmp(chr_p_ind,"K")))
	{
		printf("\n Padding Fraction Bonus Qty=|%lf|\n", l_int_qty_paid_temp);

		EXEC SQL SELECT (:l_int_qty_paid_temp*100) INTO :l_int_qty_paid_num FROM DUAL;
		
		printf("\n After Multiply Fraction Bonus Qty=|%d|\n", l_int_qty_paid_num);

		IS_ANY_ORA_ERROR
		

/*		EXEC SQL SELECT CONCAT('0.',:l_int_qty_paid_num) INTO :chr_qty_paid FROM DUAL;

*/		EXEC SQL SELECT CONCAT('0.',DECODE(LENGTH(:l_int_qty_paid_num),1,CONCAT('0',:l_int_qty_paid_num),:l_int_qty_paid_num)) INTO :chr_qty_paid FROM DUAL;

		printf("\n After sprintf chr_qty_paid=|%s| \n",chr_qty_paid);


		if (strlen(chr_qty_paid) < 4)
		{
			CO_PadString(chr_qty_paid,'L',4,"0",l_debug_info_ptr);
		}

		printf("\n After Padding Fraction Bonus Qty=|%s|\n", chr_qty_paid);
		
	}
	else
	{
		printf("\n l_int_qty_paid=|%lf| \n",l_int_qty_paid);

		strcpy(chr_qty_paid,(char *)ltoa(l_int_qty_paid));

		printf("\n chr_qty_paid=|%s| \n",chr_qty_paid);
		printf("\n l_int_qty_paid=|%lf| \n",l_int_qty_paid);

		
		printf("\n Entered into CA_GENAE 4TTTr2\n");
		if (strlen(chr_qty_paid) < 11)
		{
			CO_PadString(chr_qty_paid,'L',11,"0",l_debug_info_ptr);
		}
	
	}

	printf("\n Entered into CA_GENAE 4TTTr3\n");
	if( !strcmp(chr_p_evt_class,"NSP"))
	{
		
		printf("\n For Fixed Price IPO... \n");

		EXEC SQL SELECT NVL(EARNINGS,0) INTO :l_ipo_rate FROM caevent
			WHERE corp_id=:chr_p_corp_id;

		IS_ANY_ORA_ERROR
	}
/*	if(!strcmp(chr_p_evt_class,"NSA"))
	{
		
		EXEC SQL SELECT NVL(PRICE,0) INTO :l_ipo_rate FROM ca_nis_allotment
			WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client;

		IS_ANY_ORA_ERROR
	}
*/
	if(!strcmp(chr_p_evt_class,"RT") && !strcmp(chr_p_ind,"G"))
	{
		EXEC SQL SELECT NVL(PRICE,0) INTO :l_ipo_rate FROM ca_application
				WHERE corp_id=:chr_p_corp_id AND CLN_CODE=:chr_p_client AND CLN_SRNO=:chr_l_seq_no;

		IS_ANY_ORA_ERROR
	}
	if(!strcmp(chr_p_evt_class,"RT") && !strcmp(chr_p_ind,"H"))
	{
		EXEC SQL SELECT NVL(SUB_PR,0) INTO :l_ipo_rate FROM CAEVENT
				WHERE corp_id=:chr_p_corp_id;

		IS_ANY_ORA_ERROR
	}


	printf("\n Price=|%lf| \n",l_ipo_rate);

	if(p_acc_typ_ind=='C')
	{
		if(!strcmp(chr_p_evt_class,"CD"))
		{	strcpy(chr_evt_class,"Div");
				sprintf(chr_l_description,"%s %s RD%s QTY%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"BI"))
		{		strcpy(chr_evt_class,"INT");
				sprintf(chr_l_description,"%s %s PD%s Q%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"RD"))
		{		strcpy(chr_evt_class,"RDB");
			   sprintf(chr_l_description,"%s %s RD%s Q%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"PO"))
		{		strcpy(chr_evt_class,"PUT");
				sprintf(chr_l_description,"%s %s DT%s Q%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"CA"))
		{		strcpy(chr_evt_class,"CAL");
				sprintf(chr_l_description,"%s %s DT%s Q%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);	
		}
		else
		if(!strcmp(chr_p_evt_class,"TK"))
		{		strcpy(chr_evt_class,"TAK");
/*				sprintf(chr_l_description,"%s %s @%s Q%s",chr_evt_class,chr_p_instr_isin,(char*)ltoa(l_ipo_rate),chr_qty_paid);
*/				sprintf(chr_l_description,"%s %s @%0.2lf Q%s",chr_evt_class,chr_p_instr_isin,l_ipo_rate,chr_qty_paid);
		}
		else
/*		if(!strcmp(chr_p_evt_class,"NSA"))
		{		strcpy(chr_evt_class,"IPO");
 			   sprintf(chr_l_description,"%s %s @%0.2lf Q%s",chr_evt_class,chr_p_instr_name,l_ipo_rate,chr_qty_paid);
		}

		else
*/		if(!strcmp(chr_p_evt_class,"NSP"))
		{		strcpy(chr_evt_class,"IPO");
/*			   sprintf(chr_l_description,"%s %s @%s Q%s",chr_evt_class,chr_p_instr_name,(char*)ltoa(l_ipo_rate),chr_qty_paid);
*/			   sprintf(chr_l_description,"%s %s @%0.2lf Q%s",chr_evt_class,chr_p_instr_name,l_ipo_rate,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"NS"))
		{
				strcpy(chr_evt_class,"IPO");
				sprintf(chr_l_description,"%s %s @%0.2lf Q%s",chr_evt_class,chr_p_instr_name,l_ipo_rate,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"RT"))
		{		strcpy(chr_evt_class,"RTS");
			    sprintf(chr_l_description,"%s %s @%0.2lf Q%s",chr_evt_class,chr_p_instr_isin,l_ipo_rate,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"BB"))
		{		strcpy(chr_evt_class,"TAK");
			    sprintf(chr_l_description,"%s %s @%0.2lf Q%s",chr_evt_class,chr_p_instr_isin,l_ipo_rate,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"CV"))
		{	strcpy(chr_evt_class,"CNV");
				sprintf(chr_l_description,"%s %s RD%s Q%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"BO"))
		{	strcpy(chr_evt_class,"FRACT");
				sprintf(chr_l_description,"%s %s %s QTY%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"SD"))
		{	strcpy(chr_evt_class,"SDV");
				sprintf(chr_l_description,"%s %s SD%s QTY%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"SP"))
		{	strcpy(chr_evt_class,"FRACT");
				sprintf(chr_l_description,"%s %s %s QTY%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}

	}
	else
	{
	 if(p_acc_typ_ind=='G')
	 {

		if(!strcmp(chr_p_evt_class,"CD"))
		{	strcpy(chr_evt_class,"D");
				sprintf(chr_l_description,"%s%s %s %s",chr_evt_class,l_chr_rec_dt,chr_p_instr_code,chr_p_client);
		}
		else
		if(!strcmp(chr_p_evt_class,"BI"))
		{		strcpy(chr_evt_class,"I");
				sprintf(chr_l_description,"%s%s %s %s",chr_evt_class,l_chr_rec_dt,chr_p_instr_code,chr_p_client);
		}
		else
		if(!strcmp(chr_p_evt_class,"RD"))
		{		strcpy(chr_evt_class,"R");
			   sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"PO"))
		{		strcpy(chr_evt_class,"P");
				sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"PC"))
		{		strcpy(chr_evt_class,"P");
				sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"TK"))
		{		strcpy(chr_evt_class,"T");
				sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
/*		if(!strcmp(chr_p_evt_class,"NSA"))
		{		strcpy(chr_evt_class,"IPO");
			    sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
*/		if(!strcmp(chr_p_evt_class,"NSP"))
		{		strcpy(chr_evt_class,"IPO");
			    sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"NS"))
		{
			strcpy(chr_evt_class,"BID");
			sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"RT"))
		{		strcpy(chr_evt_class,"RTS");
			    sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"BB"))
		{		strcpy(chr_evt_class,"T");
			    sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_code,chr_p_client,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"CV"))
		{	strcpy(chr_evt_class,"C");
				sprintf(chr_l_description,"%s %s %s Q%s",chr_evt_class,chr_p_instr_isin,l_chr_rec_dt,chr_qty_paid);
		}
		else
		if(!strcmp(chr_p_evt_class,"BO"))
		{	strcpy(chr_evt_class,"Frc");
				sprintf(chr_l_description,"%s%s %s %s",chr_evt_class,l_chr_rec_dt,chr_p_instr_code,chr_p_client);
		}
		else
	    if(!strcmp(chr_p_evt_class,"SD"))
		{	strcpy(chr_evt_class,"SD");
				sprintf(chr_l_description,"%s%s %s %s",chr_evt_class,l_chr_rec_dt,chr_p_instr_code,chr_p_client);
		}
		else
		if(!strcmp(chr_p_evt_class,"SP"))
		{	strcpy(chr_evt_class,"Frc");
				sprintf(chr_l_description,"%s%s %s %s",chr_evt_class,l_chr_rec_dt,chr_p_instr_code,chr_p_client);
		}

	 }

	}
printf("\n Entered into CA_GENAE 4TTTr5\n");		
		strcpy(p_description,chr_l_description);
		strcpy(chr_l_description,APL_NULL_STRING);

		sprintf(chr_g_log_buffer,"Before Leaving CO_Get_Narrative() Description=|%s|\n",p_description);	
 	
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		
		
	APL_GOBACK_SUCCESS	

	APL_GOBACK_SUCCESS
      RETURN_SUCCESS  :
      {
			CO_ProcMonitor(g_logfile," Success Inside CO_Get_Narrative()",l_debug_info_ptr,NULL);	
			return (APL_SUCCESS);
	  }
      RETURN_FAILURE  :
      {
		  CO_ProcMonitor(g_logfile," Failure Inside CO_Get_Narrative()",l_debug_info_ptr,NULL);	
	      return (APL_FAILURE);
		  
	  }
}
