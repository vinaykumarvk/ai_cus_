


   
   
   
   
   
   
   
   
   
   
   
   




#include <CO_HostStructdef.h>

EXEC SQL INCLUDE sqlca;


 
 int DL_Proc_AccEntRst(char *p_dt,char *p_batch_no,FILE *p_ptr_log_file,char **argv,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca			sqlca;
	FILE	*l_acct_entries_rst_rpt_file 		= 	NULL;
	char	chr_l_sysdatetime_A[APL_DATE_LEN]		=	APL_NULL_STRING;
	char	chr_l_trade_acct[APL_CLIENT_LENGTH]		=	APL_NULL_STRING;
	char	chr_l_h_client_a[APL_CLIENT_LENGTH]		=	APL_NULL_STRING;
	char	chr_l_trade_refno[APL_TXNREFNO_LEN]	=	APL_NULL_STRING;
	char	chr_l_h_refno_A[APL_TXNREFNO_LEN]		=	APL_NULL_STRING;
	char	chr_l_h_batch_date[APL_DATE_LEN]		=	APL_NULL_STRING;
	char	chr_l_h_status[APL_FLAG_LENGTH]			=	APL_NULL_STRING;
	char	chr_l_h_batch_no[6]						=	APL_NULL_STRING;
	char	chr_l_tmp										=	APL_NULL_CHAR;		
	char	chr_l_tmpchrlen[50]						=	APL_NULL_STRING;
	int	int_retval									=	0;
	int	int_l_corpnamelen							=	0;
	int	int_l_tmplen									=	0;
	int	i											=	0;
	int	int_l_nolines								=	0;
	short	l_i_account								=	0;
	short	l_i_refno								=	0;
	short int_l_condexists;
   char  chr_mainfuncarea[APL_MAINFUNCAREA_LEN];
   char  chr_l_condid[APL_CONDID_LEN];
	char	chr_l_cntry_flg ;
	

	EXEC SQL VAR chr_l_h_client_a 		IS STRING;
	EXEC SQL VAR chr_l_h_refno_A 			IS STRING;
	EXEC SQL VAR chr_l_h_status			IS STRING;
	EXEC SQL VAR chr_l_h_batch_date	IS STRING;
	EXEC SQL VAR chr_l_h_batch_no		IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Proc_AccEntRst \n",NULL,p_intl_env_data_struct_h_d);

	sqlca.sqlcode = 0;

	
	strcpy(chr_mainfuncarea,"ACC_ENTRIES");
   strcpy(chr_l_condid,"GR_ACC_ENTRIES");

   int_retval = CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condid,&int_l_condexists,l_debug_info_ptr);

   if (int_retval != APL_SUCCESS)
      APL_GOBACK_FAIL

   if (int_l_condexists > 0) 
   {
		chr_l_cntry_flg = '1';

		

		if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ))
		{
			EXEC SQL DECLARE Res_GRlatestbatchcurs CURSOR FOR
 	      SELECT PROC_NUM, BATCH_DATE, STATUS
    	   FROM  PRO_GRACCTENT
      	WHERE TO_CHAR(BATCH_DATE,'J')||PROC_NUM = ( SELECT MAX(TO_CHAR(BATCH_DATE,'J')||PROC_NUM)
         		                                       FROM PRO_GRACCTENT
               		                                 WHERE MODULE_IND = 'C' 
																		AND STATUS = 'P');
      	EXEC SQL OPEN Res_GRlatestbatchcurs;
      	IS_ANY_ORA_ERROR;
		}

		else 
		{
      	EXEC SQL DECLARE PN_GRlatestbatchcurs CURSOR FOR
      	SELECT PROC_NUM, BATCH_DATE, STATUS
     		FROM  PRO_GRACCTENT
      	WHERE TO_CHAR(BATCH_DATE,'J')||PROC_NUM = ( SELECT min(TO_CHAR(BATCH_DATE,'J')||PROC_NUM)
        		 	 	                                    FROM PRO_GRACCTENT
                  		                              WHERE MODULE_IND = 'C' 
																		AND STATUS = 'G');
			EXEC SQL OPEN PN_GRlatestbatchcurs;
      	IS_ANY_ORA_ERROR;
		}

	}
	else  
	{
		chr_l_cntry_flg = '2';
		EXEC SQL DECLARE latestbatchcurs CURSOR FOR
      SELECT PROC_NUM, BATCH_DATE, STATUS
      FROM  PRO_ACCTENT
      WHERE TO_CHAR(BATCH_DATE,'J')||PROC_NUM = ( SELECT MAX(TO_CHAR(BATCH_DATE,'J')||PROC_NUM)
                                                FROM PRO_ACCTENT
                                                WHERE MODULE_IND = 'C' );
      EXEC SQL OPEN latestbatchcurs;
      IS_ANY_ORA_ERROR;
	}

	if (chr_l_cntry_flg == '1')
	 {
		if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ))
		{	
	     EXEC SQL FETCH Res_GRlatestbatchcurs INTO :chr_l_h_batch_no,
                          				              :chr_l_h_batch_date,
                                    			     :chr_l_h_status;

  		  IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_NOTHING_RESET,
                        	                   "Accounting Entries",
                            	                 APL_NULL_STRING,
                                 	           APL_NULL_STRING );
		}
		else
		{
			EXEC SQL FETCH PN_GRlatestbatchcurs INTO :chr_l_h_batch_no,
   				                                   :chr_l_h_batch_date,
               			                          :chr_l_h_status;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_NOTHING_RESET,
 		                                         "Accounting Entries",
      		                                    APL_NULL_STRING,
            		                              APL_NULL_STRING );
		}
	 }
	else if (chr_l_cntry_flg == '2')
	{
       EXEC SQL FETCH latestbatchcurs INTO :chr_l_h_batch_no,
                                       :chr_l_h_batch_date,
                                       :chr_l_h_status;

       IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_NOTHING_RESET,
                                          "Accounting Entries",
                                          APL_NULL_STRING,
                                          APL_NULL_STRING );
     }

	if ( strcmp(chr_l_h_batch_no, p_batch_no ) ||
			strcmp( chr_l_h_batch_date, p_dt ) )
	{
		CO_InsertErr(	l_debug_info_ptr,
								ERR_DATA_INTEGRITY,
								"Not the latest batch",
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__ );
		APL_GOBACK_FAIL;
	}
	

	if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ) )
	{
		if ( chr_l_h_status[0] != 'P' )
		{
			CO_InsertErr(	l_debug_info_ptr,
									ERR_DATA_INTEGRITY,
									"Batch Not Passed",
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__ );
			APL_GOBACK_FAIL;
		}
	}
	else
	{
		if ( chr_l_h_status[0] != 'G' )
		{
			CO_InsertErr(	l_debug_info_ptr,
									ERR_DATA_INTEGRITY,
									"Batch Already Passed",
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__ );
			APL_GOBACK_FAIL;
		}
	}

	if ( chr_l_cntry_flg == '1')  
	{
		if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ) )
		{
			EXEC SQL CLOSE Res_GRlatestbatchcurs;
			IS_ANY_ORA_ERROR
		}

		else 
		{
			EXEC SQL CLOSE PN_GRlatestbatchcurs;
			IS_ANY_ORA_ERROR
		}
	}

	else if ((chr_l_cntry_flg) == '2' ) 
	{
		EXEC SQL CLOSE latestbatchcurs;
		IS_ANY_ORA_ERROR
	}

	if ( APL_FAILURE == CO_RtvSysDtTime(	chr_l_sysdatetime_A,
															l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	}

	chr_l_tmp = ' ';

	if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ) )
	{
		int_retval = CO_Rtv_RptFileName("AR","Accounting Entries Reset",92,p_intl_env_data_struct_h_d->processtion,argv,&l_acct_entries_rst_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

		fprintf(l_acct_entries_rst_rpt_file,"\n");
	
		fprintf(l_acct_entries_rst_rpt_file,"\n%30cACCOUNTING ENTRIES RESET REPORT\n\n",chr_l_tmp); //AIX -Warnings Removal
	
		int_l_corpnamelen = strlen(g_mt_commonsys_params_struct_h.ca_identname );
		int_l_tmplen 	  = ( 92 - int_l_corpnamelen ) / 2;
		memset( &chr_l_tmpchrlen, ' ', int_l_tmplen );

		fprintf(l_acct_entries_rst_rpt_file,"%s%s\n\n",chr_l_tmpchrlen,g_mt_commonsys_params_struct_h.ca_identname);
	
		chr_l_tmp = '-';

		for ( i= 0; i<93; i++ )
		{
			fprintf( l_acct_entries_rst_rpt_file, "%c", chr_l_tmp );
		}

		fprintf(l_acct_entries_rst_rpt_file,"\n");

		chr_l_tmp = ' ';
//AIX -Warnings Removal
		fprintf(l_acct_entries_rst_rpt_file,"Account%4cReference No%18cAmount%1cInstr. Code%1cInstr. Date%2cMoney Date%1cTrade Date",chr_l_tmp, chr_l_tmp, chr_l_tmp, chr_l_tmp, chr_l_tmp, chr_l_tmp);
	
		fprintf(l_acct_entries_rst_rpt_file,"\n");

		chr_l_tmp = '-';

		for ( i= 0; i<93; i++ )
		{
			fprintf( l_acct_entries_rst_rpt_file, "%c", chr_l_tmp );
		}

		chr_l_tmp = ' ';
		fprintf(l_acct_entries_rst_rpt_file,"\n\n");
	}
	
	

	if( int_l_condexists > 0 ) 
	{
		chr_l_cntry_flg = '1';
		
      EXEC SQL DECLARE GRTradeAccEntInfo CURSOR FOR
      SELECT CLIENT, IDENTIY_NO FROM DL_DEAL
      WHERE CLIENT||'^'||IDENTIY_NO IN (   SELECT BATCH_DATE FROM PRO_GRACCTENT
                                 WHERE BATCH_DATE     = :p_dt
                                 AND   PROC_NUM       = :p_batch_no
                                 AND   MODULE_IND      = 'C'
                                 AND   DEAL_IDENT  IS NOT NULL )
      FOR UPDATE OF HOST_DATE;

		EXEC SQL OPEN GRTradeAccEntInfo;
	
		IS_ANY_ORA_ERROR
	}

	else 
	{
		chr_l_cntry_flg = '2';
		EXEC SQL DECLARE TradeAccEntInfo CURSOR FOR
      SELECT CLIENT, IDENTIY_NO FROM DL_DEAL
      WHERE CLIENT||IDENTIY_NO IN (  SELECT DEAL_IDENT FROM PRO_ACCTENT
                                 WHERE BATCH_DATE     = :p_dt
                                 AND   PROC_NUM       = :p_batch_no
                                 AND   REC_REFER      = '2'
                                 AND   DEAL_IDENT  IS NOT NULL )
      FOR UPDATE OF HOST_DATE;

  	   EXEC SQL OPEN TradeAccEntInfo;
   
  		 IS_ANY_ORA_ERROR
   }

	int_l_nolines = 9;

	for(;;)
	{
		if (chr_l_cntry_flg == '1')
		{
	  		EXEC SQL FETCH GRTradeAccEntInfo INTO :chr_l_h_client_a:l_i_account,
														:chr_l_h_refno_A:l_i_refno;

	  		IS_ANY_ORA_ERROR

			if (APL_ZERO_RESULT_SET)
			break;
		}
		else if ( chr_l_cntry_flg == '2') 
		{
   	   EXEC SQL FETCH TradeAccEntInfo INTO :chr_l_h_client_a:l_i_account,
                                          :chr_l_h_refno_A:l_i_refno;

 		   IS_ANY_ORA_ERROR

 	      if (APL_ZERO_RESULT_SET)
         break;
      }


		EXEC SQL UPDATE DL_DEAL
			SET 	HOST_DATE 			= NULL,
					ACCESS_STAMP 	= :chr_l_sysdatetime_A
			WHERE CLIENT 			= RTRIM(:chr_l_h_client_a)
			AND   IDENTIY_NO 			= RTRIM(:chr_l_h_refno_A);

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															chr_l_h_client_a,
															chr_l_h_refno_A,
															APL_NULL_STRING );

		if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ) )
		{
			strcpy(chr_l_trade_acct,chr_l_h_client_a);
			strcpy(chr_l_trade_refno,chr_l_h_refno_A);
	
			int_retval = DL_Proc_AccEntWrRpt(l_acct_entries_rst_rpt_file,chr_l_trade_acct,chr_l_trade_refno,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

			int_l_nolines ++;

			if ( int_l_nolines == 23 )
			{
				fprintf( l_acct_entries_rst_rpt_file, "\f\n" );
				chr_l_tmp = '-';

				for ( i= 0; i<93; i++ )
				{
					fprintf( l_acct_entries_rst_rpt_file, "%c", chr_l_tmp );
				}

				fprintf(l_acct_entries_rst_rpt_file,"\n");

				chr_l_tmp = ' ';
//AIX -Warnings Removal
				fprintf(l_acct_entries_rst_rpt_file,"Account%4cReference No%18cAmount%1cInstr. Code%1cInstr. Date%2cMoney Date%1cTrade Date",chr_l_tmp, chr_l_tmp, chr_l_tmp, chr_l_tmp, chr_l_tmp, chr_l_tmp);
	
				fprintf(l_acct_entries_rst_rpt_file,"\n");

				chr_l_tmp = '-';

				for ( i= 0; i<93; i++ )
				{
					fprintf( l_acct_entries_rst_rpt_file, "%c", chr_l_tmp );
				}

				chr_l_tmp = ' ';
				fprintf(l_acct_entries_rst_rpt_file,"\n\n");
				int_l_nolines = 4;
			}

			if (int_retval != APL_SUCCESS)
				APL_GOBACK_FAIL
		}
	}
	if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ) )
	{
		chr_l_tmp = '-';

		for ( i= 0; i<93; i++ )
		{
			fprintf( l_acct_entries_rst_rpt_file, "%c", chr_l_tmp );
		}
	}

	if ( chr_l_cntry_flg == '1')        
	{
   	EXEC SQL CLOSE GRTradeAccEntInfo;
		IS_ANY_ORA_ERROR
	}
	else if ( chr_l_cntry_flg == '2')    
	{
   	EXEC SQL CLOSE TradeAccEntInfo;
		IS_ANY_ORA_ERROR
	}

	if (sqlca.sqlerrd[2] == 0)
	{
		CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);

		APL_GOBACK_FAIL
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ) )
		{
			int_retval = CO_Proc_RptClose(l_acct_entries_rst_rpt_file,l_debug_info_ptr);
		
		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);
		}
	
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Proc_AccEntRst \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		if ( !strcmp( p_intl_env_data_struct_h_d->h_mode, APL_FUNC_RESET ) )
		{
			int_retval = CO_Proc_RptClose(l_acct_entries_rst_rpt_file,l_debug_info_ptr);

			if (int_retval != APL_SUCCESS)
				return(APL_FAILURE);
		}
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Proc_AccEntRst \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}


 
 int DL_Proc_AccEntWrRpt(FILE *p_cltt_entries_rst_rpt_file,char *chr_p_acct,char *chr_p_refno,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	double	h_amt 						= 	0.0;
	char		h_dl_client[APL_CLIENT_LENGTH]	=	APL_NULL_STRING;
	char		h_indentity_no[APL_TXNREFNO_LEN]	=	APL_NULL_STRING;
	char 		h_instr_code[APL_INSTRUMENTCODE_LEN] 	=	APL_NULL_STRING;
	char		h_instrdate[11]						=	APL_NULL_STRING;
	char		h_moneydate[11] 					=	APL_NULL_STRING;
	char		h_dlt[11] 						=	APL_NULL_STRING;
	char		chr_l_tmp								=	APL_NULL_CHAR;
	short		i_instrdate							=	0;
	
	short		i_moneydate =0;
	short		i_dlt =0;
	short		i_amt =0;
	

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Proc_AccEntWrRpt\n",NULL,NULL);

	EXEC SQL SELECT 	CLIENT, 
							IDENTIY_NO, 
							AMOUNT,
							INSTR_CODE,
							TO_CHAR(INSTRUMENT_DT,'DD/MM/YYYY'),
							TO_CHAR(MONEY_SETL_DT,'DD/MM/YYYY'),
							TO_CHAR(DEAL_DATE,'DD/MM/YYYY')
	INTO 					:h_dl_client,
							:h_indentity_no,
							:h_amt:i_amt,
							:h_instr_code,
							:h_instrdate:i_instrdate,
							:h_moneydate:i_moneydate,
							:h_dlt:i_dlt
	FROM 	DL_DEAL
	WHERE CLIENT 	= :chr_p_acct
	AND   IDENTIY_NO 	= :chr_p_refno;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	if ( i_instrdate == -1 )
	{
		strcpy( h_instrdate, "          " );
	}

         //AIX -Warnings Removal
	fprintf(p_cltt_entries_rst_rpt_file,"%s%1c%s%1c%19.3lf%1c%s%2d%s%1c%s%1c%s\n",h_dl_client,chr_l_tmp,h_indentity_no,chr_l_tmp,h_amt,chr_l_tmp,h_instr_code,chr_l_tmp,h_instrdate,chr_l_tmp,h_moneydate,chr_l_tmp,h_dlt);

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Proc_AccEntWrRpt\n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Proc_AccEntWrRpt\n",NULL,NULL);

		return(APL_FAILURE);
	}
}
