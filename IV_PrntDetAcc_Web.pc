
#include "IV_Control_A.h"
#include "CO_OthStructdef.h"
#include "CO_Commdef.h"
#include <sys/types.h>    /* Added by Pravin for snow - CS0095530 */

EXEC SQL INCLUDE SQLCA;
extern FILE *fl_userlog;
extern FILE *fl_techlog;

int IV_PrntDetAccount_Web(char **argv,			
		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)

{	
	/* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
	FILE		*l_SesamIniFlPtr = NULL,*bill=NULL;
    #else
    FILE *l_SesamIniFlPtr = APL_OUT_FILE;
    FILE *bill = APL_OUT_FILE;
    #endif
    #ifdef OS_LINUX
     l_SesamIniFlPtr = APL_OUT_FILE;
	 bill = APL_OUT_FILE;
    #endif
   /* Added by kotubabu for Linux Migration-End*/
	
	char		chr_l_sesaminipath[PATH_LENGTH]= APL_NULL_STRING;
	char		chr_l_reportsdirpath[PATH_LENGTH]= APL_NULL_STRING;
	char 		l_param_value[100] = APL_NULL_STRING;
	char 		l_print_date[20] = APL_NULL_STRING;
	char 		l_client_flag[2] = APL_NULL_STRING; 
	char 		l_param_string[4000] = APL_NULL_STRING; // AIX Size issue modified from 20 to 4000
	char 		chr_l_sys_date[APL_DATE_LEN]= APL_NULL_STRING;
	char 		l_client[11] = APL_NULL_STRING;
	int	l_client_count=0;
	char **l_client_val = NULL;
	char 		*y;

	#define PIPESEP '|'
	#define PARAMSEP ';'

	int 	l_param_count=0,i=0,int_retstat=0,int_p_diff=0;

	char **l_param_val = NULL;

	SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct;

	EXEC SQL BEGIN DECLARE SECTION;


	char		chr_l_bill[PATH_LENGTH]= APL_NULL_STRING;
	char		file_name[25];
	char 		chr_reportstart[APL_DATE_LEN] = APL_NULL_STRING;
	char		chr_l_billprntfilename[PATH_LENGTH]= APL_NULL_STRING;
	char		chr_reportdesc[30]=APL_NULL_STRING;
	char 		chr_user[20] = APL_NULL_STRING;
	char		h_ora_rowid[APL_ROWID_LEN]= APL_NULL_STRING;
	/* Added by Anjaneyulu for ISKB_1737 - Starts */
	char l_compress_flag[2] = APL_NULL_STRING;
	char l_tar_path[2000]	= APL_NULL_STRING;
	char l_zip_path[2000]	= APL_NULL_STRING;
	char l_temp_path[400]	= APL_NULL_STRING;
	char new_temp_path[400]	= APL_NULL_STRING;    /*Added by Pravin for snow - CS0095530 */
	char l_remove_path[2000] = APL_NULL_STRING;
	char l_move_path[2000]	= APL_NULL_STRING;
	char l_master_flag[2] = APL_NULL_STRING;
	char l_sub_client[11] = APL_NULL_STRING;
	char l_common_name[2000] = APL_NULL_STRING;
	char l_time_stamp[30] = APL_NULL_STRING;
	char tar_file_area[30] = APL_NULL_STRING;      /*Added by Pravin for snow - CS0095530 */
	
	/* Added by Anjaneyulu for ISKB_1737 - Ends */
	//INTL_REPT_STRUCT_H *l_intl_rept_struct_ha;

	short i_ora_rowid;


	EXEC SQL VAR h_ora_rowid 				IS STRING;
	EXEC SQL VAR l_sys_ivcntl_param_struct.b_prev_date 	IS STRING;
	EXEC SQL VAR l_sys_ivcntl_param_struct.b_upto_date	IS STRING;
	EXEC SQL VAR l_client 				IS STRING;
	EXEC SQL VAR file_name IS STRING;
	EXEC SQL VAR chr_reportdesc IS STRING;
	EXEC SQL VAR chr_reportstart IS STRING;
	EXEC SQL VAR chr_user IS STRING;
	EXEC SQL VAR chr_l_bill IS STRING;
	/* Added by Anjaneyulu for ISKB_1737 - Starts */
	EXEC SQL VAR l_sub_client IS STRING;
	EXEC SQL VAR l_time_stamp IS STRING;
	EXEC SQL VAR tar_file_area IS STRING;      /*Added by Pravin for snow - CS0095530 */	
	EXEC SQL VAR l_common_name IS STRING;
	EXEC SQL VAR l_compress_flag IS STRING;
	EXEC SQL VAR l_master_flag IS STRING;
	EXEC SQL VAR l_tar_path IS STRING;
	EXEC SQL VAR l_zip_path IS STRING;
	EXEC SQL VAR l_temp_path IS STRING;
	EXEC SQL VAR new_temp_path IS STRING;      /*Added by Pravin for snow - CS0095530 */
	EXEC SQL VAR l_remove_path IS STRING;
	EXEC SQL VAR l_move_path IS STRING;
	/* Added by Anjaneyulu for ISKB_1737 - Ends */
	
	EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif


	printf(" \n Before SYS_BATCHPROC -- :|%s||%s||%s|\n",(char *)argv[0],(char *)argv[1],(char *)argv[2]);

        EXEC SQL SELECT ROWID 
		INTO :h_ora_rowid:i_ora_rowid 
		FROM SYS_BATCHPROC
		WHERE ( PROCESS_NAME = :argv[0]
				AND PROC_INIT = :argv[1]
				AND STARTDATE = :argv[2]
				AND STATUS = 'started' )
		FOR UPDATE OF STAT_DET,STATUS; 

	Alert("After SYS_BATCHPROC ORA Error :|%d|%s|\n",sqlca.sqlcode,h_ora_rowid);
	fflush(stdout);
	if(sqlca.sqlcode <0)
	{
		fprintf(fl_userlog,"Batch In Proc Table cannot be locked");  
		APL_GOBACK_FAIL
	}

	if(APL_ZERO_RESULT_SET)
	{
		fprintf(fl_userlog,"Record For Progname %s,Startdate %s Not In Batch Table \n",argv[0], argv[2]);
		CO_InsertErr(l_debug_info_ptr,
				ERR_REC_NOTFND,
				ltoa(sqlca.sqlcode),
				APL_NULL_STRING,
				APL_NULL_STRING,
				__LINE__,
				__FILE__);
		APL_GOBACK_FAIL
	}

	memset(&l_sys_ivcntl_param_struct, NULL , sizeof(SYS_IVCONTROLPARAM_STRUCT) );

	memset(chr_l_sesaminipath, APL_NULL_CHAR, PATH_LENGTH);
	memset(chr_l_reportsdirpath, APL_NULL_CHAR, PATH_LENGTH);
	memset(l_param_value,APL_NULL_CHAR,sizeof(l_param_value));
	memset(l_print_date,APL_NULL_CHAR,APL_DATE_LEN);
	memset(l_param_string,APL_NULL_CHAR,sizeof(l_param_string));
	memset(chr_l_sys_date,APL_NULL_CHAR,sizeof(APL_DATE_LEN));
	memset(l_client,APL_NULL_CHAR,sizeof(l_client));
	memset(chr_l_billprntfilename,APL_NULL_CHAR,sizeof(chr_l_billprntfilename));
	memset(chr_reportdesc,APL_NULL_CHAR,sizeof(chr_reportdesc));
	/* Added by Anjaneyulu for ISKB_1737 - Starts */
	memset(l_sub_client,APL_NULL_CHAR,sizeof(l_sub_client));
	memset(l_common_name,APL_NULL_CHAR,sizeof(l_common_name));
	memset(l_compress_flag,APL_NULL_CHAR,sizeof(l_compress_flag));
	memset(l_master_flag,APL_NULL_CHAR,sizeof(l_master_flag));
	memset(l_time_stamp,APL_NULL_CHAR,sizeof(l_time_stamp));
	memset(tar_file_area,APL_NULL_CHAR,sizeof(tar_file_area));	      /*Added by Pravin for snow - CS0095530 */
	memset(l_tar_path,APL_NULL_CHAR,sizeof(l_tar_path));
	memset(l_zip_path,APL_NULL_CHAR,sizeof(l_zip_path));
	memset(l_temp_path,APL_NULL_CHAR,sizeof(l_temp_path));
	memset(new_temp_path,APL_NULL_CHAR,sizeof(new_temp_path));	      /*Added by Pravin for snow - CS0095530 */
	memset(l_remove_path,APL_NULL_CHAR,sizeof(l_remove_path));
	memset(l_move_path,APL_NULL_CHAR,sizeof(l_move_path));
	memset(l_common_name,APL_NULL_CHAR,sizeof(l_common_name));
	/* Added by Anjaneyulu for ISKB_1737 - Ends */

	strcpy(chr_l_sesaminipath, getenv("INTL_ROOT_PATH"));
	strcat(chr_l_sesaminipath, "/intl_sun.cfg");


	if((l_SesamIniFlPtr = fopen(chr_l_sesaminipath, "r")) == (FILE *)NULL )
	{
		fprintf(fl_techlog, "Could not open intl_sun.cfg\n");
		APL_GOBACK_FAIL
	}

	/*if(APL_FAILURE == CO_ReadToken(l_SesamIniFlPtr, "INTL_HF_PATH", 
				chr_l_reportsdirpath, l_debug_info_ptr) )
	{
		fprintf(APL_OUT_FILE, "Token REPORTS_DIR not set.\n");

		APL_GOBACK_FAIL
	}

	fclose(l_SesamIniFlPtr);*/ //commented by Anjaneyulu
	Alert("handoff path=|%s| ", chr_l_reportsdirpath);

	strcpy(l_param_value,argv[9]);

	Alert("l_param_value :|%s|\n",l_param_value);

	if(CO_SplitStr(l_param_value,PIPESEP,&l_param_count,&l_param_val) == APL_FAILURE)
	{
		 APL_GOBACK_FAIL
	}

	for(i=0;i<l_param_count;i++)
	{
		if(i==0)
			strcpy(l_print_date,l_param_val[i]);
		else if(i==1)
			strcpy(l_client_flag,l_param_val[i]);
		else if(i==2)
			strcpy(l_param_string,l_param_val[i]);			
		/*Added by Anjaneyulu for ISKB_1737 - Starts*/
		else if(i==3)
			strcpy(l_compress_flag,l_param_val[i]);
		else if(i==4)
			strcpy(l_master_flag,l_param_val[i]);
		/*Added by Anjaneyulu for ISKB_1737 - Ends*/
	}
	
	/*Added by Anjaneyulu for ISKB_1737 - Starts*/
	if(strlen(l_compress_flag) > 0)
	{
		if (APL_FAILURE == CO_ReadToken(l_SesamIniFlPtr,"INTL_TEMP_PATH",l_temp_path,l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Error : INTL_TEMP_PATH not set in intl_sun.cfg File \n");
			printf("Error : INTL_TEMP_PATH not set in intl_sun.cfg File \n");
			APL_GOBACK_FAIL
		}
		
		if (APL_FAILURE == CO_ReadToken(l_SesamIniFlPtr,"INTL_HF_PATH",chr_l_reportsdirpath,l_debug_info_ptr))
	    {
		   fprintf(fl_userlog,"Error :\'INTL_HF_PATH \' not set in intl_sun.cfg File \n");
		   printf("Error :\'INTL_HF_PATH \' not set in intl_sun.cfg File \n");
		   APL_GOBACK_FAIL
	    }
/*Added by Pravin for snow - CS0095530 */		
				EXEC SQL SELECT TO_CHAR(SYSDATE,'DD_MON_YYYY')||CHR(95)||TO_CHAR(SYSDATE,'HH24_MI_SS')||CHR(47),'DETAIL_'||TO_CHAR(SYSDATE,'DD_MON_YYYY')||CHR(95)||TO_CHAR(SYSDATE,'HH24_MI_SS')
				INTO :l_time_stamp,:tar_file_area
				FROM DUAL;
		
		strcpy(new_temp_path,l_temp_path);
        strcat(new_temp_path,"DETAIL_");
	    strcat(new_temp_path,l_time_stamp);
		
		printf("\n new TAR PATH :|%s|\n",new_temp_path);
		fprintf(fl_userlog,"New TAR PATH: |%s|\n",new_temp_path);
		
		mkdir(new_temp_path,0755);
/*Added by Pravin for snow - CS0095530 */
	}

	if (APL_FAILURE == CO_ReadToken(l_SesamIniFlPtr,"INTL_HF_PATH",chr_l_reportsdirpath,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Error :\'INTL_HF_PATH \' not set in intl_sun.cfg File \n");
		printf("Error :\'INTL_HF_PATH \' not set in intl_sun.cfg File \n");
		APL_GOBACK_FAIL
	}
	/*Added by Anjaneyulu for ISKB_1737 - Ends */
	
	printf("l_print_date:|%s|\n",l_print_date);
	printf("l_client_flag:|%s|\n",l_client_flag);
	fprintf(fl_userlog, "Compress flag -- |%s|\n", l_compress_flag);//Added by Anjaneyulu for ISKB_1737
	printf("l_param_string:|%s|\n",l_param_string);


	if (strlen(l_print_date)<1)
	{
		fprintf(fl_userlog,"Mandatory Data :Bill Date Missing\n");
		APL_DATA_MISSING("Bill Date",APL_NULL_STRING,APL_NULL_STRING);
		APL_GOBACK_FAIL
	}

		if (APL_FAILURE == IV_Rtv_IVCNTLPARAM(&l_sys_ivcntl_param_struct,
							&int_retstat,
							l_debug_info_ptr))
		{
			if (int_retstat == IV_CRITCAL_ERROR_IND)
			{
				fprintf(fl_userlog,"Fatal Error In Billing Control Parameters Table\n");
				CO_InsertErr(	l_debug_info_ptr,
						DB_ERR_NO,
						"BCNTLPARM",
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__);
				APL_GOBACK_FAIL
			}
			else if (int_retstat == IV_NO_DATA_FOUND_ERR)
			{
				fprintf(fl_userlog,"Bill Control Parameters Not Found");
				CO_InsertErr(	l_debug_info_ptr,
						ERR_BILLCNTRL_PARAM_NOTFND,
						APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__);
				APL_GOBACK_FAIL
			}
		}

		printf("l_print_date :|%s|\n",l_print_date);

		strcpy(chr_l_sys_date,argv[2]);

		printf("Entering CO_Pro_DateComp :|%s||%s|\n",l_sys_ivcntl_param_struct.b_upto_date,l_print_date);

		if (APL_FAILURE == CO_Pro_DateComp(l_sys_ivcntl_param_struct.b_upto_date,
					&l_print_date,
					&int_p_diff,
					l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Failed To Compare Bill Upto Date And Input Date\n");
			APL_GOBACK_FAIL
		}

		if (int_p_diff>0)
		{
			CO_InsertErr(	l_debug_info_ptr,
					ERR_REC_NOTFND,
					APL_NULL_STRING,
					APL_NULL_STRING,
					APL_NULL_STRING,
					__LINE__,
					__FILE__);
			APL_GOBACK_FAIL
		}


		printf("Entering CO_Pro_DateComp :|%s||%s|\n",chr_l_sys_date,l_print_date);

		if (APL_FAILURE == CO_Pro_DateComp(&chr_l_sys_date,
					&l_print_date,
					&int_p_diff,
					l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Failed To Compare System Date And Input Date\n");
			APL_GOBACK_FAIL
		}


		if (int_p_diff > 0 && l_sys_ivcntl_param_struct.generate_ind == 'N')
		{	
			fprintf(fl_userlog,"Date Cannot Be Future Date\n");
			CO_InsertErr(l_debug_info_ptr,
					ERR_DATE_CANT_GRT_TODAY,
					APL_NULL_STRING,
					APL_NULL_STRING,
					APL_NULL_STRING,
					__LINE__,
					__FILE__);
			APL_GOBACK_FAIL
		}

		printf("l_client_flag :|%s|\n",l_client_flag);

		if(strcmp(l_client_flag,"A"))
		{
			printf("l_param_string :|%s|\n",l_param_string);
			fflush(stdout);
			
			if(CO_SplitStr(l_param_string,PARAMSEP,&l_client_count,&l_client_val) == APL_FAILURE)
			{
				 CO_ProcMonitor(fl_userlog,"Failure from CO_SplitStr -- PIPESEP -- ", NULL, NULL);
				 APL_GOBACK_FAIL
			}
			
			/****** Consider only those clients which are eligible for printing ******/
			
			for(i=0;i<l_client_count;i++)
			{			
				memset(l_client,APL_NULL_CHAR,sizeof(l_client));
				strcpy(l_client,l_client_val[i]);
			
				printf("l_client :|%s|\n",l_client);
				printf("l_print_date :|%s|\n",l_print_date);

				//printf("Entering IV_Rtv_IVCUSTSETUP :|%s|\n",y);

				fflush(stdout);
				
				/*Added by Anjaneyulu for ISKB_1737 - Starts*/
				if(!strcmp(l_master_flag,"M"))
				{
					EXEC SQL DECLARE allsub CURSOR FOR
						SELECT DISTINCT(A.CLIENT) AS CLN1 FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B
							WHERE A.CLIENT = B.CLIENT
							AND A.CLIENT IN(SELECT DISTINCT(C.CLN_CODE) FROM MT_CLIENT C 
							WHERE C.CLN_MASTER = :l_client)
							AND  A.DATEOF_BILLING = :l_print_date ORDER BY CLN1;

						IS_ANY_ORA_ERROR
				
					EXEC SQL OPEN allsub;
					
					for(;;)
					{
						memset(l_sub_client, APL_NULL_CHAR, sizeof(l_sub_client));

						EXEC SQL FETCH allsub INTO :l_sub_client;

						if(sqlca.sqlcode == 1403)
							break;
						
						fflush(stdout);
				
						strcpy(chr_l_billprntfilename,l_sub_client);
				strcat(chr_l_billprntfilename,"_Detail.htm");

                                        /**Added for Bill Print fix by  kotubabu-Start*/
                                        Alert("Enter to the fun1 IV_Add_Bill_Prnt_Det");
                                        fflush(stdout);
                                        if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_sub_client,
                                                                                l_print_date,
                                                                                "DETAIL BILL",
                                                                                chr_l_billprntfilename,
                                                                                "HTML",
                                                                                l_debug_info_ptr))
                                        {
                                          fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                          printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                          APL_GOBACK_FAIL
                                        }
                                       /**Added for Bill Print fix by kotubabu-End*/

						if(strlen(l_compress_flag) > 0)
						{
							strcpy(chr_l_bill,new_temp_path);      /*Added by Pravin for snow - CS0095530 */
							strcat(chr_l_bill,chr_l_billprntfilename);
						}
						else
						{
				strcpy(chr_l_bill,chr_l_reportsdirpath);
				strcat(chr_l_bill,chr_l_billprntfilename);
						}

				if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
				{
					CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
							APL_NULL_STRING,APL_NULL_STRING,
							__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}
				/*
				if((l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)(calloc(1,sizeof(INTL_REPT_STRUCT_H *)))) == NULL)
                                {
                                        printf("\n Problem in memory allocation for l_intl_rept_struct_ha ............. \n");
                                        fflush(stdout);
                                        APL_GOBACK_FAIL
                                 }

                                memset(l_intl_rept_struct_ha->report_name,APL_NULL_CHAR,51);
                                memset(l_intl_rept_struct_ha->report_desc,APL_NULL_CHAR,APL_REPDESC_LENGTH);
                                memset(l_intl_rept_struct_ha->report_date,APL_NULL_CHAR,APL_DATE_LEN);
                                memset(l_intl_rept_struct_ha->task_desc,APL_NULL_CHAR,61);
                                memset(l_intl_rept_struct_ha->fe_be_ind,APL_NULL_CHAR,APL_FLAG_LENGTH);
                                memset(l_intl_rept_struct_ha->usr,APL_NULL_CHAR,15);
				*/
				//sprintf(l_intl_rept_struct_ha->report_name,chr_l_billprntfilename); /* AIX related changes */
				/* strcpy(l_intl_rept_struct_ha->report_name,chr_l_billprntfilename);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcat(l_intl_rept_struct_ha->report_desc, " : HTML FORMAT");
				strcat(l_intl_rept_struct_ha->report_desc,APL_NULL_CHAR);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100 ;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				
				printf("\n  437  ");
				printf("\n |%s|%s| ", chr_l_billprntfilename, l_intl_rept_struct_ha->report_desc ); 
				printf("\n |%s| report File name is ", l_intl_rept_struct_ha->report_name);
				fflush(stdout);
				if (APL_FAILURE == CO_Proc_RptInsNew( l_intl_rept_struct_ha,"INTL_HF_PATH", l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}						
				*/

						if(strlen(l_compress_flag) == 0)
						{
							memset(file_name,APL_NULL_CHAR,sizeof(file_name));
							strcpy(file_name,l_sub_client);
							strcat(file_name,"_Detail.htm");
							memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
							strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
							strcat(chr_reportdesc, " : HTML FORMAT");
							strcpy(chr_reportstart, argv[2] );
							strcpy(chr_user, argv[3] );

							EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
							IS_ANY_ORA_ERROR
						}
			
						if (APL_FAILURE == IV_PrntDetCovPg_Web(bill,
								&l_print_date,
								&l_sub_client,
								&l_sys_ivcntl_param_struct,
								l_debug_info_ptr))
						{
							fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",l_sub_client);	
							APL_GOBACK_FAIL
						}			
										 
						fprintf(bill,"</BODY></HTML>");	
						fflush(bill);
						fclose(bill);
				//free(l_intl_rept_struct_ha);
					}
				
				}/*Added by Anjaneyulu for ISKB_1737 - Ends*/
				else//for selected clients -start
				{
					strcpy(chr_l_billprntfilename,l_client);
					strcat(chr_l_billprntfilename,"_Detail.htm");
                                        /*Added for Bill Print fix by kotubabu-Start*/
                                        Alert("Enter to the fun2 IV_Add_Bill_Prnt_Det");
                                        fflush(stdout);
                                        if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_client,
                                                                                l_print_date,
                                                                                "DETAIL BILL",
                                                                                chr_l_billprntfilename,
                                                                                "HTML",
                                                                                l_debug_info_ptr))
                                        {
                                          fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                          printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                          APL_GOBACK_FAIL
                                        }
                                       /**Added for Bill Print fix by kotubabu-End*/

					if(strlen(l_compress_flag) > 0)
					{
						strcpy(chr_l_bill,new_temp_path);      /*Added by Pravin for snow - CS0095530 */
						strcat(chr_l_bill,chr_l_billprntfilename);
					}
					else
					{
						strcpy(chr_l_bill,chr_l_reportsdirpath);
						strcat(chr_l_bill,chr_l_billprntfilename);
					}
					
					if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
					{
						CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
								APL_NULL_STRING,APL_NULL_STRING,
								__LINE__,__FILE__);
						APL_GOBACK_FAIL
					}
		
					if(strlen(l_compress_flag) == 0)
					{
				memset(file_name,APL_NULL_CHAR,sizeof(file_name));
            strcpy(file_name,l_client);
            strcat(file_name,"_Detail.htm");
            memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
            strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
            strcat(chr_reportdesc, " : HTML FORMAT");
            strcpy(chr_reportstart, argv[2] );
            strcpy(chr_user, argv[3] );

            EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
            IS_ANY_ORA_ERROR
					}

				if (APL_FAILURE == IV_PrntDetCovPg_Web(bill,
							&l_print_date,
							&l_client,
							&l_sys_ivcntl_param_struct,
							l_debug_info_ptr))
				{
					fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",l_client);	
					APL_GOBACK_FAIL
				}			
										 
				fprintf(bill,"</BODY></HTML>");	
				fflush(bill);
				fclose(bill);
					
				}//for selected clients - end
							
			}		
		}
		else
		{		
				/*
				if((l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)(calloc(1,sizeof(INTL_REPT_STRUCT_H *)))) == NULL)
				{
						  fprintf(fl_userlog,"\nProblem in memory allocation while preparing report structure\n");
						  APL_GOBACK_FAIL
				}
				*/
			/*Added by Anjaneyulu for ISKB_1737 for all clients - all masters - Starts*/
			if(!strcmp(l_master_flag,"C"))
			{
				/*EXEC SQL DECLARE allclient CURSOR FOR
                                SELECT DISTINCT(A.CLIENT)
                                FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B
                                WHERE A.CLIENT = B.CLIENT
                                AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date
                                UNION
                                SELECT DISTINCT(A.MASTER_CLT)
                                FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B
                                WHERE A.CLIENT = B.CLIENT
                                AND B.SEND_TO_MASTER_IND = 'M'
                                AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date;*/ //commented by Anjaneyulu
				
				/*EXEC SQL DECLARE allclient CURSOR FOR
                                SELECT DISTINCT(A.CLIENT) AS CLN
                                FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C
                                WHERE A.CLIENT = B.CLIENT
								AND A.CLIENT=C.CLN_CODE
								AND C.CLN_CODE<>C.CLN_MASTER
                                AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date
                                UNION
                                SELECT DISTINCT(A.MASTER_CLT) AS CLN
                                FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C
                                WHERE A.CLIENT = B.CLIENT
								AND A.CLIENT=C.CLN_CODE
								AND C.CLN_CODE<>C.CLN_MASTER
                                AND B.SEND_TO_MASTER_IND = 'S'
                                AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date ORDER BY CLN;*/
								/*query modified by shruthi kumbla for ISKB_1737 to fetch master clients whose bill generation is done but bill gen dobne for its sub accounts*/
				
				EXEC SQL DECLARE allclient CURSOR FOR
				SELECT DISTINCT(A.CLIENT) AS CLN 
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C 
				WHERE A.CLIENT = B.CLIENT
				AND B.CLIENT=C.CLN_CODE
				AND C.CLN_CODE!=C.CLN_MASTER
			    AND A.MASTER_CLT!=A.CLIENT
				AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date ORDER BY CLN;


			IS_ANY_ORA_ERROR			

			EXEC SQL OPEN allclient;
			IS_ANY_ORA_ERROR

			for(;;)
			{
				memset(l_client, APL_NULL_CHAR, 20);

				EXEC SQL FETCH allclient INTO :l_client;
				IS_ANY_ORA_ERROR

				Alert("Client we got here is |%s|",l_client);
				fflush(stdout);

				if(sqlca.sqlcode == 1403)
				{
					printf("\n No Clients found further ... breaking from loop");
					fflush(stdout);
					break;
				}
				/*memset(chr_l_bill,APL_NULL_CHAR,sizeof(chr_l_bill));

				strcpy(chr_l_bill,chr_l_reportsdirpath);
				strcat(chr_l_bill,l_client);
				strcat(chr_l_bill,"_Detail.htm");*/ //commented by Anjaneyulu
				
					strcpy(chr_l_billprntfilename,l_client);
					strcat(chr_l_billprntfilename,"_Detail.htm");
			
                                        /**Added for Bill Print fix by kotubabu-Start*/
                                        Alert("Enter to the fun3 IV_Add_Bill_Prnt_Det");
                                        fflush(stdout);
                                        if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_client,
                                                                                l_print_date,
                                                                                "DETAIL BILL",
                                                                                chr_l_billprntfilename,
                                                                                "HTML",
                                                                                l_debug_info_ptr))
                                        {
                                          fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                          printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                          APL_GOBACK_FAIL
                                        }
                                       /**Added for Bill Print fix by kotubabu-End*/	

					memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));
					if(strlen(l_compress_flag) > 0)
					{
						strcpy(chr_l_bill,new_temp_path);      /*Added by Pravin for snow - CS0095530 */
						strcat(chr_l_bill,chr_l_billprntfilename);
					}
					else
					{
						strcpy(chr_l_bill,chr_l_reportsdirpath);
						strcat(chr_l_bill,chr_l_billprntfilename);
					}
					fflush(stdout);

				if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
				{
					CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
							APL_NULL_STRING,APL_NULL_STRING,
							__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}

				/*memset(l_intl_rept_struct_ha->report_name,APL_NULL_CHAR,51);
				memset(l_intl_rept_struct_ha->report_desc,APL_NULL_CHAR,APL_REPDESC_LENGTH);
				memset(l_intl_rept_struct_ha->report_date,APL_NULL_CHAR,APL_DATE_LEN);
				memset(l_intl_rept_struct_ha->task_desc,APL_NULL_CHAR,61);
				memset(l_intl_rept_struct_ha->fe_be_ind,APL_NULL_CHAR,APL_FLAG_LENGTH);
				memset(l_intl_rept_struct_ha->usr,APL_NULL_CHAR,15);

				memset(file_name,APL_NULL_CHAR,sizeof(file_name));
				strcpy(file_name,l_client);
				strcat(file_name,"_Detail.htm");
				strcpy(l_intl_rept_struct_ha->report_name,file_name);
				Alert("|%s|", l_intl_rept_struct_ha->report_name);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcat(l_intl_rept_struct_ha->report_desc, " : HTML FORMAT");
				Alert("|%s|", l_intl_rept_struct_ha->report_desc);
				strcat(l_intl_rept_struct_ha->report_desc,APL_NULL_CHAR);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				Alert("|%s|",l_intl_rept_struct_ha->report_date);
				l_intl_rept_struct_ha->report_width = 100 ;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, "B");
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				
				if (APL_FAILURE == CO_Proc_RptInsNew( l_intl_rept_struct_ha,"INTL_HF_PATH", l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
				memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
				strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
				strcat(chr_reportdesc, " : HTML FORMAT");*/
				
					if(strlen(l_compress_flag) == 0)
					{
				memset(file_name,APL_NULL_CHAR,sizeof(file_name));
				strcpy(file_name,l_client);
				strcat(file_name,"_Detail.htm");
				memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
				strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
				strcat(chr_reportdesc, " : HTML FORMAT");
				strcpy(chr_reportstart, argv[2] );
				strcpy(chr_user, argv[3] );

				EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
				IS_ANY_ORA_ERROR 
					}
					
				if (APL_FAILURE == IV_PrntDetCovPg_Web(bill,
							&l_print_date,
							&l_client,
							&l_sys_ivcntl_param_struct,
							l_debug_info_ptr))
				{
					fprintf(fl_userlog,"Failed To Print Cover Page for %s\n",l_client);	
					APL_GOBACK_FAIL
				}
				fclose(bill);

			}
			EXEC SQL CLOSE allclient;
			IS_ANY_ORA_ERROR
			}//all clients -if
			else if(!strcmp(l_master_flag,"M"))//for all - masters
			{
				/*EXEC SQL DECLARE allmaster CURSOR FOR
                                SELECT DISTINCT(A.CLIENT) AS CLN
                                FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C
                                WHERE A.CLIENT = B.CLIENT
								AND A.CLIENT=C.CLN_CODE
								AND C.CLN_CODE=C.CLN_MASTER
                                AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date
                                UNION
                                SELECT DISTINCT(A.MASTER_CLT) AS CLN
                                FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C
                                WHERE A.CLIENT = B.CLIENT
								AND A.CLIENT=C.CLN_CODE
								AND C.CLN_CODE=C.CLN_MASTER
                                AND B.SEND_TO_MASTER_IND = 'M'
                                AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date ORDER BY CLN;*/
								
								/*query modified by shruthi kumbla for ISKB_1737 to fetch master clients whose bill generation is done but bill gen dobne for its sub accounts*/
				
				
				EXEC SQL DECLARE allmaster CURSOR FOR
				SELECT DISTINCT(C.CLN_MASTER) AS CLN 
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C 
				WHERE A.CLIENT = B.CLIENT
				AND A.MASTER_CLT=C.CLN_MASTER
				AND A.CLIENT=C.CLN_CODE
				AND B.SEND_TO_MASTER_IND = 'S'
				AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date ORDER BY CLN;
			
				IS_ANY_ORA_ERROR			

				EXEC SQL OPEN allmaster;
				IS_ANY_ORA_ERROR
				memset(l_client, APL_NULL_CHAR, sizeof(l_client));
				for(;;)
				{
					
					EXEC SQL FETCH allmaster INTO :l_client;
					
					if(sqlca.sqlcode == 1403)
						break;

					EXEC SQL DECLARE allmast_sub CURSOR FOR 
						SELECT DISTINCT(A.CLIENT) AS CLN1 FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B
							WHERE A.CLIENT = B.CLIENT
							AND A.CLIENT IN(SELECT DISTINCT(C.CLN_CODE) FROM MT_CLIENT C 
							WHERE C.CLN_MASTER = :l_client)
							AND  A.DATEOF_BILLING = :l_print_date ORDER BY CLN1;
					IS_ANY_ORA_ERROR
					
					EXEC SQL OPEN allmast_sub;
					for(;;)
					{
						memset(l_sub_client, APL_NULL_CHAR, sizeof(l_sub_client));

						EXEC SQL FETCH allmast_sub INTO :l_sub_client;

						if(sqlca.sqlcode == 1403)
							break;
						fflush(stdout);
				
						strcpy(chr_l_billprntfilename,l_sub_client);
						strcat(chr_l_billprntfilename,"_Detail.htm");
	
                                        /**Added for Bill Print fix by kotubabu-Start*/
                                        Alert("Enter to the fun4 IV_Add_Bill_Prnt_Det");
                                        fflush(stdout);
                                        if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_sub_client,
                                                                                l_print_date,
                                                                                "DETAIL BILL",
                                                                                chr_l_billprntfilename,
                                                                                "HTML",
                                                                                l_debug_info_ptr))
                                        {
                                          fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                          printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                          APL_GOBACK_FAIL
                                        }
                                       /**Added for Bill Print fix by kotubabu-End*/
	
						memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));
						if(strlen(l_compress_flag) > 0)
						{
							strcpy(chr_l_bill,new_temp_path);      /*Added by Pravin for snow - CS0095530 */
							strcat(chr_l_bill,chr_l_billprntfilename);
						}
						else
						{
							strcpy(chr_l_bill,chr_l_reportsdirpath);
							strcat(chr_l_bill,chr_l_billprntfilename);
						}
						fflush(stdout);
						
						if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
						{
							CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
									APL_NULL_STRING,APL_NULL_STRING,
									__LINE__,__FILE__);
							APL_GOBACK_FAIL
						}
				
						if(strlen(l_compress_flag) == 0)
						{
							memset(file_name,APL_NULL_CHAR,sizeof(file_name));
							strcpy(file_name,l_sub_client);
							strcat(file_name,"_Detail.htm");
							memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
							strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
							strcat(chr_reportdesc, " : HTML FORMAT");
							strcpy(chr_reportstart, argv[2] );
							strcpy(chr_user, argv[3] );

							EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
							IS_ANY_ORA_ERROR
						}
			
						if (APL_FAILURE == IV_PrntDetCovPg_Web(bill,
								&l_print_date,
								&l_sub_client,
								&l_sys_ivcntl_param_struct,
								l_debug_info_ptr))
						{
							fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",l_sub_client);	
							APL_GOBACK_FAIL
						}			
						fclose(bill);
				//free(l_intl_rept_struct_ha);
					}//inner for
					EXEC SQL CLOSE allmast_sub;
					/*if(sqlca.sqlcode == 1403)
					{
						printf("\n No Clients found further ... breaking from loop");
						fflush(stdout);
						break;
					}
					memset(chr_l_billprntfilename, APL_NULL_CHAR, sizeof(chr_l_billprntfilename));
					strcpy(chr_l_billprntfilename,l_client);
					strcat(chr_l_billprntfilename,"_Detail.htm");
					Alert("chr_l_billprntfilename = |%s|",chr_l_billprntfilename);
					
				
					memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));
					if(strlen(l_compress_flag) > 0)
					{
						strcpy(chr_l_bill,l_temp_path);
						strcat(chr_l_bill,chr_l_billprntfilename);
					}
					else
					{
						strcpy(chr_l_bill,chr_l_reportsdirpath);
						strcat(chr_l_bill,chr_l_billprntfilename);
					}
					Alert("chr_l_bill= |%s|",chr_l_bill);
					fflush(stdout);

					if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
					{
						CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
								APL_NULL_STRING,APL_NULL_STRING,
								__LINE__,__FILE__);
						APL_GOBACK_FAIL
					}

					if(strlen(l_compress_flag) == 0)
					{
						memset(file_name,APL_NULL_CHAR,sizeof(file_name));
						strcpy(file_name,l_client);
						strcat(file_name,"_Detail.htm");
						memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
						strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
						strcat(chr_reportdesc, " : HTML FORMAT");
						strcpy(chr_reportstart, argv[2] );
						strcpy(chr_user, argv[3] );

						EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
						IS_ANY_ORA_ERROR
					}
					
					if (APL_FAILURE == IV_PrntDetCovPg_Web(bill,
								&l_print_date,
								&l_client,
								&l_sys_ivcntl_param_struct,
								l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Failed To Print Cover Page for %s\n",l_client);	
						APL_GOBACK_FAIL
					}
					fclose(bill);*/
				}//outer for
				EXEC SQL CLOSE allmaster;
			}//for all - masters
		}

		/* Added by Anjaneyulu for ISKB_1737 for zip the files - Starts */
		if(strlen(l_compress_flag) > 0)
		{
/* Commented by Pravin for snow - CS0095530
			
			strcpy(l_tar_path,"tar -cvf ");
			strcat(l_tar_path,l_temp_path);
			strcat(l_tar_path,"Detail_");
			strcat(l_tar_path,l_time_stamp);
			strcat(l_tar_path,".tar ");
			strcat(l_tar_path,l_temp_path);
			strcat(l_tar_path,"*_Detail.htm");

			fprintf(fl_userlog,"TAR PATH :|%s|\n",l_tar_path);

			system(l_tar_path);

			strcpy(l_zip_path,"gzip -f ");
			strcat(l_zip_path,l_temp_path);
			strcat(l_zip_path,"Detail_");
			strcat(l_zip_path,l_time_stamp);
			strcat(l_zip_path,".tar");

			fprintf(fl_userlog,"ZIP PATH :|%s|\n",l_zip_path);
			
			system(l_zip_path);

			strcpy(l_remove_path,"rm -f ");
			strcat(l_remove_path,l_temp_path);
			strcat(l_remove_path,"*_");
			strcat(l_remove_path,"Detail.htm");

			fprintf(fl_userlog,"REMOVE PATH :|%s|\n",l_remove_path);
			
			system(l_remove_path);

			strcpy(l_move_path,"mv ");
			strcat(l_move_path,l_temp_path);
			strcat(l_move_path,"Detail");
			strcat(l_move_path,"_");
			strcat(l_move_path,l_time_stamp);
			strcat(l_move_path,".tar");
			strcat(l_move_path,".gz  ");
			strcat(l_move_path,chr_l_reportsdirpath);

Commented by Pravin for snow - CS0095530 */

/*Added by Pravin for snow - CS0095530 */

			strcpy(l_tar_path,"tar -cvhf ");
			strcat(l_tar_path,l_temp_path);
			strcat(l_tar_path,tar_file_area);
			strcat(l_tar_path,".tar ");
			strcat(l_tar_path,new_temp_path);

			fprintf(fl_userlog,"TAR PATH :|%s|\n",l_tar_path);

			system(l_tar_path);

			strcpy(l_zip_path,"gzip -f ");
			strcat(l_zip_path,l_temp_path);
		    strcat(l_zip_path,tar_file_area);
			strcat(l_zip_path,".tar");

			fprintf(fl_userlog,"ZIP PATH :|%s|\n",l_zip_path);

			system(l_zip_path);

			strcpy(l_remove_path,"rm -r ");
			strcat(l_remove_path,new_temp_path);

			fprintf(fl_userlog,"REMOVE PATH :|%s|\n",l_remove_path);

			system(l_remove_path);

			strcpy(l_move_path,"mv ");
			strcat(l_move_path,l_temp_path);
			strcat(l_move_path,tar_file_area);
			strcat(l_move_path,".tar");
			strcat(l_move_path,".gz  ");
			strcat(l_move_path,chr_l_reportsdirpath);

			fprintf(fl_userlog,"MOVE PATH :|%s|\n",l_move_path);
		
			system(l_move_path);
				
			strcpy(l_common_name,tar_file_area);
			strcat(l_common_name,".tar");
			strcat(l_common_name,".gz");
			strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
			strcat(chr_reportdesc, " : HTML FORMAT");
			strcpy(chr_reportstart, argv[2] );
			strcpy(chr_user, argv[3] );
			strcat(chr_l_reportsdirpath,l_common_name);
		
            EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :l_common_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_reportsdirpath  );
	
            IS_ANY_ORA_ERROR

			fflush(stdout);

/*Added by Pravin for snow - CS0095530 */
		
		}
	/* Added by Anjaneyulu for ISKB_1737 for zip the files - Ends */

	Alert(" rowid=|%s| ", h_ora_rowid);

	EXEC SQL UPDATE SYS_BATCHPROC
		 SET STATUS	='completed',
		 STAT_DET	= 'completed' 
		 WHERE	ROWID	= :h_ora_rowid; 

	IS_ANY_ORA_ERROR

	if (sqlca.sqlcode == 1403)
	{
		fprintf(fl_userlog,"Failed to Update batch_in_proc because row_id could not be int_found \n");
		APL_GOBACK_FAIL
	}
APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
	CO_ProcMonitor(APL_OUT_FILE,"Leaving IV_PrntDetAccount_Web successfully\n",NULL,NULL);
	return(APL_SUCCESS);

RETURN_FAILURE:
	CO_ProcMonitor(APL_OUT_FILE,"Leaving IV_PrntDetAccount_Web unsuccessfully\n",NULL,NULL);
	return (APL_FAILURE);
}


