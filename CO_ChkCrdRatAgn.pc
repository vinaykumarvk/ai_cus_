/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 * Module Name         :   	Master Maintenance
 *
 * File Name           : 		CO_ChkCrdRatAgn.pc
 *
 * Description         :   	This file contains functions for Credit Rating 
 *										Agency Validations in different modes.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author            Description					RFS No.
 * ---------   --------  ---------------  ------------------------	---------
 * 10/10/2005   1.0       Smita Bhat     New file to Validate Credit HDFCMT_003
 *													  Rating Agency Details
 *
 *********************************************************************/
 
#include "CO_HostStructdef.h"
 
EXEC SQL INCLUDE SQLCA.H;


/*********************************************************************************************************
 *                                                                                                       *
 * Function Name         : CO_Chk_CrdRatAgnValid                                                         *
 *                                                                                                       *
 * Description           : This Function Accepts Credit Rating Agency Code, Flags ind Agency Exists,		*
 *                         Exists in Authorised Status, Deleted Status and debug pointer.                *
 *                         Checks whether Credit Rating Agency Code in proper status.		               *
 *                         returns Success/Failure depending upon validn.                                *
 *                                                                                                       *
 * Parameter                           Type                             Mode   Description               *
 * ------------                        --------                         -----  ---------------           *
 * p_cr_agency_code                    char *                           I      Crd Rat Agn Code          *
 *                                                                                                       *
 * p_exist                             char                             I      Crd Rat Agn Exists Flag   *
 *                                                                                                       *
 * p_auth                              char                             I      Crd Rat Agn Auth Flag     *
 *                                                                                                       *
 * p_del                               char                             I      Crd Rat Agn Del Flag      *
 *                                                                                                       *
 * l_debug_info_ptr                    DEBUG_INFO_STRUCT_H **           I      Debug Info Structure      *
 *                                                                                                       *
 * Return Values        :                                                                                *
 *                                                                                                       *
 *  APL_SUCCESS  - SUCCESS                                                                               *
 *  APL_FAILURE  - FAILURE                                                                               *
 *                                                                                                       *
 ********************************************************************************************************/ 
int CO_Chk_CrdRatAgnValid(	char *p_cr_agency_code,
									char p_exist,
									char p_auth,
									char p_del,
									DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 	struct sqlca sqlca;	
	MT_CR_AGENCY_STRUCT_H l_mt_crdratagn_struct_h_a;
	MT_CR_AGENCY_STRUCT_I l_mt_crdratagn_struct_i_ab;
 	short success_flg = APL_SUCCESS;
 	char chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
 
 	#ifdef APL_THREADS 
 		APL_SET_CONTEXT
 		EXEC SQL CONTEXT USE :my_ctx_local;
 	#endif
 	
 	sqlca.sqlcode=0;
 
 	APL_IF_DEBUG
 	{
     	CO_ProcMonitor(	APL_OUT_FILE, 
	 							"Entered Function CO_Chk_CrdRatAgnValid\n",
 								NULL,
 								NULL);
 
 		memset( chr_l_buf, NULL, BUFFER_LEN );
       		
 		sprintf(				chr_l_buf, 
 								"The Credit Rating Agency Code is : |%s|\n", 
 								p_cr_agency_code);

 		CO_ProcMonitor(	APL_OUT_FILE, 
					 			chr_l_buf,	
 								NULL,
 								NULL);

 		memset( chr_l_buf, NULL, BUFFER_LEN );
 
     	sprintf(				chr_l_buf, 
 								"The Exist Flag is : %c\n", 
 								p_exist);
       
 		CO_ProcMonitor(	APL_OUT_FILE, 
 								chr_l_buf,	
 								NULL,
 								NULL);
 		
 		memset( chr_l_buf, NULL, BUFFER_LEN );
       		
 		sprintf(				chr_l_buf, 
 								"The Authorisation Flag is : %c\n", 
 								p_auth);
       
 		CO_ProcMonitor(	APL_OUT_FILE, 
 								chr_l_buf,	
 								NULL,
 								NULL);
 
 		memset( chr_l_buf, NULL, BUFFER_LEN );
       
 		sprintf(				chr_l_buf, 
 								"The Delete Flag is : %c\n", 
 								p_del);
       
 		CO_ProcMonitor(	APL_OUT_FILE, 
 								chr_l_buf,	
 								NULL,
 								NULL);
 		
 	}
 
 	if (!strlen(p_cr_agency_code))
 	{
 		APL_DATA_MISSING("CREDIT RATING AGENCY", APL_NULL_STRING, APL_NULL_STRING);
 		APL_GOBACK_FAIL
 	}
 
 	if (p_exist == NULL) p_exist = 'Y';

 	EXEC SQL SELECT * INTO :l_mt_crdratagn_struct_h_a:l_mt_crdratagn_struct_i_ab
				FROM MT_CR_AGENCY
 				WHERE AGENCY_CODE=:p_cr_agency_code;

 	IS_ANY_ORA_ERROR;

 	if ((sqlca.sqlcode == 1403) && (p_exist == 'Y'))
 	{
 		CO_InsertErr(	l_debug_info_ptr, 
						  ERR_CR_AGENCY_NOTFND,	
							p_cr_agency_code,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__);
 		APL_GOBACK_FAIL
 	}
 
 	if ((sqlca.sqlcode == 0) && (p_exist == 'N'))
 	{
			if ( APL_FAILURE == CO_InsertErr(   l_debug_info_ptr,
                                             ERR_CR_AGENCY_EXIST,
                                             p_cr_agency_code,
                                             APL_NULL_STRING,
                                             APL_NULL_STRING,
                                             __LINE__,
                                             __FILE__) )
 		{
 			APL_GOBACK_FAIL;
 		}
			success_flg = APL_FAILURE;
 	}

 	if ( ( l_mt_crdratagn_struct_i_ab.i_checker_dt == -1 ) && (p_auth=='Y'))
 	{
 		if ( APL_FAILURE == CO_InsertErr(	l_debug_info_ptr, 
														ERR_UNAUTH_CR_AGENCY, 
														p_cr_agency_code, 
														APL_NULL_STRING, 
														APL_NULL_STRING, 
														__LINE__, 	
														__FILE__) )
 		{
 			APL_GOBACK_FAIL;
 		}
 		success_flg = APL_FAILURE;
 	}
 	
 	if ( ( l_mt_crdratagn_struct_i_ab.i_checker_dt != -1 ) && (p_auth=='N'))
 	{
 		if ( APL_FAILURE == CO_InsertErr(	l_debug_info_ptr, 
														ERR_CR_AGENCY_AUTHORIZED, 
														p_cr_agency_code, 
														APL_NULL_STRING, 
														APL_NULL_STRING, 
														__LINE__, 
														__FILE__) )
 		{
 			APL_GOBACK_FAIL;
 		}
 		success_flg = APL_FAILURE;
 	}
 
 	l_mt_crdratagn_struct_h_a.h_status[2]='\0';	

 	if ((strcmp(l_mt_crdratagn_struct_h_a.h_status, "DU")) && (p_del=='Y'))
 	{
 		if ( APL_FAILURE == CO_InsertErr(	l_debug_info_ptr, 
														ERR_CR_AGENCY_NOTMARKEDDEL, 
														p_cr_agency_code, 
														APL_NULL_STRING, 
														APL_NULL_STRING, 
														__LINE__, 
														__FILE__) )
 		{
 			APL_GOBACK_FAIL;
 		}
 		success_flg = APL_FAILURE;
 	}
 	
 	if ((!strcmp(l_mt_crdratagn_struct_h_a.h_status, "DU")) && (p_del=='N'))
 	{
 		if ( APL_FAILURE == CO_InsertErr(	l_debug_info_ptr, 
														ERR_CR_AGENCY_MARKEDDEL, 
														p_cr_agency_code, 
														APL_NULL_STRING, 
														APL_NULL_STRING, 
														__LINE__, 
														__FILE__) )
 		{
 			APL_GOBACK_FAIL;
 		}
 		success_flg = APL_FAILURE;
 	}
 
 	if (APL_FAILURE == success_flg )
 	{
 		 APL_GOBACK_FAIL
 	}
 	else
 	{
 		APL_GOBACK_SUCCESS
 	}
 
    RETURN_SUCCESS :
 		APL_IF_DEBUG
 		{
          		CO_ProcMonitor(	APL_OUT_FILE,
 											"Leaving Function CO_Chk_CrdRatAgnValid with success\n",
 											NULL,
 											NULL);
 		}
       		return(APL_SUCCESS);
   
    RETURN_FAILURE :
 		APL_IF_DEBUG
 		{
          		CO_ProcMonitor(	APL_OUT_FILE,
 											"Leaving Function CO_Chk_CrdRatAgnValid with Errors\n",
 											NULL,
 											NULL);
 		}
       		return(APL_FAILURE);
}


/*********************************************************************************************************
 *                                                                                                       *
 * Function Name         : CO_Chk_RatingCdValid                                                          *
 *                                                                                                       *
 * Description           : This Function Accepts Credit Rating Agency Code, Rating Code and debug pointer*
 *                         Checks whether Credit Rating Agency & Rating Code exists 		               *
 *                         returns Success/Failure depending upon validn.                                *
 *                                                                                                       *
 *                                                                                                       *
 * Parameter                           Type                             Mode   Description               *
 * ------------                        --------                         -----  ---------------           *
 * p_cr_agency_code                    char *                           I      Credit Rating Agn Code    *
 *                                                                                                       *
 * p_rating_code								char *									I		 Rating Code					*
 *																																			*
 * l_debug_info_ptr                    DEBUG_INFO_STRUCT_H **           I      Debug Info Structure      *
 *                                                                                                       *
 * Return Values        :                                                                                *
 *                                                                                                       *
 *  APL_SUCCESS  - SUCCESS                                                                               *
 *  APL_FAILURE  - FAILURE                                                                               *
 *                                                                                                       *
 ********************************************************************************************************/
int CO_Chk_RatingCdValid (	char *p_cr_agency_code,
									char *p_rating_code,
									DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca sqlca;
   short success_flg = APL_SUCCESS;
   char chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	int  l_crdrat_cd_cnt = 0;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

   sqlca.sqlcode=0;

   APL_IF_DEBUG
   {
      CO_ProcMonitor(   APL_OUT_FILE,
                        "Entered Function CO_Chk_RatingCdValid\n",
                        NULL,
                        NULL);

      memset( chr_l_buf, NULL, BUFFER_LEN );

      sprintf(          chr_l_buf,
                        "The Credit Rating Agency Code is : |%s|\n",
                        p_cr_agency_code);

      CO_ProcMonitor(   APL_OUT_FILE,
                        chr_l_buf,
                        NULL,
                        NULL);

      memset( chr_l_buf, NULL, BUFFER_LEN );

      sprintf(          chr_l_buf,
                        "The Rating Code is : |%s|\n",
                        p_rating_code);

      CO_ProcMonitor(   APL_OUT_FILE,
                        chr_l_buf,
                        NULL,
                        NULL);
   }

   if (!strlen(p_cr_agency_code))
   {
      APL_DATA_MISSING("CREDIT RATING AGENCY", APL_NULL_STRING, APL_NULL_STRING);
      APL_GOBACK_FAIL
   }

	if (!strlen(p_rating_code))
	{
		APL_DATA_MISSING("RATING CODE",APL_NULL_STRING, APL_NULL_STRING);
		APL_GOBACK_FAIL
   }

   EXEC SQL SELECT NVL(COUNT(*),0) INTO :l_crdrat_cd_cnt
            FROM MT_CR_AGENCY_DET
            WHERE AGENCY_CODE=:p_cr_agency_code
				AND	RATING_CODE=:p_rating_code;

   IS_ANY_ORA_ERROR;

   if (l_crdrat_cd_cnt == 0)
   {
      CO_InsertErr(  l_debug_info_ptr,
                     ERR_RATING_CODE_NOTFND,
                     p_rating_code,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
      APL_GOBACK_FAIL
   }

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
      APL_IF_DEBUG
      {
               CO_ProcMonitor(   APL_OUT_FILE,
                                 "Leaving Function CO_Chk_RatingCdValid with success\n",
                                 NULL,
                                 NULL);
      }
            return(APL_SUCCESS);

   RETURN_FAILURE :
      APL_IF_DEBUG
      {
               CO_ProcMonitor(   APL_OUT_FILE,
                                 "Leaving Function CO_Chk_RatingCdValid with Errors\n",
                                 NULL,
                                 NULL);
      }
            return(APL_FAILURE);
}
