







#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;


int CR_Mod_HDAT(PRO_HDAT_STATIC_STRUCT_H *p_pro_hdat_static_struct_h_a,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
  PRO_HDAT_STATIC_STRUCT_I *l_pro_hdat_static_struct_ia;

  struct sqlca sqlca;

  char chr_acc_stamp_compare[APL_DATE_LEN];
  char chr_sys_access_stamp[APL_DATE_LEN];
  char chr_p_status[3];
  short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_iStatus,p_i_access_stamp;
  short p_i_access_stamp_compare;
  int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  l_pro_hdat_static_struct_ia=(PRO_HDAT_STATIC_STRUCT_I*)calloc(1,sizeof(PRO_HDAT_STATIC_STRUCT_I));

  APL_MALLOC_FAIL(l_pro_hdat_static_struct_ia)

  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Mod_HDAT. Going for mandatory checks\n",
		NULL,p_intl_envdatastruct_h);
 }


 if (!strlen(p_pro_hdat_static_struct_h_a->h_mem_ident)) l_pro_hdat_static_struct_ia->i_mem_ident =-1;
     else l_pro_hdat_static_struct_ia->i_mem_ident =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_instr_clt)) l_pro_hdat_static_struct_ia->i_instr_clt =-1;
     else l_pro_hdat_static_struct_ia->i_instr_clt =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_brkcd)) l_pro_hdat_static_struct_ia->i_brkcd =-1;
     else l_pro_hdat_static_struct_ia->i_brkcd =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_maker)) l_pro_hdat_static_struct_ia->i_maker =-1; 
     else l_pro_hdat_static_struct_ia->i_maker =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_maker_dt)) l_pro_hdat_static_struct_ia->i_maker_dt =-1; 
     else l_pro_hdat_static_struct_ia->i_maker_dt =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_checker)) l_pro_hdat_static_struct_ia->i_checker =-1; 
     else l_pro_hdat_static_struct_ia->i_checker =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_checker_dt)) l_pro_hdat_static_struct_ia->i_checker_dt =-1; 
     else l_pro_hdat_static_struct_ia->i_checker_dt =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_status_ind)) l_pro_hdat_static_struct_ia->i_status_ind =-1;
     else l_pro_hdat_static_struct_ia->i_status_ind =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_alternate_bidcd)) l_pro_hdat_static_struct_ia->i_alternate_bidcd =-1;
     else l_pro_hdat_static_struct_ia->i_alternate_bidcd =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_detailription)) l_pro_hdat_static_struct_ia->i_detailription =-1;
     else l_pro_hdat_static_struct_ia->i_detailription =0;
 if (!strlen(p_pro_hdat_static_struct_h_a->h_mtch_detail)) l_pro_hdat_static_struct_ia->i_mtch_detail =-1;
     else l_pro_hdat_static_struct_ia->i_mtch_detail =0;

  
 
 if (!strlen(p_pro_hdat_static_struct_h_a->h_access_stamp)) l_pro_hdat_static_struct_ia->i_access_stamp =-1; 
     else l_pro_hdat_static_struct_ia->i_access_stamp =0;

  if (int_error_flag == APL_FAILURE)
	{
	APL_GOBACK_FAIL
	}

 if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
  	int_error_flag = APL_FAILURE;
	APL_GOBACK_FAIL
	}
	

  
  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Input Function CR_Mod_HDAT\n",
		NULL,p_intl_envdatastruct_h);
 }

	strcpy(p_pro_hdat_static_struct_h_a->h_status_ind,STATUS_UAUTH);
        l_pro_hdat_static_struct_ia->i_status_ind =0;
   	strcpy(p_pro_hdat_static_struct_h_a->h_maker,p_intl_envdatastruct_h->usr);
	l_pro_hdat_static_struct_ia->i_maker=0;
  	strcpy(p_pro_hdat_static_struct_h_a->h_maker_dt,chr_sys_access_stamp);
	l_pro_hdat_static_struct_ia->i_maker_dt=0;
	strcpy(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_sys_access_stamp);
	l_pro_hdat_static_struct_ia->i_access_stamp =0;
	EXEC SQL INSERT INTO PRO_HDAT_STATIC VALUES (:p_pro_hdat_static_struct_h_a:l_pro_hdat_static_struct_ia);

	IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_HDATID_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
        }

  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
	strcpy(p_pro_hdat_static_struct_h_a->h_checker,APL_NULL_STRING);
	strcpy(p_pro_hdat_static_struct_h_a->h_checker_dt,APL_NULL_STRING);

        
	EXEC SQL SELECT ACCESS_STAMP
		  INTO :chr_acc_stamp_compare:p_i_access_stamp_compare
		  FROM PRO_HDAT_STATIC
	       	  WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident
	        	FOR UPDATE OF STATUS;

	if (!strcmp(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_acc_stamp_compare))
	   {
		strcpy(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_sys_access_stamp);
		l_pro_hdat_static_struct_ia->i_access_stamp =0;
	        strcpy(p_pro_hdat_static_struct_h_a->h_status_ind,STATUS_UAUTH);

		EXEC SQL UPDATE PRO_HDAT_STATIC SET 
            		MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
			MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
			CHECKER =:p_pro_hdat_static_struct_h_a->h_checker:p_i_checker,
			CHECKER_DT =:p_pro_hdat_static_struct_h_a->h_checker:p_i_checkerdt,
            		STATUS =:p_pro_hdat_static_struct_h_a->h_status_ind:l_pro_hdat_static_struct_ia->i_status_ind,
            		INSTRUCT_CLT =:p_pro_hdat_static_struct_h_a->h_instr_clt:l_pro_hdat_static_struct_ia->i_instr_clt,
            		BRKCD =:p_pro_hdat_static_struct_h_a->h_brkcd:l_pro_hdat_static_struct_ia->i_brkcd,
            		ALTERNATE_BIDCD =:p_pro_hdat_static_struct_h_a->h_alternate_bidcd:l_pro_hdat_static_struct_ia->i_alternate_bidcd,
            		DETAIL =:p_pro_hdat_static_struct_h_a->h_detailription:l_pro_hdat_static_struct_ia->i_detailription,
            		MTCH_INFO =:p_pro_hdat_static_struct_h_a->h_mtch_detail:l_pro_hdat_static_struct_ia->i_mtch_detail,
			ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
	       	  		WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident;

		IS_ANY_ORA_ERROR;	
	   }
	else 
	   {
		if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}
	

  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
	{

        
	EXEC SQL SELECT ACCESS_STAMP,STATUS 
		  INTO :chr_acc_stamp_compare:p_i_access_stamp_compare, :chr_p_status:p_iStatus
		  FROM PRO_HDAT_STATIC
	       	  WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident
	        	FOR UPDATE OF STATUS;

	IS_ANY_ORA_ERROR;	

	if (!strcmp(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_acc_stamp_compare))
	   {
	   if(!strcmp(chr_p_status,STATUS_DEL_UAUTH))
		{
		EXEC SQL DELETE PRO_HDAT_STATIC 
	       	  		WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident;

		IS_ANY_ORA_ERROR;	

		}
	   else if(!strcmp(chr_p_status,STATUS_UAUTH))
		{
		strcpy(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_sys_access_stamp);
		l_pro_hdat_static_struct_ia->i_access_stamp =0;
	        strcpy(p_pro_hdat_static_struct_h_a->h_status_ind,STATUS_AUTH);

		EXEC SQL UPDATE PRO_HDAT_STATIC SET 
            		CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            		CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
			ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            		STATUS =:p_pro_hdat_static_struct_h_a->h_status_ind:l_pro_hdat_static_struct_ia->i_status_ind
	       	  WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident;

		IS_ANY_ORA_ERROR;	
		}
	   }
	else
	  {
		if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}

  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
	strcpy(p_pro_hdat_static_struct_h_a->h_checker,APL_NULL_STRING);
	strcpy(p_pro_hdat_static_struct_h_a->h_checker_dt,APL_NULL_STRING);


        
	EXEC SQL SELECT ACCESS_STAMP
		  INTO :chr_acc_stamp_compare:p_i_access_stamp_compare
		  FROM PRO_HDAT_STATIC
	       	  WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident
	        	FOR UPDATE OF STATUS;

	if (!strcmp(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_acc_stamp_compare))
	   {
		strcpy(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_sys_access_stamp);
		l_pro_hdat_static_struct_ia->i_access_stamp =0;
		strcpy(p_pro_hdat_static_struct_h_a->h_status_ind,STATUS_DEL_UAUTH);

		EXEC SQL UPDATE PRO_HDAT_STATIC SET 
            		MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
			MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
			CHECKER =:p_pro_hdat_static_struct_h_a->h_checker:p_i_checker,
			CHECKER_DT =:p_pro_hdat_static_struct_h_a->h_checker:p_i_checkerdt,
			ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            		STATUS =:p_pro_hdat_static_struct_h_a->h_status_ind:l_pro_hdat_static_struct_ia->i_status_ind
	       	  WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident;

		IS_ANY_ORA_ERROR;	
	   }
	else 
	   {
		if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}

  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
	strcpy(p_pro_hdat_static_struct_h_a->h_checker,APL_NULL_STRING);
	strcpy(p_pro_hdat_static_struct_h_a->h_checker_dt,APL_NULL_STRING);

        
	EXEC SQL SELECT ACCESS_STAMP
		  INTO :chr_acc_stamp_compare:p_i_access_stamp_compare
		  FROM PRO_HDAT_STATIC
	       	  WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident
	        	FOR UPDATE OF STATUS;

	if (!strcmp(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_acc_stamp_compare))
	   {
		strcpy(p_pro_hdat_static_struct_h_a->h_access_stamp,chr_sys_access_stamp);
		l_pro_hdat_static_struct_ia->i_access_stamp =0;
		strcpy(p_pro_hdat_static_struct_h_a->h_status_ind,STATUS_AUTH);
		p_i_checker =0;


		EXEC SQL UPDATE PRO_HDAT_STATIC SET 
			CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
			CHECKER_DT =:chr_sys_access_stamp:p_i_makerdt,	
			ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            		STATUS =:p_pro_hdat_static_struct_h_a->h_status_ind:l_pro_hdat_static_struct_ia->i_status_ind
	       	  WHERE MEM_IDENT =:p_pro_hdat_static_struct_h_a->h_mem_ident;

		IS_ANY_ORA_ERROR;	
	   }
	else 
	   {
		if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}

	
  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}
  APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{
APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Leaving Function CR_Mod_HDAT Successfully\n",
		NULL,p_intl_envdatastruct_h);
 }

	free(l_pro_hdat_static_struct_ia);
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Leaving Function CR_Mod_HDAT Unsuccessfully\n",
		NULL,p_intl_envdatastruct_h);
 }

	free(l_pro_hdat_static_struct_ia);
	return(APL_FAILURE);
	}

}

int CR_Chk_HDATMkrChkr(char *p_hdatstatic,char *p_user,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  struct sqlca sqlca;
  char maker[APL_USERID_LEN]; 
  short p_i_maker;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  p_i_maker =0;

  
  
  if (!strlen(p_hdatstatic))
	{
	APL_DATA_MISSING("MEMBER ID Code",APL_NULL_STRING,APL_NULL_STRING);
	} 

  if (!strlen(p_user))
	{
	APL_DATA_MISSING("User",APL_NULL_STRING,APL_NULL_STRING);
	}
 
  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}

  EXEC SQL VAR maker IS STRING(15); 
  EXEC SQL SELECT MAKER 
		INTO :maker:p_i_maker
		FROM PRO_HDAT_STATIC
	       	     	WHERE MEM_IDENT =:p_hdatstatic;

	IS_ANY_ORA_ERROR	

  if (!strcmp(p_user,maker)) 
	{
	 if (CO_InsertErr
			(l_debug_info_ptr,
			ERR_MAKER_CHECKER_SAME, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
	APL_GOBACK_FAIL
	}
  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}

  APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
	return(APL_FAILURE);
	}
 
}


