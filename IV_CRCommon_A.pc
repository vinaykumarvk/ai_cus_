



#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA.H;

int IV_Rtv_MTInstrurity(	char  *p_instr_code,
								char  *chr_p_instrdesc,
								int   *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

struct sqlca sqlca;
char 	h_instr_code[APL_INSTRUMENTCODE_LEN];
char  h_instr_name[131];

EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL VAR h_instr_code IS STRING;
EXEC SQL VAR h_instr_name IS STRING;
EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif

memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
memset(h_instr_name,APL_NULL_CHAR,131);

strcpy(h_instr_code,p_instr_code);

	EXEC SQL SELECT INSTR_NAME 
	INTO :h_instr_name
	FROM MT_INSTRUMENT
	WHERE INSTR_CODE= :h_instr_code;

	if (sqlca.sqlcode <0)
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
		CO_InsertErr(l_debug_info_ptr,DB_ERR_NO,APL_NULL_STRING,
							APL_NULL_STRING,APL_NULL_STRING,
							__LINE__,__FILE__);
		APL_GOBACK_FAIL
	}

	if (sqlca.sqlcode == 1403)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;
	strcpy(chr_p_instrdesc,h_instr_name);

APL_GOBACK_SUCCESS;

		

		RETURN_SUCCESS:
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of BBDbSelINSTRUMENT\n",NULL,NULL);
			}
		return APL_SUCCESS;		

		RETURN_FAILURE:
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of BBDbSelINSTRUMENT\n",NULL,NULL);
			}		
		return APL_FAILURE;		

}
			



int IV_Rtv_MTCurrency (  char  *p_currencycode,
                        char  *p_ibbscode,
                        int   *int_p_decimallen,
                        int   *int_p_retstat,
                        DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

struct sqlca sqlca;
char  h_currencycode[APL_CCYCODE_LEN];
char  h_gl_cd[APL_CCYCODE_LEN];
int   h_dec_len = 0;

EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL VAR h_currencycode IS STRING;
EXEC SQL VAR h_gl_cd IS STRING;
EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
   APL_SET_CONTEXT
   SQL CONTEXT USE :my_ctx_local;
#endif

memset(h_currencycode,APL_NULL_CHAR,APL_CCYCODE_LEN);
memset(h_gl_cd,APL_NULL_CHAR,APL_CCYCODE_LEN);

strcpy(h_currencycode,p_currencycode);

   EXEC SQL SELECT GL_CD,DEC_LEN
   INTO :h_gl_cd,:h_dec_len
   FROM DL_CURRENCY
   WHERE CURRENCY_CD= :h_currencycode;

   if (sqlca.sqlcode <0)
   {
      *int_p_retstat = IV_CRITCAL_ERROR_IND;
      CO_InsertErr(l_debug_info_ptr,DB_ERR_NO,APL_NULL_STRING,
                     APL_NULL_STRING,APL_NULL_STRING,
                     __LINE__,__FILE__);
      APL_GOBACK_FAIL
   }

   if (sqlca.sqlcode == 1403)

   {
      *int_p_retstat = IV_NO_DATA_FOUND_ERR;
      APL_GOBACK_FAIL
   }

   *int_p_retstat = IV_SUCCESS;
   strcpy(p_ibbscode,h_gl_cd);
   *int_p_decimallen = h_dec_len;

APL_GOBACK_SUCCESS;

      

      RETURN_SUCCESS:
         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of BBDbSelCURRENCY\n",NULL,NULL);
         }
      return APL_SUCCESS;

      RETURN_FAILURE:

         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of BBDbSelCURRENCY\n",NULL,NULL);
         }
      return APL_FAILURE;

}


int IV_Rtv_GetMasterAcc(char *chr_p_client,char *p_mstclt_a,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

EXEC SQL BEGIN DECLARE SECTION;
char h_dl_client[APL_CLIENT_LENGTH],h_mstclt[APL_CLIENT_LENGTH];
short i_mstclt=0;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR h_mstclt  IS STRING;
EXEC SQL END DECLARE SECTION;


struct sqlca sqlca;

strcpy(h_dl_client,chr_p_client);

   EXEC SQL SELECT CLN_master INTO :h_mstclt
         FROM MT_CLIENT
         WHERE CLN_CODE = :h_dl_client;

   IS_ANY_ORA_ERROR;

   if(sqlca.sqlcode == 1403)
       CO_InsertErr(l_debug_info_ptr,ERR_MSTACC_NOTFND,h_dl_client,APL_NULL_STRING,APL_NULL_STRING, __LINE__ , __FILE__);

   if(i_mstclt == -1)

      APL_GOBACK_FAIL;

   strcpy(p_mstclt_a,h_mstclt);

   APL_GOBACK_SUCCESS;

RETURN_SUCCESS:
                return APL_SUCCESS;

        RETURN_FAILURE:
                return APL_FAILURE;


}

