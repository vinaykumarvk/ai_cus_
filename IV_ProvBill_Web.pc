


#include "IV_Control_A.h"
EXEC SQL INCLUDE SQLCA.H;


int IV_ProvbillWeb(	 FILE *bill,
			 FILE *fl_techlog,	
			 FILE *fl_userlog,	
			 char *chr_p_billdt,
			 char *chr_p_client,
			 SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
			 IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,			
			 char p_mastsub,
			 double *p_tot_trans,
			 double *p_tot_provcust,
			 double *p_tot_ca,
			 double *p_tot_oth,
			 double *p_tot_comm,
			 double *p_tot_tax,
			 double *p_tot_educess,
			 double *p_final_total,
			 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 
	 extern int IV_ProvSummary(char *,char *,SYS_IVCONTROLPARAM_STRUCT,IV_CLIENTSETUP_STRUCT,
	 			  char ,double *,double *,double *,double *,double *,double *,
				  double *,double *,int *,DEBUG_INFO_STRUCT_H **);

	double p_totcomm=0,p_totcust=0,p_tottran=0,p_totcash=0,p_tototh=0,p_totca=0,p_totdepo=0,p_totother=0 ;
	int int_retval=0;
	int int_currpos= 0;
	char chr_l_buf[BUFFER_LEN];
	double p_tot_portf =0;

	double g_prov_cust_chrg = 0.0;
	int l_actual_days = 0;
	int l_billing_days = 0;

	double l_tot_trans = 0.0;
	double l_tot_provcust = 0.0;
	double l_tot_ca = 0.0;
	double l_tot_oth = 0.0;
	double l_tot_comm = 0.0;
	double l_tot_tax = 0.0;
	double l_tot_educess = 0.0;
	double l_final_total = 0.0;


	APL_IF_DEBUG
	{
		memset(chr_l_buf,NULL,BUFFER_LEN);
		sprintf(chr_l_buf,"The billdt is %s",chr_p_billdt);	
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,NULL);

		memset(chr_l_buf,NULL,BUFFER_LEN);
		sprintf(chr_l_buf,"The client is  %s",chr_p_client);	
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,NULL);

		memset(chr_l_buf,NULL,BUFFER_LEN);
		sprintf(chr_l_buf,"The MastSub is %c",p_mastsub);	
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,NULL);
	}	
 

	Alert("Entering IV_ProvSummary for client :|%s||%s||%c|\n",chr_p_client,chr_p_billdt,p_mastsub);

	fprintf(fl_userlog, "Calling function IV_ProvSummary for Client [%s] n date of billing [%s] \n", chr_p_client, chr_p_billdt);
	if(APL_FAILURE == IV_ProvSummary(chr_p_client,chr_p_billdt,l_sys_ivcntl_param_struct,
				l_iv_clt_setup_struct,p_mastsub,&p_totcomm,&p_totcust,&p_tottran,
				&p_totcash,&p_totca,&p_totother,&p_totdepo,&p_tototh,
				&int_currpos,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Could not Calculate IV_ProvSummary for client |%s| and dateof_billing |%s| \n", chr_p_client, chr_p_billdt);
		fprintf(fl_techlog, "Failure from IV_ProvSummary for client |%s| and dateof_billing |%s| \n", chr_p_client, chr_p_billdt);
		APL_GOBACK_FAIL
	}
	else
	{
		fprintf(fl_userlog,"Success from IV_ProvSummary for client |%s| and dateof_billing |%s| \n", chr_p_client, chr_p_billdt);
	}

	/* Commented by Bageshri as done in the function IV_ProvSummary */
	/******** Changes has to be done for Provisional Custody Charge *****************

	Alert("p_totcust :|%lf|\n",p_totcust);
	Alert("chr_p_billdt :|%s|\n",chr_p_billdt);

	EXEC SQL SELECT (B_UPTO_DATE - B_PREV_DATE),
		(TO_DATE(:chr_p_billdt,'DD/MM/YYYY HH24:MI:SS') - B_PREV_DATE)
		INTO :l_billing_days,:l_actual_days
		FROM SYS_IVCONTROLPARAM;

	printf("sqlca.sqlcode :|%d|\n",sqlca.sqlcode);

	Alert("l_actual_days :|%d|\n",l_actual_days);
	Alert("l_billing_days :|%d|\n",l_billing_days);

	g_prov_cust_chrg = ((p_totcust * l_billing_days)/l_actual_days);

	Alert("g_prov_cust_chrg :|%lf|\n",g_prov_cust_chrg);

	p_totcust = g_prov_cust_chrg;


	*******************************************************************************/

	printf("JC::::: After IV_ProvSummary -- p_totcust -- |%f| \n", p_totcust);

	p_totcomm = p_totcust + p_tottran + p_totca + p_tototh ;

	fprintf(fl_userlog,"Calling IV_ProvFtr_Web to print footer for Client [%s] n date of billing [%s]\n", chr_p_client, chr_p_billdt);
	if (APL_FAILURE == IV_ProvFtr_Web(bill,fl_userlog,chr_p_billdt,chr_p_client,
			l_sys_ivcntl_param_struct,l_iv_clt_setup_struct,
			p_mastsub,p_totcomm,p_totcust,p_tottran,p_totca,p_tototh,
			&int_currpos,					
			&l_tot_trans,
			&l_tot_provcust,
			&l_tot_ca,
			&l_tot_oth,
			&l_tot_comm,
			&l_tot_tax,
			&l_tot_educess,
			&l_final_total,
			l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Could not print footer for client: %s and dateof_billing :%s\n",chr_p_client,chr_p_billdt);
		fprintf(fl_techlog,"Failure from IV_ProvFtr_Web for Client |%s| n date of billing |%s|\n", chr_p_client, chr_p_billdt);
		APL_GOBACK_FAIL
	}
	else
	{
		fprintf(fl_userlog,"Success from IV_ProvFtr_Web to print footer for client [%s] n date of billing [%s]\n", chr_p_client, chr_p_billdt);
	}

	*p_tot_trans = l_tot_trans;
	*p_tot_provcust = l_tot_provcust;
	*p_tot_ca = l_tot_ca;
	*p_tot_oth = l_tot_oth;
	*p_tot_comm = l_tot_comm;
	*p_tot_tax = l_tot_tax;
	*p_tot_educess = l_tot_educess;
	*p_final_total = l_final_total;


	 
	fflush(bill);	

	RETURN_SUCCESS:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_ProvbillWeb Successfully\n",NULL,NULL);
                return APL_SUCCESS;

        RETURN_FAILURE:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_ProvbillWeb UnSuccessfully\n",NULL,NULL);
		return APL_FAILURE;
}

int IV_ProvSummary(	 char *chr_p_client,
			 char *chr_p_billdt,
			 SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
			 IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,
			 char p_mastsub,
			 double *p_totcomm,
			 double *p_totcust,
			 double *p_tottran,
			 double *p_totcash,
			 double *p_totca,
			 double *p_totother,
			 double *p_totdepo,
			 double *p_tototh,
			 int *int_currpos,
			 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

char l_cust_cd[200] = APL_NULL_STRING;
char l_tran_cd[200] = APL_NULL_STRING;
char l_cash_cd[200] = APL_NULL_STRING;
char l_ca_cd[200] = APL_NULL_STRING;
char l_other_cd[200] = APL_NULL_STRING;
char l_depo_cd[200] = APL_NULL_STRING;
char l_oth_cd[200] = APL_NULL_STRING;

char l_client[20] = APL_NULL_STRING;
char l_billdate[20] = APL_NULL_STRING;

char l_mastsub = APL_NULL_CHAR;

EXEC SQL BEGIN DECLARE SECTION;

EXEC SQL VAR l_client IS STRING;
EXEC SQL VAR l_billdate IS STRING;

EXEC SQL END DECLARE SECTION;

double l_tot_cust_fee = 0.0;
double l_tot_tran_fee = 0.0;
double l_tot_cash_fee = 0.0;
double l_tot_ca_fee = 0.0;
double l_tot_other_fee = 0.0;
double l_tot_depo_fee = 0.0;
double l_tot_oth_fee = 0.0;

double l_custfee = CUSTODYFEE;
double l_ptcfee = PTC_FEE;

double l_amenddealcode = AMEND_FEE_IND;
double l_repairfee = REPAIRFEE;
double l_deldealcode = DELV_TXN_FEE;
double l_dealcode = TXNFEE;
double l_latedealcode = LATETXNFEE;
double l_booktrfr_code = IV_BOOKTRF_FEE;
double l_trnarnfee = TURNAROUNDTXNFEE;
double l_settalgefee = SETTALGEFEE;
double l_bogmsgfee = BOG_MSG_FEE;
double l_baskettxn = BUCK_TXN_FEE; 
double l_mutualfund = MUTUALFUND_TXN_FEE; 

double l_cashfee = CASH_ITEMS ;

double l_cdfee = CASH_DIV_FEE;
double l_bifee = IV_BONDINT_FEE ;
double l_freecacode = FREECAFEE;
double l_vpcacode = VPCAFEE;
double l_brfee = BOND_RDM_FEE; 
double l_pfee = PUT_FEE; 
double l_cfee = CALL_FEE; 
double l_ppfee = PART_PUT_FEE; 
double l_pcfee = PART_CALL_FEE; 
double l_pbrfee = PART_BOND_RDM_FEE; 
double l_pptcfee = PART_PTC_FEE; 

double l_minimumfeecode	= MINFEECODE;
double l_maximumfeecode  = MAXFEECODE;	

double l_depofee = DEPOFEE ;

double l_spl_bill = SPECIALBILLING;
double l_under_bill = UNDERBILLING;
double l_over_bill = OVERBILLING;

/* Bageshri Fix */
double g_prov_factor = 0.0;
int l_actual_days = 0;
int l_billing_days = 0;
double h_cmamount = 0.0;
double h_nil_adj = 0.0;
double h_min_adj = 0.0;
double h_max_adj = 0.0;
double l_cust_fee = 0.0;

short i_cmamt = 0.0;
short i_nil_adj = 0.0;
short i_min_adj = 0.0;
short i_max_adj = 0.0;

strcpy(l_client,chr_p_client);
strcpy(l_billdate,chr_p_billdt);
l_mastsub = p_mastsub;

printf("l_client :|%s|\n",l_client);
printf("l_billdate :|%s|\n",l_billdate);
printf("l_mastsub :|%c|\n",l_mastsub);

	/******** Changes has to be done for Provisional Custody Charge *****************/

	Alert("chr_p_billdt :|%s|\n",chr_p_billdt);

	EXEC SQL SELECT (B_UPTO_DATE - B_PREV_DATE),
		(TO_DATE(:chr_p_billdt,'DD/MM/YYYY HH24:MI:SS') - B_PREV_DATE)
		INTO :l_billing_days,:l_actual_days
		FROM SYS_IVCONTROLPARAM;

	printf("sqlca.sqlcode :|%d|\n",sqlca.sqlcode);

	Alert("l_actual_days :|%d|\n",l_actual_days);
	Alert("l_billing_days :|%d|\n",l_billing_days);

	g_prov_factor = (double)l_billing_days/l_actual_days;

	Alert("g_prov_factor:|%lf|\n",g_prov_factor);

/*********** Custody Charges *****************************/

/***** Bageshri Fix : min/max to be applied after provisional cust chrg calculation

EXEC SQL SELECT SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ) **************/

EXEC SQL DECLARE curcust CURSOR FOR
SELECT COMM_AMT,NIL_FEES_ADJ,MINIMUMFEE_ADJ,MAXIMUM_FEE_ADJ
	FROM IV_SERVICE_CHRG 
	WHERE CLIENT = :l_client
	AND DATEOF_BILLING = :l_billdate
	AND CONS_FLAG = :l_mastsub
	AND SERVICE_CD IN (:l_custfee,:l_ptcfee);

EXEC SQL OPEN curcust;
printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);

IS_ANY_ORA_ERROR

for(;;)
{
   EXEC SQL FETCH curcust INTO
	:h_cmamount:i_cmamt,:h_nil_adj:i_nil_adj,:h_min_adj:i_min_adj,:h_max_adj,:i_max_adj;

   if (sqlca.sqlcode == 1403)
   break;

   if(h_cmamount == 0)
   	l_cust_fee = h_nil_adj;
   else
   {
	if((h_min_adj == 0)&&(h_max_adj == 0))
		l_cust_fee = h_cmamount * g_prov_factor;
	else
	{
		if(h_min_adj != 0)
		{
			if((h_cmamount * g_prov_factor)>(h_cmamount + h_min_adj))
				l_cust_fee = h_cmamount * g_prov_factor;
			else
				l_cust_fee = h_cmamount + h_min_adj;
		}
		if(h_max_adj != 0)
		{
			if((h_cmamount * g_prov_factor)<(h_cmamount + h_max_adj))
				l_cust_fee = h_cmamount * g_prov_factor;
			else
				l_cust_fee = h_cmamount + h_max_adj;
		}
	}

   }

   l_tot_cust_fee = l_tot_cust_fee + l_cust_fee;

	Alert("l_cust_fee :|%lf| l_tot_cust_fee |%lf|\n",l_cust_fee,l_tot_cust_fee);

}
EXEC SQL CLOSE curcust;

IS_ANY_ORA_ERROR
printf("l_tot_cust_fee :|%lf|\n",l_tot_cust_fee);

/*********** Transaction Charges *****************************/

EXEC SQL SELECT SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ)
	INTO :l_tot_tran_fee
	FROM IV_SERVICE_CHRG 
	WHERE CLIENT = :l_client
	AND DATEOF_BILLING = :l_billdate
	AND CONS_FLAG = :l_mastsub
        AND SERVICE_CD IN (:l_amenddealcode,:l_repairfee,:l_deldealcode,
			 :l_dealcode,:l_latedealcode,:l_booktrfr_code,
			 :l_trnarnfee,:l_settalgefee,:l_bogmsgfee,
			 :l_baskettxn,:l_mutualfund);


printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);

printf("l_tot_tran_fee :|%lf|\n",l_tot_tran_fee);

/*********** Cash Charges *****************************/

EXEC SQL SELECT SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ)
	INTO :l_tot_cash_fee
	FROM IV_SERVICE_CHRG 
	WHERE CLIENT = :l_client
	AND DATEOF_BILLING = :l_billdate
	AND CONS_FLAG = :l_mastsub
	AND SERVICE_CD IN (:l_cashfee);

printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);

printf("l_tot_cash_fee :|%lf|\n",l_tot_cash_fee);


/*********** CA Charges *****************************/

EXEC SQL SELECT SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ)
	INTO :l_tot_ca_fee
	FROM IV_SERVICE_CHRG 
	WHERE CLIENT = :l_client
	AND DATEOF_BILLING = :l_billdate
	AND CONS_FLAG = :l_mastsub
	AND SERVICE_CD IN (:l_cdfee,:l_bifee,:l_freecacode,	
			 :l_vpcacode,:l_brfee,:l_pfee,
			 :l_cfee,:l_ppfee,:l_pcfee,
			 :l_pbrfee,:l_pptcfee);

printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);

printf("l_tot_ca_fee :|%lf|\n",l_tot_ca_fee);

/*********** Other Charges *****************************/

EXEC SQL SELECT SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ)
	INTO :l_tot_other_fee
	FROM IV_SERVICE_CHRG 
	WHERE CLIENT = :l_client
	AND DATEOF_BILLING = :l_billdate
	AND CONS_FLAG = :l_mastsub
	AND SERVICE_CD IN (:l_minimumfeecode,:l_maximumfeecode);

printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);

printf("l_tot_other_fee :|%lf|\n",l_tot_other_fee);

/*********** Depository Charges *****************************/

EXEC SQL SELECT SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ)
	INTO :l_tot_depo_fee
	FROM IV_SERVICE_CHRG 
	WHERE CLIENT = :l_client
	AND DATEOF_BILLING = :l_billdate
	AND CONS_FLAG = :l_mastsub
	AND SERVICE_CD IN (:l_depofee);

printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);

printf("l_tot_depo_fee :|%lf|\n",l_tot_depo_fee);

/*********** Other Services Charges *****************************/

EXEC SQL SELECT NVL(SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ),0)
	INTO :l_tot_oth_fee
	FROM IV_SERVICE_CHRG 
	WHERE CLIENT = :l_client
	AND DATEOF_BILLING = :l_billdate
	AND CONS_FLAG = :l_mastsub
	AND SERVICE_CD IN 
	(SELECT DISTINCT SERVICE_CD FROM IV_SERV_OTH WHERE CLIENT=:l_client AND SERVICE_STAT='A' 
	UNION 
	SELECT DISTINCT SERVICE_CD FROM IV_SERVICE_CHRG 
	WHERE SERVICE_CD IN (:l_spl_bill,:l_over_bill,:l_under_bill) 
	AND CLIENT=:l_client);

printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);

printf("l_tot_oth_fee :|%lf|\n",l_tot_oth_fee);

printf("JC::::: l_tot_cust_fee -- |%f| -- End of IV_ProvSummary \n", l_tot_cust_fee);

*p_totcust = l_tot_cust_fee;
*p_tottran = l_tot_tran_fee;
*p_totcash = l_tot_cash_fee;
*p_totca = l_tot_ca_fee;
*p_totother = l_tot_other_fee;
*p_totdepo = l_tot_depo_fee;
*p_tototh = l_tot_oth_fee;


APL_GOBACK_SUCCESS


RETURN_SUCCESS:
    APL_IF_DEBUG
    {
	CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_ProvSummary succesfully\n",NULL,NULL);
    }
    return(APL_SUCCESS);

RETURN_FAILURE:
    APL_IF_DEBUG
    {
	CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_ProvSummary unsuccesfully\n",NULL,NULL);
    }
    return (APL_FAILURE);

}
