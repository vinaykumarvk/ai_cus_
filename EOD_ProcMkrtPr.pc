













#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int CR_Mod_MkrtPr(	MT_DLYMKTPRC_STRUCT_H *p_mt_dlymktprc_struct_h,
							INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
 

  MT_DLYMKTPRC_STRUCT_I *l_mt_dlymktprc_struct_i;

  struct sqlca sqlca;

  char chr_p_access_stamp_cmp[APL_DATE_LEN];

  short p_i_access_stamp_cmp =0;

 #ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
 #endif

  APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CDBUpdMktPrcFn\n",
					NULL,p_intl_envdatastruct_h);
 	}

 

  l_mt_dlymktprc_struct_i =(MT_DLYMKTPRC_STRUCT_I *)calloc(1,sizeof(MT_DLYMKTPRC_STRUCT_I));

  APL_MALLOC_FAIL(l_mt_dlymktprc_struct_i)

 

  if (!strlen(p_mt_dlymktprc_struct_h->h_instr_code))
      APL_DATA_MISSING("Instrurity Code",APL_NULL_STRING,APL_NULL_STRING);
  if (!strlen(p_mt_dlymktprc_struct_h->h_prdt))
      APL_DATA_MISSING("Price Date",APL_NULL_STRING,APL_NULL_STRING);
  if (0 ==p_mt_dlymktprc_struct_h->h_closing_pr)
      APL_DATA_MISSING("Market Price",APL_NULL_STRING,APL_NULL_STRING);

 

  if (strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
  {
     if (!strlen(p_mt_dlymktprc_struct_h->h_access_stamp))
         APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING);
  }

  if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  {
     APL_GOBACK_FAIL
  }
  
 

 l_mt_dlymktprc_struct_i->i_prdt=0;
 l_mt_dlymktprc_struct_i->i_instr_code =0;
 l_mt_dlymktprc_struct_i->i_closing_pr=0;

 if (!strlen(p_mt_dlymktprc_struct_h->h_updtmode)) l_mt_dlymktprc_struct_i->i_updtmode =-1;
     else l_mt_dlymktprc_struct_i->i_updtmode =0;
 if (!strlen(p_mt_dlymktprc_struct_h->h_access_stamp)) l_mt_dlymktprc_struct_i->i_access_stamp =-1;
     else l_mt_dlymktprc_struct_i->i_access_stamp =0;
 if (!strlen(p_mt_dlymktprc_struct_h->h_maker)) l_mt_dlymktprc_struct_i->i_maker =-1;
     else l_mt_dlymktprc_struct_i->i_maker =0;
 if (!strlen(p_mt_dlymktprc_struct_h->h_maker_dt)) l_mt_dlymktprc_struct_i->i_maker_dt =-1;
     else l_mt_dlymktprc_struct_i->i_maker_dt =0;
 if (!strlen(p_mt_dlymktprc_struct_h->h_mkrtpr_stat)) l_mt_dlymktprc_struct_i->i_mkrtpr_stat =-1;
     else l_mt_dlymktprc_struct_i->i_mkrtpr_stat =0;
 if (!strlen(p_mt_dlymktprc_struct_h->h_checker)) l_mt_dlymktprc_struct_i->i_checker =-1;
     else l_mt_dlymktprc_struct_i->i_checker =0;
 if (!strlen(p_mt_dlymktprc_struct_h->h_checker_dt)) l_mt_dlymktprc_struct_i->i_checker_dt =-1;
     else l_mt_dlymktprc_struct_i->i_checker_dt =0;

 

	if(strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{
		EXEC SQL SELECT ACCESS_STAMP
					INTO :chr_p_access_stamp_cmp:p_i_access_stamp_cmp
				FROM MT_DLYMKTPRC
			WHERE PRICE_DATE =:p_mt_dlymktprc_struct_h->h_prdt
				AND INSTR_CODE =:p_mt_dlymktprc_struct_h->h_instr_code; 

		IS_ANY_ORA_ERROR

		if(strcmp(chr_p_access_stamp_cmp,p_mt_dlymktprc_struct_h->h_access_stamp))
		{
	     if (CO_InsertErr
         (l_debug_info_ptr,
          ERR_ACCESSSTAMP_CHGD, 
			 
          APL_NULL_STRING,
          APL_NULL_STRING,
          APL_NULL_STRING,
          __LINE__,
          __FILE__
         ) != APL_SUCCESS)
        APL_GOBACK_FAIL	
		}

 		if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  		{
      	APL_GOBACK_FAIL
  		}
	}


 

 if(CO_RtvSysDtTime(p_mt_dlymktprc_struct_h->h_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}
  
 if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  {
      APL_GOBACK_FAIL
  }

  

 strcpy(p_mt_dlymktprc_struct_h->h_updtmode,"M");

 l_mt_dlymktprc_struct_i->i_access_stamp =0;
 l_mt_dlymktprc_struct_i->i_updtmode   =0;
  
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
  {
 		strcpy(p_mt_dlymktprc_struct_h->h_maker,p_intl_envdatastruct_h->usr);		
 		strcpy(p_mt_dlymktprc_struct_h->h_maker_dt,p_mt_dlymktprc_struct_h->h_access_stamp);		
 		strcpy(p_mt_dlymktprc_struct_h->h_mkrtpr_stat,STATUS_UAUTH);		

 		l_mt_dlymktprc_struct_i->i_maker      	 =0;
 		l_mt_dlymktprc_struct_i->i_maker_dt 		 =0;
 		l_mt_dlymktprc_struct_i->i_mkrtpr_stat =0;

		sqlca.sqlcode =0;

		EXEC SQL INSERT INTO 
					MT_DLYMKTPRC VALUES
						(:p_mt_dlymktprc_struct_h:l_mt_dlymktprc_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE (ERR_MRKTPRICE_EXISTS,
													 p_mt_dlymktprc_struct_h->h_prdt,
													 p_mt_dlymktprc_struct_h->h_instr_code,
													 APL_NULL_STRING); 
  
 		if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  		{
      	APL_GOBACK_FAIL
  		}

 		APL_GOBACK_SUCCESS
  }

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
  {
 		strcpy(p_mt_dlymktprc_struct_h->h_maker,p_intl_envdatastruct_h->usr);		
 		strcpy(p_mt_dlymktprc_struct_h->h_maker_dt,p_mt_dlymktprc_struct_h->h_access_stamp);		
 		strcpy(p_mt_dlymktprc_struct_h->h_mkrtpr_stat,STATUS_UAUTH);		

 		l_mt_dlymktprc_struct_i->i_checker       =-1;
 		l_mt_dlymktprc_struct_i->i_checker_dt 	 =-1;
 		l_mt_dlymktprc_struct_i->i_maker       	 =0;
 		l_mt_dlymktprc_struct_i->i_maker_dt 	 	 =0;
 		l_mt_dlymktprc_struct_i->i_mkrtpr_stat =0;

		sqlca.sqlcode =0;

		EXEC SQL UPDATE MT_DLYMKTPRC 
				 SET 	CLOSING_PR 			=:p_mt_dlymktprc_struct_h->h_closing_pr:l_mt_dlymktprc_struct_i->i_closing_pr,
						MODIFYMODE		=:p_mt_dlymktprc_struct_h->h_updtmode:l_mt_dlymktprc_struct_i->i_updtmode,
						ACCESS_STAMP	=:p_mt_dlymktprc_struct_h->h_access_stamp:l_mt_dlymktprc_struct_i->i_access_stamp,
						MAKER				=:p_mt_dlymktprc_struct_h->h_maker:l_mt_dlymktprc_struct_i->i_maker,
						MAKER_DT			=:p_mt_dlymktprc_struct_h->h_maker_dt:l_mt_dlymktprc_struct_i->i_maker_dt,
						MKRTPR_STAT  =:p_mt_dlymktprc_struct_h->h_mkrtpr_stat:l_mt_dlymktprc_struct_i->i_mkrtpr_stat,
						CHECKER			=NULL,
						CHECKER_DT		=NULL
				WHERE PRICE_DATE 		=:p_mt_dlymktprc_struct_h->h_prdt
						AND INSTR_CODE 	=:p_mt_dlymktprc_struct_h->h_instr_code;

		IS_ANY_ORA_ERROR
  
 		if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  		{
      	APL_GOBACK_FAIL
  		}

 		APL_GOBACK_SUCCESS
  }

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
  {
 		strcpy(p_mt_dlymktprc_struct_h->h_checker,p_intl_envdatastruct_h->usr);		
 		strcpy(p_mt_dlymktprc_struct_h->h_checker_dt,p_mt_dlymktprc_struct_h->h_access_stamp);		
 		strcpy(p_mt_dlymktprc_struct_h->h_mkrtpr_stat,STATUS_AUTH);		

 		l_mt_dlymktprc_struct_i->i_checker       =0;
 		l_mt_dlymktprc_struct_i->i_checker_dt 	 =0;
 		l_mt_dlymktprc_struct_i->i_mkrtpr_stat =0;

		sqlca.sqlcode =0;

		EXEC SQL UPDATE MT_DLYMKTPRC 
			   SET	MODIFYMODE		=:p_mt_dlymktprc_struct_h->h_updtmode:l_mt_dlymktprc_struct_i->i_updtmode,
						ACCESS_STAMP	=:p_mt_dlymktprc_struct_h->h_access_stamp:l_mt_dlymktprc_struct_i->i_access_stamp,
						CHECKER			=:p_mt_dlymktprc_struct_h->h_checker:l_mt_dlymktprc_struct_i->i_checker,
						CHECKER_DT		=:p_mt_dlymktprc_struct_h->h_checker_dt:l_mt_dlymktprc_struct_i->i_checker_dt,
						MKRTPR_STAT  =:p_mt_dlymktprc_struct_h->h_mkrtpr_stat:l_mt_dlymktprc_struct_i->i_mkrtpr_stat
				WHERE PRICE_DATE 		=:p_mt_dlymktprc_struct_h->h_prdt
						AND INSTR_CODE 	=:p_mt_dlymktprc_struct_h->h_instr_code;

		IS_ANY_ORA_ERROR
  
 		if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  		{
      	APL_GOBACK_FAIL
  		}

 		APL_GOBACK_SUCCESS
  }

 if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  {
      APL_GOBACK_FAIL
  }

 APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Function CDBUpdMktPrcFn successful\n",
		NULL,p_intl_envdatastruct_h);
 }
	free(l_mt_dlymktprc_struct_i);
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Function CDBUpdMktPrcFn unsuccessful\n",
		NULL,p_intl_envdatastruct_h);
 }

	free(l_mt_dlymktprc_struct_i);
	return(APL_FAILURE);
	}

}

int CR_Proc_MkrtPrAuth(char *p_dt,
							char *p_instr_code,
							char *p_user,
							char *p_mode,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  struct sqlca sqlca;
  char maker[APL_USERID_LEN];
  char status_ind[APL_STATUS_LEN];
  short p_i_maker = 0;
  short p_i_status = 0;

 #ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
 #endif

  sqlca.sqlcode =0;

 APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Proc_MkrtPrAuth\n",
		NULL,NULL);
 }
  
  if (!strlen(p_dt))
	{
	APL_DATA_MISSING("Price Date",APL_NULL_STRING,APL_NULL_STRING);
	} 

  if (!strlen(p_instr_code))
	{
	APL_DATA_MISSING("Instrurity Code",APL_NULL_STRING,APL_NULL_STRING);
	} 

  if (!strlen(p_user))
	{
	APL_DATA_MISSING("User",APL_NULL_STRING,APL_NULL_STRING);
	}

  EXEC SQL VAR maker IS STRING(15);

  EXEC SQL SELECT MAKER , MKRTPR_STAT
		INTO :maker:p_i_maker,
				:status_ind:p_i_status
		FROM MT_DLYMKTPRC
			WHERE PRICE_DATE =:p_dt
				AND INSTR_CODE =:p_instr_code
		FOR UPDATE OF CLOSING_PR;	

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET (ERR_MRKTPRICE_NOTFND,
														p_instr_code,
														p_dt,
														APL_NULL_STRING);

 

  if (strcmp(p_mode,APL_FUNC_AUTHORISE))
   {
	  APL_GOBACK_SUCCESS	
	}

 

 if(!strcmp(status_ind,APL_STS_AUTH))
 {
	 if (CO_InsertErr
         (l_debug_info_ptr,
         ERR_MRKTPRICE_AUTHORIZED, 
			
         p_instr_code,
         p_dt,
         APL_NULL_STRING,
         __LINE__,
         __FILE__
         ) != APL_SUCCESS)
    APL_GOBACK_FAIL
 }

 

  if (!strcmp(p_user,maker))
	{
	 if (CO_InsertErr
			(l_debug_info_ptr,
			ERR_MAKER_CHECKER_SAME, 
			APL_NULL_STRING,
			APL_NULL_STRING,
			APL_NULL_STRING,
			__LINE__,
			__FILE__
			) != APL_SUCCESS)
	 APL_GOBACK_FAIL
	}

 if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
  {
      APL_GOBACK_FAIL
  }
  
 APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{
   APL_IF_DEBUG
    {
       CO_ProcMonitor(APL_OUT_FILE, "CDBUsrAuthMPrcFn Successful\n",
			NULL,NULL);
    }
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
   APL_IF_DEBUG
    {
  		CO_ProcMonitor(APL_OUT_FILE, "CDBUsrAuthMPrcFn unsuccessful\n",
			NULL,NULL);
 	 }
	return(APL_FAILURE);
	}
 
}

