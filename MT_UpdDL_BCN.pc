/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2014 Polaris Financial Technology Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Financial Technology Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Financial Technology Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Master Maintenance
 *
 * File Name           :      MT_UpdDL_BCN.pc
 *
 * Description         :      This file contains db functions for updating
 *                            Master Details.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description       RFS No.
 * ---------   --------  ------------     -------------     ---------
 * 12/01/2006   1.0       Sundar        New file       HDFCDL_004
 *
 *********************************************************************/


#include "CO_HostStructdef.h"
#include "Intellect_Common.h"
#define  APL_PARTY_TYPE_P "P"
#define APL_CLH_FLG_DVP "D" /*Chirag*/
#define  APL_R_SETT_CD "I" /*Chirag*/
#define  APL_R_TYPE "15" /*Chirag*/
#define	APL_IND_NO "N" /*Chirag*/
#define APL_R_DELAY "P" /*Chirag*/
#define	APL_IND_YES "Y" /*Rahul*/

EXEC SQL INCLUDE SQLCA.H;

double chr_l_val = 0.0;            /* Added by Gouse - Decimal Length for MF- 01/10/2011 */


int DL_ModDbDL_BCN(DL_BCN_STRUCT_H *p_dl_bcn_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
	/* Variable Declarations */
  DL_BCN_STRUCT_I *l_dl_bcn_struct_i;

  struct sqlca sqlca;

  char chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
  char chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
  char chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
  char sys_date[APL_DATE_LEN] = APL_NULL_STRING;
  short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
  short p_i_access_stamp_compare;
  short p_i_status = 0;
  int int_error_flag = APL_SUCCESS;
  int int_l_rowexists = 0;
   char  *l_key_codes[17];
   char  *l_key_values[17];
   char  chr_l_table_name[50] = APL_NULL_STRING;
   char  chr_l_field_val[40] = APL_NULL_STRING;
   int l_int_ret_val = 0;
   double int_l_dlqty=0;    /*Vedavati for Generic Change*/
	double int_l_regqty=0;  /*Vedavati for Generic Change*/
	char chr_l_valdate[21] =APL_NULL_STRING;   /*Vedavati for Generic Change*/
	short i_valdate;	/*Vedavati for Generic Change*/
	char l_cln_sebi_expdt[APL_DATE_LEN] = APL_NULL_STRING; /* chgs by amish */
	char l_cln_rbi_expdt[APL_DATE_LEN] = APL_NULL_STRING;
	short i_cln_sebi_expdt = 0;
	short i_cln_rbi_expdt = 0;
	char l_sys_date1[APL_DATE_LEN] = APL_NULL_STRING;
	int    int_ru_diff       = 0;
	char  l_chknum[17] =APL_NULL_STRING;			/*	UAT Change	*/
	char clh_flg[2] = APL_NULL_STRING; /*Chirag*/
	char r_delay[2] = APL_NULL_STRING; /*Chirag*/
	char r_type[3] = APL_NULL_STRING; /*Chirag*/
	char no[2] = APL_NULL_STRING; /*Chirag*/
	char r_set_cd[2] = APL_NULL_STRING; /*Chirag*/
	char lr_date[APL_DATE_LEN] = APL_NULL_STRING;/*Chirag*/
	int	int_retval = APL_SUCCESS;
	/* changes by amish -- 20/06 */
	char chr_mainfuncarea[APL_MAINFUNCAREA_LEN]  = APL_NULL_STRING;
	char chr_l_condid[APL_CONDID_LEN]   = APL_NULL_STRING;
	short int_l_condexists = 0;
	char l_end_dt[APL_DATE_LEN] = APL_NULL_STRING;
	short i_end_dt = 0;
	int int_dt_diff = 0;
	char l_str_exchin_contract_cd[17]=APL_NULL_STRING;/*shailesh 27-08-2008 ISKB-1774*/
	/* changes by amish -- 20/06 */
	
#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	 APL_FUNCTION_ENTER(APL_OUT_FILE)

  l_dl_bcn_struct_i=(DL_BCN_STRUCT_I*)calloc(1,sizeof(DL_BCN_STRUCT_I));

  APL_MALLOC_FAIL(l_dl_bcn_struct_i)

  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;

		printf("\n Status is |%s| \n",p_dl_bcn_struct_h->h_status);
   if(strcmp(p_dl_bcn_struct_h->h_r_trans_code,APL_NULL_STRING) == 0)
   {
      if (  (strcmp(p_dl_bcn_struct_h->h_deal_cd,"1") == 0) ||
            (strcmp(p_dl_bcn_struct_h->h_deal_cd,"3") == 0))
      {
         strcpy(p_dl_bcn_struct_h->h_r_trans_code,"1");
      }
      else
      {
         strcpy(p_dl_bcn_struct_h->h_r_trans_code,"4");
      }
   }

   if(strcmp(p_dl_bcn_struct_h->h_r_delay,APL_NULL_STRING) == 0)
      strcpy(p_dl_bcn_struct_h->h_r_delay,"P");

   if(strcmp(p_dl_bcn_struct_h->h_r_type,APL_NULL_STRING) == 0)
      strcpy(p_dl_bcn_struct_h->h_r_type,"N");

   if (strcmp(p_dl_bcn_struct_h->h_tran_type,APL_NULL_STRING) == 0)
   {
      if (strcmp(p_dl_bcn_struct_h->h_tran_type,"1") == 0)
      {
         strcpy(p_dl_bcn_struct_h->h_tran_type,"904");
      }
      else if  (strcmp(p_dl_bcn_struct_h->h_tran_type,"2") == 0)
      {
         strcpy(p_dl_bcn_struct_h->h_tran_type,"905");
      }
      else
      {
         strcpy(p_dl_bcn_struct_h->h_tran_type,"906");
      }
   }

   if (!strlen(p_dl_bcn_struct_h->h_contract_cd)) l_dl_bcn_struct_i->i_contract_cd =-1;
	else l_dl_bcn_struct_i->i_contract_cd =0;
	if (!strlen(p_dl_bcn_struct_h->h_mkt_type)) l_dl_bcn_struct_i->i_mkt_type =-1;
	else l_dl_bcn_struct_i->i_mkt_type =0;
	if (!strlen(p_dl_bcn_struct_h->h_tran_type)) l_dl_bcn_struct_i->i_tran_type =-1;
	else l_dl_bcn_struct_i->i_tran_type =0;
/*	if (p_dl_bcn_struct_h->h_dl_price==0) l_dl_bcn_struct_i->i_dl_price =-1;
	else l_dl_bcn_struct_i->i_dl_price =0;*/
	if (!strlen(p_dl_bcn_struct_h->h_deal_cd)) l_dl_bcn_struct_i->i_deal_cd =-1;
	else l_dl_bcn_struct_i->i_deal_cd =0;
	if (!strlen(p_dl_bcn_struct_h->h_sebi_reg_no)) l_dl_bcn_struct_i->i_sebi_reg_no =-1;
	else l_dl_bcn_struct_i->i_sebi_reg_no =0;
	if (!strlen(p_dl_bcn_struct_h->h_broker_cd)) l_dl_bcn_struct_i->i_broker_cd =-1;
	else l_dl_bcn_struct_i->i_broker_cd =0;
	if (!strlen(p_dl_bcn_struct_h->h_client_cd)) l_dl_bcn_struct_i->i_client_cd=-1;
	else l_dl_bcn_struct_i->i_client_cd =0;
	if (p_dl_bcn_struct_h->h_qty==0) l_dl_bcn_struct_i->i_qty =-1;
	else l_dl_bcn_struct_i->i_qty =0;
	if (!strlen(p_dl_bcn_struct_h->h_instr_cd)) l_dl_bcn_struct_i->i_instr_cd =-1;
	else l_dl_bcn_struct_i->i_instr_cd =0;
	if (!strlen(p_dl_bcn_struct_h->h_entry)) l_dl_bcn_struct_i->i_entry =-1;
	else l_dl_bcn_struct_i->i_entry =0; 
	if (!strlen(p_dl_bcn_struct_h->h_maker)) l_dl_bcn_struct_i->i_maker =-1;
	else l_dl_bcn_struct_i->i_maker =0;
	if (!strlen(p_dl_bcn_struct_h->h_maker_dt)) l_dl_bcn_struct_i->i_maker_dt =-1;
	else l_dl_bcn_struct_i->i_maker_dt =0;
	if (!strlen(p_dl_bcn_struct_h->h_access_stamp)) l_dl_bcn_struct_i->i_access_stamp =-1;
	else l_dl_bcn_struct_i->i_access_stamp =0;
	if (!strlen(p_dl_bcn_struct_h->h_status)) l_dl_bcn_struct_i->i_status =-1;
	else l_dl_bcn_struct_i->i_status =0; 
   if (!strlen(p_dl_bcn_struct_h->h_off_market)) l_dl_bcn_struct_i->i_off_market =-1;
	else l_dl_bcn_struct_i->i_off_market =0; 
   if (!strlen(p_dl_bcn_struct_h->h_counter_pty)) l_dl_bcn_struct_i->i_counter_pty =-1;
	else l_dl_bcn_struct_i->i_counter_pty =0; 
	if (!strlen(p_dl_bcn_struct_h->h_dl_date)) l_dl_bcn_struct_i->i_dl_date =-1;
	else l_dl_bcn_struct_i->i_dl_date =0;
	if (!strlen(p_dl_bcn_struct_h->h_sett_dt)) l_dl_bcn_struct_i->i_sett_dt =-1;
   else l_dl_bcn_struct_i->i_sett_dt =0;
	if (!strlen(p_dl_bcn_struct_h->h_clh_flg)) l_dl_bcn_struct_i->i_clh_flg =-1;
   else l_dl_bcn_struct_i->i_clh_flg =0;
	if (!strlen(p_dl_bcn_struct_h->h_lr_valdate)) l_dl_bcn_struct_i->i_lr_valdate =-1;    
  	else l_dl_bcn_struct_i->i_lr_valdate =0;
   /* Add a New Column Changes - LR_Valdate- Kouser */
	/* Vedavati Added for 548 Message */
	if (!strlen(p_dl_bcn_struct_h->h_addr_frm)) l_dl_bcn_struct_i->i_addr_frm =-1;
   else l_dl_bcn_struct_i->i_addr_frm =0;
	if (!strlen(p_dl_bcn_struct_h->h_addr_to)) l_dl_bcn_struct_i->i_addr_to =-1;
   else l_dl_bcn_struct_i->i_addr_to =0;
	/****************/


 if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}
/* Added by Gouse - Decimal Length for MF- 01/10/2011 - Start */

 IF_COND_EXISTS("QTY_RND_MF_MKT","QTY_RND_FOR_MF_MKT")
 {
        CR_Proc_InstrQtyRound_Chk( p_dl_bcn_struct_h->h_qty, p_dl_bcn_struct_h->h_instr_cd, &chr_l_val, l_debug_info_ptr );

        p_dl_bcn_struct_h->h_qty = chr_l_val;

 }
 /* Added by Gouse - Decimal Length for MF- 01/10/2011 - End */

 printf("Mode in Function |%s|**********************\n",p_intl_envdatastruct_h->h_mode);
 if((!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT)) 
	 || (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY)))
 {
		EXEC SQL SELECT CLN_SEBI_REG_EXPDT,CLN_RBI_REG_EXPDT into :l_cln_sebi_expdt:i_cln_sebi_expdt,l_cln_rbi_expdt:i_cln_rbi_expdt FROM MT_REGDETAILS 
		WHERE CLN_CODE = :p_dl_bcn_struct_h->h_client_cd;
		IS_ANY_ORA_ERROR;

		printf("\nSEBI EXP DATE IS |%s|\n",l_cln_sebi_expdt);
		printf("\nRBI EXP DATE IS |%s|\n",l_cln_rbi_expdt);


		EXEC SQL SELECT SYS_DATE into :l_sys_date1 from PRO_SYS_DATE;
		IS_ANY_ORA_ERROR;

		 if(strcmp(l_cln_sebi_expdt,APL_NULL_STRING)) 
		 {
			/* 
		  if( CR_Chk_ExpDateValid(l_sys_date1,l_cln_sebi_expdt,l_debug_info_ptr) == APL_FAILURE )
		  */
			  if ( APL_FAILURE  ==	 CO_Pro_DateComp(p_dl_bcn_struct_h->h_dl_date,l_cln_sebi_expdt,&int_ru_diff,l_debug_info_ptr))
			  {
				  APL_GOBACK_FAIL
			  }
				  
			  if (int_ru_diff < 0)	  
			  {
				  printf("\n SEBI DATE IS GREATER\n");
			 
					   CO_InsertErr(l_debug_info_ptr, 
									ERR_DT_GRT_SEBIEXDT, 
									APL_NULL_STRING,
									APL_NULL_STRING, 
									APL_NULL_STRING, 
									__LINE__, 
									__FILE__);
						 APL_GOBACK_FAIL     		 
			  }
		 }
		 if(strcmp(l_cln_rbi_expdt,APL_NULL_STRING))
		 {
			 /*
		  if( CR_Chk_ExpDateValid(l_sys_date1,l_cln_rbi_expdt,l_debug_info_ptr) == APL_FAILURE )
		  */
			if ( APL_FAILURE  ==   CO_Pro_DateComp(p_dl_bcn_struct_h->h_dl_date,l_cln_rbi_expdt,&int_ru_diff,l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
			 if (int_ru_diff < 0)
			  {
				   printf("\n RBI DATE IS GREATER\n");
			  
					  CO_InsertErr(l_debug_info_ptr,
								  ERR_DT_GRT_RBIEXDT,
								  APL_NULL_STRING,
								  APL_NULL_STRING,
								  APL_NULL_STRING,
								  __LINE__,
								   __FILE__);
						  APL_GOBACK_FAIL
			  
			 
				 }  
			
		 }


 }
 
	
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function DL_ModDbDL_BCN\n",
													NULL,p_intl_envdatastruct_h);
 	}

         if (strcmp(p_dl_bcn_struct_h->h_sebi_reported,APL_NULL_STRING) ==0)
         {
            strcpy(p_dl_bcn_struct_h->h_sebi_reported,"N");
         }
      if (strcmp(p_dl_bcn_struct_h->h_r_sett_code,APL_NULL_STRING) == 0)
      {
         if (strcmp(p_dl_bcn_struct_h->h_clh_flg,"C") == 0)
            strcpy(p_dl_bcn_struct_h->h_r_sett_code,"C");
         else if (strcmp(p_dl_bcn_struct_h->h_clh_flg,"D") == 0)
            strcpy(p_dl_bcn_struct_h->h_r_sett_code,"H");
      }


		l_int_ret_val=CR_Chk_ClnGrp_CauFlg_AtBCN(p_dl_bcn_struct_h,l_debug_info_ptr);

		if(l_int_ret_val==APL_FAILURE)
		{
			APL_GOBACK_FAIL
		}

		/*	Addition of entry condition for UAT */
		if((!strcmp(p_dl_bcn_struct_h->h_entry,"S"))&&(strcmp(p_dl_bcn_struct_h->h_status,STATUS_OVERRIDE)))
			strcpy(p_dl_bcn_struct_h->h_status,"AA");
		
		if(!strcmp(p_dl_bcn_struct_h->h_status,STATUS_OVERRIDE))
		{
			strcpy(p_dl_bcn_struct_h->h_checker,APL_NULL_STRING);
			strcpy(p_dl_bcn_struct_h->h_checker_dt,APL_NULL_STRING);
		}
			
		printf("\n Status is |%s| \n",p_dl_bcn_struct_h->h_status);
/*	   strcpy(p_dl_bcn_struct_h->h_status,p_dl_bcn_struct_h->h_status);*/
		l_dl_bcn_struct_i->i_status =0;
		strcpy(p_dl_bcn_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_dl_bcn_struct_i->i_maker=0;
		strcpy(p_dl_bcn_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_dl_bcn_struct_i->i_maker_dt=0;
		strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_dl_bcn_struct_i->i_access_stamp =0;


		printf("\n Status is |%s| \n",p_dl_bcn_struct_h->h_status);
		/* code moved at the end of next if loop --amish --13/06*/
		/*
			Additional Code for UAT Change Rohit 
		if(!strcmp(p_dl_bcn_struct_h->h_entry,"S"))
		{	
			EXEC SQL SELECT SUBSTR(:p_dl_bcn_struct_h->h_contract_cd,4) INTO :l_chknum FROM DUAL;
			IS_ANY_ORA_ERROR

			strcpy(p_dl_bcn_struct_h->h_contract_cd,l_chknum);
			p_dl_bcn_struct_h->h_brokercomm = 0;
		}
		*/
		/**No Delivery Check*/
		if  (strcmp(p_dl_bcn_struct_h->h_entry,"S")==0 && strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_REPAIR)!=0)
		{
			printf("Inside No Del chk\n");
			printf("\n instr code is |%s|,exch code is |%s|\n",p_dl_bcn_struct_h->h_instr_cd,p_dl_bcn_struct_h->h_exch_cd);
			int_l_rowexists = 0;
			EXEC SQL SELECT COUNT(*)
				INTO :int_l_rowexists
				FROM MT_NO_DELV
				/*WHERE  NO_DEL_FROM < :p_sys_dl_deal_struct_h->h_dlt AND  NO_DEL_TO > :p_sys_dl_deal_struct_h->h_dlt;*/
				WHERE
				TO_DATE(:p_dl_bcn_struct_h->h_dl_date,'DD/MM/YYYY HH:MI:SS') between NO_DEL_FROM  and NO_DEL_TO
				AND
				INSTR_CODE =:p_dl_bcn_struct_h->h_instr_cd
				AND STATUS = 'AA'
				AND EXCH_CODE = :p_dl_bcn_struct_h->h_exch_cd;
				IS_ANY_ORA_ERROR
				if (int_l_rowexists >0)
				{
					printf("Instrument under no del\n");
					CO_InsertErr(l_debug_info_ptr,
							ERR_INSTR_NO_DEL,
							APL_NULL_STRING,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__);
					APL_GOBACK_FAIL
				}
		}
		/***/
		
	if(strcmp(p_dl_bcn_struct_h->h_entry,"S")==0)
	{	
		memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
		memset(chr_l_condid, APL_NULL_CHAR, APL_CONDID_LEN);
		int_l_condexists = 0;
		strcpy(chr_mainfuncarea, "DL_SETL_DT");
		strcpy(chr_l_condid, "ENDDT_LESS_SETDT");

				if ( APL_FAILURE == CO_Chk_CntryEnabled( chr_mainfuncarea, chr_l_condid, 
																&int_l_condexists, l_debug_info_ptr ) )
				{
					APL_GOBACK_FAIL
				}
			printf("\n contry specific val is |%d|\n",int_l_condexists);	
			if(int_l_condexists)
			{
				EXEC SQL SELECT END_DATE INTO :l_end_dt:i_end_dt FROM mt_settl_cal WHERE
					EXCH_CODE = :p_dl_bcn_struct_h->h_exch_cd AND
                    settl_type = :p_dl_bcn_struct_h->h_mkt_type AND  /* Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */
					START_DATE = :p_dl_bcn_struct_h->h_dl_date AND
					STATUS = 'AA';
				IS_ANY_ORA_ERROR
					
					printf("\n end date and setle date are |%s| & |%s|\n",l_end_dt,p_dl_bcn_struct_h->h_sett_dt);
				
				if ( APL_FAILURE  ==   CO_Pro_DateComp(l_end_dt,
				p_dl_bcn_struct_h->h_sett_dt,&int_dt_diff,l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
				printf("\n diff is |%d|\n",int_dt_diff);
					if( int_dt_diff > 0)
					{
							
				 			 printf("\n setl date greater\n");
           					   CO_InsertErr(l_debug_info_ptr,
									  ERR_ENDDT_LESS_SETTDT,
									  APL_NULL_STRING,
									  APL_NULL_STRING,
						 			  APL_NULL_STRING,
									  __LINE__,
								   __FILE__);
					  APL_GOBACK_FAIL
					}
				
			}
	}
		
		
		printf("\n CONTRACT CODE In input mode isssssss |%s|\n",p_dl_bcn_struct_h->h_contract_cd);
		if(!strcmp(p_dl_bcn_struct_h->h_entry,"S"))
		{	

			EXEC SQL SELECT SUBSTR(:p_dl_bcn_struct_h->h_contract_cd,4) INTO :l_chknum FROM DUAL;
			IS_ANY_ORA_ERROR
			
			strcpy(l_str_exchin_contract_cd,p_dl_bcn_struct_h->h_contract_cd);/*shailesh 27-08-2008
			ISKB-1774*/
			strcpy(p_dl_bcn_struct_h->h_contract_cd,l_chknum);
			p_dl_bcn_struct_h->h_brokercomm = 0;
		}
		 printf("\n CONTRACT CODE In input mode isssssss 222222222 |%s|\n",p_dl_bcn_struct_h->h_contract_cd);
			
		EXEC SQL INSERT INTO DL_BCN VALUES (:p_dl_bcn_struct_h:l_dl_bcn_struct_i);
       
	   //shailesh 27-08-2008 ISKB - 1774
		if(sqlca.sqlcode != 0 && !strcmp(p_dl_bcn_struct_h->h_entry,"S"))
		{	
		printf("\n  p_dl_bcn_struct_h->h_contract_cd = [%s]",p_dl_bcn_struct_h->h_contract_cd);
		strcpy(p_dl_bcn_struct_h->h_contract_cd,l_str_exchin_contract_cd);
		printf("\n  p_dl_bcn_struct_h->h_contract_cd = [%s]",p_dl_bcn_struct_h->h_contract_cd);	
		}

		IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	}
	else
	{

    /* added by amish ---no check in case of deletion of records in repair queue --09/05 */
		if(p_intl_envdatastruct_h->h_process[0] != 'D')
		{
			l_key_codes[0]="CONTRACT_CD";
			l_key_codes[1]="DL_DATE";
			l_key_codes[2]="BROKER_CD";
			l_key_codes[3]=APL_NULL_STRING;

			l_key_values[0]=p_dl_bcn_struct_h -> h_contract_cd;
			l_key_values[1]=p_dl_bcn_struct_h -> h_dl_date;
			l_key_values[2]=p_dl_bcn_struct_h -> h_broker_cd;
			l_key_values[3] = APL_NULL_STRING;

		
	   strcpy(chr_l_table_name,"DL_BCN");

		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "ACCESS_STAMP",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

	    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_acc_stamp_compare,chr_l_field_val);
    
		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "STATUS",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_status_compare,chr_l_field_val);
	 }
	}
/*****************************************************************************/
 if ((!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY)))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
		strcpy(p_dl_bcn_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_dl_bcn_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function MT_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

	   if (!strcmp(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {

   			l_int_ret_val=CR_Chk_ClnGrp_CauFlg_AtBCN(p_dl_bcn_struct_h,l_debug_info_ptr);

				if(l_int_ret_val==APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
    
			strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_dl_bcn_struct_i->i_access_stamp =0;
			strcpy(p_dl_bcn_struct_h->h_status,p_dl_bcn_struct_h->h_status);
			l_dl_bcn_struct_i->i_status =0;

			EXEC SQL UPDATE DL_BCN  SET 
            				MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					CHECKER =:p_dl_bcn_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_dl_bcn_struct_h->h_checker_dt:p_i_checkerdt,
            	STATUS =:p_dl_bcn_struct_h->h_status:l_dl_bcn_struct_i->i_status,
					OFF_MARKET=:p_dl_bcn_struct_h->h_off_market:l_dl_bcn_struct_i->i_off_market,
					MKT_TYPE=:p_dl_bcn_struct_h->h_mkt_type:l_dl_bcn_struct_i->i_mkt_type,
					TRAN_TYPE=:p_dl_bcn_struct_h->h_tran_type:l_dl_bcn_struct_i->i_tran_type,
					DL_PRICE=:p_dl_bcn_struct_h->h_dl_price:l_dl_bcn_struct_i->i_dl_price,
					BROKERCOMM=:p_dl_bcn_struct_h->h_brokercomm:l_dl_bcn_struct_i->i_brokercomm,
					EXCH_CD=:p_dl_bcn_struct_h->h_exch_cd:l_dl_bcn_struct_i->i_exch_cd,
					DEAL_CD=:p_dl_bcn_struct_h->h_deal_cd:l_dl_bcn_struct_i->i_deal_cd,
					CLH_FLG=:p_dl_bcn_struct_h->h_clh_flg:l_dl_bcn_struct_i->i_clh_flg,
					SEBI_Reg_No=:p_dl_bcn_struct_h->h_sebi_reg_no:l_dl_bcn_struct_i->i_sebi_reg_no,
					CLIENT_CD=:p_dl_bcn_struct_h->h_client_cd:l_dl_bcn_struct_i->i_client_cd,
					QTY=:p_dl_bcn_struct_h->h_qty:l_dl_bcn_struct_i->i_qty,
					INSTR_CD=:p_dl_bcn_struct_h->h_instr_cd:l_dl_bcn_struct_i->i_instr_cd,
					SETTLEMENT_NO=:p_dl_bcn_struct_h->h_settlement_no:l_dl_bcn_struct_i->i_settlement_no,
					DL_AMT=:p_dl_bcn_struct_h->h_dl_amt:l_dl_bcn_struct_i->i_dl_amt,
					BROKERAGE_AMT=:p_dl_bcn_struct_h->h_brokerage_amt:l_dl_bcn_struct_i->i_brokerage_amt,
					STT_AMT=:p_dl_bcn_struct_h->h_stt_amt:l_dl_bcn_struct_i->i_stt_amt,
					SETTLMENT_AMT=:p_dl_bcn_struct_h->h_settlment_amt:l_dl_bcn_struct_i->i_settlment_amt,
					DL_REF_NO=:p_dl_bcn_struct_h->h_dl_ref_no:l_dl_bcn_struct_i->i_dl_ref_no,
					INTER_FII_FLG=:p_dl_bcn_struct_h->h_inter_fii_flg:l_dl_bcn_struct_i->i_inter_fii_flg,
					COUNTER_PTY=:p_dl_bcn_struct_h->h_counter_pty:l_dl_bcn_struct_i->i_counter_pty,
					SEBI_REPORTED=:p_dl_bcn_struct_h->h_sebi_reported:l_dl_bcn_struct_i->i_sebi_reported,
					ENTRY=:p_dl_bcn_struct_h->h_entry:l_dl_bcn_struct_i->i_entry,
					REPAIRED_IND=:p_dl_bcn_struct_h->h_repaired_ind:l_dl_bcn_struct_i->i_repaired_ind,
					SETT_DT=:p_dl_bcn_struct_h->h_sett_dt:l_dl_bcn_struct_i->i_sett_dt,
					NARRATIVE=:p_dl_bcn_struct_h->h_narrative:l_dl_bcn_struct_i->i_narrative,
					R_TRANS_CODE =:p_dl_bcn_struct_h->h_r_trans_code:l_dl_bcn_struct_i->i_r_trans_code,
					R_SETT_CODE =:p_dl_bcn_struct_h->h_r_sett_code:l_dl_bcn_struct_i->i_r_sett_code,
					R_DELAY =:p_dl_bcn_struct_h->h_r_delay:l_dl_bcn_struct_i->i_r_delay,
					R_TYPE =:p_dl_bcn_struct_h->h_r_type:l_dl_bcn_struct_i->i_r_type,
					/*REPO_DATE =:p_dl_bcn_struct_h->h_repo_date:l_dl_bcn_struct_i->i_repo_date,*/
					ACCESS_STAMP=:chr_sys_access_stamp:p_i_access_stamp,
					AMEND_DT=:chr_sys_access_stamp:p_i_access_stamp,
					/* added for 548 Message -Vedavati*/
					ADDR_FRM=:p_dl_bcn_struct_h->h_addr_frm:l_dl_bcn_struct_i->i_addr_frm,
					ADDR_TO=:p_dl_bcn_struct_h->h_addr_to:l_dl_bcn_struct_i->i_addr_to,
					STAMP_DUTY =:p_dl_bcn_struct_h->h_stamp_duty:l_dl_bcn_struct_i->i_stamp_duty  /* SNOW- CS0046502 Added by Shradha for Stamp Duty Enh. */

						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						      DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
								BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;     
			IS_ANY_ORA_ERROR;
			



				IS_ANY_ORA_ERROR;
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
				APL_GOBACK_FAIL
		} 
	}
/*******************************************************************************/
 /* Vedavati- Changes made for RegReports*/
 if ((!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_SEBI)))
 {
	 p_i_checker =-1;
	 p_i_checkerdt =-1;
	 strcpy(p_dl_bcn_struct_h->h_checker,APL_NULL_STRING);
	 strcpy(p_dl_bcn_struct_h->h_checker_dt,APL_NULL_STRING);
	 printf(" inside sebi mode..........$**************************Status=|%s|\n",p_dl_bcn_struct_h->h_status);
	 
	 APL_IF_DEBUG
	 {
		 CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function MT_ModDBNoDlvDet\n",
				 NULL,p_intl_envdatastruct_h);
	 }

	 if (!strcmp(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare))
	 {

		 /*** l_int_ret_val=CR_Chk_ClnGrp_CauFlg_AtBCN(p_dl_bcn_struct_h,l_debug_info_ptr); 

		 if(l_int_ret_val==APL_FAILURE)
		 {
			 APL_GOBACK_FAIL
		 }**/

		 strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
		 l_dl_bcn_struct_i->i_access_stamp =0;
	 printf(" Before Strcpy STATUS..........$**************************Status=|%s|\n",p_dl_bcn_struct_h->h_status);
	
	 	 
		 /*** strcpy(p_dl_bcn_struct_h->h_status,p_dl_bcn_struct_h->h_status); 
		 l_dl_bcn_struct_i->i_status =0; same var copied so removed***/
	 printf(" Before Update Q..........$**************************Status=|%s|\n",p_dl_bcn_struct_h->h_status);
		 EXEC SQL UPDATE DL_BCN  SET
					 R_TRANS_CODE =:p_dl_bcn_struct_h->h_r_trans_code:l_dl_bcn_struct_i->i_r_trans_code,
					 R_SETT_CODE =:p_dl_bcn_struct_h->h_r_sett_code:l_dl_bcn_struct_i->i_r_sett_code,
					 R_DELAY =:p_dl_bcn_struct_h->h_r_delay:l_dl_bcn_struct_i->i_r_delay,
					 R_TYPE =:p_dl_bcn_struct_h->h_r_type:l_dl_bcn_struct_i->i_r_type,
					 REPO_DATE =:p_dl_bcn_struct_h->h_repo_date:l_dl_bcn_struct_i->i_repo_date,
					 ACCESS_STAMP=:chr_sys_access_stamp:p_i_access_stamp
						 WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						 DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
						 BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;
		 IS_ANY_ORA_ERROR;


	
	


		 IS_ANY_ORA_ERROR;
	 }
	 else
	 {
		 if (CO_InsertErr
				 (l_debug_info_ptr,
				  ERR_ACCESSSTAMP_CHGD,
				  APL_NULL_STRING,
				  APL_NULL_STRING,
				  APL_NULL_STRING,
				  __LINE__,
				  __FILE__
				 ) != APL_SUCCESS)
			 APL_GOBACK_FAIL
				 APL_GOBACK_FAIL
	 }

	 
	 if(!strcmp(p_dl_bcn_struct_h->h_r_type,"00") && (strcmp(p_dl_bcn_struct_h->h_status,STATUS_DEL_UAUTH)==0))
	 {
		 EXEC SQL UPDATE DL_BCN SET R_TYPE = '09'
		 WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
		 DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
		 BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;
		 EXEC SQL COMMIT;
			 
	 } 
 }
/******************************************************************************/
/********************************Added By Chirag***27/05/06******Mark DVP*******************************/
if(!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MRK_DVP))
{
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entering Function Mark DVP Flag\n",
				NULL,p_intl_envdatastruct_h);
	}
	if (!strcmp(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare))
	{
		printf("***************Inside Mark DVP Flag D Function *********************\n");
		if(CO_RtvSysDtTime(sys_date,l_debug_info_ptr) !=APL_SUCCESS)
		{
			APL_GOBACK_FAIL
		}
		strcpy(clh_flg,APL_CLH_FLG_DVP);
		strcpy(r_set_cd,APL_R_SETT_CD);
		strcpy(r_type,APL_R_TYPE);
//		strcpy(no,APL_IND_NO);
		strcpy(r_delay,APL_R_DELAY);
		
		printf("p_dl_bcn_struct_h->h_contract_cd---------------->|%s|\n",p_dl_bcn_struct_h->h_contract_cd);
		printf("p_dl_bcn_struct_h->h_dl_date------------------->|%s|\n",p_dl_bcn_struct_h->h_dl_date);
		printf("p_dl_bcn_struct_h->h_broker_cd----------------->|%s|\n",p_dl_bcn_struct_h->h_broker_cd);
		
		/*Start - RegRept - Rahul*/
		printf("p_dl_bcn_struct_h->h_sebi_reported----------------->|%s|\n",p_dl_bcn_struct_h->h_sebi_reported);
		if (!strcmp( p_dl_bcn_struct_h->h_sebi_reported,"Y"))
			strcpy(no,APL_IND_YES);
		else
			strcpy(no,APL_IND_NO);
		/*End - RegRept - Rahul*/

		printf(" Before Update **************************Status=|%s|\n",p_dl_bcn_struct_h->h_status);
		EXEC SQL UPDATE DL_BCN SET
					  CLH_FLG =: clh_flg,
					  R_SETT_CODE =: r_set_cd,
					  R_DELAY =: r_delay,
					  R_TYPE =: r_type,
					  SEBI_REPORTED =: no,
					  AMEND_DT =: sys_date, 
					/*  LR_VALDATE =: lr_date,*/ /* By chirag - 030606 */
					  ACCESS_STAMP =: sys_date	  
						  WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						  DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
						  BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;
		printf("SQL CODE |%d|\n",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
			printf("***********************Success After Updating ****************************\n");
	}
	else
	{
		if (CO_InsertErr
				(l_debug_info_ptr,
				 ERR_ACCESSSTAMP_CHGD,
				 APL_NULL_STRING,
				 APL_NULL_STRING,
				 APL_NULL_STRING,
				 __LINE__,
				 __FILE__
				) != APL_SUCCESS)
			APL_GOBACK_FAIL
				APL_GOBACK_FAIL
	}				
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting Function Mark DVP Flag\n",
					NULL,p_intl_envdatastruct_h);
		}	  
}	
/********************************Added By Chirag***27/05/06******Mark DVP*******************************/
 
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered authorize of Function MT_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
		printf("Access stamp= |%s|\n",p_dl_bcn_struct_h->h_access_stamp); 
		printf("Access stamp= |%s|\n",chr_acc_stamp_compare); 
	}

		if (!strcmp(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		printf("inside access stamp\n");
			if(strcmp(p_dl_bcn_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
				/*
           l_int_ret_val=CR_Chk_ClnGrp_CauFlg_AtBCN(p_dl_bcn_struct_h,l_debug_info_ptr);

           if(l_int_ret_val==APL_FAILURE)
           {
              APL_GOBACK_FAIL
           }
			  */
				strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_dl_bcn_struct_i->i_access_stamp =0;
				strcpy(p_dl_bcn_struct_h->h_checker,p_intl_envdatastruct_h->usr);
				l_dl_bcn_struct_i->i_checker=0;
				strcpy(p_dl_bcn_struct_h->h_checker_dt,chr_sys_access_stamp);
				l_dl_bcn_struct_i->i_checker_dt=0;
				strcpy(p_dl_bcn_struct_h->h_status,STATUS_AUTH);
				l_dl_bcn_struct_i->i_status =0;
				printf("\n ##############   Before Query  ######### \n");

	    		EXEC SQL UPDATE DL_BCN SET 
					CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
							  CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
							  ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
							  STATUS =:p_dl_bcn_struct_h->h_status:l_dl_bcn_struct_i->i_status
			
						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						      DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
								BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;     


				IS_ANY_ORA_ERROR;	
	
					
				/* Vedavati Generic Change */
			  /* Commented by Vedavati :- Update of LR_VALDATE not reqd */	
				/*	printf("\n Vaibhav *************** Before Compaaring qty **********\n");
					printf("\n Vaibhav *** p_dl_bcn_struct_h->h_contract_cd=|%s| p_dl_bcn_struct_h->h_client_cd=|%s| \n",
											p_dl_bcn_struct_h->h_contract_cd,
											p_dl_bcn_struct_h->h_client_cd);

					EXEC SQL SELECT QTY into :int_l_regqty FROM DL_REGBCN 
									WHERE contract_cd = :p_dl_bcn_struct_h->h_contract_cd
								  	AND client_cd = :p_dl_bcn_struct_h->h_client_cd
									AND access_stamp=(SELECT max(access_stamp) FROM DL_REGBCN 
																WHERE contract_cd = :p_dl_bcn_struct_h->h_contract_cd
															   AND client_cd = :p_dl_bcn_struct_h->h_client_cd);
					if(sqlca.sqlcode)
					{
						printf("\n Error1=|%d| \n",sqlca.sqlcode);
					}
				IS_ANY_ORA_ERROR
					
					EXEC SQL SELECT lr_valdate,QTY INTO :chr_l_valdate:i_valdate,:int_l_dlqty FROM DL_BCN WHERE contract_cd = :p_dl_bcn_struct_h->h_contract_cd and client_cd = :p_dl_bcn_struct_h->h_client_cd;

					if(sqlca.sqlcode)
					{
						printf("\n Error2=|%d| \n",sqlca.sqlcode);
					}
				IS_ANY_ORA_ERROR
					
					printf("\n*********Vedavati  int_l_dlqty=|%lf| int_l_regqty=|%lf| \n",int_l_dlqty,int_l_regqty);
					
					printf("\n BCN chr_l_valdate=|%s| \n",chr_l_valdate);

					if(strcmp(chr_l_valdate,APL_NULL_STRING) && (int_l_dlqty != int_l_regqty))

					{
						printf("\n ******* INSIDE IF********* \n");	
						EXEC SQL UPDATE DL_REGBCN SET LR_VALDATE = NULL
						  				WHERE contract_cd = :p_dl_bcn_struct_h->h_contract_cd
									  	AND client_cd = :p_dl_bcn_struct_h->h_client_cd
								   	AND access_stamp=(SELECT max(access_stamp) FROM DL_REGBCN 
																	WHERE contract_cd = :p_dl_bcn_struct_h->h_contract_cd
															   	AND client_cd = :p_dl_bcn_struct_h->h_client_cd);
						  	
					if(sqlca.sqlcode)
					{
						printf("\n Error3=|%d| \n",sqlca.sqlcode);
					}
				IS_ANY_ORA_ERROR
					}*/					
				

				
			}
   	   else  
			{
				
				memset(p_dl_bcn_struct_h->h_status,NULL,3);
				strcpy(p_dl_bcn_struct_h->h_status,STATUS_DEL_AUTH);
				l_dl_bcn_struct_i->i_status =0;

				EXEC SQL INSERT INTO DL_HISBCN (SELECT A.CONTRACT_CD, A.MKT_TYPE , A.TRAN_TYPE   , A.DL_DATE , A.DL_PRICE, A.BROKERCOMM  , A.EXCH_CD , A.DEAL_CD , A.CLH_FLG  , A.SEBI_REG_NO, A.BROKER_CD  , A.CLIENT_CD   , A.QTY , A.INSTR_CD, A.SETTLEMENT_NO   , A.DL_AMT  , A.BROKERAGE_AMT   , A.STT_AMT , A.SETTLMENT_AMT   , A.DL_REF_NO  , A.INTER_FII_FLG, A.SEBI_REPORTED, A.ENTRY, A.REPAIRED_IND , A.MAKER   , A.MAKER_DT, A.ACCESS_STAMP, A.CHECKER , A.CHECKER_DT  , A.STATUS   , A.SETT_DT , A.NARRATIVE   , A.OFF_MARKET   , A.COUNTER_PTY, A.R_TRANS_CODE , A.R_SETT_CODE  , A.R_DELAY  , A.R_TYPE   , A.REPO_DATE   , A.AMEND_DT, A.FAILREASON_CD, A.SUB_FAIL_CD, A.LR_VALDATE  , A.ADDR_FRM   , A.ADDR_TO,a.ACCESS_STAMP, A.STAMP_DUTY FROM DL_BCN a
						WHERE a.CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						a.DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
						a.BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd);

				printf("\n sqlca.sqlcode |%d|\n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR

					EXEC SQL UPDATE DL_HISBCN SET STATUS =:p_dl_bcn_struct_h->h_status,
					R_TYPE = '09'
					WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
					DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
					BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;

				printf("\n sqlca.sqlcode |%d|\n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR

					EXEC SQL DELETE DL_BCN 
					WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
					DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
					BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;     

				printf("\n sqlca.sqlcode |%d|\n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR


			}
		
			
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered reset of Function MT_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

		if (!strcmp(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {

   		if(!strcmp(p_dl_bcn_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
				/*
				strcpy(p_dl_bcn_struct_h->h_status,STATUS_AUTH);
				l_int_ret_val=CR_Chk_ClnGrp_CauFlg_AtBCN(p_dl_bcn_struct_h,l_debug_info_ptr);

				if(l_int_ret_val==APL_FAILURE)
				{
					 APL_GOBACK_FAIL
				}
				*/
				strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_dl_bcn_struct_i->i_access_stamp =0;
				strcpy(p_dl_bcn_struct_h->h_checker,p_intl_envdatastruct_h->usr);
				l_dl_bcn_struct_i->i_checker=0;
				strcpy(p_dl_bcn_struct_h->h_checker_dt,chr_sys_access_stamp);
				l_dl_bcn_struct_i->i_checker_dt=0;
				strcpy(p_dl_bcn_struct_h->h_status,STATUS_AUTH);
				l_dl_bcn_struct_i->i_status =0;
				/*
				if(!strcmp(p_dl_bcn_struct_h->h_status,STATUS_UAUTH))
				{
				memset(p_dl_bcn_struct_h->h_status,NULL,sizeof(3));
				strcpy(p_dl_bcn_struct_h->h_status,STATUS_AUTH);
				l_dl_bcn_struct_i->i_status =0;
				}
				else
				{
				strcpy(p_dl_bcn_struct_h->h_status,p_dl_bcn_struct_h->h_status);
				l_dl_bcn_struct_i->i_status =0;
				}
				*/

	    		EXEC SQL UPDATE DL_BCN SET 
				CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
				CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
				ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
			 	STATUS =:p_dl_bcn_struct_h->h_status:l_dl_bcn_struct_i->i_status
				
						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						      DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
								BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;     



				IS_ANY_ORA_ERROR;	
			}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
		strcpy(p_dl_bcn_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_dl_bcn_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered delete of Function MT_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 	}
		/** Sundar - 03/05/2006/ **/
		if(!strcmp(p_dl_bcn_struct_h->h_entry,"S"))
		{	
			/*
			EXEC SQL SELECT SUBSTR(:p_dl_bcn_struct_h->h_contract_cd,4) INTO :l_chknum FROM DUAL;
			IS_ANY_ORA_ERROR

			strcpy(p_dl_bcn_struct_h->h_contract_cd,l_chknum);
			*/
			p_dl_bcn_struct_h->h_brokercomm = 0;
			strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare);
		}
		/** Sundar - 03/05/2006/ **/

	   if (!strcmp(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_dl_bcn_struct_i->i_access_stamp =0;
                        strcpy(p_dl_bcn_struct_h->h_status,STATUS_DEL_UAUTH);
			l_dl_bcn_struct_i->i_status =0;

			EXEC SQL UPDATE DL_BCN SET 
				MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
						MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
						CHECKER =:p_dl_bcn_struct_h->h_checker:p_i_checker,
						CHECKER_DT =:p_dl_bcn_struct_h->h_checker_dt:p_i_checkerdt,
						STATUS =:p_dl_bcn_struct_h->h_status:l_dl_bcn_struct_i->i_status,
						ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp

						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						      DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
								BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;     

              
					IS_ANY_ORA_ERROR;	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_REPAIR))
	{

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Reapire h_mode of Function CR_Mod_DbBCNFn\n",
					NULL,p_intl_envdatastruct_h);
		}

		l_int_ret_val=CR_Chk_ClnGrp_CauFlg_AtBCN(p_dl_bcn_struct_h,l_debug_info_ptr);

		if(l_int_ret_val==APL_FAILURE)
		{
			APL_GOBACK_FAIL
		}


		strcpy(p_dl_bcn_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_dl_bcn_struct_i->i_maker=0;
		strcpy(p_dl_bcn_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_dl_bcn_struct_i->i_maker_dt=0;
		strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_dl_bcn_struct_i->i_access_stamp =0;
		strcpy(p_dl_bcn_struct_h->h_status,p_dl_bcn_struct_h->h_status);
		l_dl_bcn_struct_i->i_status =0;
		strcpy(p_dl_bcn_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_dl_bcn_struct_h->h_checker_dt,APL_NULL_STRING);

		/*	Additional Code for UAT Change Rohit 
		if(!strcmp(p_dl_bcn_struct_h->h_entry,"S"))
		{	
			EXEC SQL SELECT SUBSTR(:p_dl_bcn_struct_h->h_contract_cd,4) INTO :l_chknum FROM DUAL;
			IS_ANY_ORA_ERROR

			strcpy(p_dl_bcn_struct_h->h_contract_cd,l_chknum);
			p_dl_bcn_struct_h->h_brokercomm = 0;
		}	
		*/
		/* changes by amish ---0805 */
			printf("\nPROCESS INDICATOR IS *********|%c|\n",p_intl_envdatastruct_h->h_process[0]);
		if(p_intl_envdatastruct_h->h_process[0] != 'D')
		{
			printf("\ninside iff for inserting\n");
			EXEC SQL INSERT INTO DL_BCN VALUES (:p_dl_bcn_struct_h:l_dl_bcn_struct_i);
		}

		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_BCN_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
    
	
		/* changes by amish ---09/05----------- */
		printf("\ncontract code  IS |%s|\n",p_dl_bcn_struct_h->h_contract_cd);
		printf("\nDEAL DATE IS |%s|\n",p_dl_bcn_struct_h->h_dl_date);
		printf("\broker code  IS |%s|\n",p_dl_bcn_struct_h->h_broker_cd);

		if((!strcmp(p_dl_bcn_struct_h->h_dl_date,APL_NULL_STRING)) && (!strcmp(p_dl_bcn_struct_h->h_broker_cd,APL_NULL_STRING)))	
		{
				printf("\ndeal date and broker code is null\n");
						EXEC SQL DELETE DL_REPAIRBCN
						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd 
							AND  DL_DATE IS NULL 
							AND	BROKER_CD IS NULL;     

				IS_ANY_ORA_ERROR
		}
		else if((strcmp(p_dl_bcn_struct_h->h_dl_date,APL_NULL_STRING)) && (!strcmp(p_dl_bcn_struct_h->h_broker_cd,APL_NULL_STRING)))
		{
			printf("\nbroker code is null\n");
					EXEC SQL DELETE DL_REPAIRBCN
						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd 
							AND  DL_DATE  = :p_dl_bcn_struct_h->h_dl_date
							AND	BROKER_CD IS NULL;     

				IS_ANY_ORA_ERROR

		}
		else if((!strcmp(p_dl_bcn_struct_h->h_dl_date,APL_NULL_STRING)) && (strcmp(p_dl_bcn_struct_h->h_broker_cd,APL_NULL_STRING)))
		{
			printf("\ndeal date is null\n");
					EXEC SQL DELETE DL_REPAIRBCN
						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd 
							AND  DL_DATE IS NULL
							AND	BROKER_CD = :p_dl_bcn_struct_h->h_broker_cd;     

				IS_ANY_ORA_ERROR
		}
		else
		{
			printf("\nboth present\n");
					EXEC SQL DELETE DL_REPAIRBCN
						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd 
							AND  DL_DATE  = :p_dl_bcn_struct_h->h_dl_date
							AND	BROKER_CD = :p_dl_bcn_struct_h->h_broker_cd;     

				IS_ANY_ORA_ERROR

		}
		

	}
	if(!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_OVERRIDE))
	{

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Override h_mode of Function CR_Mod_DbBCNFn\n",
					NULL,p_intl_envdatastruct_h);
		}

			if(!strcmp(p_dl_bcn_struct_h->h_access_stamp,chr_acc_stamp_compare))
			{
				if(!strcmp(p_dl_bcn_struct_h->h_status,STATUS_OVERRIDE))
				{
					strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
					l_dl_bcn_struct_i->i_access_stamp =0;
					strcpy(p_dl_bcn_struct_h->h_checker,p_intl_envdatastruct_h->usr);
					l_dl_bcn_struct_i->i_checker=0;
					strcpy(p_dl_bcn_struct_h->h_checker_dt,chr_sys_access_stamp);
					l_dl_bcn_struct_i->i_checker_dt=0;
					strcpy(p_dl_bcn_struct_h->h_status,STATUS_AUTH);
					l_dl_bcn_struct_i->i_status =0;

					EXEC SQL UPDATE DL_BCN SET
						CHECKER =:p_dl_bcn_struct_h->h_checker:l_dl_bcn_struct_i->i_checker,
								  CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
								  ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
								  STATUS =:p_dl_bcn_struct_h->h_status:l_dl_bcn_struct_i->i_status
						WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd AND
						      DL_DATE =:p_dl_bcn_struct_h->h_dl_date AND
								BROKER_CD =:p_dl_bcn_struct_h->h_broker_cd;     



					IS_ANY_ORA_ERROR
				}
				else
				{
					if (CO_InsertErr
							(l_debug_info_ptr,
							 ERR_OVERRIDE_NOT_ALLOWED,
							 APL_NULL_STRING,
							 APL_NULL_STRING,
							 APL_NULL_STRING,
							 __LINE__,
							 __FILE__
							) != APL_SUCCESS)
						APL_GOBACK_FAIL
				}
			}
			else
			{
				if (CO_InsertErr
						(l_debug_info_ptr,
						 ERR_ACCESSSTAMP_CHGD,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 __LINE__,
						 __FILE__
						) != APL_SUCCESS)
					APL_GOBACK_FAIL
			}
	}



 if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
 APL_GOBACK_SUCCESS

 RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_dl_bcn_struct_i);
		return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_dl_bcn_struct_i);
		return(APL_FAILURE);
	}

}

int CR_Chk_ValAtBCN(DL_BCN_STRUCT_H *p_dl_bcn_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	char l_chr_p_Instatus[3]=APL_NULL_STRING;
	char l_chr_p_Clstatus[3]=APL_NULL_STRING;
	char l_chr_p_Setstatus[3]=APL_NULL_STRING;
	char l_chr_Party_Type[2]=APL_NULL_STRING;
	int  l_int_l_datecmp = 0;
	char l_sys_date[APL_DATE_LEN];
	char l_enddate[APL_DATE_LEN];
	short l_i_enddate = 0;
	short l_i_Status=0;
	short l_i_SetStatus=0;
	short l_i_CStatus=0;
	short l_i_PartyType = 0;
	int int_error_flag=APL_SUCCESS;
	float l_seth_sale_qty = 0.0;
	float l_high_at = 0.0;
	float l_low_at = 0.0;
	float l_brokerage = 0.0;
	float l_sttrate = 0.0;
	float l_comprate= 0.0;
	int l_rowexists = 0;  /* changes by amish -- no del */
/*	char  l_chknum[3] =APL_NULL_STRING;*/

#ifdef APL_THREADS
	APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Chk_ValAtBCNFn \n",
				NULL,NULL);
	}
	memset(l_chr_p_Instatus,NULL,3);
	memset(l_chr_p_Clstatus,NULL,3);
	memset(l_chr_p_Setstatus,NULL,3);
	memset(l_chr_Party_Type,NULL,2);


		if(!strcmp(p_dl_bcn_struct_h->h_entry,"S"))
		{
			
			if(!strcmp(p_dl_bcn_struct_h->h_exch_cd,"NSE"))
			{
				if(p_dl_bcn_struct_h->h_brokercomm != 23)
				{
               if( CO_InsertErr(l_debug_info_ptr, ERR_ENTRY_S_NSE_23,
               APL_NULL_STRING, APL_NULL_STRING,
               APL_NULL_STRING, __LINE__, __FILE__)==APL_FAILURE )
               {
                  int_error_flag = APL_FAILURE;
               }
				}
			}
			if(!strcmp(p_dl_bcn_struct_h->h_exch_cd,"BSE"))
			{
				if(p_dl_bcn_struct_h->h_brokercomm != 01)
				{
               if( CO_InsertErr(l_debug_info_ptr, ERR_ENTRY_S_BSE_01,
               APL_NULL_STRING, APL_NULL_STRING,
               APL_NULL_STRING, __LINE__, __FILE__)==APL_FAILURE )
               {
                  int_error_flag = APL_FAILURE;
               }
				}
			}
	
		}
		/*  chgs by amish 27/04---chk not require for manual input  */
		/*
		else
		{
	
			EXEC SQL SELECT SUBSTR(:p_dl_bcn_struct_h->h_contract_cd,2,2) INTO :l_chknum FROM DUAL;
			IS_ANY_ORA_ERROR

			if(!strcmp(p_dl_bcn_struct_h->h_exch_cd,"NSE"))
			{
				if(strcmp(l_chknum,"23"))
				{
               if( CO_InsertErr(l_debug_info_ptr, ERR_ENTRY_M_NSE_23,
               APL_NULL_STRING, APL_NULL_STRING,
               APL_NULL_STRING, __LINE__, __FILE__)==APL_FAILURE )
               {
                  int_error_flag = APL_FAILURE;
               }
				}
			}
			if(!strcmp(p_dl_bcn_struct_h->h_exch_cd,"BSE"))
			{
				if(strcmp(l_chknum,"01"))
				{
               if( CO_InsertErr(l_debug_info_ptr, ERR_ENTRY_M_BSE_01,
               APL_NULL_STRING, APL_NULL_STRING,
               APL_NULL_STRING, __LINE__, __FILE__)==APL_FAILURE )
               {
                  int_error_flag = APL_FAILURE;
               }
				}
			}
		}
		*/

	EXEC SQL SELECT BROKERAGE,STTRATE INTO :l_brokerage,:l_sttrate FROM MT_CORE_SYS_PARAMS WHERE PART_CONFIRM = 'Y';
	printf("sql code %d\n",sqlca.sqlcode);
	IS_ANY_ORA_ERROR

		if((!strcmp(p_dl_bcn_struct_h->h_entry,"S")) || 
			(!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_REPAIR))) /******* Changed by sundar -- 080506*******/
		{
			if(p_dl_bcn_struct_h->h_stt_amt != 0)
			{
				l_comprate=(p_dl_bcn_struct_h->h_stt_amt*100/p_dl_bcn_struct_h->h_dl_amt);
				printf("\n l_comprate STT=|%f| \n",l_comprate);
				/*if((p_dl_bcn_struct_h->h_stt_amt*100/p_dl_bcn_struct_h->h_settlment_amt) > l_sttrate)*/
/** Change by AMitB:12/10/06	**/
/*				if((p_dl_bcn_struct_h->h_stt_amt*100/p_dl_bcn_struct_h->h_dl_amt) > l_sttrate)	*/
				if(l_comprate > l_sttrate)
				{
					if(CO_InsertErr(l_debug_info_ptr,
								ERR_BCN_STTAMT_HIGH,
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__
								) == APL_SUCCESS)
						int_error_flag = APL_FAILURE;
				}
			}
			if(p_dl_bcn_struct_h->h_brokerage_amt != 0)
			{
				l_comprate=0;
				l_comprate=(p_dl_bcn_struct_h->h_brokerage_amt*100/p_dl_bcn_struct_h->h_dl_amt);
				printf("\n l_comprate Brokrage=|%f| \n",l_comprate);
				printf("\n l_brokerage =|%f| \n",l_brokerage);
				/*if((p_dl_bcn_struct_h->h_brokerage_amt*100/p_dl_bcn_struct_h->h_settlment_amt) > l_brokerage)*/
/** Change by AMitB:27/10/06 BCN Upload Error Fix **/
/*				if((p_dl_bcn_struct_h->h_brokerage_amt*100/p_dl_bcn_struct_h->h_dl_amt) > l_brokerage)	*/
				if(l_comprate > l_brokerage)
				{
					if(CO_InsertErr(l_debug_info_ptr,
								ERR_BCN_BROKERAGE_HIGH,
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__
								) == APL_SUCCESS)
						int_error_flag = APL_FAILURE;

				}
			}
		}
	/*	test
		if(strlen(p_dl_bcn_struct_h->h_exch_cd) != 0)
		{
		EXEC SQL SELECT HIGH_AT,LOW_AT INTO:l_high_at,:l_low_at FROM MT_DAILY_QUOT
		WHERE
		STATUS = 'AA' AND
		EXCH_CODE =:p_dl_bcn_struct_h->h_exch_cd AND
		INSTR_CODE =:p_dl_bcn_struct_h->h_instr_cd AND
		QUOT_DATE =TO_DATE(:p_dl_bcn_struct_h->h_dl_date,'dd/mm/yyyy hh:mi:ss');
		printf("sql code %d\n",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
		test
		if((l_high_at < p_dl_bcn_struct_h->h_dl_price) || (l_low_at > p_dl_bcn_struct_h->h_dl_price))
		{
		if(CO_InsertErr(l_debug_info_ptr,
		ERR_BCN_DL_PRICE_NOTIN_BAND,
		APL_NULL_STRING,
		APL_NULL_STRING,
		APL_NULL_STRING,
		__LINE__,
		__FILE__
		) == APL_SUCCESS)
		int_error_flag = APL_FAILURE;
		}
		}
		test
		EXEC SQL SELECT SAFEKEEP_POS - VAL_DEL INTO :l_seth_sale_qty FROM DL_SAFEK 
		WHERE STATUS_POS = 'AA' AND CLIENT =:p_dl_bcn_struct_h->h_client_cd AND 
		SECURITY_CD=:p_dl_bcn_struct_h->h_instr_cd;
		printf("sql code %d\n",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
		test 
		if(p_dl_bcn_struct_h->h_qty >l_seth_sale_qty)
		{
		if(CO_InsertErr(l_debug_info_ptr,
		ERR_BCN_QTY_MORE,
		APL_NULL_STRING,
		APL_NULL_STRING,
		APL_NULL_STRING,
		__LINE__,
		__FILE__
		) == APL_SUCCESS)
		int_error_flag = APL_FAILURE;
		}
		*/ 
	if(strlen(p_dl_bcn_struct_h->h_instr_cd) != 0);
	{
		EXEC SQL SELECT STATUS into :l_chr_p_Instatus:l_i_Status
			FROM MT_INSTRUMENT
			WHERE INSTR_CODE =:p_dl_bcn_struct_h->h_instr_cd;
		IS_ANY_ORA_ERROR

			printf("\n status |%s| instr_cd |%s|\n",l_chr_p_Instatus,p_dl_bcn_struct_h->h_instr_cd);

		if (strcmp(l_chr_p_Instatus,STATUS_AUTH))
		{ 
			if(CO_InsertErr(
						l_debug_info_ptr,
						ERR_BCN_INSTRU_CD_NOT_AUTH,
						APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						) == APL_SUCCESS)
				int_error_flag = APL_FAILURE;
		}
	}
	if(strlen(p_dl_bcn_struct_h->h_client_cd) != 0)
	{

		EXEC SQL SELECT STATUS into :l_chr_p_Clstatus:l_i_CStatus
			FROM MT_CLIENT
			WHERE CLN_CODE =:p_dl_bcn_struct_h->h_client_cd;

		IS_ANY_ORA_ERROR
/* changes by amish 10/05 */
			if (!strcmp(l_chr_p_Clstatus,"FA") || !strcmp(l_chr_p_Clstatus,"FU"))
			{
				if(CO_InsertErr(l_debug_info_ptr,
							ERR_ACCOUNT_FRZN,
							APL_NULL_STRING,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__
							) == APL_SUCCESS)
					int_error_flag = APL_FAILURE;	
			}
   /* change by amish 10/05*/      	
			if (!strcmp(l_chr_p_Clstatus,"CU") || !strcmp(l_chr_p_Clstatus,"CA"))
			{
				if(CO_InsertErr(l_debug_info_ptr,
							ERR_ACCOUNT_CLOSED,
							APL_NULL_STRING,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__
							) == APL_SUCCESS)
					int_error_flag = APL_FAILURE;	
			}
		
     /* change by amish 10/05*/
			if (strcmp(l_chr_p_Clstatus,STATUS_AUTH) && strcmp(l_chr_p_Clstatus,"FA") && strcmp(l_chr_p_Clstatus,"CU")
			&& strcmp(l_chr_p_Clstatus,"CA") && strcmp(l_chr_p_Clstatus,"FU")	)
			{
				if(CO_InsertErr(l_debug_info_ptr,
							ERR_BCN_CLN_CD_NOT_AUTH,
							APL_NULL_STRING,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__
							) == APL_SUCCESS)
					int_error_flag = APL_FAILURE;	
			}
	}
	
			EXEC SQL SELECT COUNT(*)
				INTO :l_rowexists
				FROM MT_NO_DELV
				/*WHERE  NO_DEL_FROM < :p_sys_dl_deal_struct_h->h_dlt AND  NO_DEL_TO > :p_sys_dl_deal_struct_h->h_dlt;*/
				WHERE
				TO_DATE(:p_dl_bcn_struct_h->h_dl_date,'DD/MM/YYYY HH:MI:SS') between NO_DEL_FROM  and NO_DEL_TO
				AND
				INSTR_CODE =:p_dl_bcn_struct_h->h_instr_cd
				AND STATUS = 'AA'
				AND EXCH_CODE = :p_dl_bcn_struct_h->h_exch_cd;
				IS_ANY_ORA_ERROR
		printf("\n rows areeeeeeee in no del |%d|\n",l_rowexists);
	if(strlen(p_dl_bcn_struct_h->h_settlement_no) != 0 && l_rowexists <= 0)
	{
      EXEC SQL SELECT STATUS into :l_chr_p_Setstatus:l_i_SetStatus
         FROM MT_SETTL_CAL
         WHERE SETTL_NO =:p_dl_bcn_struct_h->h_settlement_no
         AND START_DATE =:p_dl_bcn_struct_h->h_dl_date
   	 AND EXCH_CODE =:p_dl_bcn_struct_h->h_exch_cd
         AND SETTL_TYPE =:p_dl_bcn_struct_h->h_mkt_type; /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007*/

      IS_ANY_ORA_ERROR
         printf("l_chr_p_Setstatus|%s|\n ",l_chr_p_Setstatus);

      if (sqlca.sqlcode == 1403)
      {
         if(CO_InsertErr(
                  l_debug_info_ptr,
                  ERR_STLMENTCAL_NOTFND,
                  p_dl_bcn_struct_h->h_settlement_no,
                  APL_NULL_STRING,
                  APL_NULL_STRING,
                  __LINE__,
                  __FILE__
                  ) == APL_SUCCESS)
            int_error_flag = APL_FAILURE;
      }
      else
      {
         if (strcmp(l_chr_p_Setstatus,STATUS_AUTH))
         {
            if(CO_InsertErr(
                  l_debug_info_ptr,
                  ERR_BCN_SETT_NO_NOT_AUTH,
                  APL_NULL_STRING,
                  APL_NULL_STRING,
                  APL_NULL_STRING,
                  __LINE__,
                  __FILE__
                  ) == APL_SUCCESS)
            int_error_flag = APL_FAILURE;
         }
         else
         {
		 /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007*/		
          if(strlen(p_dl_bcn_struct_h->h_settlement_no) != 0 && strlen(p_dl_bcn_struct_h->h_mkt_type) != 0)/* chngs by amish- 27/04 */
		 {
           	 EXEC SQL SELECT END_DATE into :l_enddate:l_i_enddate
           	 FROM MT_SETTL_CAL
           	 WHERE SETTL_NO =:p_dl_bcn_struct_h->h_settlement_no
           	 AND START_DATE =:p_dl_bcn_struct_h->h_dl_date AND
					 EXCH_CODE =:p_dl_bcn_struct_h->h_exch_cd
					 AND SETTL_TYPE =:p_dl_bcn_struct_h->h_mkt_type; /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007*/
	
           	 IS_ANY_ORA_ERROR
           	 if(APL_SUCCESS != CO_Pro_DateComp(l_enddate,p_dl_bcn_struct_h->h_dl_date,&l_int_l_datecmp,
							 l_debug_info_ptr))
            	{
               	APL_GOBACK_FAIL
            	}
              if(l_int_l_datecmp > 0)
              {
               if( CO_InsertErr(l_debug_info_ptr, ERR_DEALDT_LESSTHAN_ENDDATE,
               APL_NULL_STRING, APL_NULL_STRING,
               APL_NULL_STRING, __LINE__, __FILE__)==APL_FAILURE )
                {
                  int_error_flag = APL_FAILURE;
                }
              }
				}
         }
      }
	}
	if(strlen(p_dl_bcn_struct_h->h_broker_cd) != 0)
	{
		EXEC SQL SELECT PTY_TYPE into :l_chr_Party_Type:l_i_PartyType
			FROM MT_PARTY 
			WHERE STATUS = 'AA' AND PTY_CODE =:p_dl_bcn_struct_h->h_broker_cd;
		IS_ANY_ORA_ERROR
			if ((strcmp(l_chr_Party_Type,APL_PARTY_TYPE_IND) != 0) && 
					(strcmp(l_chr_Party_Type,APL_PARTY_TYPE_P) != 0))
			{
				if(CO_InsertErr(
							l_debug_info_ptr,
							ERR_PARTY_TYPE_NOT_VALID,
							APL_NULL_STRING,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__
							) == APL_SUCCESS)
					int_error_flag = APL_FAILURE;
			}
	}
	/*EXEC SQL SELECT SYSDATE INTO :l_sys_date FROM DUAL;*/
	EXEC SQL SELECT SYS_DATE INTO :l_sys_date  FROM PRO_SYS_DATE ;
	IS_ANY_ORA_ERROR

		if(APL_SUCCESS != CO_Pro_DateComp(l_sys_date,p_dl_bcn_struct_h->h_dl_date,&l_int_l_datecmp,l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}

	if(l_int_l_datecmp > 0)
	{
		if( CO_InsertErr(l_debug_info_ptr, ERR_DEALDT_LESSTHAN_SYSDATE,
					APL_NULL_STRING, APL_NULL_STRING,
					APL_NULL_STRING, __LINE__, __FILE__)==APL_FAILURE )
		{
			int_error_flag = APL_FAILURE;
		}
	}

	if(strlen(p_dl_bcn_struct_h->h_settlement_no) != 0 && strlen(p_dl_bcn_struct_h->h_mkt_type) != 0 && l_rowexists <= 0) /* chgs by amish -settlement no can be null 4 clh flg "D" */
	{
		EXEC SQL SELECT END_DATE into :l_enddate:l_i_enddate
			FROM MT_SETTL_CAL
			WHERE SETTL_NO =:p_dl_bcn_struct_h->h_settlement_no
			AND START_DATE =:p_dl_bcn_struct_h->h_dl_date AND
			EXCH_CODE =:p_dl_bcn_struct_h->h_exch_cd
			AND SETTL_TYPE =:p_dl_bcn_struct_h->h_mkt_type; /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007*/

		IS_ANY_ORA_ERROR
			if(APL_SUCCESS != CO_Pro_DateComp(l_enddate,p_dl_bcn_struct_h->h_dl_date,&l_int_l_datecmp,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		if(l_int_l_datecmp > 0)
		{
			if( CO_InsertErr(l_debug_info_ptr, ERR_DEALDT_LESSTHAN_ENDDATE,
					APL_NULL_STRING, APL_NULL_STRING,
					APL_NULL_STRING, __LINE__, __FILE__)==APL_FAILURE )
			{
				int_error_flag = APL_FAILURE;
			}
		}

		if (int_error_flag == APL_FAILURE)
		{
			APL_GOBACK_FAIL
		}
		else APL_GOBACK_SUCCESS
	}
		RETURN_SUCCESS :
		{
			APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
				return(APL_SUCCESS);
		}
RETURN_FAILURE :
	{
		APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
			return(APL_FAILURE);
	}

}
int CR_Chk_RepAtBCN(DL_BCN_STRUCT_H *p_dl_bcn_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	DL_BCN_STRUCT_I *l_dl_bcn_struct_i = NULL;
	char chr_sys_access_stamp[APL_DATE_LEN]=APL_NULL_STRING;
	int int_error_flag = APL_SUCCESS;
	int l_count = 0;
	short l_i_count = 0;
	char  l_chknum[17] =APL_NULL_STRING;         /* UAT Change  */

#ifdef APL_THREADS
	APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
#endif
	l_dl_bcn_struct_i=(DL_BCN_STRUCT_I*)calloc(1,sizeof(DL_BCN_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_bcn_struct_i)

		if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
		{
			APL_GOBACK_FAIL
		}


	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Chk_ReapireAtBCN\n",
				NULL,NULL);
	}

	EXEC SQL SELECT COUNT(*) INTO :l_count:l_i_count FROM DL_REPAIRBCN 
		WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd;
	IS_ANY_ORA_ERROR;
	
	strcpy(p_dl_bcn_struct_h->h_status,STATUS_REPAIR);
	l_dl_bcn_struct_i->i_status =0;
	strcpy(p_dl_bcn_struct_h->h_maker,p_intl_envdatastruct_h->usr);
	l_dl_bcn_struct_i->i_maker=0;
	strcpy(p_dl_bcn_struct_h->h_maker_dt,chr_sys_access_stamp);
	l_dl_bcn_struct_i->i_maker_dt=0;
	strcpy(p_dl_bcn_struct_h->h_access_stamp,chr_sys_access_stamp);
	l_dl_bcn_struct_i->i_access_stamp =0;
	strcpy(p_dl_bcn_struct_h->h_checker,APL_NULL_STRING);
	strcpy(p_dl_bcn_struct_h->h_checker_dt,APL_NULL_STRING);
	printf("now here\n");
	/********** sundar  --- 03/05/2006 *********************/
		if(!strcmp(p_dl_bcn_struct_h->h_entry,"S"))
		
		 {
			printf("\n contract code issssssssssssss in repair mode |%s| \n",p_dl_bcn_struct_h->h_contract_cd);

			EXEC SQL SELECT SUBSTR(:p_dl_bcn_struct_h->h_contract_cd,4) INTO :l_chknum FROM DUAL;
			IS_ANY_ORA_ERROR
			
			printf("\n l_chknum is **********|%s|\n",l_chknum);
		
			strcpy(p_dl_bcn_struct_h->h_contract_cd,l_chknum);
			p_dl_bcn_struct_h->h_brokercomm = 0;
			
			EXEC SQL SELECT COUNT(*) INTO :l_count:l_i_count FROM DL_REPAIRBCN 
			WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd;
			IS_ANY_ORA_ERROR;
		}	
	/********** sundar  --- 03/05/2006 *********************/
	if(l_count == 0)
	{
		printf("\n CONTRACT CODE IS **********in if loop|%s|\n",p_dl_bcn_struct_h->h_contract_cd);
	EXEC SQL INSERT INTO DL_REPAIRBCN VALUES (:p_dl_bcn_struct_h:l_dl_bcn_struct_i);

	printf("\n sqlca.sqlcode is |%d|",sqlca.sqlcode);

	IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_BCN_EXISTS_REPAIR,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	}
	else 
	{
		printf("\n CONTRACT CODE IS **********in else loop|%s|\n",p_dl_bcn_struct_h->h_contract_cd);
		EXEC SQL DELETE FROM DL_REPAIRBCN 
			WHERE CONTRACT_CD =:p_dl_bcn_struct_h->h_contract_cd;
		IS_ANY_ORA_ERROR;

		EXEC SQL INSERT INTO DL_REPAIRBCN VALUES (:p_dl_bcn_struct_h:l_dl_bcn_struct_i);
		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_BCN_EXISTS_REPAIR,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	}


		if (int_error_flag == APL_FAILURE)
		{
			APL_GOBACK_FAIL
		}
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_dl_bcn_struct_i);
		return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_dl_bcn_struct_i);
		return(APL_FAILURE);
	}

}


int CR_Chk_ClnGrp_CauFlg_AtBCN(DL_BCN_STRUCT_H *p_dl_bcn_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	DL_BCN_STRUCT_I *l_dl_bcn_struct_i = NULL;
	char l_chr_cauflg_fii[2]=APL_NULL_STRING;
	short l_i_cauflgFii=0;
	char l_chr_cauflg_nriocb[2]=APL_NULL_STRING;
	short l_i_cauflgNriocb=0;
	char l_chr_clngrp_exist[5]=APL_NULL_STRING;
	short l_i_clngrp_Exist=0;
	int int_error_flag = APL_SUCCESS;
	char l_status[3]= APL_NULL_STRING;
	short l_i_status = 0;

#ifdef APL_THREADS
	APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	l_dl_bcn_struct_i=(DL_BCN_STRUCT_I*)calloc(1,sizeof(DL_BCN_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_bcn_struct_i)

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Chk_ClnTypAtBCN\n",
					NULL,NULL);
		}
	memset(l_chr_clngrp_exist,NULL,5);
	memset(l_chr_cauflg_fii,NULL,2);
	memset(l_chr_cauflg_nriocb,NULL,2);
							/*Amol 111206 -- Override mode only for FII Client with Inter FII ='N'*/
	 EXEC SQL SELECT CLN_TYPE INTO :l_chr_clngrp_exist:l_i_clngrp_Exist
		FROM MT_CLIENT
		WHERE CLN_CODE =:p_dl_bcn_struct_h->h_client_cd;

	IS_ANY_ORA_ERROR 

		Alert("Client Group is |%s|",l_chr_clngrp_exist);
		Alert("Inter FII flag is |%s|",p_dl_bcn_struct_h->h_inter_fii_flg);

		//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
		/* Changes:Isolve-306:AmitB:040607:for non-FII Client interfii bcn should go in repair 	*/
		//if(strcmp(l_chr_clngrp_exist,"F")!=0 && strcmp(p_dl_bcn_struct_h->h_inter_fii_flg,APL_INTER_FII_IND))
		if((strcmp(l_chr_clngrp_exist,"F")!=0 && strcmp(l_chr_clngrp_exist,"FP")!=0) && strcmp(p_dl_bcn_struct_h->h_inter_fii_flg,APL_INTER_FII_IND))
		//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
		{
			printf("Prateek::Here when client type is not F or FP and InterFII flag is Y");
			if(CO_InsertErr(
							l_debug_info_ptr,
							ERR_BCN_INTERFII_CAU_MISMATCHED,
							APL_NULL_STRING,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__
						) == APL_SUCCESS)
			APL_GOBACK_FAIL
		}

		EXEC SQL SELECT NVL(CAUTION_FLG,'N'),STATUS 
		INTO :l_chr_cauflg_fii:l_i_cauflgFii,:l_status:l_i_status
		FROM MT_RBI_MONITORY
		WHERE INSTR_CODE =:p_dl_bcn_struct_h->h_instr_cd;

	IS_ANY_ORA_ERROR
		
		Alert("Caution Flag and Status are |%s| and |%s|",l_chr_cauflg_fii,l_status);
		
		if (sqlca.sqlcode != 1403)
		{
			Alert("Data Exist in MT_RBI_MONITORY"); 
			/*
		if(strcmp(p_dl_bcn_struct_h->h_status,"AA")==0)
		{
		*/
			if(!strcmp(l_status,STATUS_AUTH))
			{
				Alert("Status is AA in MT_RBI_MONITORY"); 
							/*Amol 111206 -- Override mode only for FII Client with Inter FII ='N'*/

				//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
				//if ((!strcmp(l_chr_cauflg_fii,APL_CAUTION_FLG_Y)) && (!strcmp(l_chr_clngrp_exist,"F")))
				  if ((!strcmp(l_chr_cauflg_fii,APL_CAUTION_FLG_Y)) && (!strcmp(l_chr_clngrp_exist,"F") || (!strcmp(l_chr_clngrp_exist,"FP"))))
				//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
				{
					Alert("Caution Flag is Y and Client type is F or FP");
					if(!strcmp(p_dl_bcn_struct_h->h_inter_fii_flg,APL_INTER_FII_IND) && (!strcmp(p_dl_bcn_struct_h->h_deal_cd,"4") || !strcmp(p_dl_bcn_struct_h->h_deal_cd,"2")))
					{
						Alert("InterFII flag is N and Buy Deal");
						strcpy(p_dl_bcn_struct_h->h_status,STATUS_OVERRIDE);
						l_dl_bcn_struct_i->i_status =0;
					}
					else
					{
						Alert("In else of InterFII flag is N and Buy Deal");
						strcpy(p_dl_bcn_struct_h->h_status,STATUS_UAUTH);
						l_dl_bcn_struct_i->i_status =0;
					}
				}/*Start Changes:Isolve-306:AmitB:280507	*/
				//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
				//else if ((strcmp(l_chr_cauflg_fii,APL_CAUTION_FLG_Y)) && (!strcmp(l_chr_clngrp_exist,"F")))
				  else if ((strcmp(l_chr_cauflg_fii,APL_CAUTION_FLG_Y)) && (!strcmp(l_chr_clngrp_exist,"F") || (!strcmp(l_chr_clngrp_exist,"FP"))))
				//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
				{
					Alert("Caution Flag is N and Client Type is F or FP");
					if(strcmp(p_dl_bcn_struct_h->h_inter_fii_flg,APL_INTER_FII_IND))
					{
						Alert("InterFII flag is Y");
						if(CO_InsertErr(
								l_debug_info_ptr,
								ERR_BCN_INTERFII_CAU_MISMATCHED,
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__
								) == APL_SUCCESS)
						APL_GOBACK_FAIL

					}
					else
					{
						Alert("In else of InterFII flag is Y");
						strcpy(p_dl_bcn_struct_h->h_status,STATUS_UAUTH);
						l_dl_bcn_struct_i->i_status =0;
					}
				}/*End Changes:Isolve-306:AmitB:280507	*/
				else
				{
					Alert("Else of Caution Flag is N and Client Type is F or FP");
					strcpy(p_dl_bcn_struct_h->h_status,STATUS_UAUTH);
					l_dl_bcn_struct_i->i_status =0;
				}
			}	
			else
			{
				Alert("Else of Status is AA in MT_RBI_MONITORY");
				strcpy(p_dl_bcn_struct_h->h_status,STATUS_UAUTH);
				l_dl_bcn_struct_i->i_status =0;
			}
			/*
		}	
	 	else
	  	{
     		strcpy(p_dl_bcn_struct_h->h_status,STATUS_UAUTH);
	  		l_dl_bcn_struct_i->i_status =0;
		}
		*/
	}	
		else
		{	/*Start Changes:Isolve-306:AmitB:280507	*/
			Alert("Record Does not exist in MT_RBI_MONITORY");
			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
			//if(!strcmp(l_chr_clngrp_exist,"F") && strcmp(p_dl_bcn_struct_h->h_inter_fii_flg,APL_INTER_FII_IND))*/
			  if((!strcmp(l_chr_clngrp_exist,"F") || (!strcmp(l_chr_clngrp_exist,"FP"))) && (strcmp(p_dl_bcn_struct_h->h_inter_fii_flg,APL_INTER_FII_IND)))
			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
			
			{
				Alert("Client type F or FP and Inter FII Flag Y");
				if(CO_InsertErr(
								l_debug_info_ptr,
								ERR_BCN_INTERFII_CAU_MISMATCHED,
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__
								) == APL_SUCCESS)
						APL_GOBACK_FAIL
			}
			else
			{
				Alert("Else of Client type F or FP and Inter FII Flag Y");
				strcpy(p_dl_bcn_struct_h->h_status,STATUS_UAUTH);
				l_dl_bcn_struct_i->i_status =0;
			}
			/*End Changes:Isolve-306:AmitB:280507	*/
		}
	/*
	else
	{
		if(CO_InsertErr(
					l_debug_info_ptr,
					ERR_BCN_INSTRU_CD_NOT_AUTH,
					APL_NULL_STRING,
					APL_NULL_STRING,
					APL_NULL_STRING,
					__LINE__,
					__FILE__
					) == APL_SUCCESS)
		APL_GOBACK_FAIL
	}
	*/
	/**************** New coading for Caution Flag - sundar - 080506 *************/
	if ((strcmp(l_chr_cauflg_fii,"N") == 0) && (strcmp(p_dl_bcn_struct_h->h_inter_fii_flg,"Y") == 0))
	{

		Alert("Caution Flag is N and Inter FII flag is Y");
		if(CO_InsertErr(
					l_debug_info_ptr,
					ERR_BCN_INTERFII_CAU_MISMATCHED,
					APL_NULL_STRING,
					APL_NULL_STRING,
					APL_NULL_STRING,
					__LINE__,
					__FILE__
					) == APL_SUCCESS)
			APL_GOBACK_FAIL
	}
	/**************** New coading for Caution Flag - sundar - 080506 *************/


	APL_GOBACK_SUCCESS

	 RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		return(APL_FAILURE);
	}

}

/*
int DL_BCN_Default_Val(char *chr_def_param_str,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

	struct  sqlca   sqlca;

	short   i_ora_mfldname=0;
	short   i_ora_mfldval=0;
	VARCHAR mfldname[20];
	VARCHAR mfldval[20];

	EXEC SQL END DECLARE SECTION;

#ifdef  APL_THREADS
	APL_SET_CONTEXT
		EXEC SQL CONTEXT USE    :my_ctx_local;
#endif

	char p_str[5000]= APL_NULL_STRING;
	char p_lbl[1000]= APL_NULL_STRING;
	char p_data_value[1000]= APL_NULL_STRING;

	memset(p_str,NULL,5000);
	memset(p_lbl,NULL,1000);
	memset(p_data_value,NULL,1000);

	EXEC SQL DECLARE FLD1 CURSOR FOR SELECT  FLDNAME,FLDVAL 
		FROM DL_BCN_DEFAULT;

	EXEC SQL OPEN FLD1 ;

	while(1)
	{
		i_ora_mfldname=-1;
		i_ora_mfldval=-1;
		memset(mfldname.arr,NULL,sizeof(mfldname.arr));
		memset(mfldval.arr,NULL,sizeof(mfldval.arr));

		EXEC SQL FETCH FLD1
			into :mfldname:i_ora_mfldname, :mfldval:i_ora_mfldval;

		if(sqlca.sqlcode == 1403)break;
		strcpy(p_lbl,mfldname.arr);
		strcpy(p_data_value,mfldval.arr);
		UpdMiscFld(p_str, p_lbl,p_data_value);
	}

	strcpy(chr_def_param_str,p_str);

	if(sqlca.sqlcode !=1403)
	{
		APL_GOBACK_FAIL
	}

	APL_GOBACK_SUCCESS


	 RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		return(APL_FAILURE);
	}

}
 
 UpdMiscFld(char *p_str, char *p_lbl,char *p_data_value)
{
	char l_line[4001]=APL_NULL_STRING;
	char l_srch_str[50]=APL_NULL_STRING;
	char l_fld_septr[2] = {DATA_FIELD_SEPRTR,APL_NULL_CHAR};
	char l_val_septr[2] = {DATA_VALUE_SEPRTR,APL_NULL_CHAR};


	memset(l_srch_str,NULL,sizeof(l_srch_str));
	memset(l_line,NULL,sizeof(l_line));
	strcpy(l_srch_str,l_fld_septr);
	strcat(l_srch_str,p_lbl);
	strcat(l_srch_str,l_val_septr);
	if(strstr(p_str,l_srch_str))
	{
		strncpy(l_line,p_str,strlen(p_str) - strlen(strstr(p_str,l_srch_str)));
		strcat(l_line,l_srch_str);
		strcat(l_line,p_data_value);
		if(strstr(strstr(p_str,l_srch_str) + 1,l_fld_septr))
			strcat(l_line,strstr(strstr(p_str,l_srch_str) + 1,l_fld_septr));
		strcat(l_line,"\0");
	}
	else
	{
		strcpy(l_line,p_str);
		strcat(l_line,l_srch_str);
		strcat(l_line,p_data_value);
	}
	if(strlen(l_line))
	{
		memset(p_str,'\0',sizeof(p_str));
		strcat(l_line,l_fld_septr);
		strcpy(p_str,l_line);
	}
}

*/
