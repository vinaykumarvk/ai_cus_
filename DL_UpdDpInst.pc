/*
 **    COPYRIGHT NOTICE
 **
 **   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 **
 **   These materials are confidential and proprietary to
 **    Polaris Software Lab Limited and no part of these materials should
 **    be reproduced, published, transmitted or distributed in any form or
 **    by any means, electronic, mechanical, photocopying, recording or
 **    otherwise, or stored in any information storage or retrieval system
 **    of any nature nor should the materials be disclosed to third parties
 **    or used in any other manner for which this is not authorized, without
 **    the prior express written authorization of Polaris Software Lab Limited.
 **/
/*********************************************************************
 **
 ** Module Name         :      DEAL PROCESSING
 **
 ** File Name           :      DL_UpdDpInst.pc
 **
 ** Description         :      
 **
 **
 **
 **            Version Control Block
 **
 ** Date        Version   Author          Description              RFS No.
 ** ---------   --------  --------------- ----------------------   ---------
 ** 24/04/2006   1.0      Amit Bhosale    New File                 HDFCDL_014A
 ** -------------------------------------------------------------------------
 ** 09-Jun-2010 1.0.1.13   Naren V        NSDL DP Ins File Format  ISKB_3298
 **                                       Changes - Variable  Len
 **                                       changes were incorporat
 **                                       ed accordingly based on
 **                                       NSDL depository revised
 **                                       file formats.
 ****************************************************************************/

#include<stdio_64.h>
#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "DL_Interface.h"
#include "BT_Common.h"
#include "Intellect_Error.h"
#include "CO_IndStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int DL_Upd_DPInst(DL_UPDDPINST_STRUCT_H *p_dl_upddpinst_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/* Variable Declarations */

	/* int int_l_dpm_no=0; ** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	long int_l_dpm_no = 0;
	short i_dpm_no=0;
	
	DL_UPDDPINST_STRUCT_I *p_dl_upddpinst_struct_i;
	struct sqlca sqlca;

	p_dl_upddpinst_struct_i=(DL_UPDDPINST_STRUCT_I*)calloc(1,sizeof(DL_UPDDPINST_STRUCT_I));
	APL_MALLOC_FAIL(p_dl_upddpinst_struct_i)


	/* Query modified by Siva.ganapathi for ISKB_2495 on 21/10/2009 -- started */
	printf("\n In DL_Upd_DPInst() Internal reference is %s",p_dl_upddpinst_struct_h->h_internal_ref_no);
	printf("\n In DL_Upd_DPInst() batch number is %s",p_dl_upddpinst_struct_h ->h_batch_no);
	/* Commented and added new query below.
	EXEC SQL SELECT DPM_TRANS_NO into :int_l_dpm_no:i_dpm_no
						FROM DL_DPINSTRS
						WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no;
	*/
    
	
	/*Changes for New Upload NSDL_RESPON_UPL changes start 12/02/2024 */
       Alert("user : |%s| \n",p_intl_envdatastruct_h->usr);
	   Alert("processtion : |%s| \n",p_intl_envdatastruct_h->processtion);
	   Alert("h_mode : |%s| \n",p_intl_envdatastruct_h->h_mode);
	   Alert("subprocess : |%s| \n",p_intl_envdatastruct_h->subprocess);
	   Alert("h_process : |%s| \n",p_intl_envdatastruct_h->h_process);
	  if((strcmp(p_intl_envdatastruct_h->subprocess,"USER")==0)&& strcmp(p_intl_envdatastruct_h->processtion,"NSDL_RESPON_UPL")==0)
	  {
		 Alert("Inside new Upload block \n"); 
         EXEC SQL 
	     SELECT DPM_TRANS_NO into :int_l_dpm_no:i_dpm_no
	     FROM DL_DPINSTRS
	 	 WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no;	  
		 
		 printf("\n New upload is %d",sqlca.sqlcode);
		 
      }
	  else
	  {
		Alert("Inside old Upload block :\n");   
        EXEC SQL 
	    SELECT DPM_TRANS_NO into :int_l_dpm_no:i_dpm_no
	    FROM DL_DPINSTRS
	    WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no
		AND BATCH_NO=:p_dl_upddpinst_struct_h ->h_batch_no;
		
		printf("\n Existing upload is %d",sqlca.sqlcode);
       }		  
			
	/*Changes for New Upload NSDL_RESPON_UPL changes End 12/02/2024 */
	
	
	
	printf("\n sql error while fetching DPM_TRANS_NO is %d",sqlca.sqlcode);
	fflush(stdout);
	/* Query modified by Siva.ganapathi for ISKB_2495 on 21/10/2009 -- Ended */

	IS_ANY_ORA_ERROR

	/* printf("\n int_l_dpm_no=|%d| \n",int_l_dpm_no); ** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	printf("\n int_l_dpm_no=|%ld| \n",int_l_dpm_no);
	fflush(stdout);
		
	if(i_dpm_no == -1)
	{
	/* Query modified by Siva.ganapathi for ISKB_3824 on 07/05/2010 -- started */	

	/*EXEC SQL UPDATE DL_DPINSTRS SET DPM_TRANS_NO=:p_dl_upddpinst_struct_h->h_dpm_trans_no
			WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no;*/	
	
    	/* printf("\n DPM_TRANS_NO is %d ",p_dl_upddpinst_struct_h->h_dpm_trans_no);
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
    	printf("\n DPM_TRANS_NO is %ld ",p_dl_upddpinst_struct_h->h_dpm_trans_no);
		
	 if((strcmp(p_intl_envdatastruct_h->subprocess,"USER")==0) && strcmp(p_intl_envdatastruct_h->processtion,"NSDL_RESPON_UPL")==0)
	  {  
		Alert("Inside new Upload block :\n"); 
		EXEC SQL UPDATE DL_DPINSTRS SET DPM_TRANS_NO=:p_dl_upddpinst_struct_h->h_dpm_trans_no
			WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no;
	   
	  }
	  else
	  {
		  Alert("Inside old Upload block : \n"); 
		   EXEC SQL UPDATE DL_DPINSTRS SET DPM_TRANS_NO=:p_dl_upddpinst_struct_h->h_dpm_trans_no
			WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no
			AND BATCH_NO=:p_dl_upddpinst_struct_h ->h_batch_no ;

	/* Query modified by Siva.ganapathi for ISKB_3824 on 07/05/2010 -- Ended */	
		  
	  }

	if(sqlca.sqlcode)
	{
		printf("\n Failed Updating DPM_TRANS_NO in DL_DPINSTRS ,SQLCODE is |%d|\n ",sqlca.sqlcode);
	}
	IS_ANY_ORA_ERROR

	}
	else
	{
		/* printf("\n DPM TRASACTION NUMBER ALREADY UPDATED for Internal Ref No=|%s|.Current DPM_NO=|%d| \n",p_dl_upddpinst_struct_h->h_internal_ref_no,int_l_dpm_no); ** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

		printf("\n DPM TRASACTION NUMBER ALREADY UPDATED for Internal Ref No=|%s|.Current DPM_NO=|%ld| \n",                                   p_dl_upddpinst_struct_h->h_internal_ref_no,int_l_dpm_no);
	}
		
	APL_GOBACK_SUCCESS							

	RETURN_SUCCESS: 
		printf("\n Sucess Inside DL_Upd_DPInst()\n");		
		return(APL_SUCCESS);

	RETURN_FAILURE:
		printf("\n Error Inside DL_Upd_DPInst()\n");
		return(APL_FAILURE);
}

