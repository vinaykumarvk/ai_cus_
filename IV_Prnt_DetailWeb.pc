













 
#include "stdio_64.h"
#include <string.h>
#include "IV_Control_A.h" 
#include "CO_OthStructdef.h"

EXEC SQL INCLUDE SQLCA.H;
//AIX Warning Removal - COmmented unused variables and removed '&' for l_debug_info_ptr in the file

int main(int argc, char **argv) //AIX - Warnings Removal
{


	struct					sqlca sqlca;

	/* DEBUG_INFO_STRUCT_H 			*l_debug_info_ptr 	= (DEBUG_INFO_STRUCT_H *) NULL; OPT:AIX */
	DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr 	= (DEBUG_INFO_STRUCT_H **) NULL;
	
	INTL_ENV_DATA_STRUCT_H 	*p_intlenv_data_struct_h	= NULL;
	int						 int_retval				= 0;
	FILE 						*fl_techlog			= NULL; 
	FILE 						*fl_userlog			= NULL; 
	FILE 						*chr_finifile			= NULL;
	char 						chr_l_sys_date[APL_DATE_LEN];
	int 						n,i					= 0;
	char 						chr_inifile[PATH_LENGTH];
	char 						chr_uname[APL_USERID_LEN];
	char 						chr_passwd[APL_PASSWD_LEN];
	char						chr_custody_id_b[APL_USERID_LEN];

	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL VAR chr_uname 	IS STRING;
	EXEC SQL VAR chr_passwd 	IS STRING;
	EXEC SQL END DECLARE SECTION;


	
   p_intlenv_data_struct_h   =  (INTL_ENV_DATA_STRUCT_H*)calloc(1,sizeof(INTL_ENV_DATA_STRUCT_H));
   APL_MALLOC_FAIL(p_intlenv_data_struct_h);
   

	
   strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
   strcat(chr_inifile,"intl_sun.cfg");

   if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
      exit(-1);

   APL_FETCH_DB_LOGIN_DETAILS(chr_finifile, chr_custody_id_b, chr_uname, chr_passwd , APL_OUT_FILE , l_debug_info_ptr)
   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;
   IS_ANY_ORA_ERROR
	
   

   if (APL_FAILURE == CO_Rtv_RptFileName("1B",
                                       APL_LOGFILE_DESC,
                                       100,
                                      	argv[5], 
                                       argv,
                                       &fl_userlog,
                                       l_debug_info_ptr) )
   {
      exit(-1);
   }

   if (APL_FAILURE == CO_Rtv_RptFileName("1b",
                                       APL_LOGFILE_DESC,
                                       100,
                                      	argv[5], 
                                       argv,
                                       &fl_techlog,
                                       l_debug_info_ptr) )
   {
      exit(-1);
   }	

	
	EXEC SQL COMMIT;
	IS_ANY_ORA_ERROR

	

   strcpy(p_intlenv_data_struct_h->usr, argv[3]);
   strcpy(p_intlenv_data_struct_h->h_mode,   argv[4]);

   
   if (APL_FAILURE == CO_RtvSysParams(l_debug_info_ptr))
   {
      fprintf(fl_userlog,"Failed To Get System Parameters\n");
      APL_GOBACK_FAIL
   }

	fprintf(fl_userlog,"Calling The Bill Printing Function\n");
	CO_FreeErrLst(l_debug_info_ptr);
		
	if (APL_FAILURE == IV_Proc_PrnAccountDETWEB(argv,
												fl_techlog,
												fl_userlog,
												&p_intlenv_data_struct_h,
												l_debug_info_ptr))
	{
		fprintf(fl_userlog, "Bill Printing Function Returned Failure\n");
		CO_ProcMonitor(fl_techlog,
					APL_NULL_STRING,
					l_debug_info_ptr,
					p_intlenv_data_struct_h);
					/* OPT:AIX &p_intlenv_data_struct_h); */
		CO_FreeErrLst(l_debug_info_ptr);
		EXEC SQL ROLLBACK WORK RELEASE;		
		IS_ANY_ORA_ERROR
		APL_GOBACK_FAIL
	}	
	else
	{
		fprintf(fl_userlog,"Bill Printing Returned Success\n");
		EXEC SQL COMMIT WORK RELEASE;
		IS_ANY_ORA_ERROR
		APL_GOBACK_SUCCESS
	}

	APL_GOBACK_SUCCESS

	
	
	RETURN_SUCCESS:
	CO_Proc_RptClose(fl_techlog,l_debug_info_ptr);
	CO_Proc_RptClose(fl_userlog,l_debug_info_ptr);
	exit(0); 


	RETURN_FAILURE:
	CO_Proc_RptClose(fl_techlog,l_debug_info_ptr);
	CO_Proc_RptClose(fl_userlog,l_debug_info_ptr);
	exit(1); 
}

