


   
   
   
   
   
   
   
   
   
   
   
   




#include <CO_HostStructdef.h>

EXEC SQL INCLUDE sqlca;


 
int DL_Rtv_DLRow(char *p_ora_rowid, char *p_link_val, char *p_field_val, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

	struct sqlca		sqlca;
	char					chr_h_field_val[100];
	short					i_field_val;
	char					chr_l_buf[BUFFER_LEN];

	EXEC SQL VAR chr_h_field_val IS STRING;
	
	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE	:my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered processtion gettradeFn \n",NULL,NULL);
		memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
		sprintf(chr_l_buf,"p_rowid is %s \n",p_ora_rowid);
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,NULL);
		
	}

	memset(chr_h_field_val,APL_NULL_CHAR,sizeof(chr_h_field_val));

		EXEC SQL SELECT *
		INTO :h_trade_struct:i_trade_struct
		FROM DL_DEAL
		WHERE rowid = RTRIM(:p_ora_rowid);


	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,"DL_DEAL",APL_NULL_STRING,APL_NULL_STRING)


	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion DL_Rtv_DLRow \n",NULL,NULL);
		return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion DL_Rtv_DLRow \n",NULL,NULL);
		return(APL_FAILURE);
	}
}
