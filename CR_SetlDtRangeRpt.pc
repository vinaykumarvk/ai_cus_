




#include "CO_Commdef.h"
#include "CO_HostStructdef.h"
EXEC SQL INCLUDE SQLCA.H;
#define PAGELENGTH 50
#define APL_REFNO_LENGTH 17


int CR_Rtv_DLDtPosAcc(char *p_instr_code,char *p_fromdate,char *p_todate,char *chr_p_client,char **argv,FILE *p_logfile,DEBUG_INFO_STRUCT_H  **l_debug_info_ptr);

int CR_Rtv_SetlDtRngeDet(char *p_instr_code,char *p_fromdate,char *p_todate,char *chr_p_client,char p_selcltflg,char p_selinstrflg,FILE *p_repfile,FILE *p_logfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

int CR_Prnt_DLDtPosRptHdr(char *chr_l_fromdate,char *chr_l_todate,char *chr_l_client_a,FILE *l_repfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

//main(int argc,char **argv)
int main(int argc,char **argv)//Changes done for AIX Migration
{
   struct sqlca sqlca;
   DEBUG_INFO_STRUCT_H *l_debug_info_ptr             =  NULL;
   INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;
   FILE  *l_finifile                      =  NULL;
   FILE  *l_logfile                       =  NULL;
   FILE  *l_repfile                       =  NULL;
   char  chr_l_logfile_name[PATH_LENGTH]      =  APL_NULL_STRING;
   int   int_l_retval                         =  0;
   char  chr_uname[APL_USERID_LEN]            =  APL_NULL_STRING;
   char  chr_custody_id_b[APL_USERID_LEN]           =  APL_NULL_STRING;
   char  chr_passwd[APL_PASSWD_LEN]           =  APL_NULL_STRING;
   char  chr_l_logdir[PATH_LENGTH]            =  APL_NULL_STRING;
   char  chr_l_inifile[PATH_LENGTH]           =  APL_NULL_STRING;
	char  chr_l_asofdate[APL_DATE_LEN]   			=  APL_NULL_STRING;
	char  chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]                     =  APL_NULL_STRING;
	char  chr_l_client_a[APL_CLIENT_LENGTH]      =  APL_NULL_STRING;
	char  chr_l_listtrd;
	char  chr_l_noholdings;
	char  chr_l_fromdate[APL_DATE_LEN]				= APL_NULL_STRING;
	char  chr_l_todate[APL_DATE_LEN]					=	APL_NULL_STRING;
	char chr_l_allsel ;
   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;

   EXEC SQL VAR chr_uname IS STRING;
   EXEC SQL VAR chr_custody_id_b IS STRING;
   EXEC SQL VAR chr_passwd IS STRING;
	
	int int_num =0;
	char **temp =NULL;
   sqlca.sqlcode = 0;


    strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
    strcat(chr_l_inifile,"intl_sun.cfg");

   if ( ( l_finifile=fopen(chr_l_inifile,"r") ) == NULL)
   {
      APL_GOBACK_FAIL
   }



	  

   APL_FETCH_DB_LOGIN_DETAILS(l_finifile, chr_custody_id_b, chr_uname, chr_passwd, APL_OUT_FILE, &l_debug_info_ptr)

   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;

   if (sqlca.sqlcode)
   {
      APL_GOBACK_FAIL
   }
   else
   {
      

      if (APL_FAILURE == CO_Rtv_RptFileName( "5r",
                                          APL_LOGFILE_DESC,
                                          100,
                                          argv[5],
                                          argv,
                                          &l_logfile,
                                          &l_debug_info_ptr ) )
      {
         APL_GOBACK_FAIL
      }


      

	 EXEC SQL COMMIT WORK;

      if (sqlca.sqlcode)
      {
         CO_ProcMonitor(l_logfile, "Could not commit after opening chr_log file", NULL, NULL);
         CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
         APL_GOBACK_FAIL
      }

      

      if (APL_FAILURE == CO_RtvSysParams(&l_debug_info_ptr))
      {
         CO_ProcMonitor(l_logfile, "Error In Getting System Parameters", NULL, NULL);
         CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
         APL_GOBACK_FAIL
      }
	
	   

      if (APL_FAILURE == CO_SplitStr( argv[9],
                                       '|',
                                       &int_num,
                                       &temp ))
      {
         CO_ProcMonitor(l_logfile, "Failure from StrSplitFn", NULL, NULL);
         CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
         APL_GOBACK_FAIL
      }

      if (int_num != 5)
      {
         CO_ProcMonitor(l_logfile, "Improper Number of arguments", NULL, NULL);
         CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
         APL_GOBACK_FAIL
      }

		strcpy(chr_l_fromdate,temp[0]);
      strcpy(chr_l_todate, temp[1]);
		chr_l_allsel=temp[2][0];
		if(chr_l_allsel == 'A')
		{
			strcpy(chr_l_client_a,APL_NULL_STRING);
			strcpy(chr_l_instrcode_a,APL_NULL_STRING);
		}
		else if(chr_l_allsel == 'T')
		{
			strcpy(chr_l_client_a,APL_NULL_STRING);
      	strcpy(chr_l_instrcode_a,temp[4]);
		}
		else if(chr_l_allsel == 'S')
		{
			strcpy(chr_l_client_a,temp[3]);
      	strcpy(chr_l_instrcode_a,temp[4]);
		}
		else if(chr_l_allsel == 'W')
		{
			strcpy(chr_l_client_a,temp[3]);
      	strcpy(chr_l_instrcode_a,APL_NULL_STRING);
		}
		else
		{
			strcpy(chr_l_client_a,APL_NULL_STRING);
			strcpy(chr_l_instrcode_a,APL_NULL_STRING);
		}

      

      strcpy(l_intl_env_data_h.usr, argv[3]);
      strcpy(l_intl_env_data_h.h_mode, argv[4]);
      strcpy(l_intl_env_data_h.processtion, argv[5]);
      strcpy(l_intl_env_data_h.auth_req, argv[6]);
      strcpy(l_intl_env_data_h.subprocess, argv[7]);
      strcpy(l_intl_env_data_h.h_process, argv[8]);


      
		
      CO_ProcMonitor(l_logfile, "Calling CM_GetAccounts", NULL, NULL);
      EXEC SQL SELECT PROCESSING_STATUS INTO :chr_g_restart_data:g_restart_data_i
		FROM SYS_BATCHPROC
		WHERE PROCESS_NAME=:argv[0]
		AND PROC_INIT =:argv[1]
		AND STARTDATE=:argv[2]
		AND STATUS ='started'
		FOR UPDATE  OF PROCESSING_STATUS,STATUS;

   if(APL_ZERO_RESULT_SET)
   {
      CO_ProcMonitor(   l_logfile,
                  "No entry in batch_in_proc",
                  NULL,
                  NULL);
      APL_GOBACK_FAIL;
   }

   IS_ANY_ORA_ERROR;

      int_l_retval = CR_Rtv_DLDtPosAcc( chr_l_instrcode_a,
											chr_l_fromdate,
											chr_l_todate,
											chr_l_client_a,
											argv,
											l_logfile,
                                 &l_debug_info_ptr);

      CO_ProcMonitor(l_logfile, "Returned from CM_GetAccounts", NULL, NULL);

      if ( int_l_retval == APL_FAILURE )
      {
 
 CO_ProcMonitor(l_logfile, "CM_GetAccounts returned failure", NULL, NULL);
         CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
			EXEC SQL ROLLBACK WORK RELEASE;
         APL_GOBACK_FAIL

		}
      else
      {
         EXEC SQL UPDATE SYS_BATCHPROC
         SET  status = 'completed'
         WHERE PROCESS_NAME=:argv[0]
         AND   PROC_INIT=:argv[1]
         AND   STARTDATE=:argv[2]
         AND   STATUS='started';

			EXEC SQL COMMIT WORK RELEASE;
         CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
         APL_GOBACK_SUCCESS
      }
   }
	
	fclose (l_finifile);

   RETURN_SUCCESS:exit(0);

   RETURN_FAILURE : exit(-1);

}

int CR_Rtv_DLDtPosAcc(char *p_instr_code,char *p_fromdate,char *p_todate,char *chr_p_client,char **argv,FILE *p_logfile,DEBUG_INFO_STRUCT_H  **l_debug_info_ptr)
{

char chr_l_h_client_a[APL_CLIENT_LENGTH]	=APL_NULL_STRING;
char chr_l_h_instrcode_A[9] = APL_NULL_STRING;
char chr_l_sysdate_b[APL_DATE_LEN] = APL_NULL_STRING;
char chr_p_subclient[APL_CLIENT_LENGTH] = APL_NULL_STRING;
short i_subaccount = 0;
int int_l_retval =0;
short i_instr_code = 0;
short i_dl_client =0;
FILE *l_repfile = NULL;
EXEC SQL VAR chr_l_h_client_a IS STRING;
EXEC SQL VAR chr_p_subclient IS STRING;

	

	if(strcmp(p_fromdate,APL_NULL_STRING) == 0)
	{
		APL_DATA_MISSING("DATE MISSING",APL_NULL_STRING,APL_NULL_STRING)
	}
	if(strcmp(p_todate,APL_NULL_STRING) == 0)
	{
		APL_DATA_MISSING("DATE MISSING",APL_NULL_STRING,APL_NULL_STRING)
	}

	int_l_retval=CO_ProcMonitor(p_logfile,"Entered CR_Rtv_DLDtPosAcc Function",NULL,NULL);
	//if(int_l_retval =APL_FAILURE)
	if(int_l_retval == APL_FAILURE) // AIX - Warnings
		APL_GOBACK_FAIL



	if(APL_FAILURE == CO_RtvSysDt(chr_l_sysdate_b,l_debug_info_ptr))
	{
		printf("Error in getting date");
		APL_GOBACK_FAIL
	}
	if(APL_FAILURE ==CO_Rtv_RptFileName("SD",
											  "Settle Date Position Report",
											  100,
											  argv[5],
											  argv,
											  &l_repfile,
											  l_debug_info_ptr))

	{
		APL_GOBACK_FAIL
	}
	printf("going to get date");
	printf("After get date");

	
	if((strcmp(chr_p_client,APL_NULL_STRING) == 0) &&(strcmp(p_instr_code,APL_NULL_STRING) == 0))
	{
			if(APL_FAILURE == CR_Rtv_SetlDtRngeDet(APL_NULL_STRING,p_fromdate,p_todate,chr_l_h_client_a,'A','A',l_repfile,p_logfile,l_debug_info_ptr))
			{
			APL_GOBACK_FAIL
			}
	}

	

	if((strcmp(chr_p_client,APL_NULL_STRING)) &&(!strcmp(p_instr_code,APL_NULL_STRING)))
	{
			 EXEC SQL DECLARE subaccounts CURSOR FOR 
          SELECT CLN_CODE FROM MT_CLIENT WHERE CLN_MASTER=:chr_p_client;

			 IS_ANY_ORA_ERROR;

			 EXEC SQL OPEN subaccounts;

			 for(;;)
			 {
				EXEC SQL  FETCH subaccounts INTO :chr_p_subclient:i_subaccount;

				if(APL_ZERO_RESULT_SET)
				{
					break;
				}
			  	if(APL_FAILURE == CR_Rtv_SetlDtRngeDet(APL_NULL_STRING,p_fromdate,p_todate,chr_p_subclient,'N','A',l_repfile,p_logfile,l_debug_info_ptr))
			 	{
					APL_GOBACK_FAIL
			   }
			}	

		 IS_ANY_ORA_ERROR
}
	
	if((!strcmp(chr_p_client,APL_NULL_STRING)) &&(strcmp(p_instr_code,APL_NULL_STRING)))
	{
		if(APL_FAILURE == CR_Rtv_SetlDtRngeDet(p_instr_code,p_fromdate,p_todate,APL_NULL_STRING,'A','N',l_repfile,p_logfile,l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}
		
	}

	
	if(strcmp(chr_p_client,APL_NULL_STRING) &&(strcmp(p_instr_code,APL_NULL_STRING)))
	{
			 EXEC SQL DECLARE subaccounts2 CURSOR FOR 
          SELECT CLN_CODE FROM MT_CLIENT WHERE CLN_MASTER=:chr_p_client;

			 IS_ANY_ORA_ERROR;

			 EXEC SQL OPEN subaccounts2;

			 for(;;)
			 {
				EXEC SQL  FETCH subaccounts2 INTO :chr_p_subclient:i_subaccount;

				if(APL_ZERO_RESULT_SET)
				{
					break;
				}
			if(APL_FAILURE == CR_Rtv_SetlDtRngeDet(p_instr_code,p_fromdate,p_todate,chr_p_subclient,'N','N',l_repfile,p_logfile,l_debug_info_ptr))
			{
			APL_GOBACK_FAIL
			}
	    }


		IS_ANY_ORA_ERROR
	
	}		

APL_GOBACK_SUCCESS // AIX - Warnings

RETURN_SUCCESS:
	CO_Proc_RptClose(l_repfile,l_debug_info_ptr);
	return(APL_SUCCESS);
RETURN_FAILURE:
	CO_ProcMonitor(p_logfile,"Got Errors:",l_debug_info_ptr,NULL);
	CO_Proc_RptClose(l_repfile,l_debug_info_ptr);
	return(APL_FAILURE);

}

int CR_Rtv_SetlDtRngeDet(char *p_instr_code,char *p_fromdate,char *p_todate,char *chr_p_client,char p_selcltflg,char p_selinstrflg,FILE *p_repfile,FILE *p_logfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{



char chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN] =  APL_NULL_STRING;
char chr_l_refno_a[APL_REFNO_LENGTH]	=	APL_NULL_STRING;
char chr_l_locrefno[17]				=	APL_NULL_STRING;
char chr_l_trcode_a[2]					=	APL_NULL_STRING;
char chr_l_trdt_a[APL_DATE_LEN]		=	APL_NULL_STRING;
char chr_l_settledt_a[APL_DATE_LEN]	=	APL_NULL_STRING;
char chr_l_instr_dt[APL_DATE_LEN]		=	APL_NULL_STRING;
char int_l_domcpac[DOMCPCLIENT_LEN]	=	APL_NULL_STRING;
char chr_l_str_famount[20];
char chr_f_str_famount[30];
char chr_l_str_pendtotal[26]=APL_NULL_STRING;
char chr_l_str_failedtotal[26]=APL_NULL_STRING;
char chr_l_client_a[APL_CLIENT_LENGTH] =APL_NULL_STRING;
char chr_l_stramt[30]=APL_NULL_STRING;
char chr_l_strqty[30]=APL_NULL_STRING;
char chr_l_strrecqty[30]=APL_NULL_STRING;
char chr_l_strdelqty[30]=APL_NULL_STRING;
char chr_l_str_trcode[5]=APL_NULL_STRING;
char chr_l_strbalqty[30]= APL_NULL_STRING;
char chr_l_totstrrecqty[30]= APL_NULL_STRING;
char chr_l_totstrdelqty[30] = APL_NULL_STRING;
char chr_l_totstramt[30]= APL_NULL_STRING;
char chr_l_closstrbalqty[30] = APL_NULL_STRING;
char chr_l_prev_client[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char chr_l_prev_instrcode[APL_INSTRUMENTCODE_LEN]=APL_NULL_STRING;
char chr_sysdate[APL_DATE_LEN]=APL_NULL_STRING;
int int_l_count =0;
int int_pageno =1;
int int_l_retval =0;
short i_indentity_no =0;
short i_dealcd=0;
short i_dlt =0;
short i_setldt = 0;
short i_instrdate =0;
short i_domcpclt_cd = 0;
short i_qty = 0;
short i_amt = 0;
short i_locindentity_no = 0;
short i_instr_code =0;
short i_dl_client=0;
double l_quantity =0.0;
double l_dl_deal_amt_struct_h =0.0;
double l_openbalance = 0.0;
double l_balquantity = 0.0;
double l_temp_quantity = 0.0;
double l_quantity_received_a = 0.0;
double l_quantity_del = 0.0;
double l_h_bal = 0.0;
char chr_l_selfg;
double l_abs_balquantity = 0.0;
int int_counter = 0;
double l_tot_recquantity = 0;
double l_tot_delquantity = 0;
double l_tot_amount = 0;
int int_new_acc = 0;
static int int_l_first = 0;

EXEC SQL VAR chr_l_refno_a IS STRING;
EXEC SQL VAR int_l_domcpac IS STRING;
EXEC SQL VAR chr_l_trcode_a IS STRING;
EXEC SQL VAR chr_sysdate  IS STRING;

	EXEC SQL SELECT SYS_DATE INTO :chr_sysdate FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR;
	


	EXEC SQL DECLARE details CURSOR FOR
	select client,instr_code,IDENTIY_NO,lcl_identno,deal_cd,deal_date,setl_date,INSTRUMENT_DT,AMOUNT,QTY
	from DL_HISDEAL_VEW where
	    decode(:p_selcltflg,'A','A',client)=decode(:p_selcltflg,'A','A',:chr_p_client)
	and decode(:p_selinstrflg,'A','A',instr_code)=decode(:p_selinstrflg,'A','A',:p_instr_code)
	and INSTRUMENT_DT>=:p_fromdate and INSTRUMENT_DT <=:p_todate
	order by client,instr_code,lcl_identno,deal_date,setl_date,INSTRUMENT_DT;

   EXEC SQL OPEN details;

	IS_ANY_ORA_ERROR
	int_counter = 0;
   for (;;)
	{
		EXEC SQL FETCH details INTO
		:chr_l_client_a:i_dl_client,
		:chr_l_instrcode_a:i_instr_code,
		:chr_l_refno_a:i_indentity_no,
		:chr_l_locrefno:i_locindentity_no,
		:chr_l_trcode_a:i_dealcd,
		:chr_l_trdt_a:i_dlt,
		:chr_l_settledt_a:i_setldt,
		:chr_l_instr_dt:i_instrdate,
	   :l_dl_deal_amt_struct_h:i_amt,
		:l_quantity:i_qty;

		IS_ANY_ORA_ERROR
      
		if ((APL_ZERO_RESULT_SET) && (int_counter == 0))
		{
			break;
      }
		else if(((APL_ZERO_RESULT_SET) && (int_counter == 1)) || ((strcmp(chr_l_prev_client,chr_l_client_a)) && (strcmp(chr_l_prev_client,APL_NULL_STRING))))
		{
     if(APL_FAILURE == CO_ToStr(l_tot_amount,23,2,chr_l_totstramt))
      {
         APL_GOBACK_FAIL
      }
      if(l_tot_recquantity >0)
      {
         if(APL_FAILURE == CO_ToStr(l_tot_recquantity,23,0,chr_l_totstrrecqty))
         {
            APL_GOBACK_FAIL
         }
      }
      else
      sprintf(chr_l_totstrrecqty,"%22s"," ");
      if(l_tot_delquantity > 0)
      {
         if(APL_FAILURE == CO_ToStr(l_tot_delquantity,23,0,chr_l_totstrdelqty))

         {
            APL_GOBACK_FAIL
         }
      }
      else
      sprintf(chr_l_totstrdelqty,"%22s"," ");

      if(APL_FAILURE == CO_ToStr(l_abs_balquantity,23,0,chr_l_closstrbalqty))
      {
         APL_GOBACK_FAIL
      }
   fprintf(p_repfile,"\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
fprintf(p_repfile,"\nTotals%64s  %s %s %s %s"," ",chr_l_totstramt,chr_l_totstrrecqty,chr_l_totstrdelqty,chr_l_closstrbalqty);
   fprintf(p_repfile,"\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
	  	   if((APL_ZERO_RESULT_SET) && (int_counter == 1))
			{
				break;
		   }


		}
		int_counter  = 1;
		int_new_acc = 0;
		if(strcmp(chr_l_prev_client,chr_l_client_a))
		{
			printf("%s",chr_l_client_a);
			CO_ProcMonitor(p_logfile,"Printing Main Header",NULL,NULL);
				if(int_l_first != 0)
				fprintf(p_repfile,"\f");
				int_l_first = 1;
			if(APL_FAILURE == CR_Prnt_DLDtPosRptHdr(p_fromdate,p_todate,chr_l_client_a,p_repfile,l_debug_info_ptr))
			{
				CO_ProcMonitor(p_logfile,"Failed in prnt header",NULL,NULL);
				APL_GOBACK_FAIL
			}	 
			int_new_acc =1;
		}
		strcpy(chr_l_prev_client,chr_l_client_a);
			

		if((strcmp(chr_l_prev_instrcode,chr_l_instrcode_a)) || int_new_acc == 1)
		{
		if(int_new_acc != 1)
		{
		if(strcmp(chr_l_prev_instrcode,APL_NULL_STRING))
		{
      if(APL_FAILURE == CO_ToStr(l_tot_amount,23,2,chr_l_totstramt))
      {
         APL_GOBACK_FAIL
      }
      if(l_tot_recquantity >0)
      {
         if(APL_FAILURE == CO_ToStr(l_tot_recquantity,23,0,chr_l_totstrrecqty))
         {
            APL_GOBACK_FAIL
         }
      }
      else
      sprintf(chr_l_totstrrecqty,"%22s"," ");
      if(l_tot_delquantity > 0)
      {
         if(APL_FAILURE == CO_ToStr(l_tot_delquantity,23,0,chr_l_totstrdelqty))

         {
            APL_GOBACK_FAIL
         }
      }
      else
      sprintf(chr_l_totstrdelqty,"%22s"," ");

		
      if(APL_FAILURE == CO_ToStr(l_balquantity,23,0,chr_l_closstrbalqty))
      {
         APL_GOBACK_FAIL
      }
	fprintf(p_repfile,"\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
fprintf(p_repfile,"\nTotals%64s  %s %s %s %s"," ",chr_l_totstramt,chr_l_totstrrecqty,chr_l_totstrdelqty,chr_l_closstrbalqty);
			
	fprintf(p_repfile,"\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
			}
			}
			printf("%s",chr_l_instrcode_a);
			CO_ProcMonitor(p_logfile,"Printing Instrode Header",NULL,NULL);
   		l_balquantity = 0;
			l_tot_delquantity = 0;
			l_tot_recquantity = 0;
			l_tot_amount = 0;
	
	fprintf(p_repfile,"\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
	fprintf(p_repfile,"                  Local Ref.     Txn   Trade       Contractu Actual                      Amount               Credits                   Debits                Balance\n"); 
	fprintf(p_repfile,"Reference         Number         Code  Date        Date      Settl Dt  ");
	fprintf(p_repfile,"\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");

 	fprintf(p_repfile,"Instrurity :%s",chr_l_instrcode_a);

	
	EXEC SQL SELECT nvl(sum(safekeep_pos),0) into :l_openbalance FROM DL_HISSAFEK WHERE 
	client=rtrim(:chr_l_client_a) and instr_code=rtrim(:chr_l_instrcode_a)  and 
   (POSIT_DATE = (select MAX(POSIT_DATE) from DL_HISSAFEK where POSIT_DATE < :p_fromdate)) ;
	 
	IS_ANY_ORA_ERROR
		fprintf(p_repfile,"\nOpening Balance:%.lf\n",l_openbalance);
		l_balquantity = l_openbalance ;
	if (APL_ZERO_RESULT_SET)
	{
		l_openbalance =0;
	} 
	}
	strcpy(chr_l_prev_instrcode,chr_l_instrcode_a);

		if(chr_l_trcode_a[0] == '2')
			strcpy(chr_l_str_trcode,"RF ");
		else if(chr_l_trcode_a[0] == '4')
			strcpy(chr_l_str_trcode,"RVP");
		else if(chr_l_trcode_a[0]=='1')
			strcpy(chr_l_str_trcode,"DF ");
		else if(chr_l_trcode_a[0]=='3')
			strcpy(chr_l_str_trcode,"DVP");
		else if(chr_l_trcode_a[0] == '5')
			strcpy(chr_l_str_trcode,"CD ");
		else if(chr_l_trcode_a[0] == '6')
			strcpy(chr_l_str_trcode,"CR ");
		else if(chr_l_trcode_a[0]=='7')
			strcpy(chr_l_str_trcode,"DCD");
		else if(chr_l_trcode_a[0]=='8')
			strcpy(chr_l_str_trcode,"RCR");


		if(chr_l_trcode_a[0] == '2' || chr_l_trcode_a[0] == '4' || chr_l_trcode_a[0] == '6' || chr_l_trcode_a[0] == '8')
		{
			l_temp_quantity = l_quantity;
			l_quantity_received_a = l_quantity;
			l_quantity_del = 0;
			l_tot_recquantity = l_tot_recquantity + l_quantity;
		}
		else
		{
			l_temp_quantity = -1 *l_quantity;
			l_quantity_del = l_quantity;
			l_quantity_received_a = 0;
			l_tot_delquantity= l_tot_delquantity + l_quantity ;
		}
		
		l_tot_amount = l_tot_amount +l_dl_deal_amt_struct_h;

		if(APL_FAILURE == CO_ToStr(l_dl_deal_amt_struct_h,23,2,chr_l_stramt))
		{
			APL_GOBACK_FAIL
		}
		if(l_quantity_received_a >0)
		{
			if(APL_FAILURE == CO_ToStr(l_quantity_received_a,23,0,chr_l_strrecqty))
			{
				APL_GOBACK_FAIL
			}
		}
		else
		sprintf(chr_l_strrecqty,"%22s"," ");
		if(l_quantity_del > 0)
		{
			if(APL_FAILURE == CO_ToStr(l_quantity_del,23,0,chr_l_strdelqty))
			{
				APL_GOBACK_FAIL
			}
		}
		else
		sprintf(chr_l_strdelqty,"%22s"," ");


		l_balquantity= l_balquantity+l_temp_quantity;

		l_abs_balquantity = abs(l_balquantity);
		if(APL_FAILURE == CO_ToStr(l_abs_balquantity,23,0,chr_l_strbalqty))
		{
			APL_GOBACK_FAIL
		}

	   fprintf(p_repfile,"\n%-16s %16s %3s  %.10s %.10s %.10s %s %s %s %s",chr_l_refno_a,chr_l_locrefno,
					chr_l_str_trcode,chr_l_trdt_a,chr_l_settledt_a,chr_l_instr_dt,chr_l_stramt,chr_l_strrecqty,chr_l_strdelqty,chr_l_strbalqty);



	}

	IS_ANY_ORA_ERROR
   
APL_GOBACK_SUCCESS // AIX - Warnings

RETURN_SUCCESS:
	CO_ProcMonitor(p_logfile,"Exiting successfully from CM_PendFailTrds",NULL,NULL);
	return(APL_SUCCESS);

RETURN_FAILURE:
	CO_ProcMonitor(p_logfile,"Exiting Unsuccessfully from CM_PendFailTrds",l_debug_info_ptr,NULL);
	return(APL_FAILURE);
}
	

int CR_Prnt_DLDtPosRptHdr(char *chr_l_fromdate,char *chr_l_todate,char *chr_l_client_a,FILE *l_repfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) //Changes done for AIX Migration
{
short i_mstclt =0;
short i_clnt_clr_name =0;
short i_mstcname=0;
short i_instr_name=0;
char chr_l_sysdate_b[APL_DATE_LEN] = APL_NULL_STRING;
char chr_l_mstacc_a[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char chr_l_cname[CNAME_LEN_A]=APL_NULL_STRING;
char chr_l_mstcname[CNAME_LEN_A]=APL_NULL_STRING;
char chr_l_instrdesc[131]=APL_NULL_STRING;

EXEC SQL VAR chr_l_client_a IS  STRING;

if(APL_FAILURE == CO_RtvSysDt(chr_l_sysdate_b,l_debug_info_ptr))
{
	printf("No Date");
	APL_GOBACK_FAIL
}
printf("inside header");
printf("\naccount is l%sl\n",chr_l_client_a);
EXEC SQL SELECT MT_CLIENT.CLN_MASTER,MT_CLIENT.CLN_NAME,CACCOUNT1.CLN_NAME
                  INTO :chr_l_mstacc_a:i_mstclt,
                       :chr_l_cname:i_clnt_clr_name,
                       :chr_l_mstcname:i_mstcname
                  FROM MT_CLIENT MT_CLIENT,MT_CLIENT CACCOUNT1
                  WHERE MT_CLIENT.CLN_CODE=RTRIM(:chr_l_client_a) AND
                  MT_CLIENT.CLN_MASTER=CACCOUNT1.CLN_CODE;

if(APL_ZERO_RESULT_SET)
{
	printf("\nNO DATA\n");
	APL_GOBACK_FAIL
}

fprintf(l_repfile,"\n%60sSettlement Date Range Report\n", " ");
fprintf(l_repfile,"\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
fprintf(l_repfile,"%.11s",chr_l_sysdate_b);
fprintf(l_repfile,"%55s%s", " ",g_mt_commonsys_params_struct_h.ca_identname);

fprintf(l_repfile,"\n\n");
fprintf(l_repfile,"\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
fprintf(l_repfile,"\n\n\n");
fprintf(l_repfile,"Master Account: %s   %s",chr_l_mstacc_a,chr_l_mstcname);
fprintf(l_repfile,"\n\nSub Account    :%s       %s",chr_l_client_a,chr_l_cname);
fprintf(l_repfile,"\n\nMovements From:%.10s   Movements To:%.10s",chr_l_fromdate,chr_l_todate); 
fprintf(l_repfile,"\n");
APL_GOBACK_SUCCESS
RETURN_SUCCESS:
return(APL_SUCCESS);
RETURN_FAILURE:
return(APL_FAILURE);
}
