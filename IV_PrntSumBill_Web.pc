


#include "IV_Control_A.h"
EXEC SQL INCLUDE SQLCA.H;
//AIX Warning Removal 
int IV_PrntSummary(char *,char *,SYS_IVCONTROLPARAM_STRUCT,IV_CLIENTSETUP_STRUCT,
			             char ,double *,double *,double *,double *,double *,double *,double *,double *,
			             double *,double *,DEBUG_INFO_STRUCT_H **);

int IV_PrntSumBill_Web(	 FILE *bill,
			 FILE *fl_techlog,	
			 FILE *fl_userlog,	
			 char *chr_p_billdt,
			 char *chr_p_client,
			 SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
			 IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,			
			 char p_mastsub,
			 double *p_tot_trans,
			 double *p_tot_cust,
			 double *p_tot_ca,
			 double *p_tot_oth,
			 double *p_tot_comm,
			 double *p_tot_adj,
			 double *p_tot_adj_comm,
			 double *p_tot_tax,
			 double *p_tot_educess,
			 double *p_tot_depo,
			 double *p_tot_outstanding,
			 double *p_final_total,
			 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	double p_tottran	=0.0;
	double p_totcust	=0.0;
	double p_totca		=0.0;
	double p_tototh		=0.0;
	double p_totcomm	=0.0;
	double p_totadj		=0.0;
	double p_totadjcomm	=0.0;
	double p_totdepo	=0.0;
	double p_totoutstanding=0.0;
	double p_totfinal	=0.0;
	double p_totovrundr =0.0;
	int int_retval=0;
	char chr_l_buf[BUFFER_LEN];
	double p_tot_portf =0;

	double g_prov_cust_chrg = 0.0;
	int l_actual_days = 0;
	int l_billing_days = 0;

	double l_tot_trans		= 0.0;
	double l_tot_cust		= 0.0;
	double l_tot_ca			= 0.0;
	double l_tot_oth		= 0.0;
	double l_tot_comm		= 0.0;
	double l_tot_adj		= 0.0;
	double l_tot_adj_comm	= 0.0;
	double l_tot_tax		= 0.0;
	double l_tot_educess	= 0.0;
	double l_tot_depo		= 0.0;
	double l_tot_outstanding = 0.0;
	double l_final_total	= 0.0;


	Alert("Calling IV_PrntSummary for Client [%s] n Billing date [%s] ",chr_p_client, chr_p_billdt);
	fflush(stdout);

	fprintf(fl_userlog, "Calling IV_PrntSummary for Client [%s] n Billing date [%s] \n", chr_p_client, chr_p_billdt);


	if(APL_FAILURE == IV_PrntSummary(chr_p_client,chr_p_billdt,
					l_sys_ivcntl_param_struct,
					l_iv_clt_setup_struct,
					p_mastsub,
					&p_tottran,
					&p_totcust,
					&p_totca,
					&p_tototh,
					&p_totovrundr,
					&p_totcomm,
					&p_totadj,
					&p_totadjcomm,					
					&p_totdepo,
					&p_totfinal,
					l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Could not Calculate IV_ProvSummary for client: %s and dateof_billing :%s\n", chr_p_client, chr_p_billdt);
		fprintf(fl_techlog,"Could not Calculate IV_ProvSummary for client: %s and dateof_billing :%s\n", chr_p_client, chr_p_billdt);
		APL_GOBACK_FAIL
	}
	else
	{
		fprintf(fl_userlog, "Success from IV_PrntSummary for Client |%s| n Billing date |%s|\n", chr_p_client, chr_p_billdt);
	}

	

	fprintf(fl_userlog, "Calling IV_PrntSumFtr_Web for Client |%s| n Billing date |%s|\n", chr_p_client, chr_p_billdt);
	if (APL_FAILURE == IV_PrntSumFtr_Web(bill,fl_userlog,chr_p_billdt,chr_p_client,
									l_sys_ivcntl_param_struct,l_iv_clt_setup_struct,
									p_mastsub,
									p_tottran,p_totcust,
									p_totca,p_tototh,p_totovrundr,
									p_totcomm,p_totdepo,
									&l_tot_trans,&l_tot_cust,
									&l_tot_ca,&l_tot_oth,
									&l_tot_comm,&l_tot_adj,
									&l_tot_adj_comm,&l_tot_tax,
									&l_tot_educess,&l_tot_depo,
									&l_tot_outstanding,&l_final_total,
									l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Could not print footer for client: %s and dateof_billing :%s\n",chr_p_client,chr_p_billdt);
		fprintf(fl_techlog,"Could not print footer for Client |%s| n Billing date |%s|\n", chr_p_client, chr_p_billdt);
		APL_GOBACK_FAIL
	}
	else
	{
		fprintf(fl_userlog, "Success from IV_PrntSumFtr_Web for Client [%s] n Billing date [%s] \n", chr_p_client, chr_p_billdt);
	}

	*p_tot_trans = l_tot_trans;
	*p_tot_cust = l_tot_cust;
	*p_tot_ca = l_tot_ca;
	*p_tot_oth = l_tot_oth;
	*p_tot_comm = l_tot_comm;
	*p_tot_adj = l_tot_adj;
	*p_tot_adj_comm = l_tot_adj_comm;
	*p_tot_tax = l_tot_tax;
	*p_tot_educess = l_tot_educess;
	*p_tot_depo = l_tot_depo;
	*p_tot_outstanding = l_tot_outstanding;
	*p_final_total = l_final_total;
	 
	fflush(bill);	

APL_GOBACK_SUCCESS // AIX - Warnings

	RETURN_SUCCESS:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSumBill_Web Successfully\n",NULL,NULL);
                return APL_SUCCESS;

        RETURN_FAILURE:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSumBill_Web UnSuccessfully\n",NULL,NULL);
		return APL_FAILURE;
}

int IV_PrntSummary(	 char *chr_p_client,
			 char *chr_p_billdt,
			 SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
			 IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,
			 char p_mastsub,
			 double *p_tottran,
			 double *p_totcust,
			 double *p_totca,
			 double *p_tototh,
			 double *p_ovr_undr,
			 double *p_totcomm,
			 double *p_totadj,
			 double *p_totadjcomm,
			 double *p_totdepo,
			 double *p_totfinal,
			 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	printf("Inside IV_PrntSummary for client :|%s|\n",chr_p_client);
	fflush(stdout);

	char l_tran_cd[200] = APL_NULL_STRING;
	char l_cust_cd[200] = APL_NULL_STRING;
	char l_ca_cd[200] = APL_NULL_STRING;
	char l_oth_cd[200] = APL_NULL_STRING;
	char l_depo_cd[200] = APL_NULL_STRING;


	char l_client[20] = APL_NULL_STRING;
	char l_billdate[20] = APL_NULL_STRING;

	char l_nav_ind[2] = APL_NULL_STRING;

	char l_mastsub = APL_NULL_CHAR;

	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR l_client IS STRING;
	EXEC SQL VAR l_billdate IS STRING;

	EXEC SQL END DECLARE SECTION;

	double l_tot_tran_fee = 0.0;
	double l_tot_cust_fee = 0.0;
	double l_tot_ca_fee = 0.0;
	double l_tot_oth_fee = 0.0;
	double l_tot_depo_fee = 0.0;

	double l_custfee = CUSTODYFEE;
	double l_sebiauc = SEBI_AUC;//Added by chitrlekha for SEBI AUC charges -ISKB_1901 on 11 may 2016
	double l_ptcfee = PTC_FEE;

	double l_amenddealcode = AMEND_FEE_IND;
	double l_repairfee = REPAIRFEE;
	double l_deldealcode = DELV_TXN_FEE;
	double l_dealcode = TXNFEE;
	double l_latedealcode = LATETXNFEE;
	double l_booktrfr_code = IV_BOOKTRF_FEE;
	double l_trnarnfee = TURNAROUNDTXNFEE;
	double l_settalgefee = SETTALGEFEE;
	double l_bogmsgfee = BOG_MSG_FEE;
	double l_baskettxn = BUCK_TXN_FEE; 
	double l_mutualfund = MUTUALFUND_TXN_FEE; 

	double l_cashfee = CASH_ITEMS ;

	double l_cdfee = CASH_DIV_FEE;
	double l_bifee = IV_BONDINT_FEE ;
	double l_freecacode = FREECAFEE;
	double l_vpcacode = VPCAFEE;
	double l_brfee = BOND_RDM_FEE; 
	double l_pfee = PUT_FEE; 
	double l_cfee = CALL_FEE; 
	double l_ppfee = PART_PUT_FEE; 
	double l_pcfee = PART_CALL_FEE; 
	double l_pbrfee = PART_BOND_RDM_FEE; 
	double l_pptcfee = PART_PTC_FEE; 
	double l_putcallfee= PUT_CALL_FEE; //shailesh 23-08-2007
	double l_mandcafee = MANDATORY_CA_FEE;//shailesh 12-02-2008
	double l_volucafee = VOLUNTARY_CA_FEE;//shailesh 12-02-2008


	double l_depofee = DEPOFEE ;

	double l_spl_bill = SPECIALBILLING;  
	double l_under_bill = UNDERBILLING;
	double l_over_bill = OVERBILLING;
	long l_misc_fee = MANUALDEALFEE;  //shailesh 26-12-2007 ISKB_430_11C
	double l_ovr_udr_fee = 0; //shailesh 26-12-2007 ISKB_430_11C
	double l_annual_fee = ANNUALMNTFEE;	
	double l_annual_min_fee = ANNUALMINFEE;//Added by Anjaneyulu for ISKB_1737
	double l_perline_sec = PERLINE_SECURITY;//Added by Anjaneyulu for ISKB_1737


	memset(l_client,APL_NULL_CHAR,sizeof(l_client));
	strcpy(l_client,chr_p_client);
	memset(l_billdate,APL_NULL_CHAR,sizeof(l_billdate));
	strcpy(l_billdate,chr_p_billdt);
	l_mastsub = p_mastsub;

	Alert("l_client :|%s|\n",l_client);
	fflush(stdout);
	Alert("l_billdate :|%s|\n",l_billdate);
	fflush(stdout);
	Alert("l_mastsub :|%c|\n",l_mastsub);
	fflush(stdout);

	/*********** Custody Charges *****************************/

	/*********** NAV Check Changes By : Vinay Kalaskar ***********************************/

	EXEC SQL SELECT NAV_IND INTO :l_nav_ind FROM IV_CLIENTSETUP WHERE CLIENT=:l_client;

	Alert("After NAV Check -- ORA Error :|%d|\n",sqlca.sqlcode);
	fflush(stdout);

	Alert("l_nav_ind :|%s|\n",l_nav_ind);
	fflush(stdout);

	/***********************************************************************************/
	/************** Bageshri 17-08-2007 Fix -- START(retro on 230807)
			**** commented by Bageshri as PTC charges are included in custody charges ****

	if(!strcmp(l_nav_ind,"Y"))
	{
		EXEC SQL SELECT SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ)
			INTO :l_tot_cust_fee
			FROM IV_SERVICE_CHRG 
			WHERE CLIENT = :l_client
			AND DATEOF_BILLING = :l_billdate
			AND CONS_FLAG = :l_mastsub
			AND SERVICE_CD IN (:l_ptcfee);

		printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);
	}
	else
	{
		EXEC SQL SELECT NVL(SUM(CUST_CHRG),0) 
			INTO :l_tot_cust_fee
			FROM IV_CUST_PRINT 
			WHERE CLIENT = :l_client AND BILLING_DT = :l_billdate
			AND SERICE_CD <> 11 ;
}
	***********************************************************************************/


	/*********** Transaction Charges *****************************/

	EXEC SQL SELECT  NVL(SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ),0) 
		INTO :l_tot_tran_fee
		FROM IV_SERVICE_CHRG 
		WHERE CLIENT = :l_client
		AND DATEOF_BILLING = :l_billdate
		AND CONS_FLAG = :l_mastsub
			AND SERVICE_CD IN (:l_amenddealcode,:l_repairfee,:l_deldealcode,
				 :l_dealcode,:l_latedealcode,:l_booktrfr_code,
				 :l_trnarnfee,:l_settalgefee,:l_bogmsgfee,
				 :l_baskettxn,:l_mutualfund);
	


	printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);
	fflush(stdout);

	
	printf("l_tot_tran_fee :|%lf|\n",l_tot_tran_fee);
	fflush(stdout);

		EXEC SQL 
			SELECT NVL(SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ),0)
			INTO :l_tot_cust_fee 
			FROM IV_SERVICE_CHRG 
			WHERE CLIENT = :l_client 
			AND DATEOF_BILLING = :l_billdate
			AND CONS_FLAG = :l_mastsub
		AND SERVICE_CD IN (:l_custfee,:l_sebiauc);//Added by chitrlekha for SEBI AUC charges -ISKB_1901 on 11 may 2016
		
		printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);
		

	/************** Bageshri 17-08-2007 Fix -- END(retro on 230807) **************/

	printf("l_tot_cust_fee :|%lf|\n",l_tot_cust_fee);
	fflush(stdout);


	/*********** CA Charges *****************************/

	EXEC SQL 
		SELECT  NVL(SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ),0) 
		INTO :l_tot_ca_fee
		FROM IV_SERVICE_CHRG 
		WHERE CLIENT = :l_client
		AND DATEOF_BILLING = :l_billdate
		AND CONS_FLAG = :l_mastsub
		AND SERVICE_CD IN 
		(:l_mandcafee,:l_volucafee);//shailesh 110208
		//(:l_cdfee,:l_bifee,:l_freecacode,:l_vpcacode,:l_brfee,
		//l_putcallfee,:l_pbrfee,:l_pptcfee);
	printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);
	fflush(stdout);

	printf("l_tot_ca_fee :|%lf|\n",l_tot_ca_fee);
	fflush(stdout);


	/*********** Other Services Charges *****************************/
	/*shailesh 26-12-2007  ISKB_430_11C ,excluding overbill and underbill,so that these 2 service amounts can be 
	considered for taxable amt*/

	EXEC SQL SELECT NVL(SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ),0)
		INTO :l_tot_oth_fee
		FROM IV_SERVICE_CHRG 
		WHERE CLIENT = :l_client
		AND DATEOF_BILLING = :l_billdate
		AND CONS_FLAG = :l_mastsub
		AND (SERVICE_CD IN 
		(SELECT DISTINCT SERVICE_CD FROM IV_SERV_OTH WHERE CLIENT=:l_client AND SERVICE_STAT='A'
		 AND   SERVICE_CD  NOT IN (:l_custfee)
		 AND   B_UPTO_DATE = :l_billdate	
		 AND CLIENT=:l_client)
		OR SERVICE_CD = :l_annual_fee OR SERVICE_CD = :l_annual_min_fee OR SERVICE_CD = :l_perline_sec);//Added by Anjaneyulu for Annual min.fee, Perline of Security for ISKB_1737

  //shailesh 26-12-2007 ISKB_430_11C
	EXEC SQL SELECT NVL(SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ),0)
		INTO :l_ovr_udr_fee
		FROM IV_SERVICE_CHRG 
		WHERE CLIENT = :l_client
		AND DATEOF_BILLING = :l_billdate
		AND CONS_FLAG = :l_mastsub
		AND SERVICE_CD IN 
		(:l_over_bill,:l_under_bill);


	printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);
	fflush(stdout);

	printf("l_tot_oth_fee :|%lf|\n",l_tot_oth_fee);
	fflush(stdout);
	printf("l_ovr_udr_fee :|%lf|\n",l_ovr_udr_fee);
	fflush(stdout);


	/*********** Depository Charges *****************************/

	EXEC SQL SELECT NVL(SUM(COMM_AMT)+SUM(NIL_FEES_ADJ)+SUM(MINIMUMFEE_ADJ)+SUM(MAXIMUM_FEE_ADJ),0)	
		INTO :l_tot_depo_fee
		FROM IV_SERVICE_CHRG 
		WHERE CLIENT = :l_client
		AND DATEOF_BILLING = :l_billdate
		AND CONS_FLAG = :l_mastsub
		AND SERVICE_CD IN (:l_depofee);

	printf("sqlca.sqlcode:|%d|\n",sqlca.sqlcode);
	fflush(stdout);

	printf("l_tot_depo_fee :|%lf|\n",l_tot_depo_fee);
	fflush(stdout);


	*p_tottran = l_tot_tran_fee;
	*p_totcust = l_tot_cust_fee; //shailesh 26-12-2007 ISKB_430_11C  ::adding overbill,underbill fee to custfee,sothat taxcan be applied
	*p_ovr_undr = l_ovr_udr_fee;
	*p_totca = l_tot_ca_fee;
	*p_tototh = l_tot_oth_fee;
	*p_totcomm = l_tot_tran_fee + l_tot_cust_fee + l_tot_ca_fee + l_tot_oth_fee+l_ovr_udr_fee;
	*p_totdepo = l_tot_depo_fee;
	


APL_GOBACK_SUCCESS


RETURN_SUCCESS:
	CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSummary succesfully\n",NULL,NULL);
    return(APL_SUCCESS);
/* AIX - Warning
RETURN_FAILURE:
	CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSummary unsuccesfully\n",NULL,NULL);
    return (APL_FAILURE);
*/
}


