


   
   
   
   
   
   
   
   
   
   
   
   




#include "CO_HostStructdef.h"
#include "SMI_InterFace.h"
#include "SMI_Common.h"

#define FILEPATH_LEN				70
#define FILENAME_LEN_A				80

EXEC SQL INCLUDE sqlca;

int EI_Proc_SMIConv(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

//main(int argc,char **argv)
int main(int argc,char **argv)//Changes done for AIX Migration
{
	DEBUG_INFO_STRUCT_H			*l_debug_info_ptr = NULL;
	FILE						*l_ptr_ini_file = NULL;
	FILE						*l_ptr_log_file = NULL;
	INTL_ENV_DATA_STRUCT_H	l_intl_envdatastruct_h;
	char						chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	char						chr_uname[APL_USERID_LEN]   = APL_NULL_STRING;
	char						chr_passwd[APL_PASSWD_LEN]  = APL_NULL_STRING;
	char						chr_custody_id_b[APL_USERID_LEN]  = APL_NULL_STRING;
	int						int_l_flg = 0;
	int						int_retval = 0;
	char						chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	struct sqlca			sqlca;

	memset(&l_intl_envdatastruct_h,NULL,sizeof(INTL_ENV_DATA_STRUCT_H));
	
	sqlca.sqlcode = 0;

	
	strcpy(l_intl_envdatastruct_h.usr, argv[3]);
	strcpy(l_intl_envdatastruct_h.h_mode, argv[4]);
	strcpy(l_intl_envdatastruct_h.processtion, argv[5]);
	strcpy(l_intl_envdatastruct_h.auth_req, argv[6]);
	strcpy(l_intl_envdatastruct_h.subprocess, argv[7]);
	strcpy(l_intl_envdatastruct_h.h_process, argv[8]);
	
	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		exit(-1);
	
	APL_FETCH_DB_LOGIN_DETAILS(l_ptr_ini_file,chr_custody_id_b,chr_uname,chr_passwd,APL_OUT_FILE,&l_debug_info_ptr)
	
	
	
	if (CO_Con_Db(chr_uname,chr_passwd,&l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	

	int_retval = CO_Rtv_RptFileName("3j",APL_LOGFILE_DESC,100,argv[5],argv,&l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

	

	EXEC SQL COMMIT WORK;
	
	if (sqlca.sqlcode != 0)
	{
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}
	
	memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
	sprintf(chr_l_buf,"SMI Conversion Program - GR");
	CO_ProcMonitor(l_ptr_log_file,chr_l_buf,NULL,NULL);

	CO_ProcMonitor(l_ptr_log_file,"_________________________\n",NULL,NULL);
	
	CO_ProcMonitor(l_ptr_log_file,"Work Committed after chr_logfile creation \n",NULL,&l_intl_envdatastruct_h);

	

	if (CO_RtvSysParams(&l_debug_info_ptr) != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to get system parameters - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);
		
		EXEC SQL ROLLBACK WORK RELEASE;
		
		APL_GOBACK_FAIL	
	}

	
	 
	int_retval = CO_Pro_LocRec(argv,l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to lock BATCH_IN_PROC record - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		EXEC SQL ROLLBACK WORK RELEASE;
		
		APL_GOBACK_FAIL
	}

	

		int_retval = EI_Proc_SMIConv(argv,l_ptr_ini_file,l_ptr_log_file,&l_intl_envdatastruct_h,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		int_l_flg = 1;

	   CO_Mod_Batch_Status(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);
		
		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);
		}

		CO_ProcMonitor(l_ptr_log_file,"FAILURE from SMI Conversion program \n",NULL,&l_intl_envdatastruct_h);

		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		APL_GOBACK_FAIL	
	}
	else
	{
		int_l_flg = 0;

		CO_Mod_Batch_Status(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);

		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);
		}

		CO_ProcMonitor(l_ptr_log_file,"SUCCESS from SMI conversion program \n",NULL,&l_intl_envdatastruct_h);

		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		APL_GOBACK_SUCCESS
	}

	RETURN_SUCCESS	:
	{
		fclose(l_ptr_ini_file);
	   exit(0);
	}

	RETURN_FAILURE	:
	{
		fclose(l_ptr_ini_file);
  		exit(-1);
	}
}



int EI_Proc_SMIConv(char 						**argv,
					FILE 						*p_ptr_ini_file,
					FILE 						*p_ptr_log_file,
					INTL_ENV_DATA_STRUCT_H 	*p_intl_env_data_struct_h_d,
					DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr)
{
	struct sqlca 		  		sqlca;
	char							chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	int							i = 0;
	INTL_REPT_STRUCT_H				*l_intl_rept_struct_ha	=NULL;
	int							int_result=0,int_n1=0;
	char						   chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;

	int							int_l_retval = 0;
	char                    chr_l_buffer[150] = APL_NULL_STRING;

	char	chr_l_h_comm_ref_no[APL_TXNREFNO_LEN] = APL_NULL_STRING;
	char 	chr_l_rowid_A[APL_ROWID_LEN] = APL_NULL_STRING;
	long	l_h_SMIConvSeq = 0;
	int   int_p_smieligibility_flg = 0;
	short	l_i_comm_ref_no = 0;
	short	l_i_SMIConvSeq = 0;
	short	i_ora_rowid = 0;

   SYS_DL_DEAL_STRUCT_H 		l_sys_dl_deal_struct_hh;
   SYS_DL_DEAL_STRUCT_I 		l_sys_dl_deal_struct_ic;
   EI_SMI_PEND_DEAL_STRUCT_H 	l_ei_smi_pend_deal_struct_ha;
   EI_SMI_PEND_DEAL_STRUCT_I l_ei_smi_pend_deal_struct_ia;


	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EI_Proc_SMIConv \n",NULL,p_intl_env_data_struct_h_d);

	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	memset(&l_sys_dl_deal_struct_hh,NULL,sizeof(SYS_DL_DEAL_STRUCT_H));
	memset(&l_sys_dl_deal_struct_ic,NULL,sizeof(SYS_DL_DEAL_STRUCT_I));
	memset(&l_ei_smi_pend_deal_struct_ha,NULL,sizeof(EI_SMI_PEND_DEAL_STRUCT_H));
	memset(&l_ei_smi_pend_deal_struct_ia,NULL,sizeof(EI_SMI_PEND_DEAL_STRUCT_I));

   EXEC SQL VAR chr_l_h_comm_ref_no 						 IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_dl_client           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_indentity_no             IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_dlt              IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_setldt          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_ex_arena           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_instrdate             IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_moneydate           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_domcpclt_cd           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_isspotdl         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_dlfromord        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_entry         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_reapired_ind         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_domcp_custodyclt        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_countclt          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_countcltnm        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_clientof         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_custinfo          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_fx_reqd            IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_ispymtlocal        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_verfied_with           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_brkrno          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_fail_cd          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_failinfo          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_ispart_         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_report_at_eom_ind          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_billdate            IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_locindentity_no          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_instruct_person         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_dealcd            IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_instr_code            IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_currencycode           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_classofdl         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_origindentity_no         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_newdt           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_maker             IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_maker_dt           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_deal_status      IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_access_stamp      IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_info1             IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_loccode          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_reginstr_ind          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_pos_stat       IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_status_reg         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_confdate            IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_matchindentity_no        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_markfaildate        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_candropdate         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_checker           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_checker_dt         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_instrconv_ind         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_ndsbldate           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lrdltype         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_ndsdate             IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_ublckdate           IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_delrecdate          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lastregdate         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lr_chkdate          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lr_confdate         IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lr_instrdate          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_tmpoutdate          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_tmpretdate          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_transmitdate        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_hostdate            IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lr_ndsbldate        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lr_ndsdate          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_lr_ublckdate        IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_clt_reqdel_flag    IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_mod_hispos_ind      IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_updhispos_date      IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_cash_client      IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_allow_part_s    IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_locchng_flg    	IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_comm_indentity_no    	IS STRING;
	
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_instruct_personnm		IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_clientofcode		IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_inter_med_person			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hh.h_inter_med_personnm		IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_hh.h_misinfo          IS STRING; 

	sqlca.sqlcode = 0;

	if (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0)
	{
		 CO_ProcMonitor(APL_OUT_FILE,"SMI is already installed",NULL,p_intl_env_data_struct_h_d);
		 CO_ProcMonitor(p_ptr_log_file,"SMI is already installed\n",NULL,p_intl_env_data_struct_h_d);
		 APL_GOBACK_SUCCESS;
	}
   EXEC SQL DECLARE CTradeCur CURSOR FOR
	SELECT *
	FROM  DL_DEAL
	WHERE		DEAL_STAT in ('AA','CC') 
	FOR UPDATE OF ACCESS_STAMP;

   IS_ANY_ORA_ERROR

   EXEC SQL OPEN CTradeCur;

   IS_ANY_ORA_ERROR

	EXEC SQL DELETE FROM DL_SMI_PENDTXN;
	
	IS_ANY_ORA_ERROR

	EXEC SQL DELETE FROM DL_SMI_TMP_TRADE;

	IS_ANY_ORA_ERROR

   for(;;)
   {
   	EXEC SQL VAR chr_l_h_comm_ref_no 						 IS STRING;
      int_p_smieligibility_flg = 0;
		memset(&l_sys_dl_deal_struct_hh,'\0',sizeof(SYS_DL_DEAL_STRUCT_H));
		memset(chr_l_h_comm_ref_no,'\0',APL_TXNREFNO_LEN);

      EXEC SQL FETCH CTradeCur
      INTO  :l_sys_dl_deal_struct_hh:l_sys_dl_deal_struct_ic;

      IS_ANY_ORA_ERROR

      if (APL_ZERO_RESULT_SET)
         break;

		EXEC SQL SELECT ROWID
		INTO		:chr_l_rowid_A:i_ora_rowid
		FROM		DL_DEAL
		WHERE		CLIENT	= :l_sys_dl_deal_struct_hh.h_dl_client
		AND		IDENTIY_NO		= :l_sys_dl_deal_struct_hh.h_indentity_no; 

      IS_ANY_ORA_ERROR

      if (EI_Chk_SMIElg(l_sys_dl_deal_struct_hh.h_loccode,
                                  l_sys_dl_deal_struct_hh.h_dlt,
                                  l_sys_dl_deal_struct_hh.h_classofdl,
                                  l_sys_dl_deal_struct_hh.h_instr_code,
                                  l_sys_dl_deal_struct_hh.h_locchng_flg,
                                  chr_l_rowid_A,
                                  &int_p_smieligibility_flg,
                                  p_intl_env_data_struct_h_d,
                                  l_debug_info_ptr
                                  ) == APL_FAILURE)
      {
          CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_env_data_struct_h_d);
          APL_GOBACK_FAIL;
      }
		if	(	(int_p_smieligibility_flg) &&
				(strcmp(l_sys_dl_deal_struct_hh.h_deal_status,"AA") == 0) )
		{
			if (	EI_Proc_SMIPendIns(&l_sys_dl_deal_struct_hh,
										&l_ei_smi_pend_deal_struct_ha,
										l_debug_info_ptr) == APL_FAILURE	)
			{
				 CO_ProcMonitor(APL_OUT_FILE,"Failure from S_InsSMIPendTxn", NULL, p_intl_env_data_struct_h_d);
				 APL_GOBACK_FAIL;
			}
		}
		else if	(	(int_p_smieligibility_flg) &&
						(strcmp(l_sys_dl_deal_struct_hh.h_deal_status,"CC") == 0) )
		{
			if ( (strcmp(l_sys_dl_deal_struct_hh.h_verfied_with,APL_NULL_STRING) != 0) &&
				  (strcmp(l_sys_dl_deal_struct_hh.h_comm_indentity_no,APL_NULL_STRING) == 0) )
			{
				EXEC SQL SELECT COMM_IDENT_NO
				INTO		:chr_l_h_comm_ref_no:l_i_comm_ref_no
				FROM		DL_DEAL
				WHERE		VERFIED_WITH			=	:l_sys_dl_deal_struct_hh.h_verfied_with
				AND		DEAL_STAT	=  'CC'
				AND		ROWID				<>	:chr_l_rowid_A
				AND		ROWNUM			=	1;

				IS_ANY_ORA_ERROR

				if ( (sqlca.sqlcode == 1403) ||
					  (strcmp(chr_l_h_comm_ref_no,APL_NULL_STRING) == 0) )
				{
					EXEC SQL SELECT SMI_CONV_SEQ.nextval
					INTO		:l_h_SMIConvSeq:l_i_SMIConvSeq
					FROM DUAL;

					IS_ANY_ORA_ERROR

					strcpy(chr_l_h_comm_ref_no,"SMAC");
					strcat(chr_l_h_comm_ref_no,ltoa(l_h_SMIConvSeq));
				}
			}	
			else if (strcmp(l_sys_dl_deal_struct_hh.h_comm_indentity_no,APL_NULL_STRING) == 0)
			{
				EXEC SQL SELECT SMI_CONV_SEQ.nextval
				INTO		:l_h_SMIConvSeq:l_i_SMIConvSeq
				FROM DUAL;

				IS_ANY_ORA_ERROR

				strcpy(chr_l_h_comm_ref_no,"SMAC");
				strcat(chr_l_h_comm_ref_no,ltoa(l_h_SMIConvSeq));
			}

			if (strcmp(chr_l_h_comm_ref_no,APL_NULL_STRING) != 0)
			{
				EXEC SQL UPDATE DL_DEAL
				SET		COMM_IDENT_NO		=	:chr_l_h_comm_ref_no
				WHERE		ROWID				=	:chr_l_rowid_A;
				
				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
															l_sys_dl_deal_struct_hh.h_dl_client,
															l_sys_dl_deal_struct_hh.h_indentity_no,
															APL_NULL_STRING );

				strcpy(l_sys_dl_deal_struct_hh.h_comm_indentity_no,chr_l_h_comm_ref_no);
			}
			if (	EI_Proc_SMIPendIns(&l_sys_dl_deal_struct_hh,
										&l_ei_smi_pend_deal_struct_ha,
										l_debug_info_ptr) == APL_FAILURE	)
			{
				 CO_ProcMonitor(APL_OUT_FILE,"Failure from S_InsSMIPendTxn", NULL, p_intl_env_data_struct_h_d);
				 APL_GOBACK_FAIL;
			}
		}
	}

	EXEC SQL UPDATE MT_COMMON_SYS_PARAMS
	SET		ei_smi_ind = 'Y';

	IS_ANY_ORA_ERROR

	EXEC SQL CLOSE CTradeCur;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EI_Proc_SMIConv successfully\n",NULL,p_intl_env_data_struct_h_d);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EI_Proc_SMIConv with failure\n",NULL,p_intl_env_data_struct_h_d);
		return(APL_FAILURE);
	}
}

int EI_Proc_SMIPendIns(	SYS_DL_DEAL_STRUCT_H 		*l_sys_dl_deal_struct_hh,
							EI_SMI_PEND_DEAL_STRUCT_H	*l_ei_smi_pend_deal_struct_ha,
							DEBUG_INFO_STRUCT_H 				**l_debug_info_ptr)
{
   EI_SMI_PEND_DEAL_STRUCT_I 	*l_ei_smi_pend_deal_struct_ia;
	char  chr_l_current_date_time[APL_DATE_LEN]      = APL_NULL_STRING;

	memset(chr_l_current_date_time,APL_NULL_CHAR,APL_DATE_LEN);
   l_ei_smi_pend_deal_struct_ia = ( EI_SMI_PEND_DEAL_STRUCT_I *) calloc( 1,sizeof(EI_SMI_PEND_DEAL_STRUCT_I));
   APL_MALLOC_FAIL(l_ei_smi_pend_deal_struct_ia);
   memset(l_ei_smi_pend_deal_struct_ia , NULL , sizeof(EI_SMI_PEND_DEAL_STRUCT_I));

	if ( APL_FAILURE ==
					CO_RtvMachDtTime(chr_l_current_date_time, l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL
	}

	strcpy(l_ei_smi_pend_deal_struct_ha->h_dl_client,l_sys_dl_deal_struct_hh->h_dl_client);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_indentity_no,l_sys_dl_deal_struct_hh->h_indentity_no);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_dealcd,l_sys_dl_deal_struct_hh->h_dealcd);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_classofdl,l_sys_dl_deal_struct_hh->h_classofdl);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_ex_arena,l_sys_dl_deal_struct_hh->h_ex_arena);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_dlt,l_sys_dl_deal_struct_hh->h_dlt);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_setldt,l_sys_dl_deal_struct_hh->h_setldt);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_loccode,l_sys_dl_deal_struct_hh->h_loccode);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_instr_code,l_sys_dl_deal_struct_hh->h_instr_code);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_currencycode,l_sys_dl_deal_struct_hh->h_currencycode);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_domcpclt_cd,l_sys_dl_deal_struct_hh->h_domcpclt_cd);
	if (strcmp(l_sys_dl_deal_struct_hh->h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
	{
		if (strcmp(l_sys_dl_deal_struct_hh->h_countclt,APL_NULL_STRING)!=0)
      {
    
			strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,l_sys_dl_deal_struct_hh->h_countclt,APL_CLIENT_LENGTH-1);
         strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0"); 
      }
		else
			strcpy(l_ei_smi_pend_deal_struct_ha->h_countclt,l_sys_dl_deal_struct_hh->h_clientofcode);
	}
	else
   {
     
		strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,l_sys_dl_deal_struct_hh->h_countclt,APL_CLIENT_LENGTH-1);
      strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0");
   }
	
	strcpy(l_ei_smi_pend_deal_struct_ha->h_info1,l_sys_dl_deal_struct_hh->h_info1);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_fail_cd,l_sys_dl_deal_struct_hh->h_fail_cd);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_failinfo,l_sys_dl_deal_struct_hh->h_failinfo);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_verfied_with,l_sys_dl_deal_struct_hh->h_verfied_with);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_deal_status,l_sys_dl_deal_struct_hh->h_deal_status);
	if (strcmp(l_sys_dl_deal_struct_hh->h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
	{
		if (strcmp(l_sys_dl_deal_struct_hh->h_countclt,APL_NULL_STRING)!=0)
			strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,l_sys_dl_deal_struct_hh->h_countcltnm);
		else
			strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,l_sys_dl_deal_struct_hh->h_clientof);
	}
	else
		strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,l_sys_dl_deal_struct_hh->h_countcltnm);
	
	strcpy(l_ei_smi_pend_deal_struct_ha->h_clientof,l_sys_dl_deal_struct_hh->h_clientof);
	l_ei_smi_pend_deal_struct_ha->h_qty = l_sys_dl_deal_struct_hh->h_qty;
	l_ei_smi_pend_deal_struct_ha->h_net_setlval = l_sys_dl_deal_struct_hh->h_amt;
	l_ei_smi_pend_deal_struct_ha->h_grs_setlval = l_sys_dl_deal_struct_hh->h_brokercomm;
	strcpy(l_ei_smi_pend_deal_struct_ha->h_trans_status_ind,"A");
	strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_req_class,"N");
	strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_reject_reason,APL_NULL_STRING);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_access_stamp,chr_l_current_date_time);

	l_ei_smi_pend_deal_struct_ha->h_subfailreas_cd = l_sys_dl_deal_struct_hh->h_subfailreas_cd;
	strcpy(l_ei_smi_pend_deal_struct_ha->h_commonindentity_no,l_sys_dl_deal_struct_hh->h_comm_indentity_no);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_maker,l_sys_dl_deal_struct_hh->h_maker);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_maker_dt,l_sys_dl_deal_struct_hh->h_maker_dt);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_checker,l_sys_dl_deal_struct_hh->h_checker);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_checker_dt,l_sys_dl_deal_struct_hh->h_checker_dt);
	strcpy(l_ei_smi_pend_deal_struct_ha->h_confdate,l_sys_dl_deal_struct_hh->h_confdate);

	EXEC SQL INSERT INTO DL_SMI_PENDTXN
			VALUES (:l_ei_smi_pend_deal_struct_ha:l_ei_smi_pend_deal_struct_ia);
	IS_ANY_ORA_ERROR;

	RETURN_SUCCESS :
	{
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		return(APL_FAILURE);
	}
}
