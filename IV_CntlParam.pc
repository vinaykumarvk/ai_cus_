





#include "stdio_64.h"
#include <stdlib.h>  
#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;



int IV_Rtv_IVCNTLPARAM(SYS_IVCONTROLPARAM_STRUCT *p_sys_ivcontrolparam_struct, int *int_p_retstat, 
		       DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	EXEC SQL BEGIN DECLARE SECTION;

		SYS_IVCONTROLPARAM_STRUCT l_sys_ivcontrol_param_struct;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_prev_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_upto_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_processdt IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_dlv_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.last_dlv_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.archival_dt IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.last_rpt_date IS STRING;
		I_SYS_IVCONTROLPARAM_STRUCT l_i_sys_ivcontrolparam_struct = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	EXEC SQL SELECT B_PREV_DATE, B_UPTO_DATE, B_PROCESSDT, B_DLV_DATE, 
			GENERATE_IND, AE_IND, LAST_DLV_DATE, ARCHIVAL_DT, 
			LAST_RPT_DATE, B_GEN_IND
		 INTO :l_sys_ivcontrol_param_struct INDICATOR :l_i_sys_ivcontrolparam_struct
		 FROM SYS_IVCONTROLPARAM;

	if ( !sqlca.sqlcode )
	{
		*int_p_retstat = IV_SUCCESS;

		if ( l_i_sys_ivcontrolparam_struct.i_generate_flag == -1 )
		{
			l_sys_ivcontrol_param_struct.generate_ind = ' ';

			*int_p_retstat = IV_COLUMN_NULL_ERR;
		}
		else if ( l_i_sys_ivcontrolparam_struct.i_clt_gen_flg == -1 )
		{
			l_sys_ivcontrol_param_struct.ae_ind = ' ';

			*int_p_retstat = IV_COLUMN_NULL_ERR;
		}
		else if ( l_i_sys_ivcontrolparam_struct.i_b_gen_flag == -1 )
		{
			l_sys_ivcontrol_param_struct.b_gen_ind = ' ';

			*int_p_retstat = IV_COLUMN_NULL_ERR;
		}

		*p_sys_ivcontrolparam_struct = l_sys_ivcontrol_param_struct;

		if ( *int_p_retstat == IV_SUCCESS )
		{
			APL_GOBACK_SUCCESS;
		}
		else
		{
			APL_GOBACK_FAIL
		}
	}

	if ( sqlca.sqlcode < 0 )
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);
	}
	else if ( sqlca.sqlcode == 1403 )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
	}

	strcpy(p_sys_ivcontrolparam_struct->b_prev_date, " ");
	strcpy(p_sys_ivcontrolparam_struct->b_upto_date, " ");
	strcpy(p_sys_ivcontrolparam_struct->b_processdt, " ");
	strcpy(p_sys_ivcontrolparam_struct->b_dlv_date, " ");
	p_sys_ivcontrolparam_struct->generate_ind = ' ';
	p_sys_ivcontrolparam_struct->ae_ind = ' ';
	strcpy(p_sys_ivcontrolparam_struct->last_dlv_date, " ");
	strcpy(p_sys_ivcontrolparam_struct->archival_dt, " ");
	strcpy(p_sys_ivcontrolparam_struct->last_rpt_date, " ");
	p_sys_ivcontrolparam_struct->b_gen_ind = ' ';

	APL_GOBACK_FAIL

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Rtv_IVCNTLPARAM().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
printf("********sqlca.sqlcode=(%d)********\n",sqlca.sqlcode);
			
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Rtv_IVCNTLPARAM().\n", l_debug_info_ptr, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Mod_IVCNTLPARAM(SYS_IVCONTROLPARAM_STRUCT *p_sys_ivcontrolparam_struct, int *int_p_retstat, 
		       DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	EXEC SQL BEGIN DECLARE SECTION;

		I_SYS_IVCONTROLPARAM_STRUCT l_i_sys_ivcontrolparam_struct = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	EXEC SQL UPDATE SYS_IVCONTROLPARAM
		 SET B_PREV_DATE =    :p_sys_ivcontrolparam_struct->b_prev_date 
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_bl_prv_date,  
		     B_UPTO_DATE =   :p_sys_ivcontrolparam_struct->b_upto_date
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_bl_upto_date, 
		     B_PROCESSDT = :p_sys_ivcontrolparam_struct->b_processdt
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_bill_deal_date, 
		     B_DLV_DATE =    :p_sys_ivcontrolparam_struct->b_dlv_date
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_bl_dlv_date, 
		     GENERATE_IND =      :p_sys_ivcontrolparam_struct->generate_ind
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_generate_flag, 
		     AE_IND =  :p_sys_ivcontrolparam_struct->ae_ind
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_clt_gen_flg, 
		     LAST_DLV_DATE =   :p_sys_ivcontrolparam_struct->last_dlv_date
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_lst_dlv_date, 
		     ARCHIVAL_DT =      :p_sys_ivcontrolparam_struct->archival_dt
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_arch_date, 
		     LAST_RPT_DATE =   :p_sys_ivcontrolparam_struct->last_rpt_date
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_lst_rpt_date, 
		     B_GEN_IND =    :p_sys_ivcontrolparam_struct->b_gen_ind
				     INDICATOR :l_i_sys_ivcontrolparam_struct.i_b_gen_flag;

	if ( !sqlca.sqlcode )
	{
		*int_p_retstat = IV_SUCCESS;

		APL_GOBACK_SUCCESS
	}
	else
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_IVCNTLPARAM().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_IVCNTLPARAM().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Proc_CalcIVBCNTLPARAMNxtIVDlvDt(SYS_IVCONTROLPARAM_STRUCT *p_sys_ivcontrolparam_struct, 
				   int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	EXEC SQL BEGIN DECLARE SECTION;

		SYS_IVCONTROLPARAM_STRUCT l_sys_ivcontrol_param_struct;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_prev_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_upto_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_processdt IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_dlv_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.last_dlv_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.archival_dt IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.last_rpt_date IS STRING;
		I_SYS_IVCONTROLPARAM_STRUCT l_i_sys_ivcontrolparam_struct = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	l_sys_ivcontrol_param_struct = *p_sys_ivcontrolparam_struct;

	EXEC SQL SELECT B_UPTO_DATE, ADD_MONTHS(B_UPTO_DATE, 1), 
			ADD_MONTHS(B_UPTO_DATE, 1) + (B_DLV_DATE - B_UPTO_DATE)
			INTO :l_sys_ivcontrol_param_struct.b_prev_date
			      INDICATOR :l_i_sys_ivcontrolparam_struct.i_bl_prv_date, 
			     :l_sys_ivcontrol_param_struct.b_upto_date 
			      INDICATOR :l_i_sys_ivcontrolparam_struct.i_bl_upto_date, 
			     :l_sys_ivcontrol_param_struct.b_dlv_date
			      INDICATOR :l_i_sys_ivcontrolparam_struct.i_bl_dlv_date
		 FROM SYS_IVCONTROLPARAM;

	if ( !sqlca.sqlcode )
	{
		*int_p_retstat = IV_SUCCESS;

		*p_sys_ivcontrolparam_struct = l_sys_ivcontrol_param_struct;

		APL_GOBACK_SUCCESS
	}
	else if ( sqlca.sqlcode < 0 ) 
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		strcpy(l_sys_ivcontrol_param_struct.b_prev_date, " ");
		strcpy(l_sys_ivcontrol_param_struct.b_upto_date, " ");
		strcpy(l_sys_ivcontrol_param_struct.b_processdt, " ");
		strcpy(l_sys_ivcontrol_param_struct.b_dlv_date, " ");
		strcpy(l_sys_ivcontrol_param_struct.last_dlv_date, " ");
		strcpy(l_sys_ivcontrol_param_struct.archival_dt, " ");
		strcpy(l_sys_ivcontrol_param_struct.last_rpt_date, " ");
		l_sys_ivcontrol_param_struct.generate_ind = ' ';
		l_sys_ivcontrol_param_struct.b_gen_ind = ' ';
		l_sys_ivcontrol_param_struct.ae_ind = ' ';

		*p_sys_ivcontrolparam_struct = l_sys_ivcontrol_param_struct;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Proc_CalcIVBCNTLPARAMNxtIVDlvDt().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Proc_CalcIVBCNTLPARAMNxtIVDlvDt().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}
