




#include "stdio_64.h"
#include <string.h>
#include <stdlib.h> 
#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;



int IV_Mod_NewIVCUSTPARAM(const IV_CLIENTPARAM_STRUCT_H *p_iv_clientparam_struct_h_a, int *int_p_retstat, 
		      DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int int_l_status = 0;

	EXEC SQL BEGIN DECLARE SECTION;

		IV_CLIENTPARAM_STRUCT_H l_iv_clientparam_struct_h;
		I_IV_CLIENTPARAM_STRUCT l_i_iv_clientparam_struct = {0, 0, 0, 0};  /* Added by Monica for kotak ISKB_1737 */
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	l_iv_clientparam_struct_h = *p_iv_clientparam_struct_h_a;

	EXEC SQL INSERT INTO IV_CLIENTPARAM
		 VALUES (:l_iv_clientparam_struct_h INDICATOR :l_i_iv_clientparam_struct);

	if ( sqlca.sqlcode < 0 )
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_NewIVCUSTPARAM().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_NewIVCUSTPARAM().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Mod_IVCUSTPARAM(const IV_CLIENTPARAM_STRUCT_H *p_iv_clientparam_struct_h_a, 
		      int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int int_l_status = 0;

	EXEC SQL BEGIN DECLARE SECTION;

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	EXEC SQL UPDATE IV_CLIENTPARAM
		 SET PARAMETER_CD = :p_iv_clientparam_struct_h_a->parameter_cd
		 WHERE ((CLIENT = :p_iv_clientparam_struct_h_a->client) AND
			(SERVICE_CD = :p_iv_clientparam_struct_h_a->service_cd) AND 
			(APL_FRM_DATE = :p_iv_clientparam_struct_h_a->apl_frm_date));  /* Added by Monica for kotak ISKB_1737 */

	if ( sqlca.sqlcode < 0 )
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}

	if ( sqlca.sqlcode == 1403 )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;

		CO_InsertErr(l_debug_info_ptr, ERR_ACCESSSTAMP_CHGD, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       APL_NULL_STRING, __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS	

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_IVCUSTPARAM().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_IVCUSTPARAM().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Mod_IVCUSTPARAMAllServ(const char *p_client, int *int_p_retstat, 
			     DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	EXEC SQL BEGIN DECLARE SECTION;

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	EXEC SQL DELETE FROM IV_CLIENTPARAM
		 WHERE (CLIENT = :p_client);

	if ( sqlca.sqlcode < 0 )
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}
	else if ( sqlca.sqlcode == 1403 )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;

		APL_GOBACK_FAIL
	}
	
	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_IVCUSTPARAMAllServ().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_IVCUSTPARAMAllServ().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}



int IV_Mod_IVCUSTPARAMRowDel(const char *p_client, const long p_servcode, const char *p_apl_frm_date,
			 int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)    /* Modified by Monica for ISKB_1737 */
{
	

	EXEC SQL BEGIN DECLARE SECTION;

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	EXEC SQL DELETE FROM IV_CLIENTPARAM
		 WHERE ((CLIENT = :p_client) AND
			(SERVICE_CD = :p_servcode) AND
			(APL_FRM_DATE = :p_apl_frm_date));/*added by Monica for ISKB_1737*/

	if ( sqlca.sqlcode < 0 )
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}
	else if ( sqlca.sqlcode == 1403 )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;

		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_IVCUSTPARAMRowDel().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Mod_IVCUSTPARAMRowDel().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}
