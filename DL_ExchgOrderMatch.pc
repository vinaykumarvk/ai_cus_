/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to 
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or 
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*******************************************************************************
 *
 * Module Name         :         Deal	
 *
 * File Name           :         DL_ExchgOrderMatch.pc
 *
 * Description         :         This file contains all functions for Matching Deals with Exchange Orders.
 *
 *            Version Control Block
 *
 * Date        Version		Author              Description		         RFS No.
 * ---------   --------	 ---------------  ----------------------------------------------------
 * 13/02/2006   1.0        Amit Bhosale			New File		HDFCDL_006
 * 19/03/2011   1.0.1.15        Vilin         Changes were done such that        ISKB_4674
 *                                            tolerence limit will be displayed
 *                                            in case of many to many deals
 * 18/10/2011                Sana Bhatkar     Changes were done such that the    Retro done for AIX mig for ISKB_4967
 *                                            correct deal reference number will
 *                                            be picked for reseting
 * 24/03/2022   1.1        kotubabu N         Linux Migration    Kotak Implementation
 *
 *
 * *****************************************************************************/


#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "DL_Interface.h"
#include "BT_Common.h"
#include "CO_IndStructdef.h"
#include "CO_Commdef.h"

#define DATA_FIELD_SEPRTR ''
#define DATA_VALUE_SEPRTR ''
#define DEAL_CD_S  '3'
#define DEAL_CD_B  '4'
FILE *g_flogfile=NULL;
 /* Added by kotubabu for Linux Migration-Start*/
#ifdef OS_LINUX
FILE *g_logfile;
#else
FILE* g_logfile = APL_OUT_FILE;
#endif
 /* Added by kotubabu for Linux Migration-End*/


EXEC SQL INCLUDE SQLCA.H;


char						chr_g_progname			[APL_BATCH_PROGNAME_LEN]= APL_NULL_STRING;
char						chr_g_key					[APL_BATCH_KEY_LEN]= APL_NULL_STRING;
char						chr_g_start_date		[APL_DATE_LEN]= APL_NULL_STRING;
char						chr_g_sys_date			[APL_DATE_LEN]= APL_NULL_STRING;
char						chr_g_sys_date_time	[APL_DATE_LEN]= APL_NULL_STRING;
char						chr_g_restart_data_h	[APL_RESTARTDATA_LENGTH]= APL_NULL_STRING;

char						chr_g_funccode			[APL_FUNC_NAME_LENGTH]= APL_NULL_STRING;
char						chr_g_client			[APL_CLIENT_LENGTH]= APL_NULL_STRING;

char						chr_g_log_buffer[801] = APL_NULL_STRING;

//HB_12151 Interoperability Among Clearing Corporations 
char chr_trd_setl_ind[2] = APL_NULL_STRING;
char ret_val[2] = APL_NULL_STRING; // Added for Equity Fund Confirmation


int main(int argc,char *argv[])  //AIX-Warnings Removal
{	


 /* Added by kotubabu for Linux Migration -Start*/
  #ifdef OS_LINUX
  g_logfile = APL_OUT_FILE;
  #endif
 /* Added by kotubabu for Linux Migration-End*/
  DEBUG_INFO_STRUCT_H **l_debug_info_ptr=NULL;
  INTL_ENV_DATA_STRUCT_H *l_intl_env_data_h;


  int l_int_num = 0;
  char l_exchange[10] = APL_NULL_STRING;
  char l_settlement_no[16] = APL_NULL_STRING;
  char l_mkt_type[3]= APL_NULL_STRING;
  char **temp;
  int rec_cnt=0;
  int l_match_cnt=0;


  char chr_uname[APL_USERID_LEN] = APL_NULL_STRING;
  char chr_custody_id_b[APL_USERID_LEN] = APL_NULL_STRING;
  char chr_passwd[APL_PASSWD_LEN] = APL_NULL_STRING;
  char chr_l_inifile[PATH_LENGTH] = APL_NULL_STRING;

  char  MatchDealDataString[4000] = APL_NULL_STRING;
  char  MatchEODataString[4000] = APL_NULL_STRING;
  char  ToleranceString[100] = APL_NULL_STRING;

  char l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
  char pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
  char l_chr_rep_id[4]=  APL_NULL_STRING;
  char l_chr_rep_format[2]=  APL_NULL_STRING;
  char l_chr_rep_name[20]=  APL_NULL_STRING;
  char l_chr_start_date[APL_DATE_LEN]=  APL_NULL_STRING;
  char l_chr_user[APL_USERID_LEN]=  APL_NULL_STRING;
  char l_chr_fieldval[22] =  APL_NULL_STRING;	


	// Pankaj Deshpande for Additional Changes to Confirmation - Starts
	char l_cln_master[11] = APL_NULL_STRING;
	char l_cln_code[11] = APL_NULL_STRING;
	char l_trade_type[5]= APL_NULL_STRING;
	// Pankaj Deshpande for Additional Changes to Confirmation - Ends

	EXEC SQL BEGIN DECLARE SECTION;	

		EXEC SQL VAR chr_uname IS STRING;
		EXEC SQL VAR chr_custody_id_b IS STRING;
		EXEC SQL VAR chr_passwd IS STRING;

		EXEC SQL VAR MatchDealDataString IS STRING;
		EXEC SQL VAR MatchEODataString IS STRING;
		EXEC SQL VAR l_sys_date IS STRING;
	
	EXEC SQL END DECLARE SECTION;

	l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *));

   if(CO_Get_DBConnect(l_debug_info_ptr) == APL_FAILURE)
   {
		APL_GOBACK_FAIL
   }	
	




	if (APL_FAILURE == CO_Rtv_RptFileName( "MATCHING",
				APL_LOGFILE_DESC,
				100,
				argv[5],
				argv,
				&g_flogfile,
				&l_debug_info_ptr ) ) 
	{
		printf("\n Error in CO_Rtv_RptFileName \n");
/*		CO_ProcMonitor(g_flogfile, "Failure from CO_Rtv_RptFileName:", NULL, NULL);
*/		APL_GOBACK_FAIL
	} 



	if(APL_FAILURE == CO_SplitStr(argv[9],
				'|',
				&l_int_num,&temp))
	{
		CO_ProcMonitor(g_flogfile, "Failure from StrSplitFn", NULL, NULL);
		APL_GOBACK_FAIL

		}
		

   if (l_int_num != 6)
		{
			printf("\n total no of arguments are |%d|", l_int_num);
			CO_ProcMonitor(g_flogfile, "Improper Number of arguements", NULL, NULL);
/*			CO_Proc_RptClose(g_flogfile, &l_debug_info_ptr);	*/
			APL_GOBACK_FAIL
		}

		printf("\n no of arguments are |%d|", l_int_num);
		printf("\n  arguments are A--|%s|", temp[0]);
		printf("\n  arguments are B--|%s|", temp[1]);
		printf("\n  arguments are C--|%s|", temp[2]);
		
	   
		strcpy(l_settlement_no, temp[0]);
		strcpy(l_exchange, temp[1]);
		strcpy(l_mkt_type, temp[2]);
		
		strcpy(l_cln_master, temp[3]);
		strcpy(l_cln_code, temp[4]);
		strcpy(l_trade_type, temp[5]);
	
		printf("\n Selected Exchange Code is  |%s|",l_exchange);
		printf("\n Selected settlment Number is  |%s|",l_settlement_no);
		printf("\n Selected Market Type is  |%s|", l_mkt_type);
	
		strcpy(chr_g_progname,	argv[0]);
		strcpy(chr_g_key,			argv[1]);
		strcpy(chr_g_start_date,	argv[2]);
		strcpy(chr_g_funccode,argv[5]);

		
		if (!strlen(temp[0]))
			{
				
				CO_ProcMonitor(g_flogfile, "Mandatory Data Missing: Settlment Number", NULL, NULL);
/*				CO_Proc_RptClose(g_flogfile, &l_debug_info_ptr);		*/
				APL_GOBACK_FAIL
			} 
	


		if(strcmp(l_mkt_type,APL_NULL_STRING) == 0)
			strcpy(l_mkt_type,"%");

		 if(strcmp(l_exchange,APL_NULL_STRING) == 0)
		    strcpy(l_exchange,"%");
		
		//HB_12151 Interoperability Among Clearing Corporations Starts--
		EXEC SQL SELECT MAP_DESC INTO :chr_trd_setl_ind FROM PRO_SGENSTAT
			 WHERE MAP_TYPE = 'MATCHING_EXCHANGE' 
			 AND MAP_VAL = 'MATCHING_EXCHANGE';

		IS_ANY_ORA_ERROR
		
		Alert("HM :: chr_trd_setl_ind [%s] \n",chr_trd_setl_ind);

		EXEC SQL SELECT COUNT(*) INTO :rec_cnt FROM dl_deal
					WHERE ((TRD_EXCH LIKE :l_exchange
					AND TRD_MKT_TYPE LIKE :l_mkt_type
					AND TRD_SETL_NO = :l_settlement_no
					AND 'T' = :chr_trd_setl_ind)
					OR
					(EXCH_CODE LIKE :l_exchange
					AND MKT_TYPE LIKE :l_mkt_type
					AND SETTLEMENT_NO = :l_settlement_no
					AND 'S' = :chr_trd_setl_ind))
					AND CLH_FLG ='C';
		//HB_12151 Interoperability Among Clearing Corporations Ends--
		
		IS_ANY_ORA_ERROR
		
		if(rec_cnt <=0)
		{
			CO_ProcMonitor(g_flogfile, "NO Record found matching your Criteria !", NULL, NULL);
			APL_GOBACK_FAIL
		}
		/** Check master records exists- AmitB 240207	**/
		EXEC SQL SELECT COUNT(*) INTO :l_match_cnt FROM MATCHING_MASTER;
		if(l_match_cnt == 0)
		{
			fprintf(g_flogfile,"\n No Matching Criteria Maintained in MATCHING_MASTER !\n");
			APL_GOBACK_FAIL
		}
		IS_ANY_ORA_ERROR

		EXEC SQL TRUNCATE TABLE dl_match_deals;
		IS_ANY_ORA_ERROR
		EXEC SQL TRUNCATE TABLE dl_match_orders;
		IS_ANY_ORA_ERROR
/*		EXEC SQL TRUNCATE TABLE dl_match_rpt;
		IS_ANY_ORA_ERROR
*/	
		EXEC SQL TRUNCATE TABLE dl_unmatch_deals;
		IS_ANY_ORA_ERROR
		EXEC SQL TRUNCATE TABLE dl_unmatch_orders;
		IS_ANY_ORA_ERROR
		EXEC SQL DELETE from dl_match_rpt
		WHERE exch_code LIKE :l_exchange
		AND mkt_type LIKE :l_mkt_type
		AND settlement_no= :l_settlement_no
		AND (match_comment like 'Unmatch%' or match_comment like 'CLOSE Matched%' or match_comment like 'Unmatched: Many To Ma%');
		
		/* ISKB-1723 : ASHISH 14-08-2008 */ 
		EXEC SQL TRUNCATE TABLE LIST_EXCH_ORDERS;
		printf("\n Sql Error to truncate the table LIST_EXCH_ORDERS = |%d| \n",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
/* 06-Sep-2010 - Called ManyToMany before all other Matching Scenario for PMS Client Matching - Start */
	if(APL_FAILURE == ManyToMany(MatchDealDataString,MatchEODataString,ToleranceString,l_settlement_no,l_mkt_type,l_exchange,l_cln_master,l_cln_code,l_trade_type,argv,g_flogfile,l_debug_info_ptr))
	{	
		CO_ProcMonitor(g_flogfile, "ManyToMany returned failure", NULL, NULL);
		APL_GOBACK_FAIL
	}
	/* SLB CHGS */
	if(APL_FAILURE == ManyToMany_SLB(MatchDealDataString,MatchEODataString,ToleranceString,l_settlement_no,l_mkt_type,l_exchange,l_cln_master,l_cln_code,l_trade_type,argv,g_flogfile,l_debug_info_ptr))
	{	
		CO_ProcMonitor(g_flogfile, "ManyToMany returned failure", NULL, NULL);
		APL_GOBACK_FAIL
	}

/* 06-Sep-2010 - Called ManyToMany before all other Matching Scenario for PMS Client Matching - End */

	if(APL_FAILURE == OneToOne(MatchDealDataString,MatchEODataString,ToleranceString,l_settlement_no,l_mkt_type,l_exchange,l_cln_master,l_cln_code,l_trade_type,argv,g_flogfile,&l_debug_info_ptr))
	{	
		CO_ProcMonitor(g_flogfile, "OneToOne returned failure", NULL, NULL);
		APL_GOBACK_FAIL
	}

/* One To Many & Many To Many Matching is required only for NSE */	
/* if(strcmp(l_exchange,"NSE")	== 0)
{commented for PMS client Changes on 06-Sep-2010 By Yog - Start*/
	if(APL_FAILURE == OneToMany(MatchDealDataString,MatchEODataString,ToleranceString,l_settlement_no,l_mkt_type,l_exchange,l_cln_master,l_cln_code,l_trade_type,argv,g_flogfile,l_debug_info_ptr))
	{	
		CO_ProcMonitor(g_flogfile, "OneToMany returned failure", NULL, NULL);
		APL_GOBACK_FAIL
	}

/*	06-Sep-2010 - Code Commented - ManyToMany before all other Matching Scenario for PMS Client Matching - Start 
	if(APL_FAILURE == ManyToMany(MatchDealDataString,MatchEODataString,ToleranceString,l_settlement_no,l_mkt_type,l_exchange,argv,g_flogfile,l_debug_info_ptr))
	{	
		CO_ProcMonitor(g_flogfile, "ManyToMany returned failure", NULL, NULL);
		APL_GOBACK_FAIL
	}
	/* SLB CHGS 
	if(APL_FAILURE == ManyToMany_SLB(MatchDealDataString,MatchEODataString,ToleranceString,l_settlement_no,l_mkt_type,l_exchange,argv,g_flogfile,l_debug_info_ptr))
	{	
		CO_ProcMonitor(g_flogfile, "ManyToMany returned failure", NULL, NULL);
		APL_GOBACK_FAIL
	} */
	/* SLB CHGS */
/*	06-Sep-2010 - Code Commented - ManyToMany before all other Matching Scenario for PMS Client Matching - End */
/*} commented for PMS client Changes on 06-Sep-2010 By Yog - End */

/*		EXEC SQL UPDATE DL_DEAL a SET deal_stat='FM',is_matched='N'
					WHERE NOT EXISTS(SELECT 'X' FROM dl_match_deals b
					WHERE a.client=b.client
					AND	  a.deal_date=b.deal_date
					AND	  a.brk_no=b.brk_no
					AND	  a.exch_code=b.exch_code
					AND   a.instr_code=b.instr_code
					AND	  a.settlement_no=b.settlement_no
					AND	  a.mkt_type=b.mkt_type
					AND	  a.identiy_no=b.ident_no)
				AND deal_stat NOT IN ('PM','AA');
		
	
*/
		 IS_ANY_ORA_ERROR
			 
/* *********  Code For Populating Report Table Starts	**** */	

	
	 if (  CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
	  {
		APL_GOBACK_FAIL
	  }
	 strcpy(l_sys_date,pro_sys_date);	

	 //HB_12151 Interoperability Among Clearing Corporations Starts--
	EXEC SQL INSERT INTO dl_match_rpt SELECT a.client,identiy_no,null,settlement_no,deal_stat,
            'Unmatched: Deal Not Reconciled' as COMMENTS,exch_code,mkt_type FROM dl_deal a
								WHERE ((TRD_EXCH LIKE :l_exchange
								AND TRD_MKT_TYPE LIKE :l_mkt_type
								AND TRD_SETL_NO = :l_settlement_no
								AND 'T' = :chr_trd_setl_ind)
								OR
								(EXCH_CODE LIKE :l_exchange
								AND MKT_TYPE LIKE :l_mkt_type
								AND SETTLEMENT_NO = :l_settlement_no
								AND 'S' = :chr_trd_setl_ind))
								AND deal_stat ='AA' AND DL_CLASS != '40'
								AND CLH_FLG='C';
		Alert(" 1 sqlca.sqlcode is %d\n",sqlca.sqlcode);
	 //HB_12151 Interoperability Among Clearing Corporations Ends --

	IS_ANY_ORA_ERROR

/*	EXEC SQL INSERT INTO dl_match_rpt SELECT a.client,identiy_no,null,settlement_no,deal_stat,'Unmatched : Order Missing' as COMMENTS FROM dl_deal a
                           WHERE (a.client,a.identiy_no) NOT IN
                               (select client,ident_no from dl_match_deals b)
						   AND a.deal_stat!='AA';
	
	IS_ANY_ORA_ERROR

*/
/* Retro Done for AIX migration */
 /* Changes done by Vilin for ISKB_4967 - Start */
    /*	EXEC SQL INSERT INTO dl_match_rpt  SELECT a.client,
				DECODE(substr(a.proc_desc,1,4),'MTOM',substr(a.proc_desc,instr(a.proc_desc,'-',1,1)+1,(length(a.proc_desc))),deal_ref_no),
				order_no,settlement_no,a.matched,
				DECODE(substr(a.proc_desc,1,5),'1TO1-','Matched',
							   '1TO1T','Matched With Tolerance=Rs.'||brk_adjust,
							   '1TOM-','Matched- One To Many','1TOMT','Matched- One To Many With Tolerance=Rs.'||brk_adjust,
							   'MTOM-','Matched ManyToMany'||' For Deals- '||substr(a.proc_desc,instr(a.proc_desc,'-',1,1)+1,(length(a.proc_desc))),
							   'MTOMT','Matched ManyToMany'||' For Deals- '||substr(a.proc_desc,instr(a.proc_desc,'-',1,1)+1,(length(a.proc_desc)))||' With Tolerance=Rs.'||brk_adjust,
							   'Matched'),
						a.exch_code,a.mkt_type
				    FROM dl_match_deals a,dl_match_orders b
					WHERE a.client=b.client
					AND a.exch_code=b.exchg_code
					AND a.instr_code=b.instr_code
					AND a.brk_no=b.broker_cd
					AND a.mkt_type=b.mkt_type
					AND a.MATCHED = b.MATCHED /* CVS ::: Added for Matching Report ISKB_2230 */
			             /*	AND DECODE(a.deal_cd,'1','S','2','B','3','S','4','B')=b.buy_sell_flg	/* Condn added for BuySell-AmitB-060307*/
			             /*	AND a.SETTLEMENT_NO=b.SETTL_NO
	        GROUP BY a.settlement_no,a.client,deal_ref_no,order_no,a.matched,a.proc_desc,brk_adjust,a.exch_code,a.mkt_type; */
        EXEC SQL INSERT INTO dl_match_rpt  SELECT a.client,
                             DECODE(substr(a.proc_desc,1,5),'MTOM-',substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc)))
                                                           ,'MTOMT',substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc))) 
                                                           ,'1TO1-',substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc)))
                                                           ,'1TOMT',substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc)))    
                                                           ,'1TO1T',substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc)))
                                                           ,'1TOM-',substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc))),deal_ref_no),
                             order_no,settlement_no,a.matched,
                             DECODE(substr(a.proc_desc,1,5),'1TO1-','Matched',
                                                          '1TO1T','Matched With Tolerance=Rs.'||brk_adjust,
                                                          '1TOM-','Matched- One To Many','1TOMT','Matched- One To Many With Tolerance=Rs.'||brk_adjust,
                                                          'MTOM-','Matched ManyToMany'||' For Deals- '||substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc))),
                                                          'MTOMT','Matched ManyToMany'||' For Deals- '||substr(a.proc_desc,instr(a.proc_desc,chr(1),1,1),(length(a.proc_desc)))||' With Tolerance=Rs.'||brk_adjust,
                                                          'Matched'),
                                                  a.exch_code,a.mkt_type
                                     FROM dl_match_deals a,dl_match_orders b
                                        WHERE a.client=b.client
                                        AND a.exch_code=b.exchg_code
                                        AND a.instr_code=b.instr_code
                                        AND a.brk_no=b.broker_cd
                                        AND a.mkt_type=b.mkt_type
                                        AND a.MATCHED = b.MATCHED /* CVS ::: Added for Matching Report ISKB_2230 */
					AND DECODE(a.deal_cd,'1','S','2','B','3','S','4','B')=b.buy_sell_flg	/* Condn added for BuySell-AmitB-060307*/
					AND a.SETTLEMENT_NO=b.SETTL_NO
	        GROUP BY a.settlement_no,a.client,deal_ref_no,order_no,a.matched,a.proc_desc,brk_adjust,a.exch_code,a.mkt_type;
   /* Changes done by Vilin for ISKB_4967 - End */                    
		printf("\n Matched Report INSERT ERROR=|%d| \n",sqlca.sqlcode);
		printf(" 2 sqlca.sqlcode is %d\n",sqlca.sqlcode);
	
	IS_ANY_ORA_ERROR

/* One To Many & Many To Many Matching is required only for NSE */	
if(strcmp(l_exchange,"NSE")	== 0 || strcmp(l_exchange,"MCS")== 0) //Tarkeshwar added MCS condition here.
{
/* Retro Done for AIX migration */
  /* Changes done by Vilin for ISKB_4967 - start */
	EXEC SQL INSERT INTO dl_match_rpt  SELECT a.client,a.ident_no,
				order_no,settlement_no,a.matched,
		   /*	DECODE(substr(a.proc_desc,1,4),'MTOM',substr(a.proc_desc,instr(a.proc_desc,'-',1,1)+1,(length(a.proc_desc))),ident_no), */
			   DECODE(substr(a.proc_desc,1,5),'MTOM',substr(a.proc_desc,instr(a.proc_desc,chr(1),1),(length(a.proc_desc))),ident_no),
						a.exch_code,a.mkt_type
				    FROM dl_unmatch_deals a,dl_unmatch_orders b
					WHERE a.client=b.client
					AND a.exch_code=b.exchg_code
					AND a.instr_code=b.instr_code
					AND a.brk_no=b.broker_cd
					AND a.mkt_type=b.mkt_type
					AND a.SETTLEMENT_NO=b.SETTL_NO
					AND a.MATCHED = b.MATCHED /* CVS ::: Added for Matching Report ISKB_2230 */
	        GROUP BY a.settlement_no,a.client,ident_no,order_no,a.matched,a.proc_desc,brk_adjust,a.exch_code,a.mkt_type;
	
		printf("\n Matched Report INSERT ERROR=|%d| \n",sqlca.sqlcode);
		printf(" 3 sqlca.sqlcode is %d\n",sqlca.sqlcode);
 /* Changes done by Vilin for ISKB_4967 - End*/	
	IS_ANY_ORA_ERROR
}
/*
	EXEC SQL INSERT INTO dl_match_rpt SELECT a.client,identiy_no,null,settlement_no,deal_stat,
            'Unmatched' as COMMENTS,exch_code,mkt_type FROM dl_deal a
                            WHERE exch_code LIKE :l_exchange
								AND mkt_type LIKE :l_mkt_type
								AND settlement_no= :l_settlement_no
								AND deal_stat ='RC' AND DL_CLASS != '40'
								AND NOT EXISTS
										(SELECT deal_ref_no,client FROM dl_match_rpt b
										 	WHERE b.client=a.client
											AND b.deal_ref_no=a.identiy_no 
											and  (match_comment like 'Matched%' or match_comment like 'CLOSE Matched%' or match_comment like 'Unmatched:%'));
*/
		printf(" 4 sqlca.sqlcode is %d\n",sqlca.sqlcode);

	IS_ANY_ORA_ERROR

		
	strcpy(l_chr_rep_id,"400");
	strcpy(l_chr_rep_format,"1");
	strcpy(l_chr_rep_name,"Matching Report");
/*	strcpy(l_chr_start_date,l_sys_date);	*/
	strcpy(l_chr_start_date,argv[2]);
	strcpy(l_chr_user,argv[3]);
	sprintf(l_chr_fieldval,"%s%c",l_settlement_no,DATA_FIELD_SEPRTR);

	printf("\n ParamString=|%s|\n",l_chr_fieldval);

		
/***	if(   CO_CreateReport(l_chr_rep_id,
			      l_chr_rep_format,
			      l_chr_rep_name,
			      l_chr_fieldval,
			      l_chr_start_date,
			      l_chr_user,
			      l_debug_info_ptr) == APL_FAILURE)
			 {
			 	APL_GOBACK_FAIL
			 }	***/


/* *********  Code For Populating Report Table	Ends **** */	


RETURN_SUCCESS :

	if(APL_FAILURE == BT_Status_Completed(argv[0],argv[1],argv[2],l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}

	EXEC SQL COMMIT WORK;

	if(sqlca.sqlcode != 0)
		APL_GOBACK_FAIL
		exit(0);

	RETURN_FAILURE    :
	  //Added By Aakash for IOP2 CS0028550 starts ..
	  if(APL_FAILURE == BT_Status_Completed(argv[0],argv[1],argv[2],l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
	EXEC SQL COMMIT WORK;
	 //Added By Aakash for IOP2 CS0028550 ends..
	CO_ProcMonitor(g_flogfile, "Returning Unsuccessfully out of Order Matching .", NULL, NULL);
	exit(-1);

}



int OneToOne(char *MatchDealDataString,
			 char *MatchEODataString,
			 char *ToleranceString,
			 char *p_settlement_no,
			 char *p_mkt_type,
			 char *p_exchange,
			 char *p_client_master,
			 char *p_client_code,
			 char *p_trade_type,
			 char **argv,
			 FILE *g_flogfile,
			 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{	
	 
	 char  OrderMatch='N';	
	 char  P_EXCHG_CODE[100];
	 char  DealString[4000] = APL_NULL_STRING;
	 char  EOString[4000] = APL_NULL_STRING;
	 /** Isolve-307:AmitB:08052007 **/
	 char  l_exch_instr_code[13]=APL_NULL_STRING;
	 char  l_scrip_grp[5]=APL_NULL_STRING;
	 short i_exch_instr_code = 0;
	 short i_scrip_grp = 0;
      /*	 int commit_count=0;*/
	  
	  // Pankaj Deshpande
	 char  	*l_sqlstmt = (char *)NULL;
	char  	*l_sqlstmt_append = APL_NULL_STRING;
		
	 EXEC SQL VAR DealString IS STRING;
	 EXEC SQL VAR EOString IS STRING;
	
	SYS_DL_DEAL_STRUCT_H *l_dl_deal_struct_h= NULL;
	SYS_DL_DEAL_STRUCT_I *l_dl_deal_struct_i= NULL;
		
	DL_EXCHGORD_UPLD_STRUCT_H *l_dl_exchgnord_upld_struct_h= NULL;
	DL_EXCHGORD_UPLD_STRUCT_I *l_dl_exchgnord_upld_struct_i= NULL;
	
	EXEC SQL BEGIN DECLARE SECTION;

		EXEC SQL VAR l_dl_deal_struct_h->h_dl_client IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_settlement_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_exch_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_brkrno IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dlt IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dealcd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_indentity_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_domcpclt_cd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_countclt IS STRING;

		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_order_no IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_exchg_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_cln_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_broker_cd IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_settl_no IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_deal_date IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_scrip_grp IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_creation_type IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_deal_ref_no IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_buy_sell_flg IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_matched IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_access_stamp IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_status IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_maker IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_maker_dt IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_checker IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_checker_dt IS STRING;
		
		/* Added by Pankaj Deshpande for Additional Changes to Confirmation - Starts */
		EXEC SQL VAR p_client_code IS STRING;
		EXEC SQL VAR p_client_master IS STRING;
		EXEC SQL VAR p_trade_type IS STRING;
		/* Added by Pankaj Deshpande for Additional Changes to Confirmation - Ends */

	EXEC SQL END DECLARE SECTION;


	l_dl_deal_struct_h=(SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_deal_struct_h)
	l_dl_deal_struct_i=(SYS_DL_DEAL_STRUCT_I *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_deal_struct_i)

	l_dl_exchgnord_upld_struct_h=(DL_EXCHGORD_UPLD_STRUCT_H *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_h)
	l_dl_exchgnord_upld_struct_i=(DL_EXCHGORD_UPLD_STRUCT_I *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_i)
	
	l_sqlstmt = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	l_sqlstmt_append = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	// Pankaj Deshpande - Ends
	
	memset(l_dl_deal_struct_h, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
	memset(l_dl_exchgnord_upld_struct_h, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_H));

	memset(l_dl_deal_struct_i, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
	memset(l_dl_exchgnord_upld_struct_i, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_I));
	
	printf("\n	***********************************************************");
	printf("\n			STARTING  1 TO 1 MATCHING					 \n");	
	printf("\n	***********************************************************");

	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n			STARTING  1 TO 1 MATCHING					 ",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);


		if(strcmp(p_mkt_type,APL_NULL_STRING) == 0)
		strcpy(p_mkt_type,"%");

		 if(strcmp(p_exchange,APL_NULL_STRING) == 0)
	    strcpy(p_exchange,"%");

		/* Added by Pankaj Deshpande for Additional Changes - Starts */
		if(strcmp(p_client_code,APL_NULL_STRING) == 0)
			strcpy(p_client_code,"%");
	
		if(strcmp(p_client_master,APL_NULL_STRING) == 0)
			strcpy(p_client_master,"%");
		/* Added by Pankaj Deshpande for Additional Changes - Ends */
	
	/** TUX added condition EX_Arena ***/
	/** Isolve-307:AmitB:08052007 **/
	//HB_12151 Interoperability Among Clearing Corporations Starts --
	
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	
	sprintf(l_sqlstmt," SELECT client,decode('%s','T',trd_mkt_type,mkt_type), ",chr_trd_setl_ind );
	sprintf(l_sqlstmt_append, " decode('%s','T',trd_setl_no,settlement_no),decode('%s','T',trd_exch,exch_code) ", chr_trd_setl_ind,chr_trd_setl_ind );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	sprintf(l_sqlstmt_append, " ,instr_code,deal_date, deal_cd,qty,amount,identiy_no,brokercomm, NET_AMT,domestic_cpclt,interfii_flg FROM dl_deal a, MT_CLIENT B  ");
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	sprintf(l_sqlstmt_append, " WHERE ((TRD_EXCH LIKE '%s' AND TRD_MKT_TYPE LIKE '%s' AND TRD_SETL_NO = '%s' AND 'T' = '%s') OR (EXCH_CODE LIKE '%s' AND MKT_TYPE LIKE '%s' AND SETTLEMENT_NO = '%s' AND 'S' = '%s')) AND A.CLIENT = B.CLN_CODE AND A.CLIENT LIKE '%s' AND B.CLN_MASTER LIKE '%s' ",p_exchange ,p_mkt_type, p_settlement_no, chr_trd_setl_ind, p_exchange, p_mkt_type, p_settlement_no,  chr_trd_setl_ind, p_client_code,p_client_master);
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	sprintf(l_sqlstmt_append, " AND deal_stat='RC' AND DL_CLASS != '40' AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL) AND CLH_FLG='C' AND NOT EXISTS (SELECT 'X' FROM dl_match_deals b WHERE a.client=b.client AND a.exch_code=b.exch_code AND a.instr_code=b.instr_code AND a.settlement_no=b.settlement_no AND a.mkt_type=b.mkt_type AND a.domestic_cpclt=b.brk_no AND a.identiy_no=b.ident_no AND matched='PM') ");
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	if(strcmp(p_trade_type,"BUY")==0)
	{
		sprintf(l_sqlstmt_append, " AND A.DEAL_CD IN ('2','4') ");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	}
	else if(strcmp(p_trade_type,"SELL")==0)
	{
		sprintf(l_sqlstmt_append, " AND A.DEAL_CD IN ('1','3') ");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
		
	}
	else
	{
		sprintf(l_sqlstmt_append, " AND A.DEAL_CD IN ('1','2','3','4') ");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	}
				
	printf("\n PPD: query for the cursor 111: |%s|", l_sqlstmt);
	fflush(stdout);
			
	EXEC SQL PREPARE sss FROM :l_sqlstmt;
	IS_ANY_ORA_ERROR
			
	EXEC SQL DECLARE deal_outer1 CURSOR FOR	sss;
		
	EXEC SQL OPEN deal_outer1;
	IS_ANY_ORA_ERROR
	    
	 for(;;)
	 {
		printf("PPD: 123");
		fflush(stdout);

	    EXEC SQL FETCH deal_outer1 INTO :l_dl_deal_struct_h->h_dl_client:l_dl_deal_struct_i->i_dl_client,
									  :l_dl_deal_struct_h->h_mkt_type:l_dl_deal_struct_i->i_mkt_type,
									  :l_dl_deal_struct_h->h_settlement_no:l_dl_deal_struct_i->i_settlement_no,
									  :l_dl_deal_struct_h->h_exch_code:l_dl_deal_struct_i->i_exch_code,
									  :l_dl_deal_struct_h->h_instr_code:l_dl_deal_struct_i->i_instr_code,
									  :l_dl_deal_struct_h->h_dlt:l_dl_deal_struct_i->i_dlt,
									  :l_dl_deal_struct_h->h_dealcd:l_dl_deal_struct_i->i_dealcd,
									  :l_dl_deal_struct_h->h_qty:l_dl_deal_struct_i->i_qty,
									  :l_dl_deal_struct_h->h_amt:l_dl_deal_struct_i->i_amt,
									  :l_dl_deal_struct_h->h_indentity_no:l_dl_deal_struct_i->i_indentity_no,
									  :l_dl_deal_struct_h->h_brokercomm:l_dl_deal_struct_i->i_brokercomm,
									  :l_dl_deal_struct_h->h_net_amt:l_dl_deal_struct_i->i_net_amt,
									  :l_dl_deal_struct_h->h_brkrno:l_dl_deal_struct_i->i_brkrno,
									  :l_dl_deal_struct_h->h_interfii_flg:l_dl_deal_struct_i->i_interfii_flg;

		   

		   if(sqlca.sqlcode)
			{
				printf("\n ERROR FETCHING DEAL DATA 1TO1 :|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n ERROR FETCHING DEAL DATA 1TO1 :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

	       if(APL_ZERO_RESULT_SET)
			    break;
		   
		  	IS_ANY_ORA_ERROR
		   
	

			sprintf(chr_g_log_buffer,"\n 1TO1 Deal:IndentiyNo=|%s| Client=|%s| Exch_code=|%s|Setttlementno=|%s| MktType=|%s|InstrCode=|%s|Broker=|%s| DealDate=|%s|DealCd=|%s|Qty=|%lf| Amount=|%lf| NetAmount=|%lf| Brokercomm=|%lf|\n",
								  l_dl_deal_struct_h->h_indentity_no,
								  l_dl_deal_struct_h->h_dl_client,
								  l_dl_deal_struct_h->h_exch_code,
								  l_dl_deal_struct_h->h_settlement_no,
								  l_dl_deal_struct_h->h_mkt_type,
							  	  l_dl_deal_struct_h->h_instr_code,
								  l_dl_deal_struct_h->h_brkrno,
								  l_dl_deal_struct_h->h_dlt,
								  l_dl_deal_struct_h->h_dealcd,
								  l_dl_deal_struct_h->h_qty,
								  l_dl_deal_struct_h->h_amt,
								  l_dl_deal_struct_h->h_net_amt,
								  l_dl_deal_struct_h->h_brokercomm);

			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);



		EXEC SQL DECLARE EO_inner1 CURSOR FOR
			   SELECT * FROM dl_exchgord_upld a
				  WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
				  AND settl_no=:l_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:l_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:l_dl_deal_struct_h->h_instr_code
				  AND client=:l_dl_deal_struct_h->h_dl_client
				  /* commented by amish - 30/10/2006 */
				  /*
			      AND deal_date=:l_dl_deal_struct_h->h_dlt
				  */
/*				  AND decode(BUY_SELL_FLG,'B','4','S','3')=:l_dl_deal_struct_h->h_dealcd	*/
				  AND buy_sell_flg=decode(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
				  AND broker_cd=:l_dl_deal_struct_h->h_brkrno
				  AND nvl(matched,'N')='N'
				  AND status='AA';

		
		 EXEC SQL OPEN EO_inner1;
		 IS_ANY_ORA_ERROR
 
		for(;;)
		{

			EXEC SQL FETCH EO_inner1 INTO :l_dl_exchgnord_upld_struct_h:l_dl_exchgnord_upld_struct_i;

			if(sqlca.sqlcode)
			{
				printf("\n ERROR FETCHING EO DATA 1TO1 :|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n ERROR FETCHING EO DATA 1TO1 :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

			if(APL_ZERO_RESULT_SET)
			    break;
			
		  	IS_ANY_ORA_ERROR

			
			sprintf(chr_g_log_buffer,"\n 1TO1 EO:OrderNo=|%s| Client=|%s|Exch_code=|%s|Setttlementno=|%s|MktType=|%s|InstrCode=|%s|Broker=|%s|DealDate=|%s|BUY/SELL=|%s|Qty=|%lf| Amount=|%lf|\n",
										l_dl_exchgnord_upld_struct_h->h_order_no,
										l_dl_exchgnord_upld_struct_h->h_cln_code,
										l_dl_exchgnord_upld_struct_h->h_exchg_code,
										l_dl_exchgnord_upld_struct_h->h_settl_no,
										l_dl_exchgnord_upld_struct_h->h_mkt_type,
										l_dl_exchgnord_upld_struct_h->h_instr_code,
										l_dl_exchgnord_upld_struct_h->h_broker_cd,
										l_dl_exchgnord_upld_struct_h->h_deal_date,
										l_dl_exchgnord_upld_struct_h->h_buy_sell_flg,
										l_dl_exchgnord_upld_struct_h->h_qty,
										l_dl_exchgnord_upld_struct_h->h_dl_amt);

			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

			OrderMatch='N';
			/** Start Changes:Isolve-307:AmitB:08052007 **/
			EXEC SQL select distinct exch_instr_code,scrip_grp into :l_exch_instr_code:i_exch_instr_code,:l_scrip_grp:i_scrip_grp
							from DL_EXCHGORD_UPLD
							WHERE ORDER_NO=:l_dl_exchgnord_upld_struct_h->h_order_no
							/*Start Changes: Added By Pavan for ISKB_2091 */
							and BROKER_CD = :l_dl_exchgnord_upld_struct_h->h_broker_cd
							and ((EXCHG_CODE = 'BSE' and DEAL_DATE =:l_dl_exchgnord_upld_struct_h->h_deal_date)
							   or (EXCHG_CODE = 'NSE' and SETTL_NO = :l_dl_exchgnord_upld_struct_h->h_settl_no) 
							   or (EXCHG_CODE = 'MCS' and SETTL_NO = :l_dl_exchgnord_upld_struct_h->h_settl_no)); /*Added by Tarkeshwar for MCS enhancement.*/
							/*End Changes: Added By Pavan for ISKB_2091 */
			IS_ANY_ORA_ERROR

			fprintf(g_flogfile,"\n l_scrip_grp=|%s| \n",l_scrip_grp);
			fprintf(g_flogfile," l_exch_instr_code=|%s| \n",l_exch_instr_code);
			if(!strcmp(l_dl_deal_struct_h->h_interfii_flg,"Y"))
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"6",1)==0 || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */

				}
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS") )
				{
					if(strcmp(l_scrip_grp,"IL")!=0)
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			else
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"5",1)==0  || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found for Non FII....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}
				}
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS")) //Added by PT for MCS Enhancement
				{
					if(strcmp(l_scrip_grp,"IL")==0)
					{
						fprintf(g_flogfile,"Skipping NON-InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			/** End Changes:Isolve-307:AmitB:08052007 **/
			strcpy(DealString,APL_NULL_STRING);

			if(APL_FAILURE == DealStringForm(l_dl_deal_struct_h,DealString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}

/*	printf("\n DealString=|%s| \n",DealString);*/
		
			strcpy(EOString,APL_NULL_STRING);

			if(APL_FAILURE == EOStringForm(l_dl_exchgnord_upld_struct_h,EOString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
			
/*printf("\n EOString=|%s| \n",EOString);*/

			if(APL_FAILURE == MatchDataStringForm(MatchDealDataString,MatchEODataString,ToleranceString,l_dl_deal_struct_h->h_exch_code,g_flogfile,l_debug_info_ptr))
			{
				CO_ProcMonitor(g_flogfile, "MatchDataStringForm returned failure", NULL, NULL);
				APL_GOBACK_FAIL		
			}


			printf("\n MatchDealDataString=|%s| \n",MatchDealDataString);
			printf("\n MatchEODataString=|%s| \n",MatchEODataString);


			if(APL_FAILURE == FuncMatch_1to1(l_dl_deal_struct_h,l_dl_exchgnord_upld_struct_h,DealString,EOString,MatchDealDataString,MatchEODataString,ToleranceString,&OrderMatch,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL		
			}

			if(OrderMatch=='Y')
			{	
				break;
			}


		/*commit_count++;	*/

	    }	

	
	   EXEC SQL CLOSE EO_inner1;
		IS_ANY_ORA_ERROR

	}

   EXEC SQL CLOSE deal_outer1;
	IS_ANY_ORA_ERROR


	/*commit_count=0;*/


APL_GOBACK_SUCCESS							

	  RETURN_SUCCESS:
		 CO_ProcMonitor(g_flogfile," Leaving OneToOne With Success",NULL,NULL);
		return(APL_SUCCESS);

	   
 	  RETURN_FAILURE:
	   CO_ProcMonitor(g_flogfile,"Failed Inside OneToOne",NULL,NULL);
		printf("\n Error Inside OneToOne \n");
	   	return(APL_FAILURE);
	   
}


int FuncMatch_1to1(SYS_DL_DEAL_STRUCT_H *p_dl_deal_struct_h,DL_EXCHGORD_UPLD_STRUCT_H *p_dl_exchgord_upld_struct_h,char *p_DealString,char *p_EOString,char *p_MatchDealDataString,char *p_MatchEODataString,char *p_ToleranceString,char *p_OrderMatch,FILE *g_flogfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char MatchFlag='Y';
	char **temp1;
	char **temp2;
	char **temp_tol;
	char *temp3;
	char *temp4;
	char *temp5[10];
	char *temp6[10];
	int  int_num_1=0;
	int  int_num_2=0;
	int  int_num_3=0;
	char p_source1[4000]=APL_NULL_STRING;
	char p_source2[4000]=APL_NULL_STRING;
	char p_source3[4000]=APL_NULL_STRING;
	char p_source4[4000]=APL_NULL_STRING;
	char p_source5[100]=APL_NULL_STRING;
	char CompareDealData[1000]=APL_NULL_STRING;
	char CompareEOData[1000]=APL_NULL_STRING;
	int i=0;
	int j=0;
	int k=0;
	double diff_nse=0;
	double diff_bse=0;
	double Bcomm=0;
	char P_EXCHG_CODE[10]=APL_NULL_STRING;
	char P_DEAL_CD[10]=APL_NULL_STRING;
	char P_FIELD[30]=APL_NULL_STRING;
	double Brkg_mod;
	double brkg_adjust=0;
   /*
	char nmfields[100]=APL_NULL_STRING;
	char t_nmfields[100]=APL_NULL_STRING;
	char l_chr_proc_desc[6]=APL_NULL_STRING;
   */

    /* ASHISH 30-08-2007 
	char nmfields[2001]=APL_NULL_STRING;
	char t_nmfields[2001]=APL_NULL_STRING;
	char l_chr_proc_desc[2001] = APL_NULL_STRING; 

	 ADDED BY AMISH - 31/10/2006 */
	
	/*Added by Prateek on 28102014 for Matching issue- START
	char nmfields[4001]=APL_NULL_STRING;
	char t_nmfields[4001]=APL_NULL_STRING;
	char l_chr_proc_desc[4001]=APL_NULL_STRING;
	Added by Prateek on 28102014 for Matching issue- END*/
	
	/* Added by Akshay for ISKB_11408 start*/
	char nmfields[32000]=APL_NULL_STRING;
	char t_nmfields[32000]=APL_NULL_STRING;
	char l_chr_proc_desc[32000]=APL_NULL_STRING;
	/* Added by Akshay for ISKB_11408 end*/
	
	
	char chr_amt[30] = APL_NULL_STRING;
	char chr_amt1[30] = APL_NULL_STRING;
	char chr_dl_amt[30] = APL_NULL_STRING;
	char chr_dl_amt1[30] = APL_NULL_STRING;
	char chr_net_amt[30] = APL_NULL_STRING;
	char chr_net_amt1[30] = APL_NULL_STRING;
	char chr_sett_amt[30] =  APL_NULL_STRING;
	char chr_sett_amt1[30] =  APL_NULL_STRING;
	char chr_amt2[30] = APL_NULL_STRING;
	char chr_dl_amt2[30] = APL_NULL_STRING;
	char chr_net_amt2[30] = APL_NULL_STRING;
	char chr_sett_amt2[30] =  APL_NULL_STRING;
		/* ADDED BY AMISH - 31/10/2006 */
	double amt_diff=0.0;	/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
	
	EXEC SQL BEGIN DECLARE SECTION;

		EXEC SQL VAR CompareDealData IS STRING;	
		EXEC SQL VAR CompareEOData IS STRING;
		EXEC SQL VAR p_source1 IS STRING;
		EXEC SQL VAR p_source2 IS STRING;
		EXEC SQL VAR p_source3 IS STRING;
		EXEC SQL VAR p_source4 IS STRING;
		EXEC SQL VAR p_source5 IS STRING;
		EXEC SQL VAR nmfields IS STRING;
		EXEC SQL VAR t_nmfields IS STRING;
		EXEC SQL VAR P_EXCHG_CODE IS STRING;
		EXEC SQL VAR P_DEAL_CD IS STRING;
		EXEC SQL VAR P_FIELD IS STRING;
		EXEC SQL VAR temp1 IS STRING;
		EXEC SQL VAR temp2 IS STRING;
		EXEC SQL VAR temp_tol IS STRING;
		EXEC SQL VAR l_chr_proc_desc IS STRING; 
		EXEC SQL VAR ret_val IS STRING; // Added for Equity Fund Confirmation

   EXEC SQL END DECLARE SECTION;

			
	memset(p_source1, NULL, sizeof(p_source1));
	memset(p_source2, NULL, sizeof(p_source2));
	memset(p_source3, NULL, sizeof(p_source3));
	memset(p_source4, NULL, sizeof(p_source4));
	memset(p_source5, NULL, sizeof(p_source5));
	memset(CompareDealData, NULL, sizeof(CompareDealData));
	memset(CompareEOData, NULL, sizeof(CompareEOData));

	strcpy(p_source1,p_MatchDealDataString);
	strcpy(p_source2,p_MatchEODataString);
	strcpy(p_source3,p_DealString);
	strcpy(p_source4,p_EOString);
	strcpy(p_source5,p_ToleranceString);

	

	if(APL_FAILURE == CO_SplitStr(p_source1,'#',&int_num_1,&temp1))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 1- Inside FuncMatch_1to1", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}	

 	if(APL_FAILURE == CO_SplitStr(p_source2,'#',&int_num_2,&temp2))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 2 - Inside FuncMatch_1to1", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}	
	if(APL_FAILURE == CO_SplitStr(p_source5,'#',&int_num_3,&temp_tol))
	{	
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 3 - Inside FuncMatch_1to1", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}	

		printf("\n *****CLIENT *********=|%s| \n",p_dl_deal_struct_h->h_dl_client);

	for(i=0;i<int_num_1;i++)
	{
	    CO_Rtv_DataString(p_source3,temp1[i],CompareDealData);
	    CO_Rtv_DataString(p_source4	,temp2[i],CompareEOData);
	   

        printf("\n Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);

		sprintf(chr_g_log_buffer,"\n 1TO1: Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);	
		CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

	   if(strcmp(CompareDealData,CompareEOData)==0)
	   {

	   }
	   else
	   {
		  strcpy(P_FIELD,temp1[i]);
		  strcpy(P_EXCHG_CODE,p_dl_deal_struct_h->h_exch_code);
		  strcpy(P_DEAL_CD,p_dl_deal_struct_h->h_dealcd);
		//if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0)  //Commented by Tarkeshwar for MCS enhancement.
		//Added BY Aakash for IOP-2 CS0028550
		  if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0  && (strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0 || strcmp(p_dl_deal_struct_h->h_exch_code,"MCS")==0 
		  ||  strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0)) 
		   {
			  /* changes by amish -- 31/10/2006 ************************************start */
					  /*
					  strcpy(chr_net_amt,CompareDealData);
					  */
					  printf("\namish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					  printf("\namish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);


				/*	  EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1 from dual;	*/
			                  EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1,:chr_amt2,:chr_dl_amt2 from dual;

							IS_ANY_ORA_ERROR

     				  printf("\namish*****deal & EO GROSS amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt,chr_dl_amt);
	   				  printf("\namish*****deal & EO GROSS amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt1,chr_dl_amt1);
					  printf("\namish*****deal & EO GROSS amount AFTER Total TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt2,chr_dl_amt2);

/****** 	IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******    					
   				      if(strcmp(chr_amt,chr_dl_amt)==0)
					   {
								printf("\n data matching after 1st Trunc off\n");

						
					   }
    				  else if(strcmp(chr_amt1,chr_dl_amt1)==0)
	    			   {
							printf("\n data matching after 2nd Trunc off\n");
							
										
		    		   }
					   else if(strcmp(chr_amt2,chr_dl_amt2)==0)
	    			   {
							printf("\n data matching after Total Trunc off\n");
							
										
		    		   }
			    	 else
			          {
*/						/*
						diff_nse=atof(CompareDealData) - atof(CompareEOData);
						*/
						diff_nse=atof(chr_amt1) - atof(chr_dl_amt1);
						Bcomm=p_dl_deal_struct_h->h_brokercomm;
						printf("\n Entered 1st if\n");
						printf("\n Difference NSE =|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_nse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);
		
						if(fabs(diff_nse) <= Bcomm*(atof(temp_tol[i]))/100)
						{	
							printf("\n $$$$$$$ Inside If loop diff_nse *****Vaibhav 19 August 2006********* $$$$$$$$\n");
							EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_nse
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;
							IS_ANY_ORA_ERROR

						}
						else
						{	
							temp4=temp1[i];
							temp6[k]=temp4;
							k++;
							MatchFlag='N';
						}
/*******  IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******
				   }
***/	   }
		
		  else if(strcmp(temp1[i],"NET_AMT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0)
		   {
			  
						printf("\namish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					    printf("\namish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);

    			/*	EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1 from dual;	*/
					EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1,:chr_net_amt2,:chr_sett_amt2 from dual;
							IS_ANY_ORA_ERROR
	    				printf("\namish*****deal & EO net amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt,chr_sett_amt);
    					printf("\namish*****deal & EO net amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt1,chr_sett_amt1);
						printf("\namish*****deal & EO net amount AFTER Total TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt2,chr_sett_amt2);
						/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
					    amt_diff=atof(CompareDealData) - atof(CompareEOData);
					    printf("\n Considering 1Rs Difference:amt_diff =|%lf|CompareDealData=|%s|CompareEOData=|%s| \n",amt_diff,CompareDealData,CompareEOData);

   				        if(strcmp(chr_net_amt,chr_sett_amt)==0)
					    {

						 printf("\n data matching after 1st Trunc off\n");

 					    }
    					else if(strcmp(chr_net_amt1,chr_sett_amt1)==0)
	    				{
							
							printf("\n data matching after 2nd Trunc off\n");
										
		    			}
						else if(strcmp(chr_net_amt2,chr_sett_amt2)==0)
	    				{
							
							printf("\n data matching after Total Trunc off\n");
										
		    			}
						/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
					    else if(fabs(amt_diff)<=1)
					    {
						  fprintf(g_flogfile,"\n data matching after After Considering 1Rs Difference \n");
							Alert("Amount Difference less than rupee 1 |%lf|",amt_diff);
							fflush(stdout);
						  EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:amt_diff
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;
							IS_ANY_ORA_ERROR
					    }
			    		else
				    	{
								/*
								diff_bse=atof(CompareDealData) - atof(CompareEOData);
								*/
								diff_bse=atof(chr_net_amt1) - atof(chr_sett_amt1);
								Bcomm=p_dl_deal_struct_h->h_brokercomm;
								printf("\n Entered 2nd if\n");
								printf("\n Difference BSE=|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_bse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);

								if(fabs(diff_bse) <= Bcomm*(atof(temp_tol[i]))/100)
								{
								printf("\n $$$$$$$ Inside If loop diff_bse *****Vaibhav 19 August 2006********* $$$$$$$$\n");	
								EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_bse
								WHERE a.client=:p_dl_deal_struct_h->h_dl_client
								AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;

								IS_ANY_ORA_ERROR
								}
								else
								{	
									temp4=temp1[i];
									temp6[k]=temp4;
									k++;
									MatchFlag='N';
								}
						}
					  /* changes by amish -- 31/10/2006 ************************************end */
		   }
		   
		  else
		  {		
				temp4=temp1[i];
				temp6[k]=temp4;
				k++;
				MatchFlag='N';
		  }		
	
	   }
			
	}


	
		
	if(MatchFlag=='N')
    {
		Alert("\n Supriya :: Debug :: Inside UNmatched orders \n");
 	    int n;
        for(n=0;n<k;n++)
	    {	
			strcat(t_nmfields,temp6[n]);
			if(n==k-1){}
			else
			{		
				strcat(t_nmfields,",");
			}
		}
		  strcat(nmfields,"Not Matched For: ");
		  strcat(nmfields,t_nmfields);

		  printf("\n DATA Did Not Match FOR Following Fields: |%s| \n",nmfields);
		  sprintf(chr_g_log_buffer,"\n|%s|\n",nmfields);
		  CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
		
		 printf("\n 1TO1 K=|%d| \n",k);
		  
		 if(k==1)
		 {	 
		  EXEC SQL INSERT INTO dl_match_rpt
				 VALUES(:p_dl_deal_struct_h->h_dl_client,
						 :p_dl_deal_struct_h->h_indentity_no,
						 :p_dl_exchgord_upld_struct_h->h_order_no,
						 :p_dl_deal_struct_h->h_settlement_no,
						 'CM',
						 'CLOSE Matched:'||:chr_g_log_buffer,
						 :p_dl_deal_struct_h->h_exch_code,
						 :p_dl_deal_struct_h->h_mkt_type);
		printf(" 4 sqlca.sqlcode is %d\n",sqlca.sqlcode);
		  IS_ANY_ORA_ERROR
		 }
		 else
		 {	 
		  EXEC SQL INSERT INTO dl_match_rpt
				 VALUES(:p_dl_deal_struct_h->h_dl_client,
						 :p_dl_deal_struct_h->h_indentity_no,
						 :p_dl_exchgord_upld_struct_h->h_order_no,
						 :p_dl_deal_struct_h->h_settlement_no,
						 NULL,
						 'Unmatched: 1 TO 1 '||:chr_g_log_buffer,
						 :p_dl_deal_struct_h->h_exch_code,
						 :p_dl_deal_struct_h->h_mkt_type);
		printf(" 5 sqlca.sqlcode is %d\n",sqlca.sqlcode);
		 IS_ANY_ORA_ERROR

		 }	
  		  strcpy(nmfields,APL_NULL_STRING);	
		 
	  printf("\n #### Deal Record NOT Matching with EO ####\n");
	 
    }    
	else
	{
		Alert("\n Supriya :: Debug :: Inside matched orders \n");
		Alert("Reference no is : |%s|\n",p_dl_deal_struct_h->h_indentity_no);
		*p_OrderMatch='Y';
		
		 EXEC SQL DELETE FROM dl_match_rpt WHERE deal_ref_no=:p_dl_deal_struct_h->h_indentity_no and client =:p_dl_deal_struct_h->h_dl_client; /* AND status!='CM'*/
		 IS_ANY_ORA_ERROR
		 EXEC SQL DELETE FROM dl_match_rpt WHERE order_no=:p_dl_exchgord_upld_struct_h->h_order_no; /* AND status!='CM'*/
		 IS_ANY_ORA_ERROR

/* Column added for BuySell-AmitB-060307*/
	     EXEC SQL INSERT INTO
				dl_match_orders VALUES(:p_dl_exchgord_upld_struct_h->h_exchg_code,
						:p_dl_exchgord_upld_struct_h->h_cln_code,:p_dl_exchgord_upld_struct_h->h_instr_code,
					:p_dl_exchgord_upld_struct_h->h_broker_cd,:p_dl_exchgord_upld_struct_h->h_settl_no,
					:p_dl_exchgord_upld_struct_h->h_deal_date,:p_dl_exchgord_upld_struct_h->h_mkt_type,
					:p_dl_deal_struct_h->h_indentity_no,'PM',:p_dl_exchgord_upld_struct_h->h_order_no,'1TO1',DECODE(:p_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B'));

		 IS_ANY_ORA_ERROR

		 EXEC SQL UPDATE dl_exchgord_upld a SET MATCHED='Y',status='PM',deal_ref_no=:p_dl_deal_struct_h->h_indentity_no
				   WHERE  a.order_no=:p_dl_exchgord_upld_struct_h->h_order_no
					AND		a.client=:p_dl_exchgord_upld_struct_h->h_cln_code
			 		AND		a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd  /* Added Broker Code for ISKB_2014 */
					AND		a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no		  /* Added Settlement No. for ISKB_2014 */
			        AND		a.status = 'AA';   /*ISKB-401, Add by ASHISH 30-08-2007 */

/*					AND		a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND		a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND		a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type

*/		

         printf("\n Error to update dl_exchgord_upld in 1TO1 = |%d| \n",sqlca.sqlcode);   /* ASHISH 30-08-2007 */
		 IS_ANY_ORA_ERROR
		
		 brkg_adjust=(fabs(diff_nse) > 0 ) ? diff_nse : diff_bse;
		
		 	
		 strcpy(l_chr_proc_desc,((fabs(brkg_adjust) > 0) ? "1TO1T":"1TO1-"));
	
		 printf("\n ************************** Applying Tolerance 1-1 ***************************** \n");
			
		 printf("\n diff_nse	=|%lf| diff_bse	=|%lf|	\n",diff_nse,diff_bse);

		 printf("\n l_chr_proc_desc=|%s|  brkg_adjust=|%lf|\n",l_chr_proc_desc,brkg_adjust);

		 printf("\n ************************** Applying Tolerance  1-1 ***************************** \n");


		 EXEC SQL INSERT INTO 
						dl_match_deals VALUES(:p_dl_deal_struct_h->h_dl_client,
											   :p_dl_deal_struct_h->h_dlt,
	 										   :p_dl_deal_struct_h->h_brkrno,
											   :p_dl_deal_struct_h->h_exch_code,	
											   :p_dl_deal_struct_h->h_amt,
											   :p_dl_deal_struct_h->h_qty,
											   :p_dl_deal_struct_h->h_dealcd,	
											   :p_dl_deal_struct_h->h_instr_code,
  											   :p_dl_deal_struct_h->h_settlement_no,  
  											   :p_dl_deal_struct_h->h_mkt_type, 			
  											   'PM',
											   :p_dl_deal_struct_h->h_indentity_no,
											   :brkg_adjust,:l_chr_proc_desc);
		if(sqlca.sqlcode)
		{
			printf("\n Failed INSERT into dl_match_deals \n");
		}

		IS_ANY_ORA_ERROR

		/* Changes done for Equity Fund Confirmation implementation -Start */
		
			 memset(ret_val,APL_NULL_CHAR,sizeof(ret_val));
	
	 EXEC SQL SELECT GETCLIENTPARAMBYID('EARLY_PAYIN_FND',:p_dl_deal_struct_h->h_dl_client) into :ret_val FROM DUAL;
	 
		printf("\n ret_val is %s",ret_val);
	 
	 
	 if((!strcmp(p_dl_deal_struct_h->h_dealcd,"4"))&&(!strcmp(ret_val,"Y")))
	 {
	
		EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='Y',pltopl_flg='G',
			brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0)			
					WHERE a.client=:p_dl_deal_struct_h->h_dl_client
					AND	  a.identiy_no=:p_dl_deal_struct_h->h_indentity_no
                    AND   a.deal_stat = 'RC'; /* KOTAK to HDFC Retro - Rahul 03Sept2007 */
					IS_ANY_ORA_ERROR
	}
	else
	{
	
		EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='Y',
			brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0)		
					WHERE a.client=:p_dl_deal_struct_h->h_dl_client
					AND	  a.identiy_no=:p_dl_deal_struct_h->h_indentity_no
                    AND   a.deal_stat = 'RC'; /* KOTAK to HDFC Retro - Rahul 03Sept2007 */
					IS_ANY_ORA_ERROR
	}
		
		/*EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='Y',
			brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0)			
					WHERE a.client=:p_dl_deal_struct_h->h_dl_client
					AND	  a.identiy_no=:p_dl_deal_struct_h->h_indentity_no
			        AND a.deal_stat = 'RC';   /* ISKB-401, Add by ASHISH 30-08-2007 */
		/* Changes done for Equity Fund implementation -End */			
					
/* Sample code for position 
		if ( APL_FAILURE == DL_Mod_Posn("CLN-01","INSTR-01","NSDL","",'U','4',100,'D',"FREE",l_debug_info_prt) )
		{
			printf("\n Failed in reducing Unconfimrmed positions \n");
		}
		if ( APL_FAILURE == DL_Mod_Posn("CLN-01","INSTR-01","NSDL","",'U','4',100,'D',"FREE",l_debug_info_prt) )
		{
			printf("\n Failed in reducing Unconfimrmed positions \n");
		}
*/
	     printf("\n Error to update DL_DEAL in 1TO1 = |%d| \n",sqlca.sqlcode);  /* ASHISH 30-08-2007 */
		 IS_ANY_ORA_ERROR	

	     printf("\n **** Deal Record Matching with EO ****\n");
	}	 	

APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile," Leaving FuncMatch_1to1 with Success",NULL,NULL);
		return(APL_SUCCESS);
		
   RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile," Failed Inside FuncMatch_1to1",NULL,NULL);
		printf("Inside FuncMatch - Failed");
		return(APL_FAILURE);
 }  




int OneToMany(char *MatchDealDataString,
			  char *MatchEODataString,
			  char *ToleranceString,
			  char *p_settlement_no,
			  char *p_mkt_type,
			  char *p_exchange,
			  char *p_client_master,
			 char *p_client_code,
			 char *p_trade_type,
			  char **argv,
			  FILE *g_flogfile,
			  DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{	
	 
	char  OrderMatch='N';	
	char  P_EXCHG_CODE[10]=APL_NULL_STRING;
	char  DealString[4000] = APL_NULL_STRING;
	char  EOString[4000] = APL_NULL_STRING;
	int l_one_to_may_records = 0;
	/** Isolve-307:AmitB:08052007 **/
	 char  l_exch_instr_code[13]=APL_NULL_STRING;
	 char  l_scrip_grp[5]=APL_NULL_STRING;
	 short i_exch_instr_code = 0;
	 short i_scrip_grp = 0;
	
	// Pankaj Deshpande
	char  	*l_sqlstmt = (char *)NULL;
	char  	*l_sqlstmt_append = APL_NULL_STRING;
	
	EXEC SQL VAR DealString IS STRING;
	EXEC SQL VAR EOString IS STRING;
	
	// Addded by Pankaj Deshpande - Starts 
	EXEC SQL VAR p_client_master IS STRING;
	EXEC SQL VAR p_client_code IS STRING;
	EXEC SQL VAR p_trade_type IS STRING;
	// Addded by Pankaj Deshpande - Ends  
	
	SYS_DL_DEAL_STRUCT_H *l_dl_deal_struct_h= NULL;
	SYS_DL_DEAL_STRUCT_I *l_dl_deal_struct_i= NULL;
		
	DL_EXCHGORD_UPLD_STRUCT_H *l_dl_exchgnord_upld_struct_h= NULL;
	DL_EXCHGORD_UPLD_STRUCT_I *l_dl_exchgnord_upld_struct_i= NULL;
	

	EXEC SQL BEGIN DECLARE SECTION;

		EXEC SQL VAR l_dl_deal_struct_h->h_dl_client IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_settlement_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_exch_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_brkrno IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dlt IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dealcd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_indentity_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_domcpclt_cd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_countclt IS STRING;

		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_cln_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_exchg_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_settl_no IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_deal_date IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_broker_cd IS STRING;


	EXEC SQL END DECLARE SECTION;


	l_dl_deal_struct_h=(SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_deal_struct_h)
	l_dl_deal_struct_i=(SYS_DL_DEAL_STRUCT_I *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_deal_struct_i)

	l_dl_exchgnord_upld_struct_h=(DL_EXCHGORD_UPLD_STRUCT_H *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_h)
	l_dl_exchgnord_upld_struct_i=(DL_EXCHGORD_UPLD_STRUCT_I *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_i)

	memset(l_dl_deal_struct_h, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
	memset(l_dl_exchgnord_upld_struct_h, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_H));

	memset(l_dl_deal_struct_i, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
	memset(l_dl_exchgnord_upld_struct_i, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_I));

	l_sqlstmt = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	l_sqlstmt_append = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	// Pankaj Deshpande - Ends  
	
	printf("\n\n ***********************************************************");
	printf("\n				STARTING 1 TO MANY MATCHING				 \n");
	printf("\n	***********************************************************\n");

	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n			STARTING 1 TO MANY MATCHING					 ",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);

	if(strcmp(p_mkt_type,APL_NULL_STRING) == 0)
		strcpy(p_mkt_type,"%");

    if(strcmp(p_exchange,APL_NULL_STRING) == 0)
	    strcpy(p_exchange,"%");

	// Added by Pankaj Deshpande - starts 
	if(strcmp(p_client_code,APL_NULL_STRING) == 0)
	    strcpy(p_exchange,"%");
	if(strcmp(p_client_master,APL_NULL_STRING) == 0)
	    strcpy(p_exchange,"%");
	// Added by Pankaj Deshpande - ends

	/** TUX added condition EX_Arena ***/
	/** Isolve-307:AmitB:08052007 **/
	
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	
	
	sprintf(l_sqlstmt," SELECT client,instr_code,deal_date,deal_cd,qty,amount,identiy_no,brokercomm,NET_AMT,domestic_cpclt,interfii_flg, ");
	sprintf(l_sqlstmt_append, "decode('%s','T',trd_mkt_type,mkt_type),decode('%s','T',trd_setl_no,settlement_no),decode('%s','T',trd_exch,exch_code) ", chr_trd_setl_ind,chr_trd_setl_ind,chr_trd_setl_ind);
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	sprintf(l_sqlstmt_append, " FROM dl_deal a, MT_CLIENT B WHERE ((TRD_EXCH LIKE '%s' AND TRD_MKT_TYPE LIKE '%s' AND TRD_SETL_NO = '%s' AND 'T' = '%s') OR (EXCH_CODE LIKE '%s' AND MKT_TYPE LIKE '%s' AND SETTLEMENT_NO = '%s' AND 'S' = '%s')) AND A.CLIENT= B.CLN_CODE AND A.CLIENT LIKE '%s' AND B.CLN_MASTER LIKE '%s' ", p_exchange, p_mkt_type, p_settlement_no, chr_trd_setl_ind, p_exchange, p_mkt_type, p_settlement_no, chr_trd_setl_ind, p_client_code, p_client_master  );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	sprintf(l_sqlstmt_append, " AND deal_stat='RC' AND CLH_FLG = 'C' AND a.DL_CLASS != '40' AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL) AND NOT EXISTS (SELECT 'X' FROM dl_match_deals b WHERE a.client=b.client AND a.exch_code=b.exch_code 	AND a.instr_code=b.instr_code AND a.settlement_no=b.settlement_no AND a.mkt_type=b.mkt_type AND a.DL_CLASS != '40' AND a.domestic_cpclt=b.brk_no AND a.identiy_no=b.ident_no AND b.matched='PM') " );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	if(strcmp(p_trade_type,"BUY")==0)
	{
		sprintf(l_sqlstmt_append," AND A.DEAL_CD in ('2','4') ");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	
	}
	else if(strcmp(p_trade_type,"SELL")==0)
	{
		sprintf(l_sqlstmt_append," AND A.DEAL_CD in ('1','3') ");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	}
	else
	{
		sprintf(l_sqlstmt_append," AND A.DEAL_CD in ('1','2','3','4') ");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	}
	
	printf("\n PPD: query for the cursor 222  3333: |%s|", l_sqlstmt);
			fflush(stdout);
			
	EXEC SQL PREPARE sss1 FROM :l_sqlstmt;
	IS_ANY_ORA_ERROR
	
	EXEC SQL DECLARE deal_outer2 CURSOR FOR sss1;
    EXEC SQL OPEN deal_outer2;
	IS_ANY_ORA_ERROR
		
	 for(;;)
	 {
		 printf("PPD: 2323");
		 fflush(stdout);
		 
		   EXEC SQL FETCH deal_outer2 INTO :l_dl_deal_struct_h->h_dl_client:l_dl_deal_struct_i->i_dl_client,
										:l_dl_deal_struct_h->h_instr_code:l_dl_deal_struct_i->i_instr_code,
										  :l_dl_deal_struct_h->h_dlt:l_dl_deal_struct_i->i_dlt,
										  :l_dl_deal_struct_h->h_dealcd:l_dl_deal_struct_i->i_dealcd,
										  :l_dl_deal_struct_h->h_qty:l_dl_deal_struct_i->i_qty,
										  :l_dl_deal_struct_h->h_amt:l_dl_deal_struct_i->i_amt,
										  :l_dl_deal_struct_h->h_indentity_no:l_dl_deal_struct_i->i_indentity_no,
										  :l_dl_deal_struct_h->h_brokercomm:l_dl_deal_struct_i->i_brokercomm,
										  :l_dl_deal_struct_h->h_net_amt:l_dl_deal_struct_i->i_net_amt,
										  :l_dl_deal_struct_h->h_brkrno:l_dl_deal_struct_i->i_brkrno,
										  :l_dl_deal_struct_h->h_interfii_flg:l_dl_deal_struct_i->i_interfii_flg,
										  :l_dl_deal_struct_h->h_mkt_type:l_dl_deal_struct_i->i_mkt_type,
										  :l_dl_deal_struct_h->h_settlement_no:l_dl_deal_struct_i->i_settlement_no,
										  :l_dl_deal_struct_h->h_exch_code:l_dl_deal_struct_i->i_exch_code
										  ;

		   if(sqlca.sqlcode)
			{
				printf("\n ERROR FETCHING DEAL DATA MTOM :|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n ERROR FETCHING DEAL DATA MTOM :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

		   if(APL_ZERO_RESULT_SET)
			    break;
		   IS_ANY_ORA_ERROR
		

		   sprintf(chr_g_log_buffer,"\n 1TOM Deal:IndentiyNo=|%s| Client=|%s| Exch_code=|%s|Setttlementno=|%s| MktType=|%s|InstrCode=|%s|Broker=|%s| DealDate=|%s|BUY/SELL=|%s|Qty=|%lf| Amount=|%lf| NetAmount=|%lf| Brokercomm=|%lf|\n",
								  l_dl_deal_struct_h->h_indentity_no,
								  l_dl_deal_struct_h->h_dl_client,
								  l_dl_deal_struct_h->h_exch_code,
								  l_dl_deal_struct_h->h_settlement_no,
								  l_dl_deal_struct_h->h_mkt_type,
							  	  l_dl_deal_struct_h->h_instr_code,
								  l_dl_deal_struct_h->h_brkrno,
								  l_dl_deal_struct_h->h_dlt,
								  l_dl_deal_struct_h->h_dealcd,
								  l_dl_deal_struct_h->h_qty,
								  l_dl_deal_struct_h->h_amt,
								  l_dl_deal_struct_h->h_net_amt,
								  l_dl_deal_struct_h->h_brokercomm);
	
		  CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

		   l_one_to_may_records =0;
		   EXEC SQL 
			   SELECT count(*) into :l_one_to_may_records
				  FROM dl_exchgord_upld a
				  WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
				  AND settl_no=:l_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:l_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:l_dl_deal_struct_h->h_instr_code
				  AND client=:l_dl_deal_struct_h->h_dl_client
					/* commented by amish - 30/10/2006 */
				  /*
			      AND deal_date=:l_dl_deal_struct_h->h_dlt
				  */
/*				  AND decode(BUY_SELL_FLG,'B','4','S','3')=:l_dl_deal_struct_h->h_dealcd	*/
   				  AND buy_sell_flg=DECODE(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
				  AND broker_cd=:l_dl_deal_struct_h->h_brkrno
				  AND nvl(matched,'N')!='Y'
			      AND a.status='AA'
				  AND NOT EXISTS (SELECT 'X' FROM dl_match_orders b
								WHERE b.order_no=a.order_no
								AND b.client=a.client
								AND b.exchg_code=a.exchg_code
								AND b.instr_code=a.instr_code
								AND b.settl_no=a.settl_no
								/* commented by amish - 30/10/2006 */
								/*
								AND	b.deal_date=a.deal_date
								*/
								AND b.mkt_type=a.mkt_type
								AND b.broker_cd=a.broker_cd
								AND b.buy_sell_flg=a.buy_sell_flg	/* Condn added for BuySell-AmitB-060307*/
								AND b.matched='PM')
				GROUP BY client,settl_no,mkt_type,instr_code,deal_date,broker_cd,exchg_code,BUY_SELL_FLG;

			if (l_one_to_may_records == 1)
			{
				fprintf(g_flogfile,"\n There is only one order for deal=|%s| which is already selected in 1TO1 matching.. Hence skipping 1TOM for this Deal..\n",l_dl_deal_struct_h->h_indentity_no);
				continue;
/*				EXEC SQL CLOSE deal_outer2;
				IS_ANY_ORA_ERROR
				EXEC SQL COMMIT WORK ;
				APL_GOBACK_SUCCESS;
*/
			}
			else
			{
				printf("\n No of records selected in 1TOM are |%d|\n",l_one_to_may_records);
				sprintf(chr_g_log_buffer,"\n No of records selected in 1TOM are:|%d|",l_one_to_may_records);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

		   EXEC SQL DECLARE EO_inner2 CURSOR FOR
			   SELECT client,exchg_code,settl_no,mkt_type,instr_code,deal_date,broker_cd,SUM(qty)as QTY,SUM(dl_amt) as AMOUNT,BUY_SELL_FLG
				  FROM dl_exchgord_upld a
				  WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
				  AND settl_no=:l_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:l_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:l_dl_deal_struct_h->h_instr_code
				  AND client=:l_dl_deal_struct_h->h_dl_client
					/* commented by amish - 30/10/2006 */
					/*
			      AND deal_date=:l_dl_deal_struct_h->h_dlt
				  */
/*				  AND decode(BUY_SELL_FLG,'B','4','S','3')=:l_dl_deal_struct_h->h_dealcd	*/
   				  AND buy_sell_flg=DECODE(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
				  AND broker_cd=:l_dl_deal_struct_h->h_brkrno
				  AND nvl(matched,'N')!='Y'
			      AND a.status='AA'
				  AND NOT EXISTS (SELECT 'X' FROM dl_match_orders b
								WHERE b.order_no=a.order_no
								AND b.client=a.client
								AND b.exchg_code=a.exchg_code
								AND b.instr_code=a.instr_code
								AND b.settl_no=a.settl_no
								/* commented by amish - 30/10/2006 */
								/*
								AND	b.deal_date=a.deal_date
								*/
								AND b.mkt_type=a.mkt_type
								AND b.broker_cd=a.broker_cd
								AND b.buy_sell_flg=a.buy_sell_flg	/* Condn added for BuySell-AmitB-060307*/
								AND b.matched='PM')
				GROUP BY client,settl_no,mkt_type,instr_code,deal_date,broker_cd,exchg_code,BUY_SELL_FLG;

	
		EXEC SQL OPEN EO_inner2;
		IS_ANY_ORA_ERROR
			
	
		for(;;)
		{
		
			EXEC SQL FETCH EO_inner2 INTO
						:l_dl_exchgnord_upld_struct_h->h_cln_code:l_dl_exchgnord_upld_struct_i->i_cln_code,
						:l_dl_exchgnord_upld_struct_h->h_exchg_code:l_dl_exchgnord_upld_struct_i->i_exchg_code,
						:l_dl_exchgnord_upld_struct_h->h_settl_no:l_dl_exchgnord_upld_struct_i->i_settl_no,
						:l_dl_exchgnord_upld_struct_h->h_mkt_type:l_dl_exchgnord_upld_struct_i->i_mkt_type,
						:l_dl_exchgnord_upld_struct_h->h_instr_code:l_dl_exchgnord_upld_struct_i->i_instr_code,
						:l_dl_exchgnord_upld_struct_h->h_deal_date:l_dl_exchgnord_upld_struct_i->i_deal_date,
						:l_dl_exchgnord_upld_struct_h->h_broker_cd:l_dl_exchgnord_upld_struct_i->i_broker_cd,
						:l_dl_exchgnord_upld_struct_h->h_qty:l_dl_exchgnord_upld_struct_i->i_qty,
						:l_dl_exchgnord_upld_struct_h->h_dl_amt:l_dl_exchgnord_upld_struct_i->i_dl_amt,
						:l_dl_exchgnord_upld_struct_h->h_buy_sell_flg:l_dl_exchgnord_upld_struct_i->i_buy_sell_flg;
		
		 
			if(sqlca.sqlcode)
			{
				printf("\n ERROR FETCHING EO DATA 1TOM :|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n ERROR FETCHING EO DATA 1TOM :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}
	
			if(APL_ZERO_RESULT_SET)
				break;
		 	IS_ANY_ORA_ERROR
			
			
			sprintf(chr_g_log_buffer,"\n 1TO1 EO:Client=|%s|Exch_code=|%s|Setttlementno=|%s|MktType=|%s|InstrCode=|%s|Broker=|%s|DealDate=|%s|Qty=|%lf| Amount=|%lf|\n",
									l_dl_exchgnord_upld_struct_h->h_cln_code,
									l_dl_exchgnord_upld_struct_h->h_exchg_code,
									l_dl_exchgnord_upld_struct_h->h_settl_no,
									l_dl_exchgnord_upld_struct_h->h_mkt_type,
									l_dl_exchgnord_upld_struct_h->h_instr_code,
									l_dl_exchgnord_upld_struct_h->h_broker_cd,
									l_dl_exchgnord_upld_struct_h->h_deal_date,
									l_dl_exchgnord_upld_struct_h->h_qty,
									l_dl_exchgnord_upld_struct_h->h_dl_amt);

			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);


			OrderMatch='N';
			/** Start Changes:Isolve-307:AmitB:08052007 **/
			EXEC SQL select distinct exch_instr_code,scrip_grp into :l_exch_instr_code:i_exch_instr_code,:l_scrip_grp:i_scrip_grp
							from DL_EXCHGORD_UPLD
							WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
							  AND settl_no=:l_dl_deal_struct_h->h_settlement_no
							  AND mkt_type=:l_dl_deal_struct_h->h_mkt_type
							  AND instr_code=:l_dl_deal_struct_h->h_instr_code
							  AND client=:l_dl_deal_struct_h->h_dl_client
							  AND buy_sell_flg=DECODE(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
							  AND broker_cd=:l_dl_deal_struct_h->h_brkrno
							  AND nvl(matched,'N')!='Y'
							  AND status='AA'
							  AND rownum=1;
			IS_ANY_ORA_ERROR
			
			fprintf(g_flogfile,"\n l_scrip_grp=|%s| \n",l_scrip_grp);
			fprintf(g_flogfile," l_exch_instr_code=|%s| \n",l_exch_instr_code);
			if(!strcmp(l_dl_deal_struct_h->h_interfii_flg,"Y"))
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"6",1)==0  || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found for FII....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}

				}
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS")) //Added by Prashant for MCS Enhancement
				{
					if(strcmp(l_scrip_grp,"IL")!=0)
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			else
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"5",1)==0  || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found ....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}
				}
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS")) //Added BY PT For MCS Enhancement
				{
					if(strcmp(l_scrip_grp,"IL")==0)
					{
						fprintf(g_flogfile,"Skipping NON-InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			/** End Changes:Isolve-307:AmitB:08052007 **/

			/* ISKB-1723 : ASHISH 20-08-2008 Start */

			if(APL_FAILURE == create_Exch_Order_List(l_dl_exchgnord_upld_struct_h,"1TOM",g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL;
			}

			/* ASHISH 20-08-2008 End */
			

			strcpy(DealString,APL_NULL_STRING);

			if(APL_FAILURE == DealStringForm(l_dl_deal_struct_h,DealString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
			strcpy(EOString,APL_NULL_STRING);

			if(APL_FAILURE == EOStringForm(l_dl_exchgnord_upld_struct_h,EOString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
			if(APL_FAILURE == MatchDataStringForm(MatchDealDataString,MatchEODataString,ToleranceString,l_dl_deal_struct_h->h_exch_code,g_flogfile,l_debug_info_ptr))
			{
				CO_ProcMonitor(g_flogfile, "MatchDataStringForm Returned Failure", NULL, NULL);
				APL_GOBACK_FAIL		
			}

			if(APL_FAILURE == FuncMatch_1toM(l_dl_deal_struct_h,l_dl_exchgnord_upld_struct_h,DealString,EOString,MatchDealDataString,MatchEODataString,ToleranceString,&OrderMatch,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL		
			}
			


			if(OrderMatch=='Y')
			{	
				break;
			}

		
		/*commit_count++;*/


		}
		
		EXEC SQL CLOSE EO_inner2;
		IS_ANY_ORA_ERROR
		
	 }

	EXEC SQL CLOSE deal_outer2;
	IS_ANY_ORA_ERROR

	EXEC SQL COMMIT WORK ;
	

		/*commit_count=0;*/



APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile," Leaving FuncMatch_1to1 With Success ",NULL,NULL);
		return(APL_SUCCESS);
	   
 	  RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile," Failed inside OneToMany",l_debug_info_ptr,NULL);
		printf("\n Error Inside OneToMany \n");
	   	return(APL_FAILURE);

}			  /*	1toMany End		   */


int FuncMatch_1toM(SYS_DL_DEAL_STRUCT_H *p_dl_deal_struct_h,DL_EXCHGORD_UPLD_STRUCT_H *p_dl_exchgord_upld_struct_h,char *p_DealString,char *p_EOString,char *p_MatchDealDataString,char *p_MatchEODataString,char *p_ToleranceString,char *p_OrderMatch,FILE *g_flogfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char MatchFlag='Y';
	char **temp1;
	char **temp2;
	char **temp_tol;
	char *temp3;
	char *temp4;
	char *temp5[10];
	char *temp6[10];
	int  int_num_1=0;
	int  int_num_2=0;
	int  int_num_3=0;
	char p_source1[4000]=APL_NULL_STRING;
	char p_source2[4000]=APL_NULL_STRING;
	char p_source3[4000]=APL_NULL_STRING;
	char p_source4[4000]=APL_NULL_STRING;
	char p_source5[100]=APL_NULL_STRING;
	char CompareDealData[1000]=APL_NULL_STRING;
	char CompareEOData[1000]=APL_NULL_STRING;
	int i=0;
	int j=0;
	int k=0;
	int l_already_present = 0;
	double diff_nse=0;
	double diff_bse=0;
	double Bcomm=0;
	char P_EXCHG_CODE[10]=APL_NULL_STRING;
	char P_DEAL_CD[10]=APL_NULL_STRING;
	char P_FIELD[30]=APL_NULL_STRING;
	double brkg_adjust=0;
	/*
	char nmfields[100]=APL_NULL_STRING;
	char t_nmfields[100]=APL_NULL_STRING;
	char l_chr_proc_desc[6]=APL_NULL_STRING;
 	*/

    /* Changed by ASHISH 30-08-2007 
	char nmfields[2001]=APL_NULL_STRING;
	char t_nmfields[2001]=APL_NULL_STRING;
	char l_chr_proc_desc[2001]=APL_NULL_STRING;  

	 ADDED BY AMISH - 31/10/2006 */

	/*Added By Prateek on 28102014 for MAtching issue-START
	char nmfields[4001]=APL_NULL_STRING;
	char t_nmfields[4001]=APL_NULL_STRING;
	char l_chr_proc_desc[4001]=APL_NULL_STRING;
	Added By Prateek on 28102014 for MAtching issue-END*/
	
	/* Added by Akshay for ISKB_11408 start*/
	char nmfields[32000]=APL_NULL_STRING;
	char t_nmfields[32000]=APL_NULL_STRING;
	char l_chr_proc_desc[32000]=APL_NULL_STRING;
	/* Added by Akshay for ISKB_11408 end*/
	
	char chr_amt[30] = APL_NULL_STRING;
	char chr_amt1[30] = APL_NULL_STRING;
	char chr_dl_amt[30] = APL_NULL_STRING;
	char chr_dl_amt1[30] = APL_NULL_STRING;
	char chr_net_amt[30] = APL_NULL_STRING;
	char chr_sett_amt[30] =  APL_NULL_STRING;
	char chr_net_amt1[30] = APL_NULL_STRING;
	char chr_sett_amt1[30] =  APL_NULL_STRING;
	char chr_amt2[30] = APL_NULL_STRING;
	char chr_dl_amt2[30] = APL_NULL_STRING;
	char chr_net_amt2[30] = APL_NULL_STRING;
	char chr_sett_amt2[30] =  APL_NULL_STRING;
	/* ADDED BY AMISH - 31/10/2006 */
	double amt_diff=0.0;	/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
			
	EXEC SQL BEGIN DECLARE SECTION;

		EXEC SQL VAR CompareDealData IS STRING;	
		EXEC SQL VAR CompareEOData IS STRING;
		EXEC SQL VAR p_source1 IS STRING;
		EXEC SQL VAR p_source2 IS STRING;
		EXEC SQL VAR p_source3 IS STRING;
		EXEC SQL VAR p_source4 IS STRING;
		EXEC SQL VAR p_source5 IS STRING;
		EXEC SQL VAR nmfields IS STRING;
		EXEC SQL VAR t_nmfields IS STRING;
		EXEC SQL VAR P_EXCHG_CODE IS STRING;
		EXEC SQL VAR P_DEAL_CD IS STRING;
		EXEC SQL VAR P_FIELD IS STRING;
		EXEC SQL VAR temp1 IS STRING;
		EXEC SQL VAR temp2 IS STRING;
		EXEC SQL VAR temp_tol IS STRING;
		EXEC SQL VAR l_chr_proc_desc IS STRING;
		EXEC SQL VAR ret_val IS STRING;  // Added for Equity Fund Confirmation
		

   EXEC SQL END DECLARE SECTION;

	memset(p_source1, NULL, sizeof(p_source1));
	memset(p_source2, NULL, sizeof(p_source2));
	memset(p_source3, NULL, sizeof(p_source3));
	memset(p_source4, NULL, sizeof(p_source4));
	memset(p_source5, NULL, sizeof(p_source5));
	memset(CompareDealData, NULL, sizeof(CompareDealData));
	memset(CompareEOData, NULL, sizeof(CompareEOData));

	strcpy(p_source1,p_MatchDealDataString);
	strcpy(p_source2,p_MatchEODataString);
	strcpy(p_source3,p_DealString);
	strcpy(p_source4,p_EOString);
	strcpy(p_source5,p_ToleranceString);

	

	if(APL_FAILURE == CO_SplitStr(p_source1,'#',&int_num_1,&temp1))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 1- Inside FuncMatch_1toM ", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}	

 	if(APL_FAILURE == CO_SplitStr(p_source2,'#',&int_num_2,&temp2))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 2- Inside FuncMatch_1toM ", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}	
	if(APL_FAILURE == CO_SplitStr(p_source5,'#',&int_num_3,&temp_tol))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 3- Inside FuncMatch_1toM ", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}	

		printf("\n ********CLIENT*****=|%s| \n",p_dl_deal_struct_h->h_dl_client);

	for(i=0;i<int_num_1;i++)
	{
	    CO_Rtv_DataString(p_source3,temp1[i],CompareDealData);
	    CO_Rtv_DataString(p_source4	,temp2[i],CompareEOData);
	   
        printf("\n Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);

		sprintf(chr_g_log_buffer,"\n 1TOM:  Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);
		CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

	   if(strcmp(CompareDealData,CompareEOData)==0)
	   {

	   }
	   else
	   {
		  strcpy(P_FIELD,temp1[i]);
		  strcpy(P_EXCHG_CODE,p_dl_deal_struct_h->h_exch_code);
		  strcpy(P_DEAL_CD,p_dl_deal_struct_h->h_dealcd);

			
		   //if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0) //Commented by Tarkeshwar for MCS enhancement
		   //added By Aakash for IOP-2 CS0028550
		   if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0 && (strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0 || strcmp(p_dl_deal_struct_h->h_exch_code,"MCS")==0 
		   || strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0)) 
		   {
			   /* changes by amish -- 31/10/2006 ************************************8start */
					  /*
					  strcpy(chr_net_amt,CompareDealData);
					  */
					  printf("\namish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					  printf("\namish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);


				/*	  EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1 from dual;	*/
					  EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1,:chr_amt2,:chr_dl_amt2 from dual;

							IS_ANY_ORA_ERROR

     				  printf("\namish*****deal & EO GROSS amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt,chr_dl_amt);
	   				  printf("\namish*****deal & EO GROSS amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt1,chr_dl_amt1);
					  printf("\namish*****deal & EO GROSS amount AFTER Total TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt2,chr_dl_amt2);
/****** 	IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******
    					
   				      if(strcmp(chr_amt,chr_dl_amt)==0)
					   {
								printf("\n data matching after 1st Trunc off\n");

						
					   }
    				  else if(strcmp(chr_amt1,chr_dl_amt1)==0)
	    			   {
							printf("\n data matching after 2nd Trunc off\n");
							
										
		    		   }
					   else if(strcmp(chr_amt2,chr_dl_amt2)==0)
	    			   {
							printf("\n data matching after Total Trunc off\n");
							
										
		    		   }
			    	 else
			          {
*/						/*
						diff_nse=atof(CompareDealData) - atof(CompareEOData);
						*/
						diff_nse=atof(chr_amt1) - atof(chr_dl_amt1);
						Bcomm=p_dl_deal_struct_h->h_brokercomm;
						printf("\n Entered 1st if\n");
						printf("\n Difference NSE =|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_nse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);
		
						if(fabs(diff_nse) <= Bcomm*(atof(temp_tol[i]))/100)
						{	
							printf("\n $$$$$$$ Inside If loop diff_nse *****Vaibhav 19 August 2006********* $$$$$$$$\n");
							EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_nse
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;
							IS_ANY_ORA_ERROR

						}
						else
						{	
							temp4=temp1[i];
							temp6[k]=temp4;
							k++;
							MatchFlag='N';
						}

/****** 	IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******					  
				}

*/		   }
		  else if(strcmp(temp1[i],"NET_AMT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0)
		   {
			  
						printf("\namish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					    printf("\namish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);

    			/*	    EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1 from dual;	*/
						EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1,:chr_net_amt2,:chr_sett_amt2 from dual;

							IS_ANY_ORA_ERROR

	    				printf("\namish*****deal & EO net amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt,chr_sett_amt);
    					printf("\namish*****deal & EO net amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt1,chr_sett_amt1);
						printf("\namish*****deal & EO net amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt2,chr_sett_amt2);
						/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
					    amt_diff=atof(CompareDealData) - atof(CompareEOData);

   				        if(strcmp(chr_net_amt,chr_sett_amt)==0)
					    {

						 printf("\n data matching after 1st trunc off\n");

 					    }
    					else if(strcmp(chr_net_amt1,chr_sett_amt1)==0)
	    				{
							
							printf("\n data matching after 2nd trunc off\n");
										
		    			}
						else if(strcmp(chr_net_amt2,chr_sett_amt2)==0)
	    				{
							
							printf("\n data matching after Total trunc off\n");
										
		    			}
						/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
					    else if(fabs(amt_diff)<=1)
					    {
							Alert("Amount Difference less than rupee 1 |%lf|",amt_diff);
							fflush(stdout);
						  fprintf(g_flogfile,"\n data matching after After Considering 1Rs Difference \n");
						  EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:amt_diff
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;
							IS_ANY_ORA_ERROR
					    }
			    		else
				    	{
								/*
								diff_bse=atof(CompareDealData) - atof(CompareEOData);
								*/
								diff_bse=atof(chr_net_amt1) - atof(chr_sett_amt1);
								Bcomm=p_dl_deal_struct_h->h_brokercomm;
								printf("\n Entered 2nd if\n");
								printf("\n Difference BSE=|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_bse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);

								if(fabs(diff_bse) <= Bcomm*(atof(temp_tol[i]))/100)
								{
								printf("\n $$$$$$$ Inside If loop diff_bse *****Vaibhav 19 August 2006********* $$$$$$$$\n");	
								EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_bse
								WHERE a.client=:p_dl_deal_struct_h->h_dl_client
								AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;

								IS_ANY_ORA_ERROR
								}
								else
								{	
									temp4=temp1[i];
									temp6[k]=temp4;
									k++;
									MatchFlag='N';
								}
						}
						  /* changes by amish -- 31/10/2006 ************************************end */
		   }
		   
		  else
		  {		
				temp4=temp1[i];
				temp6[k]=temp4;
				k++;
				MatchFlag='N';
		  }		
	
	   }
			
	}

	if(MatchFlag=='N')
    {
		int n;
		for(n=0;n<k;n++)
	    {	
			strcat(t_nmfields,temp6[n]);
			if(n==k-1){}
			else
			{		
				strcat(t_nmfields,",");
			}
		}
		  strcat(nmfields,"Not Matched For: ");
		  strcat(nmfields,t_nmfields);

		  printf("\n DATA Did Not Match FOR Following Fields: |%s| \n",nmfields);
		  sprintf(chr_g_log_buffer,"\n|%s|\n",nmfields);
		  CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
		
		  printf("\n 1TOM K=|%d| \n",k);
		  
/*		if(k==1)
		 {	 
		  EXEC SQL INSERT INTO dl_match_rpt
				 VALUES(:p_dl_deal_struct_h->h_dl_client,
						 :p_dl_deal_struct_h->h_indentity_no,
						 :p_dl_exchgord_upld_struct_h->h_order_no,
						 :p_dl_deal_struct_h->h_settlement_no,
						 'CM',
						 'CLOSE Matched In OneToMany:'||:chr_g_log_buffer,
						 :p_dl_deal_struct_h->h_exch_code,
						 :p_dl_deal_struct_h->h_mkt_type);
		 IS_ANY_ORA_ERROR		 
		 }
		 else
		 {	 **/ 
		  l_already_present = 0;
		printf(" 5.1 l_already_present is %d\n",l_already_present);
		printf(" 5.1 client is |%s|\n",p_dl_deal_struct_h->h_dl_client);
		printf(" 5.1 dl ref no is |%s|\n",p_dl_deal_struct_h->h_indentity_no);
		printf(" 5.1 order is |%s|\n",p_dl_exchgord_upld_struct_h->h_order_no);
		printf(" 5.1 settl no is |%s|\n",p_dl_deal_struct_h->h_settlement_no);
		printf(" 5.1 exch code is |%s|\n",p_dl_deal_struct_h->h_exch_code);
		printf(" 5.1 mkt typ is |%s|\n",p_dl_deal_struct_h->h_mkt_type);

		  EXEC SQL SELECT COUNT(*) INTO :l_already_present FROM DL_MATCH_RPT WHERE 
				 CLIENT = :p_dl_deal_struct_h->h_dl_client AND
				 DEAL_REF_NO =  :p_dl_deal_struct_h->h_indentity_no AND
						 SETTLEMENT_NO = :p_dl_deal_struct_h->h_settlement_no AND
						 STATUS = 'CM' AND 
						 EXCH_CODE = :p_dl_deal_struct_h->h_exch_code AND
						 MKT_TYPE = :p_dl_deal_struct_h->h_mkt_type;

		printf(" 5.1 sqlca.sqlcode is %d\n",sqlca.sqlcode);

		 IS_ANY_ORA_ERROR
		  if (l_already_present == 0)
		  {

		  EXEC SQL DELETE FROM DL_MATCH_RPT WHERE 
				 CLIENT = :p_dl_deal_struct_h->h_dl_client AND
				 DEAL_REF_NO =  :p_dl_deal_struct_h->h_indentity_no AND
						 SETTLEMENT_NO = :p_dl_deal_struct_h->h_settlement_no AND
						 ORDER_NO is not null  AND 
						 STATUS is null AND 
						 EXCH_CODE = :p_dl_deal_struct_h->h_exch_code AND
						 MKT_TYPE = :p_dl_deal_struct_h->h_mkt_type;

		 IS_ANY_ORA_ERROR

		  EXEC SQL INSERT INTO dl_match_rpt
				 VALUES(:p_dl_deal_struct_h->h_dl_client,
						 :p_dl_deal_struct_h->h_indentity_no,
						 :p_dl_exchgord_upld_struct_h->h_order_no,
						 :p_dl_deal_struct_h->h_settlement_no,
						 NULL,
						 'Unmatched: 1 TO Many '||:chr_g_log_buffer,
						 :p_dl_deal_struct_h->h_exch_code,
						 :p_dl_deal_struct_h->h_mkt_type);
		printf(" 6 sqlca.sqlcode is %d\n",sqlca.sqlcode);
		 IS_ANY_ORA_ERROR
		  }
		 /**}	***/

  		  strcpy(nmfields,APL_NULL_STRING);	

	  printf("\n #### Deal Record NOT Matching with EO ####\n");
	
    }  
	else
	{
		*p_OrderMatch='Y';
		
		 EXEC SQL DELETE FROM dl_match_rpt WHERE deal_ref_no=:p_dl_deal_struct_h->h_indentity_no and client =:p_dl_deal_struct_h->h_dl_client; /* AND status!='CM'; */
		 IS_ANY_ORA_ERROR


	     EXEC SQL INSERT INTO dl_match_orders
					SELECT exchg_code,client,instr_code,broker_cd,settl_no,deal_date,mkt_type,
						   :p_dl_deal_struct_h->h_indentity_no,'PM',order_no,'1TOM',:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
						   FROM dl_exchgord_upld a
					WHERE  a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND a.client=:p_dl_exchgord_upld_struct_h->h_cln_code
					AND	a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					/* commented by amish - 30/10/2006 */
					/*
					AND a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					AND a.buy_sell_flg=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg	/* Condn added for BuySell-AmitB-060307*/
					AND nvl(a.matched,'N')!='Y'
					AND STATUS = 'AA'; /* CVS ::: Added for Matching Report ISKB_2230 */
				
		 IS_ANY_ORA_ERROR

		 EXEC SQL UPDATE dl_exchgord_upld a SET MATCHED='Y',status='PM',deal_ref_no=:p_dl_deal_struct_h->h_indentity_no
				   WHERE  a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND	  a.client=:p_dl_exchgord_upld_struct_h->h_cln_code
					AND   a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND	  a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					AND	  a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
				 /* commented by amish - 30/10/2006 */
					/*
					AND	  a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND   a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
		 			AND 	a.buy_sell_flg=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
				    AND  a.status = 'AA'     /*ISKB-401, Add by ASHISH 30-08-2007 */
					AND  a.order_no IN (SELECT B.ORDER_NO FROM LIST_EXCH_ORDERS B); /* ISKB-1723 : ASHISH 20-08-2008 */

		 printf("\n error to update dl_exchgord_upld in 1To many = |%d| \n",sqlca.sqlcode);   /* ASHISH 30-08-2007 */
		
		 IS_ANY_ORA_ERROR

		 brkg_adjust=(fabs(diff_nse) > 0 ) ? diff_nse : diff_bse;
		
		 	
		 strcpy(l_chr_proc_desc,((fabs(brkg_adjust) > 0) ? "1TOMT":"1TOM-"));
	
		 printf("\n ************************** Applying Tolerance 1-MANY ***************************** \n");
			
		 printf("\n diff_nse	=|%lf| diff_bse	=|%lf|	\n",diff_nse,diff_bse);

		 printf("\n l_chr_proc_desc=|%s|  brkg_adjust=|%lf|\n",l_chr_proc_desc,brkg_adjust);

		 printf("\n ************************** Applying Tolerance  1-MANY ***************************** \n");
			
		 EXEC SQL INSERT  INTO
						dl_match_deals VALUES(:p_dl_deal_struct_h->h_dl_client,
											   :p_dl_deal_struct_h->h_dlt,
	 										   :p_dl_deal_struct_h->h_brkrno,	
											   :p_dl_deal_struct_h->h_exch_code,	
											   :p_dl_deal_struct_h->h_amt,
											   :p_dl_deal_struct_h->h_qty,
											   :p_dl_deal_struct_h->h_dealcd,	
											   :p_dl_deal_struct_h->h_instr_code,
  											   :p_dl_deal_struct_h->h_settlement_no,  
  											   :p_dl_deal_struct_h->h_mkt_type, 			
  											   'PM',
											   :p_dl_deal_struct_h->h_indentity_no,
											   :brkg_adjust,
											   :l_chr_proc_desc);

		 if(sqlca.sqlcode)
		{
			printf("\n Failed INSERT into dl_match_deals \n");
		}

		 IS_ANY_ORA_ERROR
		 
		 /* Changes done for Equity Fund Confirmation implementation -Start */

		  memset(ret_val,APL_NULL_CHAR,sizeof(ret_val));
	
	 EXEC SQL SELECT GETCLIENTPARAMBYID('EARLY_PAYIN_FND',:p_dl_deal_struct_h->h_dl_client) into :ret_val FROM DUAL;
	 
		printf("\n ret_val is %s",ret_val);
	 
	 if((!strcmp(p_dl_deal_struct_h->h_dealcd,"4"))&&(!strcmp(ret_val,"Y")))
	 {
		//HB_12151 Interoperability Among Clearing Corporations Starts --
	     EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='Y',pltopl_flg='G',
			 brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0)
					WHERE a.client=:p_dl_deal_struct_h->h_dl_client
					/* commented by amish - 30/10/2006 */
					/*
					AND	  a.deal_date=:p_dl_deal_struct_h->h_dlt
					*/
					AND	  a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					AND   a.instr_code=:p_dl_deal_struct_h->h_instr_code
					AND (( a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND	  a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
					AND	  a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type 
					AND 'T' = :chr_trd_setl_ind)
					OR
					( 	  a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND	  a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					AND	  a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
					AND	  a.identiy_no=:p_dl_deal_struct_h->h_indentity_no
					AND		a.DL_CLASS != '40'
					AND a.deal_stat = 'RC';    /*ISKB-401, Add by ASHISH 30-08-2007 */
		//HB_12151 Interoperability Among Clearing Corporations Ends --
	 }
	 else
	 {
		 EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='Y',
			brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0)
					WHERE a.client=:p_dl_deal_struct_h->h_dl_client
					/* commented by amish - 30/10/2006 */
					/*
					AND	  a.deal_date=:p_dl_deal_struct_h->h_dlt
					*/
					AND	  a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					AND   a.instr_code=:p_dl_deal_struct_h->h_instr_code
					AND (( a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND	  a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
					AND	  a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type 
					AND 'T' = :chr_trd_setl_ind)
					OR
					( 	  a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND	  a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					AND	  a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
					AND	  a.identiy_no=:p_dl_deal_struct_h->h_indentity_no
					AND		a.DL_CLASS != '40'
					AND a.deal_stat = 'RC';
	 }
        
		/* Changes done for Equity Fund Confirmation implementation -End */
		
		printf("\n  Error to update DL_DEAL in 1TOM = |%d| \n",sqlca.sqlcode);
		 IS_ANY_ORA_ERROR
		
		printf("\n **** Deal Record Matching with EO ****\n");
	}	 			


 APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
		/* Truncation of table in every matching */
			EXEC SQL DELETE FROM LIST_EXCH_ORDERS;
			printf("\n Sql Error to truncate the table LIST_EXCH_ORDERS = |%d| \n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR

		CO_ProcMonitor(g_flogfile," Success Inside FuncMatch_1toM",NULL,NULL);	
		return(APL_SUCCESS);
 		
    RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile," Failed Inside FuncMatch_1toM",NULL,NULL);	
		printf("Inside FuncMatch_1toM - Failed");
		return(APL_FAILURE);
 }  






int ManyToMany(char *MatchDealDataString,
			   char *MatchEODataString,
			   char *ToleranceString,
			   char *p_settlement_no,
			   char *p_mkt_type,
			   char *p_exchange,
			   char *p_client_master,
			   char *p_client_code,
			   char *p_trade_type,
			   char **argv,
			   FILE *g_flogfile,
			   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{	
	 
	char  forced_match='N';
	char  OrderMatch='N';	
	char  P_EXCHG_CODE[100];
	char  DealString[4000] = APL_NULL_STRING;
	char  EOString[4000] = APL_NULL_STRING;
	char chr_l_deal_cln_map_cd[21]= APL_NULL_STRING;
	char chr_l_eo_cln_map_cd[21]= APL_NULL_STRING;
	short i_deal_cln_map_cd=0;
	short i_eo_cln_map_cd=0;
	/** Isolve-307:AmitB:08052007 **/
	 char  l_exch_instr_code[13]=APL_NULL_STRING;
	 char  l_scrip_grp[5]=APL_NULL_STRING;
	 short i_exch_instr_code = 0;
	 short i_scrip_grp = 0;
	// Pankaj Deshpande
	char  	*l_sqlstmt = (char *)NULL;
	char  	*l_sqlstmt_append = APL_NULL_STRING;
	
	EXEC SQL VAR DealString IS STRING;
	EXEC SQL VAR EOString IS STRING;
	
	// Pankaj Deshpande - Starts 
	EXEC SQL VAR p_client_code IS STRING;
	EXEC SQL VAR p_client_master IS STRING;
	EXEC SQL VAR p_trade_type IS STRING;
	
	l_sqlstmt = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	l_sqlstmt_append = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	// Pankaj Deshpande - Ends  
	
	SYS_DL_DEAL_STRUCT_H *l_dl_deal_struct_h= NULL;
	SYS_DL_DEAL_STRUCT_I *l_dl_deal_struct_i= NULL;
		
	DL_EXCHGORD_UPLD_STRUCT_H *l_dl_exchgnord_upld_struct_h= NULL;
	DL_EXCHGORD_UPLD_STRUCT_I *l_dl_exchgnord_upld_struct_i= NULL;

	

	EXEC SQL BEGIN DECLARE SECTION;

		EXEC SQL VAR l_dl_deal_struct_h->h_dl_client IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_settlement_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_exch_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_brkrno IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dlt IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dealcd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_indentity_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_domcpclt_cd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_countclt IS STRING;

		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_cln_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_exchg_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_settl_no IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_deal_date IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_broker_cd IS STRING;
		EXEC SQL VAR chr_l_deal_cln_map_cd IS STRING;
		EXEC SQL VAR chr_l_eo_cln_map_cd IS STRING;

	EXEC SQL END DECLARE SECTION;


	l_dl_deal_struct_h=(SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_deal_struct_h)
	l_dl_deal_struct_i=(SYS_DL_DEAL_STRUCT_I *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));	
	APL_MALLOC_FAIL(l_dl_deal_struct_i)

	l_dl_exchgnord_upld_struct_h=(DL_EXCHGORD_UPLD_STRUCT_H *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_h)
	l_dl_exchgnord_upld_struct_i=(DL_EXCHGORD_UPLD_STRUCT_I *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_i)

	memset(l_dl_deal_struct_h, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
	memset(l_dl_exchgnord_upld_struct_h, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_H));

	memset(l_dl_deal_struct_i, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
	memset(l_dl_exchgnord_upld_struct_i, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_I));

	Alert("HM :: chr_trd_setl_ind [%s] \n",chr_trd_setl_ind);
	printf("\n\n	 *********************************************************** ");
	printf("\n		  STARTING WITH MANY TO MANY MATCHING				 \n");
	printf("\n	************************************************************\n");
	
	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n			STARTING WITH MANY TO MANY MATCHING					 ",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);

		if(strcmp(p_mkt_type,APL_NULL_STRING) == 0)
		strcpy(p_mkt_type,"%");

	    if(strcmp(p_exchange,APL_NULL_STRING) == 0)
	    strcpy(p_exchange,"%");

		// Pankaj Deshpande
		if(strcmp(p_client_code,APL_NULL_STRING) == 0)
	    strcpy(p_client_code,"%");
	
		if(strcmp(p_client_master,APL_NULL_STRING) == 0)
	    strcpy(p_client_master,"%");

	/** TUX added condition EX_Arena ***/
	/** Isolve-307:AmitB:08052007 **/
	//HB_12151 Interoperability Among Clearing Corporations Starts --
	//Interoperability 13-Jun-2019 added cln_Exch_code join
	
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	
	
	sprintf(l_sqlstmt,"SELECT instr_code,deal_date,deal_cd,sum(nvl(qty,0)) QTY,sum(nvl(amount,0)),sum(nvl(brokercomm,0)) BROKERCOMM, sum(nvl(net_amt,0)) as NET_AMT,domestic_cpclt, CLH_FLG,cln_exch_map_code,nvl(interfii_flg,'N'),");
	sprintf(l_sqlstmt_append, " decode('%s','T',trd_mkt_type,mkt_type),decode('%s','T',trd_setl_no,settlement_no), decode('%s','T',trd_exch,exch_code)  FROM dl_deal a, mt_cli_exch_map b, MT_CLIENT C ",chr_trd_setl_ind,chr_trd_setl_ind,chr_trd_setl_ind );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	

	sprintf(l_sqlstmt_append, " WHERE ( (a.trd_exch like '%s' and a.trd_mkt_type like '%s' and a.trd_setl_no = '%s' and a.trd_exch = cln_Exch_code AND 'T' = '%s') OR (a.exch_code like '%s' and a.mkt_type like '%s' and a.settlement_no = '%s' and a.exch_code = cln_Exch_code AND 'S' = '%s')) ",p_exchange,p_mkt_type,p_settlement_no,chr_trd_setl_ind,p_exchange,p_mkt_type,p_settlement_no,chr_trd_setl_ind );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	

	sprintf(l_sqlstmt_append," AND C.CLN_CODE = A.CLIENT AND A.CLIENT LIKE '%s' AND C.CLN_MASTER LIKE '%s' AND deal_stat='RC' AND DL_CLASS != '40' ", p_client_code,p_client_master );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);

	sprintf(l_sqlstmt_append,"  AND	decode('%s','T',trd_mkt_type,a.mkt_type) != DECODE('%s','NSE','23','BSE','18','MCS','63') AND decode('%s','T',trd_mkt_type,a.mkt_type) != DECODE('%s','NSE','24','BSE','19','MCS','64') AND	decode('%s','T',trd_mkt_type,a.mkt_type) != DECODE('%s','NSE','25','BSE','20','MCS','65') AND a.client =b.cln_code " ,  chr_trd_setl_ind,p_exchange,chr_trd_setl_ind,p_exchange,chr_trd_setl_ind,p_exchange );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);

	if ( strcmp(p_trade_type,"BUY") ==0 )
	{
		sprintf(l_sqlstmt_append," AND a.deal_cd in ( '1','3' )");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	}
	else if ( strcmp(p_trade_type,"SELL") ==0 )
	{
		sprintf(l_sqlstmt_append," AND a.deal_cd in ( '2','4' )");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	}
	else
	{
		sprintf(l_sqlstmt_append," AND a.deal_cd in ( '1','3','2','4' )");
		strcat(l_sqlstmt,l_sqlstmt_append);
		memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	}

	sprintf(l_sqlstmt_append," AND ((a.trd_exch=b.cln_exch_code AND 'T' = '%s') OR (a.exch_code=b.cln_exch_code AND 'S' = '%s'))",chr_trd_setl_ind,chr_trd_setl_ind);
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);


	sprintf(l_sqlstmt_append," AND a.clh_flg= 'C' AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL) AND NOT EXISTS (SELECT 'X' FROM dl_match_deals b WHERE a.client=b.client  AND a.identiy_no=b.ident_no AND b.matched='PM')  GROUP BY cln_exch_map_code,decode('%s','T',trd_setl_no,settlement_no),decode('%s','T',trd_mkt_type,mkt_type),instr_code,deal_date,domestic_cpclt,deal_cd,decode('%s','T',trd_exch,exch_code),CLH_FLG,nvl(interfii_flg,'N') ",chr_trd_setl_ind,chr_trd_setl_ind,chr_trd_setl_ind ); 
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);

	printf("\n PPD: query for the cursor: |%s|", l_sqlstmt);
	fflush(stdout);
			
	EXEC SQL PREPARE sss2 FROM :l_sqlstmt;
	IS_ANY_ORA_ERROR
	
	EXEC SQL DECLARE deal_outer3 CURSOR FOR sss2;
	IS_ANY_ORA_ERROR
		
		
  	    EXEC SQL OPEN deal_outer3;
		 IS_ANY_ORA_ERROR

	 for(;;)
	 {
		   EXEC SQL FETCH deal_outer3 INTO /*:l_dl_deal_struct_h->h_dl_client:l_dl_deal_struct_i->i_dl_client,*/
										:l_dl_deal_struct_h->h_instr_code:l_dl_deal_struct_i->i_instr_code,
										:l_dl_deal_struct_h->h_dlt:l_dl_deal_struct_i->i_dlt,
										:l_dl_deal_struct_h->h_dealcd:l_dl_deal_struct_i->i_dealcd,
										:l_dl_deal_struct_h->h_qty:l_dl_deal_struct_i->i_qty,
										:l_dl_deal_struct_h->h_amt:l_dl_deal_struct_i->i_amt,
										:l_dl_deal_struct_h->h_brokercomm:l_dl_deal_struct_i->i_brokercomm,
										:l_dl_deal_struct_h->h_net_amt:l_dl_deal_struct_i->i_net_amt,
										:l_dl_deal_struct_h->h_brkrno:l_dl_deal_struct_i->i_brkrno,
										:l_dl_deal_struct_h->h_clh_flg:l_dl_deal_struct_i->i_clh_flg,
										:chr_l_deal_cln_map_cd:i_deal_cln_map_cd,
										:l_dl_deal_struct_h->h_interfii_flg:l_dl_deal_struct_i->i_interfii_flg,  
										:l_dl_deal_struct_h->h_mkt_type:l_dl_deal_struct_i->i_mkt_type,
										:l_dl_deal_struct_h->h_settlement_no:l_dl_deal_struct_i->i_settlement_no,
										:l_dl_deal_struct_h->h_exch_code:l_dl_deal_struct_i->i_exch_code
										;

		   if(sqlca.sqlcode)
			{
				printf("\n ERROR FETCHING DEAL DATA MTOM :|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n ERROR FETCHING DEAL DATA MTOM :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

		   if(APL_ZERO_RESULT_SET)
			    break;
		   IS_ANY_ORA_ERROR
		


			sprintf(chr_g_log_buffer,"\n MTOM Deal: Exch_code=|%s|Setttlementno=|%s| MktType=|%s|InstrCode=|%s|Broker=|%s| DealDate=|%s|DealCd=|%s|Qty=|%lf| Amount=|%lf| NetAmount=|%lf| Brokercomm=|%lf| CLH_FLG=|%s| CP CODE=|%s|\n",
									  l_dl_deal_struct_h->h_exch_code,
									  l_dl_deal_struct_h->h_settlement_no,
									  l_dl_deal_struct_h->h_mkt_type,
									  l_dl_deal_struct_h->h_instr_code,
									  l_dl_deal_struct_h->h_brkrno,
									  l_dl_deal_struct_h->h_dlt,
									  l_dl_deal_struct_h->h_dealcd,
									  l_dl_deal_struct_h->h_qty,
									  l_dl_deal_struct_h->h_amt,
									  l_dl_deal_struct_h->h_net_amt,		
									  l_dl_deal_struct_h->h_brokercomm,
									  l_dl_deal_struct_h->h_clh_flg,
									  chr_l_deal_cln_map_cd);

			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);


		   EXEC SQL DECLARE EO_inner3 CURSOR FOR
			   SELECT exchg_code,settl_no,mkt_type,instr_code,deal_date,broker_cd,SUM(qty)as QTY,SUM(dl_amt) as AMOUNT,BUY_SELL_FLG
			  	  FROM dl_exchgord_upld a
				  WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
				  AND settl_no=:l_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:l_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:l_dl_deal_struct_h->h_instr_code
/*				  AND client=:l_dl_deal_struct_h->h_dl_client
				  AND decode(BUY_SELL_FLG,'B','4','S','3')=:l_dl_deal_struct_h->h_dealcd	*/
				  /* commented by amish - 30/10/2006 */
				  /*
			      AND deal_date=:l_dl_deal_struct_h->h_dlt
				  */
   				  AND buy_sell_flg=decode(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
				  AND broker_cd=:l_dl_deal_struct_h->h_brkrno
				  AND nvl(matched,'N')!='Y'
				  AND status='AA'
				  AND a.client IN(SELECT cln_code FROM mt_cli_exch_map b
						  					WHERE b.CLN_EXCH_MAP_CODE=:chr_l_deal_cln_map_cd
											AND b.cln_exch_code=a.exchg_code)
				  AND NOT EXISTS (SELECT 'X' FROM dl_match_orders b
								WHERE b.order_no=a.order_no
								AND b.client=a.client
								AND b.matched='PM')
				GROUP BY settl_no,mkt_type,instr_code,deal_date,broker_cd,exchg_code,BUY_SELL_FLG;

	

		EXEC SQL OPEN EO_inner3;
		IS_ANY_ORA_ERROR
		
		for(;;)
		{
		
			EXEC SQL FETCH EO_inner3 INTO
/*						:l_dl_exchgnord_upld_struct_h->h_cln_code:l_dl_exchgnord_upld_struct_i->i_cln_code,	*/
						:l_dl_exchgnord_upld_struct_h->h_exchg_code:l_dl_exchgnord_upld_struct_i->i_exchg_code,
						:l_dl_exchgnord_upld_struct_h->h_settl_no:l_dl_exchgnord_upld_struct_i->i_settl_no,
						:l_dl_exchgnord_upld_struct_h->h_mkt_type:l_dl_exchgnord_upld_struct_i->i_mkt_type,
						:l_dl_exchgnord_upld_struct_h->h_instr_code:l_dl_exchgnord_upld_struct_i->i_instr_code,
						:l_dl_exchgnord_upld_struct_h->h_deal_date:l_dl_exchgnord_upld_struct_i->i_deal_date,
						:l_dl_exchgnord_upld_struct_h->h_broker_cd:l_dl_exchgnord_upld_struct_i->i_broker_cd,
						:l_dl_exchgnord_upld_struct_h->h_qty:l_dl_exchgnord_upld_struct_i->i_qty,
						:l_dl_exchgnord_upld_struct_h->h_dl_amt:l_dl_exchgnord_upld_struct_i->i_dl_amt,
						:l_dl_exchgnord_upld_struct_h->h_buy_sell_flg:l_dl_exchgnord_upld_struct_i->i_buy_sell_flg;
			
			if(sqlca.sqlcode)
			{
				printf("\n ERROR FETCHING EO DATA MTOM :|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n ERROR FETCHING EO DATA MTOM :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

			if(APL_ZERO_RESULT_SET)
				break;
		 	IS_ANY_ORA_ERROR
			

			sprintf(chr_g_log_buffer,"\n MTOM EO:Exch_code=|%s|Setttlementno=|%s|MktType=|%s|InstrCode=|%s|Broker=|%s|DealDate=|%s|Qty=|%lf| Amount=|%lf| BUY/SELL=|%s|\n",
						l_dl_exchgnord_upld_struct_h->h_exchg_code,
						l_dl_exchgnord_upld_struct_h->h_settl_no,
						l_dl_exchgnord_upld_struct_h->h_mkt_type,
						l_dl_exchgnord_upld_struct_h->h_instr_code,
						l_dl_exchgnord_upld_struct_h->h_broker_cd,
						l_dl_exchgnord_upld_struct_h->h_deal_date,
						l_dl_exchgnord_upld_struct_h->h_qty,
						l_dl_exchgnord_upld_struct_h->h_dl_amt,
						l_dl_exchgnord_upld_struct_h->h_buy_sell_flg);

			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);



			OrderMatch='N';
			forced_match='N';

			strcpy(DealString,APL_NULL_STRING);


/*			EXEC SQL SELECT DISTINCT(cln_exch_map_code) INTO :chr_l_deal_cln_map_cd FROM mt_cli_exch_map b
				WHERE cln_code IN(SELECT client FROM dl_deal a
									WHERE  mkt_type=:l_dl_deal_struct_h->h_mkt_type
									 AND settlement_no=:l_dl_deal_struct_h->h_settlement_no
									 AND exch_code=:l_dl_deal_struct_h->h_exch_code
									 AND instr_code=:l_dl_deal_struct_h->h_instr_code
									 AND deal_date=:l_dl_deal_struct_h->h_dlt
									 AND deal_cd=:l_dl_deal_struct_h->h_dealcd
									 AND domestic_cpclt=:l_dl_deal_struct_h->h_brkrno
									 AND clh_flg=:l_dl_deal_struct_h->h_clh_flg
									 AND deal_stat='RC'
									 AND a.exch_code=b.cln_exch_code)
								AND ROWNUM=1;
			
			if(sqlca.sqlcode)
			{
				 sprintf(chr_g_log_buffer,"\n Error Fetching CP CODE For Deal Clients Error=|%d| \n");
				 CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}
			IS_ANY_ORA_ERROR

			EXEC SQL SELECT DISTINCT(cln_exch_map_code) INTO :chr_l_eo_cln_map_cd FROM mt_cli_exch_map b
				WHERE cln_code IN(SELECT client FROM dl_exchgord_upld a
									WHERE exchg_code=:l_dl_exchgnord_upld_struct_h->h_exchg_code
									AND mkt_type=:l_dl_exchgnord_upld_struct_h->h_mkt_type
									AND settl_no=:l_dl_exchgnord_upld_struct_h->h_settl_no
									AND instr_code=:l_dl_exchgnord_upld_struct_h->h_instr_code
									AND broker_cd=:l_dl_exchgnord_upld_struct_h->h_broker_cd
									AND deal_date=:l_dl_exchgnord_upld_struct_h->h_deal_date
									AND buy_sell_flg=:l_dl_exchgnord_upld_struct_h->h_buy_sell_flg
									AND status='AA'
									AND a.exchg_code=b.cln_exch_code)
				AND ROWNUM=1;
			
			if(sqlca.sqlcode)
			{
				sprintf(chr_g_log_buffer,"\n Error Fetching CP CODE for Exchange Order Clients Error=|%d| \n");
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}	  
			IS_ANY_ORA_ERROR


		sprintf(chr_g_log_buffer,"\n MTOM: DEAL CP_CODE=|%s| EO CP_CODE=|%s| \n",chr_l_deal_cln_map_cd,chr_l_eo_cln_map_cd	);
		CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

*/
		
/* *******  CHECK TO SEE IF "CP CODES" OF SELECTED DEAL AND EO CLIENTS IS SAME ********* */
			
			/** Start Changes:Isolve-307:AmitB:08052007 **/
			EXEC SQL select distinct exch_instr_code,scrip_grp into :l_exch_instr_code:i_exch_instr_code,:l_scrip_grp:i_scrip_grp
							from DL_EXCHGORD_UPLD a
							WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
				  AND a.settl_no=:l_dl_deal_struct_h->h_settlement_no
			      AND a.mkt_type=:l_dl_deal_struct_h->h_mkt_type
				  AND a.instr_code=:l_dl_deal_struct_h->h_instr_code
   				  AND a.buy_sell_flg=decode(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
				  AND a.broker_cd=:l_dl_deal_struct_h->h_brkrno
				  AND nvl(a.matched,'N')!='Y'
				  AND a.status='AA'
				  AND a.client IN(SELECT cln_code FROM mt_cli_exch_map b
						  					WHERE b.CLN_EXCH_MAP_CODE=:chr_l_deal_cln_map_cd
											AND b.cln_exch_code=a.exchg_code)
				  AND NOT EXISTS (SELECT 'X' FROM dl_match_orders b
								WHERE b.order_no=a.order_no
								AND b.client=a.client
								AND b.matched='PM')
					  AND rownum=1;
			IS_ANY_ORA_ERROR
			
			fprintf(g_flogfile,"\n l_scrip_grp=|%s| \n",l_scrip_grp);
			fprintf(g_flogfile," l_exch_instr_code=|%s| \n",l_exch_instr_code);
			if(!strcmp(l_dl_deal_struct_h->h_interfii_flg,"Y"))
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"6",1)==0  || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found for FII....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}

		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
				}
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS")) //Added BY PT FOR MCS Enhancement
				{
					if(strcmp(l_scrip_grp,"IL")!=0)
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			else
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"5",1)==0  || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found ....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
				}
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS")) //Added BY PT FOR MCS Enhancement
				{
					if(strcmp(l_scrip_grp,"IL")==0)
					{
						fprintf(g_flogfile,"Skipping NON-InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			/** End Changes:Isolve-307:AmitB:08052007 **/
			
			/* ISKB-1723 : ASHISH 20-08-2008 Start */

			if(APL_FAILURE == create_Exch_Order_List(l_dl_exchgnord_upld_struct_h,"MTOM",g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL;
			}

			/* ASHISH 20-08-2008 End */
			
			if(APL_FAILURE == DealStringForm(l_dl_deal_struct_h,DealString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
			strcpy(EOString,APL_NULL_STRING);

			if(APL_FAILURE == EOStringForm(l_dl_exchgnord_upld_struct_h,EOString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
				if(APL_FAILURE == MatchDataStringForm(MatchDealDataString,MatchEODataString,ToleranceString,l_dl_deal_struct_h->h_exch_code,g_flogfile,l_debug_info_ptr))
			{
				CO_ProcMonitor(g_flogfile, "MatchDataStringForm returned failure", NULL, NULL);
				APL_GOBACK_FAIL		
			}

			if(APL_FAILURE == FuncMatch_MtoM(l_dl_deal_struct_h,l_dl_exchgnord_upld_struct_h,DealString,EOString,MatchDealDataString,MatchEODataString,ToleranceString,&OrderMatch,&forced_match,chr_l_deal_cln_map_cd,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL		
			}
						
			if(OrderMatch=='Y')
			{	
				break;
			}


		/*commit_count++;*/

/*
		 if (  (commit_count%COMMIT_FREQ_LOGAUTOEVNT) == 0  )
		  {
			 
			 printf("\n INSIDE COMMIT CODE \n"); 
			sprintf(chr_h_stat_info,"Started One To One Matching.Processed %d Records.",commit_count);
			
				 EXEC SQL UPDATE   BATCH_IN_PROC
				  SET STATUS   = :chr_g_status_started,
				  RESTART_DATA = :h_restart_data,
				  STAT_INFO    = :chr_h_stat_info
				  WHERE ROWID  = :h_batch_in_proc_rowid;

			 IS_ANY_ORA_ERROR


			 EXEC SQL COMMIT WORK;
			 IS_ANY_ORA_ERROR

			 CO_ProcMonitor(g_flogfile,"RECORD COMMITTED \n",NULL,NULL);

			 EXEC SQL SELECT ROWID,RESTART_DATA
			 INTO :h_batch_in_proc_rowid,:h_restart_data :i_restart_data
			 FROM BATCH_IN_PROC
			 WHERE ROWID = :h_batch_in_proc_rowid
			 FOR UPDATE OF RESTART_DATA ,STATUS;
		
			 IS_ANY_ORA_ERROR

		     EXEC SQL COMMIT WORK ;
 
			 IS_ANY_ORA_ERROR

	         EXEC SQL OPEN EO_inner3;

			 IS_ANY_ORA_ERROR

		  }

*/	

		}

			EXEC SQL CLOSE EO_inner3;
			IS_ANY_ORA_ERROR

	 }

		EXEC SQL CLOSE deal_outer3;
		IS_ANY_ORA_ERROR

	EXEC SQL COMMIT WORK ;
	
	/*commit_count=0;*/



APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile," Leaving ManyToMany With Success",NULL,NULL);
		return(APL_SUCCESS);
	   
 	  RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile," Failed Inside ManyToMany",NULL,NULL);
		printf("\n Error Inside ManyToMany \n");
	   	return(APL_FAILURE);

}



int FuncMatch_MtoM(SYS_DL_DEAL_STRUCT_H *p_dl_deal_struct_h,DL_EXCHGORD_UPLD_STRUCT_H *p_dl_exchgord_upld_struct_h,char *p_DealString,char *p_EOString,char *p_MatchDealDataString,char *p_MatchEODataString,char *p_ToleranceString,char *p_OrderMatch,char *p_forced_match,char *chr_p_deal_cln_map_cd,FILE *g_flogfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char MatchFlag='Y';
	char **temp1;
	char **temp2;
	char **temp_tol;
	char *temp3;
	char *temp4;
	char *temp5[10];
	char *temp6[10];
	int  int_num_1=0;
	int  int_num_2=0;
	int  int_num_3=0;
	char p_source1[4000]=APL_NULL_STRING;
	char p_source2[4000]=APL_NULL_STRING;
	char p_source3[4000]=APL_NULL_STRING;
	char p_source4[4000]=APL_NULL_STRING;
	char p_source5[100]=APL_NULL_STRING;
	char CompareDealData[1000]=APL_NULL_STRING;
	char CompareEOData[1000]=APL_NULL_STRING;
	int i=0;
	int j=0;
	int k=0;
	double diff_nse=0;
	double diff_bse=0;
	double Bcomm=0;
	char P_EXCHG_CODE[10]=APL_NULL_STRING;
	char P_DEAL_CD[10]=APL_NULL_STRING;
	char P_FIELD[30]=APL_NULL_STRING;
	double Brkg_mod;
	double tot_brkg=0;
	double brkg_adjust=0;
	int forctr=0;
	
	/*
	char nmfields[100]=APL_NULL_STRING;
	char t_nmfields[100]=APL_NULL_STRING;
	char l_ref_no_str[400]=APL_NULL_STRING;
	char l_chr_proc_desc[6]=APL_NULL_STRING;
	*/

	/* Changed by ASHISH 30-08-2007 
    char nmfields[2001]=APL_NULL_STRING;
	char t_nmfields[2001]=APL_NULL_STRING;
	char l_ref_no_str[2001]=APL_NULL_STRING;
	char l_chr_proc_desc[2001]=APL_NULL_STRING;    
	 ADDED BY AMISH - 31/10/2006 */

	/*Added by Prateek on 28102014 for Matching issue- START
	char nmfields[4001]=APL_NULL_STRING;
	char t_nmfields[4001]=APL_NULL_STRING;
	char l_ref_no_str[4001]=APL_NULL_STRING;
	char l_chr_proc_desc[4001]=APL_NULL_STRING;
	Added by Prateek on 28102014 for Matching issue- END*/
	
	/* Added by Akshay for ISKB_11408 start*/
	char nmfields[32000]=APL_NULL_STRING;
	char t_nmfields[32000]=APL_NULL_STRING;
	char l_ref_no_str[32000]=APL_NULL_STRING;
	char l_chr_proc_desc[32000]=APL_NULL_STRING;
	/* Added by Akshay for ISKB_11408 end*/

	char match_client[20]=APL_NULL_STRING; // added by akshay for ISKB_11408
	
	/* ADDED BY AMISH - 31/10/2006 */
	char chr_amt[30] = APL_NULL_STRING;
	char chr_amt1[30] = APL_NULL_STRING;
	char chr_dl_amt[30] = APL_NULL_STRING;
	char chr_dl_amt1[30] = APL_NULL_STRING;
	char chr_net_amt[30] = APL_NULL_STRING;
	char chr_sett_amt[30] =  APL_NULL_STRING;
	char chr_net_amt1[30] = APL_NULL_STRING;
	char chr_sett_amt1[30] =  APL_NULL_STRING;
	char chr_amt2[30] = APL_NULL_STRING;
	char chr_dl_amt2[30] = APL_NULL_STRING;
	char chr_net_amt2[30] = APL_NULL_STRING;
	char chr_sett_amt2[30] =  APL_NULL_STRING;
	/* ADDED BY AMISH - 31/10/2006 */
	double amt_diff=0.0;	/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
    /* ISKB-401:AmitB:25-08-2007 */
	char chr_data_fld_sprtr[10] = APL_NULL_STRING;
    char chr_data_val_sprtr[10] = APL_NULL_STRING;

	INTL_ENV_DATA_STRUCT_H *l_intl_env_data_h;

			DL_DEAL_BRKG_STRUCT_H *l_dl_deal_brkg_struct_h= NULL;
			DL_DEAL_BRKG_STRUCT_I *l_dl_deal_brkg_struct_i= NULL;
		
	EXEC SQL BEGIN DECLARE SECTION;
				
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_client IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_exch_code IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_settlement_no IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_mkt_type IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_instr_code IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_brk_no IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_deal_cd IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_deal_date IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_identiy_no IS STRING;			




		EXEC SQL VAR CompareDealData IS STRING;	
		EXEC SQL VAR CompareEOData IS STRING;
		EXEC SQL VAR p_source1 IS STRING;
		EXEC SQL VAR p_source2 IS STRING;
		EXEC SQL VAR p_source3 IS STRING;
		EXEC SQL VAR p_source4 IS STRING;
		EXEC SQL VAR p_source5 IS STRING;
		EXEC SQL VAR nmfields IS STRING;
		EXEC SQL VAR t_nmfields IS STRING;
		EXEC SQL VAR P_EXCHG_CODE IS STRING;
		EXEC SQL VAR P_DEAL_CD IS STRING;
		EXEC SQL VAR P_FIELD IS STRING;
		EXEC SQL VAR temp1 IS STRING;
		EXEC SQL VAR temp2 IS STRING;
		EXEC SQL VAR temp_tol IS STRING;
		EXEC SQL VAR l_ref_no_str IS STRING;
		EXEC SQL VAR l_chr_proc_desc IS STRING;
		EXEC SQL VAR ret_val IS STRING;  // Added for Equity Fund Confirmation

   EXEC SQL END DECLARE SECTION;

	memset(p_source1, NULL, sizeof(p_source1));
	memset(p_source2, NULL, sizeof(p_source2));
	memset(p_source3, NULL, sizeof(p_source3));
	memset(p_source4, NULL, sizeof(p_source4));
	memset(p_source5, NULL, sizeof(p_source5));
	memset(CompareDealData, NULL, sizeof(CompareDealData));
	memset(CompareEOData, NULL, sizeof(CompareEOData));

	/* ISKB-401:AmitB:25-08-2007 */
	sprintf(chr_data_fld_sprtr,"%c",DATA_FIELD_SEPRTR);
    sprintf(chr_data_val_sprtr,"%c",DATA_VALUE_SEPRTR);

	strcpy(p_source1,p_MatchDealDataString);
	strcpy(p_source2,p_MatchEODataString);
	strcpy(p_source3,p_DealString);
	strcpy(p_source4,p_EOString);
	strcpy(p_source5,p_ToleranceString);

			l_dl_deal_brkg_struct_h=(DL_DEAL_BRKG_STRUCT_H *)calloc(1,sizeof(DL_DEAL_BRKG_STRUCT_H));
			APL_MALLOC_FAIL(l_dl_deal_brkg_struct_h)
			l_dl_deal_brkg_struct_i=(DL_DEAL_BRKG_STRUCT_I *)calloc(1,sizeof(DL_DEAL_BRKG_STRUCT_I));
			APL_MALLOC_FAIL(l_dl_deal_brkg_struct_i)
			
			memset(l_dl_deal_brkg_struct_h, NULL, sizeof(DL_DEAL_BRKG_STRUCT_H));
			memset(l_dl_deal_brkg_struct_i, NULL, sizeof(DL_DEAL_BRKG_STRUCT_I));	
	

	if(APL_FAILURE == CO_SplitStr(p_source1,'#',&int_num_1,&temp1))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 1 - Inside FuncMatch_MtoM ", NULL, NULL);
		APL_GOBACK_FAIL
	}	

 	if(APL_FAILURE == CO_SplitStr(p_source2,'#',&int_num_2,&temp2))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 2 - Inside FuncMatch_MtoM", NULL, NULL);
		APL_GOBACK_FAIL
	}	
	if(APL_FAILURE == CO_SplitStr(p_source5,'#',&int_num_3,&temp_tol))
	{
		CO_ProcMonitor(g_flogfile, "Failure from CO_SplitStr 3 - Inside FuncMatch_MtoM", NULL, NULL);
		APL_GOBACK_FAIL
	}	

	for(i=0;i<int_num_1;i++)
	{
	    CO_Rtv_DataString(p_source3,temp1[i],CompareDealData);
	    CO_Rtv_DataString(p_source4	,temp2[i],CompareEOData);
	   

		printf("\n Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);
		
		sprintf(chr_g_log_buffer,"\n MTOM: Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);	
		CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
	   if(strcmp(CompareDealData,CompareEOData)==0)
	   {

	   }
	   else
	   {
		  strcpy(P_FIELD,temp1[i]);
		  strcpy(P_EXCHG_CODE,p_dl_deal_struct_h->h_exch_code);
		  strcpy(P_DEAL_CD,p_dl_deal_struct_h->h_dealcd);
			
		   //if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0) //Commented by Tarkeshwar for MCS enhancement.
		   //Added By Aakash for IOP-2 CS0028550
		   if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0 && (strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0 || strcmp(p_dl_deal_struct_h->h_exch_code,"MCS")==0 
		   || strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0 )) 
		   {
			     /* changes by amish -- 31/10/2006 ************************************start */
					  /*
					  strcpy(chr_net_amt,CompareDealData);
					  */
					  printf("\namish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					  printf("\namish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);


				/*	  EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1 from dual;	*/


					  EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1,:chr_amt2,:chr_dl_amt2 from dual;

							IS_ANY_ORA_ERROR

     				  printf("\namish*****deal & EO GROSS amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt,chr_dl_amt);
	   				  printf("\namish*****deal & EO GROSS amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt1,chr_dl_amt1);
					  printf("\namish*****deal & EO GROSS amount AFTER Total TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt2,chr_dl_amt2);
/****** 	IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******    					

   				      if(strcmp(chr_amt,chr_dl_amt)==0)
					   {
								printf("\n data matching after 1st rounnd off\n");

						
					   }
    				  else if(strcmp(chr_amt1,chr_dl_amt1)==0)
	    			   {
							printf("\n data matching after 2nd rounnd off\n");
							
										
		    		   }
					   else if(strcmp(chr_amt2,chr_dl_amt2)==0)
	    			   {
							printf("\n data matching after Total rounnd off\n");
							
										
		    		   }
			    	 else
			          {
*/						/*
						diff_nse=atof(CompareDealData) - atof(CompareEOData);
						*/
						diff_nse=atof(chr_amt1) - atof(chr_dl_amt1);
						Bcomm=p_dl_deal_struct_h->h_brokercomm;
						printf("\n Entered 1st if\n");
						printf("\n Difference NSE =|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_nse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);
		
						if(fabs(diff_nse) <= Bcomm*(atof(temp_tol[i]))/100)
						{	
							printf("\n $$$$$$$ Inside If loop diff_nse *****Vaibhav 19 August 2006********* $$$$$$$$\n");
							EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_nse
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;
							IS_ANY_ORA_ERROR

						}
						else
						{	
							temp4=temp1[i];
							temp6[k]=temp4;
							k++;
							MatchFlag='N';
						}
/****** 	IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******					  
				}
*/		   }
		   else if(strcmp(temp1[i],"NET_AMT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0)
		   {
			  
						printf("\namish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					    printf("\namish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);

    			/*	EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1 from dual;	*/
					EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1,:chr_net_amt2,:chr_sett_amt2 from dual;
							IS_ANY_ORA_ERROR
	    				printf("\namish*****deal & EO net amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt,chr_sett_amt);
    					printf("\namish*****deal & EO net amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt1,chr_sett_amt1);
						printf("\namish*****deal & EO net amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt2,chr_sett_amt2);

			/* Added By Yog For PMS Client Processing - To retail Rs 1 tollarence for BSE - 08-Sep-10 - Start*/
					amt_diff=atof(CompareDealData) - atof(CompareEOData);
				printf("\n Considering 1Rs Difference:amt_diff =|%lf|CompareDealData=|%s|CompareEOData=|%s| \n",amt_diff,CompareDealData,CompareEOData);
			/* Added By Yog For PMS Client Processing - To retail Rs 1 tollarence for BSE - 08-Sep-10 - End */

   				        if(strcmp(chr_net_amt,chr_sett_amt)==0)
					    {

						 printf("\n data matching after 1st trunc off\n");

 					    }
    					else if(strcmp(chr_net_amt1,chr_sett_amt1)==0)
	    				{
							
							printf("\n data matching after  trunc off\n");
										
		    			}
						else if(strcmp(chr_net_amt2,chr_sett_amt2)==0)
	    				{
							
							printf("\n data matching after Total Trunc off\n");
										
		    			}
						/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
					    else if(fabs(amt_diff)<=1)
					    {
							Alert("Amount Difference less than rupee 1 |%lf|",amt_diff);
							fflush(stdout);
							Alert("Identiy no is |%s| and client is |%s|",p_dl_deal_struct_h->h_indentity_no,p_dl_deal_struct_h->h_dl_client);
							fflush(stdout);
						  fprintf(g_flogfile,"\n data matching after After Considering 1Rs Difference \n");
						  EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:amt_diff
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;

							Alert("sqlca.sqlcode |%d|",sqlca.sqlcode);
							fflush(stdout);
							IS_ANY_ORA_ERROR
					    }
			    		else
				    	{
								/*
								diff_bse=atof(CompareDealData) - atof(CompareEOData);
								*/
								diff_bse=atof(chr_net_amt1) - atof(chr_sett_amt1);
								Bcomm=p_dl_deal_struct_h->h_brokercomm;
								printf("\n Entered 2nd if\n");
								printf("\n Difference BSE=|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_bse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);

								if(fabs(diff_bse) <= Bcomm*(atof(temp_tol[i]))/100)
								{
								printf("\n $$$$$$$ Inside If loop diff_bse *****Vaibhav 19 August 2006********* $$$$$$$$\n");	
								EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_bse
								WHERE a.client=:p_dl_deal_struct_h->h_dl_client
								AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;

								IS_ANY_ORA_ERROR
								}
								else
								{	
									temp4=temp1[i];
									temp6[k]=temp4;
									k++;
									MatchFlag='N';
								}

						}
			  /* changes by amish -- 31/10/2006 ************************************end */
		   }
		   else
		   {		
				temp4=temp1[i];
				temp6[k]=temp4;
				k++;
				MatchFlag='N';
		  }		
	
	   }
			
	}
	if(MatchFlag=='N')
    {
		int n;	
		for(n=0;n<k;n++)
	    {	
			strcat(t_nmfields,temp6[n]);
			if(n==k-1){}
			else
			{		
				strcat(t_nmfields,",");
			}
		}
		  strcat(nmfields,"Unmatched: Many To Many |Not Matched For: ");
		  strcat(nmfields,t_nmfields);

		  printf("\n DATA Did Not Match FOR Following Fields: |%s| \n",nmfields);
		  sprintf(chr_g_log_buffer,"Not Match FOR: |%s| \n",nmfields);
		  CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

		EXEC SQL INSERT INTO dl_unmatch_orders
					SELECT exchg_code,b.cln_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,	
					NULL,'UM',order_no,'MTOM'
					FROM dl_exchgord_upld a,(SELECT cln_exch_map_code,cln_code,cln_exch_code 
														FROM mt_cli_exch_map c
														WHERE c.CLN_EXCH_MAP_CODE=:chr_p_deal_cln_map_cd
														AND c.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code) b	 					WHERE a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND   a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
						/* commented by amish - 30/10/2006 */
					/*
					AND a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					AND a.BUY_SELL_FLG=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
					AND b.cln_exch_map_code=:chr_p_deal_cln_map_cd
					AND a.exchg_code=b.cln_exch_code
					AND a.status <> 'PM'
			GROUP BY exchg_code,b.cln_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,order_no;
		
				IS_ANY_ORA_ERROR
			
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			EXEC SQL DECLARE deal_ref_cur1 CURSOR FOR
			   SELECT client,identiy_no from dl_deal a
					WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
						AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
						AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
						AND 'T' = :chr_trd_setl_ind)
						OR
						(a.exch_code=:p_dl_deal_struct_h->h_exch_code
						AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
						AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
						AND 'S' = :chr_trd_setl_ind))
				  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				  AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
				/* commented by amish - 30/10/2006 */
					/*
			     AND deal_date=:p_dl_deal_struct_h->h_dlt
				 */
				  AND a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
				  AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
				  AND a.deal_stat ='RC' AND DL_CLASS != '40'
				  AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL)
				  AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
						  						WHERE cln_exch_map_code=:chr_p_deal_cln_map_cd
						  						AND ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
												AND 'T' = :chr_trd_setl_ind)
												OR
												(a.exch_code=:p_dl_deal_struct_h->h_exch_code
												AND 'S' = :chr_trd_setl_ind)));
												//AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);
			//HB_12151 Interoperability Among Clearing Corporations Ends --
				IS_ANY_ORA_ERROR
		    EXEC SQL OPEN deal_ref_cur1;
				IS_ANY_ORA_ERROR
		     for(;;)
		    {
				 strcpy(l_dl_deal_brkg_struct_h->h_client,APL_NULL_STRING);
				 strcpy(l_dl_deal_brkg_struct_h->h_identiy_no,APL_NULL_STRING);
				 l_dl_deal_brkg_struct_i->i_client = 0;
				 l_dl_deal_brkg_struct_i->i_identiy_no = 0;

				  EXEC SQL FETCH deal_ref_cur1 INTO
					  :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no;

				if(APL_ZERO_RESULT_SET)
					   break;
				IS_ANY_ORA_ERROR

/* ISKB-401:AmitB:25-08-2007 */
/*					strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
					strcat(l_ref_no_str,",");
*/					strcat(l_ref_no_str,chr_data_fld_sprtr);
				    strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
					strcat(l_ref_no_str,chr_data_val_sprtr);
					

			}

			EXEC SQL CLOSE deal_ref_cur1;
				IS_ANY_ORA_ERROR

			printf("\n Deal_Ref_No String :|%s|\n",l_ref_no_str);
					//HB_12151 Interoperability Among Clearing Corporations Starts --
					//Interoperability 13-Jun-2019 added cln_Exch_code join
		 			EXEC SQL INSERT  INTO dl_unmatch_deals
						SELECT cln_exch_map_code,deal_date,domestic_cpclt,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),NULL,NULL,deal_cd,
								 instr_code,decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type),'UM',:l_ref_no_str,NULL,'MTOM - '||:nmfields
								 FROM dl_deal a,(SELECT  cln_exch_map_code,cln_code,cln_exch_cOde 
												FROM mt_cli_exch_map c
												WHERE c.CLN_EXCH_MAP_CODE=:chr_p_deal_cln_map_cd
												AND c.CLN_EXCH_CODE=:p_dl_deal_struct_h->h_exch_code
												) b
								 WHERE ((trd_exch=:p_dl_deal_struct_h->h_exch_code
								AND trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
								AND trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
								AND trd_exch = b.cln_Exch_code
								AND 'T' = :chr_trd_setl_ind)
								OR
								(exch_code=:p_dl_deal_struct_h->h_exch_code
								AND settlement_no=:p_dl_deal_struct_h->h_settlement_no
								AND mkt_type=:p_dl_deal_struct_h->h_mkt_type
								AND exch_code = b.cln_Exch_code
								AND 'S' = :chr_trd_setl_ind))
								 AND instr_code=:p_dl_deal_struct_h->h_instr_code
								 AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
								/* commented by amish - 30/10/2006 */
								/*
								 AND deal_date=:p_dl_deal_struct_h->h_dlt
								 */
								 AND clh_flg=:p_dl_deal_struct_h->h_clh_flg
								 AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
								 AND b.cln_exch_map_code=:chr_p_deal_cln_map_cd
								 AND ((a.trd_exch=b.cln_exch_code
								 AND 'T' = :chr_trd_setl_ind)
								 OR
								 (a.exch_code=b.cln_exch_code
								 AND 'S' = :chr_trd_setl_ind))
								 //AND a.exch_code=b.cln_exch_code
								 AND a.deal_stat ='RC' AND a.DL_CLASS != '40'
								 GROUP BY cln_exch_map_code,deal_date,domestic_cpclt,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),deal_cd,
								 			 instr_code,decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type);
					//HB_12151 Interoperability Among Clearing Corporations Ends --
			IS_ANY_ORA_ERROR

  		  strcpy(nmfields,APL_NULL_STRING);	
		strcpy(l_ref_no_str,APL_NULL_STRING);

				 strcpy(l_dl_deal_brkg_struct_h->h_client,APL_NULL_STRING);
				 strcpy(l_dl_deal_brkg_struct_h->h_identiy_no,APL_NULL_STRING);
				 l_dl_deal_brkg_struct_i->i_client = 0;
				 l_dl_deal_brkg_struct_i->i_identiy_no = 0;
	  printf("\n #### Deal Record NOT Matching with EO ####\n");

	
    }
	else
	{
		*p_OrderMatch='Y';
		
/*	     EXEC SQL INSERT INTO dl_match_orders
					SELECT exchg_code,b.cln_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,
						   NULL,'PM',order_no,'MTOM'
						   FROM dl_exchgord_upld a,mt_cli_exch_map b
					WHERE a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND	a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					AND a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					AND a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					AND a.BUY_SELL_FLG=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
					AND a.client IN(SELECT  cln_code from mt_cli_exch_map c
												WHERE c.CLN_EXCH_MAP_CODE=:chr_p_deal_cln_map_cd
												AND c.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code)
					AND a.exchg_code=b.cln_exch_code
					AND nvl(a.matched,'N')!='Y';
				
		 IS_ANY_ORA_ERROR
*/
		
		EXEC SQL INSERT INTO dl_match_orders
					SELECT exchg_code,b.cln_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,	
					NULL,'PM',order_no,'MTOM',buy_sell_flg
					FROM dl_exchgord_upld a,(SELECT cln_exch_map_code,cln_code,cln_exch_code 
														FROM mt_cli_exch_map c
														WHERE c.CLN_EXCH_MAP_CODE=:chr_p_deal_cln_map_cd
														AND c.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code) b	 					WHERE a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND   a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					/* commented by amish - 30/10/2006 */
					/*
					AND a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					AND a.BUY_SELL_FLG=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg	/* Condn added for BuySell-AmitB-060307*/
					AND b.cln_exch_map_code=:chr_p_deal_cln_map_cd
					AND a.exchg_code=b.cln_exch_code
					AND a.client=b.cln_code /* ISKB_4396 - Added by Yog on 12-Oct-2010 for PMS Client Processing Enh UAT Issue */
					AND a.status ='AA'
			GROUP BY exchg_code,b.cln_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,order_no,buy_sell_flg;
		
			IS_ANY_ORA_ERROR
                    
                             							   
		 EXEC SQL UPDATE dl_exchgord_upld a SET MATCHED='Y',status='PM'
				   WHERE  a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND    a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND	 a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					AND	 a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					   /* commented by amish - 30/10/2006 */
				   /*
					AND	 a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND    a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND 	 a.buy_sell_flg=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
					AND a.status ='AA'
					AND a.client IN(SELECT  cln_code from mt_cli_exch_map b
											WHERE b.CLN_EXCH_MAP_CODE=:chr_p_deal_cln_map_cd
											AND b.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code)
					AND  a.order_no IN (SELECT B.ORDER_NO FROM LIST_EXCH_ORDERS B); /* ISKB-1723 : ASHISH 20-08-2008 */

		 	printf("\n Error1=|%d |\n",sqlca.sqlcode);
			
		  IS_ANY_ORA_ERROR	
		
			  

		  if(fabs(diff_nse) > 0)
		  {
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			 EXEC SQL SELECT sum(brokercomm) INTO :tot_brkg from dl_deal a
					WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
						AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
						AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
						AND 'T' = :chr_trd_setl_ind)
						OR
						(a.exch_code=:p_dl_deal_struct_h->h_exch_code
						AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
						AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
						AND 'S' = :chr_trd_setl_ind))
				   AND  a.instr_code=:p_dl_deal_struct_h->h_instr_code
				 /* commented by amish - 30/10/2006 */
					/*
			      AND  a.deal_date=:p_dl_deal_struct_h->h_dlt
				  */
					AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd
					AND  a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					AND  a.client IN(SELECT cln_code FROM mt_cli_exch_map b
												//WHERE a.exch_code=b.cln_exch_code
												WHERE ((a.trd_exch=b.cln_exch_code
													AND 'T' = :chr_trd_setl_ind)
													OR
													(a.exch_code=b.cln_exch_code
													AND 'S' = :chr_trd_setl_ind))
												AND 	b.cln_exch_map_code=:chr_p_deal_cln_map_cd);
			//HB_12151 Interoperability Among Clearing Corporations Ends --
			IS_ANY_ORA_ERROR

			printf("\n TOTAL BROKERAGE =|%lf|\n",tot_brkg);
		    
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			 EXEC SQL DECLARE brkg_calc_nse CURSOR FOR
			   SELECT client,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type),instr_code, brk_no,deal_cd,deal_date,identiy_no,brokercomm
					FROM dl_deal a
					 WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'T' = :chr_trd_setl_ind)
					OR
					(a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
					  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				 /* commented by amish - 30/10/2006 */
					/*
					  AND deal_date=:p_dl_deal_struct_h->h_dlt
					  */
					  AND a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					  AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd
					  AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					  AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					  AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL)
					  AND a.client IN(SELECT cln_code FROM mt_cli_exch_map b
							 					 //WHERE a.exch_code=b.CLN_EXCH_CODE
												 WHERE ((a.trd_exch=b.cln_exch_code
													AND 'T' = :chr_trd_setl_ind)
													OR
													(a.exch_code=b.cln_exch_code
													AND 'S' = :chr_trd_setl_ind))
							  					 AND   b.cln_exch_map_code=:chr_p_deal_cln_map_cd);;
			//HB_12151 Interoperability Among Clearing Corporations Ends --
		     EXEC SQL OPEN brkg_calc_nse;
			  IS_ANY_ORA_ERROR

		     for(;;)
		     {
				  EXEC SQL FETCH brkg_calc_nse INTO
					 :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_exch_code:l_dl_deal_brkg_struct_i->i_exch_code,
					 :l_dl_deal_brkg_struct_h->h_settlement_no:l_dl_deal_brkg_struct_i->i_settlement_no,
					 :l_dl_deal_brkg_struct_h->h_mkt_type:l_dl_deal_brkg_struct_i->i_mkt_type,
					 :l_dl_deal_brkg_struct_h->h_instr_code:l_dl_deal_brkg_struct_i->i_instr_code,
					 :l_dl_deal_brkg_struct_h->h_brk_no:l_dl_deal_brkg_struct_i->i_brk_no,
					 :l_dl_deal_brkg_struct_h->h_deal_cd:l_dl_deal_brkg_struct_i->i_deal_cd,
					 :l_dl_deal_brkg_struct_h->h_deal_date:l_dl_deal_brkg_struct_i->i_deal_date,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no,
					 :l_dl_deal_brkg_struct_h->h_brokercomm:l_dl_deal_brkg_struct_i->i_brokercomm;
				 
				  if(APL_ZERO_RESULT_SET)
					   break;
				  IS_ANY_ORA_ERROR
				 

				  Brkg_mod=l_dl_deal_brkg_struct_h->h_brokercomm;

				  brkg_adjust=diff_nse*(Brkg_mod/tot_brkg);
					
				  printf(" brkg_adjust =|%lf| \n",brkg_adjust);
				 /* ISKB-401:AmitB:25-08-2007:Update amt_differ also  */ 
				 /* Changes done for Equity Fund Confirmation implementation -Start */
						Alert("\n client code is %s",l_dl_deal_brkg_struct_h->h_client);
	 Alert("\n deal code is %s",l_dl_deal_brkg_struct_h->h_deal_cd);
	 
	memset(ret_val,APL_NULL_CHAR,sizeof(ret_val));

	 
	 EXEC SQL SELECT GETCLIENTPARAMBYID('EARLY_PAYIN_FND',:l_dl_deal_brkg_struct_h->h_client) into :ret_val FROM DUAL;
	 
	 		printf("\n ret_val is %s",ret_val);
		
	 
	 if((!strcmp(l_dl_deal_brkg_struct_h->h_deal_cd,"4"))&&(!strcmp(ret_val,"Y")))
	 {
				  EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',PLTOPL_FLG='G',
 				  brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
                       amt_differ=:brkg_adjust /* KOTAK to HDFC Retro - Rahul 03Sept2007 */
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;			
		 	Alert("\n Error2=|%d |\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
	}
	else
	{
	
				  EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',
 				  brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
                       amt_differ=:brkg_adjust /* KOTAK to HDFC Retro - Rahul 03Sept2007 */
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;
					
		 	Alert("\n Error2=|%d |\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
	
	}	
						/* Changes done for Equity Fund Confirmation implementation -End */
					
		 	printf("\n Error2=|%d |\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
	
			 }
			 EXEC SQL CLOSE brkg_calc_nse;
			 IS_ANY_ORA_ERROR
		  }		  /*  if(Diff_nse >0) Ends	*/
		  else if(fabs(diff_bse) > 0)
		  {

			 EXEC SQL SELECT SUM(brokercomm) INTO :tot_brkg from dl_deal a
					 WHERE   a.exch_code=:p_dl_deal_struct_h->h_exch_code
				    AND     a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
			       AND     a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
				    AND     a.instr_code=:p_dl_deal_struct_h->h_instr_code
				 /* commented by amish - 30/10/2006 */
					/*
			       AND     a.deal_date=:p_dl_deal_struct_h->h_dlt
				   */
					 AND 		a.deal_cd=:p_dl_deal_struct_h->h_dealcd
					 AND 		a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					 AND 		a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					 AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					 AND  	a.client IN(SELECT cln_code FROM mt_cli_exch_map b
							 					WHERE a.exch_code=b.CLN_EXCH_CODE
							 					AND   b.cln_exch_map_code=:chr_p_deal_cln_map_cd);
			
			IS_ANY_ORA_ERROR
				
			printf("\n TOTAL BROKERAGE =|%lf|\n",tot_brkg);
		    
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			 EXEC SQL DECLARE brkg_calc_bse CURSOR FOR
			   SELECT client,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type),instr_code, brk_no,deal_cd,deal_date,identiy_no,brokercomm
					FROM dl_deal a
					 WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'T' = :chr_trd_setl_ind)
					OR
					(a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
					  AND a.instr_code=:p_dl_deal_struct_h->h_instr_code
					  AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd
				 /* commented by amish - 30/10/2006 */
						/*
					  AND a.deal_date=:p_dl_deal_struct_h->h_dlt
					  */
					  AND a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					  AND a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					  AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					  AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL)
					  AND     a.client IN(SELECT cln_code FROM mt_cli_exch_map b
							 						 //WHERE a.exch_code=b.cln_exch_code
													 WHERE ((a.trd_exch=b.cln_exch_code
														AND 'T' = :chr_trd_setl_ind)
														OR
														(a.exch_code=b.cln_exch_code
														AND 'S' = :chr_trd_setl_ind))
							  						 AND   b.cln_exch_map_code=:chr_p_deal_cln_map_cd);
			//HB_12151 Interoperability Among Clearing Corporations Ends --
		     EXEC SQL OPEN brkg_calc_bse;
			  IS_ANY_ORA_ERROR
		     for(;;)
		    {
				  EXEC SQL FETCH brkg_calc_bse INTO
					 :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_exch_code:l_dl_deal_brkg_struct_i->i_exch_code,
					 :l_dl_deal_brkg_struct_h->h_settlement_no:l_dl_deal_brkg_struct_i->i_settlement_no,
					 :l_dl_deal_brkg_struct_h->h_mkt_type:l_dl_deal_brkg_struct_i->i_mkt_type,
					 :l_dl_deal_brkg_struct_h->h_instr_code:l_dl_deal_brkg_struct_i->i_instr_code,
					 :l_dl_deal_brkg_struct_h->h_brk_no:l_dl_deal_brkg_struct_i->i_brk_no,
					 :l_dl_deal_brkg_struct_h->h_deal_cd:l_dl_deal_brkg_struct_i->i_deal_cd,
					 :l_dl_deal_brkg_struct_h->h_deal_date:l_dl_deal_brkg_struct_i->i_deal_date,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no,
					 :l_dl_deal_brkg_struct_h->h_brokercomm:l_dl_deal_brkg_struct_i->i_brokercomm;
				 
				  if(APL_ZERO_RESULT_SET)
					   break;
				  IS_ANY_ORA_ERROR
				  
				  forctr++;
				  printf("\n forctr= |%d|\n",forctr);

				  Brkg_mod=l_dl_deal_brkg_struct_h->h_brokercomm;

				  printf("\n Brkg To be Modified= |%lf| \n",Brkg_mod);

	/*			  if (APL_FAILURE == CO_Calc_Brkg_Adjust(diff_bse,brokercomm,tot_brkg,&brkg_adjust))	*/

				  brkg_adjust=diff_bse*(Brkg_mod/tot_brkg);
					
				  printf(" brkg_adjust =|%lf| \n",brkg_adjust);
				  /* ISKB-401:AmitB:25-08-2007:Update amt_differ also */
				  
				  /* Changes done for Equity Fund Confirmation implementation -Start */
				  
				  Alert("\n client code is %s",l_dl_deal_brkg_struct_h->h_client);
	 Alert("\n deal code is %s",l_dl_deal_brkg_struct_h->h_deal_cd);
	
	 memset(ret_val,APL_NULL_CHAR,sizeof(ret_val));
	
	 EXEC SQL SELECT GETCLIENTPARAMBYID('EARLY_PAYIN_FND',:l_dl_deal_brkg_struct_h->h_client) into :ret_val FROM DUAL;
	 printf("\n ret_val is %s",ret_val);
			
	 
	 if((!strcmp(l_dl_deal_brkg_struct_h->h_deal_cd,"4"))&&(!strcmp(ret_val,"Y")))
	{
						EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',PLTOPL_FLG='G',
					    brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
						amt_differ=:brkg_adjust
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;
				  
				  printf("\n Error3=|%d |\n",sqlca.sqlcode);
				  IS_ANY_ORA_ERROR
	}
		else
		{				  
						EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',
					    brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
						amt_differ=:brkg_adjust
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;
				  
				  printf("\n Error3=|%d |\n",sqlca.sqlcode);
				  IS_ANY_ORA_ERROR
		}
				  
				/* Changes done for Equity Fund Confirmation implementation -End */
				
			 }
			 EXEC SQL CLOSE brkg_calc_bse;
			 IS_ANY_ORA_ERROR
		  }		  /*  if(Diff_bse >0) Ends	*/
		  else
		  {
			  if(!strcmp(p_dl_deal_struct_h->h_dealcd,"4"))
		    {
				//HB_12151 Interoperability Among Clearing Corporations Starts --
					EXEC SQL UPDATE dl_deal a SET a.deal_stat='PM',is_matched='X',pltopl_flg=DECODE(GETCLIENTPARAMBYID('EARLY_PAYIN_FND',a.client),'Y','G',a.pltopl_flg)
						 WHERE  ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
							AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
							AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
							AND 'T' = :chr_trd_setl_ind)
							OR
							(a.exch_code=:p_dl_deal_struct_h->h_exch_code
							AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
							AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
							AND 'S' = :chr_trd_setl_ind))
					    AND  a.instr_code=:p_dl_deal_struct_h->h_instr_code
							 /* commented by amish - 30/10/2006 */
						 /*
					    AND  a.deal_date=:p_dl_deal_struct_h->h_dlt
						*/
						 AND 	a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
						 AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
						 AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
						 AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
						 AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
							  							WHERE cln_exch_map_code=:chr_p_deal_cln_map_cd
														//AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);
														AND ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
														AND 'T' = :chr_trd_setl_ind)
														OR
														(a.exch_code=:p_dl_deal_struct_h->h_exch_code
														AND 'S' = :chr_trd_setl_ind)));
					//HB_12151 Interoperability Among Clearing Corporations Ends --
					printf("\n Amit=|%d| \n",sqlca.sqlcode);

				 IS_ANY_ORA_ERROR
			}
			else{
					//HB_12151 Interoperability Among Clearing Corporations Starts --
					EXEC SQL UPDATE dl_deal a SET a.deal_stat='PM',is_matched='X'
						 WHERE  ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
							AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
							AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
							AND 'T' = :chr_trd_setl_ind)
							OR
							(a.exch_code=:p_dl_deal_struct_h->h_exch_code
							AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
							AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
							AND 'S' = :chr_trd_setl_ind))
					    AND  a.instr_code=:p_dl_deal_struct_h->h_instr_code
							 /* commented by amish - 30/10/2006 */
						 /*
					    AND  a.deal_date=:p_dl_deal_struct_h->h_dlt
						*/
						 AND 	a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
						 AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
						 AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
						 AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
						 AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
							  							WHERE cln_exch_map_code=:chr_p_deal_cln_map_cd
														//AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);
														AND ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
														AND 'T' = :chr_trd_setl_ind)
														OR
														(a.exch_code=:p_dl_deal_struct_h->h_exch_code
														AND 'S' = :chr_trd_setl_ind)));
					//HB_12151 Interoperability Among Clearing Corporations Ends --
					printf("\n Amit=|%d| \n",sqlca.sqlcode);

				 IS_ANY_ORA_ERROR
			}
			
		  }
				

		/*	EXEC SQL DECLARE deal_ref_cur CURSOR FOR
			   SELECT client,identiy_no from dl_deal a
					WHERE exch_code=:p_dl_deal_struct_h->h_exch_code
				  AND settlement_no=:p_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:p_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				  AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
				// commented by amish - 30/10/2006 
			     //AND deal_date=:p_dl_deal_struct_h->h_dlt
				  AND a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
				  AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd		// Condn added AmitB 080307	
				  AND  a.deal_stat='PM'
				  AND a.is_matched ='X'  
				  AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
						  						WHERE cln_exch_map_code=:chr_p_deal_cln_map_cd
						  						AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);  commented by akshay for ISKB_11408*/
												
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			//Interoperability 13-Jun-2019 added cln_Exch_code join
			EXEC SQL DECLARE deal_ref_cur CURSOR FOR
			   SELECT client,identiy_no,Cln_Exch_Map_Code from dl_deal a,Mt_Cli_Exch_Map b
					WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
				AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
				AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
				AND a.trd_exch = cln_Exch_code
				AND 'T' = :chr_trd_setl_ind)
				OR
				(a.exch_code=:p_dl_deal_struct_h->h_exch_code
				AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
				AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
				AND a.exch_code = cln_Exch_code
				AND 'S' = :chr_trd_setl_ind))
				  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				  AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
				  And a.client =b.Cln_Code
				// commented by amish - 30/10/2006 
			     //AND deal_date=:p_dl_deal_struct_h->h_dlt
				  AND a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
				  AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd		// Condn added AmitB 080307	
				  AND  a.deal_stat='PM'
				  AND a.is_matched ='X'
				  //AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL) //commented by pavan for equity fund conf
				  AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
						  						WHERE cln_exch_map_code=:chr_p_deal_cln_map_cd
						  						//AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);  //added by akshay for ISKB_11408
												AND ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
												AND 'T' = :chr_trd_setl_ind)
												OR
												(a.exch_code=:p_dl_deal_struct_h->h_exch_code
												AND 'S' = :chr_trd_setl_ind)));
			//HB_12151 Interoperability Among Clearing Corporations Ends --
		    EXEC SQL OPEN deal_ref_cur;
			 IS_ANY_ORA_ERROR
		     for(;;)
		    {
				  EXEC SQL FETCH deal_ref_cur INTO
					  :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no,
					 :match_client;

				if(APL_ZERO_RESULT_SET)
					   break;
				IS_ANY_ORA_ERROR

					/* ISKB-401:AmitB:25-08-2007 */
/*					strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
					strcat(l_ref_no_str,",");
*/					strcat(l_ref_no_str,chr_data_fld_sprtr);
				    strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
                    strcat(l_ref_no_str,chr_data_val_sprtr);
					
				/*	EXEC SQL DELETE FROM dl_match_rpt WHERE deal_ref_no=:l_dl_deal_brkg_struct_h->h_identiy_no and client =:l_dl_deal_brkg_struct_h->h_client; commented by akshay for ISKB_11408*/
					
					EXEC SQL DELETE FROM dl_match_rpt WHERE deal_ref_no=:l_ref_no_str and client =:match_client; 
					
					if(sqlca.sqlcode)
					{
						printf("\n Error Deleting from Report Table MTOM |%d|\n",sqlca.sqlcode);	
					}
					IS_ANY_ORA_ERROR

			}

			EXEC SQL CLOSE deal_ref_cur;
			IS_ANY_ORA_ERROR
			printf("\n Deal_Ref_No String :|%s|\n",l_ref_no_str);


		 brkg_adjust=(fabs(diff_nse) > 0 ) ? diff_nse : diff_bse;
		
		 	
		 strcpy(l_chr_proc_desc,((fabs(brkg_adjust) > 0) ? "MTOMT":"MTOM-"));
	
		 printf("\n ************************** Applying Tolerance MANY-MANY ***************************** \n");
			
		 printf("\n M-M diff_nse	=|%lf| diff_bse	=|%lf|	\n",diff_nse,diff_bse);

		 printf("\n M-M l_chr_proc_desc=|%s|  brkg_adjust=|%lf|\n",l_chr_proc_desc,brkg_adjust);

		 printf("\n ************************** Applying Tolerance  MANY-MANY ***************************** \n");



/*			EXEC SQL INSERT  INTO dl_match_deals 
				SELECT cln_exch_map_code,deal_date,domestic_cpclt,exch_code,NULL,NULL,deal_cd,instr_code,settlement_no,
					   mkt_type,'PM',:l_ref_no_str,NULL,'MTOM-'||:l_ref_no_str FROM dl_deal a,mt_cli_exch_map b
				  WHERE exch_code=:p_dl_deal_struct_h->h_exch_code
				  AND settlement_no=:p_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:p_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				  AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
			     AND deal_date=:p_dl_deal_struct_h->h_dlt
				  AND clh_flg=:p_dl_deal_struct_h->h_clh_flg
				  AND a.exch_code=b.cln_exch_code
				  AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map b
										  		WHERE b.cln_exch_map_code=:chr_p_deal_cln_map_cd
						  						AND b.CLN_EXCH_CODE=:p_dl_deal_struct_h->h_exch_code);
						
					printf("\n Amit:Error5=|%d|\n",sqlca.sqlcode);
					
					IS_ANY_ORA_ERROR
*/

          /* Changes done by Vilin for ISKB_4674 */
				//HB_12151 Interoperability Among Clearing Corporations Starts --
				//Interoperability 13-Jun-2019 added cln_Exch_code join
		 			EXEC SQL INSERT  INTO dl_match_deals
					/*	SELECT cln_exch_map_code,deal_date,domestic_cpclt,exch_code,NULL,NULL,deal_cd,
								 instr_code,settlement_no,mkt_type,'PM',:l_ref_no_str,NULL,'MTOM-'||:l_ref_no_str */
                SELECT cln_exch_map_code,deal_date,domestic_cpclt,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),NULL,NULL,deal_cd,
                       instr_code,decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type),'PM',:l_ref_no_str,:brkg_adjust,:l_chr_proc_desc||:l_ref_no_str
								 FROM dl_deal a,(SELECT  cln_exch_map_code,cln_code,cln_exch_cOde 
										 					FROM mt_cli_exch_map c
															WHERE c.CLN_EXCH_MAP_CODE=:chr_p_deal_cln_map_cd
															AND c.CLN_EXCH_CODE=:p_dl_deal_struct_h->h_exch_code) b
								 WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
								AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
								AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
								AND a.trd_exch = cln_Exch_code
								AND 'T' = :chr_trd_setl_ind)
								OR
								(a.exch_code=:p_dl_deal_struct_h->h_exch_code
								AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
								AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
								AND a.exch_code = cln_Exch_code
								AND 'S' = :chr_trd_setl_ind))
								 AND instr_code=:p_dl_deal_struct_h->h_instr_code
								 AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
									/* commented by amish - 30/10/2006 */
								 /*
								 AND deal_date=:p_dl_deal_struct_h->h_dlt
								 */
								 AND clh_flg=:p_dl_deal_struct_h->h_clh_flg
								 AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd		/* Condn added AmitB 080307	*/
								 AND b.cln_exch_map_code=:chr_p_deal_cln_map_cd
								 //AND a.exch_code=b.cln_exch_code
								 AND ((a.trd_exch=b.cln_exch_code
								 AND 'T' = :chr_trd_setl_ind)
								 OR
								(a.exch_code=b.cln_exch_code
								 AND 'S' = :chr_trd_setl_ind))
						 		 AND  a.deal_stat='PM'
								 AND a.IS_MATCHED ='X'
								 GROUP BY cln_exch_map_code,deal_date,domestic_cpclt,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),deal_cd,
								 			 instr_code,decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type);
			//HB_12151 Interoperability Among Clearing Corporations Ends --

			printf("\n Sql error during insertion ointo dl_match_deals in MTOM case is %d",sqlca.sqlcode);
			fflush(stdout);


         /* Changes end by Vilin for ISKB_4674 */

					IS_ANY_ORA_ERROR


			EXEC SQL UPDATE DL_DEAL SET IS_MATCHED='Y' WHERE IS_MATCHED ='X';
			IS_ANY_ORA_ERROR
					
	 printf("\n **** Deal Record Matching with EO ****\n");

	}


 APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
		 
			/* ISKB-1723 : ASHISH 21-08-2008 */
			EXEC SQL DELETE FROM LIST_EXCH_ORDERS;
			printf("\n Sql Error to truncate the table LIST_EXCH_ORDERS = |%d| \n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR

		CO_ProcMonitor(g_flogfile," Leaving FuncMatchMtoM With Success",NULL,NULL);
		return(APL_SUCCESS);
 		
    RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile," Failed Inside FuncMatchMtoM",NULL,NULL);
		printf("Inside FuncMatchMtoM - Failed");
		return(APL_FAILURE);
 }  




int MatchDataStringForm(char *param_MatchDealDataString,
						char *param_MatchEODataString,
						char *param_ToleranceString,
						char *p_ex_code,
						FILE *g_flogfile,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)

{
	
	char l_MatchDealDataString[1000];
	char l_MatchEODataString[1000];
	char l_ToleranceString[100];

	MATCHING_MASTER_STRUCT_H *l_matching_master_struct_h=NULL;
	MATCHING_MASTER_STRUCT_I *l_matching_master_struct_i=NULL;

	EXEC SQL BEGIN DECLARE SECTION;

		EXEC SQL VAR l_MatchDealDataString IS STRING;
		EXEC SQL VAR l_MatchEODataString IS STRING;
		EXEC SQL VAR l_ToleranceString IS STRING;
		EXEC SQL VAR l_matching_master_struct_h->h_dealfield IS STRING;
		EXEC SQL VAR l_matching_master_struct_h->h_comp_field IS STRING;

	EXEC SQL END DECLARE SECTION;


	memset(l_MatchDealDataString, NULL, sizeof(l_MatchDealDataString));
	memset(l_MatchEODataString, NULL, sizeof(l_MatchEODataString));
	memset(l_ToleranceString, NULL, sizeof(l_ToleranceString));
	
	l_matching_master_struct_h = (MATCHING_MASTER_STRUCT_H *)calloc(1, sizeof(MATCHING_MASTER_STRUCT_H));
	APL_MALLOC_FAIL(l_matching_master_struct_h)
	l_matching_master_struct_i = (MATCHING_MASTER_STRUCT_I *)calloc(1, sizeof(MATCHING_MASTER_STRUCT_I));
	APL_MALLOC_FAIL(l_matching_master_struct_i)

	memset(l_matching_master_struct_h, NULL, sizeof(MATCHING_MASTER_STRUCT_H));
	memset(l_matching_master_struct_i, NULL, sizeof(MATCHING_MASTER_STRUCT_I));


	EXEC SQL DECLARE match_cursor CURSOR FOR
			 SELECT * from matching_master
				WHERE usefield='Y'
				AND proc_ind='T'
				AND exchng =:p_ex_code
				OR (exchng IS NULL and proc_ind='T' and usefield='Y');
		
		IS_ANY_ORA_ERROR


	EXEC SQL OPEN match_cursor;
		IS_ANY_ORA_ERROR

	   for(;;)
	   {
			EXEC SQL FETCH match_cursor INTO :l_matching_master_struct_h:l_matching_master_struct_i;

			if(APL_ZERO_RESULT_SET)
				break;
			   
			IS_ANY_ORA_ERROR
			
			strcat(l_MatchDealDataString,l_matching_master_struct_h->h_dealfield);
			strcat(l_MatchDealDataString,"#");
			strcat(l_MatchEODataString,l_matching_master_struct_h->h_comp_field);
			strcat(l_MatchEODataString,"#");
			strcat(l_ToleranceString,(char *)ltoa(l_matching_master_struct_h->h_lmt));
			strcat(l_ToleranceString,"#");
	   }

	   strcpy(param_MatchDealDataString,l_MatchDealDataString);
	   strcpy(param_MatchEODataString,l_MatchEODataString);
	   strcpy(param_ToleranceString,l_ToleranceString);
		
	EXEC SQL CLOSE match_cursor;
	IS_ANY_ORA_ERROR
	

APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
/*			CO_ProcMonitor(g_flogfile," Leaving MatchDataStringForm With Success ",NULL,NULL);	*/
			return(APL_SUCCESS);
	   
 	  RETURN_FAILURE:
			CO_ProcMonitor(g_flogfile," Failed inside  MatchDataStringForm ",NULL,NULL);
			printf("\n Failed in  MatchDataStringForm \n");
			return(APL_FAILURE);
}



int EOStringForm(DL_EXCHGORD_UPLD_STRUCT_H *p_dl_exchgord_upld_struct_h,
				char* param_EOString,
				FILE *g_flogfile,
				DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{	

	char l_EOString[4000]=APL_NULL_STRING;
	char l_temp[4000]=APL_NULL_STRING;

	memset(l_EOString, NULL, sizeof(l_EOString));
	memset(l_temp, NULL, sizeof(l_temp));
	
	sprintf(l_temp,"%cORDER_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_order_no);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cEXCHG_CODE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_exchg_code);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cCLIENT%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_cln_code);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cINSTR_CODE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_instr_code);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cBROKER_CD%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_broker_cd);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	//sprintf(l_temp,"%cQTY%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_exchgord_upld_struct_h->h_qty));
	sprintf(l_temp,"%cQTY%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_qty);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cSETTL_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_settl_no);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cDL_PRICE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_exchgord_upld_struct_h->h_dl_price));
	*/
	sprintf(l_temp,"%cDL_PRICE%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_dl_price);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cDL_AMT%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_exchgord_upld_struct_h->h_dl_amt));
	*/
	sprintf(l_temp,"%cDL_AMT%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_dl_amt);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	/* commented by amish -- 31/10/2006 -- changed for no delivery records */
	/*
	sprintf(l_temp,"%cDEAL_DATE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_deal_date);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	*/
	sprintf(l_temp,"%cMKT_TYPE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_mkt_type);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cSCRIP_GRP%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_scrip_grp);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cDEAL_REF_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_deal_ref_no);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cBUY_SELL_FLG%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_buy_sell_flg);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cMATCHED%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_matched);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cSTATUS%c%s%c",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_exchgord_upld_struct_h->h_status,DATA_FIELD_SEPRTR);
	strcat(l_temp,"\0");
	strcat(l_EOString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);

	strcpy(param_EOString,l_EOString);
	
APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile," Leaving EOStringForm With Success",NULL,NULL);
		return(APL_SUCCESS);
/* AIX - Warning
 	  RETURN_FAILURE:
	    CO_ProcMonitor(g_flogfile," Failed inside EOStringForm",NULL,NULL);
		printf("Failed inside EOStringForm");
	   	return(APL_FAILURE);
*/
}



int DealStringForm(SYS_DL_DEAL_STRUCT_H *p_dl_deal_struct_h,
				   char *param_DealString,
				   FILE *g_flogfile,
				   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)

{
	char l_DealString[4000]=APL_NULL_STRING;
	char l_temp[4000]=APL_NULL_STRING;

	memset(l_DealString, NULL, sizeof(l_DealString));
	memset(l_temp, NULL, sizeof(l_temp));

	sprintf(l_temp,"%cCLIENT%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_dl_client);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cIDENTIY_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_indentity_no);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	/* commented by amish -- 31/10/2006 -- changed for no delivery records */
	/*
	sprintf(l_temp,"%cDEAL_DATE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_dlt);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	*/
	sprintf(l_temp,"%cSETL_DATE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_setldt);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cCOST%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_pr));
	*/
	sprintf(l_temp,"%cCOST%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_pr);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cEX_ARENA%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_exch_code);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cEXCH_CODE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_exch_code);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cAMOUNT%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_amt));
	*/
	sprintf(l_temp,"%cAMOUNT%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_amt);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cCUSTODYCOMM%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_custodycomm));
	*/
	sprintf(l_temp,"%cCUSTODYCOMM%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_custodycomm);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cBROKERCOMM%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_brokercomm));
	*/
	sprintf(l_temp,"%cBROKERCOMM%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_brokercomm);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cSTX_COMM%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_stx_comm));
	*/
	sprintf(l_temp,"%cSTX_COMM%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_stx_comm);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
		/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cOTH_COMM%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_oth_comm));
	*/
	sprintf(l_temp,"%cOTH_COMM%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_oth_comm);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
//	sprintf(l_temp,"%cQTY%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_qty));//AIX Warning Removal
	sprintf(l_temp,"%cQTY%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_qty);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cBRK_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_brkrno);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cDEAL_CD%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_dealcd);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cINSTR_CODE%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_instr_code);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cDEAL_STAT%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_deal_status);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cACCESS_STAMP%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_access_stamp);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	/* changes by amish - 31/10/2006 */
	/*
	sprintf(l_temp,"%cNET_AMT%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,(char *)ltoa(p_dl_deal_struct_h->h_net_amt));
	*/
	sprintf(l_temp,"%cNET_AMT%c%lf",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_net_amt);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cUNIQ_IDENT_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_uniq_ident_no);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
	sprintf(l_temp,"%cSETTLEMENT_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_settlement_no);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
/*	sprintf(l_temp,"%BRK_NO%c%s",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_domcpclt_cd);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);
*/
	sprintf(l_temp,"%cMKT_TYPE%c%s%c",DATA_FIELD_SEPRTR,DATA_VALUE_SEPRTR,p_dl_deal_struct_h->h_mkt_type,DATA_FIELD_SEPRTR);
	strcat(l_temp,"\0");
	strcat(l_DealString,l_temp);
	strcpy(l_temp,APL_NULL_STRING);

	strcpy(param_DealString,l_DealString);


APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile," Leaving DealStringForm With Success",NULL,NULL);
		return(APL_SUCCESS);
/* AIX - Warning
 	  RETURN_FAILURE:
 	    CO_ProcMonitor(g_flogfile," Failed inside DealStringForm",NULL,NULL);
		printf("Failed inside DealStringForm");
	   	return(APL_FAILURE);
*/
}

int ManyToMany_SLB(char *MatchDealDataString,
			   char *MatchEODataString,
			   char *ToleranceString,
			   char *p_settlement_no,
			   char *p_mkt_type,
			   char *p_exchange,
			   char *p_client_master,
			   char *p_client_code,
			   char *p_trade_type,
			   char **argv,
			   FILE *g_flogfile,
			   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{	
	 
	char  forced_match='N';
	char  OrderMatch='N';	
	char  P_EXCHG_CODE[100];
	char  DealString[4000] = APL_NULL_STRING;
	char  EOString[4000] = APL_NULL_STRING;
	char chr_l_deal_cln_map_cd[21]= APL_NULL_STRING;
	char chr_l_eo_cln_map_cd[21]= APL_NULL_STRING;
	short i_deal_cln_map_cd=0;
	short i_eo_cln_map_cd=0;
	/** Isolve-307:AmitB:08052007 **/
	 char  l_exch_instr_code[13]=APL_NULL_STRING;
	 char  l_scrip_grp[5]=APL_NULL_STRING;
	 short i_exch_instr_code = 0;
	 short i_scrip_grp = 0;
	
	// Pankaj Deshpande
	char  	*l_sqlstmt = (char *)NULL;
	char  	*l_sqlstmt_append = APL_NULL_STRING;
	
	EXEC SQL VAR DealString IS STRING;
	EXEC SQL VAR EOString IS STRING;
	
	// Pankaj Deshpande
	EXEC SQL VAR p_client_code IS STRING;
	EXEC SQL VAR p_client_master IS STRING;
	EXEC SQL VAR p_trade_type IS STRING;
	
	SYS_DL_DEAL_STRUCT_H *l_dl_deal_struct_h= NULL;
	SYS_DL_DEAL_STRUCT_I *l_dl_deal_struct_i= NULL;
		
	DL_EXCHGORD_UPLD_STRUCT_H *l_dl_exchgnord_upld_struct_h= NULL;
	DL_EXCHGORD_UPLD_STRUCT_I *l_dl_exchgnord_upld_struct_i= NULL;

	EXEC SQL BEGIN DECLARE SECTION;

		EXEC SQL VAR l_dl_deal_struct_h->h_dl_client IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_settlement_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_exch_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_brkrno IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dlt IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_dealcd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_indentity_no IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_domcpclt_cd IS STRING;
		EXEC SQL VAR l_dl_deal_struct_h->h_countclt IS STRING;

		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_cln_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_exchg_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_settl_no IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_mkt_type IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_instr_code IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_deal_date IS STRING;
		EXEC SQL VAR l_dl_exchgnord_upld_struct_h->h_broker_cd IS STRING;
		EXEC SQL VAR chr_l_deal_cln_map_cd IS STRING;
		EXEC SQL VAR chr_l_eo_cln_map_cd IS STRING;

	EXEC SQL END DECLARE SECTION;


	l_dl_deal_struct_h=(SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_deal_struct_h)
	l_dl_deal_struct_i=(SYS_DL_DEAL_STRUCT_I *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));	
	APL_MALLOC_FAIL(l_dl_deal_struct_i)

	l_dl_exchgnord_upld_struct_h=(DL_EXCHGORD_UPLD_STRUCT_H *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_h)
	l_dl_exchgnord_upld_struct_i=(DL_EXCHGORD_UPLD_STRUCT_I *)calloc(1,sizeof(DL_EXCHGORD_UPLD_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_exchgnord_upld_struct_i)

	l_sqlstmt = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	l_sqlstmt_append = (char *)calloc(150000,sizeof(char));
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	// Pankaj Deshpande - Ends  
	
	memset(l_dl_deal_struct_h, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
	memset(l_dl_exchgnord_upld_struct_h, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_H));

	memset(l_dl_deal_struct_i, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
	memset(l_dl_exchgnord_upld_struct_i, NULL, sizeof(DL_EXCHGORD_UPLD_STRUCT_I));

	
	printf("\n\n	 *********************************************************** ");
	printf("\n		  STARTING WITH MANY TO MANY MATCHING	SLB			 \n");
	printf("\n	************************************************************\n");
	
	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n			STARTING WITH MANY TO MANY MATCHING SLB			 ",NULL,NULL);
	CO_ProcMonitor(g_flogfile,"\n***********************************************************",NULL,NULL);

		if(strcmp(p_mkt_type,APL_NULL_STRING) == 0)
		strcpy(p_mkt_type,"%");

	    if(strcmp(p_exchange,APL_NULL_STRING) == 0)
	    strcpy(p_exchange,"%");

		// Pankaj Deshpande
		if(strcmp(p_client_code,APL_NULL_STRING) == 0)
			strcpy(p_client_code,"%");
		
		if(strcmp(p_client_master,APL_NULL_STRING) == 0)
			strcpy(p_client_master,"%");
	

	/** TUX added condition EX_Arena ***/
	/** Isolve-307:AmitB:08052007 **/
	//HB_12151 Interoperability Among Clearing Corporations Starts --
	//Interoperability 13-Jun-2019 added cln_Exch_code join		
	memset(l_sqlstmt,APL_NULL_CHAR,150000);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	
	
	sprintf(l_sqlstmt," SELECT decode('%s','T',trd_mkt_type,mkt_type),decode('%s','T',trd_setl_no,settlement_no), decode('%s','T',trd_exch,exch_code),instr_code,deal_date,deal_cd,sum(nvl(qty,0)) QTY,sum(nvl(amount,0)),sum(nvl(brokercomm,0)) BROKERCOMM, sum(nvl(net_amt,0))as NET_AMT,domestic_cpclt,CLH_FLG,slb_exch_map_code,interfii_flg FROM dl_deal a, mt_cli_exch_map b, MT_CLIENT C WHERE A.CLIENT = C.CLN_CODE AND deal_stat='RC' AND DL_CLASS != '40' AND a.client =b.cln_code AND A.CLIENT LIKE '%s' AND C.CLN_MASTER LIKE '%s' ",chr_trd_setl_ind,chr_trd_setl_ind,chr_trd_setl_ind,p_client_code,p_client_master );
	sprintf(l_sqlstmt_append,"AND ((a.trd_exch like '%s' and a.trd_mkt_type like '%s' and a.trd_setl_no = '%s' and a.trd_exch = cln_Exch_code AND 'T' = '%s') OR (a.exch_code like '%s' and a.mkt_type like '%s' and a.settlement_no = '%s' and a.exch_code = cln_Exch_code AND 'S' = '%s')) ",p_exchange, p_mkt_type,p_settlement_no,chr_trd_setl_ind,p_exchange,p_mkt_type,p_settlement_no,chr_trd_setl_ind );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);	
	sprintf(l_sqlstmt_append," AND	( decode('%s','T',trd_mkt_type,a.mkt_type) = DECODE('%s','NSE','23','BSE','18','MCS','63') OR decode('%s','T',trd_mkt_type,a.mkt_type) = DECODE('%s','NSE','24','BSE','19','MCS','64')  OR  decode('%s','T',trd_mkt_type,a.mkt_type) = DECODE('%s','NSE','25','BSE','20','MCS','65') )  ",chr_trd_setl_ind,p_exchange,chr_trd_setl_ind,p_exchange,chr_trd_setl_ind,p_exchange );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	sprintf(l_sqlstmt_append," AND ((a.trd_exch=b.cln_exch_code  AND 'T' = '%s') OR (a.exch_code=b.cln_exch_code AND 'S' = '%s')) AND a.clh_flg= 'C' AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL) AND NOT EXISTS (SELECT 'X' FROM dl_match_deals b WHERE a.client=b.client AND a.identiy_no=b.ident_no AND b.matched='PM') ",chr_trd_setl_ind,chr_trd_setl_ind );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	sprintf(l_sqlstmt_append," GROUP BY slb_exch_map_code,decode('%s','T',trd_setl_no,settlement_no), decode('%s','T',trd_mkt_type,mkt_type),decode('%s','T',trd_exch,exch_code),instr_code,deal_date,domestic_cpclt,deal_cd,exch_code,CLH_FLG,interfii_flg ",chr_trd_setl_ind,chr_trd_setl_ind,chr_trd_setl_ind );
	strcat(l_sqlstmt,l_sqlstmt_append);
	memset(l_sqlstmt_append,APL_NULL_CHAR,150000);
	
	printf("\n PPD: l_sqlstmt: |%s|",l_sqlstmt);
	fflush(stdout);
	
	EXEC SQL PREPARE sss3 FROM :l_sqlstmt;
	IS_ANY_ORA_ERROR
	
	EXEC SQL DECLARE deal_outer3_slb CURSOR FOR sss3;
	IS_ANY_ORA_ERROR

  	EXEC SQL OPEN deal_outer3_slb;
	IS_ANY_ORA_ERROR

	 for(;;)
	 {
		   EXEC SQL FETCH deal_outer3_slb INTO /*:l_dl_deal_struct_h->h_dl_client:l_dl_deal_struct_i->i_dl_client,*/
										  :l_dl_deal_struct_h->h_mkt_type:l_dl_deal_struct_i->i_mkt_type,
										  :l_dl_deal_struct_h->h_settlement_no:l_dl_deal_struct_i->i_settlement_no,
										  :l_dl_deal_struct_h->h_exch_code:l_dl_deal_struct_i->i_exch_code,
										  :l_dl_deal_struct_h->h_instr_code:l_dl_deal_struct_i->i_instr_code,
										  :l_dl_deal_struct_h->h_dlt:l_dl_deal_struct_i->i_dlt,
										  :l_dl_deal_struct_h->h_dealcd:l_dl_deal_struct_i->i_dealcd,
										  :l_dl_deal_struct_h->h_qty:l_dl_deal_struct_i->i_qty,
										  :l_dl_deal_struct_h->h_amt:l_dl_deal_struct_i->i_amt,
										  :l_dl_deal_struct_h->h_brokercomm:l_dl_deal_struct_i->i_brokercomm,
										  :l_dl_deal_struct_h->h_net_amt:l_dl_deal_struct_i->i_net_amt,
 										  :l_dl_deal_struct_h->h_brkrno:l_dl_deal_struct_i->i_brkrno,
										  :l_dl_deal_struct_h->h_clh_flg:l_dl_deal_struct_i->i_clh_flg,
										  :chr_l_deal_cln_map_cd:i_deal_cln_map_cd,
										  :l_dl_deal_struct_h->h_interfii_flg:l_dl_deal_struct_i->i_interfii_flg;

		   if(sqlca.sqlcode)
			{
				printf("\n ERROR FETCHING DEAL DATA MTOM SLB:|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n ERROR FETCHING DEAL DATA MTOM SLB :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

		   if(APL_ZERO_RESULT_SET)
			    break;
		   IS_ANY_ORA_ERROR
		


			sprintf(chr_g_log_buffer,"\n MTOM SLB Deal: Exch_code=|%s|Setttlementno=|%s| MktType=|%s|InstrCode=|%s|Broker=|%s| DealDate=|%s|DealCd=|%s|Qty=|%lf| Amount=|%lf| NetAmount=|%lf| Brokercomm=|%lf| CLH_FLG=|%s| CP CODE=|%s|\n",
									  l_dl_deal_struct_h->h_exch_code,
									  l_dl_deal_struct_h->h_settlement_no,
									  l_dl_deal_struct_h->h_mkt_type,
									  l_dl_deal_struct_h->h_instr_code,
									  l_dl_deal_struct_h->h_brkrno,
									  l_dl_deal_struct_h->h_dlt,
									  l_dl_deal_struct_h->h_dealcd,
									  l_dl_deal_struct_h->h_qty,
									  l_dl_deal_struct_h->h_amt,
									  l_dl_deal_struct_h->h_net_amt,		
									  l_dl_deal_struct_h->h_brokercomm,
									  l_dl_deal_struct_h->h_clh_flg,
									  chr_l_deal_cln_map_cd);

			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);


		   EXEC SQL DECLARE EO_inner3_slb CURSOR FOR
			   SELECT exchg_code,settl_no,mkt_type,instr_code,deal_date,broker_cd,SUM(qty)as QTY,SUM(dl_amt) as AMOUNT,BUY_SELL_FLG
			  	  FROM dl_exchgord_upld a
				  WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
				  AND settl_no=:l_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:l_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:l_dl_deal_struct_h->h_instr_code
/*				  AND client=:l_dl_deal_struct_h->h_dl_client
				  AND decode(BUY_SELL_FLG,'B','4','S','3')=:l_dl_deal_struct_h->h_dealcd	*/
				  /* commented by amish - 30/10/2006 */
				  /*
			      AND deal_date=:l_dl_deal_struct_h->h_dlt
				  */
   				  AND buy_sell_flg=decode(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
				  AND broker_cd=:l_dl_deal_struct_h->h_brkrno
				  AND nvl(matched,'N')!='Y'
				  AND status='AA'
				  AND a.client IN(SELECT cln_code FROM mt_cli_exch_map b
						  					WHERE b.slb_exch_map_code=:chr_l_deal_cln_map_cd
											AND b.cln_exch_code=a.exchg_code)
				  AND NOT EXISTS (SELECT 'X' FROM dl_match_orders b
								WHERE b.order_no=a.order_no
								AND b.client=a.client
								AND b.matched='PM')
				GROUP BY settl_no,mkt_type,instr_code,deal_date,broker_cd,exchg_code,BUY_SELL_FLG;

	

		EXEC SQL OPEN EO_inner3_slb;
		IS_ANY_ORA_ERROR
		
		for(;;)
		{
		
			EXEC SQL FETCH EO_inner3_slb INTO
/*						:l_dl_exchgnord_upld_struct_h->h_cln_code:l_dl_exchgnord_upld_struct_i->i_cln_code,	*/
						:l_dl_exchgnord_upld_struct_h->h_exchg_code:l_dl_exchgnord_upld_struct_i->i_exchg_code,
						:l_dl_exchgnord_upld_struct_h->h_settl_no:l_dl_exchgnord_upld_struct_i->i_settl_no,
						:l_dl_exchgnord_upld_struct_h->h_mkt_type:l_dl_exchgnord_upld_struct_i->i_mkt_type,
						:l_dl_exchgnord_upld_struct_h->h_instr_code:l_dl_exchgnord_upld_struct_i->i_instr_code,
						:l_dl_exchgnord_upld_struct_h->h_deal_date:l_dl_exchgnord_upld_struct_i->i_deal_date,
						:l_dl_exchgnord_upld_struct_h->h_broker_cd:l_dl_exchgnord_upld_struct_i->i_broker_cd,
						:l_dl_exchgnord_upld_struct_h->h_qty:l_dl_exchgnord_upld_struct_i->i_qty,
						:l_dl_exchgnord_upld_struct_h->h_dl_amt:l_dl_exchgnord_upld_struct_i->i_dl_amt,
						:l_dl_exchgnord_upld_struct_h->h_buy_sell_flg:l_dl_exchgnord_upld_struct_i->i_buy_sell_flg;
			
			if(sqlca.sqlcode)
			{
				printf("\n SLB ERROR FETCHING EO DATA MTOM :|%d|",sqlca.sqlcode);
				sprintf(chr_g_log_buffer,"\n SLB ERROR FETCHING EO DATA MTOM :|%d|",sqlca.sqlcode);
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}

			if(APL_ZERO_RESULT_SET)
				break;
		 	IS_ANY_ORA_ERROR
			

			sprintf(chr_g_log_buffer,"\n SLB MTOM EO:Exch_code=|%s|Setttlementno=|%s|MktType=|%s|InstrCode=|%s|Broker=|%s|DealDate=|%s|Qty=|%lf| Amount=|%lf| BUY/SELL=|%s|\n",
						l_dl_exchgnord_upld_struct_h->h_exchg_code,
						l_dl_exchgnord_upld_struct_h->h_settl_no,
						l_dl_exchgnord_upld_struct_h->h_mkt_type,
						l_dl_exchgnord_upld_struct_h->h_instr_code,
						l_dl_exchgnord_upld_struct_h->h_broker_cd,
						l_dl_exchgnord_upld_struct_h->h_deal_date,
						l_dl_exchgnord_upld_struct_h->h_qty,
						l_dl_exchgnord_upld_struct_h->h_dl_amt,
						l_dl_exchgnord_upld_struct_h->h_buy_sell_flg);

			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);



			OrderMatch='N';
			forced_match='N';

			strcpy(DealString,APL_NULL_STRING);


/*			EXEC SQL SELECT DISTINCT(slb_exch_map_code) INTO :chr_l_deal_cln_map_cd FROM mt_cli_exch_map b
				WHERE cln_code IN(SELECT client FROM dl_deal a
									WHERE  mkt_type=:l_dl_deal_struct_h->h_mkt_type
									 AND settlement_no=:l_dl_deal_struct_h->h_settlement_no
									 AND exch_code=:l_dl_deal_struct_h->h_exch_code
									 AND instr_code=:l_dl_deal_struct_h->h_instr_code
									 AND deal_date=:l_dl_deal_struct_h->h_dlt
									 AND deal_cd=:l_dl_deal_struct_h->h_dealcd
									 AND domestic_cpclt=:l_dl_deal_struct_h->h_brkrno
									 AND clh_flg=:l_dl_deal_struct_h->h_clh_flg
									 AND deal_stat='RC'
									 AND a.exch_code=b.cln_exch_code)
								AND ROWNUM=1;
			
			if(sqlca.sqlcode)
			{
				 sprintf(chr_g_log_buffer,"\n Error Fetching CP CODE For Deal Clients Error=|%d| \n");
				 CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}
			IS_ANY_ORA_ERROR

			EXEC SQL SELECT DISTINCT(slb_exch_map_code) INTO :chr_l_eo_cln_map_cd FROM mt_cli_exch_map b
				WHERE cln_code IN(SELECT client FROM dl_exchgord_upld a
									WHERE exchg_code=:l_dl_exchgnord_upld_struct_h->h_exchg_code
									AND mkt_type=:l_dl_exchgnord_upld_struct_h->h_mkt_type
									AND settl_no=:l_dl_exchgnord_upld_struct_h->h_settl_no
									AND instr_code=:l_dl_exchgnord_upld_struct_h->h_instr_code
									AND broker_cd=:l_dl_exchgnord_upld_struct_h->h_broker_cd
									AND deal_date=:l_dl_exchgnord_upld_struct_h->h_deal_date
									AND buy_sell_flg=:l_dl_exchgnord_upld_struct_h->h_buy_sell_flg
									AND status='AA'
									AND a.exchg_code=b.cln_exch_code)
				AND ROWNUM=1;
			
			if(sqlca.sqlcode)
			{
				sprintf(chr_g_log_buffer,"\n Error Fetching CP CODE for Exchange Order Clients Error=|%d| \n");
				CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			}	  
			IS_ANY_ORA_ERROR


		sprintf(chr_g_log_buffer,"\n MTOM: DEAL CP_CODE=|%s| EO CP_CODE=|%s| \n",chr_l_deal_cln_map_cd,chr_l_eo_cln_map_cd	);
		CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

*/
		
/* *******  CHECK TO SEE IF "CP CODES" OF SELECTED DEAL AND EO CLIENTS IS SAME ********* */
			
			/** Start Changes:Isolve-307:AmitB:08052007 **/
			EXEC SQL select distinct exch_instr_code,scrip_grp into :l_exch_instr_code:i_exch_instr_code,:l_scrip_grp:i_scrip_grp
							from DL_EXCHGORD_UPLD a
							WHERE exchg_code=:l_dl_deal_struct_h->h_exch_code
				  AND a.settl_no=:l_dl_deal_struct_h->h_settlement_no
			      AND a.mkt_type=:l_dl_deal_struct_h->h_mkt_type
				  AND a.instr_code=:l_dl_deal_struct_h->h_instr_code
   				  AND a.buy_sell_flg=decode(:l_dl_deal_struct_h->h_dealcd,'1','S','2','B','3','S','4','B')
				  AND a.broker_cd=:l_dl_deal_struct_h->h_brkrno
				  AND nvl(a.matched,'N')!='Y'
				  AND a.status='AA'
				  AND a.client IN(SELECT cln_code FROM mt_cli_exch_map b
						  					WHERE b.slb_exch_map_code=:chr_l_deal_cln_map_cd
											AND b.cln_exch_code=a.exchg_code)
				  AND NOT EXISTS (SELECT 'X' FROM dl_match_orders b
								WHERE b.order_no=a.order_no
								AND b.client=a.client
								AND b.matched='PM')
					  AND rownum=1;
			IS_ANY_ORA_ERROR
			
			fprintf(g_flogfile,"\n SLB l_scrip_grp=|%s| \n",l_scrip_grp);
			fprintf(g_flogfile," SLB l_exch_instr_code=|%s| \n",l_exch_instr_code);
			if(!strcmp(l_dl_deal_struct_h->h_interfii_flg,"Y"))
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"6",1)==0  || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found for FII....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */

				}
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS")) //Added BY PT FOR MCS Enhancement
				{
					if(strcmp(l_scrip_grp,"IL")!=0)
					{
						fprintf(g_flogfile,"SLB Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			else
			{
				if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"BSE"))
				{
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
					if(strncmp(l_exch_instr_code,"5",1)==0  || strncmp(l_exch_instr_code,"3",1)==0)
					{
						Alert("Proper Exch Instrument Code found for FII....\n");
					}
					else
					{
						fprintf(g_flogfile,"Skipping InterFII:DealNo=|%s| Not Matched with Order=|%s| for ExchScripCode=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_exch_instr_code);
						continue;
					}
		/* strncmp(l_exch_instr_code,"3",1) added By Chirag 11042008 for SLB */
				}
				else if(!strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"NSE") || !strcmp(l_dl_exchgnord_upld_struct_h->h_exchg_code,"MCS")) //Added BY PT FOR MCS Enhancement
				{
					if(strcmp(l_scrip_grp,"IL")==0)
					{
						fprintf(g_flogfile,"SLB Skipping NON-InterFII:DealNo=|%s| Not Matched with Order=|%s| for ScripGroup=|%s|",l_dl_deal_struct_h->h_indentity_no,l_dl_exchgnord_upld_struct_h->h_order_no,l_scrip_grp);
						continue;
					}
				}
			}
			/** End Changes:Isolve-307:AmitB:08052007 **/
			
			if(APL_FAILURE == DealStringForm(l_dl_deal_struct_h,DealString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
			strcpy(EOString,APL_NULL_STRING);

			if(APL_FAILURE == EOStringForm(l_dl_exchgnord_upld_struct_h,EOString,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
				if(APL_FAILURE == MatchDataStringForm(MatchDealDataString,MatchEODataString,ToleranceString,l_dl_deal_struct_h->h_exch_code,g_flogfile,l_debug_info_ptr))
			{
				CO_ProcMonitor(g_flogfile, "SLB MatchDataStringForm returned failure", NULL, NULL);
				APL_GOBACK_FAIL		
			}

			if(APL_FAILURE == FuncMatch_MtoM_SLB(l_dl_deal_struct_h,l_dl_exchgnord_upld_struct_h,DealString,EOString,MatchDealDataString,MatchEODataString,ToleranceString,&OrderMatch,&forced_match,chr_l_deal_cln_map_cd,g_flogfile,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL		
			}
						
			if(OrderMatch=='Y')
			{	
				break;
			}


		/*commit_count++;*/

/*
		 if (  (commit_count%COMMIT_FREQ_LOGAUTOEVNT) == 0  )
		  {
			 
			 printf("\n INSIDE COMMIT CODE \n"); 
			sprintf(chr_h_stat_info,"Started One To One Matching.Processed %d Records.",commit_count);
			
				 EXEC SQL UPDATE   BATCH_IN_PROC
				  SET STATUS   = :chr_g_status_started,
				  RESTART_DATA = :h_restart_data,
				  STAT_INFO    = :chr_h_stat_info
				  WHERE ROWID  = :h_batch_in_proc_rowid;

			 IS_ANY_ORA_ERROR


			 EXEC SQL COMMIT WORK;
			 IS_ANY_ORA_ERROR

			 CO_ProcMonitor(g_flogfile,"RECORD COMMITTED \n",NULL,NULL);

			 EXEC SQL SELECT ROWID,RESTART_DATA
			 INTO :h_batch_in_proc_rowid,:h_restart_data :i_restart_data
			 FROM BATCH_IN_PROC
			 WHERE ROWID = :h_batch_in_proc_rowid
			 FOR UPDATE OF RESTART_DATA ,STATUS;
		
			 IS_ANY_ORA_ERROR

		     EXEC SQL COMMIT WORK ;
 
			 IS_ANY_ORA_ERROR

	         EXEC SQL OPEN EO_inner3;

			 IS_ANY_ORA_ERROR

		  }

*/	

		}

			EXEC SQL CLOSE EO_inner3_slb;
			IS_ANY_ORA_ERROR

	 }

		EXEC SQL CLOSE deal_outer3_slb;
		IS_ANY_ORA_ERROR

	EXEC SQL COMMIT WORK ;
	
	/*commit_count=0;*/



APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile," SLB Leaving ManyToMany With Success",NULL,NULL);
		return(APL_SUCCESS);
	   
 	  RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile," SLB Failed Inside ManyToMany",NULL,NULL);
		printf("\n SLB Error Inside ManyToMany \n");
	   	return(APL_FAILURE);

}

int FuncMatch_MtoM_SLB(SYS_DL_DEAL_STRUCT_H *p_dl_deal_struct_h,DL_EXCHGORD_UPLD_STRUCT_H *p_dl_exchgord_upld_struct_h,char *p_DealString,char *p_EOString,char *p_MatchDealDataString,char *p_MatchEODataString,char *p_ToleranceString,char *p_OrderMatch,char *p_forced_match,char *chr_p_deal_cln_map_cd,FILE *g_flogfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char MatchFlag='Y';
	char **temp1;
	char **temp2;
	char **temp_tol;
	char *temp3;
	char *temp4;
	char *temp5[10];
	char *temp6[10];
	int  int_num_1=0;
	int  int_num_2=0;
	int  int_num_3=0;
	char p_source1[4000]=APL_NULL_STRING;
	char p_source2[4000]=APL_NULL_STRING;
	char p_source3[4000]=APL_NULL_STRING;
	char p_source4[4000]=APL_NULL_STRING;
	char p_source5[100]=APL_NULL_STRING;
	char CompareDealData[1000]=APL_NULL_STRING;
	char CompareEOData[1000]=APL_NULL_STRING;
	int i=0;
	int j=0;
	int k=0;
	double diff_nse=0;
	double diff_bse=0;
	double Bcomm=0;
	char P_EXCHG_CODE[10]=APL_NULL_STRING;
	char P_DEAL_CD[10]=APL_NULL_STRING;
	char P_FIELD[30]=APL_NULL_STRING;
	double Brkg_mod;
	double tot_brkg=0;
	double brkg_adjust=0;
	int forctr=0;
	
	/*
	char nmfields[100]=APL_NULL_STRING;
	char t_nmfields[100]=APL_NULL_STRING;
	char l_ref_no_str[400]=APL_NULL_STRING;
	char l_chr_proc_desc[6]=APL_NULL_STRING;
	*/

	/* Changed by ASHISH 30-08-2007 
    char nmfields[2001]=APL_NULL_STRING;
	char t_nmfields[2001]=APL_NULL_STRING;
	char l_ref_no_str[2001]=APL_NULL_STRING;
	char l_chr_proc_desc[2001]=APL_NULL_STRING;    

	 ADDED BY AMISH - 31/10/2006 */

	/*Added by Prateek on 28102014 for Matching issue- START
	char nmfields[4001]=APL_NULL_STRING;
	char t_nmfields[4001]=APL_NULL_STRING;
	char l_ref_no_str[4001]=APL_NULL_STRING;
	char l_chr_proc_desc[4001]=APL_NULL_STRING;
	Added by Prateek on 28102014 for Matching issue- END*/
	
	/* Added by Akshay for ISKB_11408 start*/
	char nmfields[32000]=APL_NULL_STRING;
	char t_nmfields[32000]=APL_NULL_STRING;
	char l_ref_no_str[32000]=APL_NULL_STRING;
	char l_chr_proc_desc[32000]=APL_NULL_STRING;
    /* Added by Akshay for ISKB_11408 end*/

	char chr_amt[30] = APL_NULL_STRING;
	char chr_amt1[30] = APL_NULL_STRING;
	char chr_dl_amt[30] = APL_NULL_STRING;
	char chr_dl_amt1[30] = APL_NULL_STRING;
	char chr_net_amt[30] = APL_NULL_STRING;
	char chr_sett_amt[30] =  APL_NULL_STRING;
	char chr_net_amt1[30] = APL_NULL_STRING;
	char chr_sett_amt1[30] =  APL_NULL_STRING;
	char chr_amt2[30] = APL_NULL_STRING;
	char chr_dl_amt2[30] = APL_NULL_STRING;
	char chr_net_amt2[30] = APL_NULL_STRING;
	char chr_sett_amt2[30] =  APL_NULL_STRING;
	/* ADDED BY AMISH - 31/10/2006 */
	double amt_diff=0.0;	/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
    /* ISKB-401:AmitB:25-08-2007 */
	char chr_data_fld_sprtr[10] = APL_NULL_STRING;
    char chr_data_val_sprtr[10] = APL_NULL_STRING;

	INTL_ENV_DATA_STRUCT_H *l_intl_env_data_h;

			DL_DEAL_BRKG_STRUCT_H *l_dl_deal_brkg_struct_h= NULL;
			DL_DEAL_BRKG_STRUCT_I *l_dl_deal_brkg_struct_i= NULL;
		
	EXEC SQL BEGIN DECLARE SECTION;
				
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_client IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_exch_code IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_settlement_no IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_mkt_type IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_instr_code IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_brk_no IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_deal_cd IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_deal_date IS STRING;
			EXEC SQL VAR l_dl_deal_brkg_struct_h->h_identiy_no IS STRING;			




		EXEC SQL VAR CompareDealData IS STRING;	
		EXEC SQL VAR CompareEOData IS STRING;
		EXEC SQL VAR p_source1 IS STRING;
		EXEC SQL VAR p_source2 IS STRING;
		EXEC SQL VAR p_source3 IS STRING;
		EXEC SQL VAR p_source4 IS STRING;
		EXEC SQL VAR p_source5 IS STRING;
		EXEC SQL VAR nmfields IS STRING;
		EXEC SQL VAR t_nmfields IS STRING;
		EXEC SQL VAR P_EXCHG_CODE IS STRING;
		EXEC SQL VAR P_DEAL_CD IS STRING;
		EXEC SQL VAR P_FIELD IS STRING;
		EXEC SQL VAR temp1 IS STRING;
		EXEC SQL VAR temp2 IS STRING;
		EXEC SQL VAR temp_tol IS STRING;
		EXEC SQL VAR l_ref_no_str IS STRING;
		EXEC SQL VAR l_chr_proc_desc IS STRING;
		EXEC SQL VAR ret_val IS STRING;

   EXEC SQL END DECLARE SECTION;

	memset(p_source1, NULL, sizeof(p_source1));
	memset(p_source2, NULL, sizeof(p_source2));
	memset(p_source3, NULL, sizeof(p_source3));
	memset(p_source4, NULL, sizeof(p_source4));
	memset(p_source5, NULL, sizeof(p_source5));
	memset(CompareDealData, NULL, sizeof(CompareDealData));
	memset(CompareEOData, NULL, sizeof(CompareEOData));

	/* ISKB-401:AmitB:25-08-2007 */
	sprintf(chr_data_fld_sprtr,"%c",DATA_FIELD_SEPRTR);
    sprintf(chr_data_val_sprtr,"%c",DATA_VALUE_SEPRTR);

	strcpy(p_source1,p_MatchDealDataString);
	strcpy(p_source2,p_MatchEODataString);
	strcpy(p_source3,p_DealString);
	strcpy(p_source4,p_EOString);
	strcpy(p_source5,p_ToleranceString);

			l_dl_deal_brkg_struct_h=(DL_DEAL_BRKG_STRUCT_H *)calloc(1,sizeof(DL_DEAL_BRKG_STRUCT_H));
			APL_MALLOC_FAIL(l_dl_deal_brkg_struct_h)
			l_dl_deal_brkg_struct_i=(DL_DEAL_BRKG_STRUCT_I *)calloc(1,sizeof(DL_DEAL_BRKG_STRUCT_I));
			APL_MALLOC_FAIL(l_dl_deal_brkg_struct_i)
			
			memset(l_dl_deal_brkg_struct_h, NULL, sizeof(DL_DEAL_BRKG_STRUCT_H));
			memset(l_dl_deal_brkg_struct_i, NULL, sizeof(DL_DEAL_BRKG_STRUCT_I));	
	

	if(APL_FAILURE == CO_SplitStr(p_source1,'#',&int_num_1,&temp1))
	{
		CO_ProcMonitor(g_flogfile, "SLB FUNCM2M Failure from CO_SplitStr 1 - Inside FuncMatch_MtoM ", NULL, NULL);
		APL_GOBACK_FAIL
	}	

 	if(APL_FAILURE == CO_SplitStr(p_source2,'#',&int_num_2,&temp2))
	{
		CO_ProcMonitor(g_flogfile, "SLB FUNCM2M  Failure from CO_SplitStr 2 - Inside FuncMatch_MtoM", NULL, NULL);
		APL_GOBACK_FAIL
	}	
	if(APL_FAILURE == CO_SplitStr(p_source5,'#',&int_num_3,&temp_tol))
	{
		CO_ProcMonitor(g_flogfile, "SLB FUNCM2M Failure from CO_SplitStr 3 - Inside FuncMatch_MtoM", NULL, NULL);
		APL_GOBACK_FAIL
	}	

	for(i=0;i<int_num_1;i++)
	{
	    CO_Rtv_DataString(p_source3,temp1[i],CompareDealData);
	    CO_Rtv_DataString(p_source4	,temp2[i],CompareEOData);
	   

		printf("\n SLB FUNCM2M Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);
		
		sprintf(chr_g_log_buffer,"\n SLB FUNCM2M MTOM: Got values for deal & EO for fields |%s| ,|%s| as: |%s| & |%s| \n",temp1[i],temp2[i],CompareDealData,CompareEOData);	
		CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

	   if(strcmp(CompareDealData,CompareEOData)==0)
	   {

	   }
	   else
	   {
		  strcpy(P_FIELD,temp1[i]);
		  strcpy(P_EXCHG_CODE,p_dl_deal_struct_h->h_exch_code);
		  strcpy(P_DEAL_CD,p_dl_deal_struct_h->h_dealcd);
			
		   //if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0) //Commented by Tarkeshwar for MCS enhancement.
		   //Added By Aakash for IOP-2 CS0028550
		   if(strcmp(temp1[i],"AMOUNT")==0 && strcmp(temp2[i],"DL_AMT")==0 && (strcmp(p_dl_deal_struct_h->h_exch_code,"NSE")==0 || strcmp(p_dl_deal_struct_h->h_exch_code,"MCS")==0 
		   || strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0 )) 
		   {
			     /* changes by amish -- 31/10/2006 ************************************start */
					  /*
					  strcpy(chr_net_amt,CompareDealData);
					  */
					  printf("\n SLB FUNCM2M  amish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					  printf("\n SLB FUNCM2M  amish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);


				/*	  EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1 from dual;	*/


					  EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_amt,:chr_dl_amt,:chr_amt1,:chr_dl_amt1,:chr_amt2,:chr_dl_amt2 from dual;

							IS_ANY_ORA_ERROR

     				  printf("\n SLB FUNCM2M  amish*****deal & EO GROSS amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt,chr_dl_amt);
	   				  printf("\n SLB FUNCM2M  amish*****deal & EO GROSS amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt1,chr_dl_amt1);
					  printf("\n SLB FUNCM2M  amish*****deal & EO GROSS amount AFTER Total TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_amt2,chr_dl_amt2);
/****** 	IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******    					

   				      if(strcmp(chr_amt,chr_dl_amt)==0)
					   {
								printf("\n data matching after 1st rounnd off\n");

						
					   }
    				  else if(strcmp(chr_amt1,chr_dl_amt1)==0)
	    			   {
							printf("\n data matching after 2nd rounnd off\n");
							
										
		    		   }
					   else if(strcmp(chr_amt2,chr_dl_amt2)==0)
	    			   {
							printf("\n data matching after Total rounnd off\n");
							
										
		    		   }
			    	 else
			          {
*/						/*
						diff_nse=atof(CompareDealData) - atof(CompareEOData);
						*/
						diff_nse=atof(chr_amt1) - atof(chr_dl_amt1);
						Bcomm=p_dl_deal_struct_h->h_brokercomm;
						printf("\n SLB FUNCM2M  Entered 1st if\n");
						printf("\n SLB FUNCM2M  Difference NSE =|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_nse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);
		
						if(fabs(diff_nse) <= Bcomm*(atof(temp_tol[i]))/100)
						{	
							printf("\n SLB FUNCM2M $$$$$$$ Inside If loop diff_nse *****Vaibhav 19 August 2006********* $$$$$$$$\n");
							EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_nse
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;
							IS_ANY_ORA_ERROR

						}
						else
						{	
							temp4=temp1[i];
							temp6[k]=temp4;
							k++;
							MatchFlag='N';
						}
/****** 	IsolveId:216:Commented:Fraction Check not reqrd for NSE:AmitB:14042007  *******					  
				}
*/		   }
		   else if(strcmp(temp1[i],"NET_AMT")==0 && strcmp(temp2[i],"DL_AMT")==0 && strcmp(p_dl_deal_struct_h->h_exch_code,"BSE")==0)
		   {
			  
						printf("\n SLB FUNCM2M  amish*****deal net amount issssssssssssssssss|%s|\n",CompareDealData);
						/*
						strcpy(chr_sett_amt,CompareBCNData);
						*/
   					    printf("\n SLB FUNCM2M amish*****EO net amount issssssssssssssssss|%s|\n",CompareEOData);

    			/*	EXEC SQL SELECT round(:CompareDealData,2),round(:CompareEOData,2),round(:CompareDealData,1),round(:CompareEOData,1) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1 from dual;	*/
					EXEC SQL SELECT trunc(:CompareDealData,2),trunc(:CompareEOData,2),trunc(:CompareDealData,1),trunc(:CompareEOData,1),trunc(:CompareDealData),trunc(:CompareEOData) INTO :chr_net_amt,:chr_sett_amt,:chr_net_amt1,:chr_sett_amt1,:chr_net_amt2,:chr_sett_amt2 from dual;
							IS_ANY_ORA_ERROR
	    				printf("\n SLB FUNCM2M amish*****deal & EO net amount AFTER 1ST TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt,chr_sett_amt);
    					printf("\n SLB FUNCM2M amish*****deal & EO net amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt1,chr_sett_amt1);
						printf("\n SLB FUNCM2M amish*****deal & EO net amount AFTER 2nd TRUNC OFF issssssssssssssssss|%s|,|%s|\n",chr_net_amt2,chr_sett_amt2);

   				        if(strcmp(chr_net_amt,chr_sett_amt)==0)
					    {

						 printf("\n SLB FUNCM2M  data matching after 1st trunc off\n");

 					    }
    					else if(strcmp(chr_net_amt1,chr_sett_amt1)==0)
	    				{
							
							printf("\n SLB FUNCM2M  data matching after  trunc off\n");
										
		    			}
						else if(strcmp(chr_net_amt2,chr_sett_amt2)==0)
	    				{
							
							printf("\n SLB FUNCM2M  data matching after Total Trunc off\n");
										
		    			}
						/** IsolveId:216:AmitB:18-01-07:1-Rs tolerance for BSE **/
					    else if(fabs(amt_diff)<=1)
					    {
						  fprintf(g_flogfile,"\n SLB FUNCM2M  data matching after After Considering 1Rs Difference \n");
						  EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:amt_diff
							WHERE a.client=:p_dl_deal_struct_h->h_dl_client
							AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;
							IS_ANY_ORA_ERROR
					    }
			    		else
				    	{
								/*
								diff_bse=atof(CompareDealData) - atof(CompareEOData);
								*/
								diff_bse=atof(chr_net_amt1) - atof(chr_sett_amt1);
								Bcomm=p_dl_deal_struct_h->h_brokercomm;
								printf("\n SLB FUNCM2M  Entered 2nd if\n");
								printf("\n SLB FUNCM2M  Difference BSE=|%lf| Bcomm=|%lf| 10p_OF_BKG= |%lf|\n",diff_bse,Bcomm,Bcomm*(atof(temp_tol[i]))/100);

								if(fabs(diff_bse) <= Bcomm*(atof(temp_tol[i]))/100)
								{
								printf("\n SLB FUNCM2M  $$$$$$$ Inside If loop diff_bse *****Vaibhav 19 August 2006********* $$$$$$$$\n");	
								EXEC SQL UPDATE dl_deal a SET AMT_DIFFER =:diff_bse
								WHERE a.client=:p_dl_deal_struct_h->h_dl_client
								AND     a.identiy_no=:p_dl_deal_struct_h->h_indentity_no;

								IS_ANY_ORA_ERROR
								}
								else
								{	
									temp4=temp1[i];
									temp6[k]=temp4;
									k++;
									MatchFlag='N';
								}

						}
			  /* changes by amish -- 31/10/2006 ************************************end */
		   }
		   else
		   {		
				temp4=temp1[i];
				temp6[k]=temp4;
				k++;
				MatchFlag='N';
		  }		
	
	   }
			
	}
	if(MatchFlag=='N')
    {
		int n;	
		for(n=0;n<k;n++)
	    {	
			strcat(t_nmfields,temp6[n]);
			if(n==k-1){}
			else
			{		
				strcat(t_nmfields,",");
			}
		}
		  strcat(nmfields," SLB FUNCM2M Unmatched: Many To Many |Not Matched For: ");
		  strcat(nmfields,t_nmfields);

		  printf("\n SLB FUNCM2M  DATA Did Not Match FOR Following Fields: |%s| \n",nmfields);
		  sprintf(chr_g_log_buffer,"Not Match FOR: |%s| \n",nmfields);
		  CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);

		EXEC SQL INSERT INTO dl_unmatch_orders
					SELECT exchg_code,b.slb_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,	
					NULL,'UM',order_no,'MTOM'
					FROM dl_exchgord_upld a,(SELECT slb_exch_map_code,cln_code,cln_exch_code 
														FROM mt_cli_exch_map c
														WHERE c.slb_exch_map_code=:chr_p_deal_cln_map_cd
														AND c.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code) b	 					WHERE a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND   a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
						/* commented by amish - 30/10/2006 */
					/*
					AND a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					AND a.BUY_SELL_FLG=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
					AND b.slb_exch_map_code=:chr_p_deal_cln_map_cd
					AND a.exchg_code=b.cln_exch_code
					AND a.status <> 'PM'
			GROUP BY exchg_code,b.slb_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,order_no;
		
				IS_ANY_ORA_ERROR
			
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			EXEC SQL DECLARE deal_ref_cur1_slb CURSOR FOR
			   SELECT client,identiy_no from dl_deal a
					WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
				AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
				AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
				AND 'T' = :chr_trd_setl_ind)
				OR
				(a.exch_code=:p_dl_deal_struct_h->h_exch_code
				AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
				AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
				AND 'S' = :chr_trd_setl_ind))
				  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				  AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
				/* commented by amish - 30/10/2006 */
					/*
			     AND deal_date=:p_dl_deal_struct_h->h_dlt
				 */
				  AND a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
				  AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
				  AND a.deal_stat ='RC' AND DL_CLASS != '40'
				  AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL)
				  AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
						  						WHERE slb_exch_map_code=:chr_p_deal_cln_map_cd
						  						//AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);
												AND  ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
												AND 'T' = :chr_trd_setl_ind)
												OR
												(a.exch_code=:p_dl_deal_struct_h->h_exch_code
												AND 'S' = :chr_trd_setl_ind)));
			//HB_12151 Interoperability Among Clearing Corporations Ends --
				IS_ANY_ORA_ERROR
		    EXEC SQL OPEN deal_ref_cur1_slb;
				IS_ANY_ORA_ERROR
		     for(;;)
		    {
				 strcpy(l_dl_deal_brkg_struct_h->h_client,APL_NULL_STRING);
				 strcpy(l_dl_deal_brkg_struct_h->h_identiy_no,APL_NULL_STRING);
				 l_dl_deal_brkg_struct_i->i_client = 0;
				 l_dl_deal_brkg_struct_i->i_identiy_no = 0;

				  EXEC SQL FETCH deal_ref_cur1_slb INTO
					  :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no;

				if(APL_ZERO_RESULT_SET)
					   break;
				IS_ANY_ORA_ERROR

/* ISKB-401:AmitB:25-08-2007 */
/*					strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
					strcat(l_ref_no_str,",");
*/					strcat(l_ref_no_str,chr_data_fld_sprtr);
				    strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
					strcat(l_ref_no_str,chr_data_val_sprtr);
					

			}

			EXEC SQL CLOSE deal_ref_cur1_slb;
				IS_ANY_ORA_ERROR

			printf("\n  SLB FUNCM2M  Deal_Ref_No String :|%s|\n",l_ref_no_str);
					//HB_12151 Interoperability Among Clearing Corporations Starts --
					//Interoperability 13-Jun-2019 added cln_Exch_code join								
		 			EXEC SQL INSERT  INTO dl_unmatch_deals
						SELECT slb_exch_map_code,deal_date,domestic_cpclt,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),NULL,NULL,deal_cd,
								 instr_code,decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type),'UM',:l_ref_no_str,NULL,'MTOM - '||:nmfields
								 FROM dl_deal a,(SELECT  slb_exch_map_code,cln_code,cln_exch_cOde 
										 					FROM mt_cli_exch_map c
															WHERE c.slb_exch_map_code=:chr_p_deal_cln_map_cd
															AND c.CLN_EXCH_CODE=:p_dl_deal_struct_h->h_exch_code) b
								WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
								AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
								AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
								AND a.trd_exch = cln_Exch_code
								AND 'T' = :chr_trd_setl_ind)
								OR
								(a.exch_code=:p_dl_deal_struct_h->h_exch_code
								AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
								AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
								AND a.exch_code = cln_Exch_code
								AND 'S' = :chr_trd_setl_ind))
								 AND instr_code=:p_dl_deal_struct_h->h_instr_code
								 AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
								/* commented by amish - 30/10/2006 */
								/*
								 AND deal_date=:p_dl_deal_struct_h->h_dlt
								 */
								 AND clh_flg=:p_dl_deal_struct_h->h_clh_flg
								 AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
								 AND b.slb_exch_map_code=:chr_p_deal_cln_map_cd
								 //AND a.exch_code=b.cln_exch_code
								AND ((a.trd_exch=b.cln_exch_code
								AND 'T' = :chr_trd_setl_ind)
								OR
								(a.exch_code=b.cln_exch_code
								AND 'S' = :chr_trd_setl_ind))
								 AND a.deal_stat ='RC' AND a.DL_CLASS != '40'
								 GROUP BY slb_exch_map_code,deal_date,domestic_cpclt,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),deal_cd,
								 			 instr_code,decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type);
					//HB_12151 Interoperability Among Clearing Corporations Ends --
			IS_ANY_ORA_ERROR

  		  strcpy(nmfields,APL_NULL_STRING);	
		strcpy(l_ref_no_str,APL_NULL_STRING);

				 strcpy(l_dl_deal_brkg_struct_h->h_client,APL_NULL_STRING);
				 strcpy(l_dl_deal_brkg_struct_h->h_identiy_no,APL_NULL_STRING);
				 l_dl_deal_brkg_struct_i->i_client = 0;
				 l_dl_deal_brkg_struct_i->i_identiy_no = 0;
	  printf("\n  SLB FUNCM2M  #### Deal Record NOT Matching with EO ####\n");

	
    }
	else
	{
		*p_OrderMatch='Y';
		
/*	     EXEC SQL INSERT INTO dl_match_orders
					SELECT exchg_code,b.slb_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,
						   NULL,'PM',order_no,'MTOM'
						   FROM dl_exchgord_upld a,mt_cli_exch_map b
					WHERE a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND	a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					AND a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					AND a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					AND a.BUY_SELL_FLG=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
					AND a.client IN(SELECT  cln_code from mt_cli_exch_map c
												WHERE c.slb_exch_map_code=:chr_p_deal_cln_map_cd
												AND c.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code)
					AND a.exchg_code=b.cln_exch_code
					AND nvl(a.matched,'N')!='Y';
				
		 IS_ANY_ORA_ERROR
*/
		
		EXEC SQL INSERT INTO dl_match_orders
					SELECT exchg_code,b.slb_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,	
					NULL,'PM',order_no,'MTOM',buy_sell_flg
					FROM dl_exchgord_upld a,(SELECT slb_exch_map_code,cln_code,cln_exch_code 
														FROM mt_cli_exch_map c
														WHERE c.slb_exch_map_code=:chr_p_deal_cln_map_cd
														AND c.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code) b	 					WHERE a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND   a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					/* commented by amish - 30/10/2006 */
					/*
					AND a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					AND a.BUY_SELL_FLG=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg	/* Condn added for BuySell-AmitB-060307*/
					AND b.slb_exch_map_code=:chr_p_deal_cln_map_cd
					AND a.exchg_code=b.cln_exch_code
					AND a.status ='AA'
			GROUP BY exchg_code,b.slb_exch_map_code,instr_code,broker_cd,settl_no,deal_date,mkt_type,order_no,buy_sell_flg;
		
			IS_ANY_ORA_ERROR


		 EXEC SQL UPDATE dl_exchgord_upld a SET MATCHED='Y',status='PM'
				   WHERE  a.exchg_code=:p_dl_exchgord_upld_struct_h->h_exchg_code
					AND    a.instr_code=:p_dl_exchgord_upld_struct_h->h_instr_code
					AND	 a.settl_no=:p_dl_exchgord_upld_struct_h->h_settl_no
					AND	 a.mkt_type=:p_dl_exchgord_upld_struct_h->h_mkt_type
					   /* commented by amish - 30/10/2006 */
				   /*
					AND	 a.deal_date=:p_dl_exchgord_upld_struct_h->h_deal_date
					*/
					AND    a.broker_cd=:p_dl_exchgord_upld_struct_h->h_broker_cd
					AND 	 a.buy_sell_flg=:p_dl_exchgord_upld_struct_h->h_buy_sell_flg
					AND a.status ='AA'
					AND a.client IN(SELECT  cln_code from mt_cli_exch_map b
											WHERE b.slb_exch_map_code=:chr_p_deal_cln_map_cd
											AND b.CLN_EXCH_CODE=:p_dl_exchgord_upld_struct_h->h_exchg_code)
					AND  a.order_no IN (SELECT B.ORDER_NO FROM LIST_EXCH_ORDERS B); /* ISKB-1723 : ASHISH 20-08-2008 */

		 	printf("\n Error1=|%d |\n",sqlca.sqlcode);
			
		  IS_ANY_ORA_ERROR	
		
			  

		  if(fabs(diff_nse) > 0)
		  {
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			 EXEC SQL SELECT sum(brokercomm) INTO :tot_brkg from dl_deal a
					WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
			        AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'T' = :chr_trd_setl_ind)
					OR
					(a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
			        AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
				   AND  a.instr_code=:p_dl_deal_struct_h->h_instr_code
				 /* commented by amish - 30/10/2006 */
					/*
			      AND  a.deal_date=:p_dl_deal_struct_h->h_dlt
				  */
					AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd
					AND  a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					AND  a.client IN(SELECT cln_code FROM mt_cli_exch_map b
												//WHERE a.exch_code=b.cln_exch_code
												WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
												AND 'T' = :chr_trd_setl_ind)
												OR
												(a.exch_code=:p_dl_deal_struct_h->h_exch_code
												AND 'S' = :chr_trd_setl_ind))
												AND 	b.slb_exch_map_code=:chr_p_deal_cln_map_cd);
			
			IS_ANY_ORA_ERROR

			printf("\n  SLB FUNCM2M TOTAL BROKERAGE =|%lf|\n",tot_brkg);
		    

			 EXEC SQL DECLARE brkg_calc_nse_slb CURSOR FOR
			   SELECT client,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type),instr_code, brk_no,deal_cd,deal_date,identiy_no,brokercomm
					FROM dl_deal a
					 WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'T' = :chr_trd_setl_ind)
					OR
					(a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
					  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				 /* commented by amish - 30/10/2006 */
					/*
					  AND deal_date=:p_dl_deal_struct_h->h_dlt
					  */
					  AND a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					  AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd
					  AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					  AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					  AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL)
					  AND a.client IN(SELECT cln_code FROM mt_cli_exch_map b
							 					 //WHERE a.exch_code=b.CLN_EXCH_CODE
												 WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
												AND 'T' = :chr_trd_setl_ind)
												OR
												(a.exch_code=:p_dl_deal_struct_h->h_exch_code
												AND 'S' = :chr_trd_setl_ind))
							  					 AND   b.slb_exch_map_code=:chr_p_deal_cln_map_cd);;
			//HB_12151 Interoperability Among Clearing Corporations Ends --
		     EXEC SQL OPEN brkg_calc_nse_slb;
			  IS_ANY_ORA_ERROR

		     for(;;)
		     {
				  EXEC SQL FETCH brkg_calc_nse_slb INTO
					 :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_exch_code:l_dl_deal_brkg_struct_i->i_exch_code,
					 :l_dl_deal_brkg_struct_h->h_settlement_no:l_dl_deal_brkg_struct_i->i_settlement_no,
					 :l_dl_deal_brkg_struct_h->h_mkt_type:l_dl_deal_brkg_struct_i->i_mkt_type,
					 :l_dl_deal_brkg_struct_h->h_instr_code:l_dl_deal_brkg_struct_i->i_instr_code,
					 :l_dl_deal_brkg_struct_h->h_brk_no:l_dl_deal_brkg_struct_i->i_brk_no,
					 :l_dl_deal_brkg_struct_h->h_deal_cd:l_dl_deal_brkg_struct_i->i_deal_cd,
					 :l_dl_deal_brkg_struct_h->h_deal_date:l_dl_deal_brkg_struct_i->i_deal_date,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no,
					 :l_dl_deal_brkg_struct_h->h_brokercomm:l_dl_deal_brkg_struct_i->i_brokercomm;
				 
				  if(APL_ZERO_RESULT_SET)
					   break;
				  IS_ANY_ORA_ERROR
				 

				  Brkg_mod=l_dl_deal_brkg_struct_h->h_brokercomm;

				  brkg_adjust=diff_nse*(Brkg_mod/tot_brkg);
					
				  printf("  SLB FUNCM2M brkg_adjust =|%lf| \n",brkg_adjust);
				 /* ISKB-401:AmitB:25-08-2007:Update amt_differ also  */ 
				 /* Changes done for Equity Fund Confirmation implementation -Start */
				 Alert("\n client code is %s",l_dl_deal_brkg_struct_h->h_client);
	 Alert("\n deal code is %s",l_dl_deal_brkg_struct_h->h_deal_cd);
	
	 memset(ret_val,APL_NULL_CHAR,sizeof(ret_val));
	
	 EXEC SQL SELECT GETCLIENTPARAMBYID('EARLY_PAYIN_FND',:l_dl_deal_brkg_struct_h->h_client) into :ret_val FROM DUAL;
	 printf("\n ret_val is %s",ret_val);
			
	 
	 if((!strcmp(l_dl_deal_brkg_struct_h->h_deal_cd,"4"))&&(!strcmp(ret_val,"Y")))
	{
						EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',PLTOPL_FLG='G',
					    brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
						amt_differ=:brkg_adjust
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;
				  
				 printf("\n  SLB FUNCM2M Error2=|%d |\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
	}
		else
		{				  
						EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',
					    brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
						amt_differ=:brkg_adjust
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;
				  
				  printf("\n  SLB FUNCM2M Error2=|%d |\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
		}
		
			/* Changes done for Equity Fund Confirmation implementation -End */
	
			 }
			 EXEC SQL CLOSE brkg_calc_nse_slb;
			 IS_ANY_ORA_ERROR
		  }		  /*  if(Diff_nse >0) Ends	*/
		  else if(fabs(diff_bse) > 0)
		  {
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			 EXEC SQL SELECT SUM(brokercomm) INTO :tot_brkg from dl_deal a
					 WHERE   ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'T' = :chr_trd_setl_ind)
					OR
					(a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
				    AND     a.instr_code=:p_dl_deal_struct_h->h_instr_code
				 /* commented by amish - 30/10/2006 */
					/*
			       AND     a.deal_date=:p_dl_deal_struct_h->h_dlt
				   */
					 AND 		a.deal_cd=:p_dl_deal_struct_h->h_dealcd
					 AND 		a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					 AND 		a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					 AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					 AND  	a.client IN(SELECT cln_code FROM mt_cli_exch_map b
							 					//WHERE a.exch_code=b.CLN_EXCH_CODE
												WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
												AND 'T' = :chr_trd_setl_ind)
												OR
												(a.exch_code=:p_dl_deal_struct_h->h_exch_code
												AND 'S' = :chr_trd_setl_ind))
							 					AND   b.slb_exch_map_code=:chr_p_deal_cln_map_cd);
			
			IS_ANY_ORA_ERROR
				
			printf("\n  SLB FUNCM2M TOTAL BROKERAGE =|%lf|\n",tot_brkg);
		    

			 EXEC SQL DECLARE brkg_calc_bse_slb CURSOR FOR
			   SELECT client,decode(:chr_trd_setl_ind,'T',trd_exch,exch_code),decode(:chr_trd_setl_ind,'T',trd_setl_no,settlement_no),decode(:chr_trd_setl_ind,'T',trd_mkt_type,mkt_type),instr_code, brk_no,deal_cd,deal_date,identiy_no,brokercomm
					FROM dl_deal a
					 WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
					AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'T' = :chr_trd_setl_ind)
					OR
					(a.exch_code=:p_dl_deal_struct_h->h_exch_code
					AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					AND 'S' = :chr_trd_setl_ind))
					  AND a.instr_code=:p_dl_deal_struct_h->h_instr_code
					  AND a.deal_cd=:p_dl_deal_struct_h->h_dealcd
				 /* commented by amish - 30/10/2006 */
						/*
					  AND a.deal_date=:p_dl_deal_struct_h->h_dlt
					  */
					  AND a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
					  AND a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
					  AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
					  AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL)
					  AND     a.client IN(SELECT cln_code FROM mt_cli_exch_map b
							 						 //WHERE a.exch_code=b.cln_exch_code
													 WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
													AND 'T' = :chr_trd_setl_ind)
													OR
													(a.exch_code=:p_dl_deal_struct_h->h_exch_code
													AND 'S' = :chr_trd_setl_ind))
							  						 AND   b.slb_exch_map_code=:chr_p_deal_cln_map_cd);
			//HB_12151 Interoperability Among Clearing Corporations Ends --
		     EXEC SQL OPEN brkg_calc_bse_slb;
			  IS_ANY_ORA_ERROR
		     for(;;)
		    {
				  EXEC SQL FETCH brkg_calc_bse_slb INTO
					 :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_exch_code:l_dl_deal_brkg_struct_i->i_exch_code,
					 :l_dl_deal_brkg_struct_h->h_settlement_no:l_dl_deal_brkg_struct_i->i_settlement_no,
					 :l_dl_deal_brkg_struct_h->h_mkt_type:l_dl_deal_brkg_struct_i->i_mkt_type,
					 :l_dl_deal_brkg_struct_h->h_instr_code:l_dl_deal_brkg_struct_i->i_instr_code,
					 :l_dl_deal_brkg_struct_h->h_brk_no:l_dl_deal_brkg_struct_i->i_brk_no,
					 :l_dl_deal_brkg_struct_h->h_deal_cd:l_dl_deal_brkg_struct_i->i_deal_cd,
					 :l_dl_deal_brkg_struct_h->h_deal_date:l_dl_deal_brkg_struct_i->i_deal_date,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no,
					 :l_dl_deal_brkg_struct_h->h_brokercomm:l_dl_deal_brkg_struct_i->i_brokercomm;
				 
				  if(APL_ZERO_RESULT_SET)
					   break;
				  IS_ANY_ORA_ERROR
				  
				  forctr++;
				  printf("\n  SLB FUNCM2M forctr= |%d|\n",forctr);

				  Brkg_mod=l_dl_deal_brkg_struct_h->h_brokercomm;

				  printf("\n  SLB FUNCM2M Brkg To be Modified= |%lf| \n",Brkg_mod);

	/*			  if (APL_FAILURE == CO_Calc_Brkg_Adjust(diff_bse,brokercomm,tot_brkg,&brkg_adjust))	*/

				  brkg_adjust=diff_bse*(Brkg_mod/tot_brkg);
					
				  printf("  SLB FUNCM2M brkg_adjust =|%lf| \n",brkg_adjust);
				  /* ISKB-401:AmitB:25-08-2007:Update amt_differ also */
				  
				  /* Changes done for Equity Fund Confirmation implementation -Start */
				 Alert("\n client code is %s",l_dl_deal_brkg_struct_h->h_client);
	 Alert("\n deal code is %s",l_dl_deal_brkg_struct_h->h_deal_cd);
	
	 memset(ret_val,APL_NULL_CHAR,sizeof(ret_val));
	
	 EXEC SQL SELECT GETCLIENTPARAMBYID('EARLY_PAYIN_FND',:l_dl_deal_brkg_struct_h->h_client) into :ret_val FROM DUAL;
	 printf("\n ret_val is %s",ret_val);
			
	 
	 if((!strcmp(l_dl_deal_brkg_struct_h->h_deal_cd,"4"))&&(!strcmp(ret_val,"Y")))
	{
						EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',PLTOPL_FLG='G',
					    brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
						amt_differ=:brkg_adjust
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;
				  
				 printf("\n  SLB FUNCM2M Error3=|%d |\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
	}
		else
		{				  
						EXEC SQL UPDATE dl_deal a SET deal_stat='PM',is_matched='X',
					    brokercomm=a.brokercomm - nvl(decode(a.deal_cd,'3',nvl(:brkg_adjust,0),'4',-nvl(:brkg_adjust,0)),0),
						amt_differ=:brkg_adjust
						WHERE a.client=:l_dl_deal_brkg_struct_h->h_client
						AND	  a.identiy_no=:l_dl_deal_brkg_struct_h->h_identiy_no;
				  
				  printf("\n  SLB FUNCM2M Error3=|%d |\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
		}
		
			/* Changes done for Equity Fund Confirmation implementation -End */				
				
			 }
			 EXEC SQL CLOSE brkg_calc_bse_slb;
			 IS_ANY_ORA_ERROR
		  }		  /*  if(Diff_bse >0) Ends	*/
		  else
		  {
			  if(!strcmp(p_dl_deal_struct_h->h_dealcd,"4"))
		    {
				EXEC SQL UPDATE dl_deal a SET a.deal_stat='PM',is_matched='X',pltopl_flg=DECODE(GETCLIENTPARAMBYID('EARLY_PAYIN_FND',a.client),'Y','G',a.pltopl_flg)
						 WHERE  a.exch_code=:p_dl_deal_struct_h->h_exch_code
					    AND  a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					    AND  a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					    AND  a.instr_code=:p_dl_deal_struct_h->h_instr_code
							 /* commented by amish - 30/10/2006 */
						 /*
					    AND  a.deal_date=:p_dl_deal_struct_h->h_dlt
						*/
						 AND 	a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
						 AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
						 AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
						 AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
						 AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
							  							WHERE slb_exch_map_code=:chr_p_deal_cln_map_cd
														AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);
					
					printf("\n  SLB FUNCM2M Amit:Error4=|%d| \n",sqlca.sqlcode);

				 IS_ANY_ORA_ERROR
			}
			else
			{
				EXEC SQL UPDATE dl_deal a SET a.deal_stat='PM',is_matched='X'
						 WHERE  a.exch_code=:p_dl_deal_struct_h->h_exch_code
					    AND  a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
					    AND  a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
					    AND  a.instr_code=:p_dl_deal_struct_h->h_instr_code
							 /* commented by amish - 30/10/2006 */
						 /*
					    AND  a.deal_date=:p_dl_deal_struct_h->h_dlt
						*/
						 AND 	a.domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
						 AND  a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
						 AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd	/* Condn added AmitB 080307	*/
						 AND  a.deal_stat='RC' AND a.DL_CLASS != '40'
						 AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
							  							WHERE slb_exch_map_code=:chr_p_deal_cln_map_cd
														AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);
					
					printf("\n  SLB FUNCM2M Amit:Error4=|%d| \n",sqlca.sqlcode);

				 IS_ANY_ORA_ERROR
			}

		  }
				
			//HB_12151 Interoperability Among Clearing Corporations Starts --
			EXEC SQL DECLARE deal_ref_cur_slb CURSOR FOR
			   SELECT client,identiy_no from dl_deal a
					WHERE ((a.trd_exch=:p_dl_deal_struct_h->h_exch_code
						AND a.trd_setl_no=:p_dl_deal_struct_h->h_settlement_no
						AND a.trd_mkt_type=:p_dl_deal_struct_h->h_mkt_type
						AND 'T' = :chr_trd_setl_ind)
						OR
						(a.exch_code=:p_dl_deal_struct_h->h_exch_code
						AND a.settlement_no=:p_dl_deal_struct_h->h_settlement_no
						AND a.mkt_type=:p_dl_deal_struct_h->h_mkt_type
						AND 'S' = :chr_trd_setl_ind))
				  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				  AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
				/* commented by amish - 30/10/2006 */
				/*
			     AND deal_date=:p_dl_deal_struct_h->h_dlt
				 */
				  AND a.clh_flg=:p_dl_deal_struct_h->h_clh_flg
				  AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd		/* Condn added AmitB 080307	*/
				  AND  a.deal_stat='PM'
				  AND a.is_matched ='X' 
				 // AND ( PLTOPL_FLG IN ('F','S','N','M') or PLTOPL_FLG IS NULL) commented by pavan for equity fund conf
				  AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map
						  						WHERE slb_exch_map_code=:chr_p_deal_cln_map_cd
						  						//AND a.exch_code=:p_dl_deal_struct_h->h_exch_code);
												AND ((a.exch_code=:p_dl_deal_struct_h->h_exch_code
												AND 'T' = :chr_trd_setl_ind)
												OR
												(a.exch_code=:p_dl_deal_struct_h->h_exch_code		
												AND 'S' = :chr_trd_setl_ind)));
			//HB_12151 Interoperability Among Clearing Corporations Ends --
		    EXEC SQL OPEN deal_ref_cur_slb;
			 IS_ANY_ORA_ERROR
		     for(;;)
		    {
				  EXEC SQL FETCH deal_ref_cur_slb INTO
					  :l_dl_deal_brkg_struct_h->h_client:l_dl_deal_brkg_struct_i->i_client,
					 :l_dl_deal_brkg_struct_h->h_identiy_no:l_dl_deal_brkg_struct_i->i_identiy_no;

				if(APL_ZERO_RESULT_SET)
					   break;
				IS_ANY_ORA_ERROR

					/* ISKB-401:AmitB:25-08-2007 */
/*					strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
					strcat(l_ref_no_str,",");
*/					strcat(l_ref_no_str,chr_data_fld_sprtr);
				    strcat(l_ref_no_str,l_dl_deal_brkg_struct_h->h_identiy_no);
                    strcat(l_ref_no_str,chr_data_val_sprtr);
					
					EXEC SQL DELETE FROM dl_match_rpt WHERE deal_ref_no=:l_dl_deal_brkg_struct_h->h_identiy_no and client =:l_dl_deal_brkg_struct_h->h_client;
					if(sqlca.sqlcode)
					{
						printf("\n  SLB FUNCM2M Error Deleting from Report Table MTOM |%d|\n",sqlca.sqlcode);	
					}
					IS_ANY_ORA_ERROR

			}

			EXEC SQL CLOSE deal_ref_cur_slb;
			IS_ANY_ORA_ERROR
			printf("\n  SLB FUNCM2M Deal_Ref_No String :|%s|\n",l_ref_no_str);


		 brkg_adjust=(fabs(diff_nse) > 0 ) ? diff_nse : diff_bse;
		
		 	
		 strcpy(l_chr_proc_desc,((fabs(brkg_adjust) > 0) ? "MTOMT":"MTOM-"));
	
		 printf("\n  SLB FUNCM2M ************************** Applying Tolerance MANY-MANY ***************************** \n");
			
		 printf("\n  SLB FUNCM2M M-M diff_nse	=|%lf| diff_bse	=|%lf|	\n",diff_nse,diff_bse);

		 printf("\n  SLB FUNCM2M M-M l_chr_proc_desc=|%s|  brkg_adjust=|%lf|\n",l_chr_proc_desc,brkg_adjust);

		 printf("\n  SLB FUNCM2M ************************** Applying Tolerance  MANY-MANY ***************************** \n");



/*			EXEC SQL INSERT  INTO dl_match_deals 
				SELECT slb_exch_map_code,deal_date,domestic_cpclt,exch_code,NULL,NULL,deal_cd,instr_code,settlement_no,
					   mkt_type,'PM',:l_ref_no_str,NULL,'MTOM-'||:l_ref_no_str FROM dl_deal a,mt_cli_exch_map b
				  WHERE exch_code=:p_dl_deal_struct_h->h_exch_code
				  AND settlement_no=:p_dl_deal_struct_h->h_settlement_no
			      AND mkt_type=:p_dl_deal_struct_h->h_mkt_type
				  AND instr_code=:p_dl_deal_struct_h->h_instr_code
				  AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
			     AND deal_date=:p_dl_deal_struct_h->h_dlt
				  AND clh_flg=:p_dl_deal_struct_h->h_clh_flg
				  AND a.exch_code=b.cln_exch_code
				  AND  a.client IN (SELECT cln_code FROM mt_cli_exch_map b
										  		WHERE b.slb_exch_map_code=:chr_p_deal_cln_map_cd
						  						AND b.CLN_EXCH_CODE=:p_dl_deal_struct_h->h_exch_code);
						
					printf("\n Amit:Error5=|%d|\n",sqlca.sqlcode);
					
					IS_ANY_ORA_ERROR
*/

		 			EXEC SQL INSERT  INTO dl_match_deals
						SELECT slb_exch_map_code,deal_date,domestic_cpclt,exch_code,NULL,NULL,deal_cd,
								 instr_code,settlement_no,mkt_type,'PM',:l_ref_no_str,NULL,'MTOM-'||:l_ref_no_str
								 FROM dl_deal a,(SELECT  slb_exch_map_code,cln_code,cln_exch_cOde 
										 					FROM mt_cli_exch_map c
															WHERE c.slb_exch_map_code=:chr_p_deal_cln_map_cd
															AND c.CLN_EXCH_CODE=:p_dl_deal_struct_h->h_exch_code) b
								 WHERE exch_code=:p_dl_deal_struct_h->h_exch_code
								 AND settlement_no=:p_dl_deal_struct_h->h_settlement_no
								 AND mkt_type=:p_dl_deal_struct_h->h_mkt_type
								 AND instr_code=:p_dl_deal_struct_h->h_instr_code
								 AND domestic_cpclt=:p_dl_deal_struct_h->h_brkrno
									/* commented by amish - 30/10/2006 */
								 /*
								 AND deal_date=:p_dl_deal_struct_h->h_dlt
								 */
								 AND clh_flg=:p_dl_deal_struct_h->h_clh_flg
								 AND  a.deal_cd=:p_dl_deal_struct_h->h_dealcd		/* Condn added AmitB 080307	*/
								 AND b.slb_exch_map_code=:chr_p_deal_cln_map_cd
								 AND a.exch_code=b.cln_exch_code
						 		 AND  a.deal_stat='PM'
								 AND a.IS_MATCHED ='X'
								 GROUP BY slb_exch_map_code,deal_date,domestic_cpclt,exch_code,deal_cd,
								 			 instr_code,settlement_no,mkt_type;
					IS_ANY_ORA_ERROR


			EXEC SQL UPDATE DL_DEAL SET IS_MATCHED='Y' WHERE IS_MATCHED ='X';
			IS_ANY_ORA_ERROR
					
	 printf("\n ****  SLB FUNCM2M Deal Record Matching with EO ****\n");

	}


 APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile,"  SLB FUNCM2M Leaving FuncMatchMtoM With Success",NULL,NULL);
		return(APL_SUCCESS);
 		
    RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile,"  SLB FUNCM2M  Failed Inside FuncMatchMtoM",NULL,NULL);
		printf("Inside  SLB FUNCM2M  - Failed");
		return(APL_FAILURE);
 }



/***********************************************************************************************
* Function    : create_Exch_Order_List()                                                       *
* Description : Trucate the table LIST_EXCH_ORDERS and inserts the orders into table           *
*               LIST_EXCH_ORDERS during every match                                            *
* Author      : ASHISH                                                                         *
* Date        : 20-08-2008                                                                     *
* Issue       : ISKB-1723                                                                      *
***********************************************************************************************/
int create_Exch_Order_List(DL_EXCHGORD_UPLD_STRUCT_H *p_dl_exchgnord_upld_struct_h,
                           char *match_type,
						   FILE *g_flogfile,
						   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		
	CO_ProcMonitor(g_flogfile,"\n Enter into function create_Exch_Order_List(). \n",NULL,NULL);
			
	
	printf("\n exchange code = |%s| \n",p_dl_exchgnord_upld_struct_h->h_exchg_code);
	printf("\n settl no = |%s| \n",p_dl_exchgnord_upld_struct_h->h_settl_no);
	printf("\n client = |%s| \n",p_dl_exchgnord_upld_struct_h->h_cln_code);
	printf("\n instr code  = |%s| \n",p_dl_exchgnord_upld_struct_h->h_instr_code);
	printf("\n buy sell flag = |%s| \n",p_dl_exchgnord_upld_struct_h->h_buy_sell_flg);
	printf("\n broker code = |%s| \n",p_dl_exchgnord_upld_struct_h->h_broker_cd);
	printf("\n deal date = |%s| \n",p_dl_exchgnord_upld_struct_h->h_deal_date);
			

	/* Insertion the orders of current set into table */

	if(strcmp(match_type,"1TOM") == 0)
	{
				
			printf("\n 1TOM Insertion \n");

			EXEC SQL INSERT INTO LIST_EXCH_ORDERS 
					 SELECT ORDER_NO
					 FROM DL_EXCHGORD_UPLD A
					 WHERE A.EXCHG_CODE     =:p_dl_exchgnord_upld_struct_h->h_exchg_code
					 AND A.SETTL_NO         =:p_dl_exchgnord_upld_struct_h->h_settl_no
					 AND A.MKT_TYPE         =:p_dl_exchgnord_upld_struct_h->h_mkt_type
					 AND A.CLIENT           =:p_dl_exchgnord_upld_struct_h->h_cln_code
				 	 AND A.INSTR_CODE       =:p_dl_exchgnord_upld_struct_h->h_instr_code
					 AND A.BUY_SELL_FLG     =:p_dl_exchgnord_upld_struct_h->h_buy_sell_flg
					 AND A.BROKER_CD        =:p_dl_exchgnord_upld_struct_h->h_broker_cd
					 AND TRUNC(A.DEAL_DATE) =TRUNC(TO_DATE(:p_dl_exchgnord_upld_struct_h->h_deal_date,'DD/MM/YYYY HH24:MI:SS'))
					 AND A.STATUS           ='AA'
					 AND NVL(A.MATCHED,'N')!='Y'
					 AND NOT EXISTS (SELECT 'X' FROM DL_MATCH_ORDERS B
									WHERE B.ORDER_NO  =A.ORDER_NO
									AND B.CLIENT      =A.CLIENT
									AND B.EXCHG_CODE  =A.EXCHG_CODE
									AND B.INSTR_CODE  =A.INSTR_CODE
									AND B.SETTL_NO    =A.SETTL_NO
									AND B.MKT_TYPE    =A.MKT_TYPE
									AND B.BROKER_CD   =A.BROKER_CD
									AND B.BUY_SELL_FLG=A.BUY_SELL_FLG	
									AND B.MATCHED     ='PM');
			
			printf("\n Sql Error to insert the record during insertion in table LIST_EXCH_ORDERS = |%d| \n",sqlca.sqlcode);
			
			IS_ANY_ORA_ERROR
	}

	else if(strcmp(match_type,"MTOM") == 0)
	{
				printf("\n MTOM Insertion \n");
				EXEC SQL INSERT INTO LIST_EXCH_ORDERS 
					 SELECT ORDER_NO
					 FROM DL_EXCHGORD_UPLD A
					 WHERE A.EXCHG_CODE     =:p_dl_exchgnord_upld_struct_h->h_exchg_code
					 AND A.SETTL_NO         =:p_dl_exchgnord_upld_struct_h->h_settl_no
					 AND A.MKT_TYPE         =:p_dl_exchgnord_upld_struct_h->h_mkt_type
				 	 AND A.INSTR_CODE       =:p_dl_exchgnord_upld_struct_h->h_instr_code
					 AND A.BUY_SELL_FLG     =:p_dl_exchgnord_upld_struct_h->h_buy_sell_flg
					 AND A.BROKER_CD        =:p_dl_exchgnord_upld_struct_h->h_broker_cd
					 AND TRUNC(A.DEAL_DATE) =TRUNC(TO_DATE(:p_dl_exchgnord_upld_struct_h->h_deal_date,'DD/MM/YYYY HH24:MI:SS'))
					 AND A.STATUS           ='AA'
					 AND NVL(A.MATCHED,'N')!='Y'
					 AND NOT EXISTS (SELECT 'X' FROM DL_MATCH_ORDERS B
									WHERE B.ORDER_NO  =A.ORDER_NO
									AND B.CLIENT      =A.CLIENT
									AND B.EXCHG_CODE  =A.EXCHG_CODE
									AND B.INSTR_CODE  =A.INSTR_CODE
									AND B.SETTL_NO    =A.SETTL_NO
									AND B.MKT_TYPE    =A.MKT_TYPE
									AND B.BROKER_CD   =A.BROKER_CD
									AND B.BUY_SELL_FLG=A.BUY_SELL_FLG	
									AND B.MATCHED     ='PM');
			
			printf("\n Sql Error to insert the record during insertion in table LIST_EXCH_ORDERS = |%d| \n",sqlca.sqlcode);
			
			IS_ANY_ORA_ERROR
	}

	else
	{
			CO_ProcMonitor(g_flogfile,"\n Wrong Matching Type. It should be 1ToM or MTOM \n",NULL,NULL);
	}


	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
		CO_ProcMonitor(g_flogfile,"\n Leaving function create_Exch_Order_List() successfully. \n",NULL,NULL);
		return(APL_SUCCESS);
 		
    RETURN_FAILURE:
		CO_ProcMonitor(g_flogfile,"\n Leaving function create_Exch_Order_List() with failure. \n",NULL,NULL);
		printf("\n Leaving function create_Exch_Order_List() with failure. \n");
		return(APL_FAILURE);
}

