#include "CO_HostStructdef.h"
#include "CA_Common.h"
#include "WI_Interface.h"
EXEC SQL INCLUDE SQLCA.H;

int WI_CreateDL(SYS_DL_DEAL_STRUCT_H *dl_deal_struct_h,
                char *l_sell_cln,
                INTL_ENV_DATA_STRUCT_H *l_intl_envdatastruct_h,
                DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
      printf("\n Inside WI_CreateDL");
      printf("\n CLIENT 1:[%s]",dl_deal_struct_h->h_dl_client);
      printf("\n CLIENT 2:[%s]",dl_deal_struct_h->h_cln_depoacc);
      printf("\n CLIENT SELL:[%s]",l_sell_cln);

      WI_DEAL_STRUCT_H *l_wi_deal_struct_h;
      WI_DEAL_STRUCT_I *l_wi_deal_struct_i;
 
      l_wi_deal_struct_h =  (WI_DEAL_STRUCT_H *)calloc(1,sizeof(WI_DEAL_STRUCT_H));
      APL_MALLOC_FAIL(l_wi_deal_struct_h);
      memset(l_wi_deal_struct_h,NULL,sizeof(WI_DEAL_STRUCT_H));

      l_wi_deal_struct_i =  (WI_DEAL_STRUCT_I *)calloc(1,sizeof(WI_DEAL_STRUCT_I));
      APL_MALLOC_FAIL(l_wi_deal_struct_i);
      memset(l_wi_deal_struct_i,NULL,sizeof(WI_DEAL_STRUCT_I));

      strcpy(l_wi_deal_struct_h->h_client,dl_deal_struct_h->h_dl_client);
      strcpy(l_wi_deal_struct_h->h_identiy_no,dl_deal_struct_h->h_indentity_no);
      strcpy(l_wi_deal_struct_h->h_deal_cd,dl_deal_struct_h->h_dealcd);
    //strcpy(l_wi_deal_struct_h->h_instr_code,dl_deal_struct_h->h_instr_isin);
      l_wi_deal_struct_h->h_qty = dl_deal_struct_h->h_qty;
      strcpy(l_wi_deal_struct_h->h_deal_date,dl_deal_struct_h->h_dlt);
      l_wi_deal_struct_h->h_cost = dl_deal_struct_h->h_pr;
      strcpy(l_wi_deal_struct_h->h_setl_date,dl_deal_struct_h->h_setldt);
      l_wi_deal_struct_h->h_net_amt = dl_deal_struct_h->h_net_amt;
      strcpy(l_wi_deal_struct_h->h_domestic_cpclt,dl_deal_struct_h->h_domcpclt_cd);
      strcpy(l_wi_deal_struct_h->h_clh_flag,dl_deal_struct_h->h_clh_flg);
      strcpy(l_wi_deal_struct_h->h_fx_reqd,dl_deal_struct_h->h_fx_reqd);
      strcpy(l_wi_deal_struct_h->h_maker,dl_deal_struct_h->h_maker);
      strcpy(l_wi_deal_struct_h->h_maker_dt,dl_deal_struct_h->h_maker_dt);
      strcpy(l_wi_deal_struct_h->h_checker,dl_deal_struct_h->h_checker);
      strcpy(l_wi_deal_struct_h->h_checker_dt,dl_deal_struct_h->h_checker_dt);
      strcpy(l_wi_deal_struct_h->h_deal_stat,"AA");
      strcpy(l_wi_deal_struct_h->h_access_stamp,dl_deal_struct_h->h_access_stamp);

      //Inserting 1st Deal
      printf("\n Inserting 1st deal in WI_DEAL :[%s]",l_wi_deal_struct_h->h_deal_cd);

      EXEC SQL INSERT INTO WI_DEAL VALUES (:l_wi_deal_struct_h:l_wi_deal_struct_i);
      IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)      
 
      //Inserting 2nd Deal
      printf("\n Inserting 2nd deal in WI_DEAL");
      memset(l_wi_deal_struct_h->h_client,NULL,sizeof(l_wi_deal_struct_h->h_client));
      strcpy(l_wi_deal_struct_h->h_client,l_sell_cln);
      printf("\n 2nd Client is :[%s]",l_wi_deal_struct_h->h_client);

      EXEC SQL SELECT DECODE(:l_wi_deal_struct_h->h_deal_cd,'1','2','2','1') INTO :l_wi_deal_struct_h->h_deal_cd FROM DUAL;
      IS_ANY_ORA_ERROR  
      printf("\n 2nd deal Code is :[%s]",l_wi_deal_struct_h->h_deal_cd);

      EXEC SQL INSERT INTO WI_DEAL VALUES (:l_wi_deal_struct_h:l_wi_deal_struct_i);
      IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

      printf("\n returning successfully from WI_CreateDL");

      printf("\n Insertin in WI_DL_PMS_LOG For :[%s]",dl_deal_struct_h->h_indentity_no);
 
      EXEC SQL INSERT INTO WI_DL_PMS_LOG 
                           SELECT A.*,'AUT' FROM WI_DL_PMS A
                           WHERE  A.IDENTIY_NO = :dl_deal_struct_h->h_indentity_no;
      printf("\n sqlca.sqlcode of INSERT INTO WI_DL_PMS_LOG:[%d]",sqlca.sqlcode);
                                           IS_ANY_ORA_ERROR

      printf("\n Deleting from WI_DL_PMS_LOG :[%s]",dl_deal_struct_h->h_indentity_no);
      EXEC SQL DELETE FROM WI_DL_PMS WHERE  IDENTIY_NO = :dl_deal_struct_h->h_indentity_no;
      printf("\n sqlca.sqlcode of Deleting from WI_DL_PMS_LOG :[%d]",sqlca.sqlcode);
      IS_ANY_ORA_ERROR
 
      return(APL_SUCCESS);

      RETURN_SUCCESS :
      {
                fprintf(APL_OUT_FILE,"Leaving processtion WI_CreateDL Successfully\n");
                printf("\n Leaving processtion WI_CreateDL Successfully\n");
      }

      RETURN_FAILURE  :
      {
                fprintf(APL_OUT_FILE,"Leaving processtion WI_CreateDL Unsuccessfully\n");
                return(APL_FAILURE);
      }
}
//Sharanya:start
int PMS_Delete_Deal(WI_DEAL_PMS_STRUCT_H *wi_deal_pms_struct,INTL_ENV_DATA_STRUCT_H *l_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	printf("\n Inside PMS_Delete_Deal");
    printf("\n  Sell Client:[%s]",wi_deal_pms_struct->h_sell_client);
    printf("\n  Buy Client:[%s]",wi_deal_pms_struct->h_buy_client);
    printf("\n Instrument Code:[%s]",wi_deal_pms_struct->h_instr_isin);
    printf("\n Quantity:[%lf]",wi_deal_pms_struct->h_qty);
    printf("\n Deal Date[%s]",wi_deal_pms_struct->h_deal_date);
    printf("\n Cost:[%lf]",wi_deal_pms_struct->h_cost);
    printf("\n Identity No:[%s]",wi_deal_pms_struct->h_identiy_no);
	
	printf("Inserting Record into WI_DL_PMS_LOG");
	EXEC SQL INSERT INTO WI_DL_PMS_LOG 
                           SELECT A.*,'DEL' FROM WI_DL_PMS A
                           WHERE  A.SELL_CLIENT= :wi_deal_pms_struct->h_sell_client 
						   AND A.BUY_CLIENT=:wi_deal_pms_struct->h_buy_client 
						   AND A.INSTR_CD = :wi_deal_pms_struct->h_instr_isin 
						   AND A.QTY= :wi_deal_pms_struct->h_qty 
						   AND A.DEAL_DATE = :wi_deal_pms_struct->h_deal_date 
						   AND A.COST= :wi_deal_pms_struct->h_cost; 
      printf("\n sqlca.sqlcode of INSERT INTO WI_DL_PMS_LOG:[%d]",sqlca.sqlcode);
                                           IS_ANY_ORA_ERROR
	
	printf("Deleting Record into WI_DL_PMS");
	EXEC SQL DELETE FROM WI_DL_PMS 
						   WHERE SELL_CLIENT= :wi_deal_pms_struct->h_sell_client 
						   AND BUY_CLIENT=:wi_deal_pms_struct->h_buy_client 
						   AND INSTR_CD = :wi_deal_pms_struct->h_instr_isin 
						   AND QTY= :wi_deal_pms_struct->h_qty 
						   AND DEAL_DATE = :wi_deal_pms_struct->h_deal_date 
						   AND COST= :wi_deal_pms_struct->h_cost; 
      printf("\n sqlca.sqlcode of Deleting from WI_DL_PMS :[%d]",sqlca.sqlcode);

      IS_ANY_ORA_ERROR
 
	printf("Exiting from PMS_Delete_Deal");
	return(APL_SUCCESS);

      RETURN_SUCCESS :
      {
                fprintf(APL_OUT_FILE,"Leaving processtion PMS_Delete_Deal Successfully\n");
                printf("\n Leaving processtion PMS_Delete_Deal Successfully\n");
      }

      RETURN_FAILURE  :
      {
                fprintf(APL_OUT_FILE,"Leaving processtion PMS_Delete_Deal Unsuccessfully\n");
                return(APL_FAILURE);
      }
	
}
//Sharanya:end
