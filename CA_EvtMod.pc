/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 * Module Name         :      Corporate Actions
 *
 * File Name           :      CA_EvtMod.pc
 *
 * Description         :      Contains Functions To validate Event Details
 *
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author           Description          RFS No.
 * ---------   --------  ---------------  ------------------     ---------
 * 20/01/2006   1.2	   Smita Bhat     Added Event Fn	 			  HDFCCA_027
 *					  								Related to Name Change
 *					  								Changed Variables as per Coding Stds
 *	28/01/2006   1.3     Smita Bhat		Added Changes Related to  HDFCCA_009
 *													Buy Back Event
 *	04/03/2006	 1.6		Smita Bhat		Added Changes Related to	HDFCCA_004
 *													Capital Reduction Event
 * 17/03/2006	 1.7		Biju				Auto Event Gen. Change		HDFCCA_035
 * 18/10/2011                   Sana Bhatkar                    Retro done for ISKB4730 -- AIX migration
 *************************************************************************/

#include "CR_Common.h"
#include "CA_Common.h"

EXEC SQL INCLUDE SQLCA.H;

#define	L_INSTR_CODERR_PLUS_CERR_TYP_LEN	APL_INSTRUMENTCODE_LEN +	EVT_CLASS_ 
#define	LOCAL_LEN_EVNT_NBR		    3	
#define LOG_BUFFER_LEN 70

char    char_l_h_dec_precision[2]=APL_NULL_STRING;
short   l1_i_dec_precision = 0;
double dbl_new_safek_quantity_rt;
double dbl_earnings_rt;
 char    l_instr_sub_type[APL_INSTRU_TYPE_LEN] = APL_NULL_STRING;
 short   i_instr_sub_type=0;
 char    l_listed_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
 short   i_listed_ind = 0;
 char    l_instr_type[4] = APL_NULL_STRING;
 short   i_instr_type;

char g_chr_blv_maker[15]; 

extern	int	CO_Chk_InstrValid(	char*,
										char,
										char,
										char,
										char,
										char,
										char,
										DEBUG_INFO_STRUCT_H**
									);

static	int 	CA_EventAdd( 	CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
	      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 				);

static	int 	CA_EventMod( CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 				);

static	int 	CA_EventFreezeUnfreeze( CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
					                INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				          DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
  	              			  	);

static	int 	CA_EventReverse(CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
				           	      INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				);

static	int 	CA_EventDel(  CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
				         	       INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				   	    DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  			);

static	int 	CA_CheckEvnt( CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
									CA_CASECEVENT_STRUCT_H	*p_ca_casecevent_struct_h,
									CA_CASECEVENT_STRUCT_I	*p_ca_casecevent_struct_i,
				           	   INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
									DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  		);

static	int	CA_MandDataChk( CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
 				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
            			         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 				);

static	void	CA_IndVarSet( 	CA_CAEVENT_STRUCT_H		*p_ca_caevent_struct_h,
										CA_CAEVENT_STRUCT_I		*p_ca_caevent_struct_i,
										CA_CASECEVENT_STRUCT_H	*p_secevt_struct
									);	
/*Smita - HDFCCA_009 - Buy Back Event*/
static int CA_ChkEventDetails (	CA_CAEVENT_STRUCT_H     *p_ca_caevent_struct_h,
											int							*int_p_result,
											INTL_ENV_DATA_STRUCT_H  *p_intlenv_data_struct_h,
											DEBUG_INFO_STRUCT_H     **l_debug_info_ptr
										);
/*Smita - HDFCCA_009 - Buy Back Event*/

/* Added by Arunachalam for CS0074500 - New Bilav File upload changes  START */
static	int 	CA_EventPriority( 	CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
	      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 				);
								
int Rtv_Nxt_BussDate(	char *p_current_date,
		 						char *p_nxt_date,
								char *p_exch_code,
		 						DEBUG_INFO_STRUCT_H **l_debug_info_ptr);
								
								


static int CA_EventCmp(CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
	                        CA_CAEVENT_STRUCT_H		*l_ca_caeventimg_struct_h,
							                                        int *result_c,
						          	INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      						 	DEBUG_INFO_STRUCT_H         **l_debug_info_ptr);

/*  CS0074500 - New Bilav File upload changes  END */

int CA_Mod_Event(  CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
                     INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
                     DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  )
{
	struct sqlca sqlca;

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	/*Smita - HDFCCA_027 */
	int int_retval = 0;
	/*Smita - HDFCCA_027 */

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered A_DbUpdeventFn",NULL,p_intlenv_data_struct_h);
	}

/* Added by Arunachalam for CS0074500 - New Bilav File upload changes START*/
	CA_CAEVENT_STRUCT_I             *p_ca_caevent_struct_i;
 p_ca_caevent_struct_i = (CA_CAEVENT_STRUCT_I *)calloc(1,sizeof(CA_CAEVENT_STRUCT_I));

 EXEC SQL SELECT INSTR_SUB_TYPE,LISTED_IND,INSTR_TYPE INTO 
 :l_instr_sub_type:i_instr_sub_type,
 :l_listed_ind:i_listed_ind,
 :l_instr_type:i_instr_type
 FROM MT_INSTRUMENT 
 WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code;

 APL_IF_DEBUG
  {
    printf("\nBefore new Entering to CS0074500 enhancement\n");
    printf("Event Class = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
    printf("l_instr_type = |%s|\n", l_instr_type);  
    printf("l_instr_sub_type = |%s|\n", l_instr_sub_type );
    printf("l_listed_ind = |%s|\n",l_listed_ind);
    printf("l_instr_sub_type = |%s|\n", l_instr_sub_type);
    printf("p_ca_caevent_struct_h->h_rec_date = |%s| \n", p_ca_caevent_struct_h->h_rec_date);
    printf("p_ca_caevent_struct_h->h_ex_date = |%s|\n", p_ca_caevent_struct_h->h_ex_date);
    printf("p_ca_caevent_struct_h->h_bc_from_date = |%s|\n", p_ca_caevent_struct_h->h_bc_from_date);
  }
  
 if (!strcmp(p_intlenv_data_struct_h->h_process,"U"))
{	
   
Alert("ca event is %s ",p_ca_caevent_struct_h->h_evt_class);
if(    (       !strcmp(p_ca_caevent_struct_h->h_evt_class,"IC") )       )
{
Alert("Inside ICC event");
char l_instr_code[MT_INSTR_CODE_LEN] = APL_NULL_STRING; 
char l_res_instr_code[MT_INSTR_CODE_LEN] = APL_NULL_STRING; 
char l_bilav_id[CA_BILAV_ID_LEN] = APL_NULL_STRING; 
int l_ic_count =0;

strcpy(l_instr_code,p_ca_caevent_struct_h->h_instr_code);
strcpy(l_res_instr_code,p_ca_caevent_struct_h->h_res_instr_code);
strcpy(l_bilav_id,p_ca_caevent_struct_h->h_bilav_id);

Alert("INSTR CODE : %s",l_instr_code);
Alert("RESULTANT INSTR CODE : %s",l_res_instr_code);
Alert("h_bilav_id : %s",l_bilav_id);
if(strlen(l_res_instr_code)==0)
{
Alert("resultant instrument is invalid");
CO_InsertErr(l_debug_info_ptr,
                                                 ERR_ISIN_NOT_MAPED,
                                                 p_intlenv_data_struct_h->h_mode,
                                                 APL_NULL_STRING,
                                                 APL_NULL_STRING,
                                                 __LINE__,
                                                 __FILE__
                                                 );
APL_GOBACK_FAIL

}
Alert("before MEMSET");
memset(p_ca_caevent_struct_i,NULL,sizeof(CA_CAEVENT_STRUCT_I));
Alert("AFTER MEMSET");
EXEC SQL SELECT * INTO :p_ca_caevent_struct_h:p_ca_caevent_struct_i  FROM CAEVENT
                                                 WHERE (CA_EVENT ='SP' AND OP_EVT_CLASS IN('SP','SR') 
                                       OR CA_EVENT ='CR' )
                                                 AND  BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id
                                                 AND INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code ;
                                                 IS_ANY_ORA_ERROR

                                           
Alert("count is %d",l_ic_count);
if(sqlca.sqlcode == 1403)
{
Alert("  zero record found");
					 CO_InsertErr(l_debug_info_ptr,
						 ERR_EVNT_NOTFND_A,
						 p_intlenv_data_struct_h->h_mode,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 __LINE__,
						 __FILE__
						 );
		  APL_GOBACK_FAIL
}
else  
{
Alert("count is 1");
Alert("mode in ICC is %s",p_intlenv_data_struct_h->h_mode);
if (       (       !strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)        )  || 
 (       !strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)        )    )
{
strcpy(p_ca_caevent_struct_h->h_res_instr_code,l_res_instr_code);
}

if (       (       !strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE)        )  ||
  (       !strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_REVERSE)        )    )
{
strcpy(p_ca_caevent_struct_h->h_res_instr_code,l_instr_code);
}
Alert(" after cpy RESULTANT INSTR CODE : %s",p_ca_caevent_struct_h->h_res_instr_code);

if (    CA_EventMod(    p_ca_caevent_struct_h,
                                                                                        p_intlenv_data_struct_h,
                                                                                        l_debug_info_ptr
                                                                                ) == APL_FAILURE)
                                {
                                        APL_GOBACK_FAIL
                                }
                        else
                                {
                                        APL_GOBACK_SUCCESS
                                }


}


}
  
} 
  
  
if(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV)||
                            !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP) ||
                            !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS) ||
                            !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT) 
                            && !strcmp(l_instr_type,"MTF") )
 {

if(strcmp(p_ca_caevent_struct_h->h_preliminary_flag,APL_YES_IND))
{
   if( ((strcmp(l_instr_sub_type,"CM") == 0 &&  strcmp(l_listed_ind,APL_NO_IND) ==0 ) )
     || ( strcmp(l_instr_sub_type,"OM") == 0  ) )
    {
    /*   if ( strlen(p_ca_caevent_struct_h->h_rec_date) == 0 )
          {
             strcpy((char *) p_ca_caevent_struct_h->h_rec_date, (char*)p_ca_caevent_struct_h->h_bc_from_date);
          }
            
       EXEC SQL SELECT to_date(:p_ca_caevent_struct_h->h_rec_date)+1 
                  into :p_ca_caevent_struct_h->h_ex_date
                 from  dual;
       EXEC SQL SELECT DECODE( NVL(LENGTH(:p_ca_caevent_struct_h->h_rec_date),0), 0,
                       :p_ca_caevent_struct_h->h_bc_from_date,
			                 to_date(:p_ca_caevent_struct_h->h_rec_date)+1 )
                  INTO :p_ca_caevent_struct_h->h_ex_date FROM DUAL; */
      if(Rtv_Nxt_BussDate(    p_ca_caevent_struct_h->h_rec_date,
                        p_ca_caevent_struct_h->h_ex_date,
                                                APL_NULL_STRING,
                                                l_debug_info_ptr) == APL_FAILURE)
        {

                APL_GOBACK_FAIL
        } 
       APL_IF_DEBUG
       {
         printf(" SELECT to_date(:p_ca_caevent_struct_h->h_rec_date)+1 sqlcode status = %d\n", sqlca.sqlcode);
	 printf("After [ Inner if ] SELECT .. p_ca_caevent_struct_h->h_ex_date = |%s|\n", p_ca_caevent_struct_h->h_ex_date);
       }
       IS_ANY_ORA_ERROR; 
    }
}
 }
 printf("After [ Outer if ] SELECT .. p_ca_caevent_struct_h->h_ex_date = |%s|\n", p_ca_caevent_struct_h->h_ex_date);
/* Added by Arunachalam CS0074500 - New Bilav File upload changes  END */										

	if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)	)	)
		{
			APL_IF_DEBUG	
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is INPUT",NULL,p_intlenv_data_struct_h);
			}
			if (	CA_EventAdd(	p_ca_caevent_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
		}

		
	else if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)	)	)
		{
			APL_IF_DEBUG	
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is MODIFY",NULL,p_intlenv_data_struct_h);
			}
			if (	CA_EventMod(	p_ca_caevent_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
		}
	
		
	else if (	
			!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_FREEZE)		
			||
	 		!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_UNFREEZE)	
		)
		{
			APL_IF_DEBUG	
			{
			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_FREEZE)	)
				CO_ProcMonitor(APL_OUT_FILE,"Mode is FREEZE",NULL,p_intlenv_data_struct_h);
			else
				CO_ProcMonitor(APL_OUT_FILE,"Mode is UNFREEZE",NULL,p_intlenv_data_struct_h);
			}	
			if (	CA_EventFreezeUnfreeze(	p_ca_caevent_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
		}

		
	else if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_REVERSE)	)	)
		{
			APL_IF_DEBUG	
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is REVERSE",NULL,p_intlenv_data_struct_h);
			}	
			if (	CA_EventReverse(	p_ca_caevent_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
		}

	
	else if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE)	)	)
		{
			APL_IF_DEBUG	
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is DELETE",NULL,p_intlenv_data_struct_h);
			}	
			if (	CA_EventDel(	p_ca_caevent_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
		}

		else
		{
            CO_InsertErr(l_debug_info_ptr,
                           ERR_INVALID_MODE,
									p_intlenv_data_struct_h->h_mode,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__
                           );
            APL_GOBACK_FAIL
		}
		
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting A_DbUpdeventFn successfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting A_DbUpdeventFn unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
		}
}

static	int CA_EventAdd(	CA_CAEVENT_STRUCT_H 	*p_ca_caevent_struct_h,
									INTL_ENV_DATA_STRUCT_H	*p_intlenv_data_struct_h,
						   		DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr
									)
{
	
	

	struct	sqlca	sqlca;
	CA_CAEVENT_STRUCT_I		*l_ca_caeventimg_struct_i		=	NULL;
	CA_CASECEVENT_STRUCT_H	*l_ca_casetup_struct_h		=	NULL;
	CA_CASECEVENT_STRUCT_I	*l_ca_casecevent_struct_i		=	NULL;
	char		pro_sys_date[APL_DATE_LEN]	=	APL_NULL_STRING;
	char		chr_error_key[L_INSTR_CODERR_PLUS_CERR_TYP_LEN] = APL_NULL_STRING;
	char		chr_char_event_nbr[LOCAL_LEN_EVNT_NBR] = APL_NULL_STRING;
	char		chr_log_buff[LOG_BUFFER_LEN]=APL_NULL_STRING;
	char		*int_pos;
   int      int_l_num_data_key      =  0;
   int      int_l_key               =  0;
	char		**temp_data_key;
	int int_l_evt_dup_chk = 0; 
	char l_chr_corpid[22] = APL_NULL_STRING; 

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entering S_EventInput",NULL,p_intlenv_data_struct_h);
	}
   
	sqlca.sqlcode = 0;/*Smita - HDFCCA_027*/
   printf("\n302 |%s|",p_ca_caevent_struct_h->h_follmsg2date);	
	if	 (	CA_MandDataChk(	p_ca_caevent_struct_h,
									p_intlenv_data_struct_h,
									l_debug_info_ptr
								) == APL_FAILURE
		 )
	{
		APL_GOBACK_FAIL
	}
   CO_ProcMonitor(APL_OUT_FILE, "BEFORE MEMORY ALLOCATION CALL", NULL, p_intlenv_data_struct_h);
	
	

			l_ca_casetup_struct_h = (CA_CASECEVENT_STRUCT_H *) calloc(1,sizeof(CA_CASECEVENT_STRUCT_H)	);	
			APL_MALLOC_FAIL(l_ca_casetup_struct_h) 
		
   CO_ProcMonitor(APL_OUT_FILE, "AMID MEMORY ALLOCATION CALL", NULL, p_intlenv_data_struct_h);
			l_ca_casecevent_struct_i = (CA_CASECEVENT_STRUCT_I *) calloc(1,sizeof(CA_CASECEVENT_STRUCT_I)	);	
			APL_MALLOC_FAIL(l_ca_casecevent_struct_i) 

	
   CO_ProcMonitor(APL_OUT_FILE, "AFTER MEMORY ALLOCATION CALL", NULL, p_intlenv_data_struct_h);
   printf("\n324 |%s|",p_ca_caevent_struct_h->h_follmsg2date);	
	if (	CA_CheckEvnt(  p_ca_caevent_struct_h,
							l_ca_casetup_struct_h, 
							l_ca_casecevent_struct_i,	
 	 		   		   p_intlenv_data_struct_h, 
						 	l_debug_info_ptr
         		   	 )	==	APL_FAILURE
		)
			{
				APL_GOBACK_FAIL
			}

	printf("\n *** *** *** *** *** *** *** *** *** *** *** *** ** *** ** \n");
	printf("\n * \n");
	printf("\n h_maker   =  %s",p_ca_caevent_struct_h->h_maker);
	printf("\n APL_USER_SYSTEM   =  %s",APL_USER_SYSTEM);
	printf("\n h->usr    =  %s",p_intlenv_data_struct_h->usr);
	printf("\n h_corp_id  =  %s",p_ca_caevent_struct_h->h_corp_id);
	printf("\n h_bilav_id =  %s",p_ca_caevent_struct_h->h_bilav_id);
	printf("\n  h_process =  |%s|",p_intlenv_data_struct_h->h_process);	
	printf("\n * \n");
	printf("\n *** *** *** *** *** *** *** *** *** *** *** *** ** *** ** \n");


/* Change by Arunachalam for CS0074500 - New Bilav File upload changes START */
		if ( strcmp(p_ca_caevent_struct_h->h_maker,APL_USER_SYSTEM) )
		{
			if (strcmp(p_intlenv_data_struct_h->h_process,"U")) 
			{
				strcpy(p_ca_caevent_struct_h->h_maker,p_intlenv_data_struct_h->usr);
			}
		} 

			IF_COND_EXISTS("CA_EVENT","UPLOAD_STAT_IN")
			{
				printf("\n IF_COND_EXISTS \n");
				if ( strcmp(p_ca_caevent_struct_h->h_maker,APL_USER_SYSTEM) )
				{
				/*****	if (!strcmp(p_intlenv_data_struct_h->h_process,"U")) 
					{
						strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_RDY_INT);
					}
					else
					{*****/
				strcpy(p_ca_caevent_struct_h->h_evt_stat,APL_STATUS_UNAUTH);
					//} Commented by arun for Kotak Bilav Upload
				}
				else
				{
					strcpy(p_ca_caevent_struct_h->h_evt_stat,APL_STATUS_UNAUTH);
				}
			}
			else
			{
				strcpy(p_ca_caevent_struct_h->h_evt_stat,APL_STATUS_UNAUTH);
			}
/*  CS0074500 - New Bilav File upload changes END */
	
		if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		{
				APL_GOBACK_FAIL
		}
		strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
		strcpy(p_ca_caevent_struct_h->h_maker_dt,pro_sys_date); 
	
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		{
			APL_GOBACK_FAIL
		}


		if ( strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes*/
		{
			strcpy(p_ca_caevent_struct_h->h_access_stamp,pro_sys_date);
			
		}

   printf("\n353 |%s|",p_ca_caevent_struct_h->h_follmsg2date);	


		printf("BEFORE CA_GenCARefNo\n");
		printf("CORP ID  |%s|\n",p_ca_caevent_struct_h->h_corp_id);
		printf("INSTR CODE  |%s|\n",p_ca_caevent_struct_h->h_instr_code);
		printf("EVENT CLASS |%s|\n",p_ca_caevent_struct_h->h_evt_class);
		printf("DECLDATE |%s| \n",	p_ca_caevent_struct_h->h_decl_date);
		printf("evnt nbr |%d|\n",p_ca_caevent_struct_h->h_evt_nbr);


	   if	(CA_GenCARefNo(	p_ca_caevent_struct_h->h_corp_id,
									p_ca_caevent_struct_h->h_instr_code,
									p_ca_caevent_struct_h->h_evt_class,
									p_ca_caevent_struct_h->h_decl_date,
									&(p_ca_caevent_struct_h->h_evt_nbr),
									l_debug_info_ptr) == APL_FAILURE
				   		  )
			{
				APL_GOBACK_FAIL
			}	
		APL_IF_DEBUG
		{
		sprintf(chr_log_buff,"CAId generated is :(%s)",p_ca_caevent_struct_h->h_corp_id);
		CO_ProcMonitor(APL_OUT_FILE,chr_log_buff,NULL,p_intlenv_data_struct_h);
		}
		
		if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER) )
		{
			strcpy(p_ca_caevent_struct_h->h_pymt_dt,p_ca_caevent_struct_h->h_effect_date);
		}
	
		(l_ca_caeventimg_struct_i) = (CA_CAEVENT_STRUCT_I*)calloc(2,sizeof(CA_CAEVENT_STRUCT_I));
		APL_MALLOC_FAIL(l_ca_caeventimg_struct_i) 
   printf("\n378 |%s|",p_ca_caevent_struct_h->h_follmsg2date);	
		
		CA_IndVarSet(	p_ca_caevent_struct_h,
						l_ca_caeventimg_struct_i,
						l_ca_casetup_struct_h			
					);

     	  if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NS))
	      { 		
		
			p_ca_caevent_struct_h->h_amount_due 		= 0;
			p_ca_caevent_struct_h->h_amount_recd 		= 0;
		  }
			p_ca_caevent_struct_h->h_quantity_due 		= 0;
			p_ca_caevent_struct_h->h_quantity_recd 		= 0;
			p_ca_caevent_struct_h->h_evt_msg_count		= 0;
			p_ca_caevent_struct_h->h_entl_msg_cnt		= 0;
			p_ca_caevent_struct_h->h_evt_clt_cnt		= 0;
			p_ca_caevent_struct_h->h_entl_clt_cnt		= 0;	
			p_ca_caevent_struct_h->h_count_acs_pend		= 0;
			l_ca_caeventimg_struct_i->i_nrepdate1		= -1;
			l_ca_caeventimg_struct_i->i_follmsg1date	= -1;
   printf("\n400 |%s|",p_ca_caevent_struct_h->h_follmsg2date);	
         if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)) /* Vaibhav 19/05/2006 */
		   {
			l_ca_caeventimg_struct_i->i_follmsg2date	= -1; 
			}

			strcpy(chr_error_key,APL_NULL_STRING);
			strcpy(chr_error_key,p_ca_caevent_struct_h->h_instr_code);
			strcat(chr_error_key," ");
			strcat(chr_error_key,p_ca_caevent_struct_h->h_evt_class);
			strcpy(chr_char_event_nbr,APL_NULL_STRING);
			strcpy(chr_char_event_nbr,ltoa(p_ca_caevent_struct_h->h_evt_nbr)	);
			printf("p_ca_caevent_struct_h->h_start_date is |%s|\n",p_ca_caevent_struct_h->h_start_date);   
			printf("p_ca_caevent_struct_h->h_sub_pr is |%lf|\n",p_ca_caevent_struct_h->h_sub_pr);
			printf("\n $$$$$$$ p_ca_caevent_struct_h->h_response_date is |%s|\n",p_ca_caevent_struct_h->h_respons_date);    // AIX -Warnings Removal
			printf("\n $$$$$$$ p_ca_caevent_struct_h->h_follmsg2date is |%s|\n",p_ca_caevent_struct_h->h_follmsg2date);   
			printf("\n Event Footnote is |%s| \n",p_ca_caevent_struct_h->h_info_nbr);
			/******** Changes related to 568 Entitlement Generation done by AmitN ********/
			IF_COND_EXISTS("CA_ENTITL","568_GENERATION")
			{
				if(strlen(p_ca_caevent_struct_h->h_info_nbr) > 0 && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)!=0)
				{
					strcpy(p_ca_caevent_struct_h->h_entinfo_no,p_ca_caevent_struct_h->h_info_nbr);
					l_ca_caeventimg_struct_i->i_entinfo_no=0;
					printf("\n Entitlement Footnote is |%s|",p_ca_caevent_struct_h->h_entinfo_no);
				}
				printf("\n Amit ------ 568 Generation Enabled for Kotak\n");
			}
			printf("Amit ---------- Entitlement Info is |%s|",p_ca_caevent_struct_h->h_entinfo_no);
			/****************************************************************************/

                       /* vaibhav karnik KOTAK_UAT I-Solve:362 16/07/2007 */ 
                        if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)==0)
                        {
                            l_ca_caeventimg_struct_i->i_evt_send_msg_ind =0;
                            strcpy(p_ca_caevent_struct_h->h_evt_send_msg_ind,"Y");
                        }

                        printf("\n here.......Evt Send Msg = |%s|",p_ca_caevent_struct_h->h_evt_send_msg_ind);
                        printf("\n Indicator Variable is = |%d|",l_ca_caeventimg_struct_i->i_evt_send_msg_ind);  
                       /* vaibhav karnik KOTAK_UAT I-Solve:362 16/07/2007 */
					   
					/* Added by Arunachalam for CS0074500 - New Bilav File upload changes START */
			if(!strcmp(p_intlenv_data_struct_h->h_process,"U"))
			{
					
					if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV))
					{
											
								EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_evt_dup_chk FROM CA_BILAVID_MAP A, CAEVENT B
								WHERE A.BILAV_ID=B.BILAV_ID
								AND A.CA_EVENT = B.CA_EVENT
								AND A.CA_EVENT = :p_ca_caevent_struct_h->h_evt_class 
								AND A.BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id 
								AND DIVIDEND_TYPE=:p_ca_caevent_struct_h->h_div_class
								AND A.MAKER = :p_ca_caevent_struct_h->h_maker;
							

							IS_ANY_ORA_ERROR
					}

					else
					{
					
					EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_evt_dup_chk FROM CA_BILAVID_MAP 
					WHERE CA_EVENT = :p_ca_caevent_struct_h->h_evt_class 
						AND BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id 
						AND MAKER = :p_ca_caevent_struct_h->h_maker;
					

					IS_ANY_ORA_ERROR
					}
					
					
					
				printf("JUST DEBUG");
				printf("\n **** When bilav_id (For next day file uploaded)  **** int_l_evt_dup_chk   -> %d",int_l_evt_dup_chk);
				if(int_l_evt_dup_chk) // Event exists
				{
						printf("\n %s : Event Already Exists\n",p_ca_caevent_struct_h->h_evt_class);
 						sprintf(chr_log_buff,"(%s): Event Already Exists",p_ca_caevent_struct_h->h_evt_class);
 						CO_ProcMonitor(APL_OUT_FILE,chr_log_buff,NULL,p_intlenv_data_struct_h);
						
						printf("\n Event id is |%s|",p_ca_caevent_struct_h->h_corp_id);
 						CO_InsertErr(l_debug_info_ptr,
						ERR_DUPLICATE_EVENT,
					    p_ca_caevent_struct_h->h_bilav_id,
                        p_ca_caevent_struct_h->h_evt_class, 
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						);
						
 						APL_GOBACK_FAIL	
				}
				int_l_evt_dup_chk = 0;


				printf("\n Meeting date is :%s\n",p_ca_caevent_struct_h->h_meet_date);
        sprintf(chr_log_buff," Meeting date is:%s",p_ca_caevent_struct_h->h_meet_date);


				EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_evt_dup_chk FROM CAEVENT CE, CA_BILAVID_MAP CB
					WHERE CE.INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code 
					AND CE.CA_EVENT = :p_ca_caevent_struct_h->h_evt_class 
					AND to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')
					AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'SM',TO_CHAR(MEETING_DATE,'DD/MM/YYYY'),'0') = 
					DECODE(NVL(TO_CHAR(TO_DATE(:p_ca_caevent_struct_h->h_meet_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy'),'0'),'0','0',
					(TO_CHAR(TO_DATE(:p_ca_caevent_struct_h->h_meet_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy'))) 
					AND CE.CORP_ID = CB.CORP_ID  
					AND CB.BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id
					AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'CD',DIVIDEND_TYPE,'0') =DECODE(:p_ca_caevent_struct_h->h_evt_class,'CD',DECODE(NVL(:p_ca_caevent_struct_h->h_div_class,'0'),'0','0',(:p_ca_caevent_struct_h->h_div_class)),'0');
					
					
					IS_ANY_ORA_ERROR
				printf("\n **** **** int_l_evt_dup_chk   -> %d",int_l_evt_dup_chk);

				if(int_l_evt_dup_chk) // Event exists
				{

					if(!strcmp(p_ca_caevent_struct_h->h_maker,"BILAV_BSE")) // Bilav file is from BSE
					{
					
					printf("\n ** ** ** ** ** Updating BSE Ex-Date *** *** *** *** (%s)",p_ca_caevent_struct_h->h_ex_dt_bse);

						if(strlen(p_ca_caevent_struct_h->h_ex_dt_bse))
						{
								 EXEC SQL UPDATE CAEVENT SET EX_DT_BSE = :p_ca_caevent_struct_h->h_ex_dt_bse,

								  
										 DATEOF_PAYMENT = :p_ca_caevent_struct_h->h_pymt_dt			
								  

													WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code
													AND CA_EVENT = :p_ca_caevent_struct_h->h_evt_class AND
										to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy');


								  IS_ANY_ORA_ERROR

								 Alert("\n %s : Event Already Exists\n",p_ca_caevent_struct_h->h_evt_class);
								  sprintf(chr_log_buff,"(%s): Event updated Successfully",p_ca_caevent_struct_h->h_evt_class);
								  CO_ProcMonitor(APL_OUT_FILE,chr_log_buff,NULL,p_intlenv_data_struct_h);

						}
					}
					else // Bilav file is from NSE
					{
						if(strlen(p_ca_caevent_struct_h->h_ex_date))
						{
						printf("\n ** ** ** ** ** Updating NSE Ex-Date *** *** *** *** (%s)",p_ca_caevent_struct_h->h_ex_date);
								  // For taking care of ex_date (NSE) and ex_dt_bse
								  EXEC SQL UPDATE CAEVENT SET EX_DATE = :p_ca_caevent_struct_h->h_ex_date,		
									DATEOF_PAYMENT = :p_ca_caevent_struct_h->h_pymt_dt
								
													WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code
													AND CA_EVENT = :p_ca_caevent_struct_h->h_evt_class AND
										to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy');
													

								  IS_ANY_ORA_ERROR

								 Alert("\n %s : Event Already Exists\n",p_ca_caevent_struct_h->h_evt_class);
								  sprintf(chr_log_buff,"(%s): Event updated Successfully",p_ca_caevent_struct_h->h_evt_class);
								  CO_ProcMonitor(APL_OUT_FILE,chr_log_buff,NULL,p_intlenv_data_struct_h);
								  
						}
					}

					
					printf("\n ** ** ** ** ** ADDING NEW REC *** *** *** *** \n");

			
					if (!strcmp(p_intlenv_data_struct_h->h_process,"U"))
					{
							  if(strlen(p_ca_caevent_struct_h->h_corp_id))
							  {
								// Geting the CORP_ID from the table
								EXEC SQL SELECT CORP_ID INTO :l_chr_corpid FROM CAEVENT  
									WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code
									AND CA_EVENT = :p_ca_caevent_struct_h->h_evt_class AND
									to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')
									AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'SM',TO_CHAR(MEETING_DATE,'DD/MM/YYYY'),'0') =
          				DECODE(NVL(TO_CHAR(TO_DATE(:p_ca_caevent_struct_h->h_meet_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy'),'0'),'0','0',
          				(TO_CHAR(TO_DATE(:p_ca_caevent_struct_h->h_meet_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')))
						AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'CD',DIVIDEND_TYPE,'0') =DECODE(:p_ca_caevent_struct_h->h_evt_class,'CD',DECODE(NVL(:p_ca_caevent_struct_h->h_div_class,'0'),'0','0',(:p_ca_caevent_struct_h->h_div_class)),'0');
                    
					
										 IS_ANY_ORA_ERROR

									 EXEC SQL INSERT INTO CA_BILAVID_MAP 
										VALUES (:l_chr_corpid,:p_ca_caevent_struct_h->h_bilav_id,:p_ca_caevent_struct_h->h_evt_class,:p_ca_caevent_struct_h->h_maker);
										 IS_ANY_ORA_ERROR
							  }
					}
					

					printf("\n **** **** **** ONLY UPDATION IS GNG ON NOT ADDING NEW RECORTD IN CAEVENT** *** ** \n");
					APL_GOBACK_SUCCESS
				}		
				
				else // Event does not exists
				{
					if(!strcmp(p_ca_caevent_struct_h->h_maker,"BILAV_BSE")) // Bilav file is from BSE
					{
						if(strlen(p_ca_caevent_struct_h->h_ex_date))
							strcpy(p_ca_caevent_struct_h->h_ex_dt_bse,p_ca_caevent_struct_h->h_ex_date);
					}

					// Setting the payment to ex_date
					if(strlen(p_ca_caevent_struct_h->h_ex_date) && !(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV) == 0))
                    {      
				        
					if(!strlen(p_ca_caevent_struct_h->h_pymt_dt))
						 {
						strcpy(p_ca_caevent_struct_h->h_pymt_dt,p_ca_caevent_struct_h->h_ex_date);
							l_ca_caeventimg_struct_i->i_pymt_dt = 0;
						 }
                    }
				}

if (	CA_EventPriority(	p_ca_caevent_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
Alert("After priority check");

				if(strlen(p_ca_caevent_struct_h->h_bc_to_date))
				{
					if(!strlen(p_ca_caevent_struct_h->h_rec_date))  
					{
					l_ca_caeventimg_struct_i->i_rec_date = -1;
					Alert("We got Book Closure Date.....\n");
				}
               }
				else 
				{
					if(strlen(p_ca_caevent_struct_h->h_bc_from_date))
					{
						strcpy(p_ca_caevent_struct_h->h_rec_date,p_ca_caevent_struct_h->h_bc_from_date);
						l_ca_caeventimg_struct_i->i_rec_date = 0;
						l_ca_caeventimg_struct_i->i_bc_from_date = -1;
						l_ca_caeventimg_struct_i->i_bc_to_date = -1;
						Alert("We got Record Date.....\n");
					}
				}
				

			}

                       EXEC SQL SELECT FIELD_VAL INTO :char_l_h_dec_precision:l1_i_dec_precision
                       FROM PRO_GSSPLVAL
                       WHERE MAIN_FUN = 'DEC_LEN_RATE'
                       AND SUB_PROCESS = 'DEC_FOR_RATE';
                       IS_ANY_ORA_ERROR

                       dbl_new_safek_quantity_rt=0.0;
                       dbl_earnings_rt=0.0;

                       CO_Round(p_ca_caevent_struct_h->h_new_safek_quantity_rt,atoi(char_l_h_dec_precision), &dbl_new_safek_quantity_rt);
                       p_ca_caevent_struct_h->h_new_safek_quantity_rt = dbl_new_safek_quantity_rt;

                       CO_Round(p_ca_caevent_struct_h->h_earnings_rt,atoi(char_l_h_dec_precision), &dbl_earnings_rt);
                       p_ca_caevent_struct_h->h_earnings_rt = dbl_earnings_rt;

                /*  CS0074500 - New Bilav File upload changes END */

			
			EXEC SQL INSERT INTO CAEVENT VALUES (:p_ca_caevent_struct_h:l_ca_caeventimg_struct_i);
			IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_EVENT,
													 chr_error_key, 
													 p_ca_caevent_struct_h->h_decl_date,
													 chr_char_event_nbr) 
			
			printf("\n After caevent insert BC date = |%s|\n", p_ca_caevent_struct_h->h_bc_from_date); 
			
			
		if (!strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes */
		{
				  if(strlen(p_ca_caevent_struct_h->h_corp_id))
				  {
							 EXEC SQL INSERT INTO CA_BILAVID_MAP 
										VALUES (:p_ca_caevent_struct_h->h_corp_id,:p_ca_caevent_struct_h->h_bilav_id,:p_ca_caevent_struct_h->h_evt_class,:p_ca_caevent_struct_h->h_maker);
							 IS_ANY_ORA_ERROR
				  }
		}
		

			printf("\n $$$$$$$ AFTER INSERT STATEMENTp_ca_caevent_struct_h->h_response_date is |%s|\n",p_ca_caevent_struct_h->h_respons_date);   
			printf("\n $$$$$$$ AFTER INSERT STATEMENTp_ca_caevent_struct_h->h_follmsg2date is |%s|\n",p_ca_caevent_struct_h->h_follmsg2date);   
			/* Insert here into syndicate_member table after parsing synd_membr */

			if (APL_FAILURE == CO_SplitStr( p_ca_caevent_struct_h->h_synd_membr,
                                     ',',
                                     &int_l_num_data_key,
                                     &temp_data_key ))
			{
				APL_GOBACK_FAIL;
			}

			for (int_l_key=0;int_l_key<int_l_num_data_key;++int_l_key)
			{
				EXEC SQL insert into casyndmem values (:p_ca_caevent_struct_h->h_corp_id,:temp_data_key[int_l_key]);

				IS_ANY_ORA_ERROR
			}


		APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Record created successfuly",NULL,p_intlenv_data_struct_h);
			}
	
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_casetup_struct_h);	
			APL_FREE(l_ca_casecevent_struct_i);	
			APL_FREE(l_ca_caeventimg_struct_i);	

			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventAdd successfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_casetup_struct_h);	
			APL_FREE(l_ca_casecevent_struct_i);	
			APL_FREE(l_ca_caeventimg_struct_i);	
			
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventAdd unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
		}
}		

static	int 	CA_EventMod( CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
						          	INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      						 	DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 				)
{
	struct	sqlca	sqlca;
	CA_CAEVENT_STRUCT_I		*l_ca_caeventimg_struct_i			=	NULL;
	CA_CASECEVENT_STRUCT_H	*l_ca_casetup_struct_h				=	NULL;
	CA_CASECEVENT_STRUCT_I	*l_ca_casecevent_struct_i			=	NULL;
	CA_CAEVENT_STRUCT_H		*l_ca_caeventimg_struct_h			=	NULL;
	CA_CAEVENT_STRUCT_I		*l_ca_caevent_struct_i				=	NULL;
	char					 		rowid[APL_ROWID_LEN]    			= APL_NULL_STRING;
	char							pro_sys_date[APL_DATE_LEN]  		= APL_NULL_STRING;
	char							chr_error_key[L_INSTR_CODERR_PLUS_CERR_TYP_LEN] = APL_NULL_STRING;
	char							chr_char_event_nbr[LOCAL_LEN_EVNT_NBR] = APL_NULL_STRING;
	char							chr_log_buff[LOG_BUFFER_LEN]		=APL_NULL_STRING;
	char							*int_pos;
   int      					int_l_num_data_key      			=  0;
	int      					int_l_key               			=  0;
	char							**temp_data_key;
/*Added by Gufran for ISKB_3569 on 09-June-2010 -- started*/
   int					      int_l_count_spayment					=  0;
   int 							int_l_count_gpayment					=	0;
/*Added by Gufran for ISKB_3569 on 09-June-2010 -- Ended*/

/* Added by Arunachalam for CS0074500 - New Bilav File upload changes START */
   int result_c = 0;
   int	int_exch_rec_test = 0;
   int int_holiday_flag = 0;
        int l_count = 0;//supriya for new bilav upload
        char l_status[APL_STATUS_LEN] = APL_NULL_STRING; //supriya for new bilav upload
        char l_res_instr_code[9]=APL_NULL_STRING;
		short i_res_instr_code=0;
		char l_disp_of_fract[3]=APL_NULL_STRING;
		short i_disp_of_fract=0;
		char l_pymt_send_msg_ind[2]=APL_NULL_STRING;
		short i_pymt_send_msg_ind=0;
		char l_entl_send_msg_ind[2]=APL_NULL_STRING;
		short i_entl_send_msg_ind=0;
		char l_evt_send_msg_ind[2]=APL_NULL_STRING;
		short i_evt_send_msg_ind=0;
		char l_evt_deal_to_date[11]=APL_NULL_STRING;
		short i_evt_deal_to_date=0;		
		char l_evt_meeting_date[11]=APL_NULL_STRING;
		short i_evt_meeting_date=0;		
		int int_datediff=0;
   /* CS0074500 - New Bilav File upload changes END */
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entering S_EventModify",NULL,p_intlenv_data_struct_h);
	}
		
	if	 (	CA_MandDataChk(	p_ca_caevent_struct_h,
								p_intlenv_data_struct_h,
								l_debug_info_ptr
							) == APL_FAILURE
		 )
				APL_GOBACK_FAIL
	
			(l_ca_caeventimg_struct_h) = (CA_CAEVENT_STRUCT_H*)calloc(1,sizeof(CA_CAEVENT_STRUCT_H));	
			APL_MALLOC_FAIL(l_ca_caeventimg_struct_h) 
		
			(l_ca_caevent_struct_i) = (CA_CAEVENT_STRUCT_I*)calloc(1,sizeof(CA_CAEVENT_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_caevent_struct_i) 

			EXEC SQL BEGIN DECLARE SECTION;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_corp_id is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_instr_code is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_res_instr_code is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_contactinfo is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_info_nbr is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_entinfo_no is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_maker is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_checker is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_proc_oth is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_nser_info is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_nrep_date_a is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_comp_info1 is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_inco_info1 is string; 
			EXEC SQL VAR   l_ca_caeventimg_struct_h->h_txnr_info1 is string; 
			EXEC SQL END DECLARE SECTION;

			APL_IF_DEBUG
			{
				printf("Corp ID of the Event to be Modified = |%s|\n",p_ca_caevent_struct_h->h_corp_id);
			}
			
			
			if (!strcmp(p_intlenv_data_struct_h->h_process,"U")) /* Added by Arunachalam for CS0074500 - New Bilav File upload changes START */
			{
			printf("\n *** ENTER *** *** MODE *** MODIFY \n");

					if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV))
					{
					EXEC SQL SELECT  COUNT(*)
									  INTO          :l_count
										FROM CAEVENT A
								  WHERE A.dividend_type=:p_ca_caevent_struct_h->h_div_class
								  and A.corp_id IN (select B.corp_id from ca_bilavid_map B where B.bilav_id=:p_ca_caevent_struct_h->h_bilav_id
								  and B.ca_event = :p_ca_caevent_struct_h->h_evt_class and B.bilav_id=A.bilav_id);
					}
					else
					{
EXEC SQL SELECT  COUNT(*)
              INTO          :l_count
                FROM CAEVENT A
          WHERE A.corp_id IN (select B.corp_id from ca_bilavid_map B where B.bilav_id=:p_ca_caevent_struct_h->h_bilav_id
          and B.ca_event = :p_ca_caevent_struct_h->h_evt_class and B.bilav_id=A.bilav_id);
					}
                              IS_ANY_ORA_ERROR

                                printf("sqlca.sqlcode is |%d|\n",sqlca.sqlcode);

Alert("Count is %d ",l_count);
if(l_count == 0)
		  {
		  if (    CA_EventAdd(    p_ca_caevent_struct_h,
                                                                                        p_intlenv_data_struct_h,
                                                                                        l_debug_info_ptr
                                                                                ) == APL_FAILURE
                                )
                                {
                                        APL_GOBACK_FAIL
                                }
                        else
                                {
                                        APL_GOBACK_SUCCESS
                                }
		 }
else
{

					if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV))
					{
					EXEC SQL SELECT A.STATUS, A.RES_INSTR_CODE,DISP_OF_FRACT,PYMT_SEND_MSG_IND,ENTL_SEND_MSG_IND,EVT_SEND_MSG_IND,DEAL_TO_DATE   
								  INTO          :l_status, :l_res_instr_code:i_res_instr_code,:l_disp_of_fract:i_disp_of_fract,:l_pymt_send_msg_ind:i_pymt_send_msg_ind,:l_entl_send_msg_ind:i_entl_send_msg_ind,:l_evt_send_msg_ind:i_evt_send_msg_ind,:l_evt_deal_to_date:i_evt_deal_to_date 
								  FROM CAEVENT A
							  WHERE A.DIVIDEND_TYPE=:p_ca_caevent_struct_h->h_div_class
							  and A.corp_id IN (select B.corp_id from ca_bilavid_map B where B.bilav_id=:p_ca_caevent_struct_h->h_bilav_id
							  and B.ca_event = :p_ca_caevent_struct_h->h_evt_class and B.bilav_id=A.bilav_id);
					}
					else
					{
					EXEC SQL SELECT A.STATUS, A.RES_INSTR_CODE,DISP_OF_FRACT,PYMT_SEND_MSG_IND,ENTL_SEND_MSG_IND,EVT_SEND_MSG_IND,DEAL_TO_DATE,MEETING_DATE    
								INTO          :l_status, :l_res_instr_code:i_res_instr_code,:l_disp_of_fract:i_disp_of_fract,:l_pymt_send_msg_ind:i_pymt_send_msg_ind,:l_entl_send_msg_ind:i_entl_send_msg_ind,:l_evt_send_msg_ind:i_evt_send_msg_ind,:l_evt_deal_to_date:i_evt_deal_to_date,l_evt_meeting_date:i_evt_meeting_date 
              FROM CAEVENT A
          WHERE A.corp_id IN (select B.corp_id from ca_bilavid_map B where B.bilav_id=:p_ca_caevent_struct_h->h_bilav_id
          and B.ca_event = :p_ca_caevent_struct_h->h_evt_class and B.bilav_id=A.bilav_id);
					 }
 
                             IS_ANY_ORA_ERROR
							 
							 
				 
Alert("\n ***** RES_INSTR_CODE is |%s|",l_res_instr_code);
Alert("\n ***** 0 RES_INSTR_CODE is |%s|",p_ca_caevent_struct_h->h_res_instr_code);
if (!strcmp(p_intlenv_data_struct_h->h_process,"U"))
	{ 

		Alert("\n RES INSTR is |%s|",p_ca_caevent_struct_h->h_res_instr_code);
		Alert("\n INSTR CODE is |%s|",p_ca_caevent_struct_h->h_instr_code);
	   if(!strcmp(p_ca_caevent_struct_h->h_res_instr_code,p_ca_caevent_struct_h->h_instr_code))
       strcpy(p_ca_caevent_struct_h->h_res_instr_code,l_res_instr_code);
	   
	   strcpy(p_ca_caevent_struct_h->h_disp_of_fract,l_disp_of_fract);
	   strcpy(p_ca_caevent_struct_h->h_pymt_send_msg_ind,l_pymt_send_msg_ind);
	   strcpy(p_ca_caevent_struct_h->h_entl_send_msg_ind,l_entl_send_msg_ind);
	   strcpy(p_ca_caevent_struct_h->h_evt_send_msg_ind,l_evt_send_msg_ind);
	   Alert("\n ***** 1 RES_INSTR_CODE is |%s|",p_ca_caevent_struct_h->h_res_instr_code);
	   
				
					if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK))	
					{    
						if(	strlen(l_evt_deal_to_date)	)
						{ 					        
					    	    if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
								{
									APL_GOBACK_FAIL
								}

									EXEC SQL SELECT 
									TO_DATE(:pro_sys_date) -	 TO_DATE(:l_evt_deal_to_date)
									INTO :int_datediff
									FROM DUAL;
									IS_ANY_ORA_ERROR																
																						

								if(int_datediff > 0)
							{   
								CO_InsertErr(l_debug_info_ptr,
													ERR_ISSUE_CLOSE_DT_SMALL,
													APL_NULL_STRING,
													APL_NULL_STRING,
													APL_NULL_STRING,
													__LINE__,
													__FILE__
													);							 			
							}	
						}
					}
					
			

	}
Alert("status is %s",l_status);
if((strcmp(l_status,"CP") == 0) ||(strcmp(l_status,"PP") == 0))  
{
CO_InsertErr(l_debug_info_ptr,
						 ERR_POST_EX_DT_MOD,
						 p_intlenv_data_struct_h->h_mode,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 __LINE__,
						 __FILE__
						 );
		  APL_GOBACK_FAIL

}
								
if (	CA_EventPriority(	p_ca_caevent_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
	
						 printf("\n bilav id |%s| : ",p_ca_caevent_struct_h->h_bilav_id );
						 printf("\n evt class |%s| : ",p_ca_caevent_struct_h->h_evt_class );
						 printf("\n maker |%s| : ",p_ca_caevent_struct_h->h_maker);

						if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV))
						{
						EXEC SQL SELECT 	ROWID,
							  CAEVENT.* 
								  INTO					:rowid,
							  :l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
								  FROM CAEVENT 
						  WHERE DIVIDEND_TYPE=:p_ca_caevent_struct_h->h_div_class
						  and corp_id IN (select corp_id from ca_bilavid_map where bilav_id=:p_ca_caevent_struct_h->h_bilav_id 
							and ca_event = :p_ca_caevent_struct_h->h_evt_class    and maker = :p_ca_caevent_struct_h->h_maker)  
								  FOR UPDATE OF	CAEVENT.STATUS; 
						  }
						  else
						  {
				EXEC SQL SELECT 	ROWID,
					  CAEVENT.* 
						  INTO					:rowid,
					  :l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
						  FROM CAEVENT 
				  WHERE corp_id IN (select corp_id from ca_bilavid_map where bilav_id=:p_ca_caevent_struct_h->h_bilav_id 
					and ca_event = :p_ca_caevent_struct_h->h_evt_class    and maker = :p_ca_caevent_struct_h->h_maker)  /*   CHANGE BY SWAPNIL JAMBLE FOR ISSB-11606 -New Bilav file format changes   */
						  FOR UPDATE OF	CAEVENT.STATUS; 

						  }
																	
				printf("sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
			}
			}
			
			else
			{
			
			EXEC SQL SELECT 	ROWID,
									CAEVENT.* 
			INTO					:rowid,
									:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
			FROM CAEVENT 
        	WHERE corp_id=:p_ca_caevent_struct_h->h_corp_id 
      	FOR UPDATE OF	CAEVENT.STATUS; /*Smita- Changed Col Name - HDFCCA_027*/
			printf("sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
		    }    //CS0074500 - New Bilav File upload changes -- END
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_EVNT_NOTFND_A,
																p_ca_caevent_struct_h->h_instr_code,
																p_ca_caevent_struct_h->h_decl_date,
																p_ca_caevent_struct_h->h_evt_class
															 )	

	
		
				APL_IF_DEBUG
				{
					printf("Access Stamp from Table = |%s|\n",l_ca_caeventimg_struct_h->h_access_stamp);
					printf("Access Stamp from Structure = |%s|\n",p_ca_caevent_struct_h->h_access_stamp);
				}
				
			/* Added by Arunachalam for CS0074500 - New Bilav File upload changes START */
 Alert("\n ***** meeting_date is 555     \n EVENT is |%s|    meet date =|%s|",l_ca_caeventimg_struct_h->h_evt_class,l_ca_caeventimg_struct_h->h_meet_date);					
					if (!strcmp(l_ca_caeventimg_struct_h->h_evt_class,EVT_MEETING))	
					{    
						if(	strlen(l_ca_caeventimg_struct_h->h_meet_date)	)
						{ 					        
					    	    if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
								{
									APL_GOBACK_FAIL
								}
                                  int_datediff =0;
								  
									EXEC SQL SELECT 
									TO_DATE(:pro_sys_date) -	 TO_DATE(:l_ca_caeventimg_struct_h->h_meet_date)
									INTO :int_datediff
									FROM DUAL;
									IS_ANY_ORA_ERROR																
																						
                   Alert("\n ***** 555 meeting_date diff is |%d| ",int_datediff);
								if(int_datediff > 0)
							{      Alert("\n ***** 11  meeting date small or passed==");
								CO_InsertErr(l_debug_info_ptr,
													ERR_POST_MEET_DT_MOD,
													APL_NULL_STRING,
													APL_NULL_STRING,
													APL_NULL_STRING,
													__LINE__,
													__FILE__
													);
                                 APL_GOBACK_FAIL													
							}	
						}
					}	
					
					
Alert("\n ***** 11111 RES_INSTR_CODE is |%s|",p_ca_caevent_struct_h->h_res_instr_code);			

		if (!strcmp(p_intlenv_data_struct_h->h_process,"U")) 
		{        
/*   CHANGE BY SWAPNIL JAMBLE FOR -New Bilav file format changes --END    */
			strcpy(p_ca_caevent_struct_h->h_access_stamp,l_ca_caeventimg_struct_h->h_access_stamp);
			//strcpy(l_ca_caeventimg_struct_h->h_access_stamp,p_ca_caevent_struct_h->h_access_stamp);
			strcpy(p_ca_caevent_struct_h->h_stat_date,l_ca_caeventimg_struct_h->h_stat_date);
			p_ca_caevent_struct_h->h_priority = l_ca_caeventimg_struct_h->h_priority;
				
			if(!strcmp(p_ca_caevent_struct_h->h_maker,"BILAV_BSE")) // Bilav file is from BSE
			{
				if(strlen(p_ca_caevent_struct_h->h_ex_date))
					strcpy(p_ca_caevent_struct_h->h_ex_dt_bse,p_ca_caevent_struct_h->h_ex_date);

					// By Harvinder Singh Log_97- Start
					EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_exch_rec_test FROM CA_BILAVID_MAP 
								WHERE CORP_ID = :l_ca_caeventimg_struct_h->h_corp_id AND 
								MAKER = 'BILAV_NSE'; 
			
					printf("\n ** ** ** BSE ** int_exch_rec_test  = %d  ** ** **\n",int_exch_rec_test);	
					if(int_exch_rec_test) // Record is also there for NSE, so we will not update the ex date				
					{
							EXEC SQL SELECT EX_DATE INTO :p_ca_caevent_struct_h->h_ex_date     
								FROM CAEVENT WHERE CORP_ID = :l_ca_caeventimg_struct_h->h_corp_id; 	
					}
			}
			else  //Bilav file is from NSE
			{
				int_exch_rec_test = 0; // reseting to 0 for further use
				EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_exch_rec_test FROM CA_BILAVID_MAP 
					WHERE CORP_ID = :l_ca_caeventimg_struct_h->h_corp_id AND 
					MAKER = 'BILAV_BSE';
				
				printf("\n ** ** ** NSE ** int_exch_rec_test  = %d  ** ** **\n",int_exch_rec_test);
				if(int_exch_rec_test) // Record is also there for BSE, so we will not update the bse ex date
				{
					EXEC SQL SELECT EX_DT_BSE INTO :p_ca_caevent_struct_h->h_ex_dt_bse  
						FROM CAEVENT WHERE CORP_ID = :l_ca_caeventimg_struct_h->h_corp_id;
				}

			}
			// By Harvinder Singh Log_97  - End 

			
			//Changes done by shrinath for ISSB_11606 start
			if(!(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS) || !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT) || !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV) || !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED) || !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS) || !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV) || !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK)))
			{
			printf("\n \n CORP_ID *** |%s| *** \n",l_ca_caeventimg_struct_h->h_corp_id);
			EXEC SQL SELECT DATEOF_PAYMENT INTO :p_ca_caevent_struct_h->h_pymt_dt
					FROM CAEVENT WHERE CORP_ID = :l_ca_caeventimg_struct_h->h_corp_id;
			}
                        //Changes done by shrinath for ISSB_11606 ends
			printf("\n \n Dateof_payment *** |%s| *** \n",p_ca_caevent_struct_h->h_pymt_dt);

		// By Harvinder Singh - Changed the condition for Bilav file upload  -END 
		}/*  CS0074500 - New Bilav File upload changes END */
		
		if (	
				strcmp(	p_ca_caevent_struct_h->h_access_stamp,
							l_ca_caeventimg_struct_h->h_access_stamp
						)
			)		
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}
			if	(	(strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_INT)) &&	 
					(	strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_CHNG_RDY_INT)	)	&& 
					(	strcmp(l_ca_caeventimg_struct_h->h_evt_stat,APL_STATUS_UNAUTH)	)  &&
					(  strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_PYMT)   )  &&        
					(  strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_APP)   )   &&
               (  strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_ENTL)   )  &&        
               (  strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_CHNG_RDY_PYMT))  &&        
					(  ! ( !strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_SENT) &&
							 !strcmp(l_ca_caeventimg_struct_h->h_preliminary_flag,APL_YES_IND)
							) 
					) &&
					(	strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS) && 				
						  ( strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_PAID_CLSD) ||
				 		    strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_CHNG_PAID_CLSD) ) 
				     )	// modified by siva.ganapathi for HDFC Enh. Log 28 0n 30/12/2008 -- Retro done By Sana Bhatkar for Rights Mod
				)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_EVNT_STS_INVALIDCHG,
										l_ca_caeventimg_struct_h->h_evt_stat,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					APL_GOBACK_FAIL
				}

			l_ca_casetup_struct_h=(CA_CASECEVENT_STRUCT_H*)calloc(1,sizeof(CA_CASECEVENT_STRUCT_H)	);	
			APL_MALLOC_FAIL(l_ca_casetup_struct_h) 
		
			l_ca_casecevent_struct_i=(CA_CASECEVENT_STRUCT_I*)calloc(1,sizeof(CA_CASECEVENT_STRUCT_I)	);	
			APL_MALLOC_FAIL(l_ca_casecevent_struct_i) 

			if	(	CA_CheckEvnt	(		p_ca_caevent_struct_h,
									l_ca_casetup_struct_h,
									l_ca_casecevent_struct_i,
									p_intlenv_data_struct_h,
									l_debug_info_ptr
								)	==	APL_FAILURE
			)
			APL_GOBACK_FAIL
	
			if (strcmp(p_intlenv_data_struct_h->h_process,"U") == 0){  // Added by Arunachalam for CS0074500 - New Bilav File upload changes
				printf("\n \n Inside bilav condition first1 |%d| \n",result_c); // added by akshay
				if (CA_EventCmp(p_ca_caevent_struct_h,
				          	l_ca_caeventimg_struct_h,
							&result_c,
							p_intlenv_data_struct_h,
							l_debug_info_ptr
							) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
				printf("\n \n Inside bilav condition after1 |%d| \n",result_c);
			}		
	
	/* Added by gufran for ISKB_3569 on 08/06/2010 --- Started */ 

         printf("\n Event status is %s",l_ca_caeventimg_struct_h->h_evt_stat);
         if (!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_PYMT))
         {
           int_l_count_spayment = 0;
           int_l_count_gpayment = 0;

            EXEC SQL SELECT nvl (count(*),0) INTO :int_l_count_spayment FROM CACHEQUE
                     WHERE corp_id = :p_ca_caevent_struct_h->h_corp_id;

            IS_ANY_ORA_ERROR

            EXEC SQL SELECT nvl(count(*),0) INTO :int_l_count_gpayment FROM CAGLPYMT
                     WHERE corp_id = :p_ca_caevent_struct_h->h_corp_id;

            IS_ANY_ORA_ERROR

            printf ("\n Inside if loop .. int_l_count_spayment is |%d|", int_l_count_spayment);
            printf("\n Inside if loop .. int_l_count_gpayment is |%d|", int_l_count_gpayment);

            if ((int_l_count_spayment == 0) && (int_l_count_gpayment == 0))
            {
            	printf ("No unprocessed payment exists user can modify the event");
            }
            else
            {
                CO_InsertErr(l_debug_info_ptr,
                ERR_UNPRO_PAY_EXST,
                p_intlenv_data_struct_h->h_mode,
                APL_NULL_STRING,
                APL_NULL_STRING,
                __LINE__,
                __FILE__
                );
                APL_GOBACK_FAIL
            }
         }
  
			
     /* Added by gufran for ISKB_3569 on 08/06/2010 --- Ended  */

			
			if	(	!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_INT) ||
					!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_APP) ||
					!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_SENT) ||  
					!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_PYMT) || 
   				!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_ENTL) ||
					( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS) &&        
					     !strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_PAID_CLSD)) // modified by siva.ganapathi for HDFC Enh. Log 28 0n 30/12/2008 -- Retro done by Sana Bhatkar for Rights Mod
				)
			{
				/* If condition added by Arunachalam for CS0074500 - New Bilav File upload changes START */
				if(strcmp(p_intlenv_data_struct_h->h_process,"U") == 0){
					printf("\n \n Inside bilav condition modification |%d| \n",result_c);
					if(result_c != 0){
						EXEC SQL INSERT INTO CAEVENTMG VALUES (:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i);	
						IS_ANY_ORA_ERROR_AND_DUPLICATE(	ERR_DUPLICATE_EVENTIMG,
															p_ca_caevent_struct_h->h_corp_id,
															APL_NULL_STRING,
															APL_NULL_STRING) 
					}
				}   
				else
				{
				EXEC SQL INSERT INTO CAEVENTMG VALUES (:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i);
				IS_ANY_ORA_ERROR_AND_DUPLICATE(	ERR_DUPLICATE_EVENTIMG,
															p_ca_caevent_struct_h->h_corp_id,
															APL_NULL_STRING,
															APL_NULL_STRING) 
															
				}
				APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,"Image Record inserted successfuly",NULL,p_intlenv_data_struct_h);
				}	
			}	
      
	
			if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}
/* If Put Option event is chngd whn status is RP its status shld chng to Intimation UnAuthorizes since 
	modification messages are req. to be sent */				
			if	(	!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_INT)	||	
					!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_APP)	||	
					!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_SENT)  ||
					(!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_PYMT) && 
					!strcmp(l_ca_caeventimg_struct_h->h_evt_class,EVT_BOND_REDMP) &&
					!strcmp(l_ca_caeventimg_struct_h->h_op_evt_class,"PO"))
					//Above 3 condition added by Chirag for Put Option event swift relese issues
				)
			{	
				strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
				strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_CHNG_RDY_INT);
			}
			else	
			{
            if (!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_ENTL))
            {
               strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
               strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_CHNG_RDY_INT);
            }
            else if ((!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_PYMT)) || 
							(!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_CHNG_RDY_PYMT)))
            {
               strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
			   strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_CHNG_RDY_PYMT);
			   printf("\n \n Event status elseif part |%s| \n",p_ca_caevent_struct_h->h_evt_stat);
				
            }
			else if(!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_PAID_CLSD))// modified by siva.ganapathi for HDFC Enh. Log 28 0n 30/12/2008
			{
				strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
				strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_CHNG_PAID_CLSD);
			}
            else
            {
					strcpy(p_ca_caevent_struct_h->h_evt_stat,l_ca_caeventimg_struct_h->h_evt_stat);
				}
			}	
			
			if(strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes */
			{
				strcpy(p_ca_caevent_struct_h->h_maker,p_intlenv_data_struct_h->usr);
			}
			
		strcpy(p_ca_caevent_struct_h->h_maker,p_intlenv_data_struct_h->usr);
		strcpy(p_ca_caevent_struct_h->h_maker_dt,pro_sys_date);
		strcpy(p_ca_caevent_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_ca_caevent_struct_h->h_checker_dt,APL_NULL_STRING);
	
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		{
			APL_GOBACK_FAIL
		}
		strcpy(p_ca_caevent_struct_h->h_access_stamp,pro_sys_date);
		
		if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER) )
		{
			strcpy(p_ca_caevent_struct_h->h_pymt_dt,p_ca_caevent_struct_h->h_effect_date);
		}
	
		(l_ca_caeventimg_struct_i) = (CA_CAEVENT_STRUCT_I*)calloc(2,sizeof(CA_CAEVENT_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_caeventimg_struct_i) 

			CA_IndVarSet(	p_ca_caevent_struct_h,
								l_ca_caeventimg_struct_i,
								l_ca_casetup_struct_h			
							);

		  if ( !strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes START */
          {
			if (strcmp(p_ca_caevent_struct_h->h_evt_class,"SM") != 0)//Added condition by Prateek 
			{
			// For bc_to_date and bc_from _date and rec date
			if(strlen(p_ca_caevent_struct_h->h_bc_to_date))
			{
				if(!strlen(p_ca_caevent_struct_h->h_rec_date))	//Retrofits by Pallavi 
				{
				l_ca_caeventimg_struct_i->i_rec_date = -1;
				Alert("Book Closure Date....\n");
			}
			}
			else 
			{
				if(strlen(p_ca_caevent_struct_h->h_bc_from_date))
				{
					strcpy(p_ca_caevent_struct_h->h_rec_date,p_ca_caevent_struct_h->h_bc_from_date);
					l_ca_caeventimg_struct_i->i_rec_date = 0;
					l_ca_caeventimg_struct_i->i_bc_from_date = -1;
					l_ca_caeventimg_struct_i->i_bc_to_date = -1;
					Alert("Record Date....\n");
				}
			}
	   }
          }
		 //CS0074500 - New Bilav File upload changes END
  	    /* vaibhav karnik I-Solve:362 KOTAK_UAT 16/07/2007 */ 
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)==0)
		{
			l_ca_caeventimg_struct_i->i_evt_send_msg_ind =0;
			strcpy(p_ca_caevent_struct_h->h_evt_send_msg_ind,"Y");
		}

		printf("\n here.......Evt Send Msg = |%s|",p_ca_caevent_struct_h->h_evt_send_msg_ind);
		printf("\n Indicator Variable is = |%d|",l_ca_caeventimg_struct_i->i_evt_send_msg_ind);  
	   /* vaibhav karnik I-Solve:362 KOTAK_UAT 16/07/2007 */

	
		EXEC SQL UPDATE CAEVENT SET
		CA_CURRENCY =:p_ca_caevent_struct_h->h_ca_currency:l_ca_caeventimg_struct_i->i_ca_currency	
		WHERE
				ROWID=:rowid;

      IS_ANY_ORA_ERROR;


/* Update casyndmem table also*/
/* Steps
1. Delete rows for CAID 
2. insert rows for new synds --> Similar to event add
*/
     EXEC SQL DELETE CASYNDMEM WHERE CORP_ID=:p_ca_caevent_struct_h->h_corp_id; 
      IS_ANY_ORA_ERROR;


			if (APL_FAILURE == CO_SplitStr( p_ca_caevent_struct_h->h_synd_membr,
                                     ',',
                                     &int_l_num_data_key,
                                     &temp_data_key ))
			{
				APL_GOBACK_FAIL;
			}

			for (int_l_key=0;int_l_key<int_l_num_data_key;++int_l_key)
			{
				EXEC SQL insert into casyndmem values (:p_ca_caevent_struct_h->h_corp_id,:temp_data_key[int_l_key]);
                printf("Err |%d|",sqlca.sqlcode);
				IS_ANY_ORA_ERROR
			}

      /******** Changes for 568 Entitlement Generation KOTAK-UAT (VaibhavK 26-March-2007)***START*****/
	       printf("\n MODE is Modify.(Vaibhav)\n");
		   printf("\n $$$$ INFO_SEQ =|%s|",p_ca_caevent_struct_h->h_info_nbr);
		   printf("\n $$$$ ENTITL_INFONO =|%s|",p_ca_caevent_struct_h->h_entinfo_no);

			IF_COND_EXISTS("CA_ENTITL","568_GENERATION")
			{
				if(strlen(p_ca_caevent_struct_h->h_info_nbr) > 0 && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)!=0)
				{
					printf("\n Vaibhav Inside 568_Generation Test_loop");
					strcpy(p_ca_caevent_struct_h->h_entinfo_no,p_ca_caevent_struct_h->h_info_nbr);
					l_ca_caeventimg_struct_i->i_entinfo_no=0;
					printf("\n Entitlement Footnote is |%s|",p_ca_caevent_struct_h->h_entinfo_no);
				}
				printf("\n Vaibhav ------ 568 Generation Enabled for Kotak\n");
			}
			printf("Vaibhav ---------- Entitlement Info is |%s|",p_ca_caevent_struct_h->h_entinfo_no);
	/******** Changes for 568 Entitlement Generation KOTAK-UAT (VaibhavK 26-March-2007)***END*****/  

			printf("\n h_comp_info1 |%s|",l_ca_caeventimg_struct_h->h_comp_info1);
			printf("\n h_inco_info1 |%s|",l_ca_caeventimg_struct_h->h_inco_info1);
			printf("\n h_txnr_info1 |%s|",l_ca_caeventimg_struct_h->h_txnr_info1);
			//printf("\n h_mom_info |%s|",l_ca_caeventimg_struct_h->h_mom_info);
			printf("\n h_info_nbr |%s|",l_ca_caeventimg_struct_h->h_info_nbr);
			//printf("\n h_nser_info |%s|",l_ca_caeventimg_struct_h->h_mom_info);
			printf("\n h_nrep_date_a |%s|",l_ca_caeventimg_struct_h->h_info_nbr);


			  if ( !strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes  */
              {
					printf("\n After copying foot notes from img structure");

                     if (  !strlen(p_ca_caevent_struct_h->h_comp_info1) )
				  {
						 strcpy(p_ca_caevent_struct_h->h_comp_info1,l_ca_caeventimg_struct_h->h_comp_info1);						 
						 printf("\n h_comp_info1 |%s|",p_ca_caevent_struct_h->h_comp_info1);
				  }
				     if (  !strlen(p_ca_caevent_struct_h->h_inco_info1) )
				  {
						 strcpy(p_ca_caevent_struct_h->h_inco_info1,l_ca_caeventimg_struct_h->h_inco_info1);
						 printf("\n h_inco_info1 |%s|",p_ca_caevent_struct_h->h_inco_info1);
				  }
				     if (  !strlen(p_ca_caevent_struct_h->h_txnr_info1) )
				  {
						 strcpy(p_ca_caevent_struct_h->h_txnr_info1,l_ca_caeventimg_struct_h->h_txnr_info1);
						 printf("\n h_txnr_info1 |%s|",p_ca_caevent_struct_h->h_txnr_info1);
				  }
				
				     if (  !strlen(p_ca_caevent_struct_h->h_info_nbr) )
				  {
						 strcpy(p_ca_caevent_struct_h->h_info_nbr,l_ca_caeventimg_struct_h->h_info_nbr);
						 printf("\n h_info_nbr |%s|",p_ca_caevent_struct_h->h_info_nbr);
				  }
					 if (  !strlen(p_ca_caevent_struct_h->h_nser_info) )
				  {
						 strcpy(p_ca_caevent_struct_h->h_nser_info,l_ca_caeventimg_struct_h->h_nser_info);
						 printf("\n h_nser_info |%s|",p_ca_caevent_struct_h->h_nser_info);
				  }
				     if (  !strlen(p_ca_caevent_struct_h->h_nrep_date_a) )
				  {
						 strcpy(p_ca_caevent_struct_h->h_nrep_date_a,l_ca_caeventimg_struct_h->h_nrep_date_a);
						 printf("\n h_nrep_date_a |%s|",p_ca_caevent_struct_h->h_nrep_date_a);
				  }
              }  //CS0074500 - New Bilav File upload changes END
			  

if((strcmp(p_intlenv_data_struct_h->h_process,"U") == 0) && (result_c != 0)) {
			if(	CA_Mod_EventRec(	p_ca_caevent_struct_h,
											l_ca_caeventimg_struct_i,
											rowid,
											l_debug_info_ptr
										) == APL_FAILURE
				)
					APL_GOBACK_FAIL
		}
		else if(strcmp(p_intlenv_data_struct_h->h_process,"U") != 0) {
			if(	CA_Mod_EventRec(	p_ca_caevent_struct_h,
											l_ca_caeventimg_struct_i,
											rowid,
											l_debug_info_ptr
										) == APL_FAILURE
				)
					APL_GOBACK_FAIL
		}


			APL_GOBACK_SUCCESS
			RETURN_SUCCESS	:
		
			{
				APL_FREE(l_ca_caeventimg_struct_i);
				APL_FREE(l_ca_casetup_struct_h);
				APL_FREE(l_ca_casecevent_struct_i);
				APL_FREE(l_ca_caeventimg_struct_h);
				APL_FREE(l_ca_caevent_struct_i);
			
				APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventMod successfully",NULL,p_intlenv_data_struct_h);
				}
				return (APL_SUCCESS);
			}
			RETURN_FAILURE	:
			{
				APL_FREE(l_ca_caeventimg_struct_i);
				APL_FREE(l_ca_casetup_struct_h);
				APL_FREE(l_ca_casecevent_struct_i);
				APL_FREE(l_ca_caeventimg_struct_h);
				APL_FREE(l_ca_caevent_struct_i);
			
				APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventMod unsuccessfully",NULL,p_intlenv_data_struct_h);
				}		
				return (APL_FAILURE);
			}
}

static	int 	CA_CheckEvnt( 	CA_CAEVENT_STRUCT_H		*p_ca_caevent_struct_h,	
										CA_CASECEVENT_STRUCT_H	*p_ca_casecevent_struct_h,
										CA_CASECEVENT_STRUCT_I	*p_ca_casecevent_struct_i,
				      				INTL_ENV_DATA_STRUCT_H  *p_intlenv_data_struct_h,
										DEBUG_INFO_STRUCT_H 		**l_debug_info_ptr
									)
{
		struct	sqlca	sqlca;
		char		h_typeofinstr[APL_INSTRU_TYPE_LEN] = APL_NULL_STRING;
		short		i_typeofinstr=0;
		char		chr_h_discountflag[APL_FLAG_LENGTH] = APL_NULL_STRING;
		short		i_discountflag=0;
		char		pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;		
		char		h_info_nbr[CA_INFO_SEQ_LEN] = APL_NULL_STRING;
		short		i_info_nbr=0;
		int		int_h_counter =0;
		short		i_counter=0;
		int		int_datediff = 0;
		int		int_holiday_flag=0;
		char		h_mature_dt[APL_DATE_LEN] = APL_NULL_STRING;
		short		i_mature_dt = 0;
		short		int_error_ind = APL_SUCCESS;
		short    int_cond_exists=0;
		char		chr_op_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
		int 		int_retval = 0; /*Smita- HDFCCA_027*/
		int		int_p_result = 0; /*Smita - HDFCCA_009*/ // AIX -Warnings Removal

	
		#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
		#endif

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Entered CA_CheckEvnt function",NULL,p_intlenv_data_struct_h);	
		}

	   if ( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER) )
		{
			strcpy(chr_op_ind,APL_YES_IND);
		}
		else
		{
			strcpy(chr_op_ind,APL_NO_IND);
		}
	
		if	(	CA_ChkInstr(	p_ca_caevent_struct_h->h_instr_code,
									p_ca_caevent_struct_h->h_res_instr_code,
									chr_op_ind,
							  		l_debug_info_ptr
								)	==		APL_FAILURE
			)
				APL_GOBACK_FAIL

			/*Smita - Changed Column Names - HDFCCA_027*/
			EXEC SQL SELECT 	INSTR_TYPE,
									DISCT_IND,
									MATURE_DT
		 	INTO 					:h_typeofinstr:i_typeofinstr,
									:chr_h_discountflag:i_discountflag,
									:h_mature_dt:i_mature_dt
			 FROM MT_INSTRUMENT
			WHERE instr_code=:p_ca_caevent_struct_h->h_instr_code;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_INSTR_NOTFND,p_ca_caevent_struct_h->h_instr_code,APL_NULL_STRING,APL_NULL_STRING)

			if (i_typeofinstr	==	-1)
			{
				CO_InsertErr(	l_debug_info_ptr,
									 	ERR_TIPOINSTRU_NOTFND,
									 	p_ca_caevent_struct_h->h_instr_code,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);
				APL_GOBACK_FAIL
			 }
	/***	
			if (	(	!strcmp(h_typeofinstr,APL_INSTRU_BOND) ||Commented by Chirag 
					  !strcmp(h_typeofinstr,APL_INSTRU_FMT )
					)
					&& i_discountflag	==	-1
				 )
			{
				CO_InsertErr(	l_debug_info_ptr,
									 	ERR_DISFLAG_NOTFND,
									 	p_ca_caevent_struct_h->h_instr_code,
										h_typeofinstr,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);
				APL_GOBACK_FAIL
			 } */
/** No need to check Discount flag for Bond--- Comment By Chirag
			if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND) &&
					chr_h_discountflag[0]	==	'Y'
				)
			{
						CO_InsertErr(	l_debug_info_ptr,
											 	ERR_NOINT_DISCOUNT_BOND,
											 	p_ca_caevent_struct_h->h_instr_code,
											 	p_ca_caevent_struct_h->h_evt_class,
												APL_NULL_STRING,
												__LINE__,
												__FILE__);
						APL_GOBACK_FAIL
			}**/	
		
			/*Smita - Changed Column Names - HDFCCA_027*/	
			EXEC SQL SELECT	CASECEVENT.*
			INTO p_ca_casecevent_struct_h:p_ca_casecevent_struct_i
			FROM	CASECEVENT
			WHERE	
			CASECEVENT.INSTR_TYPE=:h_typeofinstr 
				AND 
			CASECEVENT.CA_EVENT=:p_ca_caevent_struct_h->h_evt_class;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_INVALID_EVNTINSTR_COMB,p_ca_caevent_struct_h->h_evt_class,p_ca_caevent_struct_h->h_instr_code,h_typeofinstr)

		if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}

		EXEC SQL SELECT 
		TO_DATE(:pro_sys_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_decl_date)
		INTO :int_datediff
		FROM DUAL;
		IS_ANY_ORA_ERROR

		if	(	int_datediff	<	0	)
			{
				if ( CO_InsertErr(l_debug_info_ptr,
										  ERR_DECLDT_CANT_FUTURE,
										  APL_NULL_STRING,
										  APL_NULL_STRING,
									     APL_NULL_STRING,
									     __LINE__,
									     __FILE__) == APL_FAILURE
					 )	
				APL_GOBACK_FAIL
				else 
				int_error_ind = APL_FAILURE;
			}

		int_holiday_flag = 0;
		if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_decl_date,
										&int_holiday_flag,
										l_debug_info_ptr,APL_NULL_STRING)	
				==	APL_FAILURE
			)
				{
					APL_GOBACK_FAIL
				}
		if	(	int_holiday_flag	)
			{	
				CO_InsertWarning(l_debug_info_ptr,
									  ERR_DATE_IS_HOLIDAY,
									  "Decl Date ", 
									  APL_NULL_STRING,
									  APL_NULL_STRING,
									  __LINE__,
									  __FILE__);	
			}
                        /* VaibhavK Kotak ISKB: 720  28Feb2008 Start 
                           Holiday Checks and Date validations can also be considered for Preliminary Events.........*/
			/*if ( !strcmp(p_ca_caevent_struct_h->h_preliminary_flag,APL_YES_IND) )
			{
				APL_GOBACK_SUCCESS
			}*/ 
                        /* VaibhavK Kotak ISKB: 720  28Feb2008 End  */
			
			
			
			if ( ! ( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER)
						&&
						!strlen(p_ca_caevent_struct_h->h_res_instr_code)
					 )
				)
			{
					if(	!strcmp(p_ca_casecevent_struct_h->h_ratio_perc_ind,RATIO_IND)	)
						{
						
				   
						}
					else if(	!strcmp(p_ca_casecevent_struct_h->h_ratio_perc_ind,PERCEN_IND)	)
							{
							if (	p_ca_caevent_struct_h->h_new_safek_quantity_rt	==	0	)
								{
									APL_DATA_MISSING("Income Rate",APL_NULL_STRING,APL_NULL_STRING)		
									APL_GOBACK_FAIL					
								}
						}
			}
			if(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV))
			{
				if(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV))
				{
					printf("*******************Inside Other than CD*******************\n");
					if(	!strcmp(p_ca_casecevent_struct_h->h_amt_rt_ind, AMT_IND)	)
						{
							if (	p_ca_caevent_struct_h->h_earnings	==	0	)
									{	
										APL_DATA_MISSING("Dividend Amount",APL_NULL_STRING,APL_NULL_STRING)		
										APL_GOBACK_FAIL					
									}
						}
					else if(	!strcmp(p_ca_casecevent_struct_h->h_amt_rt_ind, RATE_IND)	)
						{
							if (	p_ca_caevent_struct_h->h_earnings_rt	==	0	)
								{
									APL_DATA_MISSING("Dividend  Rate",APL_NULL_STRING,APL_NULL_STRING)		
									APL_GOBACK_FAIL			
								}
						}
				}
			}
		
		
		if	(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP )	)
		{		
		/**	
			printf("Maturity Date in Bond Redemp is |%s|\n",h_mature_dt);
			if(strlen(h_mature_dt))To chk if maturity date for instrument is not set thn don't compare it with pay date
			{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_pymt_dt) - TO_DATE(:h_mature_dt)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
			 HDFCCA_035 - Biju
			  This Error Wont be Reported if the Event is created through Auto Event Generation 
				if(strcmp(p_ca_caevent_struct_h -> h_maker,APL_USER_SYSTEM))
				{
			
					if	(	int_datediff	<	0	)
					{
					 	CO_InsertErr(l_debug_info_ptr,
											ERR_PAYDT_CANT_BEFORE_MATUREDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);
						int_error_ind = APL_FAILURE;
					}
				}
			}**/		  
		}
		
		if ( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER) )
		{
			/* JC - ISKB 1043 - Added if condition to check the len of date */
			if((strlen(p_ca_caevent_struct_h->h_effect_date)) && (strlen(p_ca_caevent_struct_h->h_decl_date)))
			{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_effect_date) - TO_DATE(:p_ca_caevent_struct_h->h_decl_date)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
		
				if	(	int_datediff	<	0	)
				{
					if ( CO_InsertErr(l_debug_info_ptr,
										ERR_EFFDT_CANT_BEFORE_DECLDT,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__) == APL_FAILURE
						)
					APL_GOBACK_FAIL
					else 	
					int_error_ind = APL_FAILURE;
				}
			}
				
			/* JC - ISKB 1043 - Added if condition to check the len of effect date */
            if ( (strlen(p_ca_caevent_struct_h->h_rec_date)) && (strlen(p_ca_caevent_struct_h->h_effect_date)))
			{				
					int_datediff = 0;
					EXEC SQL SELECT
					TO_DATE(:p_ca_caevent_struct_h->h_effect_date) -  TO_DATE(:p_ca_caevent_struct_h->h_rec_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR

					if (	int_datediff <= 0	)
					{
						if ( CO_InsertErr(l_debug_info_ptr,
											ERR_EFFDT_CANT_BEFORE_RECDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__) == APL_FAILURE
							)
							APL_GOBACK_FAIL
							else 	
						int_error_ind = APL_FAILURE;
					}
				}
        
			/* JC - ISKB 1043 - Added if condition to check the len of effect date */
            if ( (strlen(p_ca_caevent_struct_h->h_ex_date)) && (strlen(p_ca_caevent_struct_h->h_effect_date)))
				{
					int_datediff = 0;
					EXEC SQL SELECT
					TO_DATE(:p_ca_caevent_struct_h->h_effect_date) -  TO_DATE(:p_ca_caevent_struct_h->h_ex_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR

					if (	int_datediff < 0	)
					{
						if ( CO_InsertErr(l_debug_info_ptr,
											ERR_PAYDT_CANT_LESS_EXDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__) == APL_FAILURE
							)
						APL_GOBACK_FAIL
						else 	
						int_error_ind = APL_FAILURE;
					}
				}
		}
		else if ( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OTH) )
		{
			/* JC - ISKB 1043 - Added if condition to check the len of date */
			if((strlen(p_ca_caevent_struct_h->h_effect_date)) && (strlen(p_ca_caevent_struct_h->h_decl_date)))
			{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_effect_date) - TO_DATE(:p_ca_caevent_struct_h->h_decl_date)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
			}
       }
		else 
		{
			if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)	)		
			{
				/* JC - ISKB 1043 - Added if condition to check the len of date */
				if((strlen(p_ca_caevent_struct_h->h_meet_date)) && (strlen(p_ca_caevent_struct_h->h_proxy_date)))
				{
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_meet_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_proxy_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
				
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_MEETDT_CANT_BEFORE_PROXYDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
				}
			/** MEETING DT COMMENTED NOT REQ - 100506 BY  ASP	
			int_holiday_flag = 0;
			if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_meet_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	
						==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
			if	(	int_holiday_flag	)
			{	
				CO_InsertWarning(l_debug_info_ptr,
									  ERR_DATE_IS_HOLIDAY,
									  "Meeting Date ", 
									  APL_NULL_STRING,
									  APL_NULL_STRING,
									  __LINE__,
									  __FILE__);	
			}
			**/
				int_holiday_flag	=	0;	

		/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
		if(strlen(p_ca_caevent_struct_h->h_proxy_date))
		{
			int_holiday_flag = 0;
			if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_proxy_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	
					==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
		
			if	(	int_holiday_flag	)
				{	
					CO_InsertErr(l_debug_info_ptr,
										ERR_DATE_IS_HOLIDAY,
										"Proxy Date ",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);	
					int_error_ind = APL_FAILURE;
				}
			
				int_holiday_flag	=	0;	
		}
			}
		else	if	( strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING) &&		
					  strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT)  && 
					  strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG)  &&
                      strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NS)	&&
 			          strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV))		
		{
			APL_IF_DEBUG
			{
				printf("Checking for Ex-Date > Record Date for Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			int_cond_exists=0;
			if(CO_Chk_CntryEnabled("EVENT_MNT",
										"REC_DT<=EX_DT",
										&int_cond_exists,
										l_debug_info_ptr)==APL_FAILURE)
				APL_GOBACK_FAIL
			else
			{
                           if(strlen(p_ca_caevent_struct_h->h_ex_date)!=0  && strlen(p_ca_caevent_struct_h->h_rec_date)!=0)
                              {
				if(int_cond_exists>0)
				{	
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_ex_date) - TO_DATE(:p_ca_caevent_struct_h->h_rec_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
			
					if		(int_datediff	<	0)  
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_RECDT_CANT_GRTR_EXDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
				}
				else
				{	
					/* JC - ISKB 1043 - Added if condition to check the len of date */
					if(strlen(p_ca_caevent_struct_h->h_ex_date)!=0  && strlen(p_ca_caevent_struct_h->h_rec_date)!=0)
					{
						EXEC SQL SELECT 
						TO_DATE(:p_ca_caevent_struct_h->h_rec_date) - TO_DATE(:p_ca_caevent_struct_h->h_ex_date)
						INTO :int_datediff
						FROM DUAL;

						IS_ANY_ORA_ERROR
				
						if	(	(int_datediff	<	0) && 
							(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP) && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS) && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK) && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV) && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED) && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_STOK_DIV) && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS))	)
					
						{
							CO_InsertErr(l_debug_info_ptr,
												ERR_RECDT_CANT_BEFORE_EXDT,
												APL_NULL_STRING,
												APL_NULL_STRING,
												APL_NULL_STRING,
												__LINE__,
												__FILE__);	
							int_error_ind = APL_FAILURE;
						}
					}
				}	
			}	
		}
	
			
			if (strlen(p_ca_caevent_struct_h->h_pymt_dt) !=0  && strlen(p_ca_caevent_struct_h->h_rec_date)!=0)	/*Smita - HDFCCA_009*/
			{
			EXEC SQL SELECT 
			TO_DATE(:p_ca_caevent_struct_h->h_pymt_dt) - TO_DATE(:p_ca_caevent_struct_h->h_rec_date)
			INTO :int_datediff
			FROM DUAL;

			IS_ANY_ORA_ERROR
			
			if	(	int_datediff	<	0	)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_PAYDT_CANT_BEFORE_RECDT,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);	
					int_error_ind = APL_FAILURE;
				}
			}
		}
	   else if ( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT) )	
		{	
		   /* JC - ISKB 1043 - Added if condition to check the len of date */
			if((strlen(p_ca_caevent_struct_h->h_pymt_dt)) && (strlen(p_ca_caevent_struct_h->h_rec_date)))
			{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_pymt_dt) - TO_DATE(:p_ca_caevent_struct_h->h_rec_date)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
				
				if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_PAYDT_CANT_BEFORE_RECDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}

				 
				 

				/*shailesh 24-04-2008 ISKB - Added if condition to check the len of date */
				if(strlen(p_ca_caevent_struct_h->h_ex_date))
				{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_ex_date) - TO_DATE(:p_ca_caevent_struct_h->h_pymt_dt)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
				
				if	(	int_datediff	>	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_PAYDT_CANT_BEFORE_EXDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
				}
			}
		}
	} 
	
		if ( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER) )
		{  
			if (strlen(p_ca_caevent_struct_h->h_rec_date))
			{
				int_holiday_flag = 0;
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_rec_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	
					==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
		
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr(l_debug_info_ptr,
										ERR_DATE_IS_HOLIDAY,
										"Record Date",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);	
					int_error_ind = APL_FAILURE;
				}
			}
		
		/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
		if(strlen(p_ca_caevent_struct_h->h_effect_date))
		{	
			int_holiday_flag = 0;
			if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_effect_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	
					==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
		
			if	(	int_holiday_flag	)
				{	
					

					CO_InsertErr( 	l_debug_info_ptr,
											ERR_DATE_IS_HOLIDAY,
										   "Effective Date",
										   APL_NULL_STRING,
										   APL_NULL_STRING,
										   __LINE__,
										   __FILE__);	
				}
		}
	
			
			
			if	(	strlen(p_ca_caevent_struct_h->h_ex_date) )
			{
				int_holiday_flag = 0;
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_ex_date,
												&int_holiday_flag,
												l_debug_info_ptr,APL_NULL_STRING)	
						==	APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
		
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr( l_debug_info_ptr,
											ERR_DATE_IS_HOLIDAY,
										   "Ex- Date",
										   APL_NULL_STRING,
										   APL_NULL_STRING,
										   __LINE__,
										   __FILE__);	
					int_error_ind = APL_FAILURE;
				}
			}

			if	(	strlen(p_ca_caevent_struct_h->h_start_date) )
			{
				int_holiday_flag = 0;
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_start_date,
												&int_holiday_flag,
												l_debug_info_ptr,APL_NULL_STRING)	
						==	APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
		
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr( l_debug_info_ptr,
											ERR_DATE_IS_HOLIDAY,
										   "Start of Period",
										   APL_NULL_STRING,
										   APL_NULL_STRING,
										   __LINE__,
										   __FILE__);	
					int_error_ind = APL_FAILURE;
				}
			}

			if	(	strlen(p_ca_caevent_struct_h->h_respons_date) )
			{
				int_holiday_flag = 0;
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_respons_date,
												&int_holiday_flag,
												l_debug_info_ptr,APL_NULL_STRING)	
						==	APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
		
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr( l_debug_info_ptr,
											ERR_DATE_IS_HOLIDAY,
										   "Response Deadline",
										   APL_NULL_STRING,
										   APL_NULL_STRING,
										   __LINE__,
										   __FILE__);	
					int_error_ind = APL_FAILURE;
				}
			}
			
			if	(	strlen(p_ca_caevent_struct_h->h_expire_date) )
			{
				int_holiday_flag = 0;
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_expire_date,
												&int_holiday_flag,
												l_debug_info_ptr,APL_NULL_STRING)	
						==	APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
		
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr ( l_debug_info_ptr,
											ERR_DATE_IS_HOLIDAY,
										   "Expiry Deadline",
										   APL_NULL_STRING,
										   APL_NULL_STRING,
										   __LINE__,
										   __FILE__);	
					int_error_ind = APL_FAILURE;
				}
			}

			if	(	strlen(p_ca_caevent_struct_h->h_pp_date) )
			{
				int_holiday_flag = 0;
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_pp_date,
												&int_holiday_flag,
												l_debug_info_ptr,APL_NULL_STRING)	
						==	APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
		
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr ( l_debug_info_ptr,
											ERR_DATE_IS_HOLIDAY,
										   "Parri Passu Date",
										   APL_NULL_STRING,
										   APL_NULL_STRING,
										   __LINE__,
										   __FILE__);	
					int_error_ind = APL_FAILURE;
				}
			}

		}
		else
		{
			if	( strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)  && 
              strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OTH)  && 
         	  strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG) &&
              strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NS)	&&
 			  strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV) && strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK)) /*Smita - HDFCCA_027 - Name Change Event*//*Buy Back Added by Chirag*/	
			{
		/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
		if(strlen(p_ca_caevent_struct_h->h_ex_date))
		{
			int_holiday_flag = 0;
			if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_ex_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	
					==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
	
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr(l_debug_info_ptr,
										ERR_DATE_IS_HOLIDAY,
										"Ex-Date",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);	
					int_error_ind = APL_FAILURE;
				}
		}
		/* Retro done for AIX migration -- added by ankit on 25 march 2011 for kotak issue ISKB_4730 -start */

      IF_COND_EXISTS("CA_EVENT","RECORD_DATE_VAL")
      {
      printf("Skipping holiday check for Record date because of country condition");
      }
      else
      {
		if(strlen(p_ca_caevent_struct_h->h_rec_date))
		{
				
			int_holiday_flag = 0;
			if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_rec_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	
					==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
		
			if	(	int_holiday_flag	)
				{	
					CO_InsertErr(l_debug_info_ptr,
										ERR_DATE_IS_HOLIDAY,
										"Record Date",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);	
					int_error_ind = APL_FAILURE;
				}
		}	
       }

       /* Retro done for AIX migration -- added by ankit on 25 march 2011 for kotak issue ISKB_4730 -end */	

			if ( strcmp(p_ca_caevent_struct_h->h_maker,APL_USER_SYSTEM) )	
			{
			
			int_holiday_flag = 0;
			

			if	((strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND)) &&
				 (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP)) &&
				 (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG))&&
    			 (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NS)) &&
			     (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV)))
			{
				if (strlen(p_ca_caevent_struct_h->h_pymt_dt) !=0)
				{
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_pymt_dt,
												&int_holiday_flag,
												l_debug_info_ptr,APL_NULL_STRING)	
						==	APL_FAILURE
					)
					{
						APL_GOBACK_FAIL
					}
		
				if	(	int_holiday_flag	)
					{	
						CO_InsertErr( 	l_debug_info_ptr,
												ERR_DATE_IS_HOLIDAY,
											   "Pay Date",
											   APL_NULL_STRING,
											   APL_NULL_STRING,
											   __LINE__,
										   	__FILE__);	
					}
				}
			}
			 }
			}
		}	
			if	(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)	)		
			{
				/* JC - ISKB 1043 - Added if condition to check the len of date */
				if((strlen(p_ca_caevent_struct_h->h_respons_date)) && (strlen(p_ca_caevent_struct_h->h_rec_date)))
				{
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_respons_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_rec_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
		
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_RESPDT_CANT_BEFORE_RECDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
				}

				/* JC - ISKB 1043 - Added if condition to check the len of date */
				if((strlen(p_ca_caevent_struct_h->h_respons_date)) && (strlen(p_ca_caevent_struct_h->h_pymt_dt)))
				{
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_respons_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_pymt_dt)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
		
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_PAYDT_CANT_BEFORE_RESPONSEDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
				}
		

	/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
	if(strlen(p_ca_caevent_struct_h->h_respons_date))
	{
		int_holiday_flag = 0;
		if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_respons_date,
										&int_holiday_flag,
										l_debug_info_ptr,APL_NULL_STRING)	
				==	APL_FAILURE
			)
				{
					APL_GOBACK_FAIL
				}

		if	(	int_holiday_flag	)
			{	
				CO_InsertErr(l_debug_info_ptr,
									ERR_DATE_IS_HOLIDAY,
									"Response Date",	
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__);	
				int_error_ind = APL_FAILURE;
			}
			
				int_holiday_flag	=	0;	
	}
				

			/* JC - ISKB 1043 - Added if condition to check the len of date */
			if((strlen(p_ca_caevent_struct_h->h_expire_date)) && (strlen(p_ca_caevent_struct_h->h_respons_date)))
			{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_expire_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_respons_date)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
				
				if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_EXPIRYDT_CANT_LESS_RESPONSEDT,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
			}
			
				
			

		/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
		if(strlen(p_ca_caevent_struct_h->h_expire_date))
		{
			int_holiday_flag = 0;
			if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_expire_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	
				==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
			if	(	int_holiday_flag	)
				{	
					CO_InsertErr(l_debug_info_ptr,
										ERR_DATE_IS_HOLIDAY,
										"Expiry Date ",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);	
					int_error_ind = APL_FAILURE;
				}
		}

			
				int_datediff = 0;
		if   (   (strlen(p_ca_caevent_struct_h->h_dealfrom_dt) != 0) && (strlen(p_ca_caevent_struct_h->h_dealto_dt) != 0))
				{

            	EXEC SQL SELECT
            	TO_DATE(:p_ca_caevent_struct_h->h_dealto_dt) -    TO_DATE(:p_ca_caevent_struct_h->h_dealfrom_dt)
            	INTO :int_datediff
            	FROM DUAL;

 	           IS_ANY_ORA_ERROR

               if (  int_datediff <  0  )
               {
                  CO_InsertErr(l_debug_info_ptr,
				 							ERR_DEAL_NVAL_VERWITH_HU_FREE,
                                 APL_NULL_STRING,
                                 APL_NULL_STRING,
                                 APL_NULL_STRING,
                                 __LINE__,
                                 __FILE__);
                  int_error_ind = APL_FAILURE;
               }
				}
			
			
			
			
		
         if(strlen(p_ca_caevent_struct_h->h_buyresp_date)!=0)
		   {
			
				/* JC - ISKB 1043 - Strlen check for date */
				if(strlen(p_ca_caevent_struct_h->h_rec_date) != 0)
			   {
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_buyresp_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_rec_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
		
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_RESPDT_CANT_BEFORE_RECDT,
											"BUY RESPONSE DATE",
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
			   }

			/* JC - ISKB 1043 - Strlen check for date */
			if(strlen(p_ca_caevent_struct_h->h_pymt_dt) != 0)
			{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_buyresp_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_pymt_dt)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
		
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_PAYDT_CANT_BEFORE_RESPONSEDT,
											"BUY RESPONSE DATE",
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
			}
		

		int_holiday_flag = 0;
		if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_buyresp_date,
										&int_holiday_flag,
										l_debug_info_ptr,APL_NULL_STRING)	
				==	APL_FAILURE
			)
				{
					APL_GOBACK_FAIL
				}

		if	(	int_holiday_flag	)
			{	
				CO_InsertErr(l_debug_info_ptr,
									ERR_DATE_IS_HOLIDAY,
									"BUY Response Date",	
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__);	
				int_error_ind = APL_FAILURE;
			}
			
				int_holiday_flag	=	0;	
				
			/* JC - ISKB 1043 - Strlen check for date */
			if(strlen(p_ca_caevent_struct_h->h_expire_date) != 0)
			{
				EXEC SQL SELECT 
				TO_DATE(:p_ca_caevent_struct_h->h_expire_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_buyresp_date)
				INTO :int_datediff
				FROM DUAL;

				IS_ANY_ORA_ERROR
				
				if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_EXPIRYDT_CANT_LESS_RESPONSEDT,
											"BUY RESPONSE DATE",
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
			}
			}	
			if( strlen(p_ca_caevent_struct_h->h_sellresp_date) != 0)
		   {
			   /* JC - ISKB 1043 - Strlen check for date */
				if(strlen(p_ca_caevent_struct_h->h_rec_date) != 0)
			   {
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_sellresp_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_rec_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
		
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_RESPDT_CANT_BEFORE_RECDT,
											"SELL RESPONSE DATE",
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
			   }

				/* JC - ISKB 1043 - Strlen check for date */
				if(strlen(p_ca_caevent_struct_h->h_pymt_dt) != 0)
			   {
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_sellresp_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_pymt_dt)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
		
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_PAYDT_CANT_BEFORE_RESPONSEDT,
											"SELL RESPONSE DATE",
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
			   }

	/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
	if(strlen(p_ca_caevent_struct_h->h_sellresp_date))
	{
		int_holiday_flag = 0;
		if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_sellresp_date,
										&int_holiday_flag,
										l_debug_info_ptr,APL_NULL_STRING)	
				==	APL_FAILURE
			)
				{
					APL_GOBACK_FAIL
				}

		if	(	int_holiday_flag	)
			{	
				CO_InsertErr(l_debug_info_ptr,
									ERR_DATE_IS_HOLIDAY,
									"SELL RESPONSE DATE",	
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__);	
				int_error_ind = APL_FAILURE;
			}
	}
				int_holiday_flag	=	0;	

				
				/* JC - ISKB 1043 - Strlen check for date */
				if(strlen(p_ca_caevent_struct_h->h_expire_date) != 0)
			   {
					EXEC SQL SELECT 
					TO_DATE(:p_ca_caevent_struct_h->h_expire_date) -	 TO_DATE(:p_ca_caevent_struct_h->h_sellresp_date)
					INTO :int_datediff
					FROM DUAL;

					IS_ANY_ORA_ERROR
				
					if	(	int_datediff	<	0	)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_EXPIRYDT_CANT_LESS_RESPONSEDT,
											"SELL RESPONSE DATE",
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);	
						int_error_ind = APL_FAILURE;
					}
			   }
			  }
			} 

			/*Smita - HDFCCA_027 - Check Details related to Name Change*/
			if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG) == 0)
			{
				APL_IF_DEBUG
				{
					printf("Checking Details Related to Name Change Event\n");
					printf("Effective Date = |%s|\n",p_ca_caevent_struct_h->h_effect_date);
				}

			/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
			if(strlen(p_ca_caevent_struct_h->h_effect_date))
			{
				int_holiday_flag = 0;
				if	(	CO_Chk_Holiday(p_ca_caevent_struct_h->h_effect_date,
											&int_holiday_flag,
											l_debug_info_ptr,APL_NULL_STRING)	==	APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
		
				if	(	int_holiday_flag	)
				{	
					CO_InsertErr( 	l_debug_info_ptr,
											ERR_DATE_IS_HOLIDAY,
										   "Effective Date",
										   APL_NULL_STRING,
										   APL_NULL_STRING,
										   __LINE__,
										   __FILE__);	
				}
			}

				int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_cmp_code,
  	 	 		   		       			p_intlenv_data_struct_h, 
						       				l_debug_info_ptr);
			   
				if (int_retval == APL_FAILURE)
					APL_GOBACK_FAIL

				int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_res_cmp_code,
  	 	 		   		       			p_intlenv_data_struct_h, 
						       				l_debug_info_ptr);
			   
				if (int_retval == APL_FAILURE)
					APL_GOBACK_FAIL
				
			}
			/*End of NAme Change Checks - Smita - HDFCCA_027 */
			/**Start of New Issue Vaibhav********/
               if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NS) == 0)
              {
                    APL_IF_DEBUG
                       {
						  printf("Checking Details Related to New Issue Event\n");
						  printf("Issue start Date = |%s|\n",p_ca_caevent_struct_h->h_bc_from_date);          
						  printf("Issue close Date = |%s|\n",p_ca_caevent_struct_h->h_bc_to_date);          
						}
            
		/* JC - ISKB 1043 - Added if condition to check the len of date before calling holiday check func */
		if(strlen(p_ca_caevent_struct_h->h_bc_from_date))
		{
                            int_holiday_flag = 0;
                        if      (       CO_Chk_Holiday(p_ca_caevent_struct_h->h_bc_from_date,
                                                                                        &int_holiday_flag,
                                                                                        l_debug_info_ptr,APL_NULL_STRING)==      APL_FAILURE
                                )
                                {
                                        APL_GOBACK_FAIL
                                }
                        if      (       int_holiday_flag        )
                                {
                                        CO_InsertErr(l_debug_info_ptr,
                                                                                ERR_DATE_IS_HOLIDAY,
                                                                                "Issue start Date ",
                                                                                APL_NULL_STRING,
                                                                                APL_NULL_STRING,
                                                                                __LINE__,
                                                                                __FILE__);
                                        int_error_ind = APL_FAILURE;
                                }          
		}
int_holiday_flag = 0;     

			/* JC - ISKB 1043 - Strlen check for date */
			if(strlen(p_ca_caevent_struct_h->h_bc_to_date) != 0 && strlen(p_ca_caevent_struct_h->h_bc_from_date) != 0)
			{
                EXEC SQL SELECT
                TO_DATE(:p_ca_caevent_struct_h->h_bc_to_date) - TO_DATE(:p_ca_caevent_struct_h->h_bc_from_date)
                INTO :int_datediff
                FROM DUAL;
                   IS_ANY_ORA_ERROR
 printf("DATE DIFF is %d\n",int_datediff);

               if (  int_datediff <  0  )
               {
                  CO_InsertErr(l_debug_info_ptr,
                               ERR_ISSUEFROM_DATE_GREATER,
                                 "Issue Start date greater than end date",
                                 APL_NULL_STRING,
                                 APL_NULL_STRING,
                                 __LINE__,
                                 __FILE__);
                  int_error_ind = APL_FAILURE;
					}
			}
	if(p_ca_caevent_struct_h->h_max_rtl_qty != 0)
	{		
   	if (p_ca_caevent_struct_h->h_max_rtl_qty < p_ca_caevent_struct_h->h_min_qty)
      {
                 CO_InsertErr(l_debug_info_ptr,
					     ERR_MAXQTY_LESS,
	  				    "Max Quantity is less",
	 				    APL_NULL_STRING,
					    APL_NULL_STRING,
					    __LINE__,
					    __FILE__);
	          APL_GOBACK_FAIL
      }
	}
      
   if (p_ca_caevent_struct_h->h_issue_size < p_ca_caevent_struct_h->h_min_qty)
             {
                 CO_InsertErr(l_debug_info_ptr,
					     ERR_ISSUESIZE_LESS,
	  				    "Issue Size is less",
	 				    APL_NULL_STRING,
					    APL_NULL_STRING,
					    __LINE__,
					    __FILE__);
	          APL_GOBACK_FAIL
               }

   if (p_ca_caevent_struct_h->h_issue_size < p_ca_caevent_struct_h->h_max_rtl_qty)
             {
                 CO_InsertErr(l_debug_info_ptr,
					     ERR_ISSUESIZE_LESS,
	  				    "Issue Size is less",
	 				    APL_NULL_STRING,
					    APL_NULL_STRING,
					    __LINE__,
					    __FILE__);
	          APL_GOBACK_FAIL
               }



			    if (  strcmp(p_ca_caevent_struct_h->h_bk_build_ind,"N") == 0)
      {
         if (p_ca_caevent_struct_h->h_earnings < p_ca_caevent_struct_h->h_face_value)
             {
                 CO_InsertErr(l_debug_info_ptr,
					     ERR_ISSUEPRICE_LESS,
	  				    "Issue price is less",
	 				    APL_NULL_STRING,
					    APL_NULL_STRING,
					    __LINE__,
					    __FILE__);
	          APL_GOBACK_FAIL
               }
        }

   if (  strcmp(p_ca_caevent_struct_h->h_bk_build_ind,"Y") == 0)
      {
         if (p_ca_caevent_struct_h->h_lwr_limit < p_ca_caevent_struct_h->h_face_value)
             {
                 CO_InsertErr(l_debug_info_ptr,
					     ERR_LOWERLIMIT_LESS,
	  				    "Lower Limit is less",
	 				    APL_NULL_STRING,
					    APL_NULL_STRING,
					    __LINE__,
					    __FILE__);
	          APL_GOBACK_FAIL
               }
        }
         } /*End of main if*/

		/*	*End of New Issue*************/



			/*Smita - HDFCCA_009 - Buy Back Event Checks*/
			if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK) == 0)
			{
				APL_IF_DEBUG
				{
					printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
				}
				/* Check whether Ex-Date/Ex-Date(BSE) is a Holiday*/
				/*If Condition Added by Chirag*/
                       /* If Condition Commented by VaibhavK Kotak ISKB: 720 28Feb2008 Start....*/ 
		      /*  if(strlen(p_ca_caevent_struct_h->h_ex_date)!=0 || strlen(p_ca_caevent_struct_h->h_ex_dt_bse)!=0)
			  {		*/
				int_retval = CA_ChkHoliday	(p_ca_caevent_struct_h,
													 p_intlenv_data_struct_h,
													 l_debug_info_ptr);
				if (int_retval == APL_FAILURE)
					APL_GOBACK_FAIL
		/*	  } */
                       /* If Condition Commented by VaibhavK Kotak ISKB: 720 28Feb2008 End....*/
				/*If Condition Added by Chirag*/
				int_retval = CA_ChkEventDetails (	p_ca_caevent_struct_h,
																&int_p_result,
							  									p_intlenv_data_struct_h,
																l_debug_info_ptr);
				if (	(int_p_result == ERR_DEPO_PART_NOTFND) || 
						(int_p_result == ERR_DEPO_PART_UNAUTH) || 
						(int_p_result == ERR_INVALID_CODE))
					APL_GOBACK_FAIL
				else
					APL_IF_DEBUG
					{
						printf("Successfully Checked Event Details\n");
					}
			}
			/*Smita - HDFCCA_009 - Buy Back Event Checks*/

			/*Smita - HDFCCA_004 - Capital Reduction Event*/
			if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED) == 0)
			{
				APL_IF_DEBUG
				{
					printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
				}
				if (	(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_UNITS) != 0) &&
						(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_FACEVAL) != 0) &&
						(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_BOTH) != 0)	)
				{
						APL_IF_DEBUG
						{
							printf("Reduction type Not Valid\n");
						}

						CO_InsertErr(	l_debug_info_ptr,
											ERR_INVALID_CODE,
											"Reduction Type",
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__);
						APL_GOBACK_FAIL
				}
				
				int_retval = CA_ChkEventDetails (   p_ca_caevent_struct_h,
																&int_p_result,
																p_intlenv_data_struct_h,
																l_debug_info_ptr);
				if (int_p_result == ERR_INVALID_CODE)
					APL_GOBACK_FAIL
				else
					APL_IF_DEBUG
					{
						printf("Successfully Checked Event Details\n");
					}
			}
			/*Smita - HDFCCA_004 - Capital Reduction Event*/

	printf("(%s)",p_ca_caevent_struct_h->h_info_nbr);
	printf("(%s)",p_ca_caevent_struct_h->h_entinfo_no);

	EXEC SQL VAR h_info_nbr is string;
	
	if (	strlen(p_ca_caevent_struct_h->h_info_nbr) )
		{ 
			EXEC SQL SELECT INFO_SEQ INTO :h_info_nbr:i_info_nbr
			 FROM CANOTE
			WHERE  INFO_SEQ=:p_ca_caevent_struct_h->h_info_nbr;
		
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_FOOTNOTE_NOTFND, 
			p_ca_caevent_struct_h->h_info_nbr,APL_NULL_STRING,APL_NULL_STRING);
		}


		strcpy(h_info_nbr,APL_NULL_STRING);
		i_info_nbr = 0;

	if ((	strlen(p_ca_caevent_struct_h->h_entinfo_no)	) && (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING) != 0))
		{ 
			EXEC SQL SELECT INFO_SEQ INTO :h_info_nbr:i_info_nbr
			 FROM CANOTE
			WHERE  INFO_SEQ=:p_ca_caevent_struct_h->h_entinfo_no;
		
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_FOOTNOTE_NOTFND, 
			p_ca_caevent_struct_h->h_entinfo_no,APL_NULL_STRING,APL_NULL_STRING);
		}

      strcpy(h_info_nbr,APL_NULL_STRING);
      i_info_nbr = 0;

   if (  strlen(p_ca_caevent_struct_h->h_nser_info) )
      {
         EXEC SQL SELECT INFO_SEQ INTO :h_info_nbr:i_info_nbr
          FROM CANOTE
         WHERE  INFO_SEQ=:p_ca_caevent_struct_h->h_nser_info;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_FOOTNOTE_NOTFND,
         p_ca_caevent_struct_h->h_nser_info,APL_NULL_STRING,APL_NULL_STRING);
      }


      strcpy(h_info_nbr,APL_NULL_STRING);
      i_info_nbr = 0;

   if (  strlen(p_ca_caevent_struct_h->h_nrep_date_a) )
      {
         EXEC SQL SELECT INFO_SEQ INTO :h_info_nbr:i_info_nbr
          FROM CANOTE
         WHERE  INFO_SEQ=:p_ca_caevent_struct_h->h_nrep_date_a;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_FOOTNOTE_NOTFND,
         p_ca_caevent_struct_h->h_nrep_date_a,APL_NULL_STRING,APL_NULL_STRING);
      }


      strcpy(h_info_nbr,APL_NULL_STRING);
      i_info_nbr = 0;

   if (  strlen(p_ca_caevent_struct_h->h_comp_info1) )
      {
         EXEC SQL SELECT INFO_SEQ INTO :h_info_nbr:i_info_nbr
          FROM CANOTE
         WHERE  INFO_SEQ=:p_ca_caevent_struct_h->h_comp_info1;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_FOOTNOTE_NOTFND,
         p_ca_caevent_struct_h->h_comp_info1,APL_NULL_STRING,APL_NULL_STRING);
      }


      strcpy(h_info_nbr,APL_NULL_STRING);
      i_info_nbr = 0;

   if (  strlen(p_ca_caevent_struct_h->h_inco_info1) )
      {
         EXEC SQL SELECT INFO_SEQ INTO :h_info_nbr:i_info_nbr
          FROM CANOTE
         WHERE  INFO_SEQ=:p_ca_caevent_struct_h->h_inco_info1;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_FOOTNOTE_NOTFND,
         p_ca_caevent_struct_h->h_inco_info1,APL_NULL_STRING,APL_NULL_STRING);
      }


      strcpy(h_info_nbr,APL_NULL_STRING);
      i_info_nbr = 0;

	
	 if (  strlen(p_ca_caevent_struct_h->h_txnr_info1) )
      {
         EXEC SQL SELECT INFO_SEQ INTO :h_info_nbr:i_info_nbr
          FROM CANOTE
         WHERE  INFO_SEQ=:p_ca_caevent_struct_h->h_txnr_info1;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_FOOTNOTE_NOTFND,
         p_ca_caevent_struct_h->h_txnr_info1,APL_NULL_STRING,APL_NULL_STRING);
      }

	
      strcpy(h_info_nbr,APL_NULL_STRING);
      i_info_nbr = 0;

	
	

	if (  (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS) )
	{
		APL_GOBACK_FAIL
	}
	
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_CheckEvnt  successfully",NULL,p_intlenv_data_struct_h);
			}	
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_CheckEvnt unsuccessfully",NULL,p_intlenv_data_struct_h);
			}	
			return (APL_FAILURE);
		}
}

static	int	CA_MandDataChk (  CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
 				                    INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
            				        DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				)
{
	struct sqlca sqlca;
	short	 int_cond_exists = 0;
	short	 l_cond_ru   = 0;  
	
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

		if (	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)	)

		{	
			if(	!strlen(p_ca_caevent_struct_h->h_access_stamp)	)
					APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
		
		if (strcmp(p_intlenv_data_struct_h->h_process,"U"))
		{
			if(	!strlen(p_ca_caevent_struct_h->h_corp_id)	)
					APL_DATA_MISSING("Corporate Action ID",APL_NULL_STRING,APL_NULL_STRING)	
		}
	
			if(	!strlen(p_ca_caevent_struct_h->h_evt_stat)	)
					APL_DATA_MISSING("Event Status",APL_NULL_STRING,APL_NULL_STRING)	

		if (strcmp(p_intlenv_data_struct_h->h_process,"U"))
		{
			if(	!strlen(p_ca_caevent_struct_h->h_stat_date)	)
					APL_DATA_MISSING("Status Date",APL_NULL_STRING,APL_NULL_STRING)	
		}

		}
	
	if(	!strlen(p_ca_caevent_struct_h->h_instr_code)	)
			APL_DATA_MISSING("Instrument ",APL_NULL_STRING,APL_NULL_STRING)
	
	if(	!strlen(p_ca_caevent_struct_h->h_evt_class)	)
			APL_DATA_MISSING("Event Type",APL_NULL_STRING,APL_NULL_STRING)
	
	if(	!strlen(p_ca_caevent_struct_h->h_decl_date)	)
			APL_DATA_MISSING("Declaration Date ",APL_NULL_STRING,APL_NULL_STRING)	

	if(	p_ca_caevent_struct_h->h_evt_nbr	==	0	)
			APL_DATA_MISSING("Serial number",APL_NULL_STRING,APL_NULL_STRING)	

	if(	!strlen(p_ca_caevent_struct_h->h_preliminary_flag)	)
			APL_DATA_MISSING("Prelim Ind.",APL_NULL_STRING,APL_NULL_STRING)

	if ( !strcmp(p_ca_caevent_struct_h->h_preliminary_flag,APL_YES_IND) )
	{
		if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OTH)	)
		{	
			if (	!strlen(p_ca_caevent_struct_h->h_op_evt_class) )
			{
				APL_DATA_MISSING("OTHERS Event Type",APL_NULL_STRING,APL_NULL_STRING)	
			}

      }
		else if (	strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)	)
		{	
			if(	!strlen(p_ca_caevent_struct_h->h_evt_send_msg_ind)	)
				{	
					APL_DATA_MISSING("Event Int msg flg",APL_NULL_STRING,APL_NULL_STRING)
				}
		
			if(	!strlen(p_ca_caevent_struct_h->h_entl_send_msg_ind)	)
				{	
					APL_DATA_MISSING("Entl msg flg ",APL_NULL_STRING,APL_NULL_STRING)	
				}

			if(	!strlen(p_ca_caevent_struct_h->h_pymt_send_msg_ind)	)
				{		
					APL_DATA_MISSING("Pymt msg flg",APL_NULL_STRING,APL_NULL_STRING)	
				}		
		}
		else 
		{
			if(	!strlen(p_ca_caevent_struct_h->h_proxy_date)	)
				{
					APL_DATA_MISSING("Proxy Date",APL_NULL_STRING,APL_NULL_STRING)
				}		
		
			if(	!strlen(p_ca_caevent_struct_h->h_meet_date)	)
				{	
					APL_DATA_MISSING("Venue and time",APL_NULL_STRING,APL_NULL_STRING)
				}		
		} 

		if	(	 CO_ChkErr(*l_debug_info_ptr)	== APL_SUCCESS	)
				APL_GOBACK_FAIL
		else
				APL_GOBACK_SUCCESS
	}
	
	
			if (!strcmp(p_intlenv_data_struct_h->h_process,"U"))
			{
				if ((!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND))	|| (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV)) || (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED)) || (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV))	|| (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_STOK_DIV)) || (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT)) || (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)))
						{	
						   if(	!strlen(p_ca_caevent_struct_h->h_ex_date)	)
							{   
								APL_DATA_MISSING("Ex-Date",APL_NULL_STRING,APL_NULL_STRING)	
							} 	 
						}
			}   //Added by Arunachalam for CS0074500 - New Bilav File upload changes
	
	
	

	if ( !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER) )
	{
			if(	!strlen(p_ca_caevent_struct_h->h_effect_date)	)
			{
				APL_DATA_MISSING("Effective Date",APL_NULL_STRING,APL_NULL_STRING)	
			}		
			if(	(!strlen(p_ca_caevent_struct_h->h_rec_date)) &&
					(strcmp(p_ca_caevent_struct_h->h_op_evt_class,"TO") != 0)  ) 
			{
				APL_DATA_MISSING("Record Date",APL_NULL_STRING,APL_NULL_STRING)
			}		
			if(	!strlen(p_ca_caevent_struct_h->h_evt_send_msg_ind)	)
			{	
				APL_DATA_MISSING("Event Int msg flg",APL_NULL_STRING,APL_NULL_STRING)
			}		
			if(	!strlen(p_ca_caevent_struct_h->h_entl_send_msg_ind)	)
			{	
				APL_DATA_MISSING("Entl msg flg ",APL_NULL_STRING,APL_NULL_STRING)	
			}

			if(	!strlen(p_ca_caevent_struct_h->h_pymt_send_msg_ind)	)
			{		
				APL_DATA_MISSING("Pymt msg flg",APL_NULL_STRING,APL_NULL_STRING)	
			}		
	
			if(	!strlen(p_ca_caevent_struct_h->h_ca_currency)	)
			{
				APL_DATA_MISSING("Currency",APL_NULL_STRING,APL_NULL_STRING)	
			}		
		
			if (	!strlen(p_ca_caevent_struct_h->h_op_evt_class) )
			{
				APL_DATA_MISSING("OP Event Type",APL_NULL_STRING,APL_NULL_STRING)	
			}

			if (	!strlen(p_ca_caevent_struct_h->h_proc_oth) && !strlen(p_ca_caevent_struct_h->h_res_instr_code) &&
					(strcmp(p_ca_caevent_struct_h->h_op_evt_class,"TO") != 0)  ) 
			{
				APL_DATA_MISSING("Proceeds/Res Instr",APL_NULL_STRING,APL_NULL_STRING)	
			}

			if (   (strcmp(p_ca_caevent_struct_h->h_op_evt_class,"TO") == 0) && 
					(!strlen(p_ca_caevent_struct_h->h_start_date))  ) 
			{
				APL_DATA_MISSING("Start Date",APL_NULL_STRING,APL_NULL_STRING)
			}

			if((   strlen(p_ca_caevent_struct_h->h_div_class) == 0 )
						&& ((strcmp(p_ca_caevent_struct_h->h_op_evt_class,"TO") == 0) 
							 ||(strcmp(p_ca_caevent_struct_h->h_op_evt_class,"CV") == 0) 
                      ||(strcmp(p_ca_caevent_struct_h->h_op_evt_class,"MG") == 0))) 
         {
            APL_DATA_MISSING("Default Flag",APL_NULL_STRING,APL_NULL_STRING)
         }

			if ( strlen(p_ca_caevent_struct_h->h_res_instr_code ) )
			{
				if(	!strlen(p_ca_caevent_struct_h->h_disp_of_fract)	)
				{
						APL_DATA_MISSING("fract disp type",APL_NULL_STRING,APL_NULL_STRING)
				}		

				if(	!strcmp(p_ca_caevent_struct_h->h_disp_of_fract,CASH_IND) &&
			      p_ca_caevent_struct_h->h_f_pr	<	0				
					)											
				{
					APL_DATA_MISSING("fract selloff price",APL_NULL_STRING,APL_NULL_STRING)
				}		
				
				int_cond_exists=0;
				if(CO_Chk_CntryEnabled("EVENT_MNT",
											"SUB_PRICE_NOT_REQD",
											&int_cond_exists,
											l_debug_info_ptr)==APL_FAILURE)
					APL_GOBACK_FAIL
				else
				{
					

					int_cond_exists = 1;
						
					if(int_cond_exists == 0 &&	(p_ca_caevent_struct_h->h_sub_pr == 0)	)
					{
						APL_DATA_MISSING("sub. price",APL_NULL_STRING,APL_NULL_STRING)
					}		
					else if(int_cond_exists > 0 &&	strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER) 
						&& (p_ca_caevent_struct_h->h_sub_pr == 0)	)
					{	
						 APL_DATA_MISSING("sub. price",APL_NULL_STRING,APL_NULL_STRING)	
					
					}
				
				}	

			}

			
			if ( !strcmp(p_ca_caevent_struct_h->h_respons_date_openend,APL_NO_IND) )
			{
	         if(   !strlen(p_ca_caevent_struct_h->h_respons_date)  )
            {
               APL_DATA_MISSING("Response date",APL_NULL_STRING,APL_NULL_STRING)
            }
			}
			else if ( !strcmp(p_ca_caevent_struct_h->h_respons_date_openend,APL_YES_IND) )
			{
	         if(   strlen(p_ca_caevent_struct_h->h_respons_date)  )
            {
					CO_InsertErr(l_debug_info_ptr,
										ERR_RES_OPENEND,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
				}
			}
			else
			{
				 APL_INSERT_ERROR_DATA_INTG("Resp Deadline","Openend ind",APL_NULL_STRING)
			}
	
			if ( !strcmp(p_ca_caevent_struct_h->h_expire_date_openend,APL_NO_IND) )
  	      {
				 if(   !strlen(p_ca_caevent_struct_h->h_expire_date)   )
             {
               APL_DATA_MISSING("Expiry date",APL_NULL_STRING,APL_NULL_STRING)
             }
			 }
			else if ( !strcmp(p_ca_caevent_struct_h->h_expire_date_openend,APL_YES_IND
) )
			{
	         if(   strlen(p_ca_caevent_struct_h->h_expire_date)  )
            {
					CO_InsertErr(l_debug_info_ptr,
										ERR_EXP_OPENEND,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
				}
			}
			else
			{
				 APL_INSERT_ERROR_DATA_INTG("Exp Dt","Openend ind",APL_NULL_STRING)
			}

	} /*end of if*/

	
	

	else if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OTH)	)
	{	
		if (	!strlen(p_ca_caevent_struct_h->h_op_evt_class) )
		{
			APL_DATA_MISSING("OTHERS Event Type",APL_NULL_STRING,APL_NULL_STRING)	
		}
		if(	!strlen(p_ca_caevent_struct_h->h_effect_date)	)
		{
			APL_DATA_MISSING("Effective Date",APL_NULL_STRING,APL_NULL_STRING)	
		}		
   }
    /* Checks for Mandatory Data EVT_NS  Added by vaibhav*/
    else if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NS))
    {
        
  APL_IF_DEBUG
    {
       printf("Entered Mandatory Data Checks For New issue Event\n"); 
    }

if(  strcmp(p_ca_caevent_struct_h->h_bk_build_ind,"Y") == 0)
   {
 if (p_ca_caevent_struct_h->h_lwr_limit==0)
  {
  APL_DATA_MISSING("LOWER LIMIT",APL_NULL_STRING,APL_NULL_STRING)
  }
 if (p_ca_caevent_struct_h->h_upr_limit ==0)
  {
   APL_DATA_MISSING("UPPER LIMIT",APL_NULL_STRING,APL_NULL_STRING)
  }
  if (p_ca_caevent_struct_h->h_tick_size ==0)
  {
   APL_DATA_MISSING("TICK SIZE",APL_NULL_STRING,APL_NULL_STRING)
  }
 } /*end if  */

if (  strcmp(p_ca_caevent_struct_h->h_bk_build_ind,"N") == 0)
  {
 if (p_ca_caevent_struct_h->h_earnings ==0)
  {
  APL_DATA_MISSING("ISSUE PRICE",APL_NULL_STRING,APL_NULL_STRING)
  }
}



  if (strlen(p_ca_caevent_struct_h->h_bc_from_date)==0)
        {
	       APL_DATA_MISSING("Issue Start date",APL_NULL_STRING,APL_NULL_STRING)
	}

  if (strlen(p_ca_caevent_struct_h->h_bc_to_date)==0)
        {
		APL_DATA_MISSING("Issue close date",APL_NULL_STRING,APL_NULL_STRING)
        }

  if(p_ca_caevent_struct_h->h_face_value == 0)
	{
		APL_DATA_MISSING("FACE VALUE",APL_NULL_STRING,APL_NULL_STRING)
	}

if (p_ca_caevent_struct_h->h_qib_margin==0)
        {
		APL_DATA_MISSING("QIB Margin",APL_NULL_STRING,APL_NULL_STRING)
        }

  if(p_ca_caevent_struct_h->h_market_lot == 0)
	{
		APL_DATA_MISSING("MARKET LOT",APL_NULL_STRING,APL_NULL_STRING)
	}
/**
if (p_ca_caevent_struct_h->h_max_rtl_qty==0)
        {
		APL_DATA_MISSING("MAX Retail QTY",APL_NULL_STRING,APL_NULL_STRING)
        }

**/
  if(p_ca_caevent_struct_h->h_min_qty == 0)
	{
		APL_DATA_MISSING("MIN QTY",APL_NULL_STRING,APL_NULL_STRING)
	}

    } 
	/*Mandatory Data for EVT_NS is end */
	   /* Checks for Mandatory Data EVT_CV  Added by vaibhav*/
    else if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV))
    {
        
	APL_IF_DEBUG
    {
       printf("Entered Mandatory Data Checks For New issue Event\n"); 
    }



  if (strlen(p_ca_caevent_struct_h->h_ex_date)==0)
    {
       APL_DATA_MISSING("Ex-date",APL_NULL_STRING,APL_NULL_STRING)
	}

  if (strlen(p_ca_caevent_struct_h->h_effect_date)==0)
        {
		APL_DATA_MISSING("Conversion date",APL_NULL_STRING,APL_NULL_STRING)
        } 

  if(p_ca_caevent_struct_h->h_res_instr_code == 0)
	{
		APL_DATA_MISSING("Resultant Security",APL_NULL_STRING,APL_NULL_STRING)
	}
if (p_ca_caevent_struct_h->h_disp_of_fract==0)
        {
		APL_DATA_MISSING("Fraction Policy",APL_NULL_STRING,APL_NULL_STRING)
        }
    } 
	/*Mandatory Data for EVT_CV is end */

	/*Smita - HDFCCA_009 - Buy Back Event*/
	else if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK) )
	{
		APL_IF_DEBUG
		{
			printf("Entered Mandatory Data Checks For Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
		}
		/**Commented By Chirag**/
		/**if (	(strlen(p_ca_caevent_struct_h->h_ex_date) == 0) &&
				(strlen(p_ca_caevent_struct_h->h_ex_dt_bse) == 0) )
		{
			APL_DATA_MISSING("Ex-Date/Ex-Date BSE",APL_NULL_STRING,APL_NULL_STRING)
		}*/
		/**
		if (strlen(p_ca_caevent_struct_h->h_rec_date) == 0)
		{
			APL_DATA_MISSING("Record Date",APL_NULL_STRING,APL_NULL_STRING)
		}
		**/
		if (strlen(p_ca_caevent_struct_h->h_dealfrom_dt) == 0)
		{
			APL_DATA_MISSING("Issue Open Date",APL_NULL_STRING,APL_NULL_STRING)
		}

		if (strlen(p_ca_caevent_struct_h->h_dealto_dt) == 0)
		{
			APL_DATA_MISSING("Issue Close Date",APL_NULL_STRING,APL_NULL_STRING)
		}
		/**Commented By Chirag**/
		/**
		if (strlen(p_ca_caevent_struct_h->h_depo_code) == 0)
		{
			APL_DATA_MISSING("Depository Code",APL_NULL_STRING,APL_NULL_STRING)
		}
		if (strlen(p_ca_caevent_struct_h->h_depo_part_code) == 0)
		{
			APL_DATA_MISSING("Depository Participant Code",APL_NULL_STRING,APL_NULL_STRING)
		}**/
		/*
		if (p_ca_caevent_struct_h->h_new_safek_quantity_rt == 0)
		{
			APL_DATA_MISSING("Buy Back Rate",APL_NULL_STRING,APL_NULL_STRING)
		}*/    /* Vaibhav 14/04/2006 */
		if ((p_ca_caevent_struct_h->h_earnings == 0) && (p_ca_caevent_struct_h->h_earnings_rt == 0) && (p_ca_caevent_struct_h->h_lwr_limit == 0) && (p_ca_caevent_struct_h->h_upr_limit == 0))
		{
			APL_DATA_MISSING("Buy Back Price/Buy Back Upper or Lower Limit",APL_NULL_STRING,APL_NULL_STRING)
		}
	/*Smita - HDFCCA_009 - Buy Back Event*/
	}
	/*Smita - Added Mandatory Data Checks - HDFCCA_004 - Capital Reduction*/
	else if(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED) == 0)
	{
		APL_IF_DEBUG
		{
			printf("Entered Mandatory Data Checks for Capital Reduction Event\n");
		}
		if (	(strlen(p_ca_caevent_struct_h->h_ex_date) == 0)	&&
				(strlen(p_ca_caevent_struct_h->h_ex_dt_bse) == 0)	)
		{
			APL_DATA_MISSING("Ex-Date",APL_NULL_STRING,APL_NULL_STRING)
		}
		if (strlen(p_ca_caevent_struct_h->h_rec_date) == 0)
		{
			APL_DATA_MISSING("Record Date",APL_NULL_STRING,APL_NULL_STRING)
		}
		if (strlen(p_ca_caevent_struct_h->h_pymt_dt) == 0)
		{
			APL_DATA_MISSING("Pay Date",APL_NULL_STRING,APL_NULL_STRING)
		}
		if (strlen(p_ca_caevent_struct_h->h_div_class) == 0)
		{
			APL_DATA_MISSING("Reduction Type",APL_NULL_STRING,APL_NULL_STRING)
		}
		if (strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_UNITS) == 0)
		{
			if (	(p_ca_caevent_struct_h->h_new_safek_quantity == 0)  && 
					(p_ca_caevent_struct_h->h_old_safek_quantity == 0) 	)
			{
				if (p_ca_caevent_struct_h->h_earnings_rt == 0)
				{
					APL_DATA_MISSING("Reduction Ratio/Rate",APL_NULL_STRING,APL_NULL_STRING)
				}
			}
			if (strlen(p_ca_caevent_struct_h->h_disp_of_fract) == 0)
			{
				APL_DATA_MISSING("Disposition Of Fraction",APL_NULL_STRING,APL_NULL_STRING)
			}
			/*if (p_ca_caevent_struct_h->h_f_pr < 0)
			{
				APL_DATA_MISSING("Fractional Sell Price",APL_NULL_STRING,APL_NULL_STRING)
			}*/
		}
		else if (strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_FACEVAL) == 0)
		{
			if (p_ca_caevent_struct_h->h_earnings == 0)
			{
				APL_DATA_MISSING("Face Value of Reduction",APL_NULL_STRING,APL_NULL_STRING)
			}
		}
		/*else if (strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_BOTH) == 0)
		{
			if (p_ca_caevent_struct_h->h_new_safek_quantity_rt == 0)
			{
				APL_DATA_MISSING("Reduction Capital Value",APL_NULL_STRING,APL_NULL_STRING)
			}
		}**/
	}
	else if(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT) == 0) /**** RVSL  HDFCCA_035**/
	{
		APL_IF_DEBUG
		{
			printf("Entered Mandatory Data Checks for Splits Event \n");
		}
		if ( strlen(p_ca_caevent_struct_h->h_op_evt_class) == 0)
		{
			APL_DATA_MISSING("Split Event Type",APL_NULL_STRING,APL_NULL_STRING)
		}
	}
	else
	{/*iSmita - HDFCCA_027 - Added Name Change Event in If Clause*/
		if (	(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)	) &&
				(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG)	) &&
    		    (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NS)) &&
			    (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV)))
		{	   
		  	/*Smita - HDFCCA_004 - Capital Reduction Event*/	
			APL_IF_DEBUG
			{
				printf("Checking Dates in Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			if(	!strlen(p_ca_caevent_struct_h->h_ex_date)	)
			{
					APL_DATA_MISSING("Ex-Date",APL_NULL_STRING,APL_NULL_STRING)	
			}		
			if(	!strlen(p_ca_caevent_struct_h->h_pymt_dt)	)
			{
				APL_DATA_MISSING("Pay Date",APL_NULL_STRING,APL_NULL_STRING)	
			}
			if(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV))
			{		
				if(	!strlen(p_ca_caevent_struct_h->h_rec_date)	)
				{
					APL_DATA_MISSING("Record Date",APL_NULL_STRING,APL_NULL_STRING)
				}
			}		
			if(	!strlen(p_ca_caevent_struct_h->h_evt_send_msg_ind)	)
			{	
				APL_DATA_MISSING("Event Int msg flg",APL_NULL_STRING,APL_NULL_STRING)
			}		
			if(	!strlen(p_ca_caevent_struct_h->h_entl_send_msg_ind)	)
			{	
				APL_DATA_MISSING("Entl msg flg ",APL_NULL_STRING,APL_NULL_STRING)	
			}

			if(	!strlen(p_ca_caevent_struct_h->h_pymt_send_msg_ind)	)
			{		
				APL_DATA_MISSING("Pymt msg flg",APL_NULL_STRING,APL_NULL_STRING)	
			}		
	
			if(	!strlen(p_ca_caevent_struct_h->h_ca_currency)	)
			{
				APL_DATA_MISSING("Currency",APL_NULL_STRING,APL_NULL_STRING)	
			}		
				
		}

		if(!(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP)  )  )	
		{	
			if((	p_ca_caevent_struct_h->h_earnings == 0	) && (p_ca_caevent_struct_h->h_earnings_rt == 0 ))
			{
				APL_DATA_MISSING("Redemption Price ",APL_NULL_STRING,APL_NULL_STRING)
			}		
		}
		
		if(	!(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV)	) ||
			   !(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_DECR_VAL)) )    	
		{	
	       //COMMENTED BY ASP - 12JUN06
			if(	!(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV) ) && (	p_ca_caevent_struct_h->h_earnings	== 0)	&&	(p_ca_caevent_struct_h->h_earnings_rt	==	0)	)
			{
				APL_DATA_MISSING("Cash Dividend",APL_NULL_STRING,APL_NULL_STRING)
			}		
			
			
			if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_DECR_VAL) != 0)   
			{
				if(   strlen(p_ca_caevent_struct_h->h_div_class) == 0 )
				{
					APL_DATA_MISSING("Dividend Type",APL_NULL_STRING,APL_NULL_STRING)
         	}
			}
		}
		
		if(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_STOK_DIV) ||
				!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS)		||	
				!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT)		||	
				!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)				
			)
		{
			if(	!strlen(p_ca_caevent_struct_h->h_res_instr_code)		)
				{	
					APL_DATA_MISSING("Res instr_code",APL_NULL_STRING,APL_NULL_STRING)
				}		

			if(	(p_ca_caevent_struct_h->h_new_safek_quantity	== 0 ||
					p_ca_caevent_struct_h->h_old_safek_quantity	==0)	
					&& 
					(p_ca_caevent_struct_h->h_new_safek_quantity_rt	== 0) 
				)
				{
					APL_DATA_MISSING("Rate/ratio",APL_NULL_STRING,APL_NULL_STRING)
				}		
				/** RVSL  HDFCCA_035***/
			if( strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT)== 0 || strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS)== 0)
			{
				if (strlen(p_ca_caevent_struct_h->h_op_evt_class) == 0 )
				{
					APL_DATA_MISSING("Split Event Type" ,APL_NULL_STRING,APL_NULL_STRING);
				}
			}


		}

		if	(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)	)		
		{
			/* Commented by Gouse for ISKB_6024 - To make the 2 fields as non-mandatory 	
			if(	!strlen(p_ca_caevent_struct_h->h_respons_date)	)
				{
					APL_DATA_MISSING("Response date",APL_NULL_STRING,APL_NULL_STRING)
				}		

			if(	!strlen(p_ca_caevent_struct_h->h_expire_date)	)
				{
					APL_DATA_MISSING("Expiry date",APL_NULL_STRING,APL_NULL_STRING)
				}	*/	
		
			if(  strlen(p_ca_caevent_struct_h->h_rights_class) != 0 )
				{
					if(  strcmp(p_ca_caevent_struct_h->h_rights_class,"Y") == 0)
						{
							if(  strlen(p_ca_caevent_struct_h->h_dealfrom_dt) == 0 )
								{
									APL_DATA_MISSING("Trading From Date",APL_NULL_STRING,APL_NULL_STRING) 
								}

							if(  strlen(p_ca_caevent_struct_h->h_dealto_dt) == 0 )
                        {
                           APL_DATA_MISSING("Trading To Date",APL_NULL_STRING,APL_NULL_STRING)
                        }
						}	
				}

			if(	p_ca_caevent_struct_h->h_sub_base_quantity == 0	)
				{
					APL_DATA_MISSING("Sub. int_ratio num",APL_NULL_STRING,APL_NULL_STRING)
				}		

			if(	p_ca_caevent_struct_h->h_sub_new_quantity	== 0)	
				{
					APL_DATA_MISSING("Sub. int_ratio denom",APL_NULL_STRING,APL_NULL_STRING)
				}		

			if(	!strlen(p_ca_caevent_struct_h->h_disp_of_fract)	)
				{
					APL_DATA_MISSING("fract disp type",APL_NULL_STRING,APL_NULL_STRING)
				}		

			if(	!strcmp(p_ca_caevent_struct_h->h_disp_of_fract,CASH_IND) &&
			      p_ca_caevent_struct_h->h_f_pr	<	0				
				)											
				{
					APL_DATA_MISSING("fract selloff price",APL_NULL_STRING,APL_NULL_STRING)
				}		
		
			if(	p_ca_caevent_struct_h->h_sub_pr == 0	)
				{
					APL_DATA_MISSING("sub. price",APL_NULL_STRING,APL_NULL_STRING)
				}		
				
			if(	!strlen(p_ca_caevent_struct_h->h_rights_class)		)
				{
					APL_DATA_MISSING("Rights Type",APL_NULL_STRING,APL_NULL_STRING)
				}		

 			if(   strlen(p_ca_caevent_struct_h->h_div_class) == 0 ) 
         	{
            	APL_DATA_MISSING("Default Flag",APL_NULL_STRING,APL_NULL_STRING)
         	}
		}

		if(	!(strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)	)	)
	
		{	
			if(	!strlen(p_ca_caevent_struct_h->h_proxy_date)	)
				{
					APL_DATA_MISSING("Proxy Date",APL_NULL_STRING,APL_NULL_STRING)
				}		
		
			if(	!strlen(p_ca_caevent_struct_h->h_meet_date)	)
				{	
					APL_DATA_MISSING("Venue and time",APL_NULL_STRING,APL_NULL_STRING)
				}		
		
			if(	!strlen(p_ca_caevent_struct_h->h_contactinfo)	)
				{
					APL_DATA_MISSING("Address",APL_NULL_STRING,APL_NULL_STRING)
				}		
		
		}

		/*Smita - Added Mandatory Data Checks for NAme Change Event - HDFCCA_027*/
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG) == 0)
		{
			APL_IF_DEBUG
			{
				printf("Entered Mandatory Data Checks For Name Change Event\n");
			}

			if (strlen(p_ca_caevent_struct_h->h_rec_date) == 0)
			{
				APL_DATA_MISSING("Record Date",APL_NULL_STRING,APL_NULL_STRING)
			}
			if (strlen(p_ca_caevent_struct_h->h_effect_date) == 0)
			{
				APL_DATA_MISSING("Effective Date",APL_NULL_STRING,APL_NULL_STRING)
			}
			if (strlen(p_ca_caevent_struct_h->h_cmp_code) == 0)
			{
				APL_DATA_MISSING("Company Code",APL_NULL_STRING,APL_NULL_STRING)
			}
			if (strlen(p_ca_caevent_struct_h->h_res_cmp_code) == 0)
			{
				APL_DATA_MISSING("Resultant Company Code",APL_NULL_STRING,APL_NULL_STRING)
			}
		}
		/*Smita - Added Mandatory Data Checks for NAme Change Event - HDFCCA_027*/

	}
	
	 /*Added by Arunachalam for CS0074500 - New Bilav File upload changes */
	if ((!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS)) || (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV)) ||(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT)) || (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)))
				{
					APL_IF_DEBUG
					{
						printf("Entered Mandatory Data Checks For Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
					}
					if (p_ca_caevent_struct_h->h_new_safek_quantity==0)
					{
					APL_DATA_MISSING("New Stock Qty",APL_NULL_STRING,APL_NULL_STRING)
					}
					if (p_ca_caevent_struct_h->h_old_safek_quantity==0)
					{
					APL_DATA_MISSING("Old Stock Qty",APL_NULL_STRING,APL_NULL_STRING)
					}
					
				}
	/*Added by Arunachalam for CS0074500 - New Bilav File upload changes */
	
	
	
		if	(	 CO_ChkErr(*l_debug_info_ptr)	== APL_SUCCESS	)
			APL_GOBACK_FAIL

		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_MandDataChk successfully",NULL,p_intlenv_data_struct_h);
				CO_ProcMonitor(APL_OUT_FILE, "EXITING S_MANDDATACHK", NULL, p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_MandDataChk unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
		}
}
		
static	void	CA_IndVarSet(  CA_CAEVENT_STRUCT_H		*p_ca_caevent_struct_h,
										CA_CAEVENT_STRUCT_I		*p_ca_caevent_struct_i,
										CA_CASECEVENT_STRUCT_H	*p_secevt_struct
									)	

{
	struct sqlca sqlca;
	short l_cond_ru = 0; 
	DEBUG_INFO_STRUCT_H    **l_debug_info_ptr = NULL; 
	
	p_ca_caevent_struct_i->i_checker=-1;	
	p_ca_caevent_struct_i->i_checker_dt=-1;	

	if	(	!strlen(p_ca_caevent_struct_h->h_info_nbr)	)
		p_ca_caevent_struct_i->i_info_nbr	=	-1;

	if	(	!strlen(p_ca_caevent_struct_h->h_entinfo_no)	)
		p_ca_caevent_struct_i->i_entinfo_no	=	-1;
	
	if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OFFER)   )
	{
		if ( strcmp(p_ca_caevent_struct_h->h_op_evt_class,"MG"))
		{
			p_ca_caevent_struct_i->i_meet_date 		= -1;
		}
		p_ca_caevent_struct_i->i_proxy_date 		= -1;
		p_ca_caevent_struct_i->i_contactinfo	   = -1;
		p_ca_caevent_struct_i->i_earnings 			= -1;
		p_ca_caevent_struct_i->i_earnings_rt 		= -1;
     	p_ca_caevent_struct_i->i_sub_base_quantity= -1;
     	p_ca_caevent_struct_i->i_sub_new_quantity = -1;
     	p_ca_caevent_struct_i->i_rights_class		= -1;

		if (	!strcmp(p_secevt_struct->h_ratio_perc_ind,RATIO_IND)	)
			p_ca_caevent_struct_i->i_new_safek_quantity_rt	=	-1;
		else if (!strcmp(p_secevt_struct->h_ratio_perc_ind,PERCEN_IND)	)
		{	
			p_ca_caevent_struct_i->i_new_safek_quantity	=	-1;
			p_ca_caevent_struct_i->i_old_safek_quantity	=	-1;
		}

		if ( !strlen(p_ca_caevent_struct_h->h_ex_date) )
			p_ca_caevent_struct_i->i_ex_date = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_respons_date) )
			p_ca_caevent_struct_i->i_respons_date= -1;
		
		if ( !strlen(p_ca_caevent_struct_h->h_expire_date) )
			p_ca_caevent_struct_i->i_expire_date= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_pp_date) )
			p_ca_caevent_struct_i->i_pp_date= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_start_date) )
			p_ca_caevent_struct_i->i_start_date= -1;


		if ( !strlen(p_ca_caevent_struct_h->h_proc_oth) )
			p_ca_caevent_struct_i->i_proc_oth = -1;
		else
			p_ca_caevent_struct_i->i_proc_oth = 0;			/*** OT event ***/


		if ( !strlen(p_ca_caevent_struct_h->h_res_instr_code) &&
			  !strcmp(p_ca_caevent_struct_h->h_preliminary_flag,APL_NO_IND))
			{
				p_ca_caevent_struct_i->i_res_instr_code = -1;
				p_ca_caevent_struct_i->i_disp_of_fract = -1;
				p_ca_caevent_struct_i->i_f_pr	 = -1;
				p_ca_caevent_struct_i->i_sub_pr  = -1;
				p_ca_caevent_struct_i->i_new_safek_quantity_rt	=	-1;
				p_ca_caevent_struct_i->i_new_safek_quantity	=	-1;
				p_ca_caevent_struct_i->i_old_safek_quantity	=	-1;
			}				
		
		p_ca_caevent_struct_i->i_dealfrom_dt =  -1;
      p_ca_caevent_struct_i->i_dealto_dt   =  -1;
      p_ca_caevent_struct_i->i_subs_date      =  -1;
      p_ca_caevent_struct_i->i_posting_date   =  -1;
      
      if(	(!strcmp(p_ca_caevent_struct_h->h_op_evt_class,"CV")) || 
				(!strcmp(p_ca_caevent_struct_h->h_op_evt_class,"MG"))	)
				p_ca_caevent_struct_i->i_over_subscrp     =  0;
      else
       	   p_ca_caevent_struct_i->i_over_subscrp     =  -1;
	}
	else 
	{
      if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OTH))
      {
			if ( strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS))
			{
				/*Smita - HDFCCA_027 - Added Name Change Event Condition */
				if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG))
				{
					p_ca_caevent_struct_i->i_effect_date = -1;
				}
			}
			p_ca_caevent_struct_i->i_op_evt_class = -1;
      }
			if ( strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS))
			{
				p_ca_caevent_struct_i->i_start_date				=	-1;
			}
			if(strcmp(p_ca_caevent_struct_h->h_op_evt_class,EVT_OTH) != 0) /*** OTHER ->> OT) ***/
			{
			p_ca_caevent_struct_i->i_proc_oth				=	-1;
			}
			else
			{
				p_ca_caevent_struct_i->i_proc_oth=	0;
			}
			p_ca_caevent_struct_i->i_respons_date_openend	=	-1;
			p_ca_caevent_struct_i->i_expire_date_openend	=	-1;

			if	(	strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)	)
			{
				p_ca_caevent_struct_i->i_respons_date = -1;
				p_ca_caevent_struct_i->i_expire_date = 	-1;
				p_ca_caevent_struct_i->i_pp_date = -1;
     			p_ca_caevent_struct_i->i_disp_of_fract = 	-1;
      		p_ca_caevent_struct_i->i_sub_base_quantity = 	-1;
      		p_ca_caevent_struct_i->i_sub_new_quantity = 	-1;
                if (! strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CV) )
			p_ca_caevent_struct_i->i_sub_pr =               0;
		 else
      			p_ca_caevent_struct_i->i_sub_pr = 		-1;
      		p_ca_caevent_struct_i->i_rights_class = 	-1;
			
				p_ca_caevent_struct_i->i_subs_date      =  -1;
				p_ca_caevent_struct_i->i_posting_date   =  -1;
				p_ca_caevent_struct_i->i_over_subscrp     =  -1;

			
			  /*Smita - Added Buy Back Event in the If Clause - HDFCCA_009*/	
				if	( 	(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND)) ||
				  		(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)) ||
						(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK))	)
				{
		      	if ( !strlen(p_ca_caevent_struct_h->h_dealfrom_dt) ) 
			       	 p_ca_caevent_struct_i->i_dealfrom_dt = -1;
		      	if ( !strlen(p_ca_caevent_struct_h->h_dealto_dt) ) 
			        	p_ca_caevent_struct_i->i_dealto_dt = -1;
		      	if ( !strlen(p_ca_caevent_struct_h->h_respons_date) ) 
			        	p_ca_caevent_struct_i->i_respons_date = -1;
					else
						p_ca_caevent_struct_i->i_respons_date = 0;
         	}
				else
				{
			   	p_ca_caevent_struct_i->i_dealfrom_dt =  -1;
			  	 	p_ca_caevent_struct_i->i_dealto_dt   =  -1;
				}
			}
			
			/*
			 * 	if (  !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS) )
				{ 
					if ( !strlen(p_ca_caevent_struct_h->h_follmsg2date) )
						p_ca_caevent_struct_i->i_follmsg2date = -1;
					else
						p_ca_caevent_struct_i->i_follmsg2date = 0;
				} */
	/*Chirag 23-06-06*/		
	if(! strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_OTH) && !strcmp(p_ca_caevent_struct_h->h_op_evt_class,EVT_OTH))
	{
		p_ca_caevent_struct_i->i_over_subscrp     =  0;
	}
	/*Chirag 23-06-06*/	
			
			if	(	strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)	)
			{
				p_ca_caevent_struct_i->i_meet_date = -1;
				p_ca_caevent_struct_i->i_proxy_date = -1;
				p_ca_caevent_struct_i->i_contactinfo = -1;
			}
			
			if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP)||
					!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND)	||		
					!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV)   ||			
					!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_DECR_VAL)
				)	
			{
				p_ca_caevent_struct_i->i_res_instr_code 			= -1;
				p_ca_caevent_struct_i->i_new_safek_quantity 		= -1;
				p_ca_caevent_struct_i->i_old_safek_quantity 		= -1;
				p_ca_caevent_struct_i->i_new_safek_quantity_rt = -1;
				p_ca_caevent_struct_i->i_f_pr = -1;
			
				if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP) )
				{
					p_ca_caevent_struct_i->i_earnings = -1;	
					p_ca_caevent_struct_i->i_earnings_rt = -1; 
					if (p_ca_caevent_struct_h->h_earnings >0 )
         			p_ca_caevent_struct_i->i_earnings = 0;
					if (p_ca_caevent_struct_h->h_earnings_rt >0 )
						p_ca_caevent_struct_i->i_earnings_rt	= 0; 
					if(strlen(p_ca_caevent_struct_h->h_over_subscrp))
						p_ca_caevent_struct_i->i_over_subscrp = 0;	
					p_ca_caevent_struct_i->i_div_class  = -1;
		      	if ( !strlen(p_ca_caevent_struct_h->h_posting_date) ) 
			        	p_ca_caevent_struct_i->i_posting_date = -1;
					else
						p_ca_caevent_struct_i->i_posting_date = 0;
					/*  PJ new enh */
		      	if ( !strlen(p_ca_caevent_struct_h->h_respons_date) ) 
			        	p_ca_caevent_struct_i->i_respons_date = -1;
					else
						p_ca_caevent_struct_i->i_respons_date = 0;
				}
				if (  !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV) )
				{
					printf("*************Inside Setting Cash Dividend Indicators***************\n");
					p_ca_caevent_struct_i->i_earnings = -1;
					p_ca_caevent_struct_i->i_earnings_rt = -1;
					if (p_ca_caevent_struct_h->h_earnings >=0 )/* CHGS FRM > TO >=, ASP-120606 */ 
						p_ca_caevent_struct_i->i_earnings = 0;
					if (p_ca_caevent_struct_h->h_earnings_rt >=0 )/* CHGS FRM > TO >=, ASP-120606 */
						p_ca_caevent_struct_i->i_earnings_rt   = 0;
				}

				/*if (     !strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV) || 
						  	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_DECR_VAL) )   	
				{
					if (	!strcmp(p_secevt_struct->h_amt_rt_ind,AMT_IND)	)
					p_ca_caevent_struct_i->i_earnings_rt	=	-1;
					else if (!strcmp(p_secevt_struct->h_amt_rt_ind,RATE_IND)	)
					p_ca_caevent_struct_i->i_earnings	=	-1;
				}**/
			
				if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND) )
				{
					p_ca_caevent_struct_i->i_div_class  = -1;
				}
			}

				if	(!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BOND_REDMP) && !strcmp(p_ca_caevent_struct_h->h_op_evt_class,"PT") )
				{
					p_ca_caevent_struct_i->i_sub_pr        = 0;
				}
					
			if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT)||
					!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)	||		
					!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_STOK_DIV) ||			
					!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS)			
			)
			{
				p_ca_caevent_struct_i->i_earnings 			= -1;
				p_ca_caevent_struct_i->i_earnings_rt 		= -1;
				if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BONUS)) 
				{
					p_ca_caevent_struct_i->i_op_evt_class        = -1;
				}
				if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_RHTS)) 
				{
					p_ca_caevent_struct_i->i_div_class        = -1;
				
				}
				if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_SPLIT)	)
					p_ca_caevent_struct_i->i_new_safek_quantity_rt	=	-1;
				else	
				{
					if (	!strcmp(p_secevt_struct->h_ratio_perc_ind,RATIO_IND)	)
					p_ca_caevent_struct_i->i_new_safek_quantity_rt	=	-1;
					else if (!strcmp(p_secevt_struct->h_ratio_perc_ind,PERCEN_IND)	)
					{	
							p_ca_caevent_struct_i->i_new_safek_quantity	=	-1;
							p_ca_caevent_struct_i->i_old_safek_quantity	=	-1;
					}
				}
			}
	
			if	(	!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_MEETING)	)
			{
				p_ca_caevent_struct_i->i_ca_currency = -1;	
				p_ca_caevent_struct_i->i_ex_date	=	-1;
			
           	if (APL_FAILURE == CO_Chk_CntryEnabled(  "EVNT_INIT",
                                                     "SM_RECDT",
                                                  		&l_cond_ru,
                                                     	l_debug_info_ptr ))
           	{
       				exit(-1);             
           	}
			if ((l_cond_ru == 0) || (strlen(p_ca_caevent_struct_h->h_rec_date) == 0))
			{
			p_ca_caevent_struct_i->i_rec_date	=	-1;
			} 
			p_ca_caevent_struct_i->i_pymt_dt	=	-1;
			p_ca_caevent_struct_i->i_evt_send_msg_ind = -1;
			p_ca_caevent_struct_i->i_entl_send_msg_ind = -1;
			p_ca_caevent_struct_i->i_pymt_send_msg_ind = -1;
			p_ca_caevent_struct_i->i_res_instr_code 			= -1;
			p_ca_caevent_struct_i->i_new_safek_quantity 		= -1;
			p_ca_caevent_struct_i->i_old_safek_quantity 		= -1;
			p_ca_caevent_struct_i->i_new_safek_quantity_rt = -1;
			p_ca_caevent_struct_i->i_earnings		=	-1;
			p_ca_caevent_struct_i->i_earnings_rt	=	-1;
         p_ca_caevent_struct_i->i_subs_date      =  -1;
         p_ca_caevent_struct_i->i_posting_date   =  -1;
         p_ca_caevent_struct_i->i_over_subscrp     =  -1;
			p_ca_caevent_struct_i->i_div_class     =  -1;
		}
	}	
		if ( !strlen(p_ca_caevent_struct_h->h_ex_date) )
			p_ca_caevent_struct_i->i_ex_date = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_rec_date) )
			p_ca_caevent_struct_i->i_rec_date= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_pymt_dt) )
			p_ca_caevent_struct_i->i_pymt_dt= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_respons_date) )
			p_ca_caevent_struct_i->i_respons_date= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_expire_date) )
			p_ca_caevent_struct_i->i_expire_date= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_pp_date) )
			p_ca_caevent_struct_i->i_pp_date= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_proxy_date) )
			p_ca_caevent_struct_i->i_proxy_date= -1;
		
		else
			p_ca_caevent_struct_i->i_proxy_date= 0;
		
		if ( !strlen(p_ca_caevent_struct_h->h_meet_date) )
			p_ca_caevent_struct_i->i_meet_date= -1;

		if ( !strlen(p_ca_caevent_struct_h->h_start_date) )
			p_ca_caevent_struct_i->i_start_date= -1;
					else p_ca_caevent_struct_i->i_start_date= 0;     /*vaibhav*/

		if ( !strlen(p_ca_caevent_struct_h->h_effect_date) )
			p_ca_caevent_struct_i->i_effect_date= -1;
		/*Smita - HDFCCA_027 - Name Change Event*/
		else
			p_ca_caevent_struct_i->i_effect_date=0;
		/*Smita - HDFCCA_027 - Name Change Event*/

		if ( !strlen(p_ca_caevent_struct_h->h_proc_oth) )
			p_ca_caevent_struct_i->i_proc_oth = -1;
		
		if ( !strlen(p_ca_caevent_struct_h->h_op_evt_class) )
			p_ca_caevent_struct_i->i_op_evt_class = -1;
		
		else
			p_ca_caevent_struct_i->i_op_evt_class = 0;
		
		if ( !strlen(p_ca_caevent_struct_h->h_respons_date_openend) )
			p_ca_caevent_struct_i->i_respons_date_openend = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_expire_date_openend) )
			p_ca_caevent_struct_i->i_expire_date_openend = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_evt_send_msg_ind) )
			p_ca_caevent_struct_i->i_evt_send_msg_ind = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_entl_send_msg_ind) )
			p_ca_caevent_struct_i->i_entl_send_msg_ind = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_pymt_send_msg_ind) )
			p_ca_caevent_struct_i->i_pymt_send_msg_ind = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_res_instr_code) )
			p_ca_caevent_struct_i->i_res_instr_code = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_disp_of_fract) )
			p_ca_caevent_struct_i->i_disp_of_fract = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_rights_class) )
			p_ca_caevent_struct_i->i_rights_class = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_contactinfo) )
			p_ca_caevent_struct_i->i_contactinfo = -1;
			
      if (  !strlen(p_ca_caevent_struct_h->h_nser_info) )
         p_ca_caevent_struct_i->i_nser_info =  -1;

      if (  !strlen(p_ca_caevent_struct_h->h_nrep_date_a) )
         p_ca_caevent_struct_i->i_nrep_date_a =  -1;

      if (  !strlen(p_ca_caevent_struct_h->h_comp_info1)   )
         p_ca_caevent_struct_i->i_comp_info1   =  -1;

      if (  !strlen(p_ca_caevent_struct_h->h_inco_info1)   )
         p_ca_caevent_struct_i->i_inco_info1   =  -1;

      if (  !strlen(p_ca_caevent_struct_h->h_buyresp_date)   )  
         p_ca_caevent_struct_i->i_buyresp_date   =  -1;

      if (  !strlen(p_ca_caevent_struct_h->h_sellresp_date)   ) 
         p_ca_caevent_struct_i->i_sellresp_date  =  -1;
			
      if (  !strlen(p_ca_caevent_struct_h->h_wwwaddr)   ) 
         p_ca_caevent_struct_i->i_wwwaddr   =  -1;

		if (  !strlen(p_ca_caevent_struct_h->h_txnr_info1)   ) 
         p_ca_caevent_struct_i->i_txnr_info1   =  -1;
		
		if (  !strlen(p_ca_caevent_struct_h->h_reqd_cert_ind) )   
			p_ca_caevent_struct_i->i_reqd_cert_ind	= 	-1;

		/* =- Smita - HDFCCA_027 - Added Indicator Variables Values for new fields*/
		if ( !strlen(p_ca_caevent_struct_h->h_bc_from_date)	)
			p_ca_caevent_struct_i->i_bc_from_date = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_bc_to_date)	)
			p_ca_caevent_struct_i->i_bc_to_date =-1;

		if (	!strlen(p_ca_caevent_struct_h->h_res_instr_code_2)	)
			p_ca_caevent_struct_i->i_res_instr_code_2 = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_trans_dt)	)
			p_ca_caevent_struct_i->i_trans_dt = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_cln_code)	)
			p_ca_caevent_struct_i->i_cln_code = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_prev_inst_date)	)
			p_ca_caevent_struct_i->i_prev_inst_date =-1;

		if (	!strlen(p_ca_caevent_struct_h->h_next_inst_date)	)
			p_ca_caevent_struct_i->i_next_inst_date =-1;

		if (	!strlen(p_ca_caevent_struct_h->h_inst_start_period)	)
			p_ca_caevent_struct_i->i_inst_start_period = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_inst_end_period)	)
			p_ca_caevent_struct_i->i_inst_end_period = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_last_ptc_date)	)
			p_ca_caevent_struct_i->i_last_ptc_date=-1;

		if	(	!strlen(p_ca_caevent_struct_h->h_allotment_letter)	)
			p_ca_caevent_struct_i->i_allotment_letter = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_redem_option)	)
			p_ca_caevent_struct_i->i_redem_option = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_send_split)	)
			p_ca_caevent_struct_i->i_send_split = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_cmp_code)	)
			p_ca_caevent_struct_i->i_cmp_code = -1;

		if (	!strlen(p_ca_caevent_struct_h->h_res_cmp_code) )
			p_ca_caevent_struct_i->i_res_cmp_code = -1;

		if ( !strlen(p_ca_caevent_struct_h->h_exch_code)	)
			p_ca_caevent_struct_i->i_exch_code = -1;

		if (!strlen(p_ca_caevent_struct_h->h_interest_type)	)
			p_ca_caevent_struct_i->i_interest_type = -1;

		if (!strlen(p_ca_caevent_struct_h->h_depo_part_code)	)
			p_ca_caevent_struct_i->i_depo_part_code = -1;

		if (!strlen(p_ca_caevent_struct_h->h_depo_code)	)
			p_ca_caevent_struct_i->i_depo_code = -1;
	/* =- Smita - HDFCCA_027 - Added Indicator Variables Values for new fields*/
		/*Added by Vaibhav HDFCA-013 New Issue*/
		if (!strlen(p_ca_caevent_struct_h->h_bk_build_ind))
            p_ca_caevent_struct_i->i_bk_build_ind = -1;
		
		if (!strlen(p_ca_caevent_struct_h->h_attach_corp_id))
            p_ca_caevent_struct_i->i_attach_corp_id = -1;
		
		if (!strlen(p_ca_caevent_struct_h->h_source))
            p_ca_caevent_struct_i->i_source = -1;
		
	/* =- vaibhav - HDFCCA_013 - Added Indicator Variables Values for new fields*/

		/*Smita - Added for Bug Fix - Disp_of_Fract Not stored - HDFCCA_004*/
		if (strlen(p_ca_caevent_struct_h->h_disp_of_fract) == 0)
		{
			p_ca_caevent_struct_i->i_disp_of_fract = -1;
		}
		else
		{
			p_ca_caevent_struct_i->i_disp_of_fract = 0;
		}
		/*Smita - Added for Bug Fix - Disp_of_Fract Not stored*/

		if (strlen(p_ca_caevent_struct_h->h_bilav_id) == 0)/* Added by Arunachalam for CS0074500 - New Bilav File upload changes */
		{
			p_ca_caevent_struct_i->i_bilav_id = -1;
		}
		else
		{
			p_ca_caevent_struct_i->i_bilav_id = 0;
		}



}	
	
static int CA_EventFreezeUnfreeze(  CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
						                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      						         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  					)
{
	struct	sqlca	sqlca;
	CA_CAEVENT_STRUCT_H		*l_ca_caeventimg_struct_h	=	NULL;
	CA_CAEVENT_STRUCT_I		*l_ca_caevent_struct_i	=	NULL;
	char				 		rowid[APL_ROWID_LEN] = APL_NULL_STRING;
	char						pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	char						chr_op_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	int						int_retval = 0; /*Smita - HDFCCA_027*/
	int		int_p_result = 0; /*Smita - HDFCCA_009*/ // AIX -Warnings Removal

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered CA_EventFreezeUnfreeze function",NULL,p_intlenv_data_struct_h);
	}
	
		
	
			if(	!strlen(p_ca_caevent_struct_h->h_access_stamp)	)
				{
					APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
				}
			if(	!strlen(p_ca_caevent_struct_h->h_corp_id)	)
				{	
					APL_DATA_MISSING("Corporate Action ID",APL_NULL_STRING,APL_NULL_STRING)	
				}


	if	(	 CO_ChkErr(*l_debug_info_ptr)	== APL_SUCCESS	)
			APL_GOBACK_FAIL
	
			(l_ca_caeventimg_struct_h) = (CA_CAEVENT_STRUCT_H*)calloc(1,
										sizeof(CA_CAEVENT_STRUCT_H));	
			APL_MALLOC_FAIL(l_ca_caeventimg_struct_h) 
			
			(l_ca_caevent_struct_i) = (CA_CAEVENT_STRUCT_I*)calloc(1,
											sizeof(CA_CAEVENT_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_caevent_struct_i) 
		
			

			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_corp_id is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_instr_code is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_res_instr_code is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_contactinfo is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_info_nbr is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_entinfo_no is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_maker is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_checker is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_proc_oth is string;
 			EXEC SQL VAR    l_ca_caeventimg_struct_h->h_nser_info is string;
  		    EXEC SQL VAR    l_ca_caeventimg_struct_h->h_nrep_date_a is string;
  			EXEC SQL VAR    l_ca_caeventimg_struct_h->h_comp_info1 is string;
			EXEC SQL VAR    l_ca_caeventimg_struct_h->h_inco_info1 is string; 
			EXEC SQL VAR    l_ca_caeventimg_struct_h->h_txnr_info1 is string; 
	
			EXEC SQL SELECT ROWID,CAEVENT.* 
			INTO	:rowid,:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
			FROM CAEVENT 
        	WHERE corp_id=:p_ca_caevent_struct_h->h_corp_id 
      	FOR UPDATE OF	CAEVENT.STATUS;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_EVNT_NOTFND_A,
                                                APL_NULL_STRING,
                                                APL_NULL_STRING,
                                                APL_NULL_STRING
																)	
		
		
		if (	strcmp(	p_ca_caevent_struct_h->h_access_stamp,
							l_ca_caeventimg_struct_h->h_access_stamp
						)
			)		
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}
	
		if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_FREEZE)	)
			{
				if	(	( strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_INT))	&&
						( strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_ENTL)) &&	
		
						(!((!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_PYMT)) && (!strcmp(l_ca_caeventimg_struct_h->h_evt_class,EVT_SPLIT)))) &&
		
					  ( ! ( !strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_SENT) &&							 !strcmp(l_ca_caeventimg_struct_h->h_preliminary_flag,APL_YES_IND)
							) 
						)
					)
					
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_EVNT_STS_INVALIDFRZ,
											l_ca_caeventimg_struct_h->h_evt_stat,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__
											);
						APL_GOBACK_FAIL
					}	
			}		
			
		
		if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_UNFREEZE)	)
			{
				if	(	strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_FROZ_IN)	&&
						strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_FROZ_RE)	&&
						strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_FROZ_RP)	&&
						strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_FROZ_SN)	
						
					)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_EVNT_STS_INVALIDUNFRZ,
											l_ca_caeventimg_struct_h->h_evt_stat,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__
											);
						APL_GOBACK_FAIL
					}	
			}

	   if ( !strcmp(l_ca_caeventimg_struct_h->h_evt_class,EVT_OFFER) )
		{
			strcpy(chr_op_ind,APL_YES_IND);
		}
		else
		{
			strcpy(chr_op_ind,APL_NO_IND);
		}

		if	(	CA_ChkInstr(l_ca_caeventimg_struct_h->h_instr_code,
								l_ca_caeventimg_struct_h->h_res_instr_code,
							 	chr_op_ind,
								  l_debug_info_ptr
								)	==		APL_FAILURE
			)
				APL_GOBACK_FAIL

		/*Smita - HDFCCA_027 - Name Change Event*/	
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG) == 0) /*Smita - HDFCCA_009 - Chk Event Type*/
		{
		int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);
		
		if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL

		int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_res_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);
		
		if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL
		}
		/*Smita - HDFCCA_027 - Name Change Event*/	

		/*Smita - HDFCCA_009 - Buy Back Event Checks*/
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK) == 0)
		{
			APL_IF_DEBUG
			{
				printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			/* Check whether Ex-Date/Ex-Date(BSE) is a Holiday*/
			int_retval = CA_ChkHoliday	(p_ca_caevent_struct_h,
												 p_intlenv_data_struct_h,
												 l_debug_info_ptr);
			if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL

			int_retval = CA_ChkEventDetails (	p_ca_caevent_struct_h,
															&int_p_result,
						  									p_intlenv_data_struct_h,
															l_debug_info_ptr);
			if (	(int_p_result == ERR_DEPO_PART_NOTFND) ||
				   (int_p_result == ERR_DEPO_PART_UNAUTH) ||
				   (int_p_result == ERR_INVALID_CODE)		)
				APL_GOBACK_FAIL
			else
				APL_IF_DEBUG
				{
					printf("Successfully Checked Event Details\n");
				}
		}
			/*Smita - HDFCCA_009 - Buy Back Event Checks*/

		/*Smita - HDFCCA_004 - Capital Reduction Event*/
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED) == 0)
		{
			APL_IF_DEBUG
			{
				printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			if (	(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_UNITS) != 0) &&
					(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_FACEVAL) != 0) &&
					(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_BOTH) != 0)	)
			{
					APL_IF_DEBUG
					{
						printf("Reduction type Not Valid\n");
					}

					CO_InsertErr(  l_debug_info_ptr,
										ERR_INVALID_CODE,
										"Reduction Type",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);
					APL_GOBACK_FAIL
			}
				
			int_retval = CA_ChkEventDetails (   p_ca_caevent_struct_h,
															&int_p_result,
															p_intlenv_data_struct_h,
															l_debug_info_ptr);
			if (int_p_result == ERR_INVALID_CODE)
				APL_GOBACK_FAIL
			else
				APL_IF_DEBUG
				{
					printf("Successfully Checked Event Details\n");
				}
		}
		/*Smita - HDFCCA_004 - Capital Reduction Event*/


		
		EXEC SQL INSERT INTO CAEVENTMG VALUES (:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i);
	
		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_EVENTIMG,
														p_ca_caevent_struct_h->h_corp_id,
														APL_NULL_STRING,
														APL_NULL_STRING) 
		
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Image Record inserted successfuly",NULL,p_intlenv_data_struct_h);
		}
		
		if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}

		if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_FREEZE)	)
			{
				strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_FROZ_UAUTH_A);
			}
		else
			{
				strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_UNFRZ_UAUTH);
			}
			strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
			strcpy(p_ca_caevent_struct_h->h_maker,p_intlenv_data_struct_h->usr);
			strcpy(p_ca_caevent_struct_h->h_maker_dt,pro_sys_date);

		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		{
			APL_GOBACK_FAIL
		}
		strcpy(p_ca_caevent_struct_h->h_access_stamp,pro_sys_date);
	
		EXEC SQL UPDATE CAEVENT	
		SET
				MAKER=:p_ca_caevent_struct_h->h_maker,
				MAKER_DT=:p_ca_caevent_struct_h->h_maker_dt,
				CHECKER=NULL,
				CHECKER_DT=NULL,
				STATUS=:p_ca_caevent_struct_h->h_evt_stat,
				PROCESSED_DATE=:p_ca_caevent_struct_h->h_stat_date,
				ACCESS_STAMP=:p_ca_caevent_struct_h->h_access_stamp
		WHERE
				ROWID=:rowid;	
		IS_ANY_ORA_ERROR;
		
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventFreezeUnfreeze successfully",NULL,p_intlenv_data_struct_h);	
			}	
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);

			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"\nExiting CA_EventFreezeUnfreeze unsuccessfully\n",NULL,p_intlenv_data_struct_h);	
		   }	
			return (APL_FAILURE);
		}
}

static	int 	CA_EventReverse(  CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
					                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  		      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				)
{
	struct	sqlca	sqlca;
	CA_CAEVENT_STRUCT_H		*l_ca_caeventimg_struct_h	=	NULL;
	CA_CAEVENT_STRUCT_I		*l_ca_caevent_struct_i	=	NULL;
	char				 	rowid[APL_ROWID_LEN] = APL_NULL_STRING;
	char		pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	int	int_h_counter=0;
	int	int_h_pay_counter=0;
	int   int_h_glb_pay_counter=0;
	short		i_counter=0;
	char		chr_op_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	int		int_retval = 0; /*Smita- HDFCCA_027*/
	int		int_p_result = 0; /*Smita - HDFCCA_009*/ // AIX -Warnings Removal

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered CA_EventReverse function",NULL,p_intlenv_data_struct_h);
	}

		
	
			if(	!strlen(p_ca_caevent_struct_h->h_access_stamp)	)
				{
					APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
				}

			if(	!strlen(p_ca_caevent_struct_h->h_corp_id)	)
				{
					APL_DATA_MISSING("Corporate Action ID",APL_NULL_STRING,APL_NULL_STRING)	
				}
				

			if(	!strlen(p_ca_caevent_struct_h->h_evt_send_msg_ind)	)
				{
					APL_DATA_MISSING("Send Event Message",APL_NULL_STRING,APL_NULL_STRING)	
				}

	
	if	(	 CO_ChkErr(*l_debug_info_ptr)	== APL_SUCCESS	)
			APL_GOBACK_FAIL
	
	
			(l_ca_caeventimg_struct_h) = (CA_CAEVENT_STRUCT_H*)calloc(1,
										sizeof(CA_CAEVENT_STRUCT_H));	
			APL_MALLOC_FAIL(l_ca_caeventimg_struct_h) 
		
			(l_ca_caevent_struct_i) = (CA_CAEVENT_STRUCT_I*)calloc(1,
										sizeof(CA_CAEVENT_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_caevent_struct_i) 

			

			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_corp_id is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_instr_code is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_res_instr_code is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_contactinfo is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_info_nbr is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_entinfo_no is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_maker is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_checker is string;
			EXEC SQL VAR	l_ca_caeventimg_struct_h->h_proc_oth is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_nser_info is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_nrep_date_a is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_comp_info1 is string;
         EXEC SQL VAR   l_ca_caeventimg_struct_h->h_inco_info1 is string; 
			EXEC SQL VAR   l_ca_caeventimg_struct_h->h_txnr_info1 is string; 
			

			

			
			
			EXEC SQL SELECT ROWID,CAEVENT.* 
			INTO	:rowid,:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
			FROM CAEVENT 
        	WHERE corp_id=:p_ca_caevent_struct_h->h_corp_id 
      	FOR UPDATE OF	CAEVENT.STATUS;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_EVNT_NOTFND_A,
                                                APL_NULL_STRING,
                                                APL_NULL_STRING,
                                                APL_NULL_STRING
																)	



		if(!strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes*/
		{
			strcpy(p_ca_caevent_struct_h->h_access_stamp,l_ca_caeventimg_struct_h->h_access_stamp);
		}
	
		if (	
				strcmp(	p_ca_caevent_struct_h->h_access_stamp,
							l_ca_caeventimg_struct_h->h_access_stamp
						)
			)		
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}

		
		
		
		
	                        printf("\n Event Status is = {%s}",l_ca_caeventimg_struct_h->h_evt_stat);	
				if	(	strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_INT)	&&
						strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_ENTL)		&&	
						strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_PYMT)    &&
					   strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_MSG_SENT)         &&
                                          strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_APP)
					) 
					
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_EVNT_STS_INVALIDREVERSE,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__
											);
						APL_GOBACK_FAIL
					}	
		
		
		

	   if ( !strcmp(l_ca_caeventimg_struct_h->h_evt_class,EVT_OFFER) )
		{
			strcpy(chr_op_ind,APL_YES_IND);
		}
		else
		{
			strcpy(chr_op_ind,APL_NO_IND);
		}

		if	(	CA_ChkInstr(l_ca_caeventimg_struct_h->h_instr_code,
								l_ca_caeventimg_struct_h->h_res_instr_code,
								chr_op_ind,
							   l_debug_info_ptr
								)	==		APL_FAILURE
			)
				APL_GOBACK_FAIL
			
		/*Smita - HDFCCA_027 - Name Change Event*/	
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG) == 0)/*Smita - HDFCCA_009 - Event Type Chk*/
		{
		int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);
		
		if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL

		int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_res_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);
		
		if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL
		}
		/*Smita - HDFCCA_027 - Name Change Event*/	

		/*Smita - HDFCCA_009 - Buy Back Event Checks*/
                printf("\n Event is = {%s} ",p_ca_caevent_struct_h->h_evt_class);
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK) == 0)
		{
                        printf("\n aaaaaaaassssssssssdddddddddddddd VAIBHAVK \n");
			APL_IF_DEBUG
			{
				printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			/* Check whether Ex-Date/Ex-Date(BSE) is a Holiday*/
                        /* Holiday Chk is Commented by VaibhavK Kotak: ISKB: 720 03March2008 Start
			int_retval = CA_ChkHoliday	(p_ca_caevent_struct_h,
												 p_intlenv_data_struct_h,
												 l_debug_info_ptr);
			if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL
                        Holiday Chk is Commented by VaibhavK Kotak: ISKB: 720 03March2008 End */

			int_retval = CA_ChkEventDetails (	p_ca_caevent_struct_h,
															&int_p_result,
															p_intlenv_data_struct_h,
															l_debug_info_ptr);
                        printf("\n |int_p_result|={%d}",int_p_result); 

			if (	(int_p_result == ERR_DEPO_PART_NOTFND) ||
				   (int_p_result == ERR_DEPO_PART_UNAUTH) ||
				   (int_p_result == ERR_INVALID_CODE)		)
				APL_GOBACK_FAIL
			else
				APL_IF_DEBUG
				{
					printf("Successfully Checked Event Details\n");
				}
		}
		/*Smita - HDFCCA_009 - Buy Back Event Checks*/

		/*Smita - HDFCCA_004 - Capital Reduction Event*/
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED) == 0)
		{
			APL_IF_DEBUG
			{
				printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			if (	(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_UNITS) != 0) &&
					(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_FACEVAL) != 0) &&
					(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_BOTH) != 0)	)
			{
					APL_IF_DEBUG
					{
						printf("Reduction type Not Valid\n");
					}
					CO_InsertErr(  l_debug_info_ptr,
										ERR_INVALID_CODE,
										"Reduction Type",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);

					APL_GOBACK_FAIL
			}
				
			int_retval = CA_ChkEventDetails (   p_ca_caevent_struct_h,
															&int_p_result,
															p_intlenv_data_struct_h,
															l_debug_info_ptr);
			if (int_p_result == ERR_INVALID_CODE)
				APL_GOBACK_FAIL
			else
				APL_IF_DEBUG
				{
					printf("Successfully Checked Event Details\n");
				}
		}
		/*Smita - HDFCCA_004 - Capital Reduction Event*/


				
				EXEC SQL SELECT NVL(count(*),0) 
				INTO :int_h_counter:i_counter
		 		FROM CAENTITLEMENT
				WHERE 
						CORP_ID	=:p_ca_caevent_struct_h->h_corp_id AND
						STATUS NOT IN ('DL','RV')	    AND /*Smita - Changed Col Name - HDFCCA_Base Ver*/
						rownum	<	2;
				
				IS_ANY_ORA_ERROR

				
				EXEC SQL SELECT NVL(count(*),0) 
				INTO :int_h_pay_counter
		 		FROM CACHEQUE
				WHERE 
						CORP_ID	=:p_ca_caevent_struct_h->h_corp_id	AND
						STAT_PYMT	NOT IN ('RV','DL')			AND
						rownum < 2;
				
				IS_ANY_ORA_ERROR
			
			
				EXEC SQL SELECT NVL(count(*),0) 
				INTO :int_h_glb_pay_counter
				FROM CAGLPYMT
				WHERE 
				CORP_ID	=:p_ca_caevent_struct_h->h_corp_id AND	
				STAT_PYMT	NOT IN ('AA')			AND
				rownum < 2;
				
				IS_ANY_ORA_ERROR
		
			if (	(int_h_counter != 0) ||
					(int_h_pay_counter != 0) ||					
					(int_h_glb_pay_counter != 0) 	
				)	
			{

 				if (int_h_counter != 0)			
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_UNREV_ENTITL_CANT_REV_EVNT,
										p_ca_caevent_struct_h->h_corp_id,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);				
				}

				if (int_h_pay_counter != 0)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_UNREV_PYMT_CANT_REV_EVNT,
										p_ca_caevent_struct_h->h_corp_id,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);				
				}

				if (int_h_glb_pay_counter != 0)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_UNAUT_GPPYMT_CANT_REV_EVNT,
										p_ca_caevent_struct_h->h_corp_id,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);				
				}
					APL_GOBACK_FAIL

			}

		
		EXEC SQL INSERT INTO CAEVENTMG VALUES (:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_EVENTIMG,
														p_ca_caevent_struct_h->h_corp_id,
														APL_NULL_STRING,
														APL_NULL_STRING) 
	
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Image Record inserted successfuly",NULL,p_intlenv_data_struct_h);
		}
      
	
		if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}

			strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
			strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_REV_UAUTH);
			strcpy(p_ca_caevent_struct_h->h_maker,p_intlenv_data_struct_h->usr);
			strcpy(p_ca_caevent_struct_h->h_maker_dt,pro_sys_date);

		
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		{
			APL_GOBACK_FAIL
		}
		strcpy(p_ca_caevent_struct_h->h_access_stamp,pro_sys_date);
		
		EXEC SQL UPDATE CAEVENT	
			SET
				EVT_SEND_MSG_IND=:p_ca_caevent_struct_h->h_evt_send_msg_ind,
				MAKER=:p_ca_caevent_struct_h->h_maker,
				MAKER_DT=:p_ca_caevent_struct_h->h_maker_dt,
				CHECKER=NULL,
				CHECKER_DT=NULL,
				STATUS=:p_ca_caevent_struct_h->h_evt_stat,
				PROCESSED_DATE=:p_ca_caevent_struct_h->h_stat_date,
				ACCESS_STAMP=:p_ca_caevent_struct_h->h_access_stamp
		WHERE
				ROWID=:rowid;	

		IS_ANY_ORA_ERROR;
		
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);
			
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventReverse successfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);
			
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventReverse unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
		}
}





static	int 	CA_EventDel(  CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
					                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  		      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				)
{
	struct	sqlca	sqlca;
	CA_CAEVENT_STRUCT_H		*l_ca_caeventimg_struct_h		=	NULL;
	CA_CAEVENT_STRUCT_I		*l_ca_caevent_struct_i	=	NULL;
	char				 	rowid[APL_ROWID_LEN] = APL_NULL_STRING;
	char		pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	char		chr_h_rtv_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short		i_rtv_access_stamp = 0;
	char		h_instr_code[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short		i_instr_code = 0;
	char		h_res_instr_code[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short		i_res_instr_code = 0;
	char		h_evt_stat[APL_STATUS_LEN] = APL_NULL_STRING;
	short		i_evt_stat = 0;
	char		h_maker[APL_USERID_LEN] = APL_NULL_STRING;
	short		i_maker =0;
	char		chr_op_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	int		int_retval = 0;/*Smita - HDFCCA_027*/
	int		int_p_result = 0; /*Smita - HDFCCA_009*/ // AIX -Warnings Removal


	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered CA_EventDel function",NULL,p_intlenv_data_struct_h);
	}

	if(	!strlen(p_ca_caevent_struct_h->h_access_stamp)	)
	{
		APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
	}
					
	if(strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes */
	{
					
	if(	!strlen(p_ca_caevent_struct_h->h_corp_id)	)
	{
		APL_DATA_MISSING("Corporate Action ID",APL_NULL_STRING,APL_NULL_STRING)	
	}
	}

	if	(	!strlen(p_ca_caevent_struct_h->h_evt_stat)	)
	{
		APL_DATA_MISSING("Event Status",APL_NULL_STRING,APL_NULL_STRING)	
	}
	
	if	(	 CO_ChkErr(*l_debug_info_ptr)	== APL_SUCCESS	)
			APL_GOBACK_FAIL
			
	(l_ca_caeventimg_struct_h) = (CA_CAEVENT_STRUCT_H*)calloc(2,sizeof(CA_CAEVENT_STRUCT_H));	
	APL_MALLOC_FAIL(l_ca_caeventimg_struct_h) 
		
	(l_ca_caevent_struct_i) = (CA_CAEVENT_STRUCT_I*)calloc(2,sizeof(CA_CAEVENT_STRUCT_I));	
	APL_MALLOC_FAIL(l_ca_caevent_struct_i) 

	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_corp_id is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_instr_code is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_res_instr_code is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_contactinfo is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_info_nbr is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_entinfo_no is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_maker is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_checker is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_proc_oth is string;
   EXEC SQL VAR   l_ca_caeventimg_struct_h->h_nser_info is string;
   EXEC SQL VAR   l_ca_caeventimg_struct_h->h_nrep_date_a is string;
   EXEC SQL VAR   l_ca_caeventimg_struct_h->h_comp_info1 is string;
   EXEC SQL VAR   l_ca_caeventimg_struct_h->h_inco_info1 is string; 
	EXEC SQL VAR   l_ca_caeventimg_struct_h->h_txnr_info1 is string; 
			
			printf("***before select from event\n");
			/* Added by Arunachalam for CS0074500 - New Bilav File upload changes START*/
						if(!strcmp(p_intlenv_data_struct_h->h_process,"U"))
			{
					  printf("\n *** ENTER *** *** MODE *** DELETE \n");
                                                 //DIVIDEND_TYPE check for CD event added by mahesh for bilav upload
					  	if (!strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CASH_DIV))
						{
					  EXEC SQL SELECT ROWID,CAEVENT.* 
								 INTO	:rowid,:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
								 FROM CAEVENT 
								 WHERE  DIVIDEND_TYPE=:p_ca_caevent_struct_h->h_div_class
								 and corp_id IN (select corp_id from ca_bilavid_map where bilav_id=:p_ca_caevent_struct_h->h_bilav_id
								and ca_event = :p_ca_caevent_struct_h->h_evt_class     and maker = :p_ca_caevent_struct_h->h_maker)  /*   CHANGE BY SWAPNIL JAMBLE  -New Bilav file format changes    */
								 FOR UPDATE OF CAEVENT.corp_id	; 
						}	/*  CS0074500 - New Bilav File upload changes END */
						else
						{
						EXEC SQL SELECT ROWID,CAEVENT.* 
								 INTO	:rowid,:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
								 FROM CAEVENT 
								 WHERE  corp_id IN (select corp_id from ca_bilavid_map where bilav_id=:p_ca_caevent_struct_h->h_bilav_id
								and ca_event = :p_ca_caevent_struct_h->h_evt_class     and maker = :p_ca_caevent_struct_h->h_maker)  /*   CHANGE BY SWAPNIL JAMBLE -New Bilav file format changes    */
								 FOR UPDATE OF CAEVENT.corp_id	; 
						}
					  
					  printf("\n ** ** 1 ** ** ** \n");
					  printf("***after select from event |%d|\n",sqlca.sqlcode);
			}
			
			else
			{
	EXEC SQL SELECT ROWID,CAEVENT.* 
		INTO	:rowid,:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
		FROM CAEVENT 
     	WHERE corp_id=:p_ca_caevent_struct_h->h_corp_id 
     	FOR UPDATE OF CAEVENT.corp_id	;
			printf("***after select from event |%d|\n",sqlca.sqlcode);
			}
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_EVNT_NOTFND_A,
                                          APL_NULL_STRING,
                                          APL_NULL_STRING,
                                          APL_NULL_STRING
													)	
	APL_IF_DEBUG
	{
		printf("Access Stamp From Structure = |%s|\n",p_ca_caevent_struct_h->h_access_stamp);
		printf("Access Stamp from Table = |%s|\n",l_ca_caeventimg_struct_h->h_access_stamp);
	}
	
		if (!strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes */
	{        
			  strcpy(p_ca_caevent_struct_h->h_access_stamp,l_ca_caeventimg_struct_h->h_access_stamp);
	}
	
		if (strcmp(	p_ca_caevent_struct_h->h_access_stamp,
			   l_ca_caeventimg_struct_h->h_access_stamp))		
		{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
		}
	
	if	(	(strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_INT))	&&	
			(strcmp(l_ca_caeventimg_struct_h->h_evt_stat,APL_STATUS_UNAUTH))		
		)
	{
				CO_InsertErr(l_debug_info_ptr,
									ERR_EVNT_STS_INVALIDDEL,
									l_ca_caeventimg_struct_h->h_evt_stat,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
	}
 
	printf("***before evtimg status |%d|\n",sqlca.sqlcode);
	if	(	!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,APL_STATUS_UNAUTH) )			
	{	
			printf("\n ** ** 3 ** ** ** : |%s|\n",p_intlenv_data_struct_h->usr);
		if(!strcmp(p_intlenv_data_struct_h->h_process,"U"))
			  {
						 printf("\n ** ** 4 ** ** ** :|%s|%s|\n",l_ca_caeventimg_struct_h->h_maker,p_ca_caevent_struct_h->h_maker);
                   /**** Commented By vinay For Production Fix : 0410207 *************/
						 /*if ( strcmp(l_ca_caeventimg_struct_h->h_maker,p_ca_caevent_struct_h->h_maker))
						 {
									printf("\n ** ** 5 ** ** ** \n");
									CO_InsertErr(l_debug_info_ptr,
														 ERR_RECMOD_DIFFUSER,
														 l_ca_caeventimg_struct_h->h_maker,
														 p_intlenv_data_struct_h->usr,
														 APL_NULL_STRING,
														 __LINE__,
														 __FILE__
													);
									APL_GOBACK_FAIL
						 }*/
			  }
			  else
			  {
						 printf("\n ** ** 6 ** ** ** :|%s|%s|\n",l_ca_caeventimg_struct_h->h_maker,p_intlenv_data_struct_h->usr);
                   	if ( strcmp(l_ca_caeventimg_struct_h->h_maker,p_intlenv_data_struct_h->usr)	)
					{
					CO_InsertErr(l_debug_info_ptr,
										ERR_RECMOD_DIFFUSER,
										l_ca_caeventimg_struct_h->h_maker,
										p_intlenv_data_struct_h->usr,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
									);
					APL_GOBACK_FAIL
					}
			  }
	}
	
	printf("***before strcmp evtoffer |%d|\n",sqlca.sqlcode);
	if ( !strcmp(l_ca_caeventimg_struct_h->h_evt_class,EVT_OFFER) )
	{
			strcpy(chr_op_ind,APL_YES_IND);
	}
	else
	{
		strcpy(chr_op_ind,APL_NO_IND);
	}

	printf("***before chkinstr |%d|\n",sqlca.sqlcode);
	if	(	CA_ChkInstr(l_ca_caeventimg_struct_h->h_instr_code,
								l_ca_caeventimg_struct_h->h_res_instr_code,
								chr_op_ind,
							   l_debug_info_ptr
								)	==		APL_FAILURE
		)
		APL_GOBACK_FAIL

		/*Smita - HDFCCA_027 - Name Change Event*/	
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_NM_CHNG) == 0) /*Smita - HDFCCA_009 - Chk Event Type*/
		{
			int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_cmp_code,
						p_intlenv_data_struct_h,
						l_debug_info_ptr);
		
			if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL

			int_retval = CA_ChkCmp(	p_ca_caevent_struct_h->h_res_cmp_code,
						p_intlenv_data_struct_h,
						l_debug_info_ptr);
		
			if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL
		}
		/*Smita - HDFCCA_027 - Name Change Event*/	

		/*Smita - HDFCCA_009 - Buy Back Event Checks*/
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_BUY_BACK) == 0)
		{
			APL_IF_DEBUG
			{
				printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			/* Check whether Ex-Date/Ex-Date(BSE) is a Holiday*/
			int_retval = CA_ChkHoliday	(p_ca_caevent_struct_h,
												 p_intlenv_data_struct_h,
												 l_debug_info_ptr);
			if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL

			int_retval = CA_ChkEventDetails (	p_ca_caevent_struct_h,
															&int_p_result,
															p_intlenv_data_struct_h,
															l_debug_info_ptr);
			if (	(int_p_result == ERR_DEPO_PART_NOTFND) ||
				   (int_p_result == ERR_DEPO_PART_UNAUTH) ||
				   (int_p_result == ERR_INVALID_CODE)	)
				APL_GOBACK_FAIL
			else
				APL_IF_DEBUG
				{
					printf("Successfully Checked Event Details\n");
				}
		}
		/*Smita - HDFCCA_009 - Buy Back Event Checks*/

		/*Smita - HDFCCA_004 - Capital Reduction Event*/
		if (strcmp(p_ca_caevent_struct_h->h_evt_class,EVT_CAP_RED) == 0)
		{
			APL_IF_DEBUG
			{
				printf("Check Details of Event = |%s|\n",p_ca_caevent_struct_h->h_evt_class);
			}
			if (	(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_UNITS) != 0) &&
					(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_FACEVAL) != 0) &&
					(strcmp(p_ca_caevent_struct_h->h_div_class,RED_TYP_BOTH) != 0)	)
			{
					APL_IF_DEBUG
					{
						printf("Reduction type Not Valid\n");
					}
					CO_InsertErr(  l_debug_info_ptr,
										ERR_INVALID_CODE,
										"Reduction Type",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);

					APL_GOBACK_FAIL
			}
				
			int_retval = CA_ChkEventDetails (   p_ca_caevent_struct_h,
															&int_p_result,
															p_intlenv_data_struct_h,
															l_debug_info_ptr);
			if (int_p_result == ERR_INVALID_CODE)
				APL_GOBACK_FAIL
			else
				APL_IF_DEBUG
				{
					printf("Successfully Checked Event Details\n");
				}
		}
		/*Smita - HDFCCA_004 - Capital Reduction Event*/

	
		if	(	!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,STATUS_RDY_INT) 
			 )		
		{
			EXEC SQL INSERT INTO CAEVENTMG VALUES (:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i);

			IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_EVENTIMG,
														p_ca_caevent_struct_h->h_corp_id,
														APL_NULL_STRING,
														APL_NULL_STRING) 
      
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Image Record inserted successfuly",NULL,p_intlenv_data_struct_h);
			}	
		}

		if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		{
				APL_GOBACK_FAIL
		}
 
		if	(	!strcmp(l_ca_caeventimg_struct_h->h_evt_stat,APL_STATUS_UNAUTH) )		
		{
			printf("***before delete canotify |%d|\n",sqlca.sqlcode);
				EXEC SQL DELETE CANOTIFY
				WHERE corp_id = :p_ca_caevent_struct_h->h_corp_id;
			printf("***after delete canotify |%d|\n",sqlca.sqlcode);
				
				IS_ANY_ORA_ERROR
				
			printf("***before delete caevent |%s|\n",rowid);
				EXEC SQL DELETE CAEVENT
			   WHERE
            ROWID=:rowid; 
			printf("***after delete caevent |%d|\n",sqlca.sqlcode);
	
				IS_ANY_ORA_ERROR	
				
			printf("\n CORP_ID *** |%s| *** \n",p_ca_caevent_struct_h->h_corp_id);
				 EXEC SQL DELETE FROM CA_BILAVID_MAP 
							where corp_id=:p_ca_caevent_struct_h->h_corp_id;

			printf("***after delete CA_BILAVID_MAP |%d|\n",sqlca.sqlcode);
						
				IS_ANY_ORA_ERROR
				

				EXEC SQL DELETE CASYNDMEM
				WHERE corp_id = :p_ca_caevent_struct_h->h_corp_id;
			printf("***after delete casyndmem |%d|\n",sqlca.sqlcode);
	
				IS_ANY_ORA_ERROR	
				
				APL_GOBACK_SUCCESS
		}
		else
		{
				strcpy(p_ca_caevent_struct_h->h_evt_stat,STATUS_DEL_UNAUTH);
		}

		strcpy(p_ca_caevent_struct_h->h_stat_date,pro_sys_date);
		
		if(strcmp(p_intlenv_data_struct_h->h_process,"U"))/* Added by Arunachalam for CS0074500 - New Bilav File upload changes */

		{
			strcpy(p_ca_caevent_struct_h->h_maker,p_intlenv_data_struct_h->usr);
		}
	
		
		
		strcpy(p_ca_caevent_struct_h->h_maker_dt,pro_sys_date);
		
			printf("***before rtvsysdttime |%d|\n",sqlca.sqlcode);
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		{
			APL_GOBACK_FAIL
		}
			printf("***after rtvsysdttime |%d|\n",sqlca.sqlcode);
		strcpy(p_ca_caevent_struct_h->h_access_stamp,pro_sys_date);
	
		/*Smita - HDFCCA_027 - Changed Column Name*/	
			printf("***before update aevent |%d|\n",sqlca.sqlcode);
		EXEC SQL UPDATE CAEVENT	
			SET
				MAKER=:p_ca_caevent_struct_h->h_maker,
				MAKER_DT=:p_ca_caevent_struct_h->h_maker_dt,
				CHECKER=NULL,
				CHECKER_DT=NULL,
				STATUS=:p_ca_caevent_struct_h->h_evt_stat,
				PROCESSED_DATE=:p_ca_caevent_struct_h->h_stat_date,
				ACCESS_STAMP=:p_ca_caevent_struct_h->h_access_stamp
		WHERE
				ROWID=:rowid;	
			printf("***after update aevent |%d|\n",sqlca.sqlcode);

		IS_ANY_ORA_ERROR;
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);
			
			APL_IF_DEBUG
		   {
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventDel successfully",NULL,p_intlenv_data_struct_h);
			}	
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);
			
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventDel unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
		}
}

int	CA_Mod_EventRec(	CA_CAEVENT_STRUCT_H	*p_ca_caevent_struct_h,
								CA_CAEVENT_STRUCT_I	*p_ca_caevent_struct_i,
								char					*rowid,
								DEBUG_INFO_STRUCT_H		**l_debug_info_ptr
							)
{
	struct	sqlca	sqlca;
	#ifdef APL_THREADS
			APL_SET_CONTEXT
			EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered A_UpdateEventRec",NULL,NULL);
	}
	printf("Proxy Date Indicator = |%c|\n",p_ca_caevent_struct_i->i_proxy_date);
	
	EXEC SQL UPDATE CAEVENT SET
	EX_DATE =:p_ca_caevent_struct_h->h_ex_date:p_ca_caevent_struct_i->i_ex_date,	
	REC_DATE =:p_ca_caevent_struct_h->h_rec_date:p_ca_caevent_struct_i->i_rec_date,	
	DATEOF_PAYMENT =:p_ca_caevent_struct_h->h_pymt_dt:p_ca_caevent_struct_i->i_pymt_dt,
	PRELIMINARY_FLAG =:p_ca_caevent_struct_h->h_preliminary_flag:p_ca_caevent_struct_i->i_preliminary_flag,	
	PRIORITY =:p_ca_caevent_struct_h->h_priority:p_ca_caevent_struct_i->i_priority,
	RESPONSE_DATE =:p_ca_caevent_struct_h->h_respons_date:p_ca_caevent_struct_i->i_respons_date,	
	EXPIRY_DATE =:p_ca_caevent_struct_h->h_expire_date:p_ca_caevent_struct_i->i_expire_date,	
	PART_PYMT_DT =:p_ca_caevent_struct_h->h_pp_date:p_ca_caevent_struct_i->i_pp_date,	
	PROXY_DATE =:p_ca_caevent_struct_h->h_proxy_date:p_ca_caevent_struct_i->i_proxy_date,	
	MEETING_DATE =:p_ca_caevent_struct_h->h_meet_date:p_ca_caevent_struct_i->i_meet_date,	
	START_DATE =:p_ca_caevent_struct_h->h_start_date:p_ca_caevent_struct_i->i_start_date,	
	EFFECTIVE_DATE =:p_ca_caevent_struct_h->h_effect_date:p_ca_caevent_struct_i->i_effect_date,
	PROC_OTH =:p_ca_caevent_struct_h->h_proc_oth:p_ca_caevent_struct_i->i_proc_oth,	
	OP_EVT_CLASS =:p_ca_caevent_struct_h->h_op_evt_class:p_ca_caevent_struct_i->i_op_evt_class,	
	RESP_DT_OPND =:p_ca_caevent_struct_h->h_respons_date_openend:p_ca_caevent_struct_i->i_respons_date_openend,	
	EXP_DT_OPEN_IND =:p_ca_caevent_struct_h->h_expire_date_openend:p_ca_caevent_struct_i->i_expire_date_openend,	
	EVT_SEND_MSG_IND =:p_ca_caevent_struct_h->h_evt_send_msg_ind:p_ca_caevent_struct_i->i_evt_send_msg_ind,	
	ENTL_SEND_MSG_IND =:p_ca_caevent_struct_h->h_entl_send_msg_ind:p_ca_caevent_struct_i->i_entl_send_msg_ind,	
	PYMT_SEND_MSG_IND =:p_ca_caevent_struct_h->h_pymt_send_msg_ind:p_ca_caevent_struct_i->i_pymt_send_msg_ind,	
	EARNINGS =:p_ca_caevent_struct_h->h_earnings:p_ca_caevent_struct_i->i_earnings,	
	EARNINGS_RATE =:p_ca_caevent_struct_h->h_earnings_rt:p_ca_caevent_struct_i->i_earnings_rt,	
	RES_INSTR_CODE=:p_ca_caevent_struct_h->h_res_instr_code:p_ca_caevent_struct_i->i_res_instr_code,	
	NEW_SAFEK_QTY= :p_ca_caevent_struct_h->h_new_safek_quantity:p_ca_caevent_struct_i->i_new_safek_quantity,	
	OLD_STK_QTY=:p_ca_caevent_struct_h->h_old_safek_quantity:p_ca_caevent_struct_i->i_old_safek_quantity,	
	DISP_OF_FRACT =:p_ca_caevent_struct_h->h_disp_of_fract:p_ca_caevent_struct_i->i_disp_of_fract,	
	FRACT_PR =:p_ca_caevent_struct_h->h_f_pr:p_ca_caevent_struct_i->i_f_pr,	
	SUB_BASE_QUANTITY=:p_ca_caevent_struct_h->h_sub_base_quantity:p_ca_caevent_struct_i->i_sub_base_quantity,	
	SUB_NEW_QUANTITY=:p_ca_caevent_struct_h->h_sub_new_quantity:p_ca_caevent_struct_i->i_sub_new_quantity,
	SUB_PR=:p_ca_caevent_struct_h->h_sub_pr:p_ca_caevent_struct_i->i_sub_pr,
	RHTS_CLASS=:p_ca_caevent_struct_h->h_rights_class:p_ca_caevent_struct_i->i_rights_class,
	NEW_SAFEK_RT=:p_ca_caevent_struct_h->h_new_safek_quantity_rt:p_ca_caevent_struct_i->i_new_safek_quantity_rt,
	CONTACT_DETAILS=:p_ca_caevent_struct_h->h_contactinfo:p_ca_caevent_struct_i->i_contactinfo,
	INFO_SEQ=:p_ca_caevent_struct_h->h_info_nbr:p_ca_caevent_struct_i->i_info_nbr,
	ENTITL_INFONO=:p_ca_caevent_struct_h->h_entinfo_no:p_ca_caevent_struct_i->i_entinfo_no,
	STATUS=:p_ca_caevent_struct_h->h_evt_stat:p_ca_caevent_struct_i->i_evt_stat,
	PROCESSED_DATE=:p_ca_caevent_struct_h->h_stat_date:p_ca_caevent_struct_i->i_stat_date,	
	MAKER =:p_ca_caevent_struct_h->h_maker:p_ca_caevent_struct_i->i_maker,
	MAKER_DT =:p_ca_caevent_struct_h->h_maker_dt:p_ca_caevent_struct_i->i_maker_dt,
	CHECKER =:p_ca_caevent_struct_h->h_checker:p_ca_caevent_struct_i->i_checker,
	CHECKER_DT =:p_ca_caevent_struct_h->h_checker_dt:p_ca_caevent_struct_i->i_checker_dt,
	ACCESS_STAMP=:p_ca_caevent_struct_h->h_access_stamp:p_ca_caevent_struct_i->i_access_stamp,
	DEAL_FRM_DATE =:p_ca_caevent_struct_h->h_dealfrom_dt:p_ca_caevent_struct_i->i_dealfrom_dt,
	DEAL_TO_DATE = :p_ca_caevent_struct_h->h_dealto_dt:p_ca_caevent_struct_i->i_dealto_dt,
	SUBSCR_DATE	= :p_ca_caevent_struct_h->h_subs_date:p_ca_caevent_struct_i->i_subs_date,
	POST_DATE = :p_ca_caevent_struct_h->h_posting_date:p_ca_caevent_struct_i->i_posting_date,
	OVER_SUBSCRP = :p_ca_caevent_struct_h->h_over_subscrp:p_ca_caevent_struct_i->i_over_subscrp,
	DIVIDEND_TYPE = :p_ca_caevent_struct_h->h_div_class:p_ca_caevent_struct_i->i_div_class	,
	REDEM_RT = :p_ca_caevent_struct_h->h_redem_rt:p_ca_caevent_struct_i->i_redem_rt,
   NSER_E_INFO =:p_ca_caevent_struct_h->h_nser_info:p_ca_caevent_struct_i->i_nser_info,
   NSER_B_INFO = :p_ca_caevent_struct_h->h_nrep_date_a:p_ca_caevent_struct_i->i_nrep_date_a,
   COMP_INFO_A = :p_ca_caevent_struct_h->h_comp_info1:p_ca_caevent_struct_i->i_comp_info1,
   INCO_INFO_A = :p_ca_caevent_struct_h->h_inco_info1:p_ca_caevent_struct_i->i_inco_info1,
   RESPONSEDT_BUY = :p_ca_caevent_struct_h->h_buyresp_date:p_ca_caevent_struct_i->i_buyresp_date,     
	SELL_RESP_DATE = :p_ca_caevent_struct_h->h_sellresp_date:p_ca_caevent_struct_i->i_sellresp_date,   
   WWWADDR = :p_ca_caevent_struct_h->h_wwwaddr:p_ca_caevent_struct_i->i_wwwaddr,   
	TXNR_INFO_A = :p_ca_caevent_struct_h->h_txnr_info1:p_ca_caevent_struct_i->i_txnr_info1,
	REQD_CERTIFY = :p_ca_caevent_struct_h->h_reqd_cert_ind:p_ca_caevent_struct_i->i_reqd_cert_ind,
	EX_DT_BSE =:p_ca_caevent_struct_h->h_ex_dt_bse:p_ca_caevent_struct_i->i_ex_dt_bse,
	BC_FROM_DATE=:p_ca_caevent_struct_h->h_bc_from_date:p_ca_caevent_struct_i->i_bc_from_date,
	BC_TO_DATE=:p_ca_caevent_struct_h->h_bc_to_date:p_ca_caevent_struct_i->i_bc_to_date,
	RES_INSTR_CODE_2=:p_ca_caevent_struct_h->h_res_instr_code:p_ca_caevent_struct_i->i_res_instr_code,
	TRANS_DT=:p_ca_caevent_struct_h->h_trans_dt:p_ca_caevent_struct_i->i_trans_dt,
	CLN_CODE=:p_ca_caevent_struct_h->h_cln_code:p_ca_caevent_struct_i->i_cln_code,
	PREV_INST_DATE=:p_ca_caevent_struct_h->h_prev_inst_date:p_ca_caevent_struct_i->i_prev_inst_date,
	NEXT_INST_DATE=:p_ca_caevent_struct_h->h_next_inst_date:p_ca_caevent_struct_i->i_next_inst_date,
	INST_START_PERIOD=:p_ca_caevent_struct_h->h_inst_start_period:p_ca_caevent_struct_i->i_inst_start_period,
	INST_END_PERIOD=:p_ca_caevent_struct_h->h_inst_end_period:p_ca_caevent_struct_i->i_inst_end_period,
	LAST_PTC_DATE=:p_ca_caevent_struct_h->h_last_ptc_date:p_ca_caevent_struct_i->i_last_ptc_date,
	ALLOTMENT_LETTER=:p_ca_caevent_struct_h->h_allotment_letter:p_ca_caevent_struct_i->i_allotment_letter,
	REDEM_OPTION=:p_ca_caevent_struct_h->h_redem_option:p_ca_caevent_struct_i->i_redem_option,
	INST_AMOUNT=:p_ca_caevent_struct_h->h_inst_amount:p_ca_caevent_struct_i->i_inst_amount,
	SEND_SPLIT=:p_ca_caevent_struct_h->h_send_split:p_ca_caevent_struct_i->i_send_split,
	CMP_CODE=:p_ca_caevent_struct_h->h_cmp_code:p_ca_caevent_struct_i->i_cmp_code,
	RES_CMP_CODE=:p_ca_caevent_struct_h->h_res_cmp_code:p_ca_caevent_struct_i->i_res_cmp_code,
	EXCH_CODE=:p_ca_caevent_struct_h->h_exch_code:p_ca_caevent_struct_i->i_exch_code,
	PREMIUM=:p_ca_caevent_struct_h->h_premium:p_ca_caevent_struct_i->i_premium,
	FACE_VALUE=:p_ca_caevent_struct_h->h_face_value:p_ca_caevent_struct_i->i_face_value,
	INTEREST_TYPE=:p_ca_caevent_struct_h->h_interest_type:p_ca_caevent_struct_i->i_interest_type,
	RATIO_RCV2=:p_ca_caevent_struct_h->h_ratio_rcv2:p_ca_caevent_struct_i->i_ratio_rcv2,
	RATIO_HLD2=:p_ca_caevent_struct_h->h_ratio_hld2:p_ca_caevent_struct_i->i_ratio_hld2,
	DEPO_PART_CODE=:p_ca_caevent_struct_h->h_depo_part_code:p_ca_caevent_struct_i->i_depo_part_code,
	DEPO_CODE=:p_ca_caevent_struct_h->h_depo_code:p_ca_caevent_struct_i->i_depo_code,
    /*Added By Vaibhav */
	BK_BUILD_IND=:p_ca_caevent_struct_h->h_bk_build_ind:p_ca_caevent_struct_i->i_bk_build_ind ,
	ATTACH_CORP_ID=:p_ca_caevent_struct_h->h_attach_corp_id:p_ca_caevent_struct_i->i_attach_corp_id,
	SOURCE=:p_ca_caevent_struct_h->h_source:p_ca_caevent_struct_i->i_source,
	NEW_SAFEK_RT2=:p_ca_caevent_struct_h->h_new_safek_rt2:p_ca_caevent_struct_i->i_new_safek_rt2,
	TICK_SIZE=:p_ca_caevent_struct_h->h_tick_size:p_ca_caevent_struct_i->i_tick_size,
	ISSUE_SIZE=:p_ca_caevent_struct_h->h_issue_size:p_ca_caevent_struct_i->i_issue_size,
	QIB_MARGIN=:p_ca_caevent_struct_h->h_qib_margin:p_ca_caevent_struct_i->i_qib_margin,
	MARKET_LOT=:p_ca_caevent_struct_h->h_market_lot:p_ca_caevent_struct_i->i_market_lot,
	MAX_RTL_QTY=:p_ca_caevent_struct_h->h_max_rtl_qty:p_ca_caevent_struct_i->i_max_rtl_qty,
	MIN_QTY=:p_ca_caevent_struct_h->h_min_qty:p_ca_caevent_struct_i->i_min_qty,
	LEAD_MGR=:p_ca_caevent_struct_h->h_lead_mgr:p_ca_caevent_struct_i->i_lead_mgr,
	SYND_MEMBR=:p_ca_caevent_struct_h->h_synd_membr:p_ca_caevent_struct_i->i_synd_membr,
	CO_MGR=:p_ca_caevent_struct_h->h_co_mgr:p_ca_caevent_struct_i->i_co_mgr,
	LWR_LIMIT=:p_ca_caevent_struct_h->h_lwr_limit:p_ca_caevent_struct_i->i_lwr_limit,
	UPR_LIMIT=:p_ca_caevent_struct_h->h_upr_limit:p_ca_caevent_struct_i->i_upr_limit,
	FRACT_QTY_BAL=:p_ca_caevent_struct_h->h_fract_qty_bal:p_ca_caevent_struct_i->i_fract_qty_bal,
	FRACT_QTY_RECD=:p_ca_caevent_struct_h->h_fract_qty_recd:p_ca_caevent_struct_i->i_fract_qty_recd,
	MSG_FOLLOWDAYS2=:p_ca_caevent_struct_h->h_follmsg2date:p_ca_caevent_struct_i->i_follmsg2date																	 
	WHERE ROWID=:rowid;

	IS_ANY_ORA_ERROR;
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_EventRec successfully having updated all fields in Event record-(Modify/Reset)",NULL,NULL);
		}
		return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_EventRec unsuccessfully having tried to update all fields in Event record(Modify/Reset)",NULL,NULL);
		}	
		return (APL_FAILURE);
	}
}

static int CA_EventCmp(CA_CAEVENT_STRUCT_H    *p_ca_caevent_struct_h,
	                        CA_CAEVENT_STRUCT_H		*l_ca_caeventimg_struct_h,
							                                        int *result_c,
						          	INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      						 	DEBUG_INFO_STRUCT_H         **l_debug_info_ptr)
{
	
printf("event exdate |%s| and image exdate |%s| \n",p_ca_caevent_struct_h->h_ex_date,l_ca_caeventimg_struct_h->h_ex_date);
printf("event h_rec_date |%s| and image h_rec_date |%s| \n",p_ca_caevent_struct_h->h_rec_date,l_ca_caeventimg_struct_h->h_rec_date);
printf("event h_pymt_dt |%s| and image h_pymt_dt |%s| \n",p_ca_caevent_struct_h->h_pymt_dt,l_ca_caeventimg_struct_h->h_pymt_dt);
printf("event h_preliminary_flag |%s| and image h_preliminary_flag |%s| \n",p_ca_caevent_struct_h->h_preliminary_flag,l_ca_caeventimg_struct_h->h_preliminary_flag);
printf("event h_priority |%d| and image h_priority |%d| \n",p_ca_caevent_struct_h->h_priority,l_ca_caeventimg_struct_h->h_priority);
printf("event h_respons_date |%s| and image h_respons_date |%s| \n",p_ca_caevent_struct_h->h_respons_date,l_ca_caeventimg_struct_h->h_respons_date);
printf("event h_expire_date |%s| and image h_expire_date |%s| \n",p_ca_caevent_struct_h->h_expire_date,l_ca_caeventimg_struct_h->h_expire_date);
printf("event h_pp_date |%s| and image h_pp_date |%s| \n",p_ca_caevent_struct_h->h_pp_date,l_ca_caeventimg_struct_h->h_pp_date);
printf("event h_proxy_date |%s| and image h_proxy_date |%s| \n",p_ca_caevent_struct_h->h_proxy_date,l_ca_caeventimg_struct_h->h_proxy_date);
printf("event h_meet_date |%s| and image h_meet_date |%s| \n",p_ca_caevent_struct_h->h_meet_date,l_ca_caeventimg_struct_h->h_meet_date);
printf("event h_start_date |%s| and image h_start_date |%s| \n",p_ca_caevent_struct_h->h_start_date,l_ca_caeventimg_struct_h->h_start_date);
printf("event h_effect_date |%s| and image h_effect_date |%s| \n",p_ca_caevent_struct_h->h_effect_date,l_ca_caeventimg_struct_h->h_effect_date);
printf("event h_proc_oth |%s| and image h_proc_oth |%s| \n",p_ca_caevent_struct_h->h_proc_oth,l_ca_caeventimg_struct_h->h_proc_oth);
printf("event h_op_evt_class |%s| and image h_op_evt_class |%s| \n",p_ca_caevent_struct_h->h_op_evt_class,l_ca_caeventimg_struct_h->h_op_evt_class);
printf("event h_respons_date_openend |%s| and image h_respons_date_openend |%s| \n",p_ca_caevent_struct_h->h_respons_date_openend,l_ca_caeventimg_struct_h->h_respons_date_openend);
printf("event h_expire_date_openend |%s| and image h_expire_date_openend |%s| \n",p_ca_caevent_struct_h->h_expire_date_openend,l_ca_caeventimg_struct_h->h_expire_date_openend);
printf("event h_evt_send_msg_ind |%s| and image h_evt_send_msg_ind |%s| \n",p_ca_caevent_struct_h->h_evt_send_msg_ind,l_ca_caeventimg_struct_h->h_evt_send_msg_ind);
printf("event h_entl_send_msg_ind |%s| and image h_entl_send_msg_ind |%s| \n",p_ca_caevent_struct_h->h_entl_send_msg_ind,l_ca_caeventimg_struct_h->h_entl_send_msg_ind);
printf("event h_pymt_send_msg_ind |%s| and image h_pymt_send_msg_ind |%s| \n",p_ca_caevent_struct_h->h_pymt_send_msg_ind,l_ca_caeventimg_struct_h->h_pymt_send_msg_ind);
printf("event h_earnings |%lf| and image h_earnings |%lf| \n",p_ca_caevent_struct_h->h_earnings,l_ca_caeventimg_struct_h->h_earnings);
printf("event h_res_instr_code |%s| and image h_res_instr_code |%s| \n",p_ca_caevent_struct_h->h_res_instr_code,l_ca_caeventimg_struct_h->h_res_instr_code);
printf("event h_new_safek_quantity |%d| and image h_new_safek_quantity |%d| \n",p_ca_caevent_struct_h->h_new_safek_quantity,l_ca_caeventimg_struct_h->h_new_safek_quantity);
printf("event h_old_safek_quantity |%d| and image h_old_safek_quantity |%d| \n",p_ca_caevent_struct_h->h_old_safek_quantity,l_ca_caeventimg_struct_h->h_old_safek_quantity);
printf("event h_disp_of_fract |%s| and image h_disp_of_fract |%s| \n",p_ca_caevent_struct_h->h_disp_of_fract,l_ca_caeventimg_struct_h->h_disp_of_fract);
printf("event h_f_pr |%lf| and image h_f_pr |%lf| \n",p_ca_caevent_struct_h->h_f_pr,l_ca_caeventimg_struct_h->h_f_pr);
printf("event h_sub_base_quantity |%d| and image h_sub_base_quantity |%d| \n",p_ca_caevent_struct_h->h_sub_base_quantity,l_ca_caeventimg_struct_h->h_sub_base_quantity);
printf("event h_sub_new_quantity |%lf| and image h_sub_new_quantity |%lf| \n",p_ca_caevent_struct_h->h_sub_new_quantity,l_ca_caeventimg_struct_h->h_sub_new_quantity);
printf("event h_sub_pr |%lf| and image h_sub_pr |%lf| \n",p_ca_caevent_struct_h->h_sub_pr,l_ca_caeventimg_struct_h->h_sub_pr);
printf("event h_rights_class |%s| and image h_earnings_rt |%s| \n",p_ca_caevent_struct_h->h_rights_class,l_ca_caeventimg_struct_h->h_rights_class);
printf("event h_new_safek_quantity_rt |%lf| and image h_new_safek_quantity_rt |%lf| \n",p_ca_caevent_struct_h->h_new_safek_quantity_rt,l_ca_caeventimg_struct_h->h_new_safek_quantity_rt);
printf("event h_contactinfo |%s| and image h_contactinfo |%s| \n",p_ca_caevent_struct_h->h_contactinfo,l_ca_caeventimg_struct_h->h_contactinfo);
printf("event h_info_nbr |%s| and image h_info_nbr |%s| \n",p_ca_caevent_struct_h->h_info_nbr,l_ca_caeventimg_struct_h->h_info_nbr);
printf("event h_entinfo_no |%s| and image h_entinfo_no |%s| \n",p_ca_caevent_struct_h->h_entinfo_no,l_ca_caeventimg_struct_h->h_entinfo_no);
printf("event h_dealfrom_dt |%s| and image h_dealfrom_dt |%s| \n",p_ca_caevent_struct_h->h_dealfrom_dt,l_ca_caeventimg_struct_h->h_dealfrom_dt);
printf("event h_dealto_dt |%s| and image h_dealto_dt |%s| \n",p_ca_caevent_struct_h->h_dealto_dt,l_ca_caeventimg_struct_h->h_dealto_dt);
printf("event h_subs_date |%s| and image h_subs_date |%s| \n",p_ca_caevent_struct_h->h_subs_date,l_ca_caeventimg_struct_h->h_subs_date);
printf("event h_posting_date |%s| and image h_posting_date |%s| \n",p_ca_caevent_struct_h->h_posting_date,l_ca_caeventimg_struct_h->h_posting_date);
printf("event h_over_subscrp |%s| and image h_over_subscrp |%s| \n",p_ca_caevent_struct_h->h_over_subscrp,l_ca_caeventimg_struct_h->h_over_subscrp);
printf("event h_div_class |%s| and image h_div_class |%s| \n",p_ca_caevent_struct_h->h_div_class,l_ca_caeventimg_struct_h->h_div_class);
printf("event h_redem_rt |%lf| and image h_redem_rt |%lf| \n",p_ca_caevent_struct_h->h_redem_rt,l_ca_caeventimg_struct_h->h_redem_rt);
printf("event h_nser_info |%s| and image h_nser_info |%s| \n",p_ca_caevent_struct_h->h_nser_info,l_ca_caeventimg_struct_h->h_nser_info);
printf("event h_nrep_date_a |%s| and image h_nrep_date_a |%s| \n",p_ca_caevent_struct_h->h_nrep_date_a,l_ca_caeventimg_struct_h->h_nrep_date_a);
printf("event h_comp_info1 |%s| and image h_comp_info1 |%s| \n",p_ca_caevent_struct_h->h_comp_info1,l_ca_caeventimg_struct_h->h_comp_info1);
printf("event h_inco_info1 |%s| and image h_inco_info1 |%s| \n",p_ca_caevent_struct_h->h_inco_info1,l_ca_caeventimg_struct_h->h_inco_info1);
printf("event h_buyresp_date |%s| and image h_buyresp_date |%s| \n",p_ca_caevent_struct_h->h_buyresp_date,l_ca_caeventimg_struct_h->h_buyresp_date);
printf("event h_sellresp_date |%s| and image h_sellresp_date |%s| \n",p_ca_caevent_struct_h->h_sellresp_date,l_ca_caeventimg_struct_h->h_sellresp_date);
printf("event h_wwwaddr |%s| and image h_wwwaddr |%s| \n",p_ca_caevent_struct_h->h_wwwaddr,l_ca_caeventimg_struct_h->h_wwwaddr);
printf("event h_txnr_info1 |%s| and image h_txnr_info1 |%s| \n",p_ca_caevent_struct_h->h_txnr_info1,l_ca_caeventimg_struct_h->h_txnr_info1);
printf("event h_reqd_cert_ind |%s| and image h_reqd_cert_ind |%s| \n",p_ca_caevent_struct_h->h_reqd_cert_ind,l_ca_caeventimg_struct_h->h_reqd_cert_ind);
printf("event h_ex_dt_bse |%s| and image h_ex_dt_bse |%s| \n",p_ca_caevent_struct_h->h_ex_dt_bse,l_ca_caeventimg_struct_h->h_ex_dt_bse);
printf("event h_bc_from_date |%s| and image h_bc_from_date |%s| \n",p_ca_caevent_struct_h->h_bc_from_date,l_ca_caeventimg_struct_h->h_bc_from_date);
printf("event h_bc_to_date |%s| and image h_bc_to_date |%s| \n",p_ca_caevent_struct_h->h_bc_to_date,l_ca_caeventimg_struct_h->h_bc_to_date);
printf("event h_res_instr_code |%s| and image h_res_instr_code |%s| \n",p_ca_caevent_struct_h->h_res_instr_code,l_ca_caeventimg_struct_h->h_res_instr_code);
printf("event h_trans_dt |%s| and image h_trans_dt |%s| \n",p_ca_caevent_struct_h->h_trans_dt,l_ca_caeventimg_struct_h->h_trans_dt);
printf("event h_cln_code |%s| and image h_cln_code |%s| \n",p_ca_caevent_struct_h->h_cln_code,l_ca_caeventimg_struct_h->h_cln_code);
printf("event h_prev_inst_date |%s| and image h_prev_inst_date |%s| \n",p_ca_caevent_struct_h->h_prev_inst_date,l_ca_caeventimg_struct_h->h_prev_inst_date);
printf("event h_next_inst_date |%s| and image h_next_inst_date |%s| \n",p_ca_caevent_struct_h->h_next_inst_date,l_ca_caeventimg_struct_h->h_next_inst_date);
printf("event h_inst_start_period |%s| and image h_inst_start_period |%s| \n",p_ca_caevent_struct_h->h_inst_start_period,l_ca_caeventimg_struct_h->h_inst_start_period);
printf("event h_inst_end_period |%s| and image h_inst_end_period |%s| \n",p_ca_caevent_struct_h->h_inst_end_period,l_ca_caeventimg_struct_h->h_inst_end_period);
printf("event h_last_ptc_date |%s| and image h_last_ptc_date |%s| \n",p_ca_caevent_struct_h->h_last_ptc_date,l_ca_caeventimg_struct_h->h_last_ptc_date);
printf("event h_allotment_letter |%s| and image h_allotment_letter |%s| \n",p_ca_caevent_struct_h->h_allotment_letter,l_ca_caeventimg_struct_h->h_allotment_letter);
printf("event h_redem_option |%s| and image h_redem_option |%s| \n",p_ca_caevent_struct_h->h_redem_option,l_ca_caeventimg_struct_h->h_redem_option);
printf("event h_inst_amount |%lf| and image h_inst_amount |%lf| \n",p_ca_caevent_struct_h->h_inst_amount,l_ca_caeventimg_struct_h->h_inst_amount);
printf("event h_send_split |%s| and image h_send_split |%s| \n",p_ca_caevent_struct_h->h_send_split,l_ca_caeventimg_struct_h->h_send_split);
printf("event h_cmp_code |%s| and image h_cmp_code |%s| \n",p_ca_caevent_struct_h->h_cmp_code,l_ca_caeventimg_struct_h->h_cmp_code);
printf("event h_res_cmp_code |%s| and image h_res_cmp_code |%s| \n",p_ca_caevent_struct_h->h_res_cmp_code,l_ca_caeventimg_struct_h->h_res_cmp_code);
printf("event h_exch_code |%s| and image h_exch_code |%s| \n",p_ca_caevent_struct_h->h_exch_code,l_ca_caeventimg_struct_h->h_exch_code);
printf("event h_face_value |%lf| and image h_face_value |%lf| \n",p_ca_caevent_struct_h->h_face_value,l_ca_caeventimg_struct_h->h_face_value);
printf("event h_premium |%lf| and image h_premium |%lf| \n",p_ca_caevent_struct_h->h_premium,l_ca_caeventimg_struct_h->h_premium);
printf("event h_interest_type |%s| and image h_interest_type |%s| \n",p_ca_caevent_struct_h->h_interest_type,l_ca_caeventimg_struct_h->h_interest_type);
printf("event h_ratio_rcv2 |%d| and image h_ratio_rcv2 |%d| \n",p_ca_caevent_struct_h->h_ratio_rcv2,l_ca_caeventimg_struct_h->h_ratio_rcv2);
printf("event h_ratio_hld2 |%d| and image h_ratio_hld2 |%d| \n",p_ca_caevent_struct_h->h_ratio_hld2,l_ca_caeventimg_struct_h->h_ratio_hld2);
printf("event h_interest_type |%s| and image h_interest_type |%s| \n",p_ca_caevent_struct_h->h_interest_type,l_ca_caeventimg_struct_h->h_interest_type);
printf("event h_ratio_rcv2 |%d| and image h_ratio_rcv2 |%d| \n",p_ca_caevent_struct_h->h_ratio_rcv2,l_ca_caeventimg_struct_h->h_ratio_rcv2);
printf("event h_depo_part_code |%s| and image h_depo_part_code |%s| \n",p_ca_caevent_struct_h->h_depo_part_code,l_ca_caeventimg_struct_h->h_depo_part_code);
printf("event h_depo_code |%s| and image h_depo_code |%s| \n",p_ca_caevent_struct_h->h_depo_code,l_ca_caeventimg_struct_h->h_depo_code);
printf("event h_bk_build_ind |%s| and image h_bk_build_ind |%s| \n",p_ca_caevent_struct_h->h_bk_build_ind,l_ca_caeventimg_struct_h->h_bk_build_ind);
printf("event h_attach_corp_id |%s| and image h_attach_corp_id |%s| \n",p_ca_caevent_struct_h->h_attach_corp_id,l_ca_caeventimg_struct_h->h_attach_corp_id);
printf("event h_source |%s| and image h_source |%s| \n",p_ca_caevent_struct_h->h_source,l_ca_caeventimg_struct_h->h_source);
printf("event h_new_safek_rt2 |%lf| and image h_new_safek_rt2 |%lf| \n",p_ca_caevent_struct_h->h_new_safek_rt2,l_ca_caeventimg_struct_h->h_new_safek_rt2);
printf("event h_tick_size |%lf| and image h_tick_size |%lf| \n",p_ca_caevent_struct_h->h_tick_size,l_ca_caeventimg_struct_h->h_tick_size);
printf("event h_issue_size |%lf| and image h_issue_size |%lf| \n",p_ca_caevent_struct_h->h_issue_size,l_ca_caeventimg_struct_h->h_issue_size);
printf("event h_qib_margin |%lf| and image h_qib_margin |%lf| \n",p_ca_caevent_struct_h->h_qib_margin,l_ca_caeventimg_struct_h->h_qib_margin);
printf("event h_market_lot |%d| and image h_market_lot |%d| \n",p_ca_caevent_struct_h->h_market_lot,l_ca_caeventimg_struct_h->h_market_lot);
printf("event h_max_rtl_qty |%d| and image h_max_rtl_qty |%d| \n",p_ca_caevent_struct_h->h_max_rtl_qty,l_ca_caeventimg_struct_h->h_max_rtl_qty);
printf("event h_min_qty |%d| and image h_min_qty |%d| \n",p_ca_caevent_struct_h->h_min_qty,l_ca_caeventimg_struct_h->h_min_qty);
printf("event h_lead_mgr |%s| and image h_lead_mgr |%s| \n",p_ca_caevent_struct_h->h_lead_mgr,l_ca_caeventimg_struct_h->h_lead_mgr);
printf("event h_synd_membr |%s| and image h_synd_membr |%s| \n",p_ca_caevent_struct_h->h_synd_membr,l_ca_caeventimg_struct_h->h_synd_membr);
printf("event h_co_mgr |%s| and image h_co_mgr |%s| \n",p_ca_caevent_struct_h->h_co_mgr,l_ca_caeventimg_struct_h->h_co_mgr);
printf("event h_lwr_limit |%lf| and image h_lwr_limit |%lf| \n",p_ca_caevent_struct_h->h_lwr_limit,l_ca_caeventimg_struct_h->h_lwr_limit);
printf("event h_upr_limit |%lf| and image h_upr_limit |%lf| \n",p_ca_caevent_struct_h->h_upr_limit,l_ca_caeventimg_struct_h->h_upr_limit);
printf("event h_fract_qty_bal |%lf| and image h_fract_qty_bal |%lf| \n",p_ca_caevent_struct_h->h_fract_qty_bal,l_ca_caeventimg_struct_h->h_fract_qty_bal);
printf("event h_fract_qty_recd |%lf| and image h_fract_qty_recd |%lf| \n",p_ca_caevent_struct_h->h_fract_qty_recd,l_ca_caeventimg_struct_h->h_fract_qty_recd);
printf("event h_follmsg2date |%s| and image h_follmsg2date |%s| \n",p_ca_caevent_struct_h->h_follmsg2date,l_ca_caeventimg_struct_h->h_follmsg2date);



	
printf("Change Result before |%d|\n", *result_c); 
*result_c = 0;
if(strlen(p_ca_caevent_struct_h->h_ex_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_ex_date,l_ca_caeventimg_struct_h->h_ex_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_pymt_dt)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_pymt_dt,l_ca_caeventimg_struct_h->h_pymt_dt) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_preliminary_flag)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_preliminary_flag,l_ca_caeventimg_struct_h->h_preliminary_flag) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_priority != 0)
{ 
	if(p_ca_caevent_struct_h->h_priority == l_ca_caeventimg_struct_h->h_priority)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_respons_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_respons_date,l_ca_caeventimg_struct_h->h_respons_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_expire_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_expire_date,l_ca_caeventimg_struct_h->h_expire_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_pp_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_pp_date,l_ca_caeventimg_struct_h->h_pp_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_proxy_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_proxy_date,l_ca_caeventimg_struct_h->h_proxy_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_meet_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_meet_date,l_ca_caeventimg_struct_h->h_meet_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_start_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_start_date,l_ca_caeventimg_struct_h->h_start_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_effect_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_effect_date,l_ca_caeventimg_struct_h->h_effect_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_proc_oth)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_proc_oth,l_ca_caeventimg_struct_h->h_proc_oth) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_op_evt_class)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_op_evt_class,l_ca_caeventimg_struct_h->h_op_evt_class) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_respons_date_openend)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_respons_date_openend,l_ca_caeventimg_struct_h->h_respons_date_openend) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_expire_date_openend)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_expire_date_openend,l_ca_caeventimg_struct_h->h_expire_date_openend) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_evt_send_msg_ind)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_evt_send_msg_ind,l_ca_caeventimg_struct_h->h_evt_send_msg_ind) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_entl_send_msg_ind)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_entl_send_msg_ind,l_ca_caeventimg_struct_h->h_entl_send_msg_ind) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
}
if(strlen(p_ca_caevent_struct_h->h_pymt_send_msg_ind)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_pymt_send_msg_ind,l_ca_caeventimg_struct_h->h_pymt_send_msg_ind) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_earnings != 0)
{ 
	if(p_ca_caevent_struct_h->h_earnings == l_ca_caeventimg_struct_h->h_earnings)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_earnings_rt != 0)
{ 
	if(p_ca_caevent_struct_h->h_earnings_rt == l_ca_caeventimg_struct_h->h_earnings_rt)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_res_instr_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_res_instr_code,l_ca_caeventimg_struct_h->h_res_instr_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_new_safek_quantity != 0)
{ 
	if(p_ca_caevent_struct_h->h_new_safek_quantity == l_ca_caeventimg_struct_h->h_new_safek_quantity)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_old_safek_quantity != 0)
{ 
	if(p_ca_caevent_struct_h->h_old_safek_quantity == l_ca_caeventimg_struct_h->h_old_safek_quantity)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_disp_of_fract)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_disp_of_fract,l_ca_caeventimg_struct_h->h_disp_of_fract) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_f_pr != 0)
{ 
	if(p_ca_caevent_struct_h->h_f_pr == l_ca_caeventimg_struct_h->h_f_pr)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_sub_base_quantity != 0)
{ 
	if(p_ca_caevent_struct_h->h_sub_base_quantity == l_ca_caeventimg_struct_h->h_sub_base_quantity)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_sub_new_quantity != 0)
{ 
	if(p_ca_caevent_struct_h->h_sub_new_quantity == l_ca_caeventimg_struct_h->h_sub_new_quantity)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_sub_pr != 0)
{ 
	if(p_ca_caevent_struct_h->h_sub_pr == l_ca_caeventimg_struct_h->h_sub_pr)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_rights_class)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_rights_class,l_ca_caeventimg_struct_h->h_rights_class) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_new_safek_quantity_rt != 0)
{ 
	if(p_ca_caevent_struct_h->h_new_safek_quantity_rt == l_ca_caeventimg_struct_h->h_new_safek_quantity_rt)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_contactinfo)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_contactinfo,l_ca_caeventimg_struct_h->h_contactinfo) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_dealfrom_dt)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_dealfrom_dt,l_ca_caeventimg_struct_h->h_dealfrom_dt) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_dealto_dt)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_dealto_dt,l_ca_caeventimg_struct_h->h_dealto_dt) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_subs_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_subs_date,l_ca_caeventimg_struct_h->h_subs_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_posting_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_posting_date,l_ca_caeventimg_struct_h->h_posting_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_over_subscrp)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_over_subscrp,l_ca_caeventimg_struct_h->h_over_subscrp) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_div_class)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_div_class,l_ca_caeventimg_struct_h->h_div_class) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_redem_rt != 0)
{ 
	if(p_ca_caevent_struct_h->h_redem_rt == l_ca_caeventimg_struct_h->h_redem_rt)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_nser_info)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_nser_info,l_ca_caeventimg_struct_h->h_nser_info) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_nrep_date_a)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_nrep_date_a,l_ca_caeventimg_struct_h->h_nrep_date_a) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_comp_info1)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_comp_info1,l_ca_caeventimg_struct_h->h_comp_info1) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_inco_info1)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_inco_info1,l_ca_caeventimg_struct_h->h_inco_info1) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_buyresp_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_buyresp_date,l_ca_caeventimg_struct_h->h_buyresp_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_sellresp_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_sellresp_date,l_ca_caeventimg_struct_h->h_sellresp_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_wwwaddr)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_wwwaddr,l_ca_caeventimg_struct_h->h_wwwaddr) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_txnr_info1)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_txnr_info1,l_ca_caeventimg_struct_h->h_txnr_info1) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_reqd_cert_ind)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_reqd_cert_ind,l_ca_caeventimg_struct_h->h_reqd_cert_ind) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_ex_dt_bse)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_ex_dt_bse,l_ca_caeventimg_struct_h->h_ex_dt_bse) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
/*if(strlen(p_ca_caevent_struct_h->h_bc_from_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_bc_from_date,l_ca_caeventimg_struct_h->h_bc_from_date) == 0)
		*result_c += 0;
	else
		*result_c += 1;
 }*/
if(strlen(p_ca_caevent_struct_h->h_bc_to_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_bc_to_date,l_ca_caeventimg_struct_h->h_bc_to_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
	if(strcmp(p_ca_caevent_struct_h->h_bc_from_date,l_ca_caeventimg_struct_h->h_bc_from_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
 else{
	if(strcmp(p_ca_caevent_struct_h->h_rec_date,l_ca_caeventimg_struct_h->h_rec_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_res_instr_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_res_instr_code,l_ca_caeventimg_struct_h->h_res_instr_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_trans_dt)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_trans_dt,l_ca_caeventimg_struct_h->h_trans_dt) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_cln_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_cln_code,l_ca_caeventimg_struct_h->h_cln_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_prev_inst_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_prev_inst_date,l_ca_caeventimg_struct_h->h_prev_inst_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_next_inst_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_next_inst_date,l_ca_caeventimg_struct_h->h_next_inst_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_inst_start_period)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_inst_start_period,l_ca_caeventimg_struct_h->h_inst_start_period) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_inst_end_period)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_inst_end_period,l_ca_caeventimg_struct_h->h_inst_end_period) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_last_ptc_date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_last_ptc_date,l_ca_caeventimg_struct_h->h_last_ptc_date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_allotment_letter)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_allotment_letter,l_ca_caeventimg_struct_h->h_allotment_letter) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_redem_option)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_redem_option,l_ca_caeventimg_struct_h->h_redem_option) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_inst_amount != 0)
{ 
	if(p_ca_caevent_struct_h->h_inst_amount == l_ca_caeventimg_struct_h->h_inst_amount) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_send_split)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_send_split,l_ca_caeventimg_struct_h->h_send_split) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_cmp_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_cmp_code,l_ca_caeventimg_struct_h->h_cmp_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_res_cmp_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_res_cmp_code,l_ca_caeventimg_struct_h->h_res_cmp_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_exch_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_exch_code,l_ca_caeventimg_struct_h->h_exch_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_premium != 0)
{
	if(p_ca_caevent_struct_h->h_premium == l_ca_caeventimg_struct_h->h_premium)	
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_face_value != 0)
{ 
	if(p_ca_caevent_struct_h->h_face_value == l_ca_caeventimg_struct_h->h_face_value) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_interest_type)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_interest_type,l_ca_caeventimg_struct_h->h_interest_type) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_ratio_rcv2 != 0)
{
	if(p_ca_caevent_struct_h->h_ratio_rcv2 == l_ca_caeventimg_struct_h->h_ratio_rcv2) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_ratio_hld2!=0)
{ 
	if(p_ca_caevent_struct_h->h_ratio_hld2 == l_ca_caeventimg_struct_h->h_ratio_hld2) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_depo_part_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_depo_part_code,l_ca_caeventimg_struct_h->h_depo_part_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_depo_code)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_depo_code,l_ca_caeventimg_struct_h->h_depo_code) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_bk_build_ind)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_bk_build_ind,l_ca_caeventimg_struct_h->h_bk_build_ind) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_attach_corp_id)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_attach_corp_id,l_ca_caeventimg_struct_h->h_attach_corp_id) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_source)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_source,l_ca_caeventimg_struct_h->h_source) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_new_safek_rt2!=0)
{ 
	if(p_ca_caevent_struct_h->h_new_safek_rt2 == l_ca_caeventimg_struct_h->h_new_safek_rt2)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_tick_size!=0)
{ 
	if(p_ca_caevent_struct_h->h_tick_size == l_ca_caeventimg_struct_h->h_tick_size)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_issue_size!=0)
{ 
	if(p_ca_caevent_struct_h->h_issue_size == l_ca_caeventimg_struct_h->h_issue_size)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_qib_margin!=0)
{ 
	if(p_ca_caevent_struct_h->h_qib_margin == l_ca_caeventimg_struct_h->h_qib_margin)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_market_lot!=0)
{ 
	if(p_ca_caevent_struct_h->h_market_lot == l_ca_caeventimg_struct_h->h_market_lot)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_max_rtl_qty!=0)
{
	if(p_ca_caevent_struct_h->h_max_rtl_qty == l_ca_caeventimg_struct_h->h_max_rtl_qty)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_min_qty!=0)
{
	if(p_ca_caevent_struct_h->h_min_qty == l_ca_caeventimg_struct_h->h_min_qty)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_lead_mgr!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_lead_mgr,l_ca_caeventimg_struct_h->h_lead_mgr) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_synd_membr)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_synd_membr,l_ca_caeventimg_struct_h->h_synd_membr) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_co_mgr)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_co_mgr,l_ca_caeventimg_struct_h->h_co_mgr) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_lwr_limit!=0)
{ 
	if(p_ca_caevent_struct_h->h_lwr_limit == l_ca_caeventimg_struct_h->h_lwr_limit) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_upr_limit!=0)
{ 
	if(p_ca_caevent_struct_h->h_upr_limit == l_ca_caeventimg_struct_h->h_upr_limit) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_fract_qty_bal!=0)
{ 
	if(p_ca_caevent_struct_h->h_fract_qty_bal == l_ca_caeventimg_struct_h->h_fract_qty_bal) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(p_ca_caevent_struct_h->h_fract_qty_recd!=0)
{ 
	if(p_ca_caevent_struct_h->h_fract_qty_recd == l_ca_caeventimg_struct_h->h_fract_qty_recd) 
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }
if(strlen(p_ca_caevent_struct_h->h_follmsg2date)!=0)
{ 
	if(strcmp(p_ca_caevent_struct_h->h_follmsg2date,l_ca_caeventimg_struct_h->h_follmsg2date) == 0)
		*result_c += 0;
	else{
		*result_c += 1;
		APL_GOBACK_SUCCESS
	}
 }



  
APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
		APL_IF_DEBUG
		{
			printf("Change Result After in success |%d|\n", *result_c);
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_EventRec successfully having updated all fields in Event record-(Modify/Reset)",NULL,NULL);
		}
		return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_EventRec unsuccessfully having tried to update all fields in Event record(Modify/Reset)",NULL,NULL);
		}	
		return (APL_FAILURE);
	}

}




static	int CA_EventPriority(	CA_CAEVENT_STRUCT_H 	*p_ca_caevent_struct_h,
									INTL_ENV_DATA_STRUCT_H	*p_intlenv_data_struct_h,
						   		DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr
									)
{
struct	sqlca	sqlca;
	CA_CAEVENT_STRUCT_I		*l_ca_caeventimg_struct_i		=	NULL;
	CA_CASECEVENT_STRUCT_H	*l_ca_casetup_struct_h		=	NULL;
	CA_CASECEVENT_STRUCT_I	*l_ca_casecevent_struct_i		=	NULL;
	int max_priority= 0;//supriya for new bilav upload
	
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entering CA_EventPriority",NULL,p_intlenv_data_struct_h);
	}
	
	   CO_ProcMonitor(APL_OUT_FILE, "BEFORE MEMORY ALLOCATION CALL", NULL, p_intlenv_data_struct_h);
	
	

			l_ca_casetup_struct_h = (CA_CASECEVENT_STRUCT_H *) calloc(1,sizeof(CA_CASECEVENT_STRUCT_H)	);	
			APL_MALLOC_FAIL(l_ca_casetup_struct_h) 
		
   CO_ProcMonitor(APL_OUT_FILE, "AMID MEMORY ALLOCATION CALL", NULL, p_intlenv_data_struct_h);
			l_ca_casecevent_struct_i = (CA_CASECEVENT_STRUCT_I *) calloc(1,sizeof(CA_CASECEVENT_STRUCT_I)	);	
			APL_MALLOC_FAIL(l_ca_casecevent_struct_i) 
			//Added by shrinath bilav new changes production issue start 27 may 2019
			l_ca_caeventimg_struct_i = (CA_CAEVENT_STRUCT_I *) calloc(1,sizeof(CA_CAEVENT_STRUCT_I)	);	
			APL_MALLOC_FAIL(l_ca_caeventimg_struct_i) 
			//Added by shrinath bilav new changes production issue ends
	
   CO_ProcMonitor(APL_OUT_FILE, "AFTER MEMORY ALLOCATION CALL", NULL, p_intlenv_data_struct_h);	
Alert("\n *** *** priority - %d **** \n",p_ca_caevent_struct_h->h_priority);
Alert("\n EVENT CLASS %s**** \n",p_ca_caevent_struct_h->h_evt_class);

if(p_ca_caevent_struct_h->h_priority == 0)
{
Alert("Priority is 0");
 EXEC SQL SELECT (NVL(MAX(PRIORITY),0) + 1) INTO :p_ca_caevent_struct_h->h_priority FROM CAEVENT
        WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code
        AND BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id AND
        to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')
		AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'CD',DIVIDEND_TYPE,'0') =DECODE(:p_ca_caevent_struct_h->h_evt_class,'CD',DECODE(NVL(:p_ca_caevent_struct_h->h_div_class,'0'),'0','0',(:p_ca_caevent_struct_h->h_div_class)),'0');//AND DECLARE_DT = :p_ca_caevent_struct_h->h_decl_date;
	    //DIVIDEND_TYPE check for CD event added by mahesh for bilav upload
        IS_ANY_ORA_ERROR
if(p_ca_caevent_struct_h->h_priority == 2 )
				{
					EXEC SQL SELECT CORP_ID INTO :p_ca_caevent_struct_h->h_attach_corp_id FROM CAEVENT 
					WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code 
						AND BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id AND 
						to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')
					    AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'CD',DIVIDEND_TYPE,'0') =DECODE(:p_ca_caevent_struct_h->h_evt_class,'CD',DECODE(NVL(:p_ca_caevent_struct_h->h_div_class,'0'),'0','0',(:p_ca_caevent_struct_h->h_div_class)),'0');
						//AND DECLARE_DT = :p_ca_caevent_struct_h->h_decl_date;
						//DIVIDEND_TYPE check for CD event added by mahesh for bilav upload
						l_ca_caeventimg_struct_i->i_attach_corp_id = 0;

				
				}
/*CO_InsertErr(l_debug_info_ptr,
                                                 ERR_INVALID_PRIORITY,
                                                 p_intlenv_data_struct_h->h_mode,
                                                 APL_NULL_STRING,
                                                 APL_NULL_STRING,
                                                 __LINE__,
                                                 __FILE__
                                                 );
                  APL_GOBACK_FAIL */


}
else if(p_ca_caevent_struct_h->h_priority == 1)
{
p_ca_caevent_struct_h->h_priority=1;
				}
else if(p_ca_caevent_struct_h->h_priority == 2)
{
EXEC SQL SELECT (NVL(MAX(PRIORITY),0)) INTO max_priority FROM CAEVENT  
				WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code  
				AND BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id AND  
                                CA_EVENT != :p_ca_caevent_struct_h->h_evt_class AND
				to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')
				AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'CD',DIVIDEND_TYPE,'0') !=DECODE(:p_ca_caevent_struct_h->h_evt_class,'CD',DECODE(NVL(:p_ca_caevent_struct_h->h_div_class,'0'),'0','0',(:p_ca_caevent_struct_h->h_div_class)),'1');
                                //DIVIDEND_TYPE check for CD event added by mahesh for bilav upload
				IS_ANY_ORA_ERROR
Alert("\n Max priority - %d **** \n",max_priority);	

			if(max_priority == 0)
			{
			CO_InsertErr(l_debug_info_ptr,
						 ERR_LINK_EVT_MISS,
						 p_intlenv_data_struct_h->h_mode,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 __LINE__,
						 __FILE__
						 );
		  APL_GOBACK_FAIL
			}
			else if(max_priority == 2)
			{
			CO_InsertErr(l_debug_info_ptr,
						 ERR_LINK_EVT_EXIST,
						 p_intlenv_data_struct_h->h_mode,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 __LINE__,
						 __FILE__
						 );
		  APL_GOBACK_FAIL
			}
			else
			{
			EXEC SQL SELECT CORP_ID INTO :p_ca_caevent_struct_h->h_attach_corp_id FROM CAEVENT 
					WHERE INSTR_CODE = :p_ca_caevent_struct_h->h_instr_code 
						AND BILAV_ID = :p_ca_caevent_struct_h->h_bilav_id AND 
                                                CA_EVENT != :p_ca_caevent_struct_h->h_evt_class AND
						to_char(DECLARE_DT,'DD/MM/YYYY') = to_char(to_date(:p_ca_caevent_struct_h->h_decl_date,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')
						AND DECODE (:p_ca_caevent_struct_h->h_evt_class, 'CD',DIVIDEND_TYPE,'0') !=DECODE(:p_ca_caevent_struct_h->h_evt_class,'CD',DECODE(NVL(:p_ca_caevent_struct_h->h_div_class,'0'),'0','0',(:p_ca_caevent_struct_h->h_div_class)),'1');
                                                //DIVIDEND_TYPE check for CD event added by mahesh for bilav upload
						IS_ANY_ORA_ERROR
			}
Alert("\n before final priority - %d **** \n",p_ca_caevent_struct_h->h_priority);
}
Alert("\n end priority%d **** \n",p_ca_caevent_struct_h->h_priority);

	
	//	APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_casetup_struct_h);	
			APL_FREE(l_ca_casecevent_struct_i);	
			APL_FREE(l_ca_caeventimg_struct_i);	

			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventAdd successfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_casetup_struct_h);	
			APL_FREE(l_ca_casecevent_struct_i);	
			APL_FREE(l_ca_caeventimg_struct_i);	
			
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventAdd unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
		}
}


