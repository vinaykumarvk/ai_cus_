
#include "Intellect_Common.h"
#include "BT_Common.h"
#include "DL_Interface.h"
#include "CO_IndStructdef.h"
#include "CO_Commdef.h"  /* ASHISH 21-11-2008 */
#define APL_STATUS_START   "started"

EXEC SQL INCLUDE SQLCA;
/* Added  by Gouse For Decimal Length of MF- Start - 31/10/2011 */
 /* Declaration of this variable has been moved inside function */
/* double char_l3_val = 0.0;            */
int CR_Proc_InstrQtyRound_Chk (double chr_p_val, char *p_instr_code, double *int_p_retval, DEBUG_INFO_STRUCT_H **l_debug_info_ptr );
/* Added  by Gouse For Decimal Length of MF- End - 31/10/2011 */
char g_chr_exch_code[4] = APL_NULL_STRING; /* SLB CHGS Ashish 04-04-2008 */ 

int main(int argc,char **argv)
{
	struct sqlca sqlca;

	DEBUG_INFO_STRUCT_H **l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **) NULL;
	/* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
	FILE                *l_logfile = (FILE *)NULL;
        FILE                *l_glogfile = (FILE *)NULL;
	#else
     FILE *l_logfile = APL_OUT_FILE;
     FILE *l_glogfile = APL_OUT_FILE;
    #endif
   /* Added by kotubabu  for Linux Migration -END*/
   
		

	EXEC SQL BEGIN DECLARE SECTION;

	INTL_ENV_DATA_STRUCT_H       l_intl_env_data_h;
	INTL_ENV_DATA_STRUCT_H       l_intl_env_data_pool_h;  /* ASHISH 06-03-2008 */
	POOLACDET_STRUCT_H           *l_poolacdet_struct_h = NULL;    /* ASHISH 06-03-2008 */

	int                          l_int_num = 0;
	char                         l_client_cd[11] = APL_NULL_STRING;
	/* short                        l_i_client_cd = APL_NULL_STRING; This variable is no more used. Definition is incorrect*/ 
	char                         l_instr_code[13] = APL_NULL_STRING;
	short                        l_i_instr_code;
	char								  l_settlemt_no[16] = APL_NULL_STRING;
	short                        l_i_settlemt_no;
	float                        l_dl_qty;
	short                        l_i_dl_qty;
	//int                          l_pool_qty=0;//Commented by Sandip for CS0013141
	double                          l_pool_qty;//Changed by Sandip for CS0013141
	
        double                          l_double_pool_qty = 0.0;   //Added by Gouse for Decimal Length of MF - 31/10/2011
	int 								  l_int_retval = 0;
	short    						  l_i_qty;
	char                         chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short                        l_i_chr_sys_access_stamp;
	char                         l_filename[51] = APL_NULL_STRING;
	int                          l_filebatch_no = 0;
	short                        l_i_filebatch_no = 0;
	char                         l_upload_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char                         l_depo_cd[9] = APL_NULL_STRING;/* changes by amish --22/05 */
	char                         l_dp_id[21] = APL_NULL_STRING;
	short                        i_depo_cd = 0;
	short                        i_dp_id = 0;
	char                         **temp = ( char **)NULL;
	char                         chr_f_depo_code[100]=APL_NULL_STRING;	/*Changes:AmitB:ISolve134:21/05/07	*/
    short                        i_f_depo_code=0;
    int                            int_unauth_depo_record=0;
	char                         l_mkt_type[3] = APL_NULL_STRING;	/*Changes:AmitB:ISolve134:30/05/07	*/
    short                        i_mkt_type = 0;
	int							   int_pool_count = 0;

	char chr_exch_code[4] = APL_NULL_STRING;         /* SLB CHGS Ashish 05-04-2008 */
    short i_exch_code = 0;                           /* SLB CHGS Ashish 05-04-2008 */
    int		       	l_qty_dec_len = 0; /* Decimal Quantity Pool Account Record - SBI SIT*/

	char chr_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
    char chr_benf_acctype[7] = APL_NULL_STRING;
    char chr_bl_lc_code[2] = APL_NULL_STRING;

    char chr_dp_id[21] = APL_NULL_STRING;
    char chr_status[3] = APL_NULL_STRING;
    char chr_depo_cd[5] = APL_NULL_STRING;
    short i_sys_date = 0;
    short i_benf_acctype = 0;
    short i_bl_lc_code = 0;

    short i_status = 0;
    int int_existing_instr = 0;

	int int_cond_flg = 0;     /* ASHISH 24-04-2008 */
	short l_cntry_cond = 0;


	DL_POOLACCDMP_STRUCT_H *l_dl_poolaccdmp_struct_h	= NULL;
	DL_POOLACCDMP_STRUCT_I *l_dl_poolaccdmp_struct_i	= NULL;

	EXEC SQL END DECLARE SECTION;

	EXEC SQL VAR l_settlemt_no is string;
	EXEC SQL VAR l_instr_code is string;
	EXEC SQL VAR l_client_cd is string;
	EXEC SQL VAR l_dp_id is string;
	EXEC SQL VAR l_depo_cd is string;
	EXEC SQL VAR l_filename is string;
	EXEC SQL VAR chr_f_depo_code is string;
	EXEC SQL VAR l_mkt_type is string;

    EXEC SQL VAR chr_exch_code   IS STRING;          /* SLB CHGS Ashish 05-04-2008 */

	memset(l_client_cd,APL_NULL_CHAR,11);
	memset(l_instr_code,APL_NULL_CHAR,13);
	memset(l_settlemt_no,APL_NULL_CHAR,16);
	memset(l_depo_cd,APL_NULL_CHAR,21);
	memset(l_dp_id,APL_NULL_CHAR,9);
	
    /* Added by kotubabu for Linux Migration-Start*/
    #ifdef OS_LINUX
     l_logfile = APL_OUT_FILE;
	 l_glogfile = APL_OUT_FILE;
    #endif
   /* Added by kotubabu for Linux Migration-End*/
   
	l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *));
	if(CO_Get_DBConnect(l_debug_info_ptr) == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (APL_FAILURE == CO_Rtv_RptFileName( "7g",
				APL_LOGFILE_DESC,
				100,
				argv[5],
				argv,
				&l_logfile,
				l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL
	}

	if(BT_Status_Update(argv[0],
				argv[1],
				argv[2],
				APL_STARTED_STATUS,
				l_debug_info_ptr) ==APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if(APL_FAILURE == CO_SplitStr(argv[9],
				'|',
				&l_int_num,&temp))
	{
		CO_ProcMonitor(l_logfile, "Failure from StrSplitFn", NULL, NULL);
		APL_GOBACK_FAIL
	}

	if (l_int_num != 2)
	{
		CO_ProcMonitor(l_logfile, "Improper Number of arguments", NULL, NULL);
		APL_GOBACK_FAIL
	}

	APL_IF_DEBUG
	{
		printf("\n the no of arguments |%d|",l_int_num);
		printf("\n the arguments are |%s|",temp[0]);
		printf("\n the arguments are |%s|",temp[1]);
		fflush(stdout);
	}
	fprintf(l_logfile,"\n the no of arguments |%d|",l_int_num);
	fprintf(l_logfile,"\n the arguments are |%s|",temp[0]);
	fprintf(l_logfile,"\n the arguments are |%s|",temp[1]);

	strcpy(l_filename,temp[0]);
	strcpy(l_upload_dt,temp[1]);
	strcpy(l_intl_env_data_h.usr,    argv[3]);
	strcpy(l_intl_env_data_h.h_mode,       argv[4]);
	strcpy(l_intl_env_data_h.processtion,  argv[5]);
	strcpy(l_intl_env_data_h.auth_req,  argv[6]);
	strcpy(l_intl_env_data_h.subprocess,   argv[7]);
	strcpy(l_intl_env_data_h.h_process,    argv[8]);

	if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}

	Alert("chr_sys_access_stamp is |%s|",chr_sys_access_stamp);

	/** Added By Sana **/
	if ( CO_RtvSysParams(l_debug_info_ptr) == APL_FAILURE)
   	{
			printf("\nReturned unsuccessfully from CO_RtvSysParams processtion\n");
			APL_GOBACK_FAIL
   	}
	
	
	EXEC SQL SELECT FILELINKINFO,F_CODE 
                        INTO :l_filebatch_no:l_i_filebatch_no,chr_f_depo_code:i_f_depo_code 
                        FROM DL_ORD_SUMM
		        WHERE UPLD_DATE = :l_upload_dt AND
		        FILE_NAME = :l_filename; 
	IS_ANY_ORA_ERROR
    	printf("\n l_filebatch_no = |%d| \n",l_filebatch_no); 

	EXEC SQL SELECT COUNT(*) INTO 
						:int_unauth_depo_record
                         FROM DL_MARKSHORTAGE A
                         WHERE DEPO_CODE!=:chr_f_depo_code
								 /*ISKB- 353 Changes for Pool Dump having multiple Settelment No - Rahul 17-Jul-2007 */
                         AND SETTLEMENT_NO IN (SELECT DISTINCT SETTLEMT_NO FROM DL_POOLACCDMP WHERE DEPO_CODE=:chr_f_depo_code and FILEBATCH_NO=:l_filebatch_no AND STATUS='AA') 
                         AND STATUS='UU';
                IS_ANY_ORA_ERROR

		if(int_unauth_depo_record > 0)
		{
			fprintf(l_logfile,"\n Unauthorized records of depository Other than '|%s|' Depository is present for this Settlement Number ,so skipping. \n",chr_f_depo_code);
			APL_GOBACK_FAIL
		}

		
	  /* SLB CHGS Ashish 04-04-2008 Start */

		EXEC SQL SELECT DISTINCT EXCH_CODE
          INTO:chr_exch_code:i_exch_code
          FROM DL_POOLACCDMP
          WHERE FILEBATCH_NO=:l_filebatch_no
          AND STATUS='AA';
         Alert("\n sqlca.sqlcode = |%d| \n",sqlca.sqlcode);
         IS_ANY_ORA_ERROR

       strcpy(g_chr_exch_code,chr_exch_code);
        
	   /* SLB CHGS Ashish 04-04-2008 End */
		/** Added By Sana for netting off the qty [START] **/
		EXEC SQL SELECT DISTINCT BENEF_ACCTYPE,BL_LC_CODE,STATUS,EXCH_CODE,DP_ID,DEPO_CODE
          INTO:chr_benf_acctype:i_benf_acctype,:chr_bl_lc_code:i_bl_lc_code,chr_status:i_status,:chr_exch_code:i_exch_code,
              :chr_dp_id:i_dp_id,:chr_depo_cd:i_depo_cd
          FROM DL_POOLACCDMP
          WHERE FILEBATCH_NO=:l_filebatch_no
          AND STATUS='AA';

		 Alert("\n sqlca.sqlcode = |%d| \n",sqlca.sqlcode);
		 IS_ANY_ORA_ERROR

			printf("**************** Debug printf statements ****************\n");
			printf("JC::: Beneficiary acc type - [%s]\n", chr_benf_acctype);
			printf("JC::: Chr BL LC code - [%s]\n", chr_bl_lc_code);
			printf("JC::: Chr status - [%s]\n", chr_status);
			printf("JC::: Exch code - [%s]\n", chr_exch_code);
			printf("JC::: DP id - [%s]\n", chr_dp_id);
			printf("JC::: Depo code - [%s]\n", chr_depo_cd);
			printf("**************** Debug printf statements ****************\n");

		   strcpy(g_chr_exch_code,chr_exch_code);  /* SLB CHGS Ashish 04-04-2008 */

		 fprintf(l_logfile,"Pool File Name        = |%s|\n",l_filename);
		 fprintf(l_logfile,"Upload Date           = |%s|\n",l_upload_dt);
		 fprintf(l_logfile,"Depository            = |%s|\n",chr_depo_cd);
		// fprintf(l_logfile,"Settlement No         = |%s|\n\n",chr_l_settl_no);  /*  ASHISH 12-05-2009 */

		 /* When purchase and sale deal of an instrument are done on a day, then Exchange sends pool dump upload file 
 with netting */
 /* the following Condition add those records of NSDL, those are not present in pool upload file due to Netting */
 
/* Netting conditions : ASHISH 24-04-2008 start */

	   IF_COND_EXISTS("TRADE_NETTING","IN_BOTH_EXCH")
		 {
			// fprintf(l_logfile,"\n Netting of Trades in both exchanges \n");
			 Alert("\n Netting of Trades in both exchanges \n");

			 int_cond_flg = 1;
		 }


		 IF_COND_EXISTS("TRADE_NETTING","ONLY_IN_NSE")
		 {
			// fprintf(l_logfile,"\n Netting of Trades in NSE \n");
			 Alert("\n Netting of Trades in NSE \n");
			/*Added by PT for MCS */
			 if(strcmp(chr_exch_code,"NSE") == 0 || strcmp(chr_exch_code,"MCS") == 0)
			 {
				int_cond_flg = 1;
			 }
			 else
			 {
				int_cond_flg = 0;
			 }
		 }
		 IF_COND_EXISTS("TRADE_NETTING","ONLY_IN_BSE")
		 {
			// fprintf(l_logfile,"\n Netting of Trades in BSE \n");
			 Alert("\n Netting of Trades in BSE \n");

			 if(strcmp(chr_exch_code,"BSE") == 0)
			 {
				int_cond_flg = 1;
			 }
			 else
			 {
				int_cond_flg = 0;
			 }
		 }		 
		 Alert("\n Netting Condition Flag = |%d| \n",int_cond_flg);
		 //Added by PT for the depo Code in case is null from pool acc dump file--START
		 if (strcmp(chr_depo_cd,APL_NULL_STRING) == 0)
		 {
			strcpy(chr_depo_cd,"NSDL");
		 }
		 //Added by PT for the depo Code in case is null from pool acc dump file--END
		if(int_cond_flg == 1)     /* ASHISH 24-04-2008 */
		{
			  if(strcmp(chr_depo_cd,"NSDL") == 0)
			  {
				EXEC SQL SELECT COUNT(*) INTO :int_pool_count FROM DL_POOLACCDMP;
				Alert("\n sqlca.sqlcode = |%d| \n",sqlca.sqlcode);
			   IS_ANY_ORA_ERROR
			   
			   /* Following Cursor query generates record in following two conditions:--
				  (1) when purchase quantity of an instrument is less than sale quantity of that instrumet 
				  (2) when purchase quantity of an instrument is greater than sale quantity of that instrument but there is no
					  record of this instrument in NSDL in pool upload file 
				Note : Following cursor should not pick T2T trade and SLB trade */

				EXEC SQL DECLARE poolpay CURSOR FOR
				SELECT S_INSTR,S_SETTL,S_MKT_TYPE,
				DECODE(SUBSTR(TO_CHAR(SP_QTY-SS_QTY),1,1),'-',(SP_QTY - SS_QTY),
														  '0',(SP_QTY - SS_QTY),
																		SS_QTY),
				'NSDL', 
				'GFU', DECODE(SUBSTR(TO_CHAR(SP_QTY-SS_QTY),1,1),'-','GENERIC',
																 '0','GENERIC',
																	 'GENERIC1')
				FROM
				(
				select S_INSTR,ISIN,I_NAME,S_SETTL,S_MKT_TYPE,SUM(P_QTY) SP_QTY,SUM(S_QTY) SS_QTY,INST_EXCH_CODE,SCRIP_GRP
				FROM
				(
				select 
				DL.IDENTIY_NO, dl.instr_code S_INSTR, MT.INSTR_ISIN AS ISIN, MT.INSTR_SHORTNM AS I_NAME, 
				dl.settlement_no S_SETTL, DL.MKT_TYPE S_MKT_TYPE, decode(deal_cd,'3',0,'4',dl.qty) AS P_QTY,
				decode(deal_cd,'3',DL.qty,'4',0) S_QTY, EX.EXCH_INSTR_CODE AS INST_EXCH_CODE,
				EX.SCRIP_GRP AS SCRIP_GRP
				from dl_deal dl,MT_INSTRUMENT MT, MT_INSTR_EXCH_DET EX
				where clh_flg = 'C' 
				and ((deal_cd = '3' and deal_Stat in ('SS','CS')) or (deal_cd = '4' and deal_Stat in ('MS','CC')))
				AND MT.INSTR_CODE = DL.INSTR_CODE AND EX.INSTR_CODE = MT.INSTR_CODE
				AND EX.EXCH_CODE = DL.EXCH_CODE AND (EX.MKT_TYPE = DL.MKT_TYPE or DL.MKT_TYPE = decode(EX.MKT_TYPE,'49','55','41','45', EX.MKT_TYPE))
				AND DL.INSTR_CODE = EX.INSTR_CODE 
                                AND DL.EXCH_CODE = :chr_exch_code		//Added BY Prashnat for same settlement no for different exchanges

				/* SLB CHGS Ashish 05-04-2008 */
			   AND ((dl.mkt_type != DECODE(DL.EXCH_CODE,'NSE','22','BSE','16','MCS','03') AND dl.mkt_type != DECODE(DL.EXCH_CODE,'NSE','50','BSE','17','MCS','24') )
					AND dl.mkt_type != DECODE(DL.EXCH_CODE,'NSE','23','BSE','18','MCS','63') 
					AND dl.mkt_type != DECODE(DL.EXCH_CODE,'NSE','24','BSE','19','MCS','64')
				   AND dl.mkt_type != DECODE(DL.EXCH_CODE,'NSE','25','BSE','20','MCS','65') )
				)
				GROUP BY S_INSTR,ISIN,S_SETTL,S_MKT_TYPE,I_NAME,INST_EXCH_CODE,SCRIP_GRP
				)
				WHERE
				((SP_QTY <= SS_QTY) OR ((SP_QTY > SS_QTY) AND 
				 NOT EXISTS (SELECT 1 FROM DL_POOLACCDMP 
							 WHERE FILEBATCH_NO=:l_filebatch_no
							 AND INSTR_CODE = S_INSTR
							 AND SETTLEMT_NO = S_SETTL
							 AND MKT_TYPE = S_MKT_TYPE
							 AND DEPO_CODE = 'NSDL'
							 AND STATUS='AA')))         /* ASHISH 12-03-2008 */
			   AND SP_QTY > 0 
			/*RetroFit By Prashant Thatte for Issue 758 [START]*/
				AND S_SETTL IN (SELECT DISTINCT SETTLEMT_NO 
							   FROM DL_POOLACCDMP 
							   WHERE FILEBATCH_NO=:l_filebatch_no 
							  /* AND STATUS='AA'  ); */ /*Commented By Prashant Thatte*/
							   AND STATUS='AA' 
							   AND exch_code =:chr_exch_code //PT FOR SAME SETTLEMENT NO
							   AND MKT_TYPE!='7');/*HDFC Prod Fix - Re-Engg item - Mkt Type 7 condn Added BY Yog on 17-Nov-2010 to skip this process for Auction as it's not Required */
			/*RETROFIT By Prashant Thatte for Issue 758 [END]*/

			 Alert("\n sqlca.sqlcode = |%d| \n",sqlca.sqlcode);
			 IS_ANY_ORA_ERROR

					if(APL_FAILURE == CO_RtvSysDtTime(chr_sys_date,l_debug_info_ptr))
					{
					   CO_ProcMonitor(l_logfile,"Error in retrieving the system chr_date time \n",NULL,NULL);
					   APL_GOBACK_FAIL
					}
					Alert("\n System Date = |%s| \n",chr_sys_date);


			   l_dl_poolaccdmp_struct_h = (DL_POOLACCDMP_STRUCT_H *)calloc(1, sizeof(DL_POOLACCDMP_STRUCT_H));

			   l_dl_poolaccdmp_struct_i = (DL_POOLACCDMP_STRUCT_I *)calloc(1, sizeof(DL_POOLACCDMP_STRUCT_I));

			   l_poolacdet_struct_h = (POOLACDET_STRUCT_H *)calloc(1,sizeof(POOLACDET_STRUCT_H));

			  /* Population of environment structure for Pool Account Dump */
			   strcpy(l_intl_env_data_pool_h.usr,"GFU");
			   strcpy(l_intl_env_data_pool_h.h_mode,"INP");
			   strcpy(l_intl_env_data_pool_h.processtion,"GFU");
			   strcpy(l_intl_env_data_pool_h.auth_req,"Y");
			   strcpy(l_intl_env_data_pool_h.subprocess,"GFU");
			   strcpy(l_intl_env_data_pool_h.h_process,APL_NULL_STRING);

				EXEC SQL OPEN poolpay;
				Alert("\n sqlca.sqlcode = |%d| \n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR


				for(;;)
				{
			 
				   memset(l_dl_poolaccdmp_struct_h, NULL, sizeof(DL_POOLACCDMP_STRUCT_H));
				   memset(l_dl_poolaccdmp_struct_i, NULL, sizeof(DL_POOLACCDMP_STRUCT_I));
				   memset(l_poolacdet_struct_h, NULL, sizeof(POOLACDET_STRUCT_H));

				   EXEC SQL FETCH poolpay INTO:l_dl_poolaccdmp_struct_h->h_instr_code:l_dl_poolaccdmp_struct_i->i_instr_code,
							  :l_dl_poolaccdmp_struct_h->h_settlemt_no:l_dl_poolaccdmp_struct_i->i_settlemt_no,
							:l_dl_poolaccdmp_struct_h->h_mkt_type:l_dl_poolaccdmp_struct_i->i_mkt_type,
							:l_dl_poolaccdmp_struct_h->h_qty:l_dl_poolaccdmp_struct_i->i_qty,
							:l_dl_poolaccdmp_struct_h->h_depo_code:l_dl_poolaccdmp_struct_i->i_depo_code,
							:l_dl_poolaccdmp_struct_h->h_maker:l_dl_poolaccdmp_struct_i->i_maker,
							:l_dl_poolaccdmp_struct_h->h_checker:l_dl_poolaccdmp_struct_i->i_checker;

				   Alert("\n Error during fetching records = |%d| \n",sqlca.sqlcode); 
                   Alert("\n PTl_dl_poolaccdmp_struct_i  h_mkt_type = |%d| \n",l_dl_poolaccdmp_struct_h->h_mkt_type); 				   
						   IS_ANY_ORA_ERROR
						
						 if(sqlca.sqlcode == 1403)
							 break;

				   /* Next Sequence No */
				   int_pool_count++;

				   l_dl_poolaccdmp_struct_h->h_seq_no = int_pool_count;
					l_dl_poolaccdmp_struct_h->h_filebatch_no = l_filebatch_no;

				   strcpy(l_dl_poolaccdmp_struct_h->h_maker_dt,chr_sys_date);
				   strcpy(l_dl_poolaccdmp_struct_h->h_checker_dt,l_dl_poolaccdmp_struct_h->h_maker_dt); 
				   strcpy(l_dl_poolaccdmp_struct_h->h_access_stamp,l_dl_poolaccdmp_struct_h->h_maker_dt);
				   strcpy(l_dl_poolaccdmp_struct_h->h_benef_acctype,chr_benf_acctype);
				   strcpy(l_dl_poolaccdmp_struct_h->h_dp_id,chr_dp_id);
				   strcpy(l_dl_poolaccdmp_struct_h->h_bl_lc_code,chr_bl_lc_code);
				   strcpy(l_dl_poolaccdmp_struct_h->h_status,chr_status);
				   strcpy(l_dl_poolaccdmp_struct_h->h_exch_code,chr_exch_code); 
				   
				 
				   l_dl_poolaccdmp_struct_i->i_instr_code = 0;
				   l_dl_poolaccdmp_struct_i->i_settlemt_no = 0;
				   l_dl_poolaccdmp_struct_i->i_mkt_type = 0;
				   l_dl_poolaccdmp_struct_i->i_qty = 0;
				   l_dl_poolaccdmp_struct_i->i_depo_code = 0;
				   l_dl_poolaccdmp_struct_i->i_maker = 0;
				   l_dl_poolaccdmp_struct_i->i_checker = 0;
				   l_dl_poolaccdmp_struct_i->i_checker_dt = 0;
				   l_dl_poolaccdmp_struct_i->i_maker_dt = 0;
				   l_dl_poolaccdmp_struct_i->i_access_stamp = 0;
				   l_dl_poolaccdmp_struct_i->i_seq_no = 0;
				   l_dl_poolaccdmp_struct_i->i_filebatch_no = 0;
				   l_dl_poolaccdmp_struct_i->i_icrel_date = -1;

				   strcpy(l_poolacdet_struct_h->h_file_name,l_filename); 
				   strcpy(l_poolacdet_struct_h->h_upld_date,l_upload_dt);
				   strcpy(l_poolacdet_struct_h->h_f_code,chr_f_depo_code);
				   l_poolacdet_struct_h->h_filelinkinfo = l_dl_poolaccdmp_struct_h->h_filebatch_no;
					
				   /* Calling of DL_ModDbDL_PoolAccDmp() to add new generated records in table DL_POOLACCDMP */
				   Alert ("\n PTPT  CRITICAL*****  l_dl_poolaccdmp_struct_h  |%d| \n",l_dl_poolaccdmp_struct_h->h_mkt_type );
				   if(APL_FAILURE == DL_ModDbDL_PoolAccDmp(l_dl_poolaccdmp_struct_h,l_poolacdet_struct_h,
									 l_intl_env_data_pool_h,l_debug_info_ptr))
				   {
					   fprintf(l_logfile,"\n failure from function DL_ModDbDL_PoolAccDmp() \n");
					   APL_GOBACK_FAIL
				   }


			}

			EXEC SQL CLOSE poolpay;

			Alert("\n sqlca.sqlcode = |%d| \n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
			   free(l_dl_poolaccdmp_struct_h);
			   free(l_dl_poolaccdmp_struct_i);
			}

		}
	   /** Added By Sana for netting off the qty [END] **/


		EXEC SQL DECLARE poolacc CURSOR FOR SELECT INSTR_CODE,SETTLEMT_NO,QTY,DEPO_CODE,DP_ID,MKT_TYPE FROM DL_POOLACCDMP WHERE STATUS='AA'
		AND FILEBATCH_NO =:l_filebatch_no AND
		ICREL_DATE IS NULL;
	printf("\n the sql code2 is |%d|",sqlca.sqlcode);
		fflush(stdout);

	/*Changes:AmitB:ISolve134:17/05/07	*/
	if(sqlca.sqlcode != 0)
	{
		    fprintf(l_logfile,"SHORTAGES ALREADY ALLOCATED FOR SELECTED FILE - FILEBATCHNO |%s|\n",l_filebatch_no);
	}

	IS_ANY_ORA_ERROR

		EXEC SQL OPEN poolacc;
	IS_ANY_ORA_ERROR
		for(;;)
		{
			printf("\n *********** l_upload_dt = |%s| l_filename = |%s| l_filebatch_no = |%d|",l_upload_dt,l_filename,l_filebatch_no);
		fflush(stdout);
			fprintf(l_logfile,"\n *********** l_upload_dt = |%s| l_filename = |%s| l_filebatch_no = |%d|",l_upload_dt,l_filename,l_filebatch_no);
                        l_double_pool_qty = 0.0;
			l_pool_qty = 0;
			EXEC SQL FETCH poolacc INTO :l_instr_code:l_i_instr_code,
				  /* :l_client_cd:l_i_client_cd, */
				  :l_settlemt_no:l_i_settlemt_no,
				  :l_double_pool_qty:l_i_qty,
				  :l_depo_cd:i_depo_cd,
				  :l_dp_id:i_dp_id,
				  :l_mkt_type:i_mkt_type;	/*Changes:AmitB:ISolve134:30/05/07	*/
			printf("\n the sql code3 is |%d|",sqlca.sqlcode);
		fflush(stdout);

			if (APL_ZERO_RESULT_SET)
			{
				break;
			}

			IS_ANY_ORA_ERROR
				/* changes by amish 15/05 */
			//l_int_retval=DL_PoolAcc_ShoAval(l_instr_code,l_settlemt_no,l_pool_qty,l_depo_cd,l_dp_id,l_filebatch_no,l_mkt_type,l_intl_env_data_h.usr,l_logfile,chr_sys_access_stamp,l_debug_info_ptr); Commented by Gouse and checked in else part
                        /* Gouse Changes to incorporate record processing for pool account dump with decimal quantity */
				l_qty_dec_len = 0;

				EXEC SQL SELECT DEC_LEN_MF into :l_qty_dec_len FROM MT_INSTRUMENT 
					WHERE INSTR_CODE = :l_instr_code;

				IS_ANY_ORA_ERROR

				if (l_qty_dec_len != 0)
				{
				l_int_retval=DL_PoolAcc_DecQtyShoAval(l_instr_code,l_settlemt_no,l_double_pool_qty,l_depo_cd,l_dp_id,l_filebatch_no,l_mkt_type,l_intl_env_data_h.usr,chr_sys_access_stamp,l_logfile,l_debug_info_ptr);
				}
				else
			{
			    l_pool_qty = l_double_pool_qty;
  				l_int_retval=DL_PoolAcc_ShoAval(l_instr_code,l_settlemt_no,l_pool_qty,l_depo_cd,l_dp_id,l_filebatch_no,l_mkt_type,l_intl_env_data_h.usr,l_logfile,chr_sys_access_stamp,l_debug_info_ptr);
			}
                        /* Gouse Changes - End */
			if(l_int_retval == APL_FAILURE)
			{
				printf("Going to fail\n");
				fflush(stdout);
				CO_ProcMonitor(l_logfile, "Process DL_PoolAcc_ShoAval returned failure", NULL, NULL);

				APL_GOBACK_FAIL
			}
			/*Changes:AmitB:ISolve134:17/05/07	*/
			else
			{
					fprintf(l_logfile, "Updating for batch=|%d| settlno=|%s| instr=|%s| depo=|%s|",l_filebatch_no,l_settlemt_no,l_instr_code,l_depo_cd);
					Alert("chr_sys_access_stamp is |%s|",chr_sys_access_stamp);
					/* Query commented and re-written for ISKB_5858
					EXEC SQL UPDATE DL_POOLACCDMP SET ICREL_DATE =:chr_sys_access_stamp:l_i_chr_sys_access_stamp WHERE STATUS='AA'
					AND FILEBATCH_NO =:l_filebatch_no
					AND INSTR_CODE=:l_instr_code
					AND SETTLEMT_NO=:l_settlemt_no
					AND DEPO_CODE=:l_depo_cd
					AND ICREL_DATE IS NULL;*/
					EXEC SQL UPDATE DL_POOLACCDMP SET ICREL_DATE =:chr_sys_access_stamp WHERE STATUS='AA' 
					AND FILEBATCH_NO =:l_filebatch_no
					AND INSTR_CODE=:l_instr_code
					AND SETTLEMT_NO=:l_settlemt_no
					AND DEPO_CODE=:l_depo_cd
					AND ICREL_DATE IS NULL;
					Alert("sqlca.sqlcode is |%d|",sqlca.sqlcode);
					Alert("sqlca.sqlerrd[2] is |%d|",sqlca.sqlerrd[2]);
			}

		}

	APL_GOBACK_SUCCESS


		RETURN_SUCCESS :

	if(BT_Status_Completed(argv[0],
					argv[1],
					argv[2],
					l_debug_info_ptr)   ==  APL_FAILURE )
		{
			APL_GOBACK_FAIL
		}
	CO_Proc_RptClose(l_logfile, l_debug_info_ptr);
	EXEC SQL COMMIT WORK;
	if(sqlca.sqlcode != 0)APL_GOBACK_FAIL
		exit(0);

RETURN_FAILURE    :
	CO_Proc_RptClose(l_logfile, l_debug_info_ptr);
	exit(-1);

}

	/* changes by amish 15/05 */
int DL_PoolAcc_ShoAval(char *p_instr_code,char *p_settlement_no,double p_poolacc_qty,char *p_depo_cd,char *p_dp_id,
		int p_filebatch_no,char *p_mkt_type,char *p_user,FILE *l_plogfile,char *p_access_stamp,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) /* changes by amish --22/05 */
{
	struct sqlca sqlca;
	//Commented by Sandip for CS0013141 start
	
	/*float       l_qty_remain = 0;
	float       l_allot_qty =0;
	float       l_qty = 0;
	float       l_short_qty = 0;*/
	
	double       l_qty_remain = 0;
	double       l_allot_qty =0;
	double       l_qty = 0;
	double       l_short_qty = 0;
	
	char        l_status[3] = APL_NULL_STRING;
	char        l_identiy_no[17] = APL_NULL_STRING;
	char        l_pool_trans[2] = APL_NULL_STRING;
	
	/* float       temp=0;
	float       temp1=0;
	float       l_poolhalqty =0;
	float       l_half_qty = 0;
	float       l_addqty = 0;
	float       l_sumqty = 0; */

		
	
	double       temp=0;
	double       temp1=0;
	double       l_poolhalqty =0;
	double       l_half_qty = 0;
	double       l_addqty = 0;
	double       l_sumqty = 0;
	
	//Commented by Sandip for CS0013141 end.
	
	short       i_client_cd = 0;
	char        l_client_cd[11] = APL_NULL_STRING;
	short       i_instr_code = 0;
	short       i_identiy_no = 0;
	short       i_settlement_no = 0;
	short       i_qty = 0;
	short       i_qty_remain = 0;
	short       i_allot_qty = 0;
	short       i_short_qty = 0;
	short       i_pool_trans = 0;
	short       i_status = 0;
	short       l_i_sumqty = 0;
	short       i_access_stamp = 0;  	/* CHANGES BY AMISH --15/05 */
	short       i_user = 0;
	short       i_dp_id = 0;      /* changes by amsih --22/05 */
	short       i_depo_cd = 0;
	short        i_filebatch_no = 0; /* changes by amish 25/05 */
    short                        i_mkt_type = 0;
   /*Start - ISKB-134 - Decimal Qty Allotment Issue- AmitB - 06Jun2007*/
	double l_dealqty=0.0;
	double l_availqty=0.0;
	double l_shortqty=0.0;
	char l_dealrefno[17] = APL_NULL_STRING;
	char l_client[11] = APL_NULL_STRING;
	double l_pend_final=0.0;
	double l_temp_shortqty = 0.0;
	short i_temp_shortqty = 0;
   /*End - ISKB-134 - Decimal Qty Allotment Issue- AmitB - 06Jun2007*/
	short i_dealqty=0;
	short i_availqty=0;
	short i_shortqty=0;
	//int p_poolacc_qty_tmp = 0;//Commented by Sandip for CS0013141 
	double p_poolacc_qty_tmp = 0;//Added by Sandip for CS0013141
	char chr_slb_trade[2] = APL_NULL_STRING; /* SLB CHGS Ashish 04-04-2008 */
	int auction_flag=0; //T1 Settlement changes CS0083803
	char l_str_start_date[APL_DATE_LEN] = APL_NULL_STRING; //T1 Settlement changes CS0083803

	memset(l_identiy_no,NULL,17);
	memset(l_status,NULL,3);
	memset(l_pool_trans,NULL,2);

	EXEC SQL VAR l_identiy_no is string;
	EXEC SQL VAR l_status is string;
	EXEC SQL VAR l_pool_trans is string;

	strcpy(l_status,"UU");
	p_poolacc_qty_tmp = p_poolacc_qty;	

	fprintf(l_plogfile,"\n Inside function DL_PoolAcc_ShoAval \n");

     /* SLB CHGS Ashish 04-04-2008 Start */
        printf("\n pool market type = |%s| \n",p_mkt_type);
        printf("\n exchange code = |%s| \n",g_chr_exch_code);
				fflush(stdout);
	//T1 Settlement changes CS0083803 start
	if( (!strcmp(p_mkt_type,"14")&& (strcmp(g_chr_exch_code,"NSE") == 0)) ||
		(!strcmp(p_mkt_type,"4")&& (strcmp(g_chr_exch_code,"BSE") == 0)) ||
		(!strcmp(p_mkt_type,"02")&& (strcmp(g_chr_exch_code,"MCS") == 0)))
	{
		EXEC SQL SELECT START_DATE INTO :l_str_start_date FROM MT_SETTL_CAL
		WHERE SETTL_NO=:p_settlement_no
		AND SETTL_TYPE=:p_mkt_type
		AND EXCH_CODE=:g_chr_exch_code;
		Alert("sqlca.sqlcode==>|%d|",sqlca.sqlcode);
		Alert("l_str_start_date==>|%s|",l_str_start_date);
		IS_ANY_ORA_ERROR
		if (APL_ZERO_RESULT_SET)
		{
			fprintf(l_plogfile,"\n Settlement Calender not maintained for auction \n");
			APL_GOBACK_FAIL;
		}
		auction_flag=1;
	}
	//T1 Settlement changes CS0083803 ends
	 if(((strcmp(p_mkt_type,"18") ==0 || strcmp(p_mkt_type,"19") ==0 || strcmp(p_mkt_type,"20") ==0) 
    && (strcmp(g_chr_exch_code,"BSE") == 0))
    ||((strcmp(p_mkt_type,"23") ==0 || strcmp(p_mkt_type,"24") ==0 || strcmp(p_mkt_type,"25") ==0) 
    && (strcmp(g_chr_exch_code,"NSE") == 0))
	||((strcmp(p_mkt_type,"63") ==0 || strcmp(p_mkt_type,"64") ==0 || strcmp(p_mkt_type,"65") ==0) 
    && (strcmp(g_chr_exch_code,"MCS") == 0))
	)
    {
        fprintf(l_plogfile,"\n For SLB trade \n"); 
        printf("\n For SLB trade \n");
				fflush(stdout);
        strcpy(chr_slb_trade,"Y");
    }
    else
    {
        fprintf(l_plogfile,"\n For Non SLB trade \n");
        printf("\n For Non SLB trade \n");
				fflush(stdout);
        strcpy(chr_slb_trade,"N");
    }

   /* SLB CHGS Ashish 04-04-2008 End */

   if(strcmp(chr_slb_trade,"N") == 0)        /* SLB CHGS Ashish 04-04-2008 */
   {
	   //T1 Settlement changes CS0083803 start
	 if(auction_flag==1)
	{
		EXEC SQL SELECT (SUM(QTY)/2) AS QTY INTO :l_sumqty:l_i_sumqty
		FROM DL_DEAL d, mt_settl_cal m
		WHERE DEAL_STAT    IN ('CC','MS')
		AND INSTR_CODE      = :p_instr_code
		AND DEAL_CD        IN ('2','4')
		AND CLH_FLG         = 'C'
		AND QTY            != ALLOT_QTY
		AND D.EXCH_CODE       =:g_chr_exch_code
		//AND AUCTION_DT=:l_str_start_date
		AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
		OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
		AND D.MKT_TYPE=M.SETTL_TYPE
		AND D.SETTLEMENT_NO   = M.SETTL_NO
		AND D.EXCH_CODE   = M.EXCH_CODE
		ORDER BY QTY;	
	}
	else
	{
	 EXEC SQL SELECT (SUM(QTY)/2) AS QTY INTO :l_sumqty:l_i_sumqty FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		/*
			AND CLIENT  =     :p_client_cd
			*/
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
  
      /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE') 
		OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS'))*/ /*added by PT for MCS*/
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/
		AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
	  	AND QTY != ALLOT_QTY	/* CHANGES BY AMISH --23/05 */
		AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO
		AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;	
		}
		//T1 Settlement changes CS0083803 ends
	printf("\n the sql code4 in if is |%d|",sqlca.sqlcode);
				fflush(stdout);
	IS_ANY_ORA_ERROR
  }

 /* SLB CHGS Ashish 04-04-2008 Start */
  else
  {
	 EXEC SQL SELECT (SUM(QTY)/2) INTO :l_sumqty:l_i_sumqty  FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE IN ('63','64','65') AND EXCH_CODE ='MCS')) 
		
      AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
	  	AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO		
		ORDER BY QTY;
	printf("\n the sql code4 in else is |%d|",sqlca.sqlcode);
				fflush(stdout);
	IS_ANY_ORA_ERROR
 }
/* SLB CHGS Ashish 04-04-2008 End */


		if(strcmp(chr_slb_trade,"N") == 0)    /* SLB CHGS Ashish 04-04-2008 */
    {
		//T1 Settlement changes CS0083803 start
		if(auction_flag==1)
		{
			EXEC SQL DECLARE l_cur_halfqty1 CURSOR FOR
			SELECT  (NVL(QTY ,0)/2) AS QTY,
		  IDENTIY_NO,
		  CLIENT
		FROM DL_DEAL d, mt_settl_cal m
		WHERE DEAL_STAT    IN ('CC','MS')
		AND INSTR_CODE      = :p_instr_code
		AND DEAL_CD        IN ('2','4')
		AND CLH_FLG         = 'C'
		AND QTY            != ALLOT_QTY
		AND D.EXCH_CODE       =:g_chr_exch_code
		//AND AUCTION_DT=:l_str_start_date
		AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
		OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
		AND D.MKT_TYPE=M.SETTL_TYPE
		AND D.SETTLEMENT_NO   = M.SETTL_NO
		AND D.EXCH_CODE   = M.EXCH_CODE
		ORDER BY QTY;
		}
		else
		{
		EXEC SQL DECLARE l_cur_halfqty CURSOR FOR
						SELECT (NVL(QTY ,0)/2) AS QTY,IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		/*
			AND CLIENT  =     :p_client_cd
			*/
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS'))*/ /* SLB CHGS Ashish 04-04-2008 */
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/
      AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'/* CHANGES BY AMISH --23/05 */
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO
		AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;
				}
				//T1 Settlement changes CS0083803 ends
	printf("\n the sql code5 in if is |%d|",sqlca.sqlcode);
				fflush(stdout);
	
	IS_ANY_ORA_ERROR
   }

   /* SLB CHGS Ashish 04-04-2008 Start */
   else
   {
		EXEC SQL DECLARE l_cur_halfqty_slb CURSOR FOR
		SELECT NVL(QTY ,0)/2,IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE IN ('63','64','65') AND EXCH_CODE ='MCS')) 
		
      AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO
		ORDER BY QTY;
	printf("\n the sql code5 in else is |%d|",sqlca.sqlcode);
				fflush(stdout);
   IS_ANY_ORA_ERROR
	
   }

  /* SLB CHGS Ashish 04-04-2008 End */

   if(strcmp(chr_slb_trade,"N") == 0)  /* SLB CHGS Ashish 04-04-2008 */
   {
	   //T1 Settlement changes CS0083803 start
		if(auction_flag==1)
		{
			EXEC SQL OPEN l_cur_halfqty1;
			   IS_ANY_ORA_ERROR
		}
		else
		{
			EXEC SQL OPEN l_cur_halfqty;
			   IS_ANY_ORA_ERROR
		}
		//T1 Settlement changes CS0083803 end

   }

   /* SLB CHGS Ashish 04-04-2008 Start */
   else
   {
      EXEC SQL OPEN l_cur_halfqty_slb;
      IS_ANY_ORA_ERROR
   }
	/* SLB CHGS Ashish 04-04-2008 End */

		for(;;)
		{
			if(strcmp(chr_slb_trade,"N") == 0)        /* SLB CHGS Ashish 04-04-2008 */
         {
			 //T1 Settlement changes CS0083803 start
			if(auction_flag==1)
			{
				EXEC SQL FETCH l_cur_halfqty1 INTO :l_half_qty,
				  :l_identiy_no,:l_client_cd;    
			}
			else
			{
				EXEC SQL FETCH l_cur_halfqty INTO :l_half_qty,
				  :l_identiy_no,:l_client_cd;     
			}
			//T1 Settlement changes CS0083803 ends
			
         }

		 /* SLB CHGS Ashish 04-04-2008 Start */
         else
         {
			EXEC SQL FETCH l_cur_halfqty_slb INTO :l_half_qty,
				  :l_identiy_no,:l_client_cd;  
         }

		 if (APL_ZERO_RESULT_SET)
			{
				break;
			}
			printf("\n the sql code6 is |%d|",sqlca.sqlcode);
				fflush(stdout);
			IS_ANY_ORA_ERROR

			printf("\n insite curtosor l_half_qty --- |%lf|\n",l_half_qty);
			printf("\n insite curtosor p_poolacc_qty --- |%lf|\n",p_poolacc_qty);
				fflush(stdout);
		 /* SLB CHGS Ashish 04-04-2008 End */

		
				/* CHANGES BY AMISH --15/05 */
				if(!strlen(l_identiy_no))i_identiy_no = -1;
				else i_identiy_no = 0;

				if(!strlen(l_client_cd))i_client_cd = -1;
				else i_client_cd = 0;

				l_poolhalqty = p_poolacc_qty - l_sumqty;

			if(l_poolhalqty >= 0)
			{

				temp1=temp1+l_half_qty;

				if(temp1 > l_poolhalqty)
				{
					l_short_qty = temp1 - l_poolhalqty;
					l_addqty = l_half_qty - l_short_qty;

					if(l_addqty < 0)
					{
						l_short_qty = l_half_qty;
						l_qty_remain = l_half_qty;
						l_allot_qty = l_qty_remain;
					}
					else
					{
						l_qty_remain = l_half_qty + l_addqty;
						l_allot_qty = l_qty_remain;
					}
				}
				else
				{
					l_short_qty = 0;
					l_qty_remain = 2*l_half_qty;
					l_allot_qty = l_qty_remain;
				}
				l_qty = 2*l_half_qty;
			}
			else
			{
				temp1=temp1+l_half_qty;

				if(temp1 > p_poolacc_qty)
				{
					l_short_qty = (temp1 - p_poolacc_qty) + l_half_qty;
					l_qty_remain = l_half_qty - (temp1 - p_poolacc_qty);
					l_allot_qty = l_qty_remain;
					if(l_qty_remain < 0)
					{
						l_short_qty = 2*l_half_qty;
						l_qty_remain = 0;
						l_allot_qty = l_qty_remain;
					}
				}
				else
				{
					l_short_qty = l_half_qty;
					l_qty_remain = l_half_qty;
					l_allot_qty = l_qty_remain;
				}
				l_qty = 2*l_half_qty;
			}

			//Added by Sandip for CS0013141
			printf("1Client |%s| Instrument |%s| Sett No |%s| Available |%lf| Short |%lf| allot_qty |%lf| status |%s|\n",l_client_cd,p_instr_code,p_settlement_no,l_qty_remain,l_short_qty,l_allot_qty,l_status);
				fflush(stdout);
			fprintf(l_plogfile,"1Client |%s| Instrument |%s| Sett No |%s| Available |%lf| Short |%lf| allot_qty |%lf| status |%s|\n",l_client_cd,p_instr_code,p_settlement_no,l_qty_remain,l_short_qty,l_allot_qty,l_status);
			/* CHANGES BY AMISH --15/05 */
			i_user = 0;
			i_access_stamp = 0;
			printf("\nMAKER IS ************************|%s|\n",p_user);
			printf("\naccess stamp IS ************************|%s|\n",p_access_stamp);
			printf("\nclient IS ************************|%s|\n",l_client_cd);
			printf("\n DEPO code = |%s|", p_depo_cd);
			printf("\n DEPO ID = |%s|", p_dp_id);
				fflush(stdout);
        /* CHANGES BY AMISH --16/05 */

			strcpy(l_pool_trans,"N");
			EXEC SQL INSERT INTO DL_MARKSHORTAGE (SETTLEMENT_NO,
					DL_CLIENT,
					DL_REF_NO,
					INSTR_CODE,
					QTY,
					AVAIL_QTY,
					ALLOT_QTY,
					SHORTAGE_QTY,
					POOL_TRANS,
					STATUS,MAKER,MAKER_DT,ACCESS_STAMP,DP_ID,DEPO_CODE,FILEBATCH_NO,MKT_TYPE,EXCH_CODE) VALUES (
						:p_settlement_no:i_settlement_no,
						:l_client_cd:i_client_cd,
						:l_identiy_no:i_identiy_no,
						:p_instr_code:i_instr_code,
						:l_qty:i_qty,
						:l_qty_remain:i_qty_remain,
						:l_allot_qty:i_allot_qty,
						:l_short_qty:i_short_qty,
						:l_pool_trans:i_pool_trans,
						:l_status:i_status,
						:p_user:i_user,
						:p_access_stamp:i_access_stamp,
						:p_access_stamp:i_access_stamp,
						:p_dp_id:i_dp_id,                /* changes by amish --22/05 */
						:p_depo_cd:i_depo_cd,
						:p_filebatch_no:i_filebatch_no,
						:p_mkt_type,
						:g_chr_exch_code); /* changes by amish - 25/05 */
//T1 Settlement changes CS0083803
			printf("\n sundar1 ************ the sql code7 is |%d|",sqlca.sqlcode);
				fflush(stdout);

			IS_ANY_ORA_ERROR

				EXEC SQL UPDATE DL_DEAL SET AVAIL_QTY = :l_qty_remain:i_qty_remain,
					  SHORTAGE_QTY = :l_short_qty:i_short_qty,
						MKT_TYPE = :p_mkt_type:i_mkt_type
						  WHERE
						  IDENTIY_NO = :l_identiy_no AND
						  /* CHANGES BY AMISH --15/05 */
							  CLIENT = :l_client_cd 
						 // AND SETTLEMENT_NO = :p_settlement_no
						  AND DEAL_CD IN ('2','4');
			printf("\n sundar2 ************ the sql code8 is |%d|",sqlca.sqlcode);
				fflush(stdout);
			IS_ANY_ORA_ERROR

		}

	if(strcmp(chr_slb_trade,"N") == 0)        /* SLB CHGS Ashish 04-04-2008 */
   {
	   //T1 Settlement changes CS0083803 start
	   if(auction_flag==1)
		{
				EXEC SQL CLOSE l_cur_halfqty1;
		}
		else
		{
				EXEC SQL CLOSE l_cur_halfqty;
		}
		//T1 Settlement changes CS0083803 ends

	printf("\n sundar3 ************ the sql code9 in if is |%d|",sqlca.sqlcode);
				fflush(stdout);
	printf("\n Sana Chk here ");
				fflush(stdout);
	IS_ANY_ORA_ERROR
   }

	/* SLB CHGS Ashish 04-04-2008 Start */
   else
   {
	EXEC SQL CLOSE l_cur_halfqty_slb;
	printf("\n sundar3 ************ the sql code9 in else is |%d|",sqlca.sqlcode);
				fflush(stdout);
	IS_ANY_ORA_ERROR
   }
	/* SLB CHGS Ashish 04-04-2008 End */

   /*Start - ISKB-134 - Decimal Qty Allotment Issue- AmitB - 06Jun2007*/
	if(strcmp(chr_slb_trade,"N") == 0)    /* SLB CHGS Ashish 04-04-2008 */
    { 
	//T1 Settlement changes CS0083803 start
			if(auction_flag==1)
		{
					EXEC SQL DECLARE l_cur_shortdeal1 CURSOR FOR SELECT NVL(QTY ,0) AS QTY,AVAIL_QTY,SHORTAGE_QTY,
				  IDENTIY_NO,
				  CLIENT
				FROM DL_DEAL d, mt_settl_cal m
				WHERE DEAL_STAT    IN ('CC','MS')
				AND INSTR_CODE      = :p_instr_code
				AND DEAL_CD        IN ('2','4')
				AND CLH_FLG         = 'C'
				AND QTY            != ALLOT_QTY
				AND D.EXCH_CODE       =:g_chr_exch_code
				//AND AUCTION_DT=:l_str_start_date
				AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
				OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
				AND D.MKT_TYPE=M.SETTL_TYPE
				AND D.SETTLEMENT_NO   = M.SETTL_NO
				AND D.EXCH_CODE   = M.EXCH_CODE
				ORDER BY QTY;
		}
		else
		{
		EXEC SQL DECLARE l_cur_shortdeal CURSOR FOR SELECT NVL(QTY ,0) AS QTY,AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS')) */
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/
		AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO
		AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;
				}
				//T1 Settlement changes CS0083803 end
      printf("\n Sql Error to declare cursor l_cur_shortdeal = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
		IS_ANY_ORA_ERROR
    }
	
	/* SLB CHGS Ashish 04-04-2008 Start */
    else
    {
		EXEC SQL DECLARE l_cur_shortdeal_slb CURSOR FOR SELECT NVL(QTY ,0),AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE IN ('63','64','65') AND EXCH_CODE ='MCS')) 

		AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO
		ORDER BY QTY;
      printf("\n Sql Error to declare cursor l_cur_shortdeal_slb = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
		IS_ANY_ORA_ERROR
    }
	
	/* SLB CHGS Ashish 04-04-2008 End */
    
    if(strcmp(chr_slb_trade,"N") == 0)    /* SLB CHGS Ashish 04-04-2008 */
    { 
		//T1 Settlement changes CS0083803 start
		if(auction_flag==1)
		{
			EXEC SQL OPEN l_cur_shortdeal1;
		IS_ANY_ORA_ERROR
		}
		else
		{
			EXEC SQL OPEN l_cur_shortdeal;
		IS_ANY_ORA_ERROR
		}
		//T1 Settlement changes CS0083803 ends
    }
	
	/* SLB CHGS Ashish 04-04-2008 Start */
    else
    {
		EXEC SQL OPEN l_cur_shortdeal_slb;
		IS_ANY_ORA_ERROR
    }

	/* SLB CHGS Ashish 04-04-2008 End */

		for(;;)
		{

		if(strcmp(chr_slb_trade,"N") == 0)      /* SLB CHGS Ashish 04-04-2008 */
    {
		//T1 Settlement changes CS0083803 start
		if(auction_flag==1)
		{
					EXEC SQL FETCH l_cur_shortdeal1 INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
		}
		else
		{
					EXEC SQL FETCH l_cur_shortdeal INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
		}
		//T1 Settlement changes CS0083803 end
    }

	/* SLB CHGS Ashish 04-04-2008 Start */
    else
    {
		EXEC SQL FETCH l_cur_shortdeal_slb INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
    }
	/* SLB CHGS Ashish 04-04-2008 End */
		
		if (APL_ZERO_RESULT_SET)
		{
				break;
		}
		IS_ANY_ORA_ERROR
		
		printf("\n l_dealqty|%lf|,l_availqty=|%lf|,l_shortqty|%lf|,l_dealrefno|%s|,l_client|%s| \n",l_dealqty,l_availqty,l_shortqty,l_dealrefno,l_client);
				fflush(stdout);
	    fprintf(l_plogfile,"\n l_dealqty|%lf|,l_availqty=|%lf|,l_shortqty|%lf|,l_dealrefno|%s|,l_client|%s| \n",l_dealqty,l_availqty,l_shortqty,l_dealrefno,l_client);
		if(l_availqty - floor(l_availqty) < 1 && (l_availqty - floor(l_availqty) > 0))
		{	
			printf("\n final qty \n");
				fflush(stdout);
			EXEC SQL UPDATE DL_DEAL SET AVAIL_QTY=floor(:l_availqty),
										SHORTAGE_QTY=:l_shortqty+(:l_availqty - floor(:l_availqty))
					WHERE CLIENT=:l_client
					AND IDENTIY_NO=:l_dealrefno;
			IS_ANY_ORA_ERROR

			EXEC SQL UPDATE DL_MARKSHORTAGE SET AVAIL_QTY=floor(:l_availqty),
												ALLOT_QTY=floor(:l_availqty),
												SHORTAGE_QTY=:l_shortqty+(:l_availqty - floor(:l_availqty))
				WHERE DL_CLIENT=:l_client
					AND DL_REF_NO=:l_dealrefno;
			IS_ANY_ORA_ERROR

			l_pend_final=l_pend_final+(l_availqty - floor(l_availqty));
		}
		
		}

				if(strcmp(chr_slb_trade,"N") == 0)       /* SLB CHGS Ashish 04-04-2008 */
		{
			//T1 Settlement changes CS0083803 start
				if(auction_flag==1)
				{
									EXEC SQL CLOSE l_cur_shortdeal1 ;
				}
				else
				{
									EXEC SQL CLOSE l_cur_shortdeal ;
				}
			//T1 Settlement changes CS0083803 ends
		}
	
	/* SLB CHGS Ashish 04-04-2008 Start */
	else
		{
				EXEC SQL CLOSE l_cur_shortdeal_slb;
	    }		
	/* SLB CHGS Ashish 04-04-2008 End */

	    fflush(stdout);
	
    	printf("\n final pending qty =|%lf| \n ",l_pend_final);
				fflush(stdout);

		if(l_pend_final > 0)
		{
	  
	  if(strcmp(chr_slb_trade,"N") == 0)       /* SLB CHGS Ashish 04-04-2008 */
     {
				            printf("\n 1 BEFORE CURSOR SQLCA.SQLCODE  = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
				//T1 Settlement changes CS0083803 start
				if(auction_flag==1)
{
		EXEC SQL DECLARE l_cur_shortdeal11 CURSOR FOR SELECT NVL(QTY ,0) AS QTY,AVAIL_QTY,SHORTAGE_QTY,
		  IDENTIY_NO,
		  CLIENT
		FROM DL_DEAL d, mt_settl_cal m
		WHERE DEAL_STAT    IN ('CC','MS')
		AND INSTR_CODE      = :p_instr_code
		AND DEAL_CD        IN ('2','4')
		AND CLH_FLG         = 'C'
		AND QTY            != ALLOT_QTY
		AND D.EXCH_CODE       =:g_chr_exch_code
		//AND AUCTION_DT=:l_str_start_date
		AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
		OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
		AND D.MKT_TYPE=M.SETTL_TYPE
		AND D.SETTLEMENT_NO   = M.SETTL_NO
		AND D.EXCH_CODE   = M.EXCH_CODE
		ORDER BY QTY;
}
else
{
				EXEC SQL DECLARE l_cur_shortdeal1 CURSOR FOR 
				SELECT NVL(QTY ,0) AS QTY,AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
				FROM DL_DEAL
				WHERE DEAL_STAT   in ('CC','MS')
				AND INSTR_CODE    =     :p_instr_code
				AND SETTLEMENT_NO =  :p_settlement_no
            
            /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
            OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE')
			OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS')) */
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/
          	AND DEAL_CD IN ('2','4')
				AND CLH_FLG = 'C'
				AND QTY != ALLOT_QTY
				AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO
		AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;
		}

     }
	//T1 Settlement changes CS0083803 ends	 
	 printf("\n Sql Error to declare cursor l_cur_shortdeal1 = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
				IS_ANY_ORA_ERROR

	/* SLB CHGS Ashish 04-04-2008 Start */
     else
     {
		printf("\n instr code and settl no is |%s|,|%s| \n",p_settlement_no,p_instr_code);
				fflush(stdout);

		            printf("\n BEFORE CURSOR SQLCA.SQLCODE  = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
				EXEC SQL DECLARE l_cur_sh CURSOR FOR SELECT NVL(QTY ,0),AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
				FROM DL_DEAL
				WHERE DEAL_STAT   in ('CC','MS')
				AND INSTR_CODE    =     :p_instr_code
				AND SETTLEMENT_NO =  :p_settlement_no
					/*
            AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
            OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')) 
			*/
          	AND DEAL_CD IN ('2','4')
				AND CLH_FLG = 'C'
				AND QTY != ALLOT_QTY
				AND exch_code =:g_chr_exch_code //PT FOR SAME SETTLEMENT NO
				ORDER BY QTY;

            printf("\n Sql Error to declare cursor l_cur_sh = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
				IS_ANY_ORA_ERROR
         }   
		/* SLB CHGS Ashish 04-04-2008 End */

    if(strcmp(chr_slb_trade,"N") == 0)        /* SLB CHGS Ashish 04-04-2008 */
    {
		//T1 Settlement changes CS0083803
		if(auction_flag==1)
		{
			EXEC SQL OPEN l_cur_shortdeal11;
						IS_ANY_ORA_ERROR
		}
		else
		{
			EXEC SQL OPEN l_cur_shortdeal1;
						IS_ANY_ORA_ERROR
		}
		//T1 Settlement changes CS0083803

    }

/* SLB CHGS Ashish 04-04-2008 Start */
    else
    { 
            EXEC SQL OPEN l_cur_sh;
				IS_ANY_ORA_ERROR
    }
/* SLB CHGS Ashish 04-04-2008 End */

				for(;;)
				{

				 if(strcmp(chr_slb_trade,"N") == 0)    /* SLB CHGS Ashish 04-04-2008 */
                 {
					 //T1 Settlement changes CS0083803
				        if(auction_flag==1)
						{
							EXEC SQL FETCH l_cur_shortdeal11 INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
						}
						else
						{
							EXEC SQL FETCH l_cur_shortdeal1 INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
						}
						//T1 Settlement changes CS0083803
                 }

	            /* SLB CHGS Ashish 04-04-2008 Start */
                else
                {
				        EXEC SQL FETCH l_cur_sh INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
                }				
	            /* SLB CHGS Ashish 04-04-2008 End */
				
				if (APL_ZERO_RESULT_SET)
				{
						break;
				}
				IS_ANY_ORA_ERROR
				
				printf("\n l_dealqty|%lf|,l_availqty=|%lf|,l_shortqty|%lf|,l_dealrefno|%s|,l_client|%s| \n",l_dealqty,l_availqty,l_shortqty,l_dealrefno,l_client);
				fflush(stdout);
			
					printf("\n final qty \n");
				fflush(stdout);
					l_temp_shortqty = 0;
					EXEC SQL SELECT SHORTAGE_QTY into :l_temp_shortqty:i_temp_shortqty FROM DL_MARKSHORTAGE 
						WHERE  DL_CLIENT=:l_client
							AND DL_REF_NO=:l_dealrefno
							AND STATUS = 'UU';
					IS_ANY_ORA_ERROR
					
					printf("\n final allocation l_temp_shortqty |%lf|\n",l_temp_shortqty);
					printf("\n final allocation l_pend_final |%lf|\n",l_pend_final);
				fflush(stdout);
					if (l_temp_shortqty > 0)
					{

						if(l_temp_shortqty <= l_pend_final)
						{
							
						
							l_pend_final = l_pend_final - l_temp_shortqty;
						}
						if(l_temp_shortqty > l_pend_final)
						{
							l_temp_shortqty = l_pend_final;
							l_pend_final = 0;
						}

					}

					EXEC SQL UPDATE DL_DEAL SET AVAIL_QTY = :l_availqty + :l_temp_shortqty,
												SHORTAGE_QTY = :l_shortqty - :l_temp_shortqty
							WHERE CLIENT=:l_client
							AND IDENTIY_NO=:l_dealrefno;
					IS_ANY_ORA_ERROR

					EXEC SQL UPDATE DL_MARKSHORTAGE SET AVAIL_QTY=:l_availqty + :l_temp_shortqty,
														ALLOT_QTY=:l_availqty + :l_temp_shortqty,
														SHORTAGE_QTY=:l_shortqty - :l_temp_shortqty
						WHERE DL_CLIENT=:l_client
							AND DL_REF_NO=:l_dealrefno;
					IS_ANY_ORA_ERROR
				
					if(l_pend_final == 0)
						break;


				
				}

	 if(strcmp(chr_slb_trade,"N") == 0)       /* SLB CHGS Ashish 04-04-2008 */
    {
		//T1 Settlement changes CS0083803
		if(auction_flag==1)
		{
		EXEC SQL CLOSE l_cur_shortdeal11;
		}
		else
		{
		EXEC SQL CLOSE l_cur_shortdeal1 ;
		}
		//T1 Settlement changes CS0083803

    }

	/* SLB CHGS Ashish 04-04-2008 Start */
    else
    {
            EXEC SQL CLOSE l_cur_sh;
    }
	/* SLB CHGS Ashish 04-04-2008 End */

		}
   /*End - ISKB-134 - Decimal Qty Allotment Issue- AmitB - 06Jun2007*/

		RETURN_SUCCESS :
		{
			APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
				return(APL_SUCCESS);
		}
RETURN_FAILURE :
	{
		APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
			return(APL_FAILURE);
	}

}
/* Added  by Gouse For Decimal Length of MF- Start - 31/10/2011 */
int DL_PoolAcc_DecQtyShoAval(char *p_instr_code,char *p_settlement_no,double p_poolacc_qty,char *p_depo_cd,char *p_dp_id,
		int p_filebatch_no,char *p_mkt_type,char *p_user,char *p_access_stamp,FILE *l_plogfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) /* changes by amish --22/05 */
{
	struct sqlca sqlca;
/*	float       l_qty_remain = 0;
	float       l_allot_qty =0;
	float       l_qty = 0;
	float       l_short_qty = 0;*/
 double       l_qty_remain = 0.0;
 double       l_allot_qty =0.0;
 double       l_qty = 0.0;
 double       l_short_qty = 0.0; 
 double       l_orig_short_qty = 0.0; 
	char        l_status[3] = APL_NULL_STRING;
	char        l_identiy_no[17] = APL_NULL_STRING;
	char        l_pool_trans[2] = APL_NULL_STRING;
/* Data type changed by madhavi for temp,temp1,l_half_qty,l_poolhalqty,l_addqty,l_sumqty to double */	
  double       temp=0.0;
	double       temp1=0.0;
  double       l_poolhalqty =0.0;
	double      l_half_qty = 0.0;
	double       l_addqty = 0.0;
	double       l_sumqty = 0.0;
	double       l_sumqty_mult_2 = 0.0;
	double       l_pool_minus_sumqty = 0.0;
	short       i_client_cd = 0;
	char        l_client_cd[11] = APL_NULL_STRING;
	short       i_instr_code = 0;
	short       i_identiy_no = 0;
	short       i_settlement_no = 0;
	short       i_qty = 0;
	short       i_qty_remain = 0;
	short       i_allot_qty = 0;
	short       i_short_qty = 0;
	short       i_pool_trans = 0;
	short       i_status = 0;
	short       l_i_sumqty = 0;
	short       i_access_stamp = 0;  	/* CHANGES BY AMISH --15/05 */
	short       i_user = 0;
	short       i_dp_id = 0;      /* changes by amsih --22/05 */
	short       i_depo_cd = 0;
	short        i_filebatch_no = 0; /* changes by amish 25/05 */
    	short                        i_mkt_type = 0;
	double l_dealqty=0.0;
	double l_availqty=0.0;
	double l_shortqty=0.0;
	char l_dealrefno[17] = APL_NULL_STRING;
	char l_client[11] = APL_NULL_STRING;
	double l_pend_final=0.0;
	double l_qty_rounded=0.0;
	double l_temp_shortqty = 0.0;
	short i_temp_shortqty = 0;
	int auction_flag=0;
	short i_dealqty=0;
	short i_availqty=0;
	short i_shortqty=0;
double p_poolacc_qty_tmp = 0.0;
   char chr_slb_trade[2] = APL_NULL_STRING; /* SLB CHGS Ashish 04-04-2008 */   /*SLB CHANGES - AMISH -28082008*/
   char l_str_start_date[APL_DATE_LEN] = APL_NULL_STRING;
   double char_l3_val = 0.0;
   int l_fourth_decimal = 0;
		double l_short_qty_till_four_decimal = 0.0;

	memset(l_identiy_no,NULL,17);
	memset(l_status,NULL,3);
	memset(l_pool_trans,NULL,2);

	EXEC SQL VAR l_identiy_no is string;
	EXEC SQL VAR l_status is string;
	EXEC SQL VAR l_pool_trans is string;

	strcpy(l_status,"UU");
	p_poolacc_qty_tmp = p_poolacc_qty;
     /*SLB CHANGES - AMISH -28082008*/
        printf("\n *********************** \n");
        printf("\n pool market type = |%s| \n",p_mkt_type);
        printf("\n exchange code = |%s| \n",g_chr_exch_code);
				fflush(stdout);
	if( (!strcmp(p_mkt_type,"14")&& (strcmp(g_chr_exch_code,"NSE") == 0)) ||
		(!strcmp(p_mkt_type,"4")&& (strcmp(g_chr_exch_code,"BSE") == 0)) ||
		(!strcmp(p_mkt_type,"02")&& (strcmp(g_chr_exch_code,"MCS") == 0)))
	{
		EXEC SQL SELECT START_DATE INTO :l_str_start_date FROM MT_SETTL_CAL
		WHERE SETTL_NO=:p_settlement_no
		AND SETTL_TYPE=:p_mkt_type
		AND EXCH_CODE=:g_chr_exch_code;
		Alert("sqlca.sqlcode==>|%d|",sqlca.sqlcode);
		Alert("l_str_start_date==>|%s|",l_str_start_date);
		IS_ANY_ORA_ERROR
				if (APL_ZERO_RESULT_SET)
		{
			fprintf(l_plogfile,"\n Settlement Calender not maintained for auction \n");
			APL_GOBACK_FAIL;
		}
		auction_flag=1;
	}
 
    if(((strcmp(p_mkt_type,"18") ==0 || strcmp(p_mkt_type,"19") ==0 || strcmp(p_mkt_type,"20") ==0) 
    && (strcmp(g_chr_exch_code,"BSE") == 0))
    ||((strcmp(p_mkt_type,"23") ==0 || strcmp(p_mkt_type,"24") ==0 || strcmp(p_mkt_type,"25") ==0) 
    && (strcmp(g_chr_exch_code,"NSE") == 0))
	||((strcmp(p_mkt_type,"63") ==0 || strcmp(p_mkt_type,"64") ==0 || strcmp(p_mkt_type,"65") ==0) 
    && (strcmp(g_chr_exch_code,"MCS") == 0))	)
    {
        fprintf(l_plogfile,"\n For SLB trade \n"); 
        printf("\n For SLB trade \n");
				fflush(stdout);
        strcpy(chr_slb_trade,"Y");
    }
    else
    {
        fprintf(l_plogfile,"\n For Non SLB trade \n");
        printf("\n For Non SLB trade \n");
				fflush(stdout);
        strcpy(chr_slb_trade,"N");
    }
   printf("\n *********** Instrument Code = |%s| Settlement No = |%s| ",p_instr_code,p_settlement_no);
				fflush(stdout);
		l_sumqty = 0.0;
		l_sumqty_mult_2 = 0.0;
		l_pool_minus_sumqty = 0.0;
		l_i_sumqty = 0;

   if(strcmp(chr_slb_trade,"N") == 0)
   {
	   	if(auction_flag==1)
	{
		EXEC SQL SELECT (SUM(QTY)/2) AS QTY INTO :l_sumqty:l_i_sumqty
		FROM DL_DEAL d, mt_settl_cal m
		WHERE DEAL_STAT    IN ('CC','MS')
		AND INSTR_CODE      = :p_instr_code
		AND DEAL_CD        IN ('2','4')
		AND CLH_FLG         = 'C'
		AND QTY            != ALLOT_QTY
		AND D.EXCH_CODE       =:g_chr_exch_code
		//AND AUCTION_DT=:l_str_start_date
		AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
		OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
		AND D.MKT_TYPE=M.SETTL_TYPE
		AND D.SETTLEMENT_NO   = M.SETTL_NO
		AND D.EXCH_CODE   = M.EXCH_CODE
		ORDER BY QTY;
	}
	else
	{
		
		EXEC SQL SELECT (SUM(QTY)/2) AS QTY INTO :l_sumqty:l_i_sumqty  FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		/*
			AND CLIENT  =     :p_client_cd
			*/
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS'))*/ /*added by PT for MCS*/ /* SLB CHGS Ashish 04-04-2008 */
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/ 
		AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
	  	AND QTY != ALLOT_QTY	/* CHANGES BY AMISH --23/05 */
		AND exch_code =:g_chr_exch_code //Added BY Prashant THatte for same settelement no for different exchages 
				AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;
	}
		
	printf("\n the sql code4 in if is |%d|",sqlca.sqlcode);
				fflush(stdout);
	IS_ANY_ORA_ERROR
  }
  else
  {
	 EXEC SQL SELECT (SUM(QTY)/2) INTO :l_sumqty:l_i_sumqty  FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE IN ('63','64','65') AND EXCH_CODE ='MCS'))/*added by PT FOR MCS*/

      AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
	  	AND QTY != ALLOT_QTY	
		AND exch_code =:g_chr_exch_code //Added BY Prashant THatte for same settelement no for different exchages 		
		ORDER BY QTY;
	printf("\n the sql code4 in else is |%d|",sqlca.sqlcode);
				fflush(stdout);
	IS_ANY_ORA_ERROR
}
	printf("\n before opening cursor l_sumqty |%lf|\n",l_sumqty);
				fflush(stdout);
  /*SLB CHANGES - AMISH -28082008*/
    /* ASHISH 28-02-2008 Start */

		 Alert("\n Pool quantity is |%lf|, Deal qty is |%lf| \n",p_poolacc_qty, (2*l_sumqty));
			l_pool_minus_sumqty = 0.0;
			l_sumqty_mult_2 = l_sumqty * 2.0;
		 Alert("\n Pool quantity is |%lf|, New Deal qty is |%lf| \n",p_poolacc_qty, l_sumqty_mult_2);

		 Alert("\n Before Pool minus deal sum quantity is |%lf| \n",l_pool_minus_sumqty);
		 EXEC SQL SELECT :p_poolacc_qty - :l_sumqty_mult_2 into :l_pool_minus_sumqty from dual;
		 IS_ANY_ORA_ERROR;

/*		 l_pool_minus_sumqty = p_poolacc_qty - l_sumqty_mult_2;*/
		 Alert("\n After Pool minus deal sum quantity is |%lf| \n",l_pool_minus_sumqty);

     /*if((double)p_poolacc_qty > (double)(2.0*l_sumqty))*/
     /*if((double)p_poolacc_qty > (double)l_sumqty_mult_2)*/
     if(l_pool_minus_sumqty > 0.000000)
     {
      fprintf(l_plogfile,"\n ******************************************************************************** \n");
		fprintf(l_plogfile,"\n Pool Quantity from %s is |%lf| exceeding than required quantity |%lf| for allotment of Instrument %s \n",p_depo_cd,p_poolacc_qty,l_sumqty_mult_2,p_instr_code);
		printf("\n Pool Quantity from %s is |%lf| exceeding than required quantity |%lf| for allotment of Instrument %s \n",p_depo_cd,p_poolacc_qty,l_sumqty_mult_2,p_instr_code);
				fflush(stdout);
      Alert("\n Pool Quantity from %s exceeds than required quantity for allotment \n",p_depo_cd);
      fprintf(l_plogfile,"\n So Allotment process stops \n");
      fprintf(l_plogfile,"\n ******************************************************************************** \n");

      APL_GOBACK_FAIL
     }

    /* ASHISH 28-02-2008 End */
  /*SLB CHANGES - AMISH -28082008*/
    
   if(strcmp(chr_slb_trade,"N") == 0)
    {
		if(auction_flag==1)
		{
		EXEC SQL DECLARE l_cur_halfqty_dec1 CURSOR FOR SELECT (NVL(QTY ,0)/2) AS QTY,
		  IDENTIY_NO,
		  CLIENT
		FROM DL_DEAL d, mt_settl_cal m
		WHERE DEAL_STAT    IN ('CC','MS')
		AND INSTR_CODE      = :p_instr_code
		AND DEAL_CD        IN ('2','4')
		AND CLH_FLG         = 'C'
		AND QTY            != ALLOT_QTY
		AND D.EXCH_CODE       =:g_chr_exch_code
		//AND AUCTION_DT=:l_str_start_date
		AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
		OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
		AND D.MKT_TYPE=M.SETTL_TYPE
		AND D.SETTLEMENT_NO   = M.SETTL_NO
		AND D.EXCH_CODE   = M.EXCH_CODE
		ORDER BY QTY;
		}
		else
		{
		EXEC SQL DECLARE l_cur_halfqty_dec CURSOR FOR
		/*SELECT ROUND(NVL(QTY ,0)/2,4),IDENTIY_NO,CLIENT*/
		SELECT (NVL(QTY ,0)/2) AS QTY,IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		/*
			AND CLIENT  =     :p_client_cd
			*/
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS'))*/ /*added by PT */ /* SLB CHGS Ashish 04-04-2008 */
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/
		AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'/* CHANGES BY AMISH --23/05 */
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
				AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;
	}
	printf("\n the sql code5 in if is |%d|",sqlca.sqlcode);
				fflush(stdout);
	
	IS_ANY_ORA_ERROR
   }
   else
   {
		EXEC SQL DECLARE l_cur_halfqty_slb_dec CURSOR FOR
		/*SELECT ROUND(NVL(QTY ,0)/2,4),IDENTIY_NO,CLIENT*/
		SELECT (NVL(QTY ,0)/2),IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE IN ('63','64','65') AND EXCH_CODE ='MCS')) /*added by PT */
		
      AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
		ORDER BY QTY;
	printf("\n the sql code5 in else is |%d|",sqlca.sqlcode);
				fflush(stdout);
   IS_ANY_ORA_ERROR

   }

   if(strcmp(chr_slb_trade,"N") == 0)
   {

	if(auction_flag==1)
	{
			EXEC SQL OPEN l_cur_halfqty_dec1;
		IS_ANY_ORA_ERROR
	}
	else
	{
			EXEC SQL OPEN l_cur_halfqty_dec;
		IS_ANY_ORA_ERROR
	}
   }
   else
   {
      EXEC SQL OPEN l_cur_halfqty_slb_dec;
      IS_ANY_ORA_ERROR
   }
  /*SLB CHANGES - AMISH -28082008*/
		for(;;)
		{
         if(strcmp(chr_slb_trade,"N") == 0)
         {
			if(auction_flag==1)
				{
					EXEC SQL FETCH l_cur_halfqty_dec1 INTO :l_half_qty,
				  :l_identiy_no,:l_client_cd;     /*CHGS BY AMISH */
				}
				else
				{
					EXEC SQL FETCH l_cur_halfqty_dec INTO :l_half_qty,
				  :l_identiy_no,:l_client_cd;     /*CHGS BY AMISH */
				}

         }
         else
         {
			EXEC SQL FETCH l_cur_halfqty_slb_dec INTO :l_half_qty,
				  :l_identiy_no,:l_client_cd;  
         }
   /*SLB CHANGES - AMISH -28082008*/
			if (APL_ZERO_RESULT_SET)
			{
				break;
			}
			printf("\n the sql code6 is |%d|",sqlca.sqlcode);
				fflush(stdout);
			IS_ANY_ORA_ERROR

			printf("\n insite curtosor l_half_qty (Selected Deal half quantity) --- |%lf|\n",l_half_qty);
				fflush(stdout);
			printf("\n insite curtosor p_poolacc_qty (Total Pool quantity) --- |%lf|\n",p_poolacc_qty);
				fflush(stdout);


				/* CHANGES BY AMISH --15/05 */
				if(!strlen(l_identiy_no))i_identiy_no = -1;
				else i_identiy_no = 0;

				if(!strlen(l_client_cd))i_client_cd = -1;
				else i_client_cd = 0;

				l_poolhalqty = p_poolacc_qty - l_sumqty;
			printf("\n insite curtosor l_poolhalqty (Pool qty - Half of sum of all Deals qty)- --- |%lf|\n",l_poolhalqty);
				fflush(stdout);

			if(l_poolhalqty >= 0)
			{
				printf("\n (Pool half is > Deal Qty Sum half) ... \n");
				fflush(stdout);

				printf("\n in if ==insite curtosor before -temp1 (Incremental previous deal half qty) --- |%lf|\n",temp1);
				fflush(stdout);
				temp1=temp1+l_half_qty;
			
				printf("\n in if == insite curtosor temp1 (Incremental current deal half qty) --- |%lf|\n",temp1);
				fflush(stdout);
				printf("\n  in if ==insite curtosor l_poolhalqty --- |%lf|\n",l_poolhalqty);
				fflush(stdout);


				if(temp1 > l_poolhalqty)
				{

					printf("\n (Insufficient qty in pool hence going for shortage ) ... \n");
				fflush(stdout);
					printf("\n insite curtosor l_short_qty --- |%lf|\n",l_short_qty);
				fflush(stdout);

					l_short_qty = temp1 - l_poolhalqty;
					l_addqty = l_half_qty - l_short_qty;

				printf("\n insite curtosor l_short_qty (Shortage to current deal) --- |%lf|\n",l_short_qty);
				fflush(stdout);
					l_qty_rounded = 0.0;
					CO_Round(l_short_qty,4,&l_qty_rounded);
					l_short_qty = l_qty_rounded;

					l_qty_rounded = 0.0;
					CO_Round(l_addqty,4,&l_qty_rounded);
					l_addqty = l_qty_rounded;
				printf("\n insite curtosor l_addqty (Alloted to current deal) --- |%lf|\n",l_addqty);
				fflush(stdout);

                                         /* ASHISH 06-02-2008 Start */
					if(l_addqty < 0)
					{
						/* l_qty_remain = floor(l_half_qty);    */
						l_qty_remain = l_half_qty;    
						l_allot_qty = l_qty_remain;
                l_short_qty = 2*l_half_qty - l_allot_qty;
					}
					else
					{
					//	l_qty_remain = ceil(l_half_qty + l_addqty);
         // above line is commented by madhavi for not to round the l_qty_remain to the above number
					   l_qty_remain =(l_half_qty + l_addqty);  	
                l_allot_qty = l_qty_remain;
                l_short_qty = 2*l_half_qty - l_allot_qty; 
					}
                                         /* ASHISH 06-02-2008 End */
					printf("\n (Current deal shortage is |%lf|. Allotment is |%lf|) \n",l_short_qty,l_allot_qty); 
				fflush(stdout);
				}
				else
				{
					printf("\n (Sufficient qty in pool hence NO shortage ) ... \n");
				fflush(stdout);
					l_short_qty = 0;
					l_qty_remain = 2*l_half_qty;
					l_allot_qty = l_qty_remain;
					printf("\n (Current deal shortage is |0|. Allotment is |%lf|) \n",l_allot_qty); 
				fflush(stdout);
				}
					printf("\nLeaving if l_poolhalqty > 0 clause (Before).. l_short_qty=|%lf|,l_qty_remain=|%lf|,l_allot_qty=|%lf|\n",l_short_qty,l_qty_remain,l_allot_qty);
				fflush(stdout);

					l_orig_short_qty = 0.0;
					l_orig_short_qty = l_short_qty;

					l_qty_rounded = 0.0;
					l_qty_rounded = (round(l_short_qty*pow(10.0,4)) / pow(10.0,4));
					l_short_qty = l_qty_rounded;

					l_qty_remain = l_qty_remain + (l_orig_short_qty - l_short_qty); 
					l_allot_qty = l_qty_remain ;
					printf("\nLeaving if l_poolhalqty > 0 clause (After).. l_short_qty=|%lf|,l_qty_remain=|%lf|,l_allot_qty=|%lf|\n",l_short_qty,l_qty_remain,l_allot_qty);
				fflush(stdout);

				l_qty = 2*l_half_qty;
			}
			else
			{
				printf("\n (Pool half is <= Deal Qty Sum half) ... \n");
				fflush(stdout);
				printf("\n  in else ==insite curtosor before -temp1 (Incremental previous deal half qty) --- |%lf|\n",temp1);
				fflush(stdout);

				temp1=temp1+l_half_qty;

				printf("\n in else ==insite curtosor temp1 (Incremental current deal half qty) --- |%lf|\n",temp1);
				fflush(stdout);
				printf("\n in else ==insite curtosor l_poolhalqty --- |%lf|\n",l_poolhalqty);
				fflush(stdout);

				if(temp1 > p_poolacc_qty)
				{
					printf("\n Inside temp1>p_pool \n");
				fflush(stdout);
					printf("\ntemp1=|%lf|,p_poolacc_qty=|%lf|,l_half_qty=|%lf|\n",temp1,p_poolacc_qty,l_half_qty);
				fflush(stdout);

					l_short_qty = (temp1 - p_poolacc_qty) + l_half_qty;
					l_qty_remain = l_half_qty - (temp1 - p_poolacc_qty);
					l_allot_qty = l_qty_remain;
					if(l_qty_remain < 0)
					{
						printf("\n Inside l_qty_remain < 0 \n");
				fflush(stdout);
						l_short_qty = 2*l_half_qty;
						l_qty_remain = 0;
						l_allot_qty = l_qty_remain;
					}
					printf("\nLeaving if clause (Before).. l_short_qty=|%lf|,l_qty_remain=|%lf|,l_allot_qty=|%lf|\n",l_short_qty,l_qty_remain,l_allot_qty);
				fflush(stdout);

					l_orig_short_qty = 0.0;
					l_orig_short_qty = l_short_qty;

					l_qty_rounded = 0.0;
					l_qty_rounded = (round(l_short_qty*pow(10.0,4)) / pow(10.0,4));
					l_short_qty = l_qty_rounded;

					l_qty_remain = l_qty_remain + (l_orig_short_qty - l_short_qty); 
					l_allot_qty = l_qty_remain ;
					printf("\nLeaving if clause (After).. l_short_qty=|%lf|,l_qty_remain=|%lf|,l_allot_qty=|%lf|\n",l_short_qty,l_qty_remain,l_allot_qty);
				fflush(stdout);
				}
				else
				{

					/*l_fourth_decimal = 0;
					exec sql select to_number(substr(to_char(:l_half_qty),length(to_char(:l_half_qty)),1)) 
					into :l_fourth_decimal from dual;

					IS_ANY_ORA_ERROR;

					printf("\n 4th decimal is |%d| \n",l_fourth_decimal);
				fflush(stdout);

					if (l_fourth_decimal % 2)
					{
						printf("\n Inside ODD Digit l_short_qty before |%lf| \n",l_short_qty);
				fflush(stdout);
						l_short_qty = l_half_qty - (( 1 / 100000) * l_fourth_decimal);	
						printf("\n Inside ODD Digit l_short_qty after |%lf| \n",l_short_qty);
				fflush(stdout);
					}
					else
					{
						l_short_qty = l_half_qty;
						printf("\n Inside EVEN Digit l_short_qty before |%lf| \n",l_short_qty);
				fflush(stdout);
					}*/
					/*l_short_qty_till_four_decimal = 0.0;
					CO_Round(l_half_qty,4,&l_short_qty_till_four_decimal);
					l_short_qty = l_short_qty_till_four_decimal;	*/
					/*l_short_qty = l_half_qty;	*/
					l_short_qty = (round(l_half_qty*pow(10.0,4)) / pow(10.0,4));
					l_qty_remain = l_half_qty + (l_half_qty - l_short_qty);
					l_allot_qty = l_qty_remain ;
				}
				l_qty = 2*l_half_qty;
			}

					

                                        /* Add by ASHISH 16-05-2007 START */
	printf("1Client |%s| Instrument |%s| Sett No |%s| \n",l_client_cd,p_instr_code,p_settlement_no);
				fflush(stdout);
		printf("\n l_short_qty ---|%lf|,l_qty_remain---|%lf|,l_allot_qty---|%lf| \n",l_short_qty,l_qty_remain,l_allot_qty);
				fflush(stdout);

		/*
                                               if( l_qty_remain - floor(l_qty_remain) >= 0.5 )
                                               {
                                                   l_short_qty = ceil(l_short_qty);
                                                   l_qty_remain = floor(l_qty_remain);
                                                   l_allot_qty = floor(l_allot_qty);
                                               }
                                                
                                               else
                                               { 
                                                   l_short_qty = ceil(l_short_qty);
                                                   l_qty_remain = floor(l_qty_remain);
                                                   l_allot_qty = floor(l_allot_qty);
                                               }
                                 
          */                               /* Add by ASHISH 16-05-2007 END */

			printf("\n after adjustments	l_short_qty ---|%lf|,l_qty_remain---|%lf|,l_allot_qty---|%lf| \n",l_short_qty,l_qty_remain,l_allot_qty);
				fflush(stdout);
			
				//		printf("1Client |%s| Instrument |%s| Sett No |%s| Available |%d| Short |%d| allot_qty |%d| status |%s|\n",l_client_cd,p_instr_code,p_settlement_no,l_qty_remain,l_short_qty,l_allot_qty,l_status);

			/* CHANGES BY AMISH --15/05 */

			i_user = 0;
			i_access_stamp = 0;
		//	printf("\nMAKER IS ************************|%s|\n",p_user);
		//	printf("\naccess stamp IS ************************|%s|\n",p_access_stamp);
		//	printf("\nclient IS ************************|%s|\n",l_client_cd);
		//	printf("\n DEPO code = |%s|", p_depo_cd);
		//	printf("\n DEPO ID = |%s|", p_dp_id);

        /* CHANGES BY AMISH --16/05 */
				if(!strcmp(p_depo_cd,"NSDL"))
				{
					strcpy(l_pool_trans,"N");
				}
				else if(!strcmp(p_depo_cd,"CDSL"))
				{
					strcpy(l_pool_trans,"Y");
				}

                        /* Bageshri HDFC EMERFIX Retro */
			fprintf(l_plogfile,"\n CLIENT - |%s|, l_identiy_no - |%s|,INSTR_CODE - |%s| ,ALLOTED QTY - |%lf| ,SHORTAGE QTY is |%lf|\n",l_client_cd,l_identiy_no,p_instr_code,l_allot_qty,l_short_qty);   /*SLB CHANGES - AMISH -28082008*/
        /* Added  by Gouse For Decimal Length of MF- Start - 31/10/2011 */

                       IF_COND_EXISTS("QTY_RND_MF_MKT","QTY_RND_FOR_MF_MKT")
                       {
							   char_l3_val = 0.0;
                               CR_Proc_InstrQtyRound_Chk(l_qty_remain,p_instr_code,&char_l3_val, l_debug_info_ptr );
                               l_qty_remain =char_l3_val;
                       }
        /* Added  by Gouse For Decimal Length of MF- End - 31/10/2011 */
		Alert("Qty remain = |%lf|",l_qty_remain);
		fflush(stdout);
			EXEC SQL INSERT INTO DL_MARKSHORTAGE (SETTLEMENT_NO,
					DL_CLIENT,
					DL_REF_NO,
					INSTR_CODE,
					QTY,
					AVAIL_QTY,
					ALLOT_QTY,
					SHORTAGE_QTY,
					POOL_TRANS,
					STATUS,MAKER,MAKER_DT,ACCESS_STAMP,DP_ID,DEPO_CODE,FILEBATCH_NO,MKT_TYPE,EXCH_CODE) VALUES (
						:p_settlement_no:i_settlement_no,
						:l_client_cd:i_client_cd,
						:l_identiy_no:i_identiy_no,
						:p_instr_code:i_instr_code,
						:l_qty:i_qty,
						:l_qty_remain:i_qty_remain,
						:l_allot_qty:i_allot_qty,
						:l_short_qty:i_short_qty,
						:l_pool_trans:i_pool_trans,
						:l_status:i_status,
						:p_user:i_user,
						:p_access_stamp:i_access_stamp,
						:p_access_stamp:i_access_stamp,
						:p_dp_id:i_dp_id,                /* changes by amish --22/05 */
						:p_depo_cd:i_depo_cd,
						:p_filebatch_no:i_filebatch_no,
						:p_mkt_type,
						:g_chr_exch_code); /* changes by amish - 25/05 */
				
			printf("\n sundar1 ************ the sql code7 is |%d|",sqlca.sqlcode);
			fflush(stdout);

			IS_ANY_ORA_ERROR

				printf("\n 1: Updating dl_deal with avail=%lf, shortage=%lf \n",l_qty_remain,l_short_qty);
				printf("\n 1: With where  clause refno |%s|, client |%s|, settlno |5%| \n",l_identiy_no,l_client_cd,p_settlement_no);
				fflush(stdout);
				EXEC SQL UPDATE DL_DEAL SET AVAIL_QTY = :l_qty_remain:i_qty_remain,
					  SHORTAGE_QTY = :l_short_qty:i_short_qty,
						MKT_TYPE = :p_mkt_type:i_mkt_type
						  WHERE
						  IDENTIY_NO = :l_identiy_no AND
						  /* CHANGES BY AMISH --15/05 */
							  CLIENT = :l_client_cd 
							  
						  //AND SETTLEMENT_NO = :p_settlement_no
						  and exch_code =:g_chr_exch_code //Added by PT for same settlement no
						  AND DEAL_CD IN ('2','4');
			printf("\n sundar2 ************ the sql code8 is |%d|",sqlca.sqlcode);
				fflush(stdout);
			IS_ANY_ORA_ERROR

		}
    /*SLB CHANGES - AMISH -28082008*/
   if(strcmp(chr_slb_trade,"N") == 0)
   {
			   if(auction_flag==1)
		{
			EXEC SQL CLOSE l_cur_halfqty_dec1;
		}
		else
		{
			EXEC SQL CLOSE l_cur_halfqty_dec;
		}

	printf("\n sundar3 ************ the sql code9 in if is |%d|",sqlca.sqlcode);
				fflush(stdout);
	printf("\n Sana Chk here 1");
				fflush(stdout);
	IS_ANY_ORA_ERROR
   }
   else
   {
	EXEC SQL CLOSE l_cur_halfqty_slb_dec;
	printf("\n sundar3 ************ the sql code9 in else is |%d|",sqlca.sqlcode);
				fflush(stdout);
	IS_ANY_ORA_ERROR
   }

		fprintf(l_plogfile,"%13s%13s%14lf%13s%10d",p_settlement_no,p_instr_code,p_poolacc_qty_tmp,p_depo_cd,p_filebatch_no);
		fprintf(l_plogfile,"\n\n DealRefNo       Client       Quantity      AvailQty     ShortQty \n");
		fprintf(l_plogfile,"------------------------------------------------------------------\n");

       /*SLB CHANGES - AMISH -28082008*/

	Alert("Before declaring cursor----");
	fflush(stdout);

    if(strcmp(chr_slb_trade,"N") == 0)
    { 
		if(auction_flag==1)
		{
				EXEC SQL DECLARE l_cur_shortdeal_dec1 CURSOR FOR SELECT NVL(QTY ,0),AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
		FROM DL_DEAL d, mt_settl_cal m
		WHERE DEAL_STAT    IN ('CC','MS')
		AND INSTR_CODE      = :p_instr_code
		AND DEAL_CD        IN ('2','4')
		AND CLH_FLG         = 'C'
		AND QTY            != ALLOT_QTY
		AND D.EXCH_CODE       =:g_chr_exch_code
		//AND AUCTION_DT=:l_str_start_date
		AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
		OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
		AND D.MKT_TYPE=M.SETTL_TYPE
		AND D.SETTLEMENT_NO   = M.SETTL_NO
		AND D.EXCH_CODE   = M.EXCH_CODE
		ORDER BY QTY;	
		}
else
{


EXEC SQL DECLARE l_cur_shortdeal_dec CURSOR FOR SELECT NVL(QTY ,0) AS QTY,AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS'))*/ /*added by PT */ 
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/
		AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
				AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;
}
      printf("\n Sql Error to declare cursor l_cur_shortdeal_dec = |%d| \n",sqlca.sqlcode);
	fflush(stdout);
		IS_ANY_ORA_ERROR
    }  /*SLB CHANGES - AMISH -28082008*/
    else
    {
		EXEC SQL DECLARE l_cur_shortdeal_slb_dec CURSOR FOR SELECT NVL(QTY ,0),AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
		FROM DL_DEAL
		WHERE DEAL_STAT   in ('CC','MS')
		AND INSTR_CODE    =     :p_instr_code
		AND SETTLEMENT_NO =  :p_settlement_no
      
      AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
        OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')
		OR (MKT_TYPE IN ('63','64','65') AND EXCH_CODE ='MCS')) /*added by PT for MCS */ 

		AND DEAL_CD IN ('2','4')
		AND CLH_FLG = 'C'
		AND QTY != ALLOT_QTY
		AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
		ORDER BY QTY;
      printf("\n Sql Error to declare cursor l_cur_shortdeal_slb_dec = |%d| \n",sqlca.sqlcode);
	fflush(stdout);
		IS_ANY_ORA_ERROR
    }

    if(strcmp(chr_slb_trade,"N") == 0)
    { 
		if(auction_flag==1)
		{
		EXEC SQL OPEN l_cur_shortdeal_dec1;
				IS_ANY_ORA_ERROR
		}
		else
		{
		EXEC SQL OPEN l_cur_shortdeal_dec;
				IS_ANY_ORA_ERROR
		}

    }
    else
    {
		EXEC SQL OPEN l_cur_shortdeal_slb_dec;
		IS_ANY_ORA_ERROR
    }
		for(;;)
		{
  /*SLB CHANGES - AMISH -28082008*/
    if(strcmp(chr_slb_trade,"N") == 0)
    {
		if(auction_flag==1)
		{
		EXEC SQL FETCH l_cur_shortdeal_dec1 INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
		}
		else
		{
		EXEC SQL FETCH l_cur_shortdeal_dec INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
		}

    }
    else
    {
		EXEC SQL FETCH l_cur_shortdeal_slb_dec INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
    }		
		if (APL_ZERO_RESULT_SET)
		{
				break;
		}
		IS_ANY_ORA_ERROR
		
		printf("\n l_dealqty|%lf|,l_availqty=|%lf|,l_shortqty|%lf|,l_dealrefno|%s|,l_client|%s| \n",l_dealqty,l_availqty,l_shortqty,l_dealrefno,l_client);
				fflush(stdout);
	
		fprintf(l_plogfile,"%13s%13s%14lf%13lf%12lf \n",l_dealrefno,l_client,l_dealqty,l_availqty,l_shortqty);

		/*
		if(l_availqty - floor(l_availqty) < 1 && (l_availqty - floor(l_availqty) > 0))
		{	
			printf("\n final qty \n");
				printf("\n 2 With Floor: Updating dl_deal with avail=%lf, shortage=%lf \n",floor(l_availqty) ,(l_shortqty+(l_availqty - floor(l_availqty))));
	fflush(stdout);
			EXEC SQL UPDATE DL_DEAL SET AVAIL_QTY=floor(:l_availqty),
										SHORTAGE_QTY=:l_shortqty+(:l_availqty - floor(:l_availqty))
					WHERE CLIENT=:l_client
					AND IDENTIY_NO=:l_dealrefno;
			printf("\nSLB 1 - SQLCA.SQLCODE - |%d| \n",sqlca.sqlcode);
				fflush(stdout);
			IS_ANY_ORA_ERROR

			EXEC SQL UPDATE DL_MARKSHORTAGE SET AVAIL_QTY=floor(:l_availqty),
												ALLOT_QTY=floor(:l_availqty),
												SHORTAGE_QTY=:l_shortqty+(:l_availqty - floor(:l_availqty))
				WHERE DL_CLIENT=:l_client
					AND DL_REF_NO=:l_dealrefno;
						printf("\nSLB 2 - SQLCA.SQLCODE - |%d| \n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR

			l_pend_final=l_pend_final+(l_availqty - floor(l_availqty));
		}
		*/	
		if((l_availqty - l_availqty) < 1 && (l_availqty - l_availqty) > 0)
		{	
			printf("\n final qty \n");
				printf("\n 2 With Floor: Updating dl_deal with avail=%lf, shortage=%lf \n",l_availqty ,l_shortqty+(l_availqty - l_availqty));
				fflush(stdout);
			EXEC SQL UPDATE DL_DEAL SET AVAIL_QTY=:l_availqty,
										SHORTAGE_QTY=:l_shortqty+(:l_availqty - :l_availqty)
					WHERE CLIENT=:l_client
					AND IDENTIY_NO=:l_dealrefno;
			printf("\nSLB 1 - SQLCA.SQLCODE - |%d| \n",sqlca.sqlcode);
				fflush(stdout);
			IS_ANY_ORA_ERROR

			EXEC SQL UPDATE DL_MARKSHORTAGE SET AVAIL_QTY=:l_availqty,
												ALLOT_QTY=:l_availqty,
												SHORTAGE_QTY=:l_shortqty+(:l_availqty - :l_availqty)
				WHERE DL_CLIENT=:l_client
					AND DL_REF_NO=:l_dealrefno;
						printf("\nSLB 2 - SQLCA.SQLCODE - |%d| \n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR

			l_pend_final=l_pend_final+(l_availqty - l_availqty);
		}
		
		}

	if(strcmp(chr_slb_trade,"N") == 0)
		{
				if(auction_flag==1)
				{
				EXEC SQL CLOSE l_cur_shortdeal_dec1 ;
				}
				else
				{
					EXEC SQL CLOSE l_cur_shortdeal_dec ;
				}

		}
	else
		{
				EXEC SQL CLOSE l_cur_shortdeal_slb_dec;
	    }		
  /*SLB CHANGES - AMISH -28082008*/
	    fflush(stdout);
	/* Printing of Pending pool quantity in shortage report has been moved at the end of all iterations ...
		fprintf(l_plogfile,"*****************************************************************************************\n");
		fprintf(l_plogfile,"Pending Pool Qty for Settlement No:%s and Instrument:%s =%lf \n",p_settlement_no,p_instr_code,l_pend_final);
		fprintf(l_plogfile,"*****************************************************************************************\n");
		fflush(stdout);
	*/

    	printf("\n final pending qty =|%lf| \n ",l_pend_final);
	fflush(stdout);

 
      /* ASHISH 27-02-2008 */
      ABOVE:

		if(l_pend_final > 0)
		{
       
    if(strcmp(chr_slb_trade,"N") == 0)
    {
		if(auction_flag==1)
		{
		EXEC SQL DECLARE l_cur_shortdeal1_dec1 CURSOR FOR SELECT NVL(QTY ,0) AS QTY,AVAIL_QTY,SHORTAGE_QTY,
		  IDENTIY_NO,
		  CLIENT
		FROM DL_DEAL d, mt_settl_cal m
		WHERE DEAL_STAT    IN ('CC','MS')
		AND INSTR_CODE      = :p_instr_code
		AND DEAL_CD        IN ('2','4')
		AND CLH_FLG         = 'C'
		AND QTY            != ALLOT_QTY
		AND D.EXCH_CODE       =:g_chr_exch_code
		//AND AUCTION_DT=:l_str_start_date
		AND ((TO_CHAR(TO_DATE(AUCTION_DT),'DD/MM/YYYY')=TO_CHAR(TO_DATE(:l_str_start_date),'DD/MM/YYYY') AND D.exch_code!='BSE' )
		OR (D.EXCH_CODE='BSE' and D.SETTLEMENT_NO=:p_settlement_no))
		AND D.MKT_TYPE=M.SETTL_TYPE
		AND D.SETTLEMENT_NO   = M.SETTL_NO
		AND D.EXCH_CODE   = M.EXCH_CODE
		ORDER BY QTY;
		}
		else
		{
				            printf("\n 1 BEFORE CURSOR SQLCA.SQLCODE  = |%d| \n",sqlca.sqlcode);
				EXEC SQL DECLARE l_cur_shortdeal1_dec CURSOR FOR SELECT NVL(QTY ,0) AS QTY,AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
				FROM DL_DEAL
				WHERE DEAL_STAT   in ('CC','MS')
				AND INSTR_CODE    =     :p_instr_code
				AND SETTLEMENT_NO =  :p_settlement_no
            
            /*AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE ='BSE')   
            OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE ='NSE')
	OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS')*/ /*added by PT for MCS*/ 
				/*AND (((MKT_TYPE IN ('13','22') AND EXCH_CODE ='NSE') AND 'Y'=:NSE_mkt_type)
		OR (MKT_TYPE =  :NSE_mkt_type))*/
                                AND DEAL_CD IN ('2','4')
				AND CLH_FLG = 'C'
				AND QTY != ALLOT_QTY
				AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
					AND ((:p_mkt_type in ('13','22') and :g_chr_exch_code='NSE' and mkt_type in ('13','22') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('5','16') and :g_chr_exch_code='BSE' and mkt_type in ('5','16') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('01','03') and :g_chr_exch_code='MCS' and mkt_type in ('01','03') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('49','50') and :g_chr_exch_code='NSE' and mkt_type in ('49','50') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('41','17') and :g_chr_exch_code='BSE' and mkt_type in ('41','17') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('23','24') and :g_chr_exch_code='MCS' and mkt_type in ('23','24') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('45','57') and :g_chr_exch_code='BSE' and mkt_type in ('45','57') and SETTLEMENT_NO   = :p_settlement_no)
		OR
		(:p_mkt_type in ('55','56') and :g_chr_exch_code='NSE' and mkt_type in ('55','56') and SETTLEMENT_NO   = :p_settlement_no)
		)
		ORDER BY QTY;
		
				}
            printf("\n Sql Error to declare cursor l_cur_shortdeal1_dec = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
				IS_ANY_ORA_ERROR
     }  /*SLB CHANGES - AMISH -28082008*/
     else
{
		printf("\n instr code and settl no is |%s|,|%s| \n",p_settlement_no,p_instr_code);

		            printf("\n BEFORE CURSOR SQLCA.SQLCODE  = |%d| \n",sqlca.sqlcode);
	fflush(stdout);
				EXEC SQL DECLARE l_cur_sh_dec CURSOR FOR SELECT NVL(QTY ,0),AVAIL_QTY,SHORTAGE_QTY,IDENTIY_NO,CLIENT
				FROM DL_DEAL
				WHERE DEAL_STAT   in ('CC','MS')
				AND INSTR_CODE    =     :p_instr_code
				AND SETTLEMENT_NO =  :p_settlement_no
					/*
            AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE ='BSE')   
            OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE ='NSE')) 
			*/
          	AND DEAL_CD IN ('2','4')
				AND CLH_FLG = 'C'
				AND QTY != ALLOT_QTY
				AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
				ORDER BY QTY;

            printf("\n Sql Error to declare cursor l_cur_sh_dec = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
				IS_ANY_ORA_ERROR
}     
    if(strcmp(chr_slb_trade,"N") == 0)
    {

			if(auction_flag==1)
			{
				EXEC SQL OPEN l_cur_shortdeal1_dec1;
				IS_ANY_ORA_ERROR
			}
			else
			{
				EXEC SQL OPEN l_cur_shortdeal1_dec;
				IS_ANY_ORA_ERROR
			}
    }
    else
    { 
            EXEC SQL OPEN l_cur_sh_dec;
				IS_ANY_ORA_ERROR
    }
				for(;;)
				{

    if(strcmp(chr_slb_trade,"N") == 0)
    {
				if(auction_flag==1)
{
EXEC SQL FETCH l_cur_shortdeal1_dec1 INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
}
else
{
EXEC SQL FETCH l_cur_shortdeal1_dec INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
}

    }
    else
    {
				EXEC SQL FETCH l_cur_sh_dec INTO  :l_dealqty,:l_availqty,:l_shortqty,:l_dealrefno,:l_client;
    }				
				if (APL_ZERO_RESULT_SET)
				{
						break;
				}
				IS_ANY_ORA_ERROR
				
				printf("\n l_dealqty|%lf|,l_availqty=|%lf|,l_shortqty|%lf|,l_dealrefno|%s|,l_client|%s| \n",l_dealqty,l_availqty,l_shortqty,l_dealrefno,l_client);
	fflush(stdout);
			
				 //		fprintf(l_plogfile,"%13s%13s%14lf%13lf%12lf \n",l_dealrefno,l_client,l_dealqty,l_availqty,l_shortqty);

					printf("\n final qty \n");
					l_temp_shortqty = 0;
  /*SLB CHANGES - AMISH -28082008*/					printf("\n client is |%s|,deal refno is |%s|\n",l_client,l_dealrefno);
					EXEC SQL SELECT SHORTAGE_QTY into :l_temp_shortqty:i_temp_shortqty FROM DL_MARKSHORTAGE 
						WHERE  DL_CLIENT=:l_client
							AND DL_REF_NO=:l_dealrefno
							AND STATUS = 'UU';
					printf("\n Amish sqlca.sqlcode - |%d|\n",sqlca.sqlcode);
				fflush(stdout);
					IS_ANY_ORA_ERROR
					
					printf("\n final allocation l_temp_shortqty |%lf|\n",l_temp_shortqty);
					printf("\n final allocation l_pend_final |%lf|\n",l_pend_final);
				fflush(stdout);
					if (l_temp_shortqty > 0)
					{

						if(l_temp_shortqty <= l_pend_final)
						{
							l_pend_final = l_pend_final - l_temp_shortqty;
						}

						if((l_temp_shortqty > l_pend_final) && (l_pend_final != 0)) /* ASHISH 27-02-2008 */
						{
							l_temp_shortqty = l_pend_final;
							l_pend_final = 0;
						}

					}

				printf("\n 3: Updating dl_deal with avail=%lf, shortage=%lf \n",l_availqty,l_shortqty);
				fflush(stdout);
					EXEC SQL UPDATE DL_DEAL SET AVAIL_QTY = :l_availqty + :l_temp_shortqty,
												SHORTAGE_QTY = :l_shortqty - :l_temp_shortqty
							WHERE CLIENT=:l_client
							AND IDENTIY_NO=:l_dealrefno;
					IS_ANY_ORA_ERROR

					EXEC SQL UPDATE DL_MARKSHORTAGE SET AVAIL_QTY=:l_availqty + :l_temp_shortqty,
														ALLOT_QTY=:l_availqty + :l_temp_shortqty,
														SHORTAGE_QTY=:l_shortqty - :l_temp_shortqty
						WHERE DL_CLIENT=:l_client
							AND DL_REF_NO=:l_dealrefno;
					IS_ANY_ORA_ERROR
				
					if(l_pend_final == 0)
						break;


				
				}
  /*SLB CHANGES - AMISH -28082008*/
    if(strcmp(chr_slb_trade,"N") == 0)
    {
				if(auction_flag==1)
				{
				EXEC SQL CLOSE l_cur_shortdeal1_dec1 ;
				}
				else
				{
				EXEC SQL CLOSE l_cur_shortdeal1_dec ;
				}

    }
    else
    {
            EXEC SQL CLOSE l_cur_sh_dec;
    }

		}	
                /* ASHISH 27-02-2008 Start */
                if(l_pend_final == 0)
                {
                   
                  if(strcmp(chr_slb_trade,"N") == 0)
                  {
                     EXEC SQL SELECT NVL(:p_poolacc_qty - SUM(ALLOT_QTY),0)
                              INTO:l_pend_final
                              FROM DL_MARKSHORTAGE
                              WHERE SETTLEMENT_NO =:p_settlement_no
                              AND INSTR_CODE =:p_instr_code
                              AND STATUS='UU'
                              AND (DL_CLIENT,DL_REF_NO) IN (SELECT CLIENT,IDENTIY_NO 
                                                            FROM DL_DEAL
                                                            WHERE SETTLEMENT_NO =:p_settlement_no
                                                            AND INSTR_CODE =:p_instr_code
                                                            AND ((MKT_TYPE NOT IN ('18','19','20') AND EXCH_CODE='BSE')
                                                            OR (MKT_TYPE NOT IN ('23','24','25') AND EXCH_CODE='NSE')
							OR (MKT_TYPE NOT IN ('63','64','65') AND EXCH_CODE ='MCS'))/*added by PT for MCS*/
                                                            AND DEAL_STAT IN ('CC','MS')
							AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
															);
                     Alert("\n sqlca.sqlcode in if  = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
                     IS_ANY_ORA_ERROR
                  }

                  else 
                  { 
                     EXEC SQL SELECT NVL(:p_poolacc_qty - SUM(ALLOT_QTY),0)
                                INTO:l_pend_final
                                FROM DL_MARKSHORTAGE
                                WHERE SETTLEMENT_NO =:p_settlement_no
                                AND INSTR_CODE =:p_instr_code
                              AND STATUS='UU'
                              AND (DL_CLIENT,DL_REF_NO) IN (SELECT CLIENT,IDENTIY_NO 
                                                            FROM DL_DEAL
                                                            WHERE SETTLEMENT_NO =:p_settlement_no
                                                            AND INSTR_CODE =:p_instr_code
                                                            AND ((MKT_TYPE IN ('18','19','20') AND EXCH_CODE='BSE')
                                                            OR (MKT_TYPE IN ('23','24','25') AND EXCH_CODE='NSE')
							OR (MKT_TYPE IN ('63','64','65') AND EXCH_CODE ='MCS')) /*added by PT FOR MCS*/
                                                            AND DEAL_STAT IN ('CC','MS')
															AND exch_code =:g_chr_exch_code	//Added BY Prashant THatte for same settelement no for different exchages 
															);
                     Alert("\n sqlca.sqlcode in else  = |%d| \n",sqlca.sqlcode);
				fflush(stdout);
                     IS_ANY_ORA_ERROR
                   }
                     Alert("\n Pending quantity in if = |%lf| \n",l_pend_final);
                 }
  /*SLB CHANGES - AMISH -28082008*/
                 if(l_pend_final > 0)
                 {
                    printf("\n Since pool quantity has not been fully allocated to client of this instrument. \n");
                    printf("\n Hence further reallocation starts \n"); 
				fflush(stdout);
                    goto ABOVE;
                 }
                 else
                 {
                   Alert("\n Pool quantity is fully allocated to individual account containing this instrument \n");

				fprintf(l_plogfile,"*****************************************************************************************\n") ;
				l_qty_rounded = 0.0;
				CO_Round(l_pend_final,4,&l_qty_rounded);
				fprintf(l_plogfile,"Pending Pool Qty for Settlement No:%s and Instrument:%s =%lf \n",p_settlement_no,p_instr_code,l_qty_rounded);
				fprintf(l_plogfile,"*****************************************************************************************\n");
				fflush(stdout);

                   APL_GOBACK_SUCCESS
                 }
                 /* ASHISH 27-02-2008 End */

		RETURN_SUCCESS :
		{
			APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
				return(APL_SUCCESS);
		}
RETURN_FAILURE :
	{
		APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
			return(APL_FAILURE);
	}

}
/* Added  by Gouse For Decimal Length of MF- Start - 31/10/2011 */