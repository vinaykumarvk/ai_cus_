

#include "stdio_64.h"
#include <stdlib.h>
#include <string.h>
//#include <macros.h>
#include "IV_Control_A.h"

#define STYLE "<STYLE>.heading{background:#e8eff9;; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #021882; font-weight: bold;}.lableblue{color: #000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: bold; text-decoration: none}.normalbold{font-family: Arial, Helvetica, sans-serif; font-size: 8pt; font-weight: bold; text-decoration: none}.normal{font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #000000}.lablered{font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #aa1133; font-weight: bold;}.ez1{background:#e8eff9;; color: #000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: normal; text-decoration: none}.ez4{background:#e8eff9; color: #000090; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; font-weight: bold; text-decoration: none text-align: center}.lableredbg{background:#ffeeef; font-family: Arial, Helvetica, sans-serif; font-size: 9pt; color: #aa1133; font-weight: bold;} @page Section1 {size:8.5in 11.0in;margin:1.0in 1.25in 1.0in 1.25in;} div.Section1 {page:Section1;} H3 {page-break-before: always }</STYLE>"

EXEC SQL INCLUDE SQLCA.H;

int IV_BillDetPrntAnnex(FILE *bill,
						char *chr_p_client,
						char *chr_p_billdt,
						char *chr_p_image_path,
						int *int_p_retstat,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	printf("\n In the IV_BillDetPrntAnnex() function");

    char h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	char h_service_cd[5] = APL_NULL_STRING;
    char chr_l_billdt[APL_DATE_LEN]=APL_NULL_STRING;
    short i_bill_dt = 0; 
	int  l_main_page_recs = 0, l_next_page_recs = 0 ;
	short i_main_page_recs = 0, i_next_page_recs = 0 ;
    int int_retstat  =0;

	memset(h_dl_client,APL_NULL_CHAR,sizeof(h_dl_client));
    strcpy(h_dl_client,chr_p_client);

	/*printf("\n In IV_BillDetPrntAnnex() function client is %s",h_dl_client);
	printf("\n In IV_BillDetPrntAnnex() function Bill date is %s",chr_p_billdt);
    printf("\n In IV_BillDetPrntAnnex() function image path is %s",chr_p_image_path);*/

	Alert("chr_p_billdt = |%s|",chr_p_billdt);
	fflush(stdout);

    /* printf("\n changed bill date is %s",chr_l_billdt);*/

    fflush(stdout);

	EXEC SQL SELECT MAP_VAL 
			 INTO :l_main_page_recs:i_main_page_recs
			 FROM PRO_SGENSTAT
			 WHERE MAP_TYPE = 'IV_DETPRNTANNEX'
			 AND MAP_DESC = 'MAIN_PAGE_RECS' ;

	/*printf("\n  Siva Main page recs count is %d incicator is %d sqlerror is %d",l_main_page_recs,i_main_page_recs,sqlca.sqlcode);*/

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT MAP_VAL 
			 INTO :l_next_page_recs:i_next_page_recs
			 FROM PRO_SGENSTAT
			 WHERE MAP_TYPE = 'IV_DETPRNTANNEX'
			 AND MAP_DESC = 'NEXT_PAGE_RECS' ;

	/*printf("\n  Siva Next page recs count is %d incicator is %d sqlerror is %d",l_next_page_recs,i_next_page_recs,sqlca.sqlcode);*/

	IS_ANY_ORA_ERROR
    fflush(stdout);

	printf("\n Printing Transction Annexure in the report");
    fflush(stdout);	

	memset(h_service_cd,APL_NULL_CHAR,sizeof(h_service_cd));
	strcpy(h_service_cd,"IV_122");

	memset(chr_l_billdt,APL_NULL_CHAR,sizeof(chr_l_billdt));
        strncpy(chr_l_billdt,chr_p_billdt,10);

        Alert("chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);


    /*printf("\n Before calling IV_PrntDetTransAnnex client is %s service code is %s main page count is %d nextpage coutn is %d",chr_p_client,h_service_cd,l_main_page_recs,l_next_page_recs);*/

	//if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,chr_l_billdt,h_service_cd,l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,&chr_l_billdt,"IV_122",l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	{
		printf("\n Failed in IV_PrntDetTransAnnex() function for %s",h_service_cd);
		APL_GOBACK_FAIL;
	}
        
    fflush(bill);
    fflush(stdout);
	
	/*printf("\n Printing Late Transction Annexure in the report");*/

        Alert("1 chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);

	memset(h_service_cd,APL_NULL_CHAR,sizeof(h_service_cd));
	strcpy(h_service_cd,"IV_123");

	memset(chr_l_billdt,APL_NULL_CHAR,sizeof(chr_l_billdt));
        strncpy(chr_l_billdt,chr_p_billdt,10);

        Alert("2 chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);

//	if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,chr_l_billdt,h_service_cd,l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,&chr_l_billdt,"IV_123",l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	{
		printf("\n Failed in IV_PrntDetTransAnnex() function for %s",h_service_cd);
		APL_GOBACK_FAIL;
	}

    fflush(bill);
    fflush(stdout);

	/*printf("\n Printing SafeKeeping Annexure in the report");*/

	memset(h_service_cd,APL_NULL_CHAR,sizeof(h_service_cd));
	strcpy(h_service_cd,"IV_124");

	memset(chr_l_billdt,APL_NULL_CHAR,sizeof(chr_l_billdt));
        strncpy(chr_l_billdt,chr_p_billdt,10);

        Alert("2 chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);
	//if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,chr_l_billdt,h_service_cd,l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,&chr_l_billdt,"IV_124",l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	{
		printf("\n Failed in IV_PrntDetTransAnnex() function for %s",h_service_cd);
		APL_GOBACK_FAIL;
	}
        
    fflush(bill);
    fflush(stdout);

	/*printf("\n Printing CA Mandatory Annexure in the report");*/

	memset(h_service_cd,APL_NULL_CHAR,sizeof(h_service_cd));
	strcpy(h_service_cd,"IV_121");

	memset(chr_l_billdt,APL_NULL_CHAR,sizeof(chr_l_billdt));
        strncpy(chr_l_billdt,chr_p_billdt,10);

        Alert("2 chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);

	//if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,chr_l_billdt,h_service_cd,l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,&chr_l_billdt,"IV_121",l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	{
		printf("\n Failed in IV_PrntDetTransAnnex() function for %s",h_service_cd);
		APL_GOBACK_FAIL;
	}
        
    fflush(bill);
    fflush(stdout);

	/*printf("\n Printing CA Voluntory Annexure in the report");*/

	memset(h_service_cd,APL_NULL_CHAR,sizeof(h_service_cd));
	strcpy(h_service_cd,"IV_120");

	memset(chr_l_billdt,APL_NULL_CHAR,sizeof(chr_l_billdt));
        strncpy(chr_l_billdt,chr_p_billdt,10);

        Alert("2 chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);
	//if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,chr_l_billdt,h_service_cd,l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,&chr_l_billdt,"IV_120",l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	{
		printf("\n Failed in IV_PrntDetTransAnnex() function for %s",h_service_cd);
		APL_GOBACK_FAIL;
	}
        
    fflush(bill);
    fflush(stdout);
	
	/*added by shruthi kumbla for ISKB_1737 start*/
	/*printf("\n ISKB_1737 : Per line of security annexxure calculation");*/

	memset(h_service_cd,APL_NULL_CHAR,sizeof(h_service_cd));
	strcpy(h_service_cd,"IV_126");

	memset(chr_l_billdt,APL_NULL_CHAR,sizeof(chr_l_billdt));
        strncpy(chr_l_billdt,chr_p_billdt,10);

        Alert("2 chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);
		if( APL_FAILURE == IV_PrntDetTransAnnex(bill,chr_p_client,&chr_l_billdt,"IV_126",l_main_page_recs,l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	{
		printf("\n Failed in IV_PrntDetTransAnnex() function for %s",h_service_cd);
		APL_GOBACK_FAIL;
	}
        
    fflush(bill);
    fflush(stdout);
	/*added by shruthi kumbla for ISKB_1737 end*/
	l_main_page_recs = 0 ;
	l_next_page_recs = 0 ; 
	i_main_page_recs = 0 ;
	i_next_page_recs = 0 ;

	EXEC SQL SELECT MAP_VAL 
			 INTO :l_main_page_recs:i_main_page_recs
			 FROM PRO_SGENSTAT
			 WHERE MAP_TYPE = 'IV_DETPRNTSAFEANNEX'
			 AND MAP_DESC = 'MAIN_PAGE_RECS' ;

	/*printf("\n For Safekeep Annex Main page recs count is %d incicator is %d sqlerror is %d",l_main_page_recs,i_main_page_recs,sqlca.sqlcode);*/

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT MAP_VAL 
			 INTO :l_next_page_recs:i_next_page_recs
			 FROM PRO_SGENSTAT
			 WHERE MAP_TYPE = 'IV_DETPRNTSAFEANNEX'
			 AND MAP_DESC = 'NEXT_PAGE_RECS' ;

    fflush(stdout); 

	/*printf("\n For Safekeep Annex Next page recs count is %d incicator is %d sqlerror is %d",l_next_page_recs,i_next_page_recs,sqlca.sqlcode);*/

	IS_ANY_ORA_ERROR

	fflush(stdout);	

	memset(h_service_cd,APL_NULL_CHAR,sizeof(h_service_cd));
	strcpy(h_service_cd,"IV_125");

	memset(chr_l_billdt,APL_NULL_CHAR,sizeof(chr_l_billdt));
        strncpy(chr_l_billdt,chr_p_billdt,10);

        Alert("2 chr_l_billdt = |%s|",chr_l_billdt);
        fflush(stdout);

	//if( APL_FAILURE ==IV_PrntSafeKeepAnnex(bill,chr_p_client,chr_l_billdt,h_service_cd,l_main_page_recs, l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	if( APL_FAILURE ==IV_PrntSafeKeepAnnex(bill,chr_p_client,&chr_l_billdt,"IV_125",l_main_page_recs, l_next_page_recs,chr_p_image_path,&int_retstat,l_debug_info_ptr))
	{
		printf("\n Failed in IV_PrntSafeKeepAnnex() function for %s",h_service_cd);
		APL_GOBACK_FAIL;
	}

	RETURN_SUCCESS:
		APL_IF_DEBUG
		{
		  CO_ProcMonitor(APL_OUT_FILE,"Exiting Successfully Out Of IV_BillDetPrntAnnex \n", NULL, NULL);
		}
	return APL_SUCCESS;

	RETURN_FAILURE:
		APL_IF_DEBUG
		{
		   CO_ProcMonitor(APL_OUT_FILE,"Exiting Unsuccessfully Out Of IV_BillDetPrntAnnex\n", NULL, NULL);
		}
	return APL_FAILURE;
}

int IV_PrntDetTransAnnex(FILE *bill,
						char *chr_p_client,
						char *chr_p_billdt,
						char *l_service_cd,
						int main_page_recs,
						int next_page_recs,
						char *chr_p_image_path,
						int *int_p_retstat,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{	
	printf("\n In the function IV_PrntDetTransAnnex() ");
	
	int no_of_records = 0 ;
        int l_header = 1,l_round = 0;
	int main_page_rec_count = 0 ,next_page_rec_count=0;
	char l_final_table_query[12000] = APL_NULL_STRING;	
	char l_table_query[4000] = APL_NULL_STRING;
	char l_table_query1[4000] = APL_NULL_STRING;
	char l_table_query2[4000] = APL_NULL_STRING;
	char l_criteria_col1_query[4000] = APL_NULL_STRING;
	short i_table_query=0,i_table_query1=0,i_table_query2=0 ;
	short i_criteria_col1_query = 0;
    int int_retstat  =0;
	
	/* fee_ccy replaced by b_ccycd Changes done by Shruthi Kumbla ISKB_1737 -- started*/
	
	char l_b_ccycd[APL_CCYCODE_LEN] = APL_NULL_STRING;
	short i_b_ccycd =0;

	/* fee_ccy replaced by b_ccycd Changes done by Shruthi Kumbla ISKB_1737 -- Ended*/
	
	int l_ser_no = 0;
    char l_trans_type[10] =  APL_NULL_STRING ;
	char l_instr_name[131] = APL_NULL_STRING ;
	char l_instr_isin[13] = APL_NULL_STRING ;
	char l_identiy_no[17] = APL_NULL_STRING ;
	char l_deal_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char l_setl_dt[APL_DATE_LEN] = APL_NULL_STRING;
	double l_qty = 0 ,l_amount=0,l_comm_amt=0;
	double l_grand_total =0;
    char l_str_grand_total[35] = APL_NULL_STRING;
    char l_err_desc[100] = APL_NULL_STRING; 

	short i_ser_no=0,i_trans_type=0,i_instr_name=0,i_instr_isin=0,i_identiy_no=0,i_deal_dt=0,i_setl_dt=0;
	short i_qty=0,i_amount=0,i_comm_amt=0;
	short i_grand_total =0;

	/* added for by shruthi kumbla ISKB_1737  start*/
	char    l_cmp_code[11]=APL_NULL_STRING;
	char    l_cmp_name[66]=APL_NULL_STRING;
	short i_cmp_code=0;
	short i_cmp_name=0;
	short i_rate=0;
	double l_rate=0.0;
	/* added for by shruthi kumbla ISKB_1737  end*/
	/*added by shruthi kumbla for ISKB_9565 start*/
	double l_no_of_days=0.0;
	short i_no_of_days=0.0;
	/*added by shruthi kumbla for ISKB_9565 end*/
	struct sqlca sqlca;

	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL VAR l_table_query IS STRING;
	EXEC SQL VAR l_table_query1 IS STRING;
	EXEC SQL VAR l_table_query2 IS STRING;
	EXEC SQL VAR l_criteria_col1_query IS STRING;
	EXEC SQL VAR l_trans_type IS STRING;
	EXEC SQL VAR l_instr_name IS STRING;
	EXEC SQL VAR l_instr_isin IS STRING;
	EXEC SQL VAR l_identiy_no IS STRING;
	EXEC SQL VAR l_deal_dt IS STRING;
	EXEC SQL VAR l_setl_dt IS STRING;
	EXEC SQL VAR l_b_ccycd IS STRING;// fee_ccy replaced by b_ccycd  Added by Shruthi kumbla for ISKB_1737
	/* added for by shruthi kumbla ISKB_1737  start*/
	EXEC SQL VAR l_cmp_code IS STRING;
	EXEC SQL VAR l_cmp_name IS STRING;
	/* added for by shruthi kumbla ISKB_1737  end*/
	EXEC SQL END DECLARE SECTION;

	char h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	memset(h_dl_client,APL_NULL_CHAR,sizeof(h_dl_client));
	strcpy(h_dl_client,chr_p_client);

	memset(l_b_ccycd,APL_NULL_CHAR,sizeof(l_b_ccycd));// fee_ccy replaced by b_ccycd Added by Shruthi kumbla ISKB_1737
	/* added for by shruthi kumbla ISKB_1737  start*/
	memset(l_cmp_code,APL_NULL_CHAR,sizeof(l_cmp_code));
	memset(l_cmp_name,APL_NULL_CHAR,sizeof(l_cmp_name));
/* added for by shruthi kumbla ISKB_1737  end*/
	/*printf("\n Siva IV_PrntDetTransAnnex h_dl_client is %s",h_dl_client);
	printf("\n Siva IV_PrntDetTransAnnex chr_p_billdt is %s",chr_p_billdt);
	printf("\n Siva IV_PrntDetTransAnnex service code is %s",l_service_cd);*/

    fflush(stdout);

	Alert("Billing date before table query is |%s|",chr_p_billdt);
	fflush(stdout);

	char chr_l_billdt [APL_DATE_LEN] = APL_NULL_STRING;
	memset(chr_l_billdt, APL_NULL_CHAR, sizeof(chr_l_billdt));
	strcpy(chr_l_billdt,chr_p_billdt);

	
	Alert("Chk : chr_l_billdt : |%s|",chr_l_billdt);
	fflush(stdout);
        /* fee_ccy replaced by b_ccycd Added  by shruthi kumbla for ISKB_1737 -- started*/
	EXEC SQL SELECT b_ccycd 
			 INTO :l_b_ccycd:i_b_ccycd
			 FROM IV_CLIENTSETUP
			 WHERE  CLIENT = :h_dl_client ;

	printf("\n bill currency of the client is %s",l_b_ccycd);

	IS_ANY_ORA_ERROR
	/* fee_ccy replaced by b_ccycd Added  by siva.ganapathi for ISKB_4363 -- Ended*/

	EXEC SQL SELECT REPLACE(REPLACE(TABLE_QUERY,'@PARAM1',:h_dl_client),'@PARAM3',:chr_p_billdt),
			REPLACE(REPLACE(TABLE_QUERY1,'@PARAM1',:h_dl_client),'@PARAM3',:chr_p_billdt),
		        REPLACE(REPLACE(TABLE_QUERY2,'@PARAM1',:h_dl_client),'@PARAM3',:chr_p_billdt),	
               	        REPLACE(REPLACE(CRITERIA_COL1_QUERY,'@PARAM1',:h_dl_client),'@PARAM3',:chr_p_billdt)
		 INTO   :l_table_query:i_table_query,
		        :l_table_query1:i_table_query1,
		   	:l_table_query2:i_table_query2,
		        :l_criteria_col1_query:i_criteria_col1_query
		 FROM  REPORT_DETAILS WHERE REPORT_ID = :l_service_cd ;

	printf("\n sql error after getting the data from report_details for %s is %d",l_service_cd,sqlca.sqlcode);

	IS_ANY_ORA_ERROR

	printf("\n value of indicator variables after getting details from REPORT_DETAILS is for %s is %d,%d,%d,%d", l_service_cd,i_table_query,i_table_query1,i_table_query2,i_criteria_col1_query);

    fflush(stdout);

	/*printf("\n for Service code %s l_table_query  is %s",l_service_cd,l_table_query);
	printf("\n l_table_query1 is %s",l_table_query1);
	printf("\n l_table_query2 is %s",l_table_query2);
	printf("\n l_criteria_col1_query is %s",l_criteria_col1_query);*/

    fflush(stdout);

	strcpy(l_final_table_query,l_table_query);
	if(strlen(l_table_query1))
	strcat(l_final_table_query,l_table_query1);
	if(strlen(l_table_query2))
	strcat(l_final_table_query,l_table_query2);

	printf("\n Grand final query for service code %s  is %s",l_service_cd,l_final_table_query);

	EXEC SQL PREPARE S FROM :l_final_table_query;

	EXEC SQL DECLARE prntdettxn_cur CURSOR FOR S;

	EXEC SQL OPEN prntdettxn_cur;
	
	/*printf("\n sql error after opening the cursor prntdettxn_cur is %d",sqlca.sqlcode);	*/

    fflush(stdout);

	IS_ANY_ORA_ERROR
	
	for ( ; ; )
	{	
		
	/* added for by shruthi kumbla ISKB_1737  start*/
	memset(l_cmp_code,APL_NULL_CHAR,sizeof(l_cmp_code));
	memset(l_cmp_name,APL_NULL_CHAR,sizeof(l_cmp_name));
	l_rate=0;
	l_no_of_days=0.0;/*added by shruthi kumbla for ISKB_9565 */
	
	/* added for by shruthi kumbla ISKB_1737  end*/
		/*modified for displaying annexure for IV_126 per line start*/
		if(strcmp(l_service_cd,"IV_126") != 0 )
		{
		EXEC SQL FETCH   prntdettxn_cur
				 INTO     :l_ser_no:i_ser_no,
					  :l_trans_type:i_trans_type,
					  :l_instr_name:i_instr_name,
					  :l_instr_isin:i_instr_isin,
				          :l_identiy_no:i_identiy_no,
	  				  :l_deal_dt:i_deal_dt,
					  :l_setl_dt:i_setl_dt,
					  :l_qty:i_qty,
					  :l_amount:i_amount,
					  :l_comm_amt:i_comm_amt;

        printf("\n sqlerror after fetching the prntdettxn_cur cusros is %d",sqlca.sqlcode);
		}
		else
		{
		Alert("\n Executing for per line ");

		EXEC SQL FETCH   prntdettxn_cur
				 INTO     :l_ser_no:i_ser_no,
					  :l_cmp_code:i_cmp_code,
					  :l_cmp_name:i_cmp_name,
					  :l_rate:i_rate,
					  :l_no_of_days:i_no_of_days,/*added by shruthi kumbla for ISKB_9565 */
					  :l_amount:i_amount;

        printf("\n sqlerror after fetching the prntdettxn_cur cusros is %d",sqlca.sqlcode);
		}
		
		/*modified for displaying annexure for IV_126 per line end*/
		if(sqlca.sqlcode == 1403)
		{
			if(no_of_records == 0)
				printf("\n no records Exist for this annexure");
			else
				printf("\n All records are displayed in the Annexure report ");
			break;
		}
		
		IS_ANY_ORA_ERROR
		
		if ( l_header == 1 )
		{
			/*printf("\n displaying header for the annexure");*/

			if (APL_FAILURE == IV_PrntDetAnnexPageHeader(bill,chr_p_client,l_service_cd,chr_p_image_path,&int_retstat,l_debug_info_ptr) )
			{	
				printf("\n Failed in the function IV_PrntDetAnnexPageHeader() ");
				APL_GOBACK_FAIL
			}			

			l_header++;

		}	

		//displaying the column header
		if (no_of_records == 0)
		{
			/* fee_ccy replaced by b_ccycd Added l_b_ccycd variable by shruthi kumbla for ISKB_1737 -- started*/

			if ( APL_FAILURE == IV_AnnexColHeader(bill,l_b_ccycd,l_service_cd,&int_retstat,l_debug_info_ptr) )
			{
				printf("\n Failed when diaplaying the column header for Transaction Annexure ");
				APL_GOBACK_FAIL
			}

			/* fee_ccy replaced by b_ccycd Added l_b_ccycd variable by shruthi kumbla for ISKB_1737-- Ended*/

		}

		if ( no_of_records < main_page_recs )
		{	
			l_round = 1 ;
			
			if(strcmp(l_service_cd,"IV_126") != 0 )
			{
			if ( APL_FAILURE == IV_PrntDetAnnexRecord(bill,l_ser_no,l_trans_type,l_instr_name,l_instr_isin,l_identiy_no,l_deal_dt,l_setl_dt,l_qty,l_amount,
			l_comm_amt,&int_retstat,l_debug_info_ptr) )
			{	
				printf("\n Failure From IV_PrntDetAnnexRecord function");
				APL_GOBACK_FAIL
			}

			}
			else
			{   /*added no of days by shruthi kumbla for ISKB_9565 start*/
				if ( APL_FAILURE == IV_PrntPerLineAnnexRecord(bill,l_ser_no,l_cmp_code,l_cmp_name,l_rate,l_no_of_days,l_amount,&int_retstat,l_debug_info_ptr) )
					{	
						printf("\n Failure From IV_PrntPerLineAnnexRecord function");
						APL_GOBACK_FAIL
					}
			
			}
			no_of_records++;

			if (no_of_records == main_page_recs)
			{
				fprintf(bill,"</TBODY></TABLE></TR></TBODY></TABLE>");
				fprintf(bill,"<p class='Normal' align=\"Right\"><o:p><B>Contd...</B></o:p></p>");
                                fprintf(bill,"<TABLE><TR class='pagestart'></TR></TABLE>");  
				no_of_records = 0;
				main_page_recs = next_page_recs ; 
			}
		}
	}	

	EXEC SQL CLOSE prntdettxn_cur;

    /*printf("\n Before printing the Grand total");*/

    fflush(stdout);
    fflush(bill);
	
	//Printing the Grand Total in the report
	if(l_round == 1 || no_of_records != 0)
	{	
		if (no_of_records == 0)
		{
			/* fee_ccy replaced by b_ccycd Added l_b_ccycd variable by shruthi kumbla ISKB_1737 -- started*/
			if ( APL_FAILURE == IV_AnnexColHeader(bill,l_b_ccycd, l_service_cd,&int_retstat,l_debug_info_ptr) )
			{
				printf("\n Failed when diaplaying the column header for Transaction Annexure ");
				APL_GOBACK_FAIL
			}
			/* fee_ccy replaced by b_ccycd Added l_b_ccycd variable by shruthi kumbla for ISKB_1737-- Ended*/
		}

		EXEC SQL PREPARE P FROM :l_criteria_col1_query;

		EXEC SQL DECLARE prntdettxntot_cur CURSOR FOR P;

		EXEC SQL OPEN prntdettxntot_cur;
		
		/*printf("\n sql error after opening the cursor prntdettxntot_cur is %d",sqlca.sqlcode);	*/
		
		for (; ; )
		{		
				EXEC SQL FETCH prntdettxntot_cur
						 INTO :l_grand_total:i_grand_total;

                                /*printf("\n sqlerror after fetching the prntdettxntot_cur is %d",sqlca.sqlcode);*/
                                
                                fflush(stdout);
 
				if(sqlca.sqlcode == 1403)
					break;
						
				IS_ANY_ORA_ERROR
						
//				fprintf(bill,"<br><br>");
//				fprintf(bill,"<table  width='100%%' border='1' cellSpacing='0' cellPadding='1'>\n");
//				fprintf(bill,"<tr class=\'ez4\'><td align=\"CENTER\" >Total Charges</td>");
//				fprintf(bill,"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
//				fprintf(bill,"<td align=\"CENTER\" >%f</td>",l_grand_total);

                EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:l_grand_total, :l_str_grand_total, :l_err_desc);
                if(strlen(l_err_desc) > 0)
                {
                printf("SIVA:::::Error in formatting for l_grand_total : l_err_desc -- %s\n", l_err_desc);
                }
				
				if(strcmp(l_service_cd,"IV_126") != 0 )
				{
					fprintf(bill,"<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td> <td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td align=\"CENTER\" >Total Charges</td><td align=\"RIGHT\" >%s</td>",l_str_grand_total);
					fprintf(bill,"</table></table><HTML>");
					fprintf(bill,"<br>");
				}
				else
				{
						fprintf(bill,"<tr class='ez4'><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td align=\"CENTER\" >Total Charges</td><td align=\"RIGHT\" >%s</td>",l_str_grand_total);
					fprintf(bill,"</table></table><HTML>");
					fprintf(bill,"<br>");
				
				}
		}		
		EXEC SQL CLOSE prntdettxntot_cur;
	}
	
	fflush(bill);
	
	RETURN_SUCCESS:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntDetTransAnnex Successfully\n",NULL,NULL);
		return(APL_SUCCESS);

	RETURN_FAILURE:

		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntDetTransAnnex UnSuccessfully\n",NULL,NULL);
		return (APL_FAILURE);
}

//This header is only for Transaction,Late Transaction,Depository,CA Mandatory and CA voluntary Annexure because for all these annexures column header is same

/*Added fees_ccy parameter by siva.ganapathi for ISKB_4363 */
int IV_AnnexColHeader(  FILE *bill, 
						char *p_fees_ccy,
						char *p_serv_cd,
						int *int_p_retstat,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{
		
	printf("\n In the function IV_AnnexColHeader()");

	//fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='1' width='100%%' border='0'><tr><td class=\'ez4\' ALIGN=\"CENTER\" >Sr. No.</td><td class=\'ez4\' ALIGN=\"CENTER\" >Trans Type</td><td class=\'ez4\' ALIGN=\"CENTER\" >Instrument Name</td><td class=\'ez4\' ALIGN=\"CENTER\" >ISIN</td><td class=\'ez4\' ALIGN=\"CENTER\" >Deal Ref No.</td><td class=\'ez4\' ALIGN=\"CENTER\" >Deal Date</td><td class=\'ez4\' ALIGN=\"CENTER\" >Setl Date</td><td class=\'ez4\' ALIGN=\"CENTER\" >Quantity</td><td class=\'ez4\' ALIGN=\"CENTER\" >Amount(INR)</td><td class=\'ez4\' ALIGN=\"CENTER\">Charges</td></tr></table>\n");
	
	if(strcmp(p_serv_cd,"IV_125") == 0 )
	{
	
	fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='1' width='100%%' border='1'><tr><td class='ez4' ALIGN=\"CENTER\" width='5%%'>Sr. No.</td><td class='ez4' ALIGN=\"CENTER\" width='25%%'>Instrument Name</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>Market Price Date</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>Mkt Rate(INR)</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>Contractual Holding</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>Value(INR)</td></tr>\n");
	}
	/* added for by shruthi kumbla ISKB_1737  start*/
	else if(strcmp(p_serv_cd,"IV_126") == 0 )
	{
	/*added No. of Days by shruthi kumbla for ISKB_9565 start*/
	fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='1' width='100%%' border='1'><tr><td class='ez4' ALIGN=\"CENTER\" width='5%%'>Sr. No.</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>Company Code</td><td class='ez4' ALIGN=\"CENTER\" width='25%%'>Company Name</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>Rate</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>No. of Days</td><td class='ez4' ALIGN=\"CENTER\" width='10%%'>Charge(%s)</td></tr>\n",p_fees_ccy);
	}
	/* added for by shruthi kumbla ISKB_1737  end*/
	else
	{
	
	/*Added fees_ccy parameter by siva.ganapathi for ISKB_4363 -- started*/
	fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='1' width='100%%' border='1'><tr><td class='ez4' ALIGN=\"CENTER\" WIDTH='5%%'>Sr. No.</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>Trans Type</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='20%%'>Instrument Name</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>ISIN</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>Deal Ref No.</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>Deal Date</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>Setl Date</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>Quantity</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>Amount(INR)</td><td class='ez4' ALIGN=\"CENTER\" WIDTH='10%%'>Charges(%s)</td></tr>\n",p_fees_ccy);
	/*Added fees_ccy parameter by siva.ganapathi for ISKB_4363 -- Ended*/


	}
	fflush(bill);

	RETURN_SUCCESS:
		APL_IF_DEBUG
		{
		  CO_ProcMonitor(APL_OUT_FILE,"Exiting Successfully Out Of IV_AnnexColHeader \n", NULL, NULL);
		}
	return APL_SUCCESS;

	RETURN_FAILURE:
		APL_IF_DEBUG
		{
		   CO_ProcMonitor(APL_OUT_FILE,"Exiting Unsuccessfully Out Of IV_AnnexColHeader \n", NULL, NULL);
		}
	return APL_FAILURE;
}
int IV_PrntDetAnnexPageHeader(	FILE *bill,
								char *chr_p_client,
								char *serv_cd,
								char *chr_p_image_path,
								int *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{
	/*FILE *l_finifile = (FILE *) NULL;
	char chr_l_inifile[PATH_LENGTH] = APL_NULL_STRING;
	char l_serv_cd[10] = APL_NULL_STRING;*/
	char l_image_path[2000] = APL_NULL_STRING;
	char l_header[30] = APL_NULL_STRING;
	char l_sys_date[20] = APL_NULL_STRING; 
	char l_cln_name[67] = APL_NULL_STRING;

	/*printf("\n Siva In Header function Client is %s ",chr_p_client);
	printf("\n Siva In Header function Service_cd is %s",serv_cd);*/

	/*strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH") );
	strcat(chr_l_inifile,"intl_sun.cfg");

	 fprintf(fl_userlog,"chr_l_inifile:|%s|\n",chr_l_inifile);
	 if ( (l_finifile = fopen(chr_l_inifile,"r") ) == (FILE *) NULL )
	 {
		 fprintf(fl_userlog,"Error : Failed to Open File \n");
		 APL_GOBACK_FAIL
	 }

	 fprintf(fl_userlog,"Entering CO_ReadToken Function\n");
	 if (APL_FAILURE == CO_ReadToken(l_finifile,"INTL_IMG_PATH",l_image_path,l_debug_info_ptr))
	 {
		   fprintf(fl_userlog,"Error : Cann't Read INTL_IMG_PATH \n");
		   APL_GOBACK_FAIL
	 }*/
	
	strcpy(l_image_path,chr_p_image_path);
	/*Alert("l_image_path :|%s|\n",l_image_path);*/

	EXEC SQL SELECT  TO_CHAR(SYS_DATE,'Month DD, YYYY') INTO :l_sys_date  FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR

	/*printf("\n System date is %s oracle error is %d ",l_sys_date,sqlca.sqlcode);*/
 

	EXEC SQL SELECT A.CLN_NAME 
		     INTO :l_cln_name
			 FROM MT_CLIENT A
			 WHERE A.CLN_CODE=:chr_p_client;

	IS_ANY_ORA_ERROR

	/*printf("\n client name is %s",l_cln_name);

	printf("\n Oracle error after getting the client name is %d",sqlca.sqlcode);
	
	printf("\n Siva --- service code in Page header is %s",serv_cd);*/

	if ( strcmp(serv_cd,"IV_120") == 0)
	{
		strcpy(l_header,"CA Voluntary Details Report");
	}
	else if ( strcmp(serv_cd,"IV_121") == 0)
	{
		strcpy(l_header,"CA Mandatory Details Report");
	}
	else if ( strcmp(serv_cd,"IV_122") == 0)
	{
		strcpy(l_header,"Transaction Report");
	}
	else if ( strcmp(serv_cd,"IV_123") == 0)
	{
		strcpy(l_header,"Late Transaction Report");
	}
	else if ( strcmp(serv_cd,"IV_124") == 0)
	{
		strcpy(l_header,"Depository Charges Report");
	}
	else if ( strcmp(serv_cd,"IV_125") == 0)
	{
		/*strcpy(l_header,"SafeKeeping Report");*/
		/*Modified by siva.ganapathi for Changes Suggested by Sunil(26-11-2009) on 27/10/2009*/
		strcpy(l_header,"Safekeeping Report");
	}
	/* added for by shruthi kumbla ISKB_1737  start*/
	else if ( strcmp(serv_cd,"IV_126") == 0)
	{
		strcpy(l_header,"Per Line Of Security Report");
	}
	/* added for by shruthi kumbla ISKB_1737  end*/
	/*printf("\n siva --- l_header is %s",l_header);*/

	fprintf(bill,"</TBODY></TABLE></TR></TBODY></TABLE>");

	fprintf(bill,"<HTML>\n<HEAD>\n<META http-equiv='Content-Tyie' content='text/html; charset=UTF-16'></META>\n");
	fprintf(bill,"%s\n",STYLE);
	fprintf(bill,"</HEAD>\n<BODY>\n\n");	

        fprintf(bill,"<style type='text/css'>@media print{.pagestart {page-break-before: always;}}</style>");
        fprintf(bill,"<TABLE><TR class='pagestart'></TR></TABLE>");

	fprintf(bill,"<TABLE id=\'Table3\' borderColor=\'#000000\' cellSpacing=\'0\' cellPadding=\'1\' width='100%%' border=\'0\'><tr><td borderColor='#ffffff' border='0'>&nbsp;</td><td borderColor='#ffffff' border=\'0\'>\n<BR>\n\n");

	fprintf(bill,"<TABLE cellSpacing='0' cellPadding='0' width='100%%' border='0' ><TR class=\'lableredbg\'><TD  width='25%%'><img src=\"%s\" width=\"150\" height=\"60\" ALIGN=\"LEFT\"></TD><TD width='5%%'>&nbsp;</TD>	<td width=\'70%%\'align=\"CENTER\">%s<br>",l_image_path,l_header);
	fprintf(bill,"</TD></TR></TABLE></TBODY></TABLE>\n<BR>\n\n");

	fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='0' width='100%%' border='0'><tr><td><b>Date</b>&nbsp;:&nbsp;%s</td></tr>\n</table><br><br>\n\n",l_sys_date);

	/*Modified by siva.ganapathi for Changes Suggested by Sunil(26-11-2009) on 27/10/2009 -- started*/
	/*fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='0' width='100%%' border='0'><tr>%s for the client <b>%s</b> is </tr></TABLE>\n<br>\n\n",l_header,l_cln_name);*/
	
	fprintf(bill,"<table class='normal' cellSpacing='0' cellPadding='0' width='100%%' border='0'><tr>%s for <b>%s</b>  </tr></TABLE>\n<br>\n\n",l_header,l_cln_name);

	/*Modified by siva.ganapathi for Changes Suggested by Sunil(26-11-2009) on 27/10/2009 -- Ended*/
	
	fflush(bill);

	//fclose(l_finifile);

	RETURN_SUCCESS:
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntDetAnnexPageHeader Successfully\n",NULL,NULL);
		return(APL_SUCCESS);

	RETURN_FAILURE:

		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntDetAnnexPageHeader UnSuccessfully\n",NULL,NULL);
		return (APL_FAILURE);
}
/*This Function is used to display the records in the Transaction, Late Transaction,Depository and CA Voluntary and Mandatory Annexures */
int IV_PrntDetAnnexRecord(	FILE *bill,
							int p_ser_no,
							char *p_trans_type,
							char *p_instr_name,
							char *p_instr_isin,
							char *p_identiy_no,
							char *p_deal_dt,
							char *p_settl_dt,
							double p_qty,
							double p_amount,
							double p_comm_amt,
							int *int_p_retstat,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/*printf("\n In the function IV_PrntDetAnnexRecord()");
	printf("\n amount before formatting is %f",p_amount);
	printf("\n quantity before formatting is %f",p_qty);*/

	//double l_amount=0,l_qty=0;
	//short i_amount=0,i_qty=0;
	struct sqlca sqlca;
	char l_err_desc[100] = APL_NULL_STRING; 
	char l_amount[25] = APL_NULL_STRING;
	char l_qty[25] = APL_NULL_STRING;
	char l_comm_amt[25] = APL_NULL_STRING;

	memset(l_qty, APL_NULL_CHAR, sizeof(l_qty));
	memset(l_amount, APL_NULL_CHAR, sizeof(l_amount));
	memset(l_comm_amt, APL_NULL_CHAR, sizeof(l_comm_amt));
	memset(l_err_desc, APL_NULL_CHAR, sizeof(l_err_desc)); 
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_qty, :l_qty, :l_err_desc);

	//IS_ANY_ORA_ERROR

    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_qty: l_err_desc -- %s\n", l_err_desc);
    }
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_amount, :l_amount, :l_err_desc);
    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_amount: l_err_desc -- %s\n", l_err_desc);
    }
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_comm_amt, :l_comm_amt, :l_err_desc);
    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_comm_amt: l_err_desc -- %s\n", l_err_desc);
    }

	//fprintf(bill,"<tr><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' align=\"CENTER\">%s</td><td class='%s' align=\"CENTER\">%s</td><td class='%s' align='RIGHT'>%s</td><td class='%s' align='RIGHT'>%s</td><td class='%s' >%s</td>",p_style_class,p_ser_no,p_style_class,p_trans_type,p_style_class,p_instr_name,p_style_class,p_instr_isin,p_style_class,p_identiy_no,p_style_class,p_deal_dt,p_style_class,p_settl_dt,p_style_class,l_qty,p_style_class,l_amount,p_style_class,p_comm_amt);

	fprintf(bill,"<tr><td class='ez2' ALIGN=\"CENTER\">%d</td><td class='ez2' ALIGN=\"LEFT\">%s</td><td class='ez2' ALIGN=\"LEFT\" >%s</td><td class='ez2' ALIGN=\"LEFT\">%s</td><td class='ez2' ALIGN=\"LEFT\">%s</td><td class='ez2' align=\"CENTER\">%s</td><td class='ez2' align=\"CENTER\">%s</td><td class='ez2' align=\"RIGHT\" >%s</td><td class='ez2' align=\"RIGHT\">%s</td><td class='ez2' align=\"RIGHT\">%s</td></tr>",p_ser_no,p_trans_type,p_instr_name,p_instr_isin,p_identiy_no,p_deal_dt,p_settl_dt,l_qty,l_amount,l_comm_amt);

	fflush(bill);

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntDetAnnexRecord succesfully\n",NULL,NULL);
	}
	return(APL_SUCCESS);

	RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntDetAnnexRecord unsuccesfully\n",NULL,NULL);
	}
	return (APL_FAILURE);
}

/* added for by shruthi kumbla ISKB_1737  start*/
/*This Function is used to display the records in the Per line of security Annexures */
int IV_PrntPerLineAnnexRecord(	FILE *bill,
							int p_ser_no,
							char *p_cmp_code,
							char *p_cmp_name,
							double p_rate,
							double p_no_of_days,
							double p_amount,
							int *int_p_retstat,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/*printf("\n In the function IV_PrntDetAnnexRecord()");
	printf("\n amount before formatting is %f",p_amount);
	printf("\n quantity before formatting is %f",p_qty);*/

	//double l_amount=0,l_qty=0;
	//short i_amount=0,i_qty=0;
	struct sqlca sqlca;
	char l_err_desc[100] = APL_NULL_STRING; 
	char l_amount[25] = APL_NULL_STRING;
	char l_rate[25] = APL_NULL_STRING;
	char l_no_of_days[25] = APL_NULL_STRING;/*added by shruthi kumbla for ISKB_9565 */
	char l_cmp_code[11] = APL_NULL_STRING;
	char l_cmp_name[66] = APL_NULL_STRING;

	memset(l_cmp_code, APL_NULL_CHAR, sizeof(l_cmp_code));
	memset(l_cmp_name, APL_NULL_CHAR, sizeof(l_cmp_name));
	memset(l_amount, APL_NULL_CHAR, sizeof(l_amount));
	memset(l_rate, APL_NULL_CHAR, sizeof(l_rate));
	memset(l_no_of_days, APL_NULL_CHAR, sizeof(l_no_of_days));/*added by shruthi kumbla for ISKB_9565 */
	memset(l_err_desc, APL_NULL_CHAR, sizeof(l_err_desc)); 
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_rate, :l_rate, :l_err_desc);

	//IS_ANY_ORA_ERROR
	

    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_rate: l_err_desc -- %s\n", l_err_desc);
    }
	/*added by shruthi kumbla for ISKB_9565 start*/
	//EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_no_of_days, :l_no_of_days, :l_err_desc);
	//l_no_of_days=p_no_of_days;
	

		
	Alert("p_no_of_days -- %lf\n", p_no_of_days);

    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_rate: l_err_desc -- %s\n", l_err_desc);
    }
    /*added by shruthi kumbla for ISKB_9565 end*/
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_amount, :l_amount, :l_err_desc);
	
	
    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_amount: l_err_desc -- %s\n", l_err_desc);
    }
	
	
	
	//fprintf(bill,"<tr><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' align=\"CENTER\">%s</td><td class='%s' align=\"CENTER\">%s</td><td class='%s' align='RIGHT'>%s</td><td class='%s' align='RIGHT'>%s</td><td class='%s' >%s</td>",p_style_class,p_ser_no,p_style_class,p_trans_type,p_style_class,p_instr_name,p_style_class,p_instr_isin,p_style_class,p_identiy_no,p_style_class,p_deal_dt,p_style_class,p_settl_dt,p_style_class,l_qty,p_style_class,l_amount,p_style_class,p_comm_amt);

	fprintf(bill,"<tr><td class='ez2' ALIGN=\"CENTER\">%d</td><td class='ez2' ALIGN=\"LEFT\">%s</td><td class='ez2' ALIGN=\"LEFT\" >%s</td><td class='ez2' align=\"RIGHT\" >%s</td><td class='ez2' align=\"RIGHT\">%lf</td><td class='ez2' align=\"RIGHT\">%s</td></tr>",p_ser_no,p_cmp_code,p_cmp_name,l_rate,p_no_of_days,l_amount);/*added no of days by shruthi kumbla for ISKB_9565 */

	fflush(bill);

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntPerLineAnnexRecord succesfully\n",NULL,NULL);
	}
	return(APL_SUCCESS);

	RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntPerLineAnnexRecord unsuccesfully\n",NULL,NULL);
	}
	return (APL_FAILURE);
}
/* added for by shruthi kumbla ISKB_1737  end*/


int IV_PrntSafeKeepAnnex(FILE *bill,
						char *chr_p_client,
						char *chr_p_billdt,
						char *l_service_cd,
						int main_page_recs,
						int next_page_recs,
						char *chr_p_image_path,
						int *int_p_retstat,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{	
	/*printf("\n In the function IV_PrntSafeKeepAnnex() ");*/
	
	int no_of_records = 0 ;
    int l_header = 1,l_round=0;

	int main_page_rec_count = 0 ,next_page_rec_count=0;
	char l_final_table_query[12000] = APL_NULL_STRING;	
        int int_retstat  =0;
	
	int l_ser_no = 0;
	char l_instr_name[131] = APL_NULL_STRING ;
	char l_mkt_price_dt[APL_DATE_LEN] = APL_NULL_STRING;
	double l_mkt_rate = 0 ,l_cont_hold =0,l_value_inr=0;
	double l_grand_total_inr =0;
	double l_grand_total_usd =0;
        char l_str_grand_total_inr[35]= APL_NULL_STRING;
        char l_str_grand_total_usd[35]= APL_NULL_STRING;
       	char l_err_desc[100] = APL_NULL_STRING; 
	
	//char l_fees_ccy[5] = APL_NULL_STRING ;
	char l_fees_ccy[APL_CCYCODE_LEN] = APL_NULL_STRING;

	short i_ser_no=0,i_instr_name=0,i_mkt_price_dt=0,i_mkt_rate=0,i_cont_hold=0,i_value_inr = 0;
	short i_grand_total_inr =0;
	short i_grand_total_usd =0,i_fees_ccy=0;

	struct sqlca sqlca;

	EXEC SQL BEGIN DECLARE SECTION;
	char l_table_query[4000] = APL_NULL_STRING;
	char l_table_query1[4000] = APL_NULL_STRING;
	char l_table_query2[4000] = APL_NULL_STRING;
	char l_criteria_col1_query[4000] = APL_NULL_STRING;
	char l_criteria_col2_query[4000] = APL_NULL_STRING;
	short i_table_query=0,i_table_query1=0,i_table_query2=0 ;
	short i_criteria_col1_query = 0;
	short i_criteria_col2_query = 0;

	EXEC SQL VAR l_table_query IS STRING;
	EXEC SQL VAR l_table_query1 IS STRING;
	EXEC SQL VAR l_table_query2 IS STRING;
	EXEC SQL VAR l_criteria_col1_query IS STRING;
	EXEC SQL VAR l_criteria_col2_query IS STRING;
	EXEC SQL VAR l_instr_name IS STRING;
	EXEC SQL VAR l_mkt_price_dt IS STRING;
	EXEC SQL END DECLARE SECTION;

	memset(l_fees_ccy,APL_NULL_CHAR,sizeof(l_fees_ccy));

	/*printf("\n Siva IV_PrntSafeKeepAnnex chr_p_client is %s chr_p_billdt is %s service code is %s",chr_p_client,chr_p_billdt,l_service_cd);*/

	printf("Inside IV_PrntSafeKeepAnnex chr_p_client is %s chr_p_billdt is %s service code is %s",chr_p_client,chr_p_billdt,l_service_cd);
	fflush(stdout);
	
	EXEC SQL SELECT FEES_CCY INTO :l_fees_ccy:i_fees_ccy
			 FROM IV_CLIENTSETUP
			 WHERE CLIENT = :chr_p_client;

	IS_ANY_ORA_ERROR

	/*printf("\n Fee currency of the client is %s indicator is %d sqlerror is %d",l_fees_ccy,i_fees_ccy,sqlca.sqlcode);*/
/* PJ Kotak AIX UAT hardcoding

	EXEC SQL SELECT REPLACE(REPLACE(TABLE_QUERY,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt),
			REPLACE(REPLACE(TABLE_QUERY1,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt),
		        REPLACE(REPLACE(TABLE_QUERY2,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt),
		        REPLACE(REPLACE(CRITERIA_COL1_QUERY,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt),
			REPLACE(REPLACE(CRITERIA_COL2_QUERY,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt)
		 INTO   :l_table_query:i_table_query,
		        :l_table_query1:i_table_query1,
		        :l_table_query2:i_table_query2,
			:l_criteria_col1_query:i_criteria_col1_query,
			:l_criteria_col2_query:i_criteria_col2_query
		 FROM  REPORT_DETAILS WHERE REPORT_ID = 'IV_125' ; */

	EXEC SQL SELECT REPLACE(REPLACE(TABLE_QUERY,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt)
		 INTO   :l_table_query:i_table_query
		 FROM  REPORT_DETAILS WHERE REPORT_ID = 'IV_125' ;

	IS_ANY_ORA_ERROR

  	EXEC SQL SELECT REPLACE(REPLACE(TABLE_QUERY1,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt)
		INTO  :l_table_query1:i_table_query1
		FROM REPORT_DETAILS WHERE REPORT_ID = 'IV_125' ;

	IS_ANY_ORA_ERROR


	EXEC SQL SELECT REPLACE(REPLACE(TABLE_QUERY2,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt)
				INTO :l_table_query2:i_table_query2
				FROM REPORT_DETAILS WHERE REPORT_ID = 'IV_125' ;
	IS_ANY_ORA_ERROR

	EXEC SQL SELECT REPLACE(REPLACE(CRITERIA_COL1_QUERY,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt)
				INTO :l_criteria_col1_query:i_criteria_col1_query
				FROM REPORT_DETAILS WHERE REPORT_ID = 'IV_125' ;
	IS_ANY_ORA_ERROR
	
	EXEC SQL SELECT REPLACE(REPLACE(CRITERIA_COL2_QUERY,'@PARAM1',:chr_p_client),'@PARAM3',:chr_p_billdt)
				INTO :l_criteria_col2_query:i_criteria_col2_query
				FROM REPORT_DETAILS WHERE REPORT_ID = 'IV_125' ;
	
	IS_ANY_ORA_ERROR

	printf("\n sql error after getting the data from report_details for %s is %d",l_service_cd,sqlca.sqlcode);
	fflush(stdout);


	strcpy(l_final_table_query,l_table_query);
	if(strlen(l_table_query1))
	strcat(l_final_table_query,l_table_query1);
	if(strlen(l_table_query2))
	strcat(l_final_table_query,l_table_query2);

	printf("\n Grand final query for service code %s  is %s",l_service_cd,l_final_table_query);
	fflush(stdout);

	EXEC SQL PREPARE S FROM :l_final_table_query;

	EXEC SQL DECLARE safekeepAnnex_cur CURSOR FOR S;

	EXEC SQL OPEN safekeepAnnex_cur;

	IS_ANY_ORA_ERROR
	
	printf("\n sql error after opening the cursor safekeepAnnex_cur is %d",sqlca.sqlcode);	
	fflush(stdout);

	for ( ; ; )
	{	
		
		EXEC SQL FETCH safekeepAnnex_cur
				 INTO :l_ser_no:i_ser_no,
				      :l_instr_name:i_instr_name,
	  			      :l_mkt_price_dt:i_mkt_price_dt,
				      :l_mkt_rate:i_mkt_rate,
				      :l_cont_hold:i_cont_hold,
				      :l_value_inr:i_value_inr;

		if(sqlca.sqlcode == 1403)
		{
			if(no_of_records == 0)
				printf("\n no records Exist for this annexure");
			else
				printf("\n All records are displayed in the Annexure report ");
			break;
		}
	fflush(stdout);
		
		IS_ANY_ORA_ERROR
		
		if ( l_header == 1 )
		{
			printf("\n displaying header for the annexure");
			fflush(stdout);
			if (APL_FAILURE == IV_PrntDetAnnexPageHeader(bill,chr_p_client,l_service_cd,chr_p_image_path,&int_retstat,l_debug_info_ptr) )
			{	
				printf("\n Failed in the function IV_PrntDetAnnexPageHeader() ");
				fflush(stdout);
				APL_GOBACK_FAIL
			}			
			l_header++;
		}	

		//displaying the column header
		if (no_of_records == 0)
		{
			/*Added fees_ccy variable by siva.ganapathi for ISKB_4363 -- started*/
			if ( APL_FAILURE == IV_AnnexColHeader(bill,l_fees_ccy,l_service_cd,&int_retstat,l_debug_info_ptr) )
			{
				printf("\n Failed when diaplaying the column header for Transaction Annexure ");
				fflush(stdout);
				APL_GOBACK_FAIL
			}
			/*Added fees_ccy variable by siva.ganapathi for ISKB_4363 -- Ended*/
		}

		if ( no_of_records < main_page_recs )
		{	
			l_round = 1;
			if ( APL_FAILURE == IV_PrntSafeKeepAnnexRecord(bill,l_ser_no,l_instr_name,l_mkt_price_dt,l_mkt_rate,l_cont_hold,l_value_inr,&int_retstat,l_debug_info_ptr) )
			{	
				printf("\n Failure From IV_PrntSafeKeepAnnexRecord function");
				fflush(stdout);
				APL_GOBACK_FAIL
			}

			no_of_records++;
			if (no_of_records == main_page_recs)
			{
				fprintf(bill,"</TBODY></TABLE></TR></TBODY></TABLE>");
				fprintf(bill,"<p class='Normal' align=\"Right\"><o:p><B>Contd...</B></o:p></p>");
                                fprintf(bill,"<TABLE><TR class='pagestart'></TR></TABLE>");
				no_of_records = 0;
				main_page_recs = next_page_recs ; 
			}
		}
	}	
	EXEC SQL CLOSE safekeepAnnex_cur;

		//Printing the Grand Total in the report
	if( l_round == 1 || no_of_records != 0)
	{	
		if (no_of_records == 0)
		{
			/*Added fees_ccy variable by siva.ganapathi for ISKB_4363 -- started*/
			if ( APL_FAILURE == IV_AnnexColHeader(bill,l_fees_ccy,l_service_cd,&int_retstat,l_debug_info_ptr) )
			{
				printf("\n Failed when diaplaying the column header for Transaction Annexure ");
				fflush(stdout);
				APL_GOBACK_FAIL
			}
			/*Added fees_ccy variable by siva.ganapathi for ISKB_4363 -- Ended */
		}

		EXEC SQL PREPARE P FROM :l_criteria_col1_query;

		EXEC SQL DECLARE prntsafekeeptxntot_cur CURSOR FOR P;

		EXEC SQL OPEN prntsafekeeptxntot_cur;
		
		printf("\n sql error after opening the cursor prntsafekeeptxntot_cur is %d",sqlca.sqlcode);
		fflush(stdout);
		
		IS_ANY_ORA_ERROR
		
		for( ; ; )
		{		
				EXEC SQL FETCH prntsafekeeptxntot_cur
						 INTO :l_grand_total_inr:i_grand_total_inr;

				if(sqlca.sqlcode == 1403)
					break;
						
				IS_ANY_ORA_ERROR
						
//				fprintf(bill,"<br><br>");
//				fprintf(bill,"<table  width='100%%' border='1' cellSpacing='0' cellPadding='1'>\n");
//				fprintf(bill,"<tr class=\'ez4\'><td align=\"CENTER\" >Total Charges</td>");
//				fprintf(bill,"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
//				fprintf(bill,"<td align=\"CENTER\" >%f</td>",l_grand_total);
			        
                               	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:l_grand_total_inr, :l_str_grand_total_inr, :l_err_desc);
                                if(strlen(l_err_desc) > 0)
                                {
                                 printf("SIVA:::::Error in formatting for p_qty: l_err_desc -- %s\n", l_err_desc);
				fflush(stdout);
                                }

				fprintf(bill,"<tr class='ez4'><td>&nbsp;</td> <td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td align=\"CENTER\" >Total Value(INR)</td><td align=\"RIGHT\" >%s</td>",l_str_grand_total_inr);
		}		
		EXEC SQL CLOSE prntsafekeeptxntot_cur;

		if (strcmp(l_fees_ccy,"USD") == 0)
		{
			EXEC SQL PREPARE Q FROM :l_criteria_col2_query;

			EXEC SQL DECLARE prntsaftot_usd_cur CURSOR FOR Q;

			EXEC SQL OPEN prntsaftot_usd_cur;

			IS_ANY_ORA_ERROR

			printf("\n sql error after opening the cursor prntsaftot_usd_cur is %d",sqlca.sqlcode);	
			
			for( ; ; )
			{		
				EXEC SQL FETCH prntsaftot_usd_cur
						 INTO :l_grand_total_usd:i_grand_total_usd;

				if(sqlca.sqlcode == 1403)
					break;
		                
				IS_ANY_ORA_ERROR
		                
                               EXEC SQL CALL SP_PRINTANNEX_FORMATTING (:l_grand_total_usd, :l_str_grand_total_usd, :l_err_desc);
                                if(strlen(l_err_desc) > 0)
                                {
                                 printf("SIVA:::::Error in formatting for p_qty: l_err_desc -- %s\n", l_err_desc);
				fflush(stdout);
                                }
	
				fprintf(bill,"<tr class='ez4'><td>&nbsp;</td> <td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td align=\"CENTER\" >Total Value(USD)</td><td align=\"RIGHT\" >%s</td>",l_str_grand_total_usd);

			}		

			EXEC SQL CLOSE prntsaftot_usd_cur;
		}
                //fprintf(bill,"<TABLE><TR class='pagestart'></TR></TABLE>");
		fprintf(bill,"</table></table><HTML>");
                fprintf(bill,"<br>"); 

	}

	fflush(bill);

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSafeKeepAnnex succesfully\n",NULL,NULL);
	}
	return(APL_SUCCESS);

	RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSafeKeepAnnex unsuccesfully\n",NULL,NULL);
	}
	return (APL_FAILURE);
}

int IV_PrntSafeKeepAnnexRecord(	FILE *bill,
							int p_ser_no,
							char *p_instr_name,
							char *p_mkt_price_dt,
							double p_mkt_rate,
							double p_cont_hold,
							double p_value_inr,
							int *int_p_retstat,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	printf("\n In the function IV_PrntSafeKeepAnnexRecord()");

	//double l_amount=0,l_qty=0;
	//short i_amount=0,i_qty=0;
	struct sqlca sqlca;
	char l_err_desc[100] = APL_NULL_STRING; 
	char l_mkt_rate[75] = APL_NULL_STRING;
	char l_cont_hold[75] = APL_NULL_STRING;
	char l_value_inr[75] = APL_NULL_STRING;

	memset(l_mkt_rate, APL_NULL_CHAR, sizeof(l_mkt_rate));
	memset(l_cont_hold, APL_NULL_CHAR, sizeof(l_cont_hold));
	memset(l_value_inr, APL_NULL_CHAR, sizeof(l_value_inr));
	memset(l_err_desc, APL_NULL_CHAR, sizeof(l_err_desc)); 
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_mkt_rate, :l_mkt_rate, :l_err_desc);

    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_mkt_rate: l_err_desc -- %s\n", l_err_desc);
    }
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_cont_hold, :l_cont_hold, :l_err_desc);
    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_cont_hold: l_err_desc -- %s\n", l_err_desc);
    }
	
	EXEC SQL CALL SP_PRINTANNEX_FORMATTING(:p_value_inr, :l_value_inr, :l_err_desc);
    if(strlen(l_err_desc) > 0)
    {
       printf("SIVA:::::Error in formatting for p_value_inr: l_err_desc -- %s\n", l_err_desc);
    }

	//fprintf(bill,"<tr><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' >%s</td><td class='%s' align=\"CENTER\">%s</td><td class='%s' align=\"CENTER\">%s</td><td class='%s' align='RIGHT'>%s</td><td class='%s' align='RIGHT'>%s</td><td class='%s' >%s</td>",p_style_class,p_ser_no,p_style_class,p_trans_type,p_style_class,p_instr_name,p_style_class,p_instr_isin,p_style_class,p_identiy_no,p_style_class,p_deal_dt,p_style_class,p_settl_dt,p_style_class,l_qty,p_style_class,l_amount,p_style_class,p_comm_amt);

	fprintf(bill,"<tr><td class='ez2' ALIGN=\"CENTER\">%d</td><td class='ez2' ALIGN=\"LEFT\" >%s</td><td class='ez2' align=\"CENTER\">%s</td><td class='ez2' align=\"RIGHT\" >%s</td>	<td class='ez2' align=\"RIGHT\">%s</td>	<td class='ez2' align=\"RIGHT\">%s</td>	</tr>",p_ser_no,p_instr_name,p_mkt_price_dt,l_mkt_rate,l_cont_hold,l_value_inr);

	fflush(bill);

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSafeKeepAnnexRecord succesfully\n",NULL,NULL);
	}
	return(APL_SUCCESS);

	RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_PrntSafeKeepAnnexRecord unsuccesfully\n",NULL,NULL);
	}
	return (APL_FAILURE);
}

