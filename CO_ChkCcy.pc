

#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;



	




int CO_Chk_CcyValid(char             *p_ccycode, 
					 char             p_type, 
					 char             p_exist, 
					 DEBUG_INFO_STRUCT_H     **l_debug_info_ptr
					)
{

	

	struct sqlca    sqlca;	
	int             int_h_ccy_count;
	short           i_ccy_count;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode=0;
	int_h_ccy_count = 0;
	i_ccy_count = 0;

	APL_IF_DEBUG
	{
      CO_ProcMonitor(	APL_OUT_FILE,
						"Entering processtion CO_Chk_CcyValid \n",
						NULL,
						NULL);
	}	

	
	
	if (!strlen(p_ccycode))
	{
		APL_DATA_MISSING("Currency", APL_NULL_STRING, APL_NULL_STRING)
		APL_GOBACK_FAIL
	}
	
	

	if ( p_type == NULL ) p_type = 'M';
	if ( p_exist == NULL ) p_exist = 'Y';


	

	if ( p_type == 'M' && p_exist == 'Y' )
	{
			EXEC SQL SELECT NVL(COUNT(*),0) into :int_h_ccy_count:i_ccy_count
					FROM DL_CURRENCY 
					WHERE CURRENCY_CD=:p_ccycode;

			IS_ANY_ORA_ERROR

			if ( int_h_ccy_count == 0 )
			{
				if (CO_InsertErr(
									l_debug_info_ptr, 
									ERR_CCY_NOTFND,      
									p_ccycode, 
									APL_NULL_STRING, 
									APL_NULL_STRING, 
									__LINE__, 
									__FILE__
								  ) )

				APL_GOBACK_FAIL
			}
	}

	

	else if ( p_type == 'S' && p_exist == 'Y' )
	{
			if(APL_FAILURE == CO_Chk_CodeValid(
													"ISOCURRENCY", 
													p_ccycode, 
													"XX",
													l_debug_info_ptr
														))
			{
				if (CO_InsertErr(
									l_debug_info_ptr, 
									ERR_CCY_NOTFND,      
									p_ccycode, 
									APL_NULL_STRING, 
									APL_NULL_STRING, 
									__LINE__, 
									__FILE__
								  ) )

				APL_GOBACK_FAIL
			}
	}

	
	
	else if ( p_type == 'M' && p_exist == 'N' )
	{
			EXEC SQL SELECT NVL(COUNT(*),0) into :int_h_ccy_count:i_ccy_count
					FROM DL_CURRENCY 
					WHERE CURRENCY_CD=:p_ccycode;

			IS_ANY_ORA_ERROR

			if ( int_h_ccy_count != 0 )
			{
				if (CO_InsertErr(
									l_debug_info_ptr, 
									ERR_CCY_EXISTS,     
											 
									p_ccycode, 
									APL_NULL_STRING, 
									APL_NULL_STRING, 
									__LINE__, 
									__FILE__
								  ) )

				APL_GOBACK_FAIL
			}
	}





	APL_GOBACK_SUCCESS
	
	RETURN_SUCCESS :
		APL_IF_DEBUG
		{ 
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CO_Chk_CcyValid with success\n",
							NULL,
							NULL);
		}
		return(APL_SUCCESS);

	RETURN_FAILURE : 
		APL_IF_DEBUG
		{ 
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CO_Chk_CcyValid with errors\n",
							NULL,
							NULL);
		}
		return(APL_FAILURE);

}							

