












#include "CO_HostStructdef.h" 

EXEC SQL INCLUDE SQLCA.H;

int CR_Rtv_MPRst (char *p_client,
					  char *p_indentity_no,
					  char *serialno,
					  FILE *p_logfile,
  					  DL_DEAL_OTH_MANP_RST_STRUCT_H  *l_dl_deal_oth_manp_rst_struct_h,
					  DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  struct sqlca sqlca;

  short p_i_rowid =0;
  short p_i_accstmp_cmp =0;
  short p_i_delrecdt =0;
  short p_i_instr_dt =0;
  short p_i_moneydt =0;
  short p_i_trcode =0;
  short p_i_entrytype =0;
  short p_i_trdfromord =0;
  short p_i_failcode =0;
  short p_i_qty =0;
  short p_i_tempoutqty =0;
  short p_i_tempretqty =0;
  int srl_no =0;


	fprintf(p_logfile, "Entered Function CR_Rtv_MPRst. Going for mandatory checks\n");
	
	if (!strlen(p_client)) APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING);
  	if (!strlen(p_indentity_no)) APL_DATA_MISSING("Reference Number",APL_NULL_STRING,APL_NULL_STRING);
  
   if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
		CO_ProcMonitor(p_logfile, "Failure in CR_Rtv_MPRst mandatory data checks:\n",
                     l_debug_info_ptr, NULL);

	APL_GOBACK_FAIL
	}

   EXEC SQL VAR l_dl_deal_oth_manp_rst_struct_h->p_entry IS STRING(2);
   EXEC SQL VAR l_dl_deal_oth_manp_rst_struct_h->p_failreas_cd IS STRING(2);
   EXEC SQL VAR l_dl_deal_oth_manp_rst_struct_h->p_cltstmp_cmp IS STRING(20); 
   EXEC SQL VAR l_dl_deal_oth_manp_rst_struct_h->p_delrecdate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_oth_manp_rst_struct_h->p_instrdate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_oth_manp_rst_struct_h->p_moneydate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_oth_manp_rst_struct_h->p_dlfromord IS STRING(2);

   EXEC SQL SELECT 	ROWID,
			ENTRY,
			DEL_REC_DATE,
			INSTRUMENT_DT,
			MONEY_SETL_DT,
			DEAL_CD,
			DEAL_FRM_ORD,
			FAILREASON_CD,
			QTY,
			TEMP_OUT_QUANTITY,
			TEMP_RET_QUANTITY
	INTO 		:l_dl_deal_oth_manp_rst_struct_h->p_ora_rowid:p_i_rowid,
			:l_dl_deal_oth_manp_rst_struct_h->p_entry:p_i_entrytype,
			:l_dl_deal_oth_manp_rst_struct_h->p_delrecdate:p_i_delrecdt,
			:l_dl_deal_oth_manp_rst_struct_h->p_instrdate:p_i_instr_dt,
			:l_dl_deal_oth_manp_rst_struct_h->p_moneydate:p_i_moneydt,
			:l_dl_deal_oth_manp_rst_struct_h->p_dealcd:p_i_trcode ,
			:l_dl_deal_oth_manp_rst_struct_h->p_dlfromord:p_i_trdfromord, 
			:l_dl_deal_oth_manp_rst_struct_h->p_failreas_cd:p_i_failcode, 
			:l_dl_deal_oth_manp_rst_struct_h->p_quantity:p_i_qty, 
			:l_dl_deal_oth_manp_rst_struct_h->p_tempoutquantity:p_i_tempoutqty, 
			:l_dl_deal_oth_manp_rst_struct_h->p_tempretquantity:p_i_tempretqty
        FROM DL_DEAL
   		WHERE CLIENT =:p_client AND 
	        	IDENTIY_NO =:p_indentity_no FOR UPDATE OF DEL_REC_DATE;
	
  	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF, 
														p_client,
														p_indentity_no,
														APL_NULL_STRING);

 	srl_no = atoi(serialno);

	

 if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	CO_ProcMonitor(p_logfile, " Failure in CDBManPrntFn in Select statement:\n",
                     l_debug_info_ptr, NULL);

	APL_GOBACK_FAIL
	}

  APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{
	fprintf(p_logfile, "Leaving Function CR_Rtv_MPRst. Successful\n");
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
	fprintf(p_logfile, "Leaving Function CR_Rtv_MPRst. Failed\n");
	return(APL_FAILURE);
	}

}

int CR_Proc_DBMPRst(char *p_client,
					 char *p_indentity_no,
					 char *chr_p_action,
					 char *serialno,
					 FILE *p_logfile,
					 DL_DEAL_OTH_MANP_RST_STRUCT_H *l_dl_deal_oth_manp_rst_struct_h,
					 INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
					 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  struct sqlca sqlca;

  DL_REGDET_STRUCT_H *l_reg_trf_struct_h;
 
  DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_hd;
   
  char chr_p_date_time[APL_DATE_LEN];

  short p_i_rowid =0;
  short p_i_accstmp_cmp =0;
  short p_i_delrecdt =0;
  short p_i_instr_dt =0;
  short p_i_moneydt =0;
  short p_i_trcode =0;
  short p_i_entrytype=0;
  short p_i_trdfromord =0;
  short p_i_datetime=0;
  short p_i_Account=0;
  short p_i_Refno=0;

	short p_i_subfailcode=0;
	int int_l_h_subfailcode=0;

	fprintf(p_logfile, "Entered Function CR_Proc_DBMPRst. Going for mandatory checks\n");

 

 l_reg_trf_struct_h = (DL_REGDET_STRUCT_H *)calloc(1, sizeof(DL_REGDET_STRUCT_H));

 
 l_dl_dealaudit_struct_hd = (DL_DEALAUDIT_STRUCT_H *)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H));

 APL_MALLOC_FAIL(l_reg_trf_struct_h);
 APL_MALLOC_FAIL(l_dl_dealaudit_struct_hd);

 
	
	if (!strlen(p_client)) APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING);
  	if (!strlen(p_indentity_no)) APL_DATA_MISSING("Reference Number",APL_NULL_STRING,APL_NULL_STRING);
  	if (!strlen(chr_p_action)) APL_DATA_MISSING("Action",APL_NULL_STRING,APL_NULL_STRING);
  
   if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	CO_ProcMonitor(p_logfile, " Failure in CR_Proc_DBMPRst Mandatory Data checks\n",
                     l_debug_info_ptr, p_intl_envdatastruct_h);
	APL_GOBACK_FAIL
	}

 


	EXEC SQL SELECT SUB_FAIL_CD INTO :int_l_h_subfailcode:p_i_subfailcode 
				FROM DL_DEAL 
				WHERE client	=	:p_client
				AND	IDENTIY_NO		=	:p_indentity_no;
	
	IS_ANY_ORA_ERROR

	if(p_i_subfailcode != -1)
		l_dl_dealaudit_struct_hd->h_subfailreas_cd	=	int_l_h_subfailcode;
	else
		l_dl_dealaudit_struct_hd->h_subfailreas_cd	= 0;
	
  strcpy(l_dl_dealaudit_struct_hd->h_dl_client,p_client);
  strcpy(l_dl_dealaudit_struct_hd->h_indentity_no,p_indentity_no);
  strcpy(l_dl_dealaudit_struct_hd->h_trail_for,"T");
  strcpy(l_dl_dealaudit_struct_hd->h_processdetail,p_intl_envdatastruct_h->processtion);
  strcpy(l_dl_dealaudit_struct_hd->h_proc_usr,p_intl_envdatastruct_h->usr);
  strcpy(l_dl_dealaudit_struct_hd->h_subprocess,APL_NULL_STRING);
  l_dl_dealaudit_struct_hd->h_qty = l_dl_deal_oth_manp_rst_struct_h->p_quantity;
  strcpy(l_dl_dealaudit_struct_hd->h_fail_cd,l_dl_deal_oth_manp_rst_struct_h->p_failreas_cd);
  strcpy(l_dl_dealaudit_struct_hd->h_dlfromord,l_dl_deal_oth_manp_rst_struct_h->p_dlfromord);

 if (!strcmp(chr_p_action,"R"))
 {
 strcpy(l_dl_dealaudit_struct_hd->h_subprocess,RECEIVETICKET);
	l_reg_trf_struct_h->h_qty = l_dl_deal_oth_manp_rst_struct_h->p_quantity;
 }

 else if (!strcmp(chr_p_action,"D"))
 {
 strcpy(l_dl_dealaudit_struct_hd->h_subprocess,DELV_TICKET);
	l_reg_trf_struct_h->h_qty = l_dl_deal_oth_manp_rst_struct_h->p_quantity;
 }

 else if (!strcmp(chr_p_action,"O"))
 {
 strcpy(l_dl_dealaudit_struct_hd->h_subprocess,TEMPOUTTICKET);
	l_reg_trf_struct_h->h_qty = l_dl_deal_oth_manp_rst_struct_h->p_tempoutquantity;
 }

 else if (!strcmp(chr_p_action,"T"))
 {
 strcpy(l_dl_dealaudit_struct_hd->h_subprocess,TEMPRETURNTICKET);
	l_reg_trf_struct_h->h_qty = l_dl_deal_oth_manp_rst_struct_h->p_tempretquantity;
 }



 if(CO_RtvSysDtTime(chr_p_date_time,l_debug_info_ptr) !=APL_SUCCESS)
 {
  APL_GOBACK_FAIL
 }


 
 if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
 {
  APL_GOBACK_FAIL
 }


  if((!strcmp(chr_p_action,"R"))|| (!strcmp(chr_p_action,"D")))
  {
  		EXEC SQL UPDATE DL_DEAL
			SET DEL_REC_DATE =NULL,
				ACCESS_STAMP =:chr_p_date_time:p_i_datetime
			WHERE CLIENT =:p_client:p_i_Account
				AND IDENTIY_NO =:p_indentity_no:p_i_Refno;
	}
	else if(TEMP_OUTTKT_IND == chr_p_action[0])
	{
		EXEC SQL UPDATE DL_DEAL
			SET TMP_OUT_DT = NULL,
				TEMP_OUT_QUANTITY = 0,
				ACCESS_STAMP =:chr_p_date_time:p_i_datetime
			WHERE CLIENT =:p_client:p_i_Account
				AND IDENTIY_NO =:p_indentity_no:p_i_Refno;
	}
	else if (TEMP_RET_IND == chr_p_action[0])
	{
		EXEC SQL UPDATE DL_DEAL
			SET TMP_OUT_DATE = NULL,
				TEMP_RET_QUANTITY = 0,
				ACCESS_STAMP =:chr_p_date_time:p_i_datetime
			WHERE CLIENT =:p_client:p_i_Account
				AND IDENTIY_NO =:p_indentity_no:p_i_Refno;
	}
  IS_ANY_ORA_ERROR
  CO_ProcMonitor(p_logfile, " Calling CR_Mod_CLHAudTrail\n",
                     l_debug_info_ptr, p_intl_envdatastruct_h);

  if(APL_SUCCESS != CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_hd,l_debug_info_ptr))
				{ 
  					CO_ProcMonitor(p_logfile, "CDBUpdAudTrlFn Failed\n",
                     l_debug_info_ptr, p_intl_envdatastruct_h);
					APL_GOBACK_FAIL 
				}

  


 if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}

  APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{
	fprintf(p_logfile, "Leaving Function CR_Proc_DBMPRst. Successful\n");
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
	fprintf(p_logfile, "Leaving Function CR_Proc_DBMPRst. Failed\n");
	return(APL_FAILURE);
	}

}


