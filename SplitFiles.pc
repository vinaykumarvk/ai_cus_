








#include "Intellect_Interface.h"
#include "CR_Header_D.h"
#include "Intellect_Common.h"
EXEC SQL INCLUDE SQLCA.H; //AIX - Warnings Removal
#define SP_MSG_START "{IFN"
#define SP_MSG_END "-}"

#define SW_MSG_START "{1:F"
#define SW_MSG_END "-}"

int main(int argc,char **argv) //AIX - Warnings Removal
{
	struct sqlca sqlca;

	INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;
	DEBUG_INFO_STRUCT_H **l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **) NULL;
	FILE                *l_logfile = (FILE *)NULL;
	FILE                *l_Sebi_File = (FILE *)NULL;
	FILE                *l_Upload_File = (FILE *)NULL;
	FILE                *l_Swift_File = (FILE *)NULL;
	char                 val[400]; /* Chirag ISKB 931 */ /* JC - ISKB 1007 - Increased size from 180 to 400 */
	char		     tmpval[400]; /* Chirag ISKB 931 */ /* JC - ISKB 1007 - Increased size from 180 to 400 */
	char                 chr_l_sebipath[100] = APL_NULL_STRING;
	char                 chr_l_swiftpath[100]= APL_NULL_STRING;
	char                 chr_l_uploadpath[200] = APL_NULL_STRING;
	char                 l_filename[100] = APL_NULL_STRING;
	char              	l_fname[100]= APL_NULL_STRING;
	char                 l_msgtype[30]= APL_NULL_STRING;
	char                 l_root_path[250] = APL_NULL_STRING;
	char                 l_filetype[30]= APL_NULL_STRING;
	int                  i=0;
	int                  l_int_num = 0;
	int		     ind_start = 0; /* Chirag ISKB 931 */
	char                **temp = ( char **)NULL;
	/*Nikhil Shinde changes for consolidation*/
	int     l_flag =0;
	char 	l_servprov[80];
	/*Nikhil Shinde changes for consolidation End*/

	/** Added by Sana -- Retro from HDFC **/
	char l_intl_root_path[100] = APL_NULL_STRING;
	char l_upl_file_name[100] = APL_NULL_STRING;
	char l_buf[5000]  =  APL_NULL_STRING;
	int retval = 0;
	/*Retro done from HDFC to upload zip file for SEBI starts --Nitya*/
	char chr_l_zipexrtpath[5000] = APL_NULL_STRING;
	char                 l_uploadpath[200] = APL_NULL_STRING; //Chirag ZIP files
	char l_tmp_uploadpath[5000] = APL_NULL_STRING;
	FILE *l_List_File = (FILE *)NULL; 
	char l_line[5000] = APL_NULL_STRING;
	char l_up_filepath[5000] = APL_NULL_STRING;
	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
//	memset(l_uploadpath,APL_NULL_CHAR,sizeof(l_uploadpath));
	
	/*Retro done from HDFC to upload zip file for SEBI ends --Nitya*/
//	memset(l_buf,NULL,sizeof(l_buf));
//	memset(l_upl_file_name,NULL,sizeof(l_upl_file_name));
//	memset(l_intl_root_path,NULL,sizeof(l_intl_root_path));
	/** Added by Sana -- Retro from HDFC **/
	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Ends */
	FILE *fp_cfg = (FILE *)NULL;
	char l_cfg_filename[100];
	int l_size = 0;

	strcpy(l_cfg_filename,getenv("INTL_ROOT_PATH"));
	strcat(l_cfg_filename,"/intl_sun.cfg");
	/*  APL_FUNCTION_ENTER(l_logfile)*/
	fp_cfg = fopen(l_cfg_filename,"r");

	if(fp_cfg == (FILE *)NULL)
	{
		/*
			printf(l_logfile, "Config File |%s|\n",l_cfg_filename);
			*/
		printf("Config File |%s|\n",l_cfg_filename);
		fflush(stdout);
		APL_GOBACK_FAIL
	}
	EXEC SQL VAR l_filename IS STRING;
	EXEC SQL VAR l_fname IS STRING;
	EXEC SQL VAR l_msgtype IS STRING;
	EXEC SQL VAR chr_l_sebipath IS STRING;
	EXEC SQL VAR chr_l_swiftpath IS STRING;
	EXEC SQL VAR chr_l_uploadpath IS STRING;
	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
	EXEC SQL VAR val IS STRING;
	EXEC SQL VAR tmpval IS STRING;
	EXEC SQL VAR l_root_path IS STRING;
	EXEC SQL VAR l_filetype IS STRING;
	EXEC SQL VAR l_intl_root_path IS STRING;
	EXEC SQL VAR l_upl_file_name IS STRING;
	EXEC SQL VAR l_buf IS STRING;
	EXEC SQL VAR chr_l_zipexrtpath IS STRING;
	EXEC SQL VAR l_uploadpath IS STRING;
	EXEC SQL VAR l_tmp_uploadpath IS STRING;
	EXEC SQL VAR l_up_filepath IS STRING;
	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Ends */
	l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *));

	if(CO_Get_DBConnect(l_debug_info_ptr) == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (APL_FAILURE == CO_Rtv_RptFileName( "7g",
				APL_LOGFILE_DESC,
				100,
				argv[5],
				argv,
				&l_logfile,
				&l_debug_info_ptr ) )
	{
		CO_ProcMonitor(l_logfile, "Failure from CO_Rtv_RptFileName", NULL, NULL);
		APL_GOBACK_FAIL
	}
	else
	{
		CO_ProcMonitor(l_logfile, "Success from CO_Rtv_RptFileName", NULL, NULL);
		//printf("\n file opened %u \n",l_logfile); Commented for AIX Migration
	}



	if(BT_Status_Update(argv[0],
				argv[1],
				argv[2],
				APL_STARTED_STATUS,
				l_debug_info_ptr) ==APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}



	if(APL_FAILURE == CO_SplitStr(argv[9],
				'|',
				&l_int_num,&temp))
	{
		CO_ProcMonitor(l_logfile, "Failure from StrSplitFn", NULL, NULL);
		APL_GOBACK_FAIL
	}
	else
	{
		CO_ProcMonitor(l_logfile, "Success from StrSplitFn", NULL, NULL);
	}

	if (l_int_num != 3)
	{
		CO_ProcMonitor(l_logfile, "Improper Number of arguments", NULL, NULL);
		APL_GOBACK_FAIL
	}
	else
	{
		CO_ProcMonitor(l_logfile, "proper Number of arguments", NULL, NULL);
	}

	APL_IF_DEBUG
	{
		printf("\n the no of arguments |%d|",l_int_num); 		fflush(stdout);
		printf("\n the arguments are |%s|",temp[0]);		fflush(stdout);
		printf("\n the arguments are |%s|",temp[1]);		fflush(stdout);
		printf("\n the arguments are |%s|",temp[2]);		fflush(stdout);

	}

	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
	memset(l_filename,NULL,sizeof(l_filename));
	memset(chr_l_uploadpath,NULL,sizeof(chr_l_uploadpath));
	memset(val,NULL,sizeof(val));
	memset(tmpval,NULL,sizeof(tmpval));
	memset(chr_l_sebipath,NULL,sizeof(chr_l_sebipath));
	memset(chr_l_swiftpath,NULL,sizeof(chr_l_swiftpath));
	memset(l_fname,NULL,sizeof(l_fname));
	memset(l_msgtype,NULL,sizeof(l_msgtype));
	memset(l_filetype,NULL,sizeof(l_filetype));
	memset(l_buf,NULL,sizeof(l_buf));
	memset(l_upl_file_name,NULL,sizeof(l_upl_file_name));
	memset(l_intl_root_path,NULL,sizeof(l_intl_root_path));
	memset (chr_l_zipexrtpath,NULL,sizeof(chr_l_zipexrtpath));
	memset(l_uploadpath,APL_NULL_CHAR,sizeof(l_uploadpath));
	memset(l_tmp_uploadpath,NULL,sizeof(l_tmp_uploadpath));
	memset(l_up_filepath,NULL,sizeof(l_up_filepath));
	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Ends */

	strcpy(l_msgtype,temp[0]);
	strcpy(l_filetype,temp[1]);
	strcpy(l_filename,temp[2]);

	strcpy(l_intl_env_data_h.usr,    argv[3]);
	strcpy(l_intl_env_data_h.h_mode,       argv[4]);
	strcpy(l_intl_env_data_h.processtion,  argv[5]);
	strcpy(l_intl_env_data_h.auth_req,  argv[6]);
	strcpy(l_intl_env_data_h.subprocess,   argv[7]);

	if ( CO_ReadToken(fp_cfg,"INTL_UPL_PATH",chr_l_uploadpath,l_debug_info_ptr) == APL_FAILURE)
	{
		CO_ProcMonitor(l_logfile, "Failure From Retrieve Dir Path Of UPLOAD", NULL, NULL);
		APL_GOBACK_FAIL
	}
	else
	{
		CO_ProcMonitor(l_logfile, "Success From Retrieve Dir Path Of UPLOAD", NULL, NULL);
	}
	/** Added by Sana -- Retro from HDFC **/
	strcpy(l_uploadpath,chr_l_uploadpath); /*Retro done from HDFC to upload zip file for SEBI --Nitya*/
	strcpy(l_intl_root_path,getenv("INTL_ROOT_PATH"));
	printf("Upload Path |%s| file name |%s| rootpath |%s|\n",chr_l_uploadpath,l_filename,l_intl_root_path);
        fflush(stdout);
	
        if(strstr(l_filename,".zip") != NULL || strstr(l_filename,".ZIP") != NULL)
        {
		printf("ZIP file found not converting dos to unix.....\n");
		fflush(stdout);
        }
        /* Chirag for unzipping ZIP file 07-06-2007 */
        else
        {
		strcpy(l_upl_file_name,chr_l_uploadpath);
		strcat(l_upl_file_name,l_filename);
		printf("File name with absolute path |%s|",l_upl_file_name);
		fflush(stdout);

		sprintf(l_buf,"%sRemoveNewLineChars.ksh %s",l_intl_root_path,l_upl_file_name);

		printf("Command :|%s|\n",l_buf);
        	fflush(stdout);
        	retval=system(l_buf);
        	if(retval == 0)
                	printf("Command Executed Successfully ");
        	else
                	printf("Command Executed UnSuccessfully ");

        	fflush(stdout);

		memset(l_buf,NULL,sizeof(l_buf));
        	memset(l_upl_file_name,NULL,sizeof(l_upl_file_name));
        	memset(l_intl_root_path,NULL,sizeof(l_intl_root_path));
        }
	/** Added by Sana -- Retro from HDFC **/

	if(strcmp(l_msgtype,"SEBI") == 0)
	{
		if ( CO_ReadToken(fp_cfg,"INTL_MS_INC_PATH",chr_l_sebipath,l_debug_info_ptr) == APL_FAILURE)
		{
			printf("Here after SEBI");
			fflush(stdout);
			CO_ProcMonitor(l_logfile, "Failure From Retrieve Dir Path Of SEBI", NULL, NULL);
			APL_GOBACK_FAIL
		}
		else
		{
			printf("In else part of SEBI");
			fflush(stdout);
			CO_ProcMonitor(l_logfile, "Success From Retrieve Dir Path Of SEBI", NULL, NULL);
			/*CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);*/
			strcat(chr_l_uploadpath,l_filename);
/*Retro done from HDFC to upload zip file for SEBI Starts --Nitya*/
			if(strstr(l_filename,".zip") != NULL || strstr(l_filename,".ZIP") != NULL)
								{
										  if ( CO_ReadToken(fp_cfg,"INTL_ZIP_EXTRACT",chr_l_zipexrtpath,l_debug_info_ptr) == APL_FAILURE)
										  {
													 CO_ProcMonitor(l_logfile, "Failure From Retrieve Dir Path Of ZIP Extract", NULL, NULL);
													 APL_GOBACK_FAIL
										  }
										  sprintf(l_buf,"rm %s*.*",chr_l_zipexrtpath);
										printf("\nCommand = |%s| ",l_buf);
										fflush(stdout);
										  retval = system(l_buf);
										printf("\n RM *.* executed with status = |%d|\n ",retval);
										fflush(stdout);
										  memset(l_buf, APL_NULL_CHAR , 5000);
/*
										  l_length = strlen(chr_l_zipexrtpath);
										  cnt = l_length - 1;
										  strncpy(chr_l_zipexrtpath,chr_l_zipexrtpath,cnt);
*/
										printf("Path to extract files : - |%s| \n",chr_l_zipexrtpath);		fflush(stdout);
										  /* Kalyan Added -j Condition for unzip  on 150607 
										  sprintf(l_buf,"unzip %s -d %s",chr_l_uploadpath,chr_l_zipexrtpath); */
										  sprintf(l_buf,"unzip -j %s -d %s",chr_l_uploadpath,chr_l_zipexrtpath);
										printf("\nCommand = |%s| ",l_buf);		fflush(stdout);
										  retval = system(l_buf);
										printf("\n UnZip File Command executed with status = |%d|\n ",retval);		fflush(stdout);
										  memset(l_buf, APL_NULL_CHAR , 5000);

										  sprintf(l_buf,"ls %s > %slist.txt",chr_l_zipexrtpath,chr_l_zipexrtpath);
										printf("\nCommand = |%s| ",l_buf);		fflush(stdout);
										  retval = system(l_buf);
										printf("\n List file creation command executed with status = |%d|\n ",retval); 		fflush(stdout);
										  memset(l_buf, APL_NULL_CHAR , 5000);

										  sprintf(l_buf,"mv %s*.* %s",chr_l_zipexrtpath,l_uploadpath);
										printf("\nCommand = |%s| ",l_buf);		fflush(stdout);
										  retval = system(l_buf);
										printf("\n Moving file command executed with status = |%d|\n ",retval);		fflush(stdout);
										  memset(l_buf, APL_NULL_CHAR , 5000);

										  strcpy(l_tmp_uploadpath,l_uploadpath); //Chirag for ZIP files
										  strcat(l_tmp_uploadpath,"list.txt");	

										printf("List file path |%s| \n",l_tmp_uploadpath);		fflush(stdout);
										  if((l_List_File = fopen(l_tmp_uploadpath,"r")) == NULL)
										  {
													 APL_GOBACK_FAIL;
										  }

										  while(!feof(l_List_File))
										  {

													 memset(l_line,NULL,sizeof(l_line));
													 fscanf(l_List_File, "%[^\n]\n",l_line);
													 strcpy(l_up_filepath,l_uploadpath);
													 strcat(l_up_filepath,l_line);
											printf("Indivdual file path : |%s| \n",l_up_filepath);		fflush(stdout);
													 //l_Upload_File = NULL;

													 /*** Converting DOS File To Unix ****/
													// sprintf(l_buf,"dos2unix %s %s",l_up_filepath,l_up_filepath);
											memset(l_intl_root_path,NULL,sizeof(l_intl_root_path));
											strcpy(l_intl_root_path,getenv("INTL_ROOT_PATH"));
											memset(l_buf, APL_NULL_CHAR , 5000);
													sprintf(l_buf,"%sRemoveNewLineChars.ksh %s",l_intl_root_path,l_up_filepath);
											printf("\nCommand = |%s| ",l_buf);		fflush(stdout);
													 retval = system(l_buf);
											printf("\n File Converted to Unix,Command executed with status = |%d|\n ",retval);		fflush(stdout);
													 memset(l_buf, APL_NULL_CHAR , 5000);
											printf("About to Open l_Upload_File....\n");		fflush(stdout);
											printf("l_up_filepath is |%s|\n",l_up_filepath);		fflush(stdout);
											printf("chr_l_uploadpath is |%s|\n",chr_l_uploadpath);		fflush(stdout);
											printf("File to Open is |%s|\n",l_up_filepath);	fflush(stdout);
													 if((l_Upload_File = fopen(l_up_filepath,"r")) == NULL)
													 {
																APL_GOBACK_FAIL;
													 }
											/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
											fseek(l_Upload_File, 0, SEEK_END);
											l_size=ftell(l_Upload_File);
											printf("File size is |%d|",l_size);		fflush(stdout);
											if(ftell(l_Upload_File) <=5)
											{
												CO_ProcMonitor(l_logfile, "Uploaded Message is Empty.", NULL, NULL);
												memset(l_buf, APL_NULL_CHAR , 5000);
												sprintf(l_buf,"Message Name :- |%s|",l_up_filepath);
												CO_ProcMonitor(l_logfile,l_buf,NULL,NULL);
												//APL_GOBACK_FAIL;
												continue;
											}
											fseek(l_Upload_File, 0, SEEK_SET);
											//memset(val,NULL,sizeof(val));
											/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Ends */
													 /*Nikhil Shinde changes for consolidation*/
													/*If first line does not contain "{IFN" then we should print the Service Provider before the message */

														fscanf(l_Upload_File, "%[^\n]\n",val);
														if(strncmp(val,SP_MSG_START,strlen(SP_MSG_START)))	
															{
																l_flag=1;
																fscanf(l_Upload_File, "%[^\n]\n",val);/*Service Provider is on 2nd line*/ 
																memset(l_servprov,'\0',80);
																strcpy(l_servprov,val);
															}
														rewind(l_Upload_File);
													/*Nikhil Shinde changes for consolidation ends*/
											printf("About to Open l_Upload_File....\n");		fflush(stdout);
													 i = 0;
													 while(!feof(l_Upload_File))
													 {
															//	fflush(stdout);
												//printf("Chirag........\n");
																i++;
																memset(l_fname,NULL,sizeof(l_fname));
																memset(l_root_path,NULL,sizeof(l_root_path));
																strncpy(l_fname,l_line,(strlen(l_line) - strlen(strstr(l_line,"."))));
																//strncpy(l_fname,l_filename,(strlen(l_filename) - strlen(strstr(l_filename,"."))));
																strcpy(l_root_path,chr_l_sebipath);
																strcat(l_root_path,l_fname);
																strcat(l_root_path,"_");
																strcat(l_root_path,ltoa(i)); 
																strcat(l_root_path,".TBS");

																fscanf(l_Upload_File, "%[^\n]\n",val);
																if(strlen(val) && !strncmp(val,SP_MSG_START,strlen(SP_MSG_START)))
																{
																		  //l_Sebi_File = NULL;
																		  if((l_Sebi_File = fopen(l_root_path,"w")) == NULL)
																		  {
																					 APL_GOBACK_FAIL;
																		  }
																		  /*Nikhil Shinde changes for consolidation*/
																			if(l_flag == 1)
																			{
																				fputs(l_servprov,l_Sebi_File);
																				fprintf(l_Sebi_File,"\n");
																			}
																			/*Nikhil Shinde changes for consolidation ends*/
																		  fputs(val,l_Sebi_File);
																		  fprintf(l_Sebi_File,"\n");
																}
																else
																		  continue;
																while(!feof(l_Upload_File))
																{
																		  fscanf(l_Upload_File, "%[^\n]\n",val);
																		  fputs(val,l_Sebi_File);
																		 /**if(!strlen(val) || strstr(val,"-}")!=NULL )
																		  {}
																		 **/
																		/**fclose(l_Sebi_File); -- Moved Out Sundar **/
																		if(strstr(val,SP_MSG_END))
																		{
																			break;
																		}
																		fprintf(l_Sebi_File,"\n");
															}
													 /**l_size = ftell(l_Sebi_File); -- Biju**/
													 fclose(l_Sebi_File);
												printf("Count |%d| \n",i);		fflush(stdout);
													 /**if(l_size == 0) unlink(l_root_path); -- Biju**/
										  }
										fflush(stdout);
										printf("Closing l_Upload_File .....\n");		fflush(stdout);
										//  memset(l_up_filepath,NULL,sizeof(l_up_filepath));
											fclose(l_Upload_File);
							//	fclose(l_List_File);   //Commented by Gufran for IL 1107 - Unable to upload ZIP file for STP deals 
								}
								fclose(l_List_File);   //Added by Gufran for IL 1107 - Unable to upload ZIP file for STP deals 
										printf("Closing l_List_File.....\n");		fflush(stdout);
					 }
/*Retro done from HDFC to upload zip file for SEBI Ends--Nitya*/
			else
			{
			if((l_Upload_File = fopen(chr_l_uploadpath,"r")) == NULL)
			{
				APL_GOBACK_FAIL;
			}
			/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
			fseek(l_Upload_File, 0, SEEK_END);
			l_size=ftell(l_Upload_File);
			printf("File size is |%d|",l_size);		fflush(stdout);
			if(ftell(l_Upload_File) <=5)
			{
				CO_ProcMonitor(l_logfile, "Uploaded Message is Empty.", NULL, NULL);
				CO_ProcMonitor(l_logfile,"Message Name is :- ",NULL,NULL);
				CO_ProcMonitor(l_logfile,chr_l_uploadpath , NULL, NULL);
				APL_GOBACK_FAIL;
			}
			fseek(l_Upload_File, 0, SEEK_SET);
			/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Ends */
	/*Nikhil Shinde changes for consolidation*/
	/*If first line does not contain "{IFN" then we should print the Service Provider before the message */
		fscanf(l_Upload_File, "%[^\n]\n",val);
		if(strncmp(val,SP_MSG_START,strlen(SP_MSG_START)))	
			{
				l_flag=1;
				fscanf(l_Upload_File, "%[^\n]\n",val);/*Service Provider is on 2nd line*/ 
				memset(l_servprov,'\0',80);
				strcpy(l_servprov,val);
			}
		rewind(l_Upload_File);
	/*Nikhil Shinde changes for consolidation ends*/


			while(!feof(l_Upload_File))
			{
				i++;
				memset(l_fname,NULL,sizeof(l_fname));
				memset(l_root_path,NULL,sizeof(l_root_path));
				strncpy(l_fname,l_filename,(strlen(l_filename) - strlen(strstr(l_filename,"."))));
				strcpy(l_root_path,chr_l_sebipath);
				strcat(l_root_path,l_fname);
				strcat(l_root_path,"_");
				strcat(l_root_path,ltoa(i)); 
				strcat(l_root_path,".TBS");

				fscanf(l_Upload_File, "%[^\n]\n",val);
				if(strlen(val) && !strncmp(val,SP_MSG_START,strlen(SP_MSG_START)))
				{
					if((l_Sebi_File = fopen(l_root_path,"w")) == NULL)
					{
						APL_GOBACK_FAIL;
					}
					/*Nikhil Shinde changes for consolidation*/
					if(l_flag == 1)
					{
						fputs(l_servprov,l_Sebi_File);
						fprintf(l_Sebi_File,"\n");
					}
					/*Nikhil Shinde changes for consolidation ends*/
					fputs(val,l_Sebi_File);
					fprintf(l_Sebi_File,"\n");
				}
				else
					continue;
				while(!feof(l_Upload_File))
				{
					fscanf(l_Upload_File, "%[^\n]\n",val);
					fputs(val,l_Sebi_File);
					/**if(!strlen(val) || strstr(val,"-}")!=NULL )
					  {}
					 **/
					/**fclose(l_Sebi_File); -- Moved Out Sundar **/
					if(strstr(val,SP_MSG_END))
					{
						break;
					}
					fprintf(l_Sebi_File,"\n");
				}
				/**l_size = ftell(l_Sebi_File); -- Biju**/
				fclose(l_Sebi_File);
				/**if(l_size == 0) unlink(l_root_path); -- Biju**/
			}
			fclose(l_Upload_File);
		}
	}
	}

	if(strcmp(l_msgtype,"SWIFT") == 0)
	{
		if ( CO_ReadToken(fp_cfg,"INTL_MS_INC_SWIFT_PATH",chr_l_swiftpath,l_debug_info_ptr) == APL_FAILURE)
		{
			CO_ProcMonitor(l_logfile, "Failure From Retrieve Dir Path Of Swift", NULL, NULL);
			APL_GOBACK_FAIL
		}
		else
		{
			CO_ProcMonitor(l_logfile, "Success From Retrieve Dir Path Of SWIFT", NULL, NULL);
			/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
			/*CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);*/
			/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
			strcat(chr_l_uploadpath,l_filename);

			if((l_Upload_File = fopen(chr_l_uploadpath,"r")) == NULL)
			{
				APL_GOBACK_FAIL;
			}

			/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts */
			fseek(l_Upload_File, 0, SEEK_END);
			l_size=ftell(l_Upload_File);
			printf("File size is |%d|",l_size);		fflush(stdout);
			if(ftell(l_Upload_File) <=5)
			{
				CO_ProcMonitor(l_logfile, "Uploaded Message is Empty.", NULL, NULL);
				CO_ProcMonitor(l_logfile,"Message Name is :- ",NULL,NULL);
				CO_ProcMonitor(l_logfile,chr_l_uploadpath,NULL,NULL);
				APL_GOBACK_FAIL;
			}
			fseek(l_Upload_File, 0, SEEK_SET);
			CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
			/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Ends */
			while(!feof(l_Upload_File))
			{
				i++;
				memset(l_fname,NULL,sizeof(l_fname));
				memset(l_root_path,NULL,sizeof(l_root_path));
			/* Added Chirag ISKB 931 06032008 */
				if(strstr(l_filename,"."))
					strncpy(l_fname,l_filename,(strlen(l_filename) - strlen(strstr(l_filename,"."))));
				else
				{
					strncpy(l_fname,l_filename,(strlen(l_filename) - strlen(l_filename)));
				}
			/* Added Chirag ISKB 931 06032008 */
				strcpy(l_root_path,chr_l_swiftpath);
				strcat(l_root_path,l_fname);
				strcat(l_root_path,"_");
				strcat(l_root_path,ltoa(i)); 
				strcat(l_root_path,".TBS");
				
			/* Added Chirag ISKB 931 06032008 */
				if(ind_start)
				{
					printf("dont scan line ..start of msg found on previous line\n");		fflush(stdout);
					printf("VAL = |%s| \n",val);		fflush(stdout);
					EXEC SQL SELECT substr(:val,Instr(:val,'$') + 1) into :tmpval FROM DUAL;
					IS_ANY_ORA_ERROR
					//strncpy(tmpval,val,strlen(strstr(val,SW_MSG_START)));
					printf("TMPVAL = |%s| \n",tmpval);		fflush(stdout);
					strcpy(val,tmpval);
					ind_start = 0;
				}
				else
				{
					printf("No start of msg found on previous line...\n");		fflush(stdout);
					fscanf(l_Upload_File, "%[^\n]\n",val);
				}
			/* Added Chirag ISKB 931 06032008 */

				if(strlen(val) && !strncmp(val,SW_MSG_START,strlen(SW_MSG_START)))
				{
					if((l_Swift_File = fopen(l_root_path,"w")) == NULL)
					{
						APL_GOBACK_FAIL;
					}
					fputs(val,l_Swift_File);
					fprintf(l_Swift_File,"\n");
				}
				else
					continue;

				while(!feof(l_Upload_File))
				{
					fscanf(l_Upload_File, "%[^\n]\n",val);
					fputs(val,l_Swift_File);
					/**
					  if(!strlen(val) || strstr(val,"-}")!=NULL)
					  {}
					 **/
					if(strstr(val,SW_MSG_END))
					{
						/**fclose(l_Swift_File); Moved Out sundar**/
			/* Added Chirag ISKB 931 06032008 */
						if(strstr(val,SW_MSG_START))
							ind_start = 1;
						else
							ind_start = 0;
			/* Added Chirag ISKB 931 06032008 */
						break;
					}
					fprintf(l_Swift_File,"\n");
				}
				/**l_size = ftell(l_Swift_File); -- Biju**/
				fclose(l_Swift_File);
				/**if(l_size == 0) unlink(l_root_path); -- Biju **/
			}
			fclose(l_Upload_File);
		}
	}
	APL_GOBACK_SUCCESS

		RETURN_SUCCESS :
		
		if(BT_Status_Completed(argv[0],
					argv[1],
					argv[2],
					l_debug_info_ptr)   ==  APL_FAILURE )
		{
			APL_GOBACK_FAIL
		}
	EXEC SQL COMMIT WORK;
	if(sqlca.sqlcode != 0)APL_GOBACK_FAIL
		exit(0);
RETURN_FAILURE :

	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Starts*/
	CO_ProcMonitor(l_logfile,"Exiting Process. Kindly Execute Mark Process Complete.",NULL,NULL);
	/*ISKB (8661/8679/8762) - Blank File Upload Check Added - Changes by Mrinal - Ends*/
	CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
	exit(-1);

}
