
/************************************************************************************
 *    COPYRIGHT NOTICE                                                              *
 *                                                                                  *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.              *
 *                                                                                  *
 *   These materials are confidential and proprietary to                            *
 *    Polaris Software Lab Limited and no part of these materials should            *
 *    be reproduced, published, transmitted or distributed in any form or           *
 *    by any means, electronic, mechanical, photocopying, recording or              *
 *    otherwise, or stored in any information storage or retrieval system           *
 *    of any nature nor should the materials be disclosed to third parties          *
 *    or used in any other manner for which this is not authorized, without         *
 *    the prior express written authorization of Polaris Software Lab Limited.      *
 */
/************************************************************************************
 *
 * Module Name         :        Master Maintenance
 *
 * File Name           :        CO_ChkPty.pc
 *
 * Description         :        This file contains functions for checking existency 
 *                              of Party main and grid data details in database.
 *
 *
 *                      Version Control Block
 *
 * Date        Version     Author               Description
 * ---------   --------  ---------------  ---------------------------------------------
 * 10-10-2005   1.0       S Pradeep       New file to validate Master and child tables
 *************************************************************************************/

/**************************************************************************************
 *
 *
 *  Functions Used                                 Description
 * --------------------------    ------------------------------------------------------
 * MT_Chk_PtyVal                  Checks the existency of Party Main details given in 
 *                                Param String are in database.
 * MT_Chk_PtyBankdetVal           Checks the existency of Party Bank details given in
 *                                Param String are in database.
 * MT_Chk_PtyExchMapVal           Checks the existency of Party Exchange details given
 *                                in Param String are in database.
 * MT_Chk_PtyDepoMapVal           Checks the existency of Party Depository details given
 *                                in Param String are in database.
 * MT_Chk_PtyExchClnMapVal        Checks the existency of Party Exchange client details
 *                                given in Param String are in database.
 ***************************************************************************************/

#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int MT_Chk_PtyVal(char *p_ptycode,char *p_ptytype,char p_exist,char p_auth,char p_del,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	char chr_l_status[APL_STATUS_LEN];
	short l_i_status;
	int int_l_exist;
	int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif



	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_Chk_PtyVal\n",NULL,NULL);
	}

	l_i_status =0;
	int_l_exist =0;

	memset(chr_l_status,NULL,APL_STATUS_LEN);

	if (!strlen(p_ptycode))
	{
		APL_DATA_MISSING("Party", APL_NULL_STRING, APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (strcmp(p_ptytype,APL_NULL_STRING))
	{
		EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_exist 
		FROM MT_PARTY WHERE PTY_CODE =:p_ptycode AND PTY_TYPE =:p_ptytype;

		IS_ANY_ORA_ERROR

		EXEC SQL SELECT STATUS INTO :chr_l_status:l_i_status
		FROM MT_PARTY WHERE PTY_CODE =:p_ptycode AND PTY_TYPE =:p_ptytype;

		IS_ANY_ORA_ERROR
	}
	else
	{
		EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_exist
		FROM MT_PARTY WHERE PTY_CODE =:p_ptycode;


		IS_ANY_ORA_ERROR

		EXEC SQL SELECT STATUS INTO :chr_l_status:l_i_status
		FROM MT_PARTY WHERE PTY_CODE =:p_ptycode;

		IS_ANY_ORA_ERROR
	}

	chr_l_status[APL_STATUS_LEN] = '\0';
	if (p_exist == 'Y')
	{
		if (int_l_exist == 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_NOT_FOUND,p_ptycode,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_exist =='N')
	{
		if (int_l_exist != 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXISTS,p_ptycode,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (p_auth =='N')
	{
		if (!strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_AUTHORIZED,p_ptycode,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_auth =='Y')
	{
		if (strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_NOT_AUTHORIZED,p_ptycode,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='N')
	{ 
		if (!strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,ERR_PARTY_MARKED_DEL,p_ptycode,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='Y')
	{
		if (strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,ERR_PARTY_NOT_MARKED_DEL,p_ptycode,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	else
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Success in MT_Chk_PtyVal. Getting out\n",NULL,NULL);
		}
			return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Failed in MT_Chk_PtyVal. Going out\n",NULL,NULL);
		}
		return(APL_FAILURE);
	}
}

/*
int MT_Chk_PtyBankdetVal(int p_ptyseq,char *p_pty_code,char p_exist,char p_auth,char p_del,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	char chr_l_status[APL_STATUS_LEN];
	short l_i_status;
	int int_l_exist;
	int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif



	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_Chk_PtyBankdetVal\n",NULL,NULL);
	}

	l_i_status =0;
	int_l_exist =0;

	memset(chr_l_status,NULL,APL_STATUS_LEN);
	if (!p_ptyseq)
	{
		APL_DATA_MISSING("Party Sequence", APL_NULL_STRING, APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	else if(!strlen(p_pty_code))
	{
		APL_DATA_MISSING("Party Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
	}
	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_exist
	FROM MT_PTY_BANKDET 
		WHERE 
			PARTY_SEQ_NUM =:p_ptyseq AND
			PTY_CODE =:p_pty_code;

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT STATUS INTO :chr_l_status:l_i_status
	FROM MT_PTY_BANKDET 
		WHERE 
			PARTY_SEQ_NUM =:p_ptyseq AND
			PTY_CODE =:p_pty_code;

	IS_ANY_ORA_ERROR

	chr_l_status[APL_STATUS_LEN] = '\0';
	if (p_exist == 'Y')
	{
		if (int_l_exist == 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_BANKDET_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_exist =='N')
	{
		if (int_l_exist != 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_BANKDET_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (p_auth =='N')
	{
		if (!strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_BANKDET_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_auth =='Y')
	{
		if (strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_BANKDET_NOT_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='N')
	{
		if (!strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,ERR_PARTY_BANKDET_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='Y')
	{
		if (strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr, ERR_PTY_BANKDET_NOT_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)      
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	else
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Success in MT_Chk_PtyBankdetVal. Getting out\n",NULL,NULL);
		}
		return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Failed in MT_Chk_PtyBankdetVal. Going out\n",NULL,NULL);
		}
		return(APL_FAILURE);
	}
}
*/
int MT_Chk_PtyExchMapVal(char *p_pty_code,char *p_exch_code,char *p_pty_exch_map_code,char p_exist,char p_auth,char p_del,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	char chr_l_status[APL_STATUS_LEN];
	short l_i_status;
	int int_l_exist;
	int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif



	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_Chk_PtyExchMapVal\n",NULL,NULL);
	}

	l_i_status =0;
	int_l_exist =0;

	memset(chr_l_status,NULL,APL_STATUS_LEN);

	if (!strlen(p_pty_code))
	{
		APL_DATA_MISSING("Party Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_exch_code))
	{
		APL_DATA_MISSING("Exchange Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_pty_exch_map_code))
	{
		APL_DATA_MISSING("Party Exchange Map Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}
	
	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_exist
	FROM MT_PTY_EXCH_MAP 
		WHERE 
			PTY_CODE =:p_pty_code AND
			EXCH_CODE =:p_exch_code AND
			PTY_EXCH_MAP_CODE =:p_pty_exch_map_code;

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT STATUS INTO :chr_l_status:l_i_status
	FROM MT_PTY_EXCH_MAP 
		WHERE 
			PTY_CODE =:p_pty_code AND
			EXCH_CODE =:p_exch_code AND
			PTY_EXCH_MAP_CODE =:p_pty_exch_map_code;

	IS_ANY_ORA_ERROR

	chr_l_status[APL_STATUS_LEN] = '\0';
	if (p_exist == 'Y')
	{
		if (int_l_exist == 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHMAP_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_exist =='N')
	{
		if (int_l_exist != 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHMAP_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (p_auth =='N')
	{
		if (!strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHMAP_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_auth =='Y')
	{
		if (strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHMAP_NOT_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='N')
	{
		if (!strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHMAP_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='Y')
	{
		if (strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr, ERR_PTY_EXCH_MAP_NOT_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)    
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	else
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Success in MT_Chk_PtyExchMapVal. Getting out\n",NULL,NULL);
		}
		return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Failed in MT_Chk_PtyExchMapVal. Going out\n",NULL,NULL);
		}
		return(APL_FAILURE);
	}
	}

int MT_Chk_PtyDepoMapVal(char *p_pty_code,char *p_depo_code,char *p_pty_depo_map_client_id,char *p_pty_depo_map_dp_id,char p_exist,char p_auth,char p_del,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	char chr_l_status[APL_STATUS_LEN];
	short l_i_status;
	int int_l_exist;
	int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_Chk_PtyDepoMapVal\n",NULL,NULL);
	}

	l_i_status =0;
	int_l_exist =0;

	memset(chr_l_status,NULL,APL_STATUS_LEN);

	if (!strlen(p_pty_code))
	{
		APL_DATA_MISSING("Party Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_depo_code))
	{
		APL_DATA_MISSING("Depository Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_pty_depo_map_client_id))
	{
		APL_DATA_MISSING("Party Depository Client ID",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_pty_depo_map_dp_id))
	{
		APL_DATA_MISSING("Party Depository DP ID",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}
	
	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
		int_error_flag = APL_FAILURE;
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_exist
	FROM MT_PTY_DEPO_MAP 
		WHERE 
			PTY_CODE =:p_pty_code AND
			DEPO_CODE =:p_depo_code AND
			PTY_DEPO_MAP_CLIENT_ID =:p_pty_depo_map_client_id AND
			PTY_DEPO_MAP_DP_ID =:p_pty_depo_map_dp_id;

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT STATUS INTO :chr_l_status:l_i_status
	FROM MT_PTY_DEPO_MAP 
		WHERE 
			PTY_CODE =:p_pty_code AND
			DEPO_CODE =:p_depo_code AND
			PTY_DEPO_MAP_CLIENT_ID =:p_pty_depo_map_client_id AND
			PTY_DEPO_MAP_DP_ID =:p_pty_depo_map_dp_id;

	IS_ANY_ORA_ERROR

	chr_l_status[APL_STATUS_LEN] = '\0';
	if (p_exist == 'Y')
	{
		if (int_l_exist == 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_DEPOMAP_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_exist =='N')
	{
		if (int_l_exist != 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_DEPOMAP_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (p_auth =='N')
	{
		if (!strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_DEPOMAP_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_auth =='Y')
	{
		if (strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_DEPOMAP_NOT_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='N')
	{
		if (!strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,ERR_PARTY_DEPOMAP_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='Y')
	{
		if (strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr, ERR_PTY_DEPO_MAP_NOT_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)    
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	else
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Success in MT_Chk_PtyDepoMapVal. Getting out\n",NULL,NULL);
		}
		return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Failed in MT_Chk_PtyDepoMapVal. Going out\n",NULL,NULL);
		}
		return(APL_FAILURE);
	}
}


int MT_Chk_PtyExchClnMapVal(char *p_pty_code,char *p_exch_code,char *p_cln_code,char *p_pty_exch_cln_map_code,char p_exist,char p_auth,char p_del,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	char chr_l_status[APL_STATUS_LEN];
	short l_i_status;
	int int_l_exist;
	int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_Chk_PtyExchClnMapVal\n",NULL,NULL);
	}

	l_i_status =0;
	int_l_exist =0;

	memset(chr_l_status,NULL,APL_STATUS_LEN);

	if (!strlen(p_pty_code))
	{
		APL_DATA_MISSING("Party Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_exch_code))
	{
		APL_DATA_MISSING("Exchange Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_cln_code))
	{
		APL_DATA_MISSING("Client Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (!strlen(p_pty_exch_cln_map_code))
	{
		APL_DATA_MISSING("Party Exchange Client Map Code",APL_NULL_STRING,APL_NULL_STRING);
		int_error_flag = APL_FAILURE;
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_exist
	FROM MT_PTY_EXCH_CLN_MAP 
		WHERE 
			PTY_CODE =:p_pty_code AND
			EXCH_CODE =:p_exch_code AND
			CLN_CODE =:p_cln_code AND
			PTY_EXCH_CLN_MAP_CODE =:p_pty_exch_cln_map_code;

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT STATUS INTO :chr_l_status:l_i_status
	FROM MT_PTY_EXCH_CLN_MAP 
		WHERE 
		PTY_CODE =:p_pty_code AND
		EXCH_CODE =:p_exch_code AND
		CLN_CODE =:p_cln_code AND
		PTY_EXCH_CLN_MAP_CODE =:p_pty_exch_cln_map_code;

	IS_ANY_ORA_ERROR

	chr_l_status[APL_STATUS_LEN] = '\0';
	if (p_exist == 'Y')
	{
		if (int_l_exist == 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHCLNMAP_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_exist =='N')
	{
		if (int_l_exist != 0)
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHCLNMAP_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	if (p_auth =='N')
	{
		if (!strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHCLNMAP_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_auth =='Y')
	{
		if (strcmp(chr_l_status,STATUS_AUTH))
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHCLNMAP_NOT_AUTHORIZED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='N')
	{
		if (!strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHCLNMAP_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (p_del =='Y')
	{
		if (strcmp(chr_l_status,STATUS_DEL_UAUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,ERR_PARTY_EXCHCLNMAP_MARKED_DEL,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
			APL_GOBACK_FAIL
			int_error_flag = APL_FAILURE;
		}
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	else
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Success in MT_Chk_PtyExchClnMapVal. Getting out\n",NULL,NULL);
		}
		return(APL_SUCCESS);
	}
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Failed in MT_Chk_PtyExchClnMapVal. Going out\n",NULL,NULL);
		}
		return(APL_FAILURE);
	}
}

