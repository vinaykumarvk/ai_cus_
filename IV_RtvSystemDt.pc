


   
   
   
   
   
   
   
   
   
   
   
   




#include "CR_Common.h"
#include <time.h>

#define	S_TIME_LEN	9
#define	S_DATE_LENGTH	11
	
EXEC SQL INCLUDE sqlca;



int IV_Rtv_SysDate(char *chr_p_sys_date, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

	struct sqlca  sqlca;
	char     	  chr_l_sys_date[S_DATE_LENGTH];
	char     	  h_sys_dt[S_DATE_LENGTH];
	char			  chr_l_yyyy[5];
	char			  chr_l_mm[3];
	char			  chr_l_dd[3];
	char			  int_l_temp[APL_DATE_LEN];
	char			  *a;	

	EXEC SQL END DECLARE SECTION;

	a = (char *)calloc(15,sizeof(char));

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE	:my_ctx_local;
	#endif
	
	EXEC SQL SELECT TO_CHAR(SYS_DATE,'YYYY/MM/DD') 
	INTO :chr_l_sys_date 
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	strcpy(int_l_temp,strtok_r(chr_l_sys_date,"/",&a));
	strcpy(chr_l_yyyy,int_l_temp);

	strcpy(int_l_temp,strtok_r(NULL,"/",&a));
	strcpy(chr_l_mm,int_l_temp);

	strcpy(int_l_temp,strtok_r(NULL,"/",&a));
	strcpy(chr_l_dd,int_l_temp);
	
	strcpy(chr_p_sys_date,chr_l_yyyy);
	strcat(chr_p_sys_date,chr_l_mm);
	strcat(chr_p_sys_date,chr_l_dd);
	
	printf("the returned chr_date is %s\n",chr_p_sys_date);
	
	
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
		return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
		return (APL_FAILURE);
	}
}





int IV_Rtv_NewSysDate(char *chr_p_sys_date, int p_int_add,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

	struct sqlca  sqlca;
	char     	  chr_l_sys_date[S_DATE_LENGTH];
	char     	  h_sys_dt[S_DATE_LENGTH];
	char			  chr_l_yyyy[5];
	char			  chr_l_mm[3];
	char			  chr_l_dd[3];
	char			  int_l_temp[APL_DATE_LEN];
	char			  *a;	

	EXEC SQL END DECLARE SECTION;

	a = (char *)calloc(15,sizeof(char));

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE	:my_ctx_local;
	#endif
	
	EXEC SQL SELECT TO_CHAR(SYS_DATE + :p_int_add,'YYYY/MM/DD') 
	INTO :chr_l_sys_date 
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	strcpy(int_l_temp,strtok_r(chr_l_sys_date,"/",&a));
	strcpy(chr_l_yyyy,int_l_temp);

	strcpy(int_l_temp,strtok_r(NULL,"/",&a));
	strcpy(chr_l_mm,int_l_temp);

	strcpy(int_l_temp,strtok_r(NULL,"/",&a));
	strcpy(chr_l_dd,int_l_temp);
	
	strcpy(chr_p_sys_date,chr_l_yyyy);
	strcat(chr_p_sys_date,chr_l_mm);
	strcat(chr_p_sys_date,chr_l_dd);
	
	printf("the returned chr_date is %s\n",chr_p_sys_date);
	
	
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
		return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
		return (APL_FAILURE);
	}
}
