/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Master Maintenance
 *
 * File Name           :      MT_DBProcStaticData.pc
 *
 * Description         :      This file contains functions for updating
 *                            Master Details.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description     				  RFS No.
 * ---------   --------  ------------     -------------  			   ---------
 * 26/12/2005   1.0       Sonali        New file          				HDFCMT_016
 * 29/12/2005   1.1       Sonali        Changed table name         	HDFCMT_016
 * 05/05/2011   1.2       Ankit Khanna  Updating IV_DATA_GRP for static data   ISKB_4828
 *********************************************************************/


#define PURE_C_SOURCE

#include "CO_HostStructdef.h" 

EXEC SQL INCLUDE SQLCA.H;

int MT_ModStaticData(CO_STATIC_DATA_STRUCT_H *p_co_static_data_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/*	Variable Declarations */
	int int_error_flag = APL_SUCCESS;

	char  *l_key_codes[5];
	char  *l_key_values[5];	
	char  chr_l_table_name[50];

	char  chr_l_rec_iexist,chr_l_rec_ideleted,chr_l_rec_iauthorized;

	int int_retval = APL_SUCCESS;
	int int_l_rowcnt=0;

	CO_STATIC_DATA_STRUCT_I *l_co_static_data_struct_i;
	l_co_static_data_struct_i=(CO_STATIC_DATA_STRUCT_I*)calloc(1,sizeof(CO_STATIC_DATA_STRUCT_I));
  	APL_MALLOC_FAIL(l_co_static_data_struct_i)
	/* Debug statements */

	APL_FUNCTION_ENTER(APL_OUT_FILE)

	/*	Mandatory Data Missing Checks	- Generic */

	l_key_codes[0]="CODE_IDENT";
	l_key_codes[1]="CODE_VALUE";
	l_key_codes[2]="CODE_DESC";
	l_key_codes[3]="COUNTRY_CODE";
	l_key_codes[4]=APL_NULL_STRING;
	
	l_key_values[0]=p_co_static_data_struct_h->h_code_ident;
	l_key_values[1]=p_co_static_data_struct_h->h_code_value;
	l_key_values[2]=p_co_static_data_struct_h->h_code_desc;
	l_key_values[3]=p_co_static_data_struct_h->h_country_code;
	l_key_values[4]=APL_NULL_STRING;

	int_retval = CR_Chk_AllMandData( l_key_codes,
                                 l_key_values,
                                 4,
                                 l_debug_info_ptr);


	if ((int_retval !=APL_SUCCESS) || (int_error_flag == APL_FAILURE))
      APL_GOBACK_FAIL



 if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
 {
 	APL_GOBACK_FAIL
 }


	if (!strlen(p_co_static_data_struct_h->h_code_ident)) l_co_static_data_struct_i->i_code_ident =-1;
	else l_co_static_data_struct_i->i_code_ident =0;
	if (!strlen(p_co_static_data_struct_h->h_code_value)) l_co_static_data_struct_i->i_code_value =-1 ;
	else l_co_static_data_struct_i->i_code_value =0;
	if (!strlen(p_co_static_data_struct_h->h_code_desc)) l_co_static_data_struct_i->i_code_desc =-1;
	else l_co_static_data_struct_i->i_code_desc =0;
	if (!strlen(p_co_static_data_struct_h->h_country_code)) l_co_static_data_struct_i->i_country_code =-1;
	else l_co_static_data_struct_i->i_country_code =0;



 if(!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_INPUT))
	{
		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered input mode ... \n",NULL,p_intl_env_data_struct_h);
 	}

		 EXEC SQL INSERT INTO PRO_SGENSTAT VALUES (:p_co_static_data_struct_h:l_co_static_data_struct_i);
		

		IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		/* Added by ankit khanna on 05 May 2011 for kotak issue ISKB_4828 - Start */

		if(strcmp(p_co_static_data_struct_h->h_code_ident,"INSTR_SUB_TYPE")==0)
			{
				printf("Inserting static data into IV_DATA_GRP\n");
				printf("Parameter code:|%s|\n",p_co_static_data_struct_h->h_code_ident);
				printf("Group PRM Code:|ALL|\n");
				printf("Group MEM val:|%s|\n",p_co_static_data_struct_h->h_code_value);

	  			EXEC SQL INSERT INTO IV_DATA_GRP VALUES (:p_co_static_data_struct_h->h_code_ident:l_co_static_data_struct_i->i_code_ident,'ALL',:p_co_static_data_struct_h->h_code_value:l_co_static_data_struct_i->i_code_value);

				IS_ANY_ORA_ERROR
				printf("Succesfully inserted static data into IV_DATA_GRP");

			}
		/* Added by ankit khanna on 05 May 2011 for kotak issue ISKB_4828 - End */

	}


	/*Author : Kapil 
          Subject :	For Modify Mode Delete Mode : Start
          Modifies the Description of the Code Identifier
	*/
	if(!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_DELETE))
        {
        
				APL_IF_DEBUG
                {
                        CO_ProcMonitor(APL_OUT_FILE, "Entered input mode ... \n",NULL,p_intl_env_data_struct_h);
                }

	EXEC SQL 
	DELETE FROM  PRO_SGENSTAT  
        WHERE
        MAP_TYPE =:p_co_static_data_struct_h->h_code_ident
        AND
        MAP_VAL =:p_co_static_data_struct_h->h_code_value 
	AND
	NATION_CODE =:p_co_static_data_struct_h->h_country_code ; 
        EXEC SQL COMMIT ;

               // IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	IS_ANY_ORA_ERROR	
        }


	/*Added By Kapil For Modify Mode Delete Mode : End*/


 APL_GOBACK_SUCCESS

 RETURN_SUCCESS :
	{
	 	APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_co_static_data_struct_i);
		return(APL_SUCCESS);
	}
 RETURN_FAILURE :
	{
		APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_co_static_data_struct_i);
		return(APL_FAILURE);
	}

} 
