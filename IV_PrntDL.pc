


#include "IV_Control_A.h"
#include<string.h>
EXEC SQL INCLUDE SQLCA.H;


int IV_Proc_PrnTran(	FILE *bill,
				  	FILE *fl_userlog,	
					char *chr_p_billdt,
					char *chr_p_client,
					IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,
					char p_mastsub,
					double *p_tottran,
					int *int_currpos,
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{


struct sqlca sqlca;
char *y = NULL,*v = NULL,*a = NULL,*b = NULL;
double TranTotCharge =0;
IV_SERV_MAST_STRUCT l_ivservmast_struct;
IV_CLIENT_SERV_BASIS_STRUCT l_iv_client_serv_basis_structb;
IV_SERVICE_CHRG_STRUCT l_iv_service_chrg_struct;
PRO_SGENSTAT_STRUCT l_pro_sgenstat_struct;
SYS_IVCONTROLPARAM_STRUCT     l_sys_ivcntl_param_struct;
int int_retstat=0;
int int_totrades=0;
int int_counter=0;
int int_headerlen = 8;
int i=0;
int int_ret=0;
int int_newlen=0;
int int_retbsrvstat =0;
int int_retval=0;
int int_l_retstat =0;

double l_minimumfee = 0.0;
double l_nil_fees = 0.0;
double l_maximum_fee = 0.0;
double l_ae_rate   = 0.0;
double dbl_l_convcomm = 0.0,l_convnil_fees = 0.0,l_convminimumfee = 0.0;
double l_convmaximum_feeabs = 0.0,dbl_l_convtrantotcharge = 0.0,l_convcmamount = 0.0;

int int_chargeret = 0;
int int_trancommret = 0;
int int_sumtrancommret =0;
int int_minfeeret =0;
int int_nilfeeret =0;
int int_maxfeeret =0;
int int_trantotchargeret =0;

char chr_l_buf[BUFFER_LEN];

char chr_f_charge[20], chr_f_trancomm[20], chr_f_sumtrancomm[20],chr_f_trancomm1[20];
char chr_f_minfee[20], chr_f_nilfee[20], chr_f_maxfee[20], chr_f_trantotcharge[50];

char chr_l_tranamtstr[30], chr_l_totchgstr[50]; 
double roundedamount = 0.0;
double 	l_roundedamount = 0.0,l_cumroundedamount = 0.0;
int 		int_rndfeeret =0;
char 		chr_l_cod_roundedamt[22] = APL_NULL_STRING;

int 	int_l_pagelength = 0;
short int_l_condexists = 0;
int   int_l_charge_len      =  0;	 
int   int_l_position        =  0; 
int   int_l_posdiff         =  0; 
char  chr_f_compensate[15]  =  APL_NULL_STRING;  
int   int_l_qty_len         =  0; 
int   int_l_comm_len        =  0; 


EXEC SQL BEGIN DECLARE SECTION;

	
 
	char chr_h_param_code[121];
	char chr_h_param_val[121];
   char *chr_h_param_code_temp;
   char *chr_h_param_val_temp;
	int     h_chargequantity=0;
	double  h_cmamount=0.0;
	double maximum_feeabs = 0.0;
	char chr_h_mstclient[APL_CLIENT_LENGTH];
	char h_dl_client[APL_CLIENT_LENGTH];
	char chr_t_param_code[121];
	char chr_t_param_val[121];
	double  dbl_comm=0.0;
	int     int_tottrades=0;
	double  h_nil_fees_adj;
	double  h_minimumfee_adj;
	char    h_ccy[APL_CCYCODE_LEN];
	char chr_h_chargebasis[30];
	char chr_h_codedesc[31];
	int     int_h_servcode;
	int int_t_servcode =0;
	char h_apl_frm_date[9];  /* Added by monica for kotak ISKB_1737 */

	
	short i_parameter_cd;
	short i_proc_data_val;
	short i_chargeqty;
	short i_cmamt;
	short i_mstaccount;
	short i_dl_client;
	short i_paramval1;
	short int_i_nilfeeadj;
	short int_i_minfeeadj;
	short i_ccy;
	short i_chargebasis;
	short i_servcode;
	short i_codedesc;
	short i_apl_frm_date = 0;  /* Added by monica for kotak ISKB_1737 */

	
EXEC SQL VAR l_ivservmast_struct.service_det IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.b_ccycd IS STRING;
EXEC SQL VAR l_pro_sgenstat_struct.map_desc IS STRING;
EXEC SQL VAR chr_h_param_code IS STRING;
EXEC SQL VAR chr_h_param_val IS STRING;
EXEC SQL VAR chr_t_param_code IS STRING;
EXEC SQL VAR chr_t_param_val IS STRING;
EXEC SQL VAR h_ccy IS STRING;
EXEC SQL VAR chr_h_mstclient IS STRING;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR chr_h_codedesc IS STRING;
EXEC SQL VAR chr_h_chargebasis IS STRING;
EXEC SQL VAR h_apl_frm_date IS STRING;  /* Added by monica for kotak ISKB_1737 */



EXEC SQL END DECLARE SECTION;





double  l_dealcode = TXNFEE;
double l_latedealcode = LATETXNFEE;
double  l_booktrfr_code = IV_BOOKTRF_FEE;
double l_freecacode = FREECAFEE;
double l_vpcacode = VPCAFEE;
double l_trnarnfee = TURNAROUNDTXNFEE;
double l_settalgefee = SETTALGEFEE;
double dbl_l_bogmsgfee  = BOG_MSG_FEE;
char chr_s_chargeqty[13],chr_s_tmpchargeqty[13];
char chr_s_chargeqty1[13];

 APL_IF_DEBUG
 {
	CO_ProcMonitor(APL_OUT_FILE,"entering IV_Proc_PrnTran\n",NULL,NULL);
 }



chr_h_param_code_temp = (char *)calloc(121,sizeof(char));
APL_MALLOC_FAIL(chr_h_param_code_temp);
chr_h_param_val_temp = (char *)calloc(121,sizeof(char));
APL_MALLOC_FAIL(chr_h_param_val_temp);

/* Added by monica for kotak ISKB_1737 starts */
	EXEC SQL SELECT to_char(MAX(to_date(apl_frm_date,'MM/YYYY')),'MON-YYYY') into :h_apl_frm_date:i_apl_frm_date FROM IV_CLIENT_SERV_BASIS,SYS_IVCONTROLPARAM 
	WHERE CLIENT = :chr_p_client AND service_cd = '2' AND  to_date(apl_frm_date,'MM/YYYY') <= B_UPTO_DATE;
	IS_ANY_ORA_ERROR
	printf("\n applicable from date |%s| \n",h_apl_frm_date);
	/* Added by monica for kotak ISKB_1737 ends */
   
   if ( APL_FAILURE == CO_Chk_CntryEnabled( "BILL_PRINTING",
                                          "PAGE_LENGTH",
                                          &int_l_condexists,
                                          l_debug_info_ptr) )
   {
      APL_GOBACK_FAIL
   }

   if (int_l_condexists)
      int_l_pagelength = 70;
   else  int_l_pagelength = 58;

if(APL_FAILURE ==IV_Rtv_IVSRVBasis(chr_p_client,2,h_apl_frm_date,&l_iv_client_serv_basis_structb,&int_retbsrvstat,l_debug_info_ptr))  /* Added apl_frm_date by Monica for KOTAK ISKB_1737 */
{
	if (int_retbsrvstat == IV_CRITCAL_ERROR_IND)
	{
		fprintf(fl_userlog,"Db l_debuglist\n");
		APL_GOBACK_FAIL;
	}
	
}


if ((*int_currpos) + int_headerlen > int_l_pagelength )
{
	fprintf(bill,"\f\n");
	(*int_currpos) =1;
	if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
		APL_GOBACK_FAIL;
	}
}

else
{


	if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
		APL_GOBACK_FAIL;

	}
}

EXEC SQL DECLARE curtran CURSOR FOR
SELECT rtrim(PARAMETER_CD),rtrim(PROC_DATA_VAL),CHRG_QUANT,COMM_AMT,SERVICE_CD
FROM IV_DEAL
WHERE CLIENT =:chr_p_client AND DATEOF_BILLING = :chr_p_billdt
AND CONS_FLAG = :p_mastsub 
AND SERVICE_CD IN(:l_dealcode,:l_latedealcode,:l_booktrfr_code,
					  :l_trnarnfee,:l_freecacode,:l_vpcacode,:l_settalgefee,:dbl_l_bogmsgfee);

EXEC SQL OPEN curtran;
IS_ANY_ORA_ERROR

if (sqlca.sqlcode <0)
{
	fprintf(fl_userlog,"Db Error(BTRANSAC)\n");
	APL_GOBACK_FAIL
}

strcpy(chr_t_param_code,APL_NULL_STRING);
strcpy(chr_t_param_val,APL_NULL_STRING);
int_counter = 0;
memset(&l_sys_ivcntl_param_struct, NULL, sizeof(SYS_IVCONTROLPARAM_STRUCT));
if (APL_FAILURE == IV_Rtv_IVCNTLPARAM(&l_sys_ivcntl_param_struct,
												&int_l_retstat,
												l_debug_info_ptr))
{
	if (int_l_retstat == IV_NO_DATA_FOUND_ERR)
	{
		fprintf(fl_userlog,"Billing Control Parameters Have Not Been Set Up\n");
		CO_InsertErr(l_debug_info_ptr,
							ERR_BILLCNTRL_PARAM_NOTFND,
							APL_NULL_STRING,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__);
		APL_GOBACK_FAIL
	}
}
int_l_retstat = IV_SUCCESS;
l_ae_rate = 0.0;

if (APL_FAILURE == ConvToFxFn_GR(l_iv_clt_setup_struct.b_ccycd,
									  l_iv_clt_setup_struct.fees_ccy,
									  g_mt_commonsys_params_struct_h.dom_ccy,
									  chr_p_billdt, &l_ae_rate,&int_l_retstat,l_debug_info_ptr) )
{
		APL_GOBACK_FAIL
}
for(;;)
{

	strcpy(chr_h_param_code_temp,APL_NULL_STRING);
	strcpy(chr_h_param_val_temp,APL_NULL_STRING);
	EXEC SQL FETCH curtran INTO
   :chr_h_param_code:i_parameter_cd,:chr_h_param_val:i_proc_data_val,
	:h_chargequantity:i_chargeqty,:h_cmamount:i_cmamt,:int_h_servcode:i_servcode;
	
	if (sqlca.sqlcode == 1403) break;

	int_counter++;	
	strcpy(chr_h_param_code_temp,chr_h_param_code);
	strcpy(chr_h_param_val_temp,chr_h_param_val);	

        y = strtok_r(chr_h_param_code_temp,";",&a);
        v = strtok_r(chr_h_param_val_temp,";",&b);
			int_l_charge_len = 0;						
        if (strcmp(chr_t_param_code,chr_h_param_code) || strcmp(chr_t_param_val,chr_h_param_val) || int_t_servcode != int_h_servcode)
        {
				if (int_h_servcode == TXNFEE)
				{
					fprintf(bill,"INSTRUCTION    ");
					(*int_currpos)++;
				}				
			
				
				if (int_h_servcode == IV_BOOKTRF_FEE)
				{
					fprintf(bill,"BOOK TRANSFERS ");
					(*int_currpos)++;
				}				

				if (int_h_servcode ==  LATETXNFEE)
				{
					if (APL_FAILURE == IV_Rtv_IVSRVCHRGDel(LATETXNFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
					{
						if (int_retstat == IV_CRITCAL_ERROR_IND)
						{
							fprintf(fl_userlog,"DB ERROR(BSERVICES)\n");
							APL_GOBACK_FAIL
						}
						else if (int_retstat == IV_NO_DATA_FOUND_ERR ) 
								  
						{
							fprintf(fl_userlog,"SERVICES NOT DEFINED\n");	
							CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,
												APL_NULL_STRING,APL_NULL_STRING,
												APL_NULL_STRING,
												__LINE__,__FILE__);
							APL_GOBACK_FAIL;

						}
					}
					fprintf(bill,"%-17s",l_ivservmast_struct.service_det);	
					int_l_charge_len=strlen(l_ivservmast_struct.service_det);			
					(*int_currpos)++;
				}

				memset(&l_ivservmast_struct,NULL, sizeof(IV_SERV_MAST_STRUCT));

				if (int_h_servcode ==  TURNAROUNDTXNFEE)
				{
					if (APL_FAILURE == IV_Rtv_IVSRVCHRGDel(TURNAROUNDTXNFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
				{
						if (int_retstat == IV_CRITCAL_ERROR_IND)
						{
							fprintf(fl_userlog,"DB ERROR(BSERVICES)\n");
							APL_GOBACK_FAIL
						}
						else if (int_retstat == IV_NO_DATA_FOUND_ERR ) 
								  
						{
							fprintf(fl_userlog,"SERVICES NOT DEFINED\n");	
							CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,
												APL_NULL_STRING,APL_NULL_STRING,
												APL_NULL_STRING,
												__LINE__,__FILE__);
							APL_GOBACK_FAIL;

						}
					}
					fprintf(bill,"%-17s",l_ivservmast_struct.service_det);
					int_l_charge_len=strlen(l_ivservmast_struct.service_det);		
					
				}


		if (int_h_servcode == FREECAFEE) 
		{
			if (APL_FAILURE == IV_Rtv_IVSRVCHRGDel(FREECAFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
			{
				if (int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fl_userlog,"DB ERROR(BSERVICES)\n"); 
					APL_GOBACK_FAIL
				}
				else if(int_retstat == IV_NO_DATA_FOUND_ERR) 

				{
					fprintf(fl_userlog,"SERVICES NOT DEFINED\n");	
					CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,APL_NULL_STRING,
										APL_NULL_STRING,APL_NULL_STRING,
										__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}
			}
			EXEC SQL VAR l_ivservmast_struct.service_det IS STRING;
			fprintf(bill,"%-17s",l_ivservmast_struct.service_det);
			int_l_charge_len=strlen(l_ivservmast_struct.service_det);		
	
		}		
		if (int_h_servcode == VPCAFEE ) 
		{
			if (APL_FAILURE == IV_Rtv_IVSRVCHRGDel(VPCAFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
			{
				if (int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fl_userlog,"DB ERROR(BSERVICES\n");
					APL_GOBACK_FAIL
				}
				else if(int_retstat == IV_NO_DATA_FOUND_ERR ) 
				{
					fprintf(fl_userlog,"SERVICES NOT DEFINED\n");	
					CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,APL_NULL_STRING,
										APL_NULL_STRING,APL_NULL_STRING,
										__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}
			}
			EXEC SQL VAR l_ivservmast_struct.service_det IS STRING;
			fprintf(bill,"%-17s",l_ivservmast_struct.service_det);
			int_l_charge_len=strlen(l_ivservmast_struct.service_det);		
			 
		}	
		
		if (int_h_servcode == SETTALGEFEE ) 
		{
			if (APL_FAILURE == IV_Rtv_IVSRVCHRGDel(SETTALGEFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
			{
				if (int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fl_userlog,"DB ERROR(BSERVICES\n");
					APL_GOBACK_FAIL
				}
				else if(int_retstat == IV_NO_DATA_FOUND_ERR ) 
				{
					fprintf(fl_userlog,"SERVICES NOT DEFINED\n");	
					CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,APL_NULL_STRING,
										APL_NULL_STRING,APL_NULL_STRING,
										__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}
			}
			EXEC SQL VAR l_ivservmast_struct.service_det IS STRING;
			fprintf(bill,"%-17s",l_ivservmast_struct.service_det);
			int_l_charge_len=strlen(l_ivservmast_struct.service_det);		
			 
		}	
		

		if (int_h_servcode == BOG_MSG_FEE ) 
		{
			if (APL_FAILURE == IV_Rtv_IVSRVCHRGDel(BOG_MSG_FEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
			{
				if (int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fl_userlog,"DB ERROR(BSERVICES\n");
					APL_GOBACK_FAIL
				}
				else if(int_retstat == IV_NO_DATA_FOUND_ERR ) 
				{
					fprintf(fl_userlog,"SERVICES NOT DEFINED\n");	
					CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,APL_NULL_STRING,
										APL_NULL_STRING,APL_NULL_STRING,
										__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}
			}
			EXEC SQL VAR l_ivservmast_struct.service_det IS STRING;
			fprintf(bill,"%-15s",l_ivservmast_struct.service_det);
			int_l_charge_len=strlen(l_ivservmast_struct.service_det);		
			 
		}	

	
		
			
	

      int_l_position  =  16; 				
				
		strcpy(chr_t_param_code,chr_h_param_code);
		strcpy(chr_t_param_val,chr_h_param_val);
		while( y != NULL || v !=NULL)
		{
			if ((!strcmp(y,APL_NULL_STRING)) && (!strcmp(v,APL_NULL_STRING)))
				break;

			if (!strcmp(y,"LOC"))
         {
				int_l_position  =  21;   
         	
				if(int_l_charge_len < 15)      
            {
               fprintf(bill,"%s ",v);
            }
            else
            {
               fprintf(bill,"\n%15s%s "," ",v);
               int_l_charge_len=0;
            }													

				
			 	
			
          }
         if (!strcmp(y,"PRODUCT"))
         {
	

				
				if(int_l_charge_len >= 20)     
            {
               fprintf(bill,"\n");
               fprintf(bill,"%20s"," ");
               int_l_charge_len=0;
            }
            else if(int_l_position < 21 )
            {
               int_l_posdiff = 21 - int_l_position;     
               strcpy(chr_f_compensate,"%");
               strcat(chr_f_compensate,ltoa(int_l_posdiff));
               strcat(chr_f_compensate,"s");
               fprintf(bill,chr_f_compensate," ");  
            }
            int_l_position  =  29;   	
				if ( !strcmp(v, "1") )
				{
					fprintf(bill, "    SHS ");
				}
				else if ( !strcmp(v, "2") )
				{
					fprintf(bill, "    BON ");
				}
				else if ( !strcmp(v, "3") )
				{
					fprintf(bill, "    MMI ");
				}
				else
					fprintf(bill,"%7s ",v);


				


			}

		 	if (!strcmp(y,"DEAL_CD"))
         {
				
				if(int_l_position < 29 )						
            {
               if(int_l_charge_len > 0)
                  int_l_posdiff = 29 - (int_l_charge_len + 1);     
               else
                  int_l_posdiff = 29 - int_l_position;     
               strcpy(chr_f_compensate,"%");
               strcat(chr_f_compensate,ltoa(int_l_posdiff));
               strcat(chr_f_compensate,"s");
               fprintf(bill,chr_f_compensate," ");  
            }
            int_l_position  =  35;   	

				

				if ( !strcmp(v, "1") )
				{
					fprintf(bill,"   DELV_FREE ");
				}
				else if ( !strcmp(v, "2") )
				{
					fprintf(bill,"   RECEIVE_FREE ");
				}
				else if ( !strcmp(v, "3") )
				{
					fprintf(bill,"  DVP ");
				}
				else if ( !strcmp(v, "4") )
				{
					fprintf(bill,"  RVP ");
				}
				else if ( !strcmp(v, "5") )
				{
					fprintf(bill,"   CD ");
				}
				else if ( !strcmp(v, "6") )
				{
					fprintf(bill,"   CR ");
				}
				else if ( !strcmp(v, "7") )
				{
					fprintf(bill,"  DCD ");
				}
				else if ( !strcmp(v, "8") )
				{
					fprintf(bill,"  RCR ");
				}
				else
					fprintf(bill,"%5s ",v);

			
				


          }

			 if (!strcmp(y,"DEALTYPE"))
          {
					if(int_l_position < 35 )			
               {
                  if(int_l_charge_len > 0)
                     int_l_posdiff = 35 - (int_l_charge_len + 1);     
                  else
                     int_l_posdiff = 35 - int_l_position;     
                  strcpy(chr_f_compensate,"%");
                  strcat(chr_f_compensate,ltoa(int_l_posdiff));
                  strcat(chr_f_compensate,"s");
                  fprintf(bill,chr_f_compensate," ");
               }
               int_l_position  =  44;   		
           		
   			if(APL_FAILURE == CO_PadString(v,'R',8," ",l_debug_info_ptr))
                  APL_GOBACK_FAIL
					if(strcmp(v,"27      ")==0)  
                                                fprintf(bill,"INTRA    ");
                                        else
						fprintf(bill,"%s ",v);

					


          } 
 if(a == (char *)NULL)
		strcpy(y, APL_NULL_STRING);
	else	
			y = strtok_r(NULL,";",&a);

 if(b == (char *)NULL)
		strcpy(v, APL_NULL_STRING);
	else	
   		v = strtok_r(NULL,";",&b);

		}
		
		if (int_h_servcode == FREECAFEE)
		{
		
					
		}
	} 
	
	memset(chr_s_chargeqty,'\0',13);
	memset(chr_s_chargeqty1,'\0',13);
	memset(chr_s_tmpchargeqty,'\0',13);
 	sprintf(chr_s_tmpchargeqty,"%d",h_chargequantity);
	
 	
   CO_Trim(chr_s_tmpchargeqty,' ','L',chr_s_chargeqty1,l_debug_info_ptr);
   if(APL_FAILURE == CO_PadString(chr_s_chargeqty1,'L',5," ",l_debug_info_ptr))
                  APL_GOBACK_FAIL
	if(int_l_position < 44 )				
   {
   	if(int_l_charge_len > 0)
      	int_l_posdiff = 44 - (int_l_charge_len + 1);     
      else
      	int_l_posdiff = 44 - int_l_position;     
      strcpy(chr_f_compensate,"%");
      strcat(chr_f_compensate,ltoa(int_l_posdiff));
      strcat(chr_f_compensate,"s");
      fprintf(bill,chr_f_compensate," ");
   }
   int_l_position  =  52;   
   fprintf(bill,"%s ",chr_s_chargeqty1);
   int_l_qty_len = strlen(chr_s_chargeqty1);				

	l_convcmamount = (h_cmamount * l_ae_rate);
	int_trancommret= IV_Proc_Round(&l_convcmamount,l_iv_clt_setup_struct.fees_ccy,chr_f_trancomm,l_debug_info_ptr);
	if (int_trancommret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_tranamtstr, APL_NULL_CHAR, 30);

		sscanf(chr_f_trancomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_tranamtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy,l_debug_info_ptr);
		strcpy(chr_f_trancomm, chr_l_tranamtstr + 10); 

		
   	CO_Trim(chr_f_trancomm,' ','L',chr_f_trancomm1,l_debug_info_ptr);
		int_l_comm_len = strlen(chr_f_trancomm1);					
      if( (int_l_qty_len + int_l_comm_len ) > 24)
      {
         fprintf(bill,"\n%48s"," ");
         int_l_posdiff = 20;
      }
      else
      {
         int_l_posdiff = 24 - int_l_qty_len;
      }														
      if(APL_FAILURE == CO_PadString(chr_f_trancomm1,'L',int_l_posdiff," ",l_debug_info_ptr))
      	APL_GOBACK_FAIL
		fprintf(bill,"%s\n",chr_f_trancomm1);
		(*int_currpos)++;
		

				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}
	}
	else
		APL_GOBACK_FAIL
	
	dbl_comm+=h_cmamount;
	if (int_h_servcode != LATETXNFEE)
			int_tottrades+=h_chargequantity;
					
	}
	if (int_counter == 0) fprintf(bill,"\n%9s NO TRANSACTION CHARGES FOR THE ACCOUNT %s\n\n"," ",chr_p_client);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;

	

		if ((*int_currpos) + 1 > int_l_pagelength )
		{
			fprintf(bill,"\f\n");
			(*int_currpos) =1;

			if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
			{
				fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
				APL_GOBACK_FAIL;

			}
		}

	for(i=0;i<67;fprintf(bill,"-"),i++);
	fprintf(bill,"\n");
	(*int_currpos)++;
	

				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}

	fprintf(bill,"TOTAL NO. OF TRADES");
	fprintf(bill,"%42s%6d\n"," ",int_tottrades); 
	(*int_currpos)++;



				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}
fprintf(bill,"COMMISSION");
   dbl_l_convcomm = (dbl_comm * l_ae_rate);

int_sumtrancommret  = IV_Proc_Round(&dbl_l_convcomm,l_iv_clt_setup_struct.fees_ccy,chr_f_sumtrancomm,l_debug_info_ptr);
if (int_sumtrancommret == 1)
{
	

	roundedamount = 0.0;
	memset(chr_l_tranamtstr, APL_NULL_CHAR, 30);

	sscanf(chr_f_sumtrancomm, "%lf", &roundedamount);
	
	CO_Rtv_FormatAmtCcy(roundedamount, chr_l_tranamtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy,l_debug_info_ptr);
	strcpy(chr_f_sumtrancomm, chr_l_tranamtstr + 10); 

	
	if ( roundedamount > 0)
	   fprintf(bill,"%40s%s\n"," ",chr_f_sumtrancomm);
	else
	   fprintf(bill,"%43s%s\n"," ",chr_f_sumtrancomm);

	(*int_currpos)++;
	

				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}
}
else
{
	APL_GOBACK_FAIL
}


if (APL_FAILURE == IV_Rtv_IVSRVCHRG(chr_p_billdt,chr_p_client,p_mastsub,2,&l_iv_service_chrg_struct,&int_retstat,l_debug_info_ptr))
{
	if (int_retstat == IV_CRITCAL_ERROR_IND)
	{
			APL_GOBACK_FAIL
	}
	else if (int_retstat == IV_NO_DATA_FOUND_ERR)
	{
		l_iv_service_chrg_struct.nil_fees_adj =0;
		l_iv_service_chrg_struct.minimumfee_adj =0;
		l_iv_service_chrg_struct.maximum_fee_adj =0;
		
	}
}

l_minimumfee = l_iv_service_chrg_struct.minimumfee_adj;
l_nil_fees = l_iv_service_chrg_struct.nil_fees_adj;
l_maximum_fee = l_iv_service_chrg_struct.maximum_fee_adj;

	

	l_roundedamount 	= 	l_iv_service_chrg_struct.minimumfee_adj + 
							l_iv_service_chrg_struct.nil_fees_adj +
							l_iv_service_chrg_struct.maximum_fee_adj +
							l_iv_service_chrg_struct.comm_amt;

	
	int_rndfeeret  = IV_Proc_Round(&l_roundedamount,
								l_iv_clt_setup_struct.b_ccycd,
								chr_l_cod_roundedamt,
								l_debug_info_ptr);
	if (int_rndfeeret== 1)
	{
		l_roundedamount = 0.0;
		sscanf(chr_l_cod_roundedamt, "%lf", &l_roundedamount);
		l_cumroundedamount = (l_cumroundedamount + l_roundedamount);
	}
	else
	{
		APL_GOBACK_FAIL
	}
	


if (APL_FAILURE == IV_Rtv_IVSRVCHRG(chr_p_billdt,
												  chr_p_client,
												  p_mastsub,
												  IV_BOOKTRF_FEE,
												  &l_iv_service_chrg_struct,
												  &int_retstat,
												  l_debug_info_ptr))
{
	if (int_retstat == IV_CRITCAL_ERROR_IND)
	{
			APL_GOBACK_FAIL
	}
	else if (int_retstat == IV_NO_DATA_FOUND_ERR)
	{
		l_iv_service_chrg_struct.nil_fees_adj =0;
		l_iv_service_chrg_struct.minimumfee_adj =0;
		l_iv_service_chrg_struct.maximum_fee_adj =0;
		
	}
}
l_minimumfee =l_minimumfee +  l_iv_service_chrg_struct.minimumfee_adj;
l_nil_fees = l_nil_fees + l_iv_service_chrg_struct.nil_fees_adj;
l_maximum_fee = l_maximum_fee +  l_iv_service_chrg_struct.maximum_fee_adj;

	

	l_roundedamount 	= 	l_iv_service_chrg_struct.minimumfee_adj + 
							l_iv_service_chrg_struct.nil_fees_adj +
							l_iv_service_chrg_struct.maximum_fee_adj +
							l_iv_service_chrg_struct.comm_amt;

	
	int_rndfeeret  = IV_Proc_Round(&l_roundedamount,
								l_iv_clt_setup_struct.b_ccycd,
								chr_l_cod_roundedamt,
								l_debug_info_ptr);
	if (int_rndfeeret== 1)
	{
		l_roundedamount = 0.0;
		sscanf(chr_l_cod_roundedamt, "%lf", &l_roundedamount);
		l_cumroundedamount = (l_cumroundedamount + l_roundedamount);
	}
	else
	{
		APL_GOBACK_FAIL
	}
	

if (APL_FAILURE == IV_Rtv_IVSRVCHRG(chr_p_billdt,
												  chr_p_client,
												  p_mastsub,
													FREECAFEE,
													&l_iv_service_chrg_struct,
													&int_retstat,
													l_debug_info_ptr))
{
	if (int_retstat == IV_CRITCAL_ERROR_IND)
	{
			APL_GOBACK_FAIL
	}
	else if (int_retstat == IV_NO_DATA_FOUND_ERR)
	{
		l_iv_service_chrg_struct.nil_fees_adj =0;
		l_iv_service_chrg_struct.minimumfee_adj =0;
		l_iv_service_chrg_struct.maximum_fee_adj =0;
		
	}
}
l_minimumfee =l_minimumfee +  l_iv_service_chrg_struct.minimumfee_adj;
l_nil_fees = l_nil_fees + l_iv_service_chrg_struct.nil_fees_adj;
l_maximum_fee = l_maximum_fee +  l_iv_service_chrg_struct.maximum_fee_adj;

	

	l_roundedamount 	= 	l_iv_service_chrg_struct.minimumfee_adj + 
							l_iv_service_chrg_struct.nil_fees_adj +
							l_iv_service_chrg_struct.maximum_fee_adj +
							l_iv_service_chrg_struct.comm_amt;

	
	int_rndfeeret  = IV_Proc_Round(&l_roundedamount,
								l_iv_clt_setup_struct.b_ccycd,
								chr_l_cod_roundedamt,
								l_debug_info_ptr);
	if (int_rndfeeret== 1)
	{
		l_roundedamount = 0.0;
		sscanf(chr_l_cod_roundedamt, "%lf", &l_roundedamount);
		l_cumroundedamount = (l_cumroundedamount + l_roundedamount);
	}
	else
	{
		APL_GOBACK_FAIL
	}
	
if (APL_FAILURE == IV_Rtv_IVSRVCHRG(chr_p_billdt,
												  chr_p_client,
												  p_mastsub,
													VPCAFEE,
													&l_iv_service_chrg_struct,
													&int_retstat,
													l_debug_info_ptr))
{
	if (int_retstat == IV_CRITCAL_ERROR_IND)
	{
			APL_GOBACK_FAIL
	}
	else if (int_retstat == IV_NO_DATA_FOUND_ERR)
	{
		l_iv_service_chrg_struct.nil_fees_adj =0;
		l_iv_service_chrg_struct.minimumfee_adj =0;
		l_iv_service_chrg_struct.maximum_fee_adj =0;
		
	}
}
l_minimumfee = l_minimumfee +  l_iv_service_chrg_struct.minimumfee_adj;
l_nil_fees = l_nil_fees +  l_iv_service_chrg_struct.nil_fees_adj;
l_maximum_fee = l_maximum_fee + l_iv_service_chrg_struct.maximum_fee_adj;

	

	l_roundedamount 	= 	l_iv_service_chrg_struct.minimumfee_adj + 
							l_iv_service_chrg_struct.nil_fees_adj +
							l_iv_service_chrg_struct.maximum_fee_adj +
							l_iv_service_chrg_struct.comm_amt;

	
	int_rndfeeret  = IV_Proc_Round(&l_roundedamount,
								l_iv_clt_setup_struct.b_ccycd,
								chr_l_cod_roundedamt,
								l_debug_info_ptr);
	if (int_rndfeeret== 1)
	{
		l_roundedamount = 0.0;
		sscanf(chr_l_cod_roundedamt, "%lf", &l_roundedamount);
		l_cumroundedamount = (l_cumroundedamount + l_roundedamount);
	}
	else
	{
		APL_GOBACK_FAIL
	}
	

	

if (APL_FAILURE == IV_Rtv_IVSRVCHRG(chr_p_billdt,
												  chr_p_client,
												  p_mastsub,
													11,
													&l_iv_service_chrg_struct,
													&int_retstat,
													l_debug_info_ptr))
{
	if (int_retstat == IV_CRITCAL_ERROR_IND)
	{
			APL_GOBACK_FAIL
	}
	else if (int_retstat == IV_NO_DATA_FOUND_ERR)
	{
		l_iv_service_chrg_struct.nil_fees_adj =0;
		l_iv_service_chrg_struct.minimumfee_adj =0;
		l_iv_service_chrg_struct.maximum_fee_adj =0;
		
	}
}
l_minimumfee = l_minimumfee +  l_iv_service_chrg_struct.minimumfee_adj;
l_nil_fees = l_nil_fees +  l_iv_service_chrg_struct.nil_fees_adj;
l_maximum_fee = l_maximum_fee + l_iv_service_chrg_struct.maximum_fee_adj;

	

	l_roundedamount 	= 	l_iv_service_chrg_struct.minimumfee_adj + 
							l_iv_service_chrg_struct.nil_fees_adj +
							l_iv_service_chrg_struct.maximum_fee_adj +
							l_iv_service_chrg_struct.comm_amt;

	
	int_rndfeeret  = IV_Proc_Round(&l_roundedamount,
								l_iv_clt_setup_struct.b_ccycd,
								chr_l_cod_roundedamt,
								l_debug_info_ptr);
	if (int_rndfeeret== 1)
	{
		l_roundedamount = 0.0;
		sscanf(chr_l_cod_roundedamt, "%lf", &l_roundedamount);
		l_cumroundedamount = (l_cumroundedamount + l_roundedamount);
	}
	else
	{
		APL_GOBACK_FAIL
	}
	
if (APL_FAILURE == IV_Rtv_IVSRVCHRG(chr_p_billdt,
												  chr_p_client,
												  p_mastsub,
													SETTALGEFEE,
													&l_iv_service_chrg_struct,
													&int_retstat,
													l_debug_info_ptr))
{
	if (int_retstat == IV_CRITCAL_ERROR_IND)
	{
			APL_GOBACK_FAIL
	}
	else if (int_retstat == IV_NO_DATA_FOUND_ERR)
	{
		l_iv_service_chrg_struct.nil_fees_adj =0;
		l_iv_service_chrg_struct.minimumfee_adj =0;
		l_iv_service_chrg_struct.maximum_fee_adj =0;
		
	}
}
l_minimumfee = l_minimumfee +  l_iv_service_chrg_struct.minimumfee_adj;
l_nil_fees = l_nil_fees +  l_iv_service_chrg_struct.nil_fees_adj;
l_maximum_fee = l_maximum_fee + l_iv_service_chrg_struct.maximum_fee_adj;

	

	l_roundedamount 	= 	l_iv_service_chrg_struct.minimumfee_adj + 
							l_iv_service_chrg_struct.nil_fees_adj +
							l_iv_service_chrg_struct.maximum_fee_adj +
							l_iv_service_chrg_struct.comm_amt;

	
	int_rndfeeret  = IV_Proc_Round(&l_roundedamount,
								l_iv_clt_setup_struct.b_ccycd,
								chr_l_cod_roundedamt,
								l_debug_info_ptr);
	if (int_rndfeeret== 1)
	{
		l_roundedamount = 0.0;
		sscanf(chr_l_cod_roundedamt, "%lf", &l_roundedamount);
		l_cumroundedamount = (l_cumroundedamount + l_roundedamount);
	}
	else
	{
		APL_GOBACK_FAIL
	}
	

if (APL_FAILURE == IV_Rtv_IVSRVCHRG(chr_p_billdt,
												  chr_p_client,
												  p_mastsub,
													BOG_MSG_FEE,
													&l_iv_service_chrg_struct,
													&int_retstat,
													l_debug_info_ptr))
{
	if (int_retstat == IV_CRITCAL_ERROR_IND)
	{
			APL_GOBACK_FAIL
	}
	else if (int_retstat == IV_NO_DATA_FOUND_ERR)
	{
		l_iv_service_chrg_struct.nil_fees_adj =0;
		l_iv_service_chrg_struct.minimumfee_adj =0;
		l_iv_service_chrg_struct.maximum_fee_adj =0;
		
	}
}
l_minimumfee = l_minimumfee +  l_iv_service_chrg_struct.minimumfee_adj;
l_nil_fees = l_nil_fees +  l_iv_service_chrg_struct.nil_fees_adj;
l_maximum_fee = l_maximum_fee + l_iv_service_chrg_struct.maximum_fee_adj;

	

	l_roundedamount 	= 	l_iv_service_chrg_struct.minimumfee_adj + 
							l_iv_service_chrg_struct.nil_fees_adj +
							l_iv_service_chrg_struct.maximum_fee_adj +
							l_iv_service_chrg_struct.comm_amt;

	
	int_rndfeeret  = IV_Proc_Round(&l_roundedamount,
								l_iv_clt_setup_struct.b_ccycd,
								chr_l_cod_roundedamt,
								l_debug_info_ptr);
	if (int_rndfeeret== 1)
	{
		l_roundedamount = 0.0;
		sscanf(chr_l_cod_roundedamt, "%lf", &l_roundedamount);
		l_cumroundedamount = (l_cumroundedamount + l_roundedamount);
   }
   else
	{
		APL_GOBACK_FAIL
   }



fprintf(bill,"NIL FEE ADJUSTMENT");
l_convnil_fees = (l_nil_fees * l_ae_rate);
int_nilfeeret  = IV_Proc_Round(&l_convnil_fees,l_iv_clt_setup_struct.fees_ccy,chr_f_nilfee,l_debug_info_ptr);
if (int_nilfeeret== 1)
{
	

	roundedamount = 0.0;
	memset(chr_l_tranamtstr, APL_NULL_CHAR, 30);

	sscanf(chr_f_nilfee, "%lf", &roundedamount);
	
	CO_Rtv_FormatAmtCcy(roundedamount, chr_l_tranamtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy,l_debug_info_ptr);
	strcpy(chr_f_nilfee, chr_l_tranamtstr + 10); 

	
	fprintf(bill,"%35s%s\n"," ",chr_f_nilfee);
	(*int_currpos)++;

	

				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}
}
else 
	APL_GOBACK_FAIL;	

fprintf(bill,"MIN FEE ADJUSTMENT");
l_convminimumfee = (l_minimumfee * l_ae_rate);
int_minfeeret  = IV_Proc_Round(&l_convminimumfee,l_iv_clt_setup_struct.fees_ccy,chr_f_minfee,l_debug_info_ptr);
if (int_minfeeret== 1)
{
	

	roundedamount = 0.0;
	memset(chr_l_tranamtstr, APL_NULL_CHAR, 30);

	sscanf(chr_f_minfee, "%lf", &roundedamount);
	
	CO_Rtv_FormatAmtCcy(roundedamount, chr_l_tranamtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy,l_debug_info_ptr);
	strcpy(chr_f_minfee, chr_l_tranamtstr + 10); 

	
	fprintf(bill,"%35s%s\n"," ",chr_f_minfee);
	(*int_currpos)++;
	

				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}

}
else 
{
	APL_GOBACK_FAIL

}

fprintf(bill,"MAX FEE ADJUSTMENT");
maximum_feeabs 	= fabs(l_maximum_fee);
l_convmaximum_feeabs = (maximum_feeabs * l_ae_rate);
int_maxfeeret  = IV_Proc_Round(&l_convmaximum_feeabs,l_iv_clt_setup_struct.fees_ccy,chr_f_maxfee,l_debug_info_ptr);
if (int_maxfeeret== 1)
{
	

	roundedamount = 0.0;
	memset(chr_l_tranamtstr, APL_NULL_CHAR, 30);

	sscanf(chr_f_maxfee, "%lf", &roundedamount);
	
	CO_Rtv_FormatAmtCcy(roundedamount, chr_l_tranamtstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy,l_debug_info_ptr);
	strcpy(chr_f_maxfee, chr_l_tranamtstr + 10); 

	
	fprintf(bill,"%35s%s\n"," ",chr_f_maxfee);
	(*int_currpos)++;
	

				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}

}
else 
{
	APL_GOBACK_FAIL

}

TranTotCharge = TranTotCharge +dbl_comm + l_minimumfee + l_nil_fees + l_maximum_fee;



*p_tottran = l_cumroundedamount;

fprintf(bill,"TOTAL COMMISSION");
dbl_l_convtrantotcharge = (TranTotCharge * l_ae_rate);
int_trantotchargeret  = IV_Proc_Round(&dbl_l_convtrantotcharge,l_iv_clt_setup_struct.fees_ccy,chr_f_trantotcharge,l_debug_info_ptr);
if (int_trantotchargeret== 1)
{
	

	roundedamount = 0.0;
	memset(chr_l_totchgstr, APL_NULL_CHAR, 50);

	sscanf(chr_f_trantotcharge, "%lf", &roundedamount);
	
	CO_Rtv_FormatAmtCcy(roundedamount, chr_l_totchgstr, 'Y', 'Y', l_iv_clt_setup_struct.fees_ccy,l_debug_info_ptr);
	strcpy(chr_f_trantotcharge, chr_l_totchgstr + 10); 

	
	if ( roundedamount > 0)
	   fprintf(bill,"%34s%s\n"," ",chr_f_trantotcharge);
	else
	   fprintf(bill,"%37s%s\n"," ",chr_f_trantotcharge);
	(*int_currpos)++;
	

				if ((*int_currpos) + 1 > int_l_pagelength )
				{
					fprintf(bill,"\f\n");
					(*int_currpos) =1;

					if (APL_FAILURE == IV_Proc_PrnTRANHdr(bill,int_currpos,l_iv_clt_setup_struct,l_iv_client_serv_basis_structb,&int_retval,l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Could not print chr_header fo rtransaction charges\n");
						APL_GOBACK_FAIL;

					}
				}
}
else
	APL_GOBACK_FAIL



APL_GOBACK_SUCCESS



        {

        RETURN_SUCCESS:
                APL_IF_DEBUG
					 {
						CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of IV_Proc_PrnTran\n",NULL,NULL);	
					 }	
                return(APL_SUCCESS);

        RETURN_FAILURE:
                APL_IF_DEBUG
					 {
						CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of IV_Proc_PrnTran\n",NULL,NULL);	
					 }
                return (APL_FAILURE);
        }

}
