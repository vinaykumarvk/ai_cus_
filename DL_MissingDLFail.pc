

 





#include "CO_HostStructdef.h"
EXEC SQL INCLUDE SQLCA.H;


#define	RTV_SYSTEM_DATA
#include "CR_Common.h"
#include	"string.h"
#include	"stdlib.h"
#include	"math.h"

#define	COMMIT_COUNT_G 50
#define  PAGELENGTH 24
#define	QUANTITY_LEN  25
#define	AMOUNT_LEN_B  18
#define	CLT_NAME_LEN  10	
#define	C_REF_LEN  16	
#define	SEC_CD_LEN_D  8 	
#define  CORP_NAME_LEN_A 25
#define	INSTR_NAME_LEN_B	25
#define  FILE_NAME_LEN 13

#define  SEPARATOR "|"

#define 	DEFAULTFAILCODE 	98
#define	DEFLT_AGE_FAIL_CODE	62
#define	DEFAULTPREMATCHCODE	90

#define FTREPWIDTH	120
#define REP_WIDTH	150


int DL_Proc_MTFRpt(
						char **argv,
						FILE *p_logfile,
						INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	

	FILE *l_fp_eodmtf   = NULL;
	FILE *l_fp_ageodmtf = NULL;

	struct sqlca sqlca;	

	SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_hk 			=NULL;
	SYS_DL_DEAL_STRUCT_I *l_sys_dl_deal_struct_ia			=NULL;
	char		chr_l_now[APL_DATE_LEN] 					= APL_NULL_STRING;
	char		chr_l_today[APL_DATE_LEN] 				= APL_NULL_STRING;
	char		chr_l_buf[BUFFER_LEN]						= APL_NULL_STRING;
	char		chr_l_client_a[APL_CLIENT_LENGTH]			= APL_NULL_STRING;
	char		chr_l_refno_a[APL_TXNREFNO_LEN]			= APL_NULL_STRING;

	int 		int_l_error_flag   						= APL_SUCCESS;
	int		int_l_chkflg     							= 0;
	int		int_l_enuf_posn								= 0;
	int		int_l_rec_count								= 0; 
	int		int_l_count								   = 0; 

	short		l_spottrd_failreqd					= 0; 
	short		l_spottrd_cond							= 0; 

   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;
	

  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_dl_client         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_indentity_no           IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_dlt            IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_setldt        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_ex_arena         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_instrdate           IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_moneydate         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_domcpclt_cd         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_isspotdl       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_dlfromord      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_entry       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_reapired_ind       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_domcp_custodyclt      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_countclt        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_countcltnm      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_clientof       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_custinfo        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_fx_reqd          IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_ispymtlocal      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_verfied_with         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_brkrno        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_fail_cd        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_failinfo        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_ispart_       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_report_at_eom_ind        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_billdate          IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_locindentity_no        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_instruct_person       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_dealcd          IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_instr_code          IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_currencycode         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_classofdl       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_origindentity_no       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_newdt         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_maker           IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_maker_dt         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_deal_status    IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_access_stamp    IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_info1           IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_loccode        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_reginstr_ind        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_pos_stat     IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_status_reg       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_confdate          IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_matchindentity_no      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_markfaildate      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_candropdate       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_checker         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_checker_dt       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_instrconv_ind       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_ndsbldate         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lrdltype       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_ndsdate           IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_ublckdate         IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_delrecdate        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lastregdate       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lr_chkdate        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lr_confdate       IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lr_instrdate        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_tmpoutdate        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_tmpretdate        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_transmitdate      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_hostdate          IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lr_ndsbldate      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lr_ndsdate        IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_lr_ublckdate      IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_clt_reqdel_flag  IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_mod_hispos_ind    IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_updhispos_date    IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_instruct_personnm   	 IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_clientofcode   IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_inter_med_person    	 IS STRING;
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_inter_med_personnm     IS STRING; 
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_fxccy     IS STRING; 
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_exp_setl_date     IS STRING; 
  EXEC SQL VAR l_sys_dl_deal_struct_hk->h_misinfo         IS STRING; 


	
	l_sys_dl_deal_struct_hk	=(SYS_DL_DEAL_STRUCT_H *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_H));
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_hk);
	l_sys_dl_deal_struct_ia	=(SYS_DL_DEAL_STRUCT_I *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_I));
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_ia);

	

		CO_ProcMonitor(p_logfile, "Entered Function CDBEodMtfFn", NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);

	

	

	if(strcmp(argv[9],APL_NULL_STRING) == 0)
	{
		strcpy(argv[9],APL_YES_IND);
	}		
	

	
	if(strcmp(argv[9], APL_YES_IND ) && strcmp(argv[9], APL_NO_IND))
	{
		fprintf(p_logfile, "E: Invalid data. Aged Fail Flag\n"); 
		APL_GOBACK_FAIL;
	}

	
		sprintf(chr_l_buf, "The Age Fail Report Flag  is : %s", argv[9]);
		CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
	

	if(CO_Chk_CntryEnabled("EOD_MTF", "SPOTTRDFAILREQD", &l_spottrd_cond, 
								l_debug_info_ptr) == APL_FAILURE)
	{
		APL_GOBACK_FAIL;	
	}
	if(l_spottrd_cond && l_mt_core_sys_params_struct_h.proc_spot_dl_ind[0] == 'Y') 
	{
		l_spottrd_failreqd	= 1;
	}

	if(CO_RtvSysDt(chr_l_today, l_debug_info_ptr) == APL_FAILURE)
	{
		APL_GOBACK_FAIL;
	}

	
	if(l_spottrd_failreqd ==1)
	{
		
		EXEC SQL DECLARE p_eod_mtf_pk CURSOR FOR 
			SELECT * 
			FROM DL_DEAL
			WHERE to_date(:chr_l_today, 'DD/MM/YYYY HH24:MI:SS') - setl_date >=
				DECODE(SPOTTRD_IND, 'Y', 
						DECODE(ex_arena, '1', :l_mt_core_sys_params_struct_h.spot_dl_days, 
													:l_mt_core_sys_params_struct_h.spot_oth_dl_days),
							DECODE(ex_arena, '1', 
									DECODE(deal_cd, '2', :l_mt_core_sys_params_struct_h.stx_rec_dl_days,
														'4', :l_mt_core_sys_params_struct_h.stx_rec_dl_days,
														'1', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
														'3', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
														'5', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
														'6', :l_mt_core_sys_params_struct_h.stx_rec_dl_days,
														'7', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
														'8', :l_mt_core_sys_params_struct_h.stx_rec_dl_days),
					  				DECODE(deal_cd, '2', :l_mt_core_sys_params_struct_h.oth_rec_dl_days,
													'4', :l_mt_core_sys_params_struct_h.oth_rec_dl_days,
													'1', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
													'3', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
													'5', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
													'6', :l_mt_core_sys_params_struct_h.oth_rec_dl_days,
													'7', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
													'8', :l_mt_core_sys_params_struct_h.oth_rec_dl_days)))
			AND CHECKER_DT IS NOT NULL AND
			(INSTRUMENT_DT IS NULL OR
			DECODE(deal_cd, '4', MONEY_SETL_DT, '3', MONEY_SETL_DT, INSTRUMENT_DT) IS NULL)
			AND (DATEOF_MARKFAIL <> to_date(:chr_l_today, 'DD/MM/YYYY HH24:MI:SS') OR
				  DATEOF_MARKFAIL IS NULL)	
			ORDER BY CLIENT, INSTR_CODE
			FOR UPDATE;
	}
	else
	{
		
		EXEC SQL DECLARE p_eod_mtf_other CURSOR FOR 
			SELECT * 
			FROM DL_DEAL
			WHERE to_date(:chr_l_today, 'DD/MM/YYYY HH24:MI:SS') - setl_date >=
					DECODE(ex_arena, '1', DECODE(deal_cd, '2', :l_mt_core_sys_params_struct_h.stx_rec_dl_days,
																	'4', :l_mt_core_sys_params_struct_h.stx_rec_dl_days,
																	'1', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
																	'3', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
																	'5', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
																	'6', :l_mt_core_sys_params_struct_h.stx_rec_dl_days,
																	'7', :l_mt_core_sys_params_struct_h.stx_del_dl_days,
																	'8', :l_mt_core_sys_params_struct_h.stx_rec_dl_days),
	  					DECODE(deal_cd, '2', :l_mt_core_sys_params_struct_h.oth_rec_dl_days,
											'4', :l_mt_core_sys_params_struct_h.oth_rec_dl_days,
											'1', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
											'3', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
											'5', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
											'6', :l_mt_core_sys_params_struct_h.oth_rec_dl_days,
											'7', :l_mt_core_sys_params_struct_h.oth_del_dl_days,
											'8', :l_mt_core_sys_params_struct_h.oth_rec_dl_days))
			AND  CHECKER_DT IS NOT NULL AND
			(INSTRUMENT_DT IS NULL OR
			DECODE(deal_cd, '4', MONEY_SETL_DT, '3', MONEY_SETL_DT, INSTRUMENT_DT) IS NULL)
			AND (DATEOF_MARKFAIL <> to_date(:chr_l_today, 'DD/MM/YYYY HH24:MI:SS') OR
				  DATEOF_MARKFAIL IS NULL)	
			ORDER BY CLIENT, INSTR_CODE
			FOR UPDATE;
	}
	
	
	EXEC SQL DECLARE l_sendmt534_trd CURSOR FOR
				SELECT CLIENT, IDENTIY_NO FROM DL_DEAL
				WHERE DATEOF_MARKFAIL IS NULL AND CHECKER_DT IS NOT NULL 
						AND FAILREASON_CD IS NULL AND VAL_FDT IS NOT NULL AND
						VAL_FDT = to_date(:chr_l_today, 'DD/MM/YYYY HH24:MI:SS') AND
						(INSTRUMENT_DT IS NULL OR
						DECODE(deal_cd, '3', MONEY_SETL_DT, '4', MONEY_SETL_DT, INSTRUMENT_DT) IS NULL);

	sqlca.sqlcode = 0;

	

   EXEC SQL SELECT PROCESSING_STATUS  INTO :chr_g_restart_data:g_restart_data_i
   FROM SYS_BATCHPROC
   WHERE PROCESS_NAME=:argv[0]
   AND   PROC_INIT=:argv[1]
   AND   STARTDATE=:argv[2]
   AND   STATUS='started'
   FOR UPDATE OF PROCESSING_STATUS,STATUS;

   if(APL_ZERO_RESULT_SET) 
	{
      CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
      APL_GOBACK_FAIL
   }

   IS_ANY_ORA_ERROR

	

	

	if (APL_FAILURE == CO_RtvSysDtTime(	chr_l_now,
															l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}


	

	if (APL_FAILURE == CO_Rtv_RptFileName(	"FT",
													"Failed Trades Report ",
													FTREPWIDTH,
													p_intl_envdatastruct_h->processtion,
													argv,
													&l_fp_eodmtf,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	if(!strcmp(argv[9], APL_YES_IND))
	{ 
		if (APL_FAILURE == CO_Rtv_RptFileName(	"AF",
													"Aged Failed Report",
													REP_WIDTH,
													p_intl_envdatastruct_h->processtion,
													argv,
													&l_fp_ageodmtf,
													l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}
	} 
	if (APL_FAILURE == DL_Prnt_FailTxRptHdr(	l_fp_eodmtf, chr_l_today))
	{
		APL_GOBACK_FAIL
	}

	for(;;)
	{
		if(l_spottrd_failreqd ==1)
		{
			EXEC SQL OPEN p_eod_mtf_pk;
			IS_ANY_ORA_ERROR;
		}
		else
		{
			EXEC SQL OPEN p_eod_mtf_other;
			IS_ANY_ORA_ERROR;
		}

		for(;;)
		{
			memset(l_sys_dl_deal_struct_hk,NULL,sizeof(SYS_DL_DEAL_STRUCT_H));  
			memset(l_sys_dl_deal_struct_ia,NULL,sizeof(SYS_DL_DEAL_STRUCT_I));
			if(l_spottrd_failreqd ==1)
			{
				EXEC SQL FETCH p_eod_mtf_pk INTO :l_sys_dl_deal_struct_hk:l_sys_dl_deal_struct_ia;
			}
			else
			{
				EXEC SQL FETCH p_eod_mtf_other INTO :l_sys_dl_deal_struct_hk:l_sys_dl_deal_struct_ia;
			}

			if (sqlca.sqlcode == 1403)
			{
				if(int_l_rec_count != 0)
				{
					
					if(APL_FAILURE == DL_Prnt_FailTxRpt( l_fp_eodmtf, p_logfile, chr_l_today, 
														l_sys_dl_deal_struct_hk, l_sys_dl_deal_struct_ia,
														APL_YES_IND , 
														APL_YES_IND , 
														APL_YES_IND , 
													 	p_intl_envdatastruct_h, l_debug_info_ptr))
					{
						APL_GOBACK_FAIL;
					}
				}
				break;
			}
			IS_ANY_ORA_ERROR;
			int_l_rec_count ++;
			int_l_count	++;

		
		if(APL_FAILURE == DL_Prnt_FailTxRpt( l_fp_eodmtf, p_logfile, chr_l_today, 
														l_sys_dl_deal_struct_hk, l_sys_dl_deal_struct_ia,
														APL_YES_IND , 
														APL_NO_IND , 
														APL_NO_IND , 
													 	p_intl_envdatastruct_h, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}
		if(int_l_rec_count == COMMIT_COUNT_G)
		{
			

			CO_ProcMonitor(p_logfile, "Record Committed", NULL, NULL);

			memset(chr_l_buf, NULL, BUFFER_LEN);
			sprintf(chr_l_buf, "Processed %d records", int_l_count);

			EXEC SQL UPDATE SYS_BATCHPROC
			SET STAT_DET = :chr_l_buf
   		WHERE PROCESS_NAME=:argv[0]
  		 	AND   PROC_INIT=:argv[1]
   		AND   STARTDATE=:argv[2]
   		AND   STATUS='started';

   		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
																"Batch_in_proc Rec",
																APL_NULL_STRING,
																APL_NULL_STRING )

			EXEC SQL COMMIT WORK;
			IS_ANY_ORA_ERROR;
			int_l_rec_count		=0;

			

  		 	EXEC SQL SELECT PROCESSING_STATUS  INTO :chr_g_restart_data:g_restart_data_i
   		FROM SYS_BATCHPROC
   		WHERE PROCESS_NAME=:argv[0]
   		AND   PROC_INIT=:argv[1]
   		AND   STARTDATE=:argv[2]
   		AND   STATUS='started'
   		FOR UPDATE OF PROCESSING_STATUS,STATUS;

   		if(APL_ZERO_RESULT_SET) 
			{
      		CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
      		APL_GOBACK_FAIL
   		}

   		IS_ANY_ORA_ERROR

			break;
		}
	}
		if(sqlca.sqlcode ==1403) 
		{
			

			CO_ProcMonitor(p_logfile, "Record Committed", NULL, NULL);

			memset(chr_l_buf, NULL, BUFFER_LEN);
			sprintf(chr_l_buf, "Processed %d records", int_l_count);

			EXEC SQL UPDATE SYS_BATCHPROC
			SET STAT_DET = :chr_l_buf
   		WHERE PROCESS_NAME=:argv[0]
  		 	AND   PROC_INIT=:argv[1]
   		AND   STARTDATE=:argv[2]
   		AND   STATUS='started';

   		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
																"Batch_in_proc Rec",
																APL_NULL_STRING,
																APL_NULL_STRING )

			EXEC SQL COMMIT WORK;
			IS_ANY_ORA_ERROR;

			

  		 	EXEC SQL SELECT PROCESSING_STATUS  INTO :chr_g_restart_data:g_restart_data_i
   		FROM SYS_BATCHPROC
   		WHERE PROCESS_NAME=:argv[0]
   		AND   PROC_INIT=:argv[1]
   		AND   STARTDATE=:argv[2]
   		AND   STATUS='started'
   		FOR UPDATE OF PROCESSING_STATUS,STATUS;

   		if(APL_ZERO_RESULT_SET) 
			{
      		CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
      		APL_GOBACK_FAIL
   		}

   		IS_ANY_ORA_ERROR

			break;
		}
	}

	if(int_l_count == 0)
	{
		
		if(APL_FAILURE == DL_Prnt_FailTxRpt( l_fp_eodmtf, p_logfile, chr_l_today, 
														l_sys_dl_deal_struct_hk, l_sys_dl_deal_struct_ia, 
														APL_NO_IND, 
														APL_NO_IND, 
														APL_NO_IND, 
													 	p_intl_envdatastruct_h, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}
	}
	sqlca.sqlcode	=0;
	int_l_rec_count		=0;
	if(l_spottrd_failreqd ==1)
	{
		EXEC SQL CLOSE p_eod_mtf_pk;
			IS_ANY_ORA_ERROR;
	}
	else
	{
		EXEC SQL CLOSE p_eod_mtf_other;
			IS_ANY_ORA_ERROR;
	}

		EXEC SQL OPEN l_sendmt534_trd;
			IS_ANY_ORA_ERROR;
		for(;;)
		{
			EXEC SQL FETCH l_sendmt534_trd INTO :chr_l_client_a, :chr_l_refno_a;
			if(sqlca.sqlcode == 1403) break;
			IS_ANY_ORA_ERROR;
						
						if(GBDbInsIMSGENT(MS_MSGNO_534, chr_l_refno_a,
												chr_l_client_a,
												'Y',
												APL_NULL_STRING,
												l_debug_info_ptr) == APL_FAILURE)
						{
							APL_GOBACK_FAIL
						}
				
		}
		EXEC SQL CLOSE l_sendmt534_trd;
			IS_ANY_ORA_ERROR;

	if(!strcmp(argv[9], APL_YES_IND))
	{
		sleep(1);
		
		if(APL_FAILURE == 
				 DL_Proc_AgeMTFRpt(
						l_fp_ageodmtf,
						p_logfile,
						chr_l_today,
						p_intl_envdatastruct_h,
						l_debug_info_ptr))
		{
						APL_GOBACK_FAIL;
		}
	}

   RETURN_SUCCESS :

		CO_FreeErrLst(l_debug_info_ptr);
		if (APL_FAILURE == CO_Proc_RptClose(	l_fp_eodmtf,
														l_debug_info_ptr)) 
		{
			APL_GOBACK_FAIL
		}
		if (APL_FAILURE == CO_Proc_RptClose(	l_fp_ageodmtf,
														l_debug_info_ptr)) 
		{
			APL_GOBACK_FAIL
		}
		fprintf(p_logfile, "Exiting MTF processtion successfully\n");
		APL_FREE(l_sys_dl_deal_struct_hk);
		APL_FREE(l_sys_dl_deal_struct_ia);

         CO_ProcMonitor(p_logfile,
						"Leaving Function DL_Proc_MTFRpt successfully",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_SUCCESS);

   RETURN_FAILURE :

		if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
		{
			CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
			CO_FreeErrLst(l_debug_info_ptr);
		}
		fprintf(p_logfile, "Exiting EODMTF processtion with errors\n");
		APL_FREE(l_sys_dl_deal_struct_hk);
		APL_FREE(l_sys_dl_deal_struct_ia);
         CO_ProcMonitor(p_logfile,
						"Leaving Function DL_Proc_MTFRpt with errors",
						NULL,
						p_intl_envdatastruct_h);
		CO_Proc_RptClose(l_fp_eodmtf, l_debug_info_ptr); 
		CO_Proc_RptClose(l_fp_ageodmtf, l_debug_info_ptr); 
      return(APL_FAILURE);

}

int DL_Proc_AgeMTFRpt(
						FILE *p_fp_ageodmtf,
						FILE *p_logfile,
						char *p_today,
						INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_hk 	=NULL;
	SYS_DL_DEAL_STRUCT_I *l_sys_dl_deal_struct_ia	=NULL;
	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_ha  = NULL;
	int	int_l_age_days_l			=0;
	int	int_l_age_days_u			=0;
	int 	int_l_date_comp				=0;
	int 	int_l_page_count			=0;
	int	int_l_default_fail_days  =0;
	short	l_default_age_code	=0;
	char chr_l_sysdatetime[APL_DATE_LEN]= APL_NULL_STRING; 

	l_sys_dl_deal_struct_hk	=(SYS_DL_DEAL_STRUCT_H *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_H));
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_hk);
	l_sys_dl_deal_struct_ia	=(SYS_DL_DEAL_STRUCT_I *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_I));
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_ia);
	l_dl_dealaudit_struct_ha = (DL_DEALAUDIT_STRUCT_H *)calloc(1, sizeof(DL_DEALAUDIT_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_dealaudit_struct_ha);

	
	EXEC SQL VAR l_sys_dl_deal_struct_hk->h_dl_client IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hk->h_indentity_no IS STRING;

	
	memset(chr_l_sysdatetime,APL_NULL_CHAR,APL_DATE_LEN);
	if (CO_RtvSysDtTime(chr_l_sysdatetime, l_debug_info_ptr) != APL_SUCCESS)
   	{APL_GOBACK_FAIL }

	

	EXEC SQL DECLARE l_age_eodmtf CURSOR FOR
	SELECT * FROM DL_DEAL
	WHERE	((DATEOF_MARKFAIL IS NOT NULL  AND 
			VAL_FDT IS NULL ) OR (VAL_FDT IS NOT NULL AND INSTRUMENT_DT IS NULL AND 
			DECODE(deal_cd, '3', MONEY_SETL_DT, '4', MONEY_SETL_DT, INSTRUMENT_DT) IS NULL))
			AND (to_date(:p_today, 'DD/MM/YYYY HH24:MI:SS') - SETL_DATE >= :int_l_age_days_l AND  
			to_date(:p_today, 'DD/MM/YYYY HH24:MI:SS') <=
			DECODE(:int_l_age_days_l, 45, 
					to_date(:p_today, 'DD/MM/YYYY HH24:MI:SS') ,SETL_DATE + :int_l_age_days_u));

	
	if(CO_Chk_CntryEnabled("EOD_MTF", "DEFAULTAGECODE", &l_default_age_code, 
								l_debug_info_ptr) == APL_FAILURE)
	{
		APL_GOBACK_FAIL;	
	}

	if (l_default_age_code)
	{
		int_l_default_fail_days = 75;
	}
	else
	{
		int_l_default_fail_days = 40;
	}

	sqlca.sqlcode=0;
	
	int_l_age_days_l 	=18;
	int_l_age_days_u 	=29;

	if (APL_FAILURE == \
			DL_Prnt_AgeMTFHdr( p_fp_ageodmtf, int_l_age_days_l, int_l_age_days_u, p_today))
	{
		APL_GOBACK_FAIL
	}

	
	EXEC SQL OPEN l_age_eodmtf;
		IS_ANY_ORA_ERROR;
	for(;;)
	{
		EXEC SQL FETCH l_age_eodmtf INTO :l_sys_dl_deal_struct_hk:l_sys_dl_deal_struct_ia;
		if(sqlca.sqlcode == 1403) break;
		IS_ANY_ORA_ERROR;
		int_l_page_count++;
		if(int_l_page_count == PAGELENGTH)
		{
			fprintf(p_fp_ageodmtf,"\f");
			int_l_page_count	=0;
			if (APL_FAILURE == 
				DL_Prnt_AgeMTFHdr( p_fp_ageodmtf, int_l_age_days_l, int_l_age_days_u, p_today))
			{
				APL_GOBACK_FAIL
			}
		}
		if( APL_FAILURE == 
					DL_Prnt_AgeMTFRpt(p_fp_ageodmtf, l_sys_dl_deal_struct_hk, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}
	}
			fprintf(p_fp_ageodmtf,"\f");
			int_l_page_count	=0;
	EXEC SQL CLOSE l_age_eodmtf;
		IS_ANY_ORA_ERROR;

	
	sqlca.sqlcode=0;
	
	int_l_age_days_l 	=30;
	int_l_age_days_u	=44;

	
	EXEC SQL OPEN l_age_eodmtf;
		IS_ANY_ORA_ERROR;

	if (APL_FAILURE ==\
				DL_Prnt_AgeMTFHdr( p_fp_ageodmtf, int_l_age_days_l, int_l_age_days_u, p_today))
	{
		APL_GOBACK_FAIL
	}

	memset(l_sys_dl_deal_struct_hk,NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
	memset(l_sys_dl_deal_struct_ia,NULL, sizeof(SYS_DL_DEAL_STRUCT_I));

	for(;;)
		{
		EXEC SQL FETCH l_age_eodmtf INTO :l_sys_dl_deal_struct_hk:l_sys_dl_deal_struct_ia;
		if(sqlca.sqlcode == 1403) break;
		IS_ANY_ORA_ERROR;
		int_l_page_count++;
		if(int_l_page_count == PAGELENGTH)
		{
			fprintf(p_fp_ageodmtf,"\f");
			int_l_page_count	=0;
			if(APL_FAILURE ==	DL_Prnt_AgeMTFHdr( p_fp_ageodmtf, int_l_age_days_l, int_l_age_days_u, p_today))
			{
				APL_GOBACK_FAIL
			}
		}
		if(APL_FAILURE == DL_Prnt_AgeMTFRpt(p_fp_ageodmtf, l_sys_dl_deal_struct_hk, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}

		if(APL_FAILURE	==	CO_Pro_DateComp(l_sys_dl_deal_struct_hk->h_setldt, p_today, &int_l_date_comp, l_debug_info_ptr))
		{
				APL_GOBACK_FAIL;
		}

		if(int_l_date_comp  >= int_l_default_fail_days)
		{
		
			if(atoi(l_sys_dl_deal_struct_hk->h_fail_cd) != DEFLT_AGE_FAIL_CODE)
			{
				EXEC SQL UPDATE DL_DEAL
					SET FAILREASON_CD= '62',
					SUB_FAIL_CD=	0,
					DATEOF_MARKFAIL	=to_date(:p_today, 'DD/MM/YYYY HH24:MI:SS'),
               ACCESS_STAMP=to_date(:chr_l_sysdatetime, 'DD/MM/YYYY HH24:MI:SS') 
					WHERE CLIENT=:l_sys_dl_deal_struct_hk->h_dl_client AND
							IDENTIY_NO	=:l_sys_dl_deal_struct_hk->h_indentity_no;
						IS_ANY_ORA_ERROR;

           memset(l_dl_dealaudit_struct_ha, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
           strcpy(l_dl_dealaudit_struct_ha->h_dl_client, l_sys_dl_deal_struct_hk->h_dl_client);
           strcpy(l_dl_dealaudit_struct_ha->h_indentity_no,    l_sys_dl_deal_struct_hk->h_indentity_no);
            strcpy(l_dl_dealaudit_struct_ha->h_trail_for, "T");
            strcpy(l_dl_dealaudit_struct_ha->h_processdetail, p_intl_envdatastruct_h->processtion);
            strcpy(l_dl_dealaudit_struct_ha->h_proc_usr, p_intl_envdatastruct_h->usr);
             strcpy(l_dl_dealaudit_struct_ha->h_subprocess, APL_NULL_STRING);
            strcpy(l_dl_dealaudit_struct_ha->h_logdate, chr_l_sysdatetime);
            strcpy(l_dl_dealaudit_struct_ha->h_fail_cd, "62");
            l_dl_dealaudit_struct_ha->h_subfailreas_cd= 0;
            l_dl_dealaudit_struct_ha->h_qty = l_sys_dl_deal_struct_hk->h_qty;
            strcpy(l_dl_dealaudit_struct_ha->h_dlfromord, l_sys_dl_deal_struct_hk->h_dlfromord);

   if ( APL_FAILURE == CR_Mod_CLHAudTrail( l_dl_dealaudit_struct_ha,
                                       l_debug_info_ptr ) )
   {
      APL_GOBACK_FAIL;
   }

        

         if (APL_FAILURE==EI_Mod_MQData(l_sys_dl_deal_struct_hk->h_dl_client,
                                        l_sys_dl_deal_struct_hk->h_indentity_no,
													 NULL,NULL,
													 "T",
                                        l_debug_info_ptr))
             APL_GOBACK_FAIL 
			}
        
			
			if(GBDbInsIMSGENT(MS_MSGNO_534, l_sys_dl_deal_struct_hk->h_indentity_no,
								l_sys_dl_deal_struct_hk->h_dl_client,
								'Y',
								APL_NULL_STRING,
								l_debug_info_ptr) == APL_FAILURE)
			{
				APL_GOBACK_FAIL
			}
			
		}
	}
			fprintf(p_fp_ageodmtf, "\f");
			int_l_page_count	=0;

	EXEC SQL CLOSE l_age_eodmtf;
		IS_ANY_ORA_ERROR;

	sqlca.sqlcode=0;
	
	int_l_age_days_l 	=45;

	if (APL_FAILURE == 
					DL_Prnt_AgeMTFHdr( p_fp_ageodmtf, int_l_age_days_l, int_l_age_days_u, p_today))
	{
		APL_GOBACK_FAIL
	}

	memset(l_sys_dl_deal_struct_hk,NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
	memset(l_sys_dl_deal_struct_ia,NULL, sizeof(SYS_DL_DEAL_STRUCT_I));

	EXEC SQL OPEN l_age_eodmtf;
		IS_ANY_ORA_ERROR;
	for(;;)
	{
		EXEC SQL FETCH l_age_eodmtf INTO :l_sys_dl_deal_struct_hk:l_sys_dl_deal_struct_ia;
		if(sqlca.sqlcode == 1403) break;
		IS_ANY_ORA_ERROR;
		int_l_page_count++;
		if(int_l_page_count == PAGELENGTH)
		{
			fprintf(p_fp_ageodmtf,"\f");
			int_l_page_count	=0;
			if (APL_FAILURE == 
				DL_Prnt_AgeMTFHdr( p_fp_ageodmtf, int_l_age_days_l, int_l_age_days_u, p_today))
			{
			APL_GOBACK_FAIL
			}
		}
		if(APL_FAILURE == DL_Prnt_AgeMTFRpt(p_fp_ageodmtf, l_sys_dl_deal_struct_hk, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}

		if(APL_FAILURE	==	CO_Pro_DateComp(l_sys_dl_deal_struct_hk->h_setldt, p_today, &int_l_date_comp, l_debug_info_ptr))
		{
				APL_GOBACK_FAIL;
		}

		if(int_l_date_comp  >= int_l_default_fail_days)
		{
		
			if(atoi(l_sys_dl_deal_struct_hk->h_fail_cd) != DEFLT_AGE_FAIL_CODE)
			{
				EXEC SQL UPDATE DL_DEAL
					SET FAILREASON_CD = '62',
					SUB_FAIL_CD	=	0,
					DATEOF_MARKFAIL	=to_date(:p_today, 'DD/MM/YYYY HH24:MI:SS'),
               ACCESS_STAMP=to_date(:chr_l_sysdatetime, 'DD/MM/YYYY HH24:MI:SS') 
					WHERE CLIENT=:l_sys_dl_deal_struct_hk->h_dl_client AND
							IDENTIY_NO	=:l_sys_dl_deal_struct_hk->h_indentity_no;
						IS_ANY_ORA_ERROR;
           

           memset(l_dl_dealaudit_struct_ha, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
           strcpy(l_dl_dealaudit_struct_ha->h_dl_client, l_sys_dl_deal_struct_hk->h_dl_client);
           strcpy(l_dl_dealaudit_struct_ha->h_indentity_no,    l_sys_dl_deal_struct_hk->h_indentity_no);
            strcpy(l_dl_dealaudit_struct_ha->h_trail_for, "T");
            strcpy(l_dl_dealaudit_struct_ha->h_processdetail, p_intl_envdatastruct_h->processtion);
            strcpy(l_dl_dealaudit_struct_ha->h_proc_usr, p_intl_envdatastruct_h->usr);
             strcpy(l_dl_dealaudit_struct_ha->h_subprocess, APL_NULL_STRING);
            strcpy(l_dl_dealaudit_struct_ha->h_logdate, chr_l_sysdatetime);
            strcpy(l_dl_dealaudit_struct_ha->h_fail_cd, "62");
            l_dl_dealaudit_struct_ha->h_subfailreas_cd= 0;
            l_dl_dealaudit_struct_ha->h_qty = l_sys_dl_deal_struct_hk->h_qty;
            strcpy(l_dl_dealaudit_struct_ha->h_dlfromord, l_sys_dl_deal_struct_hk->h_dlfromord);

   			if ( APL_FAILURE == CR_Mod_CLHAudTrail( l_dl_dealaudit_struct_ha,
                                       			l_debug_info_ptr ) )
   			{
      			APL_GOBACK_FAIL;
   			}


             

         if (APL_FAILURE==EI_Mod_MQData(l_sys_dl_deal_struct_hk->h_dl_client,
                                        l_sys_dl_deal_struct_hk->h_indentity_no,
													 NULL,NULL,
													 "T",
                                        l_debug_info_ptr))
             APL_GOBACK_FAIL
			}
				
			if(GBDbInsIMSGENT(MS_MSGNO_534, l_sys_dl_deal_struct_hk->h_indentity_no,
								l_sys_dl_deal_struct_hk->h_dl_client,
								'Y',
								APL_NULL_STRING,
								l_debug_info_ptr) == APL_FAILURE)
			{
				APL_GOBACK_FAIL
			}
			
		}
	}
			fprintf(p_fp_ageodmtf,"\f");
	EXEC SQL CLOSE l_age_eodmtf;
		IS_ANY_ORA_ERROR;

   RETURN_SUCCESS :

		APL_FREE(l_sys_dl_deal_struct_hk);	
		APL_FREE(l_sys_dl_deal_struct_ia);	

         CO_ProcMonitor(p_logfile,
						"Leaving Function DL_Proc_AgeMTFRpt successfully",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_SUCCESS);

   RETURN_FAILURE :

		APL_FREE(l_sys_dl_deal_struct_hk);	
		APL_FREE(l_sys_dl_deal_struct_ia);	

         CO_ProcMonitor(p_logfile,
						"Leaving Function DL_Proc_AgeMTFRpt with errors",
						NULL,
						p_intl_envdatastruct_h);

      return(APL_FAILURE);

}





int DL_Prnt_FailTxRptHdr(	FILE *fp, char *p_today)
{
	int i;
	char chr_l_date[12]	=APL_NULL_STRING;
	char *chr_l_space		=APL_NULL_STRING;
	static short l_pg_no		=0;

	strncat(chr_l_date, p_today, 11);
	l_pg_no++;

	fprintf(fp, "\n%40sTRANSACTIONS THAT ARE FAILING ON %s\n", chr_l_space, chr_l_date);
	fprintf(fp, "%40s", chr_l_space);
	for (i=0;i<43;fprintf(fp, "-"),i++);
	fprintf(fp, "\n");

	if(DL_Prnt_MTFRptHdr(fp, FTREPWIDTH) == APL_FAILURE)
	{
		return(APL_FAILURE);
	}

	fprintf(fp, "%s", chr_l_date);
	fprintf(fp, "%90s Page %d\n", chr_l_space, l_pg_no);
	return(APL_SUCCESS);
}



int DL_Prnt_AgeMTFHdr(	FILE *fp, int p_age_days_l, int p_age_days_u, char *p_today)
{
	int i;
	char chr_l_date[11]	=APL_NULL_STRING;
	char *chr_l_space		=APL_NULL_STRING;
	static short l_pg_no		=0;

	l_pg_no++;
	strncat(chr_l_date, p_today, 10);
	fprintf(fp, "\n%50sAGED FAIL TRANSACTIONS REPORT AS OF %s\n", chr_l_space, chr_l_date);
	fprintf(fp, "%50s", chr_l_space);
	for (i=0;i<46;fprintf(fp, "-"),i++);
	fprintf(fp, "\n");

	if(DL_Prnt_MTFRptHdr(fp, REP_WIDTH) == APL_FAILURE)
	{
		return(APL_FAILURE);
	}

	fprintf(fp, "%.10s", p_today);
	fprintf(fp, "%120s Page %d\n", chr_l_space, l_pg_no);

	switch(p_age_days_l)
	{
	case 45 :
		fprintf(fp, "Transactions Marked Failed 45 Days or More\n");
		break;
	default:
		fprintf(fp, "Transactions Marked Failed Between %d To %d Days\n", p_age_days_l, p_age_days_u);
		break;
	}
	for (i=0;i<149;fprintf(fp, "="),i++);
	fprintf(fp, "\n\nACCOUNT    CUSTOMER NAME             REFERENCE       ");
	fprintf(fp, " SETT. DT.   INSTR. CODE  INSTR. NAME                 ");
	fprintf(fp, "                 QUANTITY             AMOUNT\n\n");
	for (i=0;i<149;fprintf(fp, "="),i++);
	fprintf(fp, "\n");
	return(APL_SUCCESS);
}


int DL_Prnt_AgeMTFRpt(FILE *fp, SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_b, 
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char chr_l_cname[66]				=APL_NULL_STRING;
	char chr_l_cname_desc[26]		=APL_NULL_STRING;
	char chr_l_instr_name[131]			=APL_NULL_STRING;
	
	/* commented by bageshri for oracle 10G migration */
	/* char chr_l_instr_name[26]		=APL_NULL_STRING; */
	char chr_l_date[12]				=APL_NULL_STRING;

		
		if(CO_Rtv_FldValChar("cln_name", "mt_client", "cln_code",
							p_sys_dl_deal_struct_h_b->h_dl_client, 
							chr_l_cname,
							l_debug_info_ptr) == APL_FAILURE)
		{
			return(APL_FAILURE);
		}

		
		if(CO_Rtv_FldValChar("instr_name", "mt_instrument", "instr_code",
							p_sys_dl_deal_struct_h_b->h_instr_code, 
							chr_l_instr_name,
							l_debug_info_ptr) == APL_FAILURE)
		{
			return(APL_FAILURE);
		}

		strncat(chr_l_cname_desc, chr_l_cname, CORP_NAME_LEN_A);
		CO_NewLine(chr_l_instr_name);
		strncat(chr_l_instr_name, chr_l_instr_name, INSTR_NAME_LEN_B);
		strncat(chr_l_date, p_sys_dl_deal_struct_h_b->h_setldt, 11);

	fprintf(fp, "%-10s %-25s %-16s %-11s %-10s %-25s %25.4f %18.3f\n\n",
																	p_sys_dl_deal_struct_h_b->h_dl_client,
																	chr_l_cname_desc,
																	p_sys_dl_deal_struct_h_b->h_indentity_no,
																	chr_l_date,
																	p_sys_dl_deal_struct_h_b->h_instr_code,
																	chr_l_instr_name,
																	p_sys_dl_deal_struct_h_b->h_qty,
																	p_sys_dl_deal_struct_h_b->h_amt);
	return(APL_SUCCESS);
}


int DL_Prnt_FailTxRpt(	FILE *fp, 
								FILE *p_logfile,
								char *p_today,
								SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_b,
								SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i,
								char *l_zero_flag,
								char *l_footer_flag,
								char *l_grand_tot_flag,
								INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int i					=0;
	static int int_l_pglen_count=7;
	static double l_quantity_sum=0, dbl_l_amount_sum=0;
	static double l_grand_quantity_sum=0, l_grand_amount_sum=0;
	static char chr_l_client_old[11]	=APL_NULL_STRING;
	char chr_l_domcpacnm[26]				=APL_NULL_STRING;
	char chr_l_broker[66]					=APL_NULL_STRING;
	char chr_l_instrdesc[26]				=APL_NULL_STRING;
	char chr_l_instr_name[131]				=APL_NULL_STRING;
	char chr_l_failcode_A[3]				=APL_NULL_STRING;
	char *chr_l_space						=APL_NULL_STRING;
	char chr_l_trdesc[4]					=APL_NULL_STRING;
	char chr_l_settle_date[12]			=APL_NULL_STRING;
	char chr_l_incconf_flg				=APL_NULL_CHAR;
	double l_av_quantity					=0.0;
	int  int_p_smieligibility_flg 	 	= 0 ;
	int	int_l_ccseligfail_flg			= 0;
	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_ha = NULL;
	char chr_l_sysdatetime[APL_DATE_LEN]= APL_NULL_STRING;  
	char h_ora_rowid[APL_ROWID_LEN]				=	APL_NULL_STRING;
	short	i_ora_rowid									=	0;

   
   l_dl_dealaudit_struct_ha = (DL_DEALAUDIT_STRUCT_H*)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H));
   APL_MALLOC_FAIL(l_dl_dealaudit_struct_ha);

	EXEC SQL VAR h_ora_rowid IS STRING;

   
memset(chr_l_sysdatetime,APL_NULL_CHAR,APL_DATE_LEN);
if (CO_RtvSysDtTime(chr_l_sysdatetime, l_debug_info_ptr) != APL_SUCCESS)
   {APL_GOBACK_FAIL }

	if (g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y')
	{
		
		memset(h_ora_rowid,APL_NULL_CHAR,APL_ROWID_LEN);
		EXEC SQL SELECT rowid 
					INTO :h_ora_rowid:i_ora_rowid
					FROM DL_DEAL
					WHERE CLIENT=:p_sys_dl_deal_struct_h_b->h_dl_client
					AND 	IDENTIY_NO	=:p_sys_dl_deal_struct_h_b->h_indentity_no;
		IS_ANY_ORA_ERROR
	
		if (EI_Chk_SMIElg(p_sys_dl_deal_struct_h_b->h_loccode,p_sys_dl_deal_struct_h_b->h_dlt,p_sys_dl_deal_struct_h_b->h_classofdl,p_sys_dl_deal_struct_h_b->h_instr_code,p_sys_dl_deal_struct_h_b->h_locchng_flg,h_ora_rowid,&int_p_smieligibility_flg,p_intl_envdatastruct_h,l_debug_info_ptr) == APL_FAILURE)
		{
			CO_ProcMonitor(p_logfile,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_envdatastruct_h);
			APL_GOBACK_FAIL
		}

		if(int_p_smieligibility_flg)
		{
			CO_ProcMonitor(p_logfile,"SMI Eligible Trade Found\n", NULL, NULL) ;
			APL_GOBACK_SUCCESS
		}

	}


	if(!strcmp(l_zero_flag, APL_YES_IND))
	{
		if(!strcmp(l_footer_flag, APL_NO_IND))
		{
		if((strcmp(chr_l_client_old, p_sys_dl_deal_struct_h_b->h_dl_client)) 
					&& strcmp(chr_l_client_old, APL_NULL_STRING))
		{
			if(APL_FAILURE == DL_Prnt_FailTxRptFtr(fp, dbl_l_amount_sum, l_quantity_sum, APL_NO_IND))
			{
				APL_GOBACK_FAIL;
			}

		dbl_l_amount_sum	=0;
		l_quantity_sum		=0;

		fprintf(fp, "\f");

		if (APL_FAILURE == DL_Prnt_FailTxRptHdr(	fp, p_today))
		{
			APL_GOBACK_FAIL
		}

		if(APL_FAILURE ==DL_Prnt_FailDetTxRptHdr(fp, p_sys_dl_deal_struct_h_b->h_dl_client, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}
		int_l_pglen_count	=11;
	}

		if(!strcmp(chr_l_client_old, APL_NULL_STRING))
		{
			if(APL_FAILURE==DL_Prnt_FailDetTxRptHdr(fp, p_sys_dl_deal_struct_h_b->h_dl_client, l_debug_info_ptr))
			{
				APL_GOBACK_FAIL;
			}
			int_l_pglen_count = 11;
		}

		
		if(CO_Rtv_FldValChar("cln_name", "mt_client", "cln_code",
							p_sys_dl_deal_struct_h_b->h_domcpclt_cd,
							chr_l_broker,
							l_debug_info_ptr) == APL_FAILURE)
		{
			return(APL_FAILURE);
		}

		
		if(CO_Rtv_FldValChar("instr_name", "mt_instrument", "instr_code",
							p_sys_dl_deal_struct_h_b->h_instr_code,
							chr_l_instr_name,
							l_debug_info_ptr) == APL_FAILURE)
		{
			return(APL_FAILURE);
		}
		strncat(chr_l_domcpacnm, chr_l_broker, CORP_NAME_LEN_A);
		CO_NewLine(chr_l_instr_name);
		strncat(chr_l_instrdesc, chr_l_instr_name, INSTR_NAME_LEN_B);
		strncat(chr_l_settle_date, p_sys_dl_deal_struct_h_b->h_setldt, 11);

		switch(p_sys_dl_deal_struct_h_b->h_dealcd[0])
		{
		case DEALCD_DF:
				strcpy(chr_l_trdesc, "DF");
				break;
		case DEALCD_RF:
				strcpy(chr_l_trdesc, "RF");
				break;
		case DEALCD_DVP:
				strcpy(chr_l_trdesc, "DVP");
				break;
		case DEALCD_RVP:
				strcpy(chr_l_trdesc, "RVP");
				break;
		case DEALCD_CD:
				strcpy(chr_l_trdesc, "CD");
				break;
		case DEALCD_CR:
				strcpy(chr_l_trdesc, "CR");
				break;
		case DEALCD_DCD:
				strcpy(chr_l_trdesc, "DCD");
				break;
		case DEALCD_RCR:
				strcpy(chr_l_trdesc, "RCR");
				break;
		default:
				break;
		}

		if ((VAL_DELIVER_DEAL(p_sys_dl_deal_struct_h_b->h_dealcd[0])) || p_sys_dl_deal_struct_h_b->h_dealcd[0]=='6')
		{
			dbl_l_amount_sum += p_sys_dl_deal_struct_h_b->h_amt; 
			l_quantity_sum	-= p_sys_dl_deal_struct_h_b->h_qty; 
			l_grand_amount_sum += p_sys_dl_deal_struct_h_b->h_amt;
			l_grand_quantity_sum    -= p_sys_dl_deal_struct_h_b->h_qty;
		}
		else if ((VAL_RECDEAL(p_sys_dl_deal_struct_h_b->h_dealcd[0])) || p_sys_dl_deal_struct_h_b->h_dealcd[0]=='5')
		{
			dbl_l_amount_sum -= p_sys_dl_deal_struct_h_b->h_amt; 
			l_quantity_sum	+= p_sys_dl_deal_struct_h_b->h_qty; 
			l_grand_amount_sum -= p_sys_dl_deal_struct_h_b->h_amt;
			l_grand_quantity_sum    += p_sys_dl_deal_struct_h_b->h_qty;
		}
		else if (p_sys_dl_deal_struct_h_b->h_dealcd[0]=='7')
		{
			dbl_l_amount_sum -= p_sys_dl_deal_struct_h_b->h_amt; 
			l_quantity_sum	-= p_sys_dl_deal_struct_h_b->h_qty; 
			l_grand_amount_sum -= p_sys_dl_deal_struct_h_b->h_amt;
			l_grand_quantity_sum    -= p_sys_dl_deal_struct_h_b->h_qty;
		}
		else if (p_sys_dl_deal_struct_h_b->h_dealcd[0]=='8')
		{
			dbl_l_amount_sum += p_sys_dl_deal_struct_h_b->h_amt; 
			l_quantity_sum	+= p_sys_dl_deal_struct_h_b->h_qty; 
			l_grand_amount_sum += p_sys_dl_deal_struct_h_b->h_amt;
			l_grand_quantity_sum    += p_sys_dl_deal_struct_h_b->h_qty;
		}

		fprintf(fp, "\n%-16s %-25s %3s %25.4f %18.3f %s %-25s\n", 
						p_sys_dl_deal_struct_h_b->h_indentity_no,\
						chr_l_instrdesc,
						chr_l_trdesc,
						p_sys_dl_deal_struct_h_b->h_qty,
						p_sys_dl_deal_struct_h_b->h_amt,
						chr_l_settle_date,
						chr_l_domcpacnm);

						int_l_pglen_count++;
	if(int_l_pglen_count == PAGELENGTH)
	{

		if(APL_FAILURE ==DL_Prnt_FailTxRptFtr(fp, dbl_l_amount_sum, l_quantity_sum, APL_NO_IND))
		{
			APL_GOBACK_FAIL;
		}

		fprintf(fp, "\f");

		if (APL_FAILURE == DL_Prnt_FailTxRptHdr(	fp, p_today))
		{
			APL_GOBACK_FAIL
		}

		if(APL_FAILURE ==DL_Prnt_FailDetTxRptHdr(fp, p_sys_dl_deal_struct_h_b->h_dl_client, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}
		int_l_pglen_count	=7;
	}
	if(((VAL_DELIVER_DEAL(p_sys_dl_deal_struct_h_b->h_dealcd[0])) || p_sys_dl_deal_struct_h_b->h_dealcd[0]=='7')\
			&& (!strcmp(chr_l_client_old, p_sys_dl_deal_struct_h_b->h_dl_client)))
	{
		if (strlen(p_sys_dl_deal_struct_h_b->h_confdate))
		{
			chr_l_incconf_flg = 'N';
		}
		else
		{
			chr_l_incconf_flg = 'Y';
		}

		if(DL_Chk_AvlPos(	p_sys_dl_deal_struct_h_b->h_dl_client,
							 		p_sys_dl_deal_struct_h_b->h_instr_code,
							 		p_sys_dl_deal_struct_h_b->h_loccode,
									'Y','N','N',chr_l_incconf_flg,chr_l_incconf_flg,'N','N','N',
									"FREE",
							 		&l_av_quantity,
							 		l_debug_info_ptr
							 	  ) == APL_FAILURE)
		{
			APL_GOBACK_FAIL;
		}
		
		if(APL_GREATER_EQUAL(l_av_quantity , p_sys_dl_deal_struct_h_b->h_qty))
		{
			if(p_sys_dl_deal_struct_i->i_instrdate== -1 && p_sys_dl_deal_struct_i->i_moneydate == 0)
			{
				strcpy(chr_l_failcode_A, "64");
			}
			else if(p_sys_dl_deal_struct_i->i_instrdate== 0 && p_sys_dl_deal_struct_i->i_moneydate == -1)
			{
				strcpy(chr_l_failcode_A, "69");
			}
			else if(p_sys_dl_deal_struct_i->i_confdate == 0) 
			{   
			
				strcpy(chr_l_failcode_A, "90");
			}
			else
				strcpy(chr_l_failcode_A, "98");
		}
		else
				strcpy(chr_l_failcode_A, "15");
	}
	else
	{
			if(p_sys_dl_deal_struct_i->i_instrdate== -1 && p_sys_dl_deal_struct_i->i_moneydate == 0)
			{
				strcpy(chr_l_failcode_A, "64");
			}
			else if(p_sys_dl_deal_struct_i->i_instrdate== 0 && p_sys_dl_deal_struct_i->i_moneydate == -1)
			{
				strcpy(chr_l_failcode_A, "69");
			}
			else if(p_sys_dl_deal_struct_i->i_confdate == 0)  
			{   
			
				strcpy(chr_l_failcode_A, "90");
			}
			else
				strcpy(chr_l_failcode_A, "98");
	}



	if(p_sys_dl_deal_struct_i->i_failreas_cd == -1)
	{
		EXEC SQL UPDATE DL_DEAL
			SET FAILREASON_CD=:chr_l_failcode_A,
				 SUB_FAIL_CD=0,
				 DATEOF_MARKFAIL=:p_today,
				 ACCESS_STAMP=to_date(:chr_l_sysdatetime , 'DD/MM/YYYY HH24:MI:SS') 
		WHERE CLIENT=:p_sys_dl_deal_struct_h_b->h_dl_client
		AND IDENTIY_NO=:p_sys_dl_deal_struct_h_b->h_indentity_no;
	}
	else 
	
	{
		EXEC SQL UPDATE DL_DEAL
				 SET DATEOF_MARKFAIL=:p_today,
				 ACCESS_STAMP=to_date(:chr_l_sysdatetime , 'DD/MM/YYYY HH24:MI:SS') 
		WHERE CLIENT=:p_sys_dl_deal_struct_h_b->h_dl_client
		AND IDENTIY_NO=:p_sys_dl_deal_struct_h_b->h_indentity_no;
	}


	
   int_l_ccseligfail_flg = 0;
   if (APL_FAILURE == DL_Chk_DLFailCd(p_sys_dl_deal_struct_h_b->h_fail_cd,&int_l_ccseligfail_flg,l_debug_info_ptr))
   {
   	APL_GOBACK_FAIL
   }
   if (int_l_ccseligfail_flg)
   {
      if ( APL_FAILURE ==  DL_Mod_CCSPendDL(p_sys_dl_deal_struct_h_b->h_dl_client,
                                             p_sys_dl_deal_struct_h_b->h_indentity_no,
                                             MS_CCS_FC,
                                             chr_l_failcode_A,
                                             APL_NULL_STRING,
                                             APL_NULL_STRING,
                                             &l_debug_info_ptr) )
      {
      	APL_GOBACK_FAIL
      }
   }
	


  

   strcpy(l_dl_dealaudit_struct_ha->h_dl_client, p_sys_dl_deal_struct_h_b->h_dl_client);
   strcpy(l_dl_dealaudit_struct_ha->h_indentity_no,    p_sys_dl_deal_struct_h_b->h_indentity_no);
   strcpy(l_dl_dealaudit_struct_ha->h_trail_for, "T");
   strcpy(l_dl_dealaudit_struct_ha->h_processdetail, p_intl_envdatastruct_h->processtion);
   strcpy(l_dl_dealaudit_struct_ha->h_proc_usr, p_intl_envdatastruct_h->usr);
   strcpy(l_dl_dealaudit_struct_ha->h_logdate, chr_l_sysdatetime);
   strcpy(l_dl_dealaudit_struct_ha->h_fail_cd, chr_l_failcode_A);
   l_dl_dealaudit_struct_ha->h_subfailreas_cd= 0;
   l_dl_dealaudit_struct_ha->h_qty = p_sys_dl_deal_struct_h_b->h_qty;
   strcpy(l_dl_dealaudit_struct_ha->h_dlfromord, p_sys_dl_deal_struct_h_b->h_dlfromord);

   if ( APL_FAILURE == CR_Mod_CLHAudTrail( l_dl_dealaudit_struct_ha,
                                       l_debug_info_ptr ) )
   {
      APL_GOBACK_FAIL;
   }

     

         if (APL_FAILURE==EI_Mod_MQData(p_sys_dl_deal_struct_h_b->h_dl_client,
                                        p_sys_dl_deal_struct_h_b->h_indentity_no,
													 NULL,NULL,
													 "T",
                                        l_debug_info_ptr))
             APL_GOBACK_FAIL

	if(GBDbInsIMSGENT(MS_MSGNO_534, p_sys_dl_deal_struct_h_b->h_indentity_no,
								p_sys_dl_deal_struct_h_b->h_dl_client,
								'Y',
								APL_NULL_STRING,
								l_debug_info_ptr) == APL_FAILURE)
	{
			APL_GOBACK_FAIL
	}
	
	strcpy(chr_l_client_old, p_sys_dl_deal_struct_h_b->h_dl_client);
	}
	else
	{
		if(!strcmp(chr_l_client_old, p_sys_dl_deal_struct_h_b->h_dl_client))
		{
			if(APL_FAILURE == DL_Prnt_FailTxRptFtr(fp, dbl_l_amount_sum, l_quantity_sum,APL_NO_IND))
			{
				APL_GOBACK_FAIL;
			}

		}
	}
}
	else 
		{
			for (i=0;i<119;fprintf(fp, "-"),i++);
			fprintf(fp, "\n");
			fprintf(fp, "%48s", chr_l_space);
			fprintf(fp, "No Failed Transactions  \n");
			for (i=0;i<119;fprintf(fp, "-"),i++);
			fprintf(fp, "\n");
		}
	
	if(!strcmp(l_grand_tot_flag, APL_YES_IND))
	{
		if(APL_FAILURE == DL_Prnt_FailTxRptFtr(fp, l_grand_amount_sum, l_grand_quantity_sum, APL_YES_IND))
		{
			APL_GOBACK_FAIL;
		}
	}
   RETURN_SUCCESS :

         CO_ProcMonitor(p_logfile,
						"Leaving Function DL_Prnt_FailTxRpt successfully",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_SUCCESS);

   RETURN_FAILURE :

         CO_ProcMonitor(p_logfile,
						"Leaving Function CDBDPrintMTFDetFn with errors",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_FAILURE);
}


int DL_Prnt_FailDetTxRptHdr(FILE *fp, char *chr_p_client,
									DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
		int i=0;
		char chr_l_cname[66] = APL_NULL_STRING;
		char chr_l_cname_desc[26] = APL_NULL_STRING;

		fprintf(fp, "\nAccount	: %-10s\n", chr_p_client);

		
		if(CO_Rtv_FldValChar("cln_name", "mt_client", "cln_code",
							chr_p_client, 
							chr_l_cname,
							l_debug_info_ptr) == APL_FAILURE)
		{
			return(APL_FAILURE);
		}

		strncat(chr_l_cname_desc, chr_l_cname, CLT_NAME_LEN);
		fprintf(fp, "%-25s\n", chr_l_cname_desc);

		for (i=0;i<119;fprintf(fp, "-"),i++);
		fprintf(fp, "\n");

		fprintf(fp, "Reference No.    Instrurity                 ");
		fprintf(fp, " Txn                  Quantity ");
		fprintf(fp, "            Amount ");
		fprintf(fp, "CSD         Broker                   \n");
		for (i=0;i<119;fprintf(fp, "-"),i++);
		fprintf(fp, "\n");
		return(APL_SUCCESS);
}


int DL_Prnt_FailTxRptFtr(FILE *fp, double p_amount_sum, double p_qty_sum, char *p_grand_tot_flag)
{
	int i=0;
	char *chr_l_space	=APL_NULL_STRING;

		if(!strcmp(p_grand_tot_flag, APL_NO_IND))
		{
				  for (i=0;i<119;fprintf(fp, "-"),i++);
				  fprintf(fp, "\nAccount Totals : ");
				  fprintf(fp, "%30s%25.4f %18.3f\n",chr_l_space, p_qty_sum, p_amount_sum);
				  for (i=0;i<119;fprintf(fp, "-"),i++);
				  fprintf(fp, "\n");
				  return(APL_SUCCESS);
		}
		else
		{
				  for (i=0;i<119;fprintf(fp, "-"),i++);
				  fprintf(fp, "\nGrand Total    : ");
				  fprintf(fp, "%30s%25.4f %18.3f\n",chr_l_space, p_qty_sum, p_amount_sum);
				  for (i=0;i<119;fprintf(fp, "-"),i++);
				  fprintf(fp, "\n");
				  return(APL_SUCCESS);
		}

}


int DL_Prnt_MTFRptHdr( FILE *fp, int p_position)
{
	char chr_l_addr_temp[41]	=APL_NULL_STRING;
	char *chr_l_space			=APL_NULL_STRING;
	char chr_l_format_str[14]		=APL_NULL_STRING;
	int int_l_pos				=0;
	int i						=0;
	int j						=0;

	if(p_position == 0)
			return(APL_FAILURE);

	strcat(chr_l_format_str, "%");
	if((p_position/2)*2 == p_position)
	{
		int_l_pos	=(p_position - 40)/2;
	}
	else
		int_l_pos =((p_position-40)+1)/2;

	strcat(chr_l_format_str, ltoa(int_l_pos));
	strcat(chr_l_format_str, "s%-40s\n");

	fprintf(fp, chr_l_format_str , chr_l_space, g_mt_commonsys_params_struct_h.ca_identname); 	


	return(APL_SUCCESS);
}



//main(int argc,char **argv)
int main(int argc,char **argv)//Changes done for AIX Migration
{
	struct sqlca sqlca;
   DEBUG_INFO_STRUCT_H *l_debug_info_ptr=NULL ;
	INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;
	FILE *l_finifile = NULL;
	FILE *l_flogfile = NULL;

   int int_l_retval=0;
	int int_num = 0;

   char chr_uname[APL_USERID_LEN] = APL_NULL_STRING;
   char chr_custody_id_b[APL_USERID_LEN] = APL_NULL_STRING;
   char chr_passwd[APL_PASSWD_LEN] = APL_NULL_STRING;
	char chr_l_logdir[PATH_LENGTH] = APL_NULL_STRING;
	char chr_l_inifile[PATH_LENGTH] = APL_NULL_STRING;

   EXEC SQL VAR chr_uname IS STRING;
   EXEC SQL VAR chr_custody_id_b IS STRING;
   EXEC SQL VAR chr_passwd IS STRING;

	sqlca.sqlcode = 0;

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ( ( l_finifile=fopen(chr_l_inifile,"r") ) == NULL)
	{
		APL_GOBACK_FAIL
	}

	

	APL_FETCH_DB_LOGIN_DETAILS(l_finifile, chr_custody_id_b, chr_uname, chr_passwd, APL_OUT_FILE, &l_debug_info_ptr)

   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;

   if (sqlca.sqlcode)
   {
      APL_GOBACK_FAIL
   }
   else
   {
		

		if (APL_FAILURE == CO_Rtv_RptFileName(	"3T",
														APL_LOGFILE_DESC,
														100,
														argv[5],
														argv,
														&l_flogfile,
														&l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL
		}

		

		EXEC SQL COMMIT WORK;

		if (sqlca.sqlcode)
		{
			CO_ProcMonitor(l_flogfile, "Could not commit after opening chr_log file", NULL, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			APL_GOBACK_FAIL
		}

		

		if (APL_FAILURE == CO_RtvSysParams(&l_debug_info_ptr))
		{
			CO_ProcMonitor(l_flogfile, "Failure from GetSysParams", &l_debug_info_ptr, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			APL_GOBACK_FAIL
		}

		

		strcpy(l_intl_env_data_h.usr, argv[3]);
		strcpy(l_intl_env_data_h.h_mode, argv[4]);
		strcpy(l_intl_env_data_h.processtion, argv[5]);
		strcpy(l_intl_env_data_h.auth_req, argv[6]);
		strcpy(l_intl_env_data_h.subprocess, argv[7]);
		strcpy(l_intl_env_data_h.h_process, argv[8]);

      int_l_retval = DL_Proc_MTFRpt( argv, l_flogfile, &l_intl_env_data_h, &l_debug_info_ptr);
      if ( int_l_retval == APL_FAILURE )
      {
			CO_ProcMonitor(l_flogfile, "CDBDoAMTFn returned failure", NULL, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			EXEC SQL ROLLBACK WORK RELEASE;
         APL_GOBACK_FAIL
      }
      else
      {
         EXEC SQL UPDATE SYS_BATCHPROC
         SET  status = 'completed'
         WHERE PROCESS_NAME=:argv[0]
         AND   PROC_INIT=:argv[1]
         AND   STARTDATE=:argv[2]
         AND   STATUS='started';

         EXEC SQL COMMIT WORK RELEASE;
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
         APL_GOBACK_SUCCESS
      }
   }

	RETURN_SUCCESS : exit(0);
	RETURN_FAILURE : exit(-1);
}
