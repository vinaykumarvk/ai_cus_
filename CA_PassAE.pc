


	
   
   
   
   
   
   
   
   
   
   
   



#include "CR_Common.h"
#include "CA_Common.h"

EXEC SQL INCLUDE SQLCA.H;

#define  AE_CLT_REVREJ_IND  "V"
#define  AE_CLT_REJ_IND  "R"
#define  AE_PASS_IND   "P"
#define  AE_PASS_FN_IND 0 
#define  AE_PASS_REJ_IND  1

int CA_ModCommAccEnt(char 		*h_proc_num,
                   char 		*h_batch_dt,
                   FILE 		*fl_userlog,
	                char 		**argv,
						 short 		pass_rej_ind,	
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

int CA_ModPassAccEnt(char 		*h_proc_num,
                    char 		*h_batch_dt,
                    FILE 		*fl_userlog,
	                char 		**argv,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

int CA_ModRstAccEnt(char 		*h_proc_num,
                   char 		*h_batch_dt,
                   FILE 		*fl_userlog,
	                char 		**argv,
						 INTL_ENV_DATA_STRUCT_H *p_intlenv_data_struct_h,	
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr);




int CA_ModPassAccEnt(char 		*h_proc_num,
                    char 		*h_batch_dt,
                    FILE 		*fl_userlog,
	                char 		**argv,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	short pass_rej_ind = AE_PASS_FN_IND;

	if	(  CA_ModCommAccEnt(h_proc_num,
        			          h_batch_dt,
                   		 fl_userlog,
	                		 argv,
						 		 pass_rej_ind,	
                   		 l_debug_info_ptr) == APL_FAILURE
		)
	{
		APL_GOBACK_FAIL
	}
  
	 
      APL_GOBACK_SUCCESS
      RETURN_SUCCESS  :
      {
         return (APL_SUCCESS);
      }
      RETURN_FAILURE  :
      {
         return (APL_FAILURE);
      }

}




int CA_ModRstAccEnt(char 		*h_proc_num,
                   char 		*h_batch_dt,
                   FILE 		*fl_userlog,
	                char 		**argv,
						 INTL_ENV_DATA_STRUCT_H *p_intlenv_data_struct_h,	
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	short pass_rej_ind = AE_PASS_REJ_IND;
	
	if	(  CA_ModCommAccEnt(h_proc_num,
        			          h_batch_dt,
                   		 fl_userlog,
	                		 argv,
						 		 pass_rej_ind,	
                   		 l_debug_info_ptr) == APL_FAILURE
		)
	{
		APL_GOBACK_FAIL
	}

	 
      APL_GOBACK_SUCCESS
      RETURN_SUCCESS  :
      {
         return (APL_SUCCESS);
      }
      RETURN_FAILURE  :
      {
         return (APL_FAILURE);
      }

}




int CA_ModCommAccEnt(char 		*h_proc_num,
                   char 		*h_batch_dt,
                   FILE 		*fl_userlog,
	                char 		**argv,
						 short 		pass_rej_ind,	
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char	chr_a_sts_rev[APL_STATUS_LEN] = APL_NULL_STRING;
	char	chr_a_sts_pay[APL_STATUS_LEN] = APL_NULL_STRING;
	char	chr_a_payacc_pcrej_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	char	chr_a_payacc_rvrej_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	char	chr_a_payacc_pass_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	char	chr_sys_date_time[APL_DATE_LEN] = APL_NULL_STRING;

	
	
	
	

	
	
	strcpy(chr_a_sts_rev,STATUS_REVERSED);
	strcpy(chr_a_sts_pay,STATUS_MSG_PAID_CLSD);
	strcpy(chr_a_payacc_rvrej_ind,AE_CLT_REVREJ_IND);
	strcpy(chr_a_payacc_pcrej_ind,AE_CLT_REJ_IND);
	strcpy(chr_a_payacc_pass_ind,AE_PASS_IND);

	
	if (  CO_RtvSysDtTime(chr_sys_date_time,l_debug_info_ptr) == APL_FAILURE )
   {
     APL_GOBACK_FAIL
   } 
	
	

		if	( pass_rej_ind == AE_PASS_FN_IND )
		{
			
			EXEC SQL UPDATE CACHEQUE
			SET 
			AE_PASSIND = :chr_a_payacc_pass_ind,
			ACCESS_STAMP = :chr_sys_date_time
			WHERE CLT_SEQNUM=:h_proc_num
				AND HF_DATE=:h_batch_dt;
	
			IS_ANY_ORA_ERROR;
		}
		else if ( pass_rej_ind == AE_PASS_REJ_IND )
		{
			
			EXEC SQL UPDATE CACHEQUE
			SET   HF_DATE = NULL,
					AE_PASSIND = DECODE (STAT_PYMT,:chr_a_sts_rev,:chr_a_payacc_rvrej_ind,:chr_a_sts_pay,:chr_a_payacc_pcrej_ind), 
					ACCESS_STAMP = :chr_sys_date_time
			WHERE CLT_SEQNUM=:h_proc_num
				AND HF_DATE=:h_batch_dt;
		
			IS_ANY_ORA_ERROR;
		}

	CO_ProcMonitor(fl_userlog,"Updated Corp Act Payment Records",NULL,NULL);

	 
      APL_GOBACK_SUCCESS
      RETURN_SUCCESS  :
      {
         return (APL_SUCCESS);
      }
      RETURN_FAILURE  :
      {
         return (APL_FAILURE);
      }
}
