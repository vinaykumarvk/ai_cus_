













 
#include "stdio_64.h"
#include <unistd.h>
#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "MT_Interface.h"

#define SUN_MACRO\
	fprintf(APL_OUT_FILE,"enterd fun |%s|",__FUNCTION__);

EXEC SQL INCLUDE SQLCA;

int main(int argc,char **argv) //AIX - Warnings Removal
{
	SUN_MACRO

	
	
	EXEC SQL BEGIN DECLARE SECTION;

	char  chr_h_server_name[20] = APL_NULL_STRING;
	DEBUG_INFO_STRUCT_H **l_debug_info_ptr ;
	EXEC SQL VAR chr_h_server_name IS STRING;	
	EXEC SQL END DECLARE SECTION;
	
	struct sqlca sqlca;

	FILE *chr_finifile;
	char chr_inifile[PATH_LENGTH],chr_l_uname[APL_USERID_LEN],chr_l_passwd[APL_PASSWD_LEN],chr_custody_id_b[APL_USERID_LEN];	
	DEBUG_INFO_STRUCT_H *l_debuginfo = (DEBUG_INFO_STRUCT_H *)NULL;

   memset(chr_inifile,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_l_uname,APL_NULL_CHAR,40);
   memset(chr_l_passwd,APL_NULL_CHAR,40);	

	strcpy(chr_h_server_name,APL_NULL_STRING);	

   if ( ( (l_debug_info_ptr) = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *)) ) == NULL )
		APL_GOBACK_FAIL ;

	if ( argc != 2)
	{
		printf("\n Invalid Server Name ... \n ");
		APL_GOBACK_FAIL
	}
	else
	{
		sscanf(argv[1]+3,"%s",chr_h_server_name); //AIX - Warnings Removal
	}

	printf("\n *********************  Server to be killed is :%s:*****************\n",chr_h_server_name);

	strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_inifile,"/intl_sun.cfg");
	if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
	        APL_GOBACK_FAIL;

   APL_FETCH_DB_LOGIN_DETAILS(chr_finifile, chr_custody_id_b, chr_l_uname, chr_l_passwd , APL_OUT_FILE , &l_debuginfo)
   EXEC SQL CONNECT :chr_l_uname IDENTIFIED BY :chr_l_passwd;
   if(sqlca.sqlcode < 0)
   {
	  printf("\n Data Base Error Found During Connecting to Data Base sqlca.sqlcode is :%d:.......\n",sqlca.sqlcode);
     APL_GOBACK_FAIL
   }



	EXEC SQL UPDATE PRO_DAEMON_STATUS SET STATUS = 0 where PROC_NAME = :chr_h_server_name;
	IS_ANY_ORA_ERROR;
	

   APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

   EXEC SQL COMMIT ;
        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of UpdateDaemonStatus \n",NULL,NULL);
        fclose(chr_finifile);
        exit(0);

RETURN_FAILURE:
   EXEC SQL ROLLBACK;
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of UpdateDaemonStatus \n",NULL,NULL);
        fclose(chr_finifile);
        exit(-1);
}
