
#include "stdio_64.h"
#include "IV_Control_A.h" 

EXEC SQL INCLUDE SQLCA;

	/* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
	FILE 	*fl_techlog			= NULL; 
	FILE 	*fl_userlog			= NULL;
    #else
    FILE *fl_techlog = APL_OUT_FILE;
    FILE *fl_userlog = APL_OUT_FILE;
    #endif
   /* Added by kotubabu for Linux Migration-End*/

int main(int argc, char **argv[]) 
{

	DEBUG_INFO_STRUCT_H  *l_debug_info_struct  =  NULL;
	DEBUG_INFO_STRUCT_H  **l_debug_info_ptr  =  NULL;
	l_debug_info_ptr = &l_debug_info_struct;
	
	int	int_retval	= 0;
	FILE 	*chr_finifile	= NULL;
	/* Added by kotubabu for Linux Migration -Start*/
	#ifdef OS_LINUX
	 fl_techlog = APL_OUT_FILE;
	 fl_userlog = APL_OUT_FILE;
    #endif
   /* Added by kotubabu for Linux Migration-End*/
	char 	chr_inifile[PATH_LENGTH]=APL_NULL_STRING;
	char 	chr_uname[APL_USERID_LEN]=APL_NULL_STRING;
	char 	chr_passwd[APL_PASSWD_LEN]=APL_NULL_STRING;
	char	chr_custody_id_b[APL_USERID_LEN]=APL_NULL_STRING;

	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR chr_uname 	IS STRING;
	EXEC SQL VAR chr_passwd IS STRING;

	EXEC SQL END DECLARE SECTION;
	struct sqlca sqlca;
	
   strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_inifile,"intl_sun.cfg");

	if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
	exit(-1);
	strcpy(chr_custody_id_b,APL_NULL_STRING);

	APL_FETCH_DB_LOGIN_DETAILS(chr_finifile, chr_custody_id_b, chr_uname, chr_passwd , APL_OUT_FILE , l_debug_info_ptr)
	EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;
	IS_ANY_ORA_ERROR
		
	IS_ANY_ORA_ERROR

	fclose(chr_finifile);
   
	if (APL_FAILURE == CO_Rtv_RptFileName("1D",
                                       APL_LOGFILE_DESC,
                                       100,
                                       (char *)argv[5], 
                                       (char **)argv,
                                       &fl_userlog,
                                       l_debug_info_ptr) )
   {
      exit(-1);
   }


   if (APL_FAILURE == CO_Rtv_RptFileName("1d",
                                       APL_LOGFILE_DESC,
                                       100,
                                       (char *)argv[5], 
                                       (char **)argv,
                                       &fl_techlog,
                                       l_debug_info_ptr) )
   {
      exit(-1);
   }	

	EXEC SQL COMMIT;
	IS_ANY_ORA_ERROR

	if (APL_FAILURE == IV_CallDetBillPrnt(argv,l_debug_info_ptr))
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting Unsuccessfully out of IV_CallDetBillPrnt\n",NULL,NULL);	

		if (  CO_ChkErr(*l_debug_info_ptr)   == APL_SUCCESS   )
		{
			CO_PrnErr(*l_debug_info_ptr);
			APL_GOBACK_FAIL
		}

		CO_FreeErrLst(l_debug_info_ptr);//AIX Warning Removal
		EXEC SQL ROLLBACK;
		IS_ANY_ORA_ERROR

		APL_GOBACK_FAIL
	}	
	else
	{
		EXEC SQL COMMIT;
		IS_ANY_ORA_ERROR

		CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of IV_CallDetBillPrnt\n",NULL,NULL);	
		APL_GOBACK_SUCCESS
	}


	CO_FreeErrLst(l_debug_info_ptr);//AIX Warning Removal


	APL_GOBACK_SUCCESS
	
	RETURN_SUCCESS:
	CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of IV_PrntDetail\n",NULL,NULL);	
	fprintf(fl_userlog,"Exiting successfully out of IV_PrntDetail\n");
	fclose(fl_techlog);
	fclose(fl_userlog);
	exit(0); 


	RETURN_FAILURE:
	CO_ProcMonitor(APL_OUT_FILE,"Exiting Unsuccessfully out of IV_PrntDetail\n",NULL,NULL);	
	fprintf(fl_userlog,"Exiting successfully out of IV_PrntDetail\n");
	fclose(fl_techlog);
	fclose(fl_userlog);
	exit(1); 
}

