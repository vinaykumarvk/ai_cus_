#include "Intellect_Common.h"
#include "BT_Common.h"
#define APL_STATUS_START   "started"
#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA;
int main(int argc,char **argv) //AIX-Warnings Removal 
{
	struct sqlca sqlca;

	FILE *g_flogfile =(FILE *)NULL;
	FILE* g_logfile = APL_OUT_FILE;

	//DEBUG_INFO_STRUCT_H **l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **) NULL;
	DEBUG_INFO_STRUCT_H **l_debug_info_ptr=(DEBUG_INFO_STRUCT_H **)NULL;
	DEBUG_INFO_STRUCT_H *l_debug_info_struct=(DEBUG_INFO_STRUCT_H *)NULL;

 	l_debug_info_struct = (DEBUG_INFO_STRUCT_H *)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *)); //23/05/2012
 	APL_MALLOC_FAIL(l_debug_info_struct);

	
	l_debug_info_ptr = &l_debug_info_struct;

	
	FILE                *l_logfile = (FILE *)NULL;
	FILE 					*chr_finifile = NULL;

	
	SYS_DL_DEAL_STRUCT_H *p_dl_deal_struct_h;
	SYS_DL_DEAL_STRUCT_I *p_dl_deal_struct_i;  	

	 p_dl_deal_struct_h =(SYS_DL_DEAL_STRUCT_H *) calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
	 p_dl_deal_struct_i =(SYS_DL_DEAL_STRUCT_I *) calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));  

 	APL_MALLOC_FAIL(p_dl_deal_struct_h);
  	APL_MALLOC_FAIL(p_dl_deal_struct_i);
	
	DL_MARKSHORTAGE_STRUCT_H *l_dl_markshortage_struct_h;
	l_dl_markshortage_struct_h=(DL_MARKSHORTAGE_STRUCT_H*)calloc(1,sizeof(DL_MARKSHORTAGE_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_markshortage_struct_h);

	DL_MARKSHORTAGE_STRUCT_I *l_dl_markshortage_struct_i;
	l_dl_markshortage_struct_i=(DL_MARKSHORTAGE_STRUCT_I*)calloc(1,sizeof(DL_MARKSHORTAGE_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_markshortage_struct_i);

	EXEC SQL BEGIN DECLARE SECTION;

	INTL_ENV_DATA_STRUCT_H       *l_intl_env_data_h = NULL;
	int                          l_int_num = 0;
	char                         chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short                        l_i_chr_sys_access_stamp;
	char                         l_filename[51] = APL_NULL_STRING;
	int                          l_filebatch_no = 0;
	short                        l_i_filebatch_no = 0;
	char                         l_upload_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char l_seqno[10] = APL_NULL_STRING;
	short i_seqno = 0;
	short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
	short p_i_access_stamp_compare;

	double mark_qty = 0;
	double pool_qty = 0;
	char l_exch_code[4] =  APL_NULL_STRING;
	short i_exch_code = 0;
	char l_cpclt[11] = APL_NULL_STRING;
	short i_cpclt = 0;
	char                         **temp = ( char **)NULL;

	char  chr_g_log_buffer[BUFFER_LEN] = APL_NULL_STRING;
	char                 chr_inifile[PATH_LENGTH]         = APL_NULL_STRING;
	char chr_l_str_log_dir[PATH_LENGTH]             = APL_NULL_STRING ;

	char l_domcpclt[11] = APL_NULL_STRING;
	short i_domcpclt = 0;

	char l_mkttype[4] = APL_NULL_STRING;
	short i_mkttype = 0;

	char l_domcp_custody[11] = APL_NULL_STRING;
	short i_domcp_custody = 0;

	char l_cp_cltname[67] = APL_NULL_STRING;
	short i_cp_cltname = 0;

	 char l_dl_date[20] = APL_NULL_STRING;
	 short i_dl_date = 0;

	char l_setl_date[20] = APL_NULL_STRING;
	short i_setl_date = 0;

	char l_payin_date[20] = APL_NULL_STRING;
	 short i_payin_date = 0;

	char l_payout_date[20] = APL_NULL_STRING;
	short i_payout_date = 0;
    /* added by amish --31/05 --end */
	
    /* changes by amish --02/06 -start */
	char l_dl_class[3] =  APL_NULL_STRING;
	short i_dl_class = 0;

	char l_orig_refno[17] = APL_NULL_STRING;
	short i_orig_refno = 0;
    /* added by amish --02/06 --end */
	
	/* changes by amish -- 06/06 --start */
	 double l_orig_qty = 0;
	 short i_orig_qty = 0;	 

	 char l_locn_code[5] = APL_NULL_STRING;
	 short i_locn_code = 0;
	/* changes by amish -- 06/06 -- end */

	/* amish - 26/10/2006 */
   char 	l_orig_ref[17] = APL_NULL_STRING;
   short i_orig_ref = 0;
   /* amish - 26/10/2006 */
	
   char l_mkt_type[4] =  APL_NULL_STRING; /* SLB CHANGES - AMISH */
   short i_mkt_type = 0; /* SLB CHANGES - AMISH */

   char parent_dl_stat[3] = APL_NULL_STRING;  /* ASHISH 13-06-2008 */
   char chr_org_refno[17] = APL_NULL_STRING;
   char pool_trans_flg[2] = APL_NULL_STRING;
   short i_pool_trans_flg = 0;
   //T1 Settlement changes CS0083803
   int auction_flag = 0;
   char l_str_start_date[APL_DATE_LEN] = APL_NULL_STRING;
   char l_str_payin_date[APL_DATE_LEN] = APL_NULL_STRING;
   char l_str_payout_date[APL_DATE_LEN] = APL_NULL_STRING;
   //T1 Settlement changes CS0083803
   short i_chr_org_refno = 0;
   short i_parent_dl_stat = 0;                /* ASHISH 13-06-2008 */
   short deal_identify_flg = 0;

   double char_l_val = 0.0;            /* Added by Gouse - Decimal Length for MF- 01/10/2011 */
   int l_int_cln = 0;

//HB_12174 - New deal column added for deal creation
	char l_trd_exch_code[4] =  APL_NULL_STRING;
	short i_trd_exch_code = 0;
	char l_trd_mkttype[4] = APL_NULL_STRING;
	short i_trd_mkttype = 0;
	char l_trd_settlement_no[16] =  APL_NULL_STRING;
	short i_trd_settlement_no = 0;
	char l_settlement_no[16] =  APL_NULL_STRING;
	short i_settlement_no = 0;
	//HB_12174 - New deal column added for deal creation

	EXEC SQL END DECLARE SECTION;
	
  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;
	
  EXEC SQL BEGIN DECLARE SECTION;

  EXEC SQL VAR l_dl_markshortage_struct_h->h_settlement_no IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_checker IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_maker IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_dl_client IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_dl_ref_no IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_instr_code IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_status IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_pool_trans IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_access_stamp IS STRING;
  EXEC SQL VAR l_dl_markshortage_struct_h->h_depo_cd IS STRING;	
  EXEC SQL VAR l_dl_markshortage_struct_h->h_dp_id IS STRING;
  EXEC SQL VAR parent_dl_stat IS STRING;     /* ASHISH 13-06-2008 */
  EXEC SQL VAR chr_org_refno IS STRING;
  EXEC SQL VAR pool_trans_flg IS STRING;

  EXEC SQL END DECLARE SECTION;


 //l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *)); //23/05/2012
	if(CO_Get_DBConnect(l_debug_info_ptr) == APL_FAILURE)
	{
		APL_GOBACK_FAIL

	}
	   strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
   	strcat(chr_inifile,"intl_sun.cfg");

	   if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL )
	   {
	     fprintf(APL_OUT_FILE,"Unable to open intl_sun.cfg\n");
					      APL_GOBACK_FAIL
	   }

	if (APL_FAILURE == CO_Rtv_RptFileName( "AMS",
				APL_LOGFILE_DESC,
				100,
				argv[5],
				argv,
				&g_flogfile,
				l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL
			CO_ProcMonitor(g_flogfile, "Failure from CO RTY:", l_debug_info_ptr, NULL);
	}

	
	
	if(BT_Status_Update(argv[0],
				argv[1],
				argv[2],
				APL_STARTED_STATUS,
				l_debug_info_ptr) ==APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	
	
	if(APL_FAILURE == CO_SplitStr(argv[9],
				'|',
				&l_int_num,&temp))
	{
		CO_ProcMonitor(g_flogfile, "Failure from StrSplitFn", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}

	if (l_int_num != 2)
	{
		CO_ProcMonitor(g_flogfile, "Improper Number of arguments", l_debug_info_ptr, NULL);
		APL_GOBACK_FAIL
	}

	APL_IF_DEBUG
	{
		printf("\n the no of arguments |%d|",l_int_num);
		printf("\n the arguments are |%s|",temp[0]);
		printf("\n the arguments are |%s|",temp[1]);

	}
	strcpy(l_filename,temp[0]);
	strcpy(l_upload_dt,temp[1]);

	 l_intl_env_data_h= (INTL_ENV_DATA_STRUCT_H*)calloc(1,sizeof(INTL_ENV_DATA_STRUCT_H));
      APL_MALLOC_FAIL(l_intl_env_data_h);


	strcpy(l_intl_env_data_h->usr,    argv[3]);
	strcpy(l_intl_env_data_h->h_mode,       argv[4]);
	strcpy(l_intl_env_data_h->processtion,  argv[5]);
	strcpy(l_intl_env_data_h->auth_req,  argv[6]);
	strcpy(l_intl_env_data_h->subprocess,   argv[7]);
	strcpy(l_intl_env_data_h->h_process,    argv[8]);


	if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}
	
	strcpy(l_dl_markshortage_struct_h->h_access_stamp,chr_sys_access_stamp);
	l_dl_markshortage_struct_i->i_access_stamp =0;
	strcpy(l_dl_markshortage_struct_h->h_checker,l_intl_env_data_h->usr);
	l_dl_markshortage_struct_i->i_checker=0;
	strcpy(l_dl_markshortage_struct_h->h_checker_dt,chr_sys_access_stamp);
	l_dl_markshortage_struct_i->i_checker_dt=0;
	strcpy(l_dl_markshortage_struct_h->h_status,STATUS_AUTH);
	l_dl_markshortage_struct_i->i_status =0;



	EXEC SQL SELECT FILELINKINFO INTO :l_filebatch_no:l_i_filebatch_no FROM DL_ORD_SUMM
		WHERE UPLD_DATE = :l_upload_dt and
		FILE_NAME = :l_filename;
	printf("\n sqlcacode for getting batch no  is |%d|",sqlca.sqlcode);
	IS_ANY_ORA_ERROR
	
		 fprintf(g_flogfile,"File Name is |%s|\n",l_filename);
		/*
			sprintf(chr_g_log_buffer,"FILE NAME=|%s|",l_filename);
			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
   */
	   fprintf(g_flogfile,"File Batch No is|%d|\n",l_filebatch_no);
		/*
			sprintf(chr_g_log_buffer,"FILE BATCH NO=|%d|",l_filebatch_no);
			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
    */
	   /* ASHISH 13-06-2008 */
		EXEC SQL DECLARE markshortage CURSOR FOR select INSTR_CODE,DL_CLIENT,SETTLEMENT_NO,DL_REF_NO,AVAIL_QTY,
		SHORTAGE_QTY,STATUS,ACCESS_STAMP,MAKER,MAKER_DT,DEPO_CODE,QTY,FILEBATCH_NO,POOL_TRANS, MKT_TYPE , EXCH_CODE 
		from DL_MARKSHORTAGE
		WHERE
		FILEBATCH_NO = :l_filebatch_no
		AND STATUS = 'UU';
		printf("\n opening markshortage cursor  |%d|",sqlca.sqlcode);
		IS_ANY_ORA_ERROR

		EXEC SQL OPEN markshortage;
		IS_ANY_ORA_ERROR
		for(;;)
		{
		    i_pool_trans_flg = 0;
			//T1 Settlement changes CS0083803
			auction_flag=0;
			memset(l_str_start_date,APL_NULL_CHAR,sizeof(l_str_start_date));
			memset(l_str_payin_date,APL_NULL_CHAR,sizeof(l_str_payin_date));
			memset(l_str_payout_date,APL_NULL_CHAR,sizeof(l_str_payout_date));
			//T1 Settlement changes CS0083803

			EXEC SQL FETCH markshortage INTO :l_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code,
									:l_dl_markshortage_struct_h->h_dl_client:l_dl_markshortage_struct_i->i_dl_client,
									:l_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no,
									:l_dl_markshortage_struct_h->h_dl_ref_no:l_dl_markshortage_struct_i->i_dl_ref_no,
									:l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
									:l_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
									:l_dl_markshortage_struct_h->h_status:l_dl_markshortage_struct_i->i_status,
									:l_dl_markshortage_struct_h->h_access_stamp:l_dl_markshortage_struct_i->i_access_stamp,
									:l_dl_markshortage_struct_h->h_maker:l_dl_markshortage_struct_i->i_maker,
									:l_dl_markshortage_struct_h->h_maker_dt:l_dl_markshortage_struct_i->i_maker_dt,
									:l_dl_markshortage_struct_h->h_depo_cd:l_dl_markshortage_struct_i->i_depo_cd,
									:l_dl_markshortage_struct_h->h_qty:l_dl_markshortage_struct_i->i_qty,
									:l_dl_markshortage_struct_h->h_filebatch_no:l_dl_markshortage_struct_i->i_filebatch_no,
				                    :pool_trans_flg:i_pool_trans_flg,   
									:l_dl_markshortage_struct_h->h_mkt_type:l_dl_markshortage_struct_i->i_mkt_type,
									:l_dl_markshortage_struct_h->h_exch_code:l_dl_markshortage_struct_i->i_exch_code;
				  //T1 Settlement changes CS0083803

			
			if (APL_ZERO_RESULT_SET)
			{
				break;
			}
		
			IS_ANY_ORA_ERROR
			printf("\n after fetchin data sqlca.sqlcode |%d|",sqlca.sqlcode);
			/*
				 CO_ProcMonitor(g_flogfile,"DATA FETCHED SUCCESSFULLY",NULL,NULL);
				*/
				printf("\n here...........................\n");
			 fprintf(g_flogfile,"instr code  is |%s|\n",l_dl_markshortage_struct_h->h_instr_code);
		/*	 
			sprintf(chr_g_log_buffer,"instr code=|%s|",l_dl_markshortage_struct_h->h_instr_code);
			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
		*/
		 fprintf(g_flogfile,"client  is |%s|\n",l_dl_markshortage_struct_h->h_dl_client);

		 fprintf(g_flogfile,"refno  is |%s|\n",l_dl_markshortage_struct_h->h_dl_ref_no);
			 
			 /*
			sprintf(chr_g_log_buffer,"client =|%s|",l_dl_markshortage_struct_h->h_dl_client);
			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			*/
			 fprintf(g_flogfile,"shortage is  |%lf|\n",l_dl_markshortage_struct_h->h_shortage_qty);
			 fprintf(g_flogfile,"pool_trans_flg = |%s| \n",pool_trans_flg);
			 /*
			sprintf(chr_g_log_buffer,"shortage qty =|%lf|",l_dl_markshortage_struct_h->h_shortage_qty);
			CO_ProcMonitor(g_flogfile,chr_g_log_buffer,NULL,NULL);
			*/

			 /*
			if (APL_ZERO_RESULT_SET)
			{
				break;
			}
		
			IS_ANY_ORA_ERROR
			*/
				if(!strcmp(l_dl_markshortage_struct_h->h_maker,l_intl_env_data_h->usr))
				{
					CO_ProcMonitor(g_flogfile,"Maker Same as Checker",NULL,NULL);
                 /*
						APL_GOBACK_FAIL;
						*/
				}
				else
				{

						/*Start - ISKB-354 Changes of Depo Client ID -Rahul 16Jul2007*/
						EXEC SQL SELECT  COUNT(*) into :l_int_cln FROM MT_CLI_DEPO_MAP WHERE 
								STATUS='AA' AND CLN_CODE = :l_dl_markshortage_struct_h->h_dl_client 
								AND CLN_DEPO_CODE = :l_dl_markshortage_struct_h->h_depo_cd ;
						if ( l_int_cln == 0)
						{
							fprintf(g_flogfile,"\nShortage can Not be Authorize : Reference Number |%s|\n",l_dl_markshortage_struct_h->h_dl_ref_no);
							fprintf(g_flogfile,"Depo Client Id Not Maintain : Client Code |%s|  and  Depo Id |%s|\n",l_dl_markshortage_struct_h->h_dl_client,l_dl_markshortage_struct_h->h_depo_cd );
										continue;
						}
						/*End - ISKB-354 Changes of Depo Client ID -Rahul 16Jul2007*/

						if(strcmp(l_dl_markshortage_struct_h->h_status,STATUS_DEL_UAUTH))
						{
							//T1 Settlement changes CS0083803
							if( (!strcmp(l_dl_markshortage_struct_h->h_mkt_type,"14")&& (strcmp(l_dl_markshortage_struct_h->h_exch_code,"NSE") == 0)) ||
							(!strcmp(l_dl_markshortage_struct_h->h_mkt_type,"4")&& (strcmp(l_dl_markshortage_struct_h->h_exch_code,"BSE") == 0)) ||
							(!strcmp(l_dl_markshortage_struct_h->h_mkt_type,"02")&& (strcmp(l_dl_markshortage_struct_h->h_exch_code,"MCS") == 0)))
								{
									EXEC SQL SELECT START_DATE,PAY_IN_DT,PAY_OUT_DT INTO :l_str_start_date,l_str_payin_date,l_str_payout_date FROM MT_SETTL_CAL
									WHERE SETTL_NO=:l_dl_markshortage_struct_h->h_settlement_no
									AND SETTL_TYPE=:l_dl_markshortage_struct_h->h_mkt_type
									AND EXCH_CODE=:l_dl_markshortage_struct_h->h_exch_code;
									Alert("sqlca.sqlcode==>|%d|",sqlca.sqlcode);
									Alert("l_str_start_date==>|%s|",l_str_start_date);
									Alert("l_str_payin_date==>|%s|",l_str_payin_date);
									Alert("l_str_payout_date==>|%s|",l_str_payout_date);
									Alert("shrinath");
									IS_ANY_ORA_ERROR
									auction_flag=1;
								}
								//T1 Settlement changes CS0083803
							EXEC SQL select qty into :pool_qty FROM dl_poolaccdmp    
							WHERE
							FILEBATCH_NO = :l_filebatch_no
							AND settlemt_no=:l_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
							AND instr_code=:l_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code
							AND DEPO_CODE = :l_dl_markshortage_struct_h->h_depo_cd
							AND MKT_TYPE IN (SELECT MKT_TYPE FROM DL_DEAL 
							WHERE IDENTIY_NO =:l_dl_markshortage_struct_h->h_dl_ref_no
							AND CLIENT = :l_dl_markshortage_struct_h->h_dl_client);

							printf("\n 3 sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
							IS_ANY_ORA_ERROR;
							fprintf(g_flogfile,"PoolAcc Dump Quantity is  |%lf|\n",pool_qty);
							printf("\n QTY IN POOLACCDMP TABLE IS |%lf|\n",pool_qty);

							/* Added by Gouse - Decimal Length for MF- 01/10/2011 - Start */
						   IF_COND_EXISTS("QTY_RND_MF_MKT","QTY_RND_FOR_MF_MKT")
						   {
								CR_Proc_InstrQtyRound_Chk(l_dl_markshortage_struct_h->h_avail_qty,l_dl_markshortage_struct_h->h_instr_code, &char_l_val, l_debug_info_ptr );
								l_dl_markshortage_struct_h->h_avail_qty =char_l_val;
							Alert("Chk : Available Qty in condition = |%lf|",l_dl_markshortage_struct_h->h_avail_qty);
							fflush(stdout);
						   }
							/* Added by Gouse - Decimal Length for MF- 01/10/2011 - End */
							
							EXEC SQL SELECT MKT_TYPE INTO :l_mkt_type:i_mkt_type FROM DL_DEAL 
									WHERE IDENTIY_NO =:l_dl_markshortage_struct_h->h_dl_ref_no
									AND CLIENT = :l_dl_markshortage_struct_h->h_dl_client;
							printf("\n MKT TYPE sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
							IS_ANY_ORA_ERROR;
							
							printf("\n market type is |%d|\n",l_mkt_type); // %specifier changed from s to d by deependra - retro from hb_dev

							/* changes by amish -- 01/06 */
							EXEC SQL select sum(a.AVAIL_QTY) into :mark_qty FROM dl_markshortage A ,DL_DEAL B
							where a.settlement_no = :l_dl_markshortage_struct_h->h_settlement_no:l_dl_markshortage_struct_i->i_settlement_no 
							and a.instr_code = :l_dl_markshortage_struct_h->h_instr_code:l_dl_markshortage_struct_i->i_instr_code
							and a.FILEBATCH_NO = :l_filebatch_no
							and a.DEPO_CODE = :l_dl_markshortage_struct_h->h_depo_cd
							AND B.MKT_TYPE = :l_mkt_type
							AND a.dl_client= B.CLIENT
							 AND A.DL_REF_NO = B.IDENTIY_NO;
							printf("\n 4 sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
							IS_ANY_ORA_ERROR;	

							fprintf(g_flogfile,"Total Allocated Quantity is  |%lf|\n",mark_qty);
							if(pool_qty == mark_qty)
							{
								strcpy(p_dl_deal_struct_h->h_origindentity_no,l_dl_markshortage_struct_h->h_dl_ref_no);
								strcpy(p_dl_deal_struct_h->h_dl_client,l_dl_markshortage_struct_h->h_dl_client);
								printf("\nclient IN AUT is : %s\n",p_dl_deal_struct_h->h_dl_client);
								fflush(stdout);
								printf("AMISH--------Orig Identity No is IS |%s| \n",p_dl_deal_struct_h->h_origindentity_no);
								fflush(stdout);
								strcpy(p_dl_deal_struct_h->h_dlt,chr_sys_access_stamp);
								strcpy(p_dl_deal_struct_h->h_setldt,chr_sys_access_stamp);
								/*
								strcpy(p_dl_deal_struct_h->h_origindentity_no,p_dl_deal_struct_h->h_indentity_no);	
								*/
								/* changes by amish -05/06 */
								/*
								p_dl_deal_struct_h->h_origquantity=l_dl_markshortage_struct_h->h_qty;
								*/

								/*
								strcpy(chr_sys_date,chr_sys_access_stamp);
								*/
								printf("\n this is yours p_dl_deal_struct_h->h_dl_client %s \n",p_dl_deal_struct_h->h_dl_client);      
								fflush(stdout);
								strcpy(p_dl_deal_struct_h->h_deal_status,STATUS_CONF);
								strcpy(p_dl_deal_struct_h->h_dl_secstatus,STATUS_CONF);
								strcpy(p_dl_deal_struct_h->h_dl_mnystatus,STATUS_CONF); 
								
								 /* changes by amish --27/05 */
								/* changes by amish --31/05 */
								EXEC SQL SELECT EXCH_CODE,CP_CLT,DOMESTIC_CPCLT,MKT_TYPE,DOMCP_CUSTODYCLT,CP_CLTNAME,DEAL_DATE,
									  SETL_DATE,PAYIN_DT,PAYOUT_DT,DL_CLASS,ORIG_REFNO,LOCATION_CD,ORIG_QTY,TRD_EXCH,TRD_MKT_TYPE,TRD_SETL_NO,SETTLEMENT_NO
									into :l_exch_code:i_exch_code,:l_cpclt:i_cpclt,:l_domcpclt:i_domcpclt,:l_mkttype:i_mkttype,:l_domcp_custody:i_domcp_custody,:l_cp_cltname:i_cp_cltname,:l_dl_date:i_dl_date,:l_setl_date:i_setl_date,:l_payin_date:i_payin_date,:l_payout_date:i_payout_date,:l_dl_class:i_dl_class,:l_orig_refno:i_orig_refno,:l_locn_code:i_locn_code,:l_orig_qty:i_orig_qty,:l_trd_exch_code:i_trd_exch_code ,  :l_trd_mkttype:i_trd_mkttype,:l_trd_settlement_no:i_trd_settlement_no,l_settlement_no:i_settlement_no /* changes by amish --02/06 */ //HB_12174 - new column added
									FROM DL_DEAL 
									WHERE	CLIENT = :p_dl_deal_struct_h->h_dl_client
									AND IDENTIY_NO = :l_dl_markshortage_struct_h->h_dl_ref_no;
								IS_ANY_ORA_ERROR
								if(auction_flag==1)
								{
								strcpy(p_dl_deal_struct_h->h_settlement_no,l_settlement_no);
								}
								else
								{
								strcpy(p_dl_deal_struct_h->h_settlement_no,l_dl_markshortage_struct_h->h_settlement_no);	
								}
							//HB_12174 - new column added
							strcpy(p_dl_deal_struct_h->h_trd_exch,l_trd_exch_code);
							strcpy(p_dl_deal_struct_h->h_trd_setl_no,l_trd_settlement_no);
							strcpy(p_dl_deal_struct_h->h_trd_mkt_type,l_trd_mkttype);
							//HB_12174 - new column added
								strcpy(p_dl_deal_struct_h->h_exch_code,l_exch_code);
								strcpy(p_dl_deal_struct_h->h_countclt,l_cpclt);
								/* changes by amish --27/05 */
								strcpy(p_dl_deal_struct_h->h_domcpclt_cd,l_domcpclt);
								/* SLB CHANGES - AMISH 04042008*/
								/* strcpy(p_dl_deal_struct_h->h_mkt_type,l_mkttype); */

									 if( (!strcmp(l_exch_code,"NSE")) &&  (!strcmp(l_mkttype,"23") || !strcmp(l_mkttype,"24") || !strcmp(l_mkttype,"25")))
									 {
										   strcpy(p_dl_deal_struct_h->h_mkt_type,"25");
										   strcpy(p_dl_deal_struct_h->h_trd_mkt_type,"25"); //HB_12174 - new columns added - Interoperability
									 }
									 else if( (!strcmp(l_exch_code,"BSE")) &&  (!strcmp(l_mkttype,"18") || !strcmp(l_mkttype,"19") || !strcmp(l_mkttype,"20")))
									 {
										  strcpy(p_dl_deal_struct_h->h_mkt_type,"20");
										  strcpy(p_dl_deal_struct_h->h_trd_mkt_type,"20"); //HB_12174 - new columns added - Interoperability
						     } //Added by Prashant for markshortage of MCS 
							 else if( (!strcmp(l_exch_code,"MCS")) &&  (!strcmp(l_mkttype,"63") || !strcmp(l_mkttype,"64") || !strcmp(l_mkttype,"65")))
						     {
						           strcpy(p_dl_deal_struct_h->h_mkt_type,"65");
								   strcpy(p_dl_deal_struct_h->h_trd_mkt_type,"65"); //HB_12174 - new columns added - Interoperability
									 }
									 else
									 {
											strcpy(p_dl_deal_struct_h->h_mkt_type,l_mkttype);
											strcpy(p_dl_deal_struct_h->h_trd_mkt_type,l_trd_mkttype); //HB_12174 - new columns added - Interoperability
									 }	
								/* SLB CHANGES - AMISH 04042008*/
								strcpy(p_dl_deal_struct_h->h_domcp_custodyclt,l_domcp_custody);
								 strcpy(p_dl_deal_struct_h->h_countcltnm,l_cp_cltname);
								 /* changes by amish --31/05 --start */
								 strcpy(p_dl_deal_struct_h->h_dlt,l_dl_date);
								 strcpy(p_dl_deal_struct_h->h_setldt,l_setl_date);
								 strcpy(p_dl_deal_struct_h->h_payin_dt,l_payin_date);
								 strcpy(p_dl_deal_struct_h->h_payout_dt,l_payout_date);
								 /* changes by amish -- 31/05 --end */
									printf("\nEXCHANGE CODE IS |%s|\n",p_dl_deal_struct_h->h_exch_code);
								fflush(stdout);
									 printf("\ncounter party  IS |%s|\n",l_cpclt);
								fflush(stdout);
									 printf("\n deal class is |%s|\n",l_dl_class);
								fflush(stdout);
									 strcpy(p_dl_deal_struct_h->h_loccode,l_locn_code);
									 /* changes by amish -- 05/06 */
									 p_dl_deal_struct_h->h_origquantity=l_orig_qty;
									 printf("\n location code is |%s|\n",p_dl_deal_struct_h->h_loccode);
								fflush(stdout);
									 printf("\n ORIGINAL QUANTITY IS |%lf|\n",p_dl_deal_struct_h->h_origquantity);
								fflush(stdout);
									if(!strcmp(l_dl_class,SHORTAGERDEAL))
										{
											printf("\nin ifffffffffffffffffffff\n");
											fflush(stdout);
											 strcpy(p_dl_deal_struct_h->h_origindentity_no,l_orig_refno);
										}
									else
										{
											printf("\n in else *********************8\n");
								fflush(stdout);
											 strcpy(p_dl_deal_struct_h->h_origindentity_no,l_dl_markshortage_struct_h->h_dl_ref_no);	
										}	
								if(l_dl_markshortage_struct_h->h_shortage_qty == 0)
									 {  
										/*
											p_dl_deal_struct_h->h_allot_qty = l_dl_markshortage_struct_h->h_allot_qty;	
											int_return=DL_Mod_DefaultDealMS(p_dl_deal_struct_h,l_dl_markshortage_struct_h,l_intl_env_data_h,l_debug_info_ptr); 
											*/
											//T1 Settlement changes CS0083803
											if(auction_flag==1)
											{
												Alert("if auction_flag");
												EXEC SQL UPDATE DL_DEAL SET 
												QTY = :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
												ALLOT_QTY = :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
												SHORTAGE_QTY=:l_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
												AVAIL_QTY= 0,
			/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  LOG NO 351
												MKT_TYPE=:l_dl_markshortage_struct_h->h_mkt_type,
												SETTLEMENT_NO=:l_dl_markshortage_struct_h->h_settlement_no,
												DEAL_DATE=:l_str_start_date,
												SETL_DATE=:l_str_payin_date,
												PAYIN_DT=:l_str_payin_date,
												PAYOUT_DT=:l_str_payout_date
												WHERE
												IDENTIY_NO = :l_dl_markshortage_struct_h->h_dl_ref_no
												AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
												/* CHANGES BY AMISH --16/05 */	
												printf("\nUPDATE IN DEAL TABLE IN AUT MODE(SHORTAGE=0) |%d|\n",sqlca.sqlcode);
												IS_ANY_ORA_ERROR;
											}
											else
											{
												
												EXEC SQL UPDATE DL_DEAL SET 
												QTY = :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
												ALLOT_QTY = :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
												SHORTAGE_QTY=:l_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
												AVAIL_QTY= 0
			/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  LOG NO 351
												WHERE
												IDENTIY_NO = :l_dl_markshortage_struct_h->h_dl_ref_no
												AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
												/* CHANGES BY AMISH --16/05 */	
												printf("\nUPDATE IN DEAL TABLE IN AUT MODE(SHORTAGE=0) |%d|\n",sqlca.sqlcode);
												IS_ANY_ORA_ERROR;
											}
											//T1 Settlement changes CS0083803

							
									 }
									else
									 {
									//T1 Settlement changes CS0083803
										if(auction_flag==1)
										{
										Alert("else auction_flag");
									  /* shailesh 31-03-2008 ISKB 1028 Issue Log 111 changes for RSTT tag in message */ 
										EXEC SQL UPDATE DL_DEAL 
											SET
										   QTY      =  :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,	
											ALLOT_QTY = :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
											SHORTAGE_QTY=:l_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
											AVAIL_QTY= 0, 
											PARTIAL_IND_B= 'Y', /* shailesh 31-03-2008  ISKB 1028 Issue Log 111*/ 
		/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  - LOG NO 351
											MKT_TYPE=:l_dl_markshortage_struct_h->h_mkt_type,
											SETTLEMENT_NO=:l_dl_markshortage_struct_h->h_settlement_no,
											DEAL_DATE=:l_str_start_date,
											SETL_DATE=:l_str_payin_date,
											PAYIN_DT=:l_str_payin_date,
											PAYOUT_DT=:l_str_payout_date
											WHERE
											IDENTIY_NO = :l_dl_markshortage_struct_h->h_dl_ref_no
											AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
										printf("\nUPDATE IN DEAL TABLE IN AUT MODE |%d|\n",sqlca.sqlcode);/* CHANGES BY AMISH --16/05 */
										IS_ANY_ORA_ERROR;
										}
										else
										{
																				printf("\n UPDATING  PARTIAL_IND_B as Y ");
								fflush(stdout);
									  /* shailesh 31-03-2008 ISKB 1028 Issue Log 111 changes for RSTT tag in message */ 
										EXEC SQL UPDATE DL_DEAL 
											SET
										   QTY      =  :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,	
											ALLOT_QTY = :l_dl_markshortage_struct_h->h_avail_qty:l_dl_markshortage_struct_i->i_avail_qty,
										SHORTAGE_QTY=:l_dl_markshortage_struct_h->h_shortage_qty:l_dl_markshortage_struct_i->i_shortage_qty,
											AVAIL_QTY= 0, 
											PARTIAL_IND_B= 'Y' /* shailesh 31-03-2008  ISKB 1028 Issue Log 111*/ 
		/*									DEAL_STAT=:p_dl_deal_struct_h->h_deal_status */ // changes by amish - 19/05/2007  - LOG NO 351
											WHERE
											IDENTIY_NO = :l_dl_markshortage_struct_h->h_dl_ref_no
											AND CLIENT = :p_dl_deal_struct_h->h_dl_client;
										printf("\nUPDATE IN DEAL TABLE IN AUT MODE |%d|\n",sqlca.sqlcode);/* CHANGES BY AMISH --16/05 */
										IS_ANY_ORA_ERROR;	
										}
								//T1 Settlement changes CS0083803

										EXEC SQL SELECT DL_MARKSHORTAGESEQ.NEXTVAL INTO :l_seqno:i_seqno FROM DUAL;
										IS_ANY_ORA_ERROR;

										strcpy(p_dl_deal_struct_h->h_indentity_no,"SH_");
										strcat(p_dl_deal_struct_h->h_indentity_no,l_seqno);   	
										strcpy(p_dl_deal_struct_h->h_deal_status,STATUS_CONF);
										printf("\n*********identity no is     |%s|\n",p_dl_deal_struct_h->h_indentity_no);
								fflush(stdout);
										/*
											p_dl_deal_struct_h->h_allot_qty = l_dl_markshortage_struct_h->h_allot_qty;
											*/
										p_dl_deal_struct_h->h_qty = l_dl_markshortage_struct_h->h_shortage_qty;	
										printf("AMISH--------STATUS  IS |%s| \n",p_dl_deal_struct_h->h_deal_status);
								fflush(stdout);

										if( APL_FAILURE==DL_Mod_DefaultDealMS(p_dl_deal_struct_h,l_dl_markshortage_struct_h,l_intl_env_data_h,l_debug_info_ptr))
										{
											printf("\n Unsuccessfully from DL_Mod_DefaultDealMS ");
								fflush(stdout);
											APL_GOBACK_FAIL;
										}
										if(APL_FAILURE == DL_Mod_Posn(p_dl_deal_struct_h->h_dl_client,
																				p_dl_deal_struct_h->h_instr_code,
																				p_dl_deal_struct_h->h_loccode,
																				"",
																				'C',
																				'2',
																				&l_dl_markshortage_struct_h->h_shortage_qty,
																				 'D',
																				 "FREE",
																				 l_debug_info_ptr))
										{
											APL_GOBACK_FAIL;
										}
												
																				
									/*
										EXEC SQL UPDATE DL_SAFEK
											
												SET SAFEKEEP_POS = SAFEKEEP_POS + :l_dl_markshortage_struct_h->h_avail_qty,
													
													 VAL_REC	=	VAL_REC - ( :l_dl_markshortage_struct_h->h_qty )
													 
												WHERE
													INSTR_CODE = :p_dl_deal_struct_h->h_instr_code
												AND LOCATION_CD = :p_dl_deal_struct_h->h_loccode
												AND CLIENT = :p_dl_deal_struct_h->h_dl_client
												AND BLOCK_TYPE = 'FREE';
										IS_ANY_ORA_ERROR;
									*/
													

										printf("\nAMISH-------------COMPLETED-----------------\n");
								fflush(stdout);
									 }		
								

									strcpy(l_dl_markshortage_struct_h->h_status,STATUS_AUTH);//Added by Gouse - for UAT Issue - 02/06/2012
									EXEC SQL UPDATE DL_MARKSHORTAGE SET 
									CHECKER =:l_intl_env_data_h->usr:p_i_checker,
									CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
									ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
									STATUS =:l_dl_markshortage_struct_h->h_status:l_dl_markshortage_struct_i->i_status
									WHERE 
									DL_REF_NO =:l_dl_markshortage_struct_h->h_dl_ref_no
									AND DL_CLIENT = :l_dl_markshortage_struct_h->h_dl_client
									AND  FILEBATCH_NO = :l_dl_markshortage_struct_h->h_filebatch_no;/* CHANGES BY AMISH --16/05 */
									IS_ANY_ORA_ERROR;	
							}
							else
							{
								CO_ProcMonitor(g_flogfile,"Pool quantity and Total Allocated Quantity are not equal",NULL,NULL);
							}
						}
						else
						{
							EXEC SQL DELETE DL_MARKSHORTAGE 
							WHERE 
							DL_REF_NO =:l_dl_markshortage_struct_h->h_dl_ref_no
							AND DL_CLIENT = :l_dl_markshortage_struct_h->h_dl_client
							AND  FILEBATCH_NO = :l_dl_markshortage_struct_h->h_filebatch_no;
							IS_ANY_ORA_ERROR
						}
			 	}
			
		}
			APL_GOBACK_SUCCESS


			RETURN_SUCCESS :
				CO_ProcMonitor(g_flogfile, "SUCESS IN MAIN", l_debug_info_ptr, NULL);


			if(BT_Status_Completed(argv[0],
							argv[1],
							argv[2],
							l_debug_info_ptr)   ==  APL_FAILURE )
					{
						APL_GOBACK_FAIL
					}
			CO_Proc_RptClose(g_flogfile, l_debug_info_ptr);
			EXEC SQL COMMIT WORK;
			if(sqlca.sqlcode != 0)APL_GOBACK_FAIL
				exit(0);

			RETURN_FAILURE    :
			CO_Proc_RptClose(g_flogfile, l_debug_info_ptr);
			exit(-1);

}
