 /* COPYRIGHT NOTICE

 *  Copyright 2016 Intellect Design Arena Limited. All rights reserved.
 *  These materials are confidential and proprietary to
 *  Intellect Design Arena Limited and no part of these materials should 
 *  be reproduced, published, transmitted or distributed in any form or
 *  by any means, electronic, mechanical, photocopying, recording or
 *  otherwise, or stored in any information storage or retrieval system
 *  of any nature nor should the materials be disclosed to third parties
 *	 or used in any other manner for which this is not authorized, without
 *  the prior express written authorization of Intellect Design Arena Limited.	
 */ 
 /********************************************************************************
 *   Module Name         :         Regulatory Reports 
 *
 *   File Name           :         RR_ClntInstruction.pc 
 *
 *   Description         :         This file contains all functions to prepare Regulatory Reports
 *
 *     Version Control Block

 *  Date        Version     Author               Description
 *  --------   --------  ---------------  ---------------------------
 *  16/03/2006   1.0        Kouser Begum	This file contains all functions to prepare Regulatoy Report 
 *  29/07/2011   1.0.1.19   Shweta S		ISKB_4554 Retro for RBI_LEC_XML_Rpt_Format (from HDFC)
 *  13/10/2011 	 1.0.1.2    Bageshri S		ISKB_4554 - UAT fixes
 *  29/12/2011   1.0.1.3    Mytri K			RETRO from ICICI - IB_5067/IB_5106 - RBI LEC XML Rpt - Exchange Holiday Check Logic changes
 *  09/10/2013   1.0.1.4    Prateek Singh	ISKB_6213(Transaction Code 07 and 15 should be picked in DTR/DTS Report)
 *  25/10/2013   1.0.1.5    Prateek Singh	ISKB_6377(System generated trades were not picked up in DTS Report)
 *  18/11/2013   1.0.1.6    Prateek Singh	ISKB_6399(Errors in sebi reporting on event of part-redemption) 
 *  18/07/2014   1.0.1.7    Darrel Viegas	ISKB_455(Temp ISIN Enhancement)
 *  07/08/2014   1.0.1.8    Prateek Singh	ISKB_6793(In DDR Report where trades converted into hand delivery does not pick Reporting Type, also does not reflect in DDS)
 *  03/11/2014   1.0.1.9    Prateek Singh	ISKB_455(Temp ISIN UAT FIX) 
 *  05/10/2015   1.0.2.0    Prateek Singh	ISKB_1656(NSDL Transaction Report for Debt Deals) 
 *  22/07/2016   1.0.2.1    Swathi V		ISKB_1951(RBI XML - Name of the corresponding FPI should appear for the client type as FPI instead of its master account)
***************************************************************************************/

#include "CO_IndStructdef.h"
#include "CA_Common.h"
#include "CO_OthStructdef.h"
#include <unistd.h>	/*ISKB_198 - FPI Regulatory Reporting*/
EXEC SQL INCLUDE SQLCA.H;
#define PAGELENGTH 24
#define FILENAME_LEN_A            500 /* changes by amish */
#define FILEPATH_LEN              500

/*ISKB_4554 RBI_LEC_XML_Rpt_Format Retro -- 28072011 -- Shweta--Start*/
/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
int g_bnk_ind = 0;		/*0 for not exists, 1 for exists*/
/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
/*ISKB_4554 RBI_LEC_XML_Rpt_Format Retro -- 28072011 -- Shweta--End*/

/*ISKB_4554  -- Additional Chgs RBI_LEC_XML_Rpt_Format Shweta 12092011--Start*/ 
int g_for_loop_ctr = 0;
int g_for_dt_cnt = 0;
/*ISKB_4554  -- Additional Chgs RBI_LEC_XML_Rpt_Format Shweta 12092011--Start*/ 
char chr_seq_no[7]=APL_NULL_STRING;//Added by supriya for DTR,DDR xml report genration

/* Start - SEBI code Change - Rahul */
typedef struct  {
		 char h_trans_natr[25];
		 char h_settl_code[25];
		 char h_res_delay[25];
		 char h_rep_type[25];
		 char h_res_amend[25];
		 char h_instr_sub_type[25];
} REG_DAILY_STRUCT_H;
/* End - SEBI code Change - Rahul */

int Daily_FRep_ClntInst(char *p_sebi_rep,char *p_rep_name,char *p_chr_from_date,char *p_chr_to_date,char **argv,FILE *l_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char	chr_l_sysdate[APL_DATE_LEN];							
	char  chr_l_hbrokers_handoff_file_name[FILEPATH_LEN]   = APL_NULL_STRING;

   char  chr_l_hbrokers_handoff_file_name_new[500]   = APL_NULL_STRING; /*SEBI Code Change - Rahul */
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char chr_l_File_Name_new[FILENAME_LEN_A]   = APL_NULL_STRING;	//Changes for Excel Format
	char chr_l_Path[FILENAME_LEN_A]   = APL_NULL_STRING;		//Changes for Excel Format
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	/*(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Starts*/
	//	char  chr_l_buf[BUFFER_LEN] =  APL_NULL_STRING;
	char	chr_l_buf[1500]	=	APL_NULL_STRING;
	/*(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Ends*/
   char l_rowid1[APL_ROWID_LEN] =  APL_NULL_STRING;
  	short i_rowid1 = 0;
  
 	char l_cnt_date[20] = APL_NULL_STRING;
   short i_cnt_date = 0;
   char l_chr_tdate[11] = APL_NULL_STRING;
	short i_chr_tdate = 0;
	char l_chr_ddate[11] = APL_NULL_STRING;
   short i_chr_ddate = 0;

	char  l_cust_code[11] = APL_NULL_STRING;	//Changes for Excel Format
	short i_cust_code =0;
	char l_cln_code[11] = APL_NULL_STRING;
	short i_cln_code = 0;
	char  l_cln_sebi_reg_no[21] = APL_NULL_STRING;
	short icln_sebi_reg_no =0;
	char  l_sebi_sub_acc[16] = APL_NULL_STRING; /* By Harvinder Singh -- ISKB 1266 -- Date 13May2008 */
	short i_sebi_sub_acc=0;
	char  l_sys_date[12] = APL_NULL_STRING;
	short i_sys_date=0;
	char  l_cln_name[61] = APL_NULL_STRING;
	short i_cln_name = 0;
	char l_deal_date[12] = APL_NULL_STRING; /* Deal Date Fromat changed - Kouser */
   short i_deal_date = 0;     	
	char  l_exch_code[4] = APL_NULL_STRING;
	short i_exch_code =0;
	double  l_cost =0.0;
	short i_cost=0;
	double  l_qty=0.0;
	short i_qty=0;
	double  l_amt=0.0;
	short i_amt=0;
	char  l_instr_name[41] = APL_NULL_STRING;
	short i_instr_name=0;
	char  l_isin[13] = APL_NULL_STRING;
	short i_isin=0;
	char  l_instr_sub_type[4] = APL_NULL_STRING;
	short i_instr_sub_type=0;
	char  l_pty_sebi_reg_no[21] = APL_NULL_STRING;
	short i_pty_sebi_reg_no=0;
	char l_unique_ident[13] = APL_NULL_STRING;
	short i_unique_ident = 0;
	char l_str_uniq[13] = APL_NULL_STRING;
	short i_str_uniq = 0;
	
	char l_settl_code[2]=  APL_NULL_STRING;
	short i_settl_code = 0;
   char l_contrct_cd[17] = APL_NULL_STRING;
   short i_contrct_cd = 0;
   char l_trn_ind[2] = APL_NULL_STRING;
	short i_trn_ind = 0;
	char l_broker_cd[11] = APL_NULL_STRING;
	short i_broker_cd = 0;
	char l_ident_no[17] = APL_NULL_STRING;
	short i_ident_no = 0;
   char l_clh_flg[2] = APL_NULL_STRING;
	short i_clh_flg = 0;

	char l_syst_date[20] = APL_NULL_STRING;
	short i_syst_date = 0; 
   
   /* Changes - Start */
   char l_fclnt_trans[3] = APL_NULL_STRING;
   short i_fclnt_trans = 0;
   char l_r_delay[2] = APL_NULL_STRING;
	short i_r_delay = 0;
	char l_r_type[3]=  APL_NULL_STRING;
	short i_r_type = 0;
   char l_chr_trnid[13] = APL_NULL_STRING;
	short i_chr_trnid = 0;
   int l_r_change = 0;
   short i_r_change = 0;
   char l_corp_id[21] = APL_NULL_STRING;
	short i_corp_id = 0;
	char l_corp_clnt[11] = APL_NULL_STRING;
	short i_corp_clnt = 0;
   int l_corp_no = 0;
	short i_corp_no = 0;
   char l_instr_type[4] = APL_NULL_STRING;
   char l_instr_type_val[4] = APL_NULL_STRING;
	char l_trans_type[2] = APL_NULL_STRING;
	char l_dl_class[3] = APL_NULL_STRING;
	short i_dl_class = 0;
	char l_deal_cd[2] = APL_NULL_STRING;
	short i_deal_cd = 0;
	char l_repot_dt[20] = APL_NULL_STRING;
	short i_repot_dt = 0;
	char l_sebi_rept[2] = APL_NULL_STRING;
	short i_sebi_rept = 0;
	double l_chr_sqrate = 0.0;
	short i_chr_sqrate = 0;
	/*For Reporting Amended Deal - Rahul*/
	short l_amd_count = 0;  
	char l_sebi_reported[2] = APL_NULL_STRING;
	short i_sebi_reported = 0;
	/*For Reporting Amended Deal - Rahul*/
	
	char l_instr_type1[4] = APL_NULL_STRING; /* ISKB - 560: ASHISH 16-02-2008 */

	// By Bawa -- 7/22/2008 -- for sebi_sub_acc chngs 
	char	chr_l_cln_sebictg [5]	=	APL_NULL_STRING;
		
	/*ISKB_198 - FPI Regulatory Reporting - starts*/
	char l_record_ref[21] = APL_NULL_STRING;
	char l_fetch_query[10000] = APL_NULL_STRING;
	char l_temp_var[500] = APL_NULL_STRING;
	char l_delete_code[25] = APL_NULL_STRING;
	char l_amend_code[25] = APL_NULL_STRING;
	char l_new_code[25] = APL_NULL_STRING;
	char l_gen_excelrpt[1000] = APL_NULL_STRING;
	int l_i_retval = 0;
	char l_intl_root_path[FILEPATH_LEN] = APL_NULL_STRING;
	char chr_l_pdf_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char chr_l_xls_file[FILENAME_LEN_A] = APL_NULL_STRING;
	char chr_l_sysdatename[APL_DATE_LEN] = APL_NULL_STRING;
	int l_db_seq = 0;
	pid_t l_proc_id;
	char l_deal_stat[3] = APL_NULL_STRING;
	char l_location_cd[5] = APL_NULL_STRING;
	char l_deal_code[2] = APL_NULL_STRING;
	char l_off_market[2] = APL_NULL_STRING;
	char l_mapped_deal[17] = APL_NULL_STRING;
	short i_deal_stat=0;
	short i_location_cd=0;
	short i_deal_code=0;
	short i_off_market=0;
	short i_mapped_deal=0;
		
   FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;
   FILE  *l_ptr_hbrokers_handoff_file_new  =  NULL; /*SEBI Code Change - Rahul */ 

	INTL_REPT_STRUCT_H   *l_intl_rept_struct_ha  =NULL;
	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha_xls  =NULL;	//Changes for Excel Format
   memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	
	/* changes by amish 19/05 */
   memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));
   /*SEBI Code Change - Rahul */
	memset(chr_l_hbrokers_handoff_file_name_new, NULL, sizeof(chr_l_hbrokers_handoff_file_name_new));
	//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal
	memset(l_temp_var,NULL,sizeof(l_temp_var));
	memset(l_cust_code,NULL,sizeof(l_cust_code));
	memset(l_sys_date,NULL,sizeof(l_sys_date));
	memset(l_unique_ident,NULL,sizeof(l_unique_ident));
	memset(l_cln_sebi_reg_no,NULL,sizeof(l_cln_sebi_reg_no));
	memset(l_new_code,NULL,sizeof(l_new_code));
	memset(chr_l_buf,NULL,sizeof(chr_l_buf));
	//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Ends
	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);
	l_intl_rept_struct_ha_xls= (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));	//Changes for Excel Format
	APL_MALLOC_FAIL(l_intl_rept_struct_ha_xls);		//Changes for Excel Format
	
	/*Start -  SEBI Code Change - Rahul*/
	REG_DAILY_STRUCT_H   *l_reg_daily_struct_h  =NULL;
	l_reg_daily_struct_h = (REG_DAILY_STRUCT_H *)calloc(1, sizeof(REG_DAILY_STRUCT_H));
		APL_MALLOC_FAIL(l_reg_daily_struct_h);
	memset(l_reg_daily_struct_h,NULL,sizeof(REG_DAILY_STRUCT_H));
	
	REG_DAILY_STRUCT_H   *l_reg_daily_struct_new  =NULL;
	l_reg_daily_struct_new   = (REG_DAILY_STRUCT_H *)calloc(1, sizeof(REG_DAILY_STRUCT_H));
		APL_MALLOC_FAIL(l_reg_daily_struct_new);
	memset(l_reg_daily_struct_new,NULL,sizeof(REG_DAILY_STRUCT_H));
   /*End -  SEBI Code Change - Rahul*/

	/*Added by Prateek on 05102015 for ISKB_1656(NSDL Transaction Report for Debt Deals) - START */
	PRO_GSEQNUM_STRUCT_H    l_pro_gseqno_struct_h; // Sequence structure
	int int_l_seqnum_a=0; 
	int int_return_val=0; 
	/*Added by Prateek on 05102015 for ISKB_1656(NSDL Transaction Report for Debt Deals) - END */

   CO_ProcMonitor(l_logfile,"Entered Into Daily_FRep_ClntInst Function",NULL,NULL);
	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
	   return(APL_FAILURE);

  sprintf(chr_l_buf,"Report Name for Records |%s|\n",p_rep_name);
  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
//changes done by shrinath for KOTAK KB_1720 starts
  if ((strcmp(p_rep_name,"DTR") == 0))
  {
	  /* ISKB - 560: ASHISH 16-02-2008 */
	 strcpy(l_instr_type_val,"EQ");
  }
  else if ((strcmp(p_rep_name,"DDR") == 0))
  {
	  strcpy(l_instr_type_val,"DB");
  } 
  //changes done by shrinath for KOATK KB_1720 ends
	EXEC SQL SELECT to_char(SYS_DATE,'DDMMYY') INTO :chr_l_sysdate FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR
  	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);
   strcpy(chr_l_hbrokers_handoff_file_name_new,chr_l_handoff_dir);/*SEBI Code Change - Rahul */

	strcpy(chr_l_Path,chr_l_handoff_dir);	//Changes for Excel Format

   if(strcmp(p_rep_name,"DTR") == 0)
   {
	  strcat(chr_l_hbrokers_handoff_file_name,"DR");
	  strcat(chr_l_hbrokers_handoff_file_name_new,"DR"); /*SEBI Code Change - Rahul*/
	  strcpy(chr_l_File_Name_new,"DR");
   }
   else if(strcmp(p_rep_name,"DDR") == 0)
   {
      strcat(chr_l_hbrokers_handoff_file_name,"DDR");
      strcat(chr_l_hbrokers_handoff_file_name_new,"DDR"); /*SEBI Code Change - Rahul*/
	  strcpy(chr_l_File_Name_new,"DDR");
   }
 
   sprintf(chr_l_buf,"Report Name with path |%s|\n",chr_l_hbrokers_handoff_file_name);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
//Changes for Excel Format
   strcat(chr_l_hbrokers_handoff_file_name,chr_l_sysdate);
   strcat(chr_l_hbrokers_handoff_file_name,".txt");
   strcat(chr_l_File_Name_new,chr_l_sysdate);
   
   printf("\n  Here filename=|%s|\n",chr_l_File_Name_new);
//changeE
   /*Start - SEBI Code Change - Rahul*/
   strcat(chr_l_hbrokers_handoff_file_name_new,chr_l_sysdate);
   strcat(chr_l_hbrokers_handoff_file_name_new,".txt");
   /*End - SEBI Code Change - Rahul*/

	if ( !strcmp(p_sebi_rep,"OLD") || !strcmp(p_sebi_rep,"BOTH"))/* SEBI Code Change - Rahul*/
	{
//Change Old format not required
/**   	if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
      		return(APL_FAILURE);
   	memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));
		strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
   	strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   	strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   	l_intl_rept_struct_ha->report_width = 100;
   	strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);
   	strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   	strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);

   	if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
        APL_GOBACK_FAIL
**/
	}

	/* Start - SEBI Code Change -  entery of new report for Batch_monitor - Rahul */
	if ( !strcmp(p_sebi_rep,"NEW") || !strcmp(p_sebi_rep,"BOTH"))
	{
   	if((l_ptr_hbrokers_handoff_file_new = fopen(chr_l_hbrokers_handoff_file_name_new,"w")) == NULL )
			  return(APL_FAILURE);
   	memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));
   	strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name_new+strlen(chr_l_handoff_dir));
   	strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   	strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   	l_intl_rept_struct_ha->report_width = 100;
   	strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);
   	strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   	strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);

	if(APL_SUCCESS != XLS_Strt_Page(chr_l_Path,chr_l_File_Name_new,"Sheet1"))
	{
       APL_GOBACK_FAIL
	}
	strcat(chr_l_File_Name_new,".xls");

	printf("\n 2:Here filename=|%s|\n",chr_l_File_Name_new);
	strcpy(l_intl_rept_struct_ha_xls->report_name,chr_l_File_Name_new);
    strcpy(l_intl_rept_struct_ha_xls->report_desc, APL_HOFF_FILE_DESC);
    strcpy(l_intl_rept_struct_ha_xls->report_date, argv[2]);
    l_intl_rept_struct_ha_xls->report_width = 100;
    strcpy(l_intl_rept_struct_ha_xls->task_desc, p_intl_envdatastruct_h->processtion);
    strcpy(l_intl_rept_struct_ha_xls->fe_be_ind, APL_BE_IND);
    strcpy(l_intl_rept_struct_ha_xls->usr, p_intl_envdatastruct_h->usr);

    if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha_xls, l_debug_info_ptr))
    {
       APL_GOBACK_FAIL
    }

   	if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   	    APL_GOBACK_FAIL
	}
  /* End - SEBI Code Change - entery of new report for Batch_monitor - Rahul */ 

	  EXEC SQL SELECT TO_DATE(:p_chr_from_date,'DD/MM/YYYY'),TO_DATE(:p_chr_from_date,'DD/MM/YYYY') - 1  INTO :l_chr_tdate:i_chr_tdate,l_chr_ddate:i_chr_ddate
		  FROM DUAL;
	IS_ANY_ORA_ERROR

	sprintf(chr_l_buf,"Report Date is |%s|\n",l_chr_tdate);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

/* HDFC Specific Changes */
		
	/*ISKB_198 - FPI Regulatory Reporting - starts*/
	EXEC SQL SELECT A.NEW_CODE,B.NEW_CODE,C.NEW_CODE
			   INTO :l_new_code,:l_amend_code,:l_delete_code 
			   FROM DL_SEBI_CODE A,DL_SEBI_CODE B,DL_SEBI_CODE C
	    	  WHERE A.CODE_TYPE='REP_TYPE' AND A.INDICATOR='N'
				AND B.CODE_TYPE='REP_TYPE' AND B.INDICATOR='A'
				AND C.CODE_TYPE='REP_TYPE' AND C.INDICATOR='D';

	IS_ANY_ORA_ERROR
	/*ISKB_198 - FPI Regulatory Reporting - ends*/
		
IF_COND_EXISTS("REG_REPT","DAILY_REPT")
{
 fflush(l_logfile); fprintf(l_logfile,"\n****************Query Execute for HDFC only *************\n");
		EXEC SQL DECLARE dtr_rep_hdfc CURSOR FOR
		SELECT 'B',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,A.SEBI_SUB_ACC,
				 	TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
				 	TO_CHAR(D.DL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,I.FIELD_VAL,
				 	ROUND((D.DL_PRICE),4),ROUND((D.QTY),2),ROUND((D.DL_AMT),2),
				 	SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
				 	E.INSTR_SUB_TYPE,D.R_DELAY,SUBSTR(G.PTY_SEBI_REG_NO_1,1,12) AS PTY_SEBI_NO,D.CONTRACT_CD,
					NULL,D.R_TYPE,D.BROKER_CD,D.R_SETT_CODE,D.CLH_FLG,D.ROWID,NULL,NULL,NULL,NULL,NULL,REPO_DATE,NULL,D.STATUS,NULL,
					D.DEAL_CD,D.OFF_MARKET,D.DL_REF_NO
		          FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_BCN D,
				 	MT_INSTRUMENT E,PRO_SYS_DATE,MT_PTY_EXCH_MAP G,PRO_GSSPLVAL I
		          WHERE G.PTY_CODE(+) = D.BROKER_CD AND
					A.CLN_CODE(+) = C.CLN_CODE AND
					D.CLIENT_CD = A.CLN_CODE AND 
					D.INSTR_CD = E.INSTR_CODE AND
					D.EXCH_CD = G.EXCH_CODE AND
					I.SUB_PROCESS = D.EXCH_CD AND
					I.MAIN_FUN='EXCHANGE' AND               //HDFC Retrofit-- Manasi
					C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
					D.STATUS = 'RC' AND
					D.BROKER_CD != 'CONVERSION' AND
					E.INSTR_TYPE IN (:l_instr_type,:l_instr_type_val) AND
					((D.SEBI_REPORTED IS NULL OR D.SEBI_REPORTED = 'N') OR
				   (D.SEBI_REPORTED = 'Y' AND TO_CHAR(TO_DATE(AMEND_DT),'DD/MM/YYYY') <= :l_chr_tdate))
		UNION 
		SELECT 'D',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,A.SEBI_SUB_ACC,
				 	TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
				 	to_char(D.DEAL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,'99' AS EXCH_CD1,
				 	ROUND((D.COST),4),
					//ROUND((D.QTY),2), FOR REDEMPTION
					CASE WHEN E.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND(decode(nvl(informaton,''),'',(D.QTY*E.NOMINAL_VALUE),D.AMOUNT),2) ELSE ROUND((D.QTY),2) END,
					ROUND((D.AMOUNT),2),
				 	SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
				 	E.INSTR_SUB_TYPE,D.R_DELAY,'999999999999' AS PTY_SEBI_NO,NULL,D.IDENTIY_NO,D.R_TYPE,
					NULL,D.R_SETT_CODE,NULL,D.ROWID,NULL,NULL,NULL,NULL,NULL,NULL,NULL,D.DEAL_STAT,D.LOCATION_CD,D.DEAL_CD,'Y',NULL
			FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_DEAL D,
				 	MT_INSTRUMENT E,PRO_SYS_DATE
			WHERE	A.CLN_CODE = C.CLN_CODE AND
					D.CLIENT = A.CLN_CODE AND D.INSTR_CODE = E.INSTR_CODE AND
					C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
					D.ENTRY ='G' AND
					D.DL_CLASS IN ('17','18','19','21') AND
					D.DEAL_STAT = 'CS' AND
					E.INSTR_TYPE IN (:l_instr_type,:l_instr_type_val) AND
					(D.SEBI_REPORTED IS NULL OR D.SEBI_REPORTED = 'N')
		UNION
		SELECT 'E',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,A.SEBI_SUB_ACC,
				  TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
				  TO_CHAR(D.DEAL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,I.FIELD_VAL,
				  ROUND((D.COST),4),ROUND((D.QTY),2),ROUND((D.NET_AMT),2),
				  SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
				  E.INSTR_SUB_TYPE,D.R_DELAY,SUBSTR(G.PTY_SEBI_REG_NO_1,1,12) AS PTY_SEBI_NO,NULL,D.IDENTIY_NO,
				  D.R_TYPE,NULL,D.R_SETT_CODE,NULL,D.ROWID,NULL,NULL,NULL,D.DL_CLASS,D.DEAL_CD,NULL,NULL,D.DEAL_STAT,D.LOCATION_CD,D.DEAL_CD,'Y',NULL
			FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_DEAL D,
					 MT_INSTRUMENT E,PRO_SYS_DATE,MT_PTY_EXCH_MAP G,PRO_GSSPLVAL I
	  	   WHERE G.PTY_CODE = D.DOMESTIC_CPCLT AND
					 A.CLN_CODE = C.CLN_CODE AND
					 D.INSTR_CODE = E.INSTR_CODE AND
					 I.SUB_PROCESS = D.EXCH_CODE AND 
					 D.CLIENT = A.CLN_CODE AND 
					 D.EXCH_CODE = G.EXCH_CODE AND
					 I.SUB_PROCESS(+) = D.EXCH_CODE AND
					 C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
					 D.ENTRY ='G' AND
					 D.DL_CLASS = '56' AND
					 D.DEAL_STAT != 'UU' AND
					 E.INSTR_TYPE IN (:l_instr_type,:l_instr_type_val) AND
					 (D.SEBI_REPORTED IS NULL OR D.SEBI_REPORTED = 'N')
		UNION
		SELECT 'C',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,A.SEBI_SUB_ACC,
					 TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
					 TO_CHAR(D.DL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,I.FIELD_VAL,
					 ROUND((D.DL_PRICE),4),ROUND((D.QTY),2),ROUND((D.DL_AMT),2),
				 	 SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,E.INSTR_SUB_TYPE,
					 D.R_DELAY,SUBSTR(G.PTY_SEBI_REG_NO_1,1,12) AS PTY_SEBI_NO,D.CONTRACT_CD,NULL,D.R_TYPE,
					 D.BROKER_CD,D.R_SETT_CODE,D.CLH_FLG,D.ROWID,NULL,NULL,NULL,NULL,NULL,D.REPO_DATE,D.SEBI_REPORTED,D.STATUS,NULL,D.DEAL_CD,D.OFF_MARKET,D.DL_REF_NO
			 FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_HISBCN D,
				 	  MT_INSTRUMENT E,PRO_SYS_DATE,MT_PTY_EXCH_MAP G,PRO_GSSPLVAL I
			 WHERE G.PTY_CODE(+) = D.BROKER_CD AND
					 	A.CLN_CODE(+) = C.CLN_CODE AND
					 	D.CLIENT_CD = A.CLN_CODE AND 
					 	D.INSTR_CD = E.INSTR_CODE AND
					 	I.SUB_PROCESS = D.EXCH_CD AND
						I.MAIN_FUN='EXCHANGE' AND     //HDFC Retrofit-- Manasi
					 	D.EXCH_CD = G.EXCH_CODE AND
					 	C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
					 	((D.SEBI_REPORTED IN ('Y','A')) OR (D.SEBI_REPORTED = 'N' AND D.REPO_DATE IS NOT NULL)) AND
					 	D.BROKER_CD != 'CONVERSION' AND
					 	E.INSTR_TYPE IN (:l_instr_type,:l_instr_type_val) AND
					 	((to_char(D.CLOSING_DATE,'DD/MM/YYYY') <= :l_chr_tdate))
		UNION
		SELECT 'F',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,A.SEBI_SUB_ACC,
				 	  TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
				 	  to_char(D.DATEOF_PAYMENT,'DD-MON-YYYY'),'08','99' AS EXCH_CD1,
				 	  F.EARNINGS,ROUND((D.QUANTITY_PAID),2),ROUND((D.CURR_PYMT),2),
				 	  SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
					  E.INSTR_SUB_TYPE,'P','999999999999' AS PTY_SEBI_NO,NULL,NULL,'N',NULL,'J',NULL,
					  D.ROWID,D.CORP_ID,D.CLIENT,D.SEQNUM_PAY,NULL,NULL,NULL,NULL,D.STAT_PYMT,D.LOCATION_CD,'3','Y',NULL  //Assumption all partial RD are sale. And offmarket
			 FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,CACHEQUE D, CAEVENT F,
				 	  MT_INSTRUMENT E,PRO_SYS_DATE 
			 WHERE  A.CLN_CODE = C.CLN_CODE AND D.CLIENT = A.CLN_CODE AND F.INSTR_CODE = E.INSTR_CODE AND
					 	D.CLIENT = C.CLN_CODE AND D.CORP_ID = F.CORP_ID AND
					 	F.CA_EVENT ='RD' AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						D.STAT_PYMT IN ('CP','PP') AND
					 	(NOMINAL_VALUE- F.REDEM_RT)>0 AND
						E.INSTR_TYPE IN (:l_instr_type,:l_instr_type_val) AND 
						D.CORP_ID NOT IN (SELECT CORP_ID FROM CARDSEBI);             


}
else
{
		fflush(l_logfile); fprintf(l_logfile,"\n****************Query Execute for KOTAK only *************\n");

		EXEC SQL DECLARE dtr_rep_kotak CURSOR FOR
		SELECT 'B',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,(decode(A.SEBI_SUB_ACC,'',SUBSTR(replace(CLN_SEBI_REG_NO,'-',''),7,4),A.SEBI_SUB_ACC)),
		 			TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
		 			TO_CHAR(D.DL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,I.FIELD_VAL,
		 			ROUND((D.DL_PRICE),4),ROUND((D.QTY),2),ROUND((D.DL_AMT),2),
		 			SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
		 			E.INSTR_SUB_TYPE,D.R_DELAY,SUBSTR(G.PTY_SEBI_REG_NO_1,1,12) AS PTY_SEBI_NO,
					D.CONTRACT_CD,NULL,D.R_TYPE,D.BROKER_CD,D.R_SETT_CODE,D.CLH_FLG,
					D.ROWID,NULL,NULL,NULL,NULL,NULL,D.REPO_DATE,NULL,D.STATUS,NULL,D.DEAL_CD,D.OFF_MARKET,D.DL_REF_NO
			FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_BCN D,
				MT_INSTRUMENT E,PRO_SYS_DATE,MT_PTY_EXCH_MAP G,PRO_GSSPLVAL I
			WHERE G.PTY_CODE(+) = D.BROKER_CD AND
				A.CLN_CODE(+) = C.CLN_CODE AND
				D.CLIENT_CD = A.CLN_CODE AND 
				D.INSTR_CD = E.INSTR_CODE AND
         	/*D.EXCH_CD = G.EXCH_CODE AND*/ D.EXCH_CD = G.EXCH_CODE(+) AND  /* ISKB-342 - Rahul */
				I.SUB_PROCESS = D.EXCH_CD AND
	            I.MAIN_FUN='EXCHANGE' AND   /*  Priyanka - retro from HDFC to Avoid record duplication */
				C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
				D.STATUS IN ('AA','RC') AND
				D.BROKER_CD != 'CONVERSION' AND
				/* ISKB - 560: ASHISH 16-02-2008 Start */
                             /*changes done by shrinath for ICICI KB_1720 starts*/
				E.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT 
																WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND 
																NATION_CODE = :l_instr_type_val) AND 
          E.INSTR_SUB_TYPE NOT IN ( SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name)
		/*Commented by Bhavana for instrument sub type GS not picked in report due to impact in CSGL release to not to pick the GS instrument type. - Start*/
						/*AND E.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT 
																WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND 
																NATION_CODE = :l_instr_type_val)*/ 
																/*Added by Panith suggested by Dhaval*/
		/*Commented by Bhavana for instrument sub type GS not picked in report due to impact in CSGL release to not to pick the GS instrument type. - End*/
                        /*changes done by shrinath for ICICI KB_1720 ends*/
		    /* ISKB - 560: ASHISH 16-02-2008 End */
			AND	((D.SEBI_REPORTED IS NULL OR D.SEBI_REPORTED = 'N')
				OR (D.SEBI_REPORTED = 'Y' AND TRUNC(AMEND_DT) <= TO_DATE(:l_chr_tdate,'DD/MM/YYYY') AND REPO_DATE < AMEND_DT ))
		UNION 
		SELECT 'D',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,(decode(A.SEBI_SUB_ACC,'',SUBSTR(replace(CLN_SEBI_REG_NO,'-',''),7,4),A.SEBI_SUB_ACC)),
    					TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
						to_char(D.DEAL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,'99' AS EXCH_CD1,
						ROUND((D.COST),4),
						//ROUND((D.QTY),2), REDEMPTION DEAL
						CASE WHEN E.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND(decode(nvl(informaton,''),'',(D.QTY*E.NOMINAL_VALUE),D.AMOUNT),2) ELSE ROUND((D.QTY),2) END,
						ROUND((D.AMOUNT),2),
						SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
						E.INSTR_SUB_TYPE,D.R_DELAY,'999999999999' AS PTY_SEBI_NO,NULL,D.IDENTIY_NO,D.R_TYPE,NULL,
						D.R_SETT_CODE,NULL,D.ROWID,NULL,NULL,NULL,NULL,NULL,NULL,NULL,D.DEAL_STAT,D.LOCATION_CD,D.DEAL_CD,'Y',NULL
			FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_DEAL D,
						MT_INSTRUMENT E,PRO_SYS_DATE
   		WHERE	A.CLN_CODE = C.CLN_CODE AND
						D.CLIENT = A.CLN_CODE AND D.INSTR_CODE = E.INSTR_CODE AND
						C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						D.ENTRY ='G' AND
						D.DL_CLASS IN ('17','18','19','21') AND
						D.DEAL_STAT = 'CS' AND
						/* ISKB - 560: ASHISH 16-02-2008 Start */
                             /*changes done by shrinath for ICICI KB_1720 starts*/
				E.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT 
																WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND 
																NATION_CODE = :l_instr_type_val) AND 
          E.INSTR_SUB_TYPE NOT IN ( SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name)
                        /*changes done by shrinath for ICICI KB_1720 ends*/
			/* ISKB - 560: ASHISH 16-02-2008 End */ AND
	      			(D.SEBI_REPORTED IS NULL OR D.SEBI_REPORTED = 'N')
		UNION
  		SELECT 'E',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,(decode(A.SEBI_SUB_ACC,'',SUBSTR(replace(CLN_SEBI_REG_NO,'-',''),7,4),A.SEBI_SUB_ACC)),
  						TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
  						TO_CHAR(D.DEAL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,I.FIELD_VAL,
  						ROUND((D.COST),4),ROUND((D.QTY),2),ROUND((D.NET_AMT),2),
  						SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
  						E.INSTR_SUB_TYPE,D.R_DELAY,SUBSTR(G.PTY_SEBI_REG_NO_1,1,12) AS PTY_SEBI_NO,NULL,D.IDENTIY_NO,
						D.R_TYPE,NULL,D.R_SETT_CODE,NULL,D.ROWID,NULL,NULL,NULL,D.DL_CLASS,D.DEAL_CD,NULL,NULL,D.DEAL_STAT,D.LOCATION_CD,D.DEAL_CD,'Y',NULL
  			FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_DEAL D,
        				MT_INSTRUMENT E,PRO_SYS_DATE,MT_PTY_EXCH_MAP G,PRO_GSSPLVAL I
   		WHERE /*G.PTY_CODE = D.DOMESTIC_CPCLT AND*/ G.PTY_CODE(+) = D.DOMESTIC_CPCLT AND /* ISKB-342 - Rahul */
	      			A.CLN_CODE = C.CLN_CODE AND
		   			D.INSTR_CODE = E.INSTR_CODE AND
		   			//I.SUB_PROCESS = D.EXCH_CODE AND 
		   			I.SUB_PROCESS = D.TRD_EXCH AND //KB_12174 - chnages done for interoperability 
					I.MAIN_FUN='EXCHANGE' AND   /* Priyanka - retro from HDFC to Avoid record duplication */
		   			D.CLIENT = A.CLN_CODE AND 
		   			/*D.EXCH_CODE = G.EXCH_CODE AND */ 
					//D.EXCH_CODE = G.EXCH_CODE(+) AND /* ISKB-342 - Rahul */
					D.TRD_EXCH = G.EXCH_CODE(+) AND /* ISKB-342 - Rahul */ //KB_12174 interoperability 
		   			//I.SUB_PROCESS(+) = D.EXCH_CODE AND
		   			I.SUB_PROCESS(+) = D.TRD_EXCH AND //KB_12174 interoperability 
		   			C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
		   			D.ENTRY ='G' AND
		   			D.DL_CLASS = '56' AND
			         D.DEAL_STAT != 'UU' AND
         			/* ISKB - 560: ASHISH 16-02-2008 Start */
                             /*changes done by shrinath for ICICI KB_1720 starts*/
				E.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT 
																WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND 
																NATION_CODE = :l_instr_type_val) AND 
          E.INSTR_SUB_TYPE NOT IN ( SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name)
                        /*changes done by shrinath for ICICI KB_1720 ends*/
			/* ISKB - 560: ASHISH 16-02-2008 End */ AND
        				(D.SEBI_REPORTED IS NULL OR D.SEBI_REPORTED = 'N')
   	UNION
   	SELECT 'C',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,(decode(A.SEBI_SUB_ACC,'',SUBSTR(replace(CLN_SEBI_REG_NO,'-',''),7,4),A.SEBI_SUB_ACC)),
		 			  TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
		 			  TO_CHAR(D.DL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,I.FIELD_VAL,
		 			  ROUND((D.DL_PRICE),4),ROUND((D.QTY),2),ROUND((D.DL_AMT),2),
	    			  SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,E.INSTR_SUB_TYPE,
					  D.R_DELAY,SUBSTR(G.PTY_SEBI_REG_NO_1,1,12) AS PTY_SEBI_NO,D.CONTRACT_CD,NULL,D.R_TYPE,D.BROKER_CD,
					  D.R_SETT_CODE,D.CLH_FLG,D.ROWID,NULL,NULL,NULL,NULL,NULL,D.REPO_DATE,D.SEBI_REPORTED,D.STATUS,NULL,D.DEAL_CD,D.OFF_MARKET,D.DL_REF_NO
			FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_HISBCN D,
					 	MT_INSTRUMENT E,PRO_SYS_DATE,MT_PTY_EXCH_MAP G,PRO_GSSPLVAL I
			WHERE G.PTY_CODE(+) = D.BROKER_CD AND
					  	A.CLN_CODE(+) = C.CLN_CODE AND
					  	D.CLIENT_CD = A.CLN_CODE AND 
						D.INSTR_CD = E.INSTR_CODE AND
						I.SUB_PROCESS = D.EXCH_CD AND
						I.MAIN_FUN='EXCHANGE' AND   /* Priyanka - retro from HDFC to Avoid record duplication */
						/*D.EXCH_CD = G.EXCH_CODE AND*/ D.EXCH_CD = G.EXCH_CODE AND /* ISKB-342 - Rahul */
						C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						((D.SEBI_REPORTED IN ('Y','A')) OR (D.SEBI_REPORTED = 'N' AND D.REPO_DATE IS NOT NULL)) AND
						D.BROKER_CD != 'CONVERSION' AND
			/* ISKB - 560: ASHISH 16-02-2008 Start */
                             /*changes done by shrinath for ICICI KB_1720 starts*/
				E.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT 
																WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND 
																NATION_CODE = :l_instr_type_val) AND 
          E.INSTR_SUB_TYPE NOT IN ( SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name)
                        /*changes done by shrinath for ICICI KB_1720 ends*/
		   /* ISKB - 560: ASHISH 16-02-2008 End */ AND
						(trunc(D.CLOSING_DATE) <= TO_DATE(:l_chr_tdate,'DD/MM/YYYY'))
						/*((to_char(D.CLOSING_DATE,'DD/MM/YYYY') <= :l_chr_tdate))*/
		/*Commented on 14112013 for ISKB_6399(DDR report shows one additional sale trade for part-redemption)-START
	UNION
	SELECT 'F',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,A.SEBI_SUB_ACC,
						TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
						to_char(D.DATEOF_PAYMENT,'DD-MON-YYYY'),'08','99' AS EXCH_CD1,
						F.EARNINGS,ROUND((D.QUANTITY_PAID),2),ROUND((D.CURR_PYMT),2),
						SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
						E.INSTR_SUB_TYPE,'P','999999999999' AS PTY_SEBI_NO,NULL,
						NULL,'N',NULL,'J',NULL,D.ROWID,D.CORP_ID,D.CLIENT,D.SEQNUM_PAY,NULL,NULL,NULL,NULL
		FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,CACHEQUE D, CAEVENT F,
		MT_INSTRUMENT E,PRO_SYS_DATE 
		WHERE  A.CLN_CODE = C.CLN_CODE AND
						D.CLIENT = A.CLN_CODE AND F.INSTR_CODE = E.INSTR_CODE AND
						D.CLIENT = C.CLN_CODE AND
						D.CORP_ID = F.CORP_ID AND
						F.CA_EVENT = 'RD' AND
						C.CLN_TYPE = 'F' AND
						D.STAT_PYMT IN ('CP','PP')	AND
						//F.STATUS = 'PP' AND
						(NOMINAL_VALUE- F.REDEM_RT)>0 AND 
						//ISKB - 560: ASHISH 16-02-2008 Start
			((E.INSTR_TYPE IN (:l_instr_type,:l_instr_type_val) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDR'))
			OR (E.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_val) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTR')))
						//ISKB - 560: ASHISH 16-02-2008 End
						AND D.CORP_ID NOT IN (SELECT CORP_ID FROM CARDSEBI);             
			
		Commented on 14112013 for ISKB_6399(DDR report shows one additional sale trade for part-redemption)-END*/
	UNION
    SELECT 'D',CUST_CODE,C.CLN_CODE,A.CLN_SEBI_REG_NO,(decode(A.SEBI_SUB_ACC,'',SUBSTR(replace(CLN_SEBI_REG_NO,'-',''),7,4),A.SEBI_SUB_ACC)),
    					TO_CHAR(SYS_DATE,'DD-MON-YYYY'),SUBSTR(C.CLN_NAME,1,60) AS CLN_NAME1,
						to_char(D.DEAL_DATE,'DD-MON-YYYY'),D.R_TRANS_CODE,'99' AS EXCH_CD1,
						ROUND((D.COST),4),CASE WHEN E.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND((D.QTY*E.NOMINAL_VALUE),2) ELSE ROUND((D.QTY),2) END,CASE WHEN E.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND(((D.QTY*D.COST*E.NOMINAL_VALUE)/100),2) ELSE ROUND((D.AMOUNT),2) END,
						SUBSTR(E.INSTR_NAME,1,40) AS C_INSTR_NM1,E.INSTR_ISIN,
						E.INSTR_SUB_TYPE,D.R_DELAY,decode(P.PTY_SEBI_REG_NO_1,'','999999999999',P.PTY_SEBI_REG_NO_1) AS PTY_SEBI_NO,NULL,D.IDENTIY_NO,D.R_TYPE,NULL,
						D.R_SETT_CODE,NULL,D.ROWID,NULL,NULL,NULL,D.DL_CLASS,D.DEAL_CD,NULL,NULL,D.DEAL_STAT,D.LOCATION_CD,D.DEAL_CD,'N',NULL
			FROM  MT_COMMON_SYS_PARAMS,MT_REGDETAILS A,MT_CLIENT C,DL_DEAL D,
						MT_INSTRUMENT E,PRO_SYS_DATE, MT_PTY_EXCH_MAP P
   		WHERE	A.CLN_CODE = C.CLN_CODE AND
						D.CLIENT = A.CLN_CODE AND D.INSTR_CODE = E.INSTR_CODE AND			
						C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						D.LOCATION_CD = 'CSGL' AND D.ENTRY <> 'G' AND // Entry type 'G' deals are transfer position & corporate actions Deals not required
						D.DL_CLASS in ('1','20') AND
						D.DEAL_STAT in ('CS','MS','AA','CC','PM') AND
				D.DOMESTIC_CPCLT != 'CONVERSION' AND
				E.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT 
																WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND 
																NATION_CODE = :l_instr_type_val) AND 
          E.INSTR_SUB_TYPE NOT IN ( SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name)
               AND
					(P.pty_code(+)=D.DOMESTIC_CPCLT and P.exch_code(+)='NSE')
			   AND
	      			(D.SEBI_REPORTED IS NULL OR D.SEBI_REPORTED = 'N');   //Added by Panith for CSGL Deals
	
}

    sprintf(chr_l_buf,"Sqlcode Check|%d|\n",sqlca.sqlcode);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
    IS_ANY_ORA_ERROR	 

    CO_ProcMonitor(l_logfile,"Opening a dtr_rep Csr",NULL,NULL); 
	 IF_COND_EXISTS("REG_REPT","DAILY_REPT")
	 	EXEC SQL OPEN dtr_rep_hdfc ;
	 else
		EXEC SQL OPEN dtr_rep_kotak ;
    sprintf(chr_l_buf,"Sqlcode Check|%d|\n",sqlca.sqlcode);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
  	 IS_ANY_ORA_ERROR

	  for(;;)
	  {
		//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Starts
//		memset(l_deal_stat,0,strlen(l_deal_stat));
//		memset(l_location_cd,0,strlen(l_location_cd));
//		memset(l_deal_code,0,strlen(l_deal_code));
//		memset(l_off_market,0,strlen(l_off_market));
//		memset(l_mapped_deal,0,strlen(l_mapped_deal));
//		memset(l_cln_code,0,strlen(l_cln_code));
//		memset(l_trn_ind,0,strlen(l_trn_ind));
//		memset(l_record_ref,0,strlen(l_record_ref));
		  
		memset(l_deal_stat,NULL,sizeof(l_deal_stat));
		memset(l_cust_code,NULL,sizeof(l_cust_code));
		memset(l_mapped_deal,NULL,sizeof(l_mapped_deal));
		memset(l_sys_date,NULL,sizeof(l_sys_date));
		memset(l_unique_ident,NULL,sizeof(l_unique_ident));
		memset(l_cln_sebi_reg_no,NULL,sizeof(l_cln_sebi_reg_no));
		memset(l_sebi_sub_acc,NULL,sizeof(l_sebi_sub_acc));
		memset(l_pty_sebi_reg_no,NULL,sizeof(l_pty_sebi_reg_no));
		memset(l_instr_name,NULL,sizeof(l_instr_name));
		memset(l_record_ref,NULL,sizeof(l_record_ref));
		memset(l_isin,NULL,sizeof(l_isin));
		memset(l_deal_date,NULL,sizeof(l_deal_date));
		memset(l_exch_code,NULL,sizeof(l_exch_code));
		memset(l_trn_ind,NULL,sizeof(l_trn_ind));
		memset(l_location_cd,NULL,sizeof(l_location_cd));
		memset(l_deal_code,NULL,sizeof(l_deal_code));
		memset(l_off_market,NULL,sizeof(l_off_market));
		memset(l_cln_code,NULL,sizeof(l_cln_code));
                /*TestUpgrade_Fix-Start*/
                memset(l_cln_name,NULL,sizeof(l_cln_name));
                memset(l_fclnt_trans,NULL,sizeof(l_fclnt_trans));
                l_cost = 0.0;
                l_qty = 0.0;
                l_amt = 0.0;
                memset(l_instr_sub_type,NULL,sizeof(l_instr_sub_type));
                memset(l_r_delay,NULL,sizeof(l_r_delay));
                memset(l_contrct_cd,NULL,sizeof(l_contrct_cd));
                memset(l_ident_no,NULL,sizeof(l_ident_no));
                memset(l_r_type,NULL,sizeof(l_r_type));
                memset(l_broker_cd,NULL,sizeof(l_broker_cd));
                memset(l_settl_code,NULL,sizeof(l_settl_code));
                memset(l_clh_flg,NULL,sizeof(l_clh_flg));
                memset(l_rowid1,NULL,sizeof(l_rowid1));
                memset(l_corp_id,NULL,sizeof(l_corp_id));
                memset(l_corp_clnt,NULL,sizeof(l_corp_clnt));
                l_corp_no = 0;
                memset(l_dl_class,NULL,sizeof(l_dl_class));
                memset(l_deal_cd,NULL,sizeof(l_deal_cd));
                memset(l_repot_dt,NULL,sizeof(l_repot_dt));
                memset(l_sebi_rept,NULL,sizeof(l_sebi_rept));
                /*TestUpgrade_Fix-End*/ 
		//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Ends

		  CO_ProcMonitor(l_logfile,"\n******************NEW LOOP***********************\n",NULL,NULL);
		  IF_COND_EXISTS("REG_REPT","DAILY_REPT")
		  {
				EXEC SQL FETCH dtr_rep_hdfc 
						INTO:l_trn_ind:i_trn_ind,
						:l_cust_code:i_cust_code,
                  :l_cln_code:i_cln_code,
						:l_cln_sebi_reg_no:icln_sebi_reg_no,
						:l_sebi_sub_acc:i_sebi_sub_acc,
						:l_sys_date:i_sys_date,
						:l_cln_name:i_cln_name,
						:l_deal_date:i_deal_date,
						:l_fclnt_trans:i_fclnt_trans,
						:l_exch_code:i_exch_code,
						:l_cost:i_cost,
						:l_qty:i_qty,
						:l_amt:i_amt,
						:l_instr_name:i_instr_name,
						:l_isin:i_isin,
						:l_instr_sub_type:i_instr_sub_type,
			         :l_r_delay:i_r_delay,
						:l_pty_sebi_reg_no:i_pty_sebi_reg_no,
                  :l_contrct_cd:i_contrct_cd,
						:l_ident_no:i_ident_no,
						:l_r_type:i_r_type,
						:l_broker_cd:i_broker_cd,
						:l_settl_code:i_settl_code,
						:l_clh_flg:i_clh_flg,
						:l_rowid1:i_rowid1,
						:l_corp_id:i_corp_id,
						:l_corp_clnt:i_corp_clnt,
						:l_corp_no:i_corp_no,
						:l_dl_class:i_dl_class,
						:l_deal_cd:i_deal_cd,
                  :l_repot_dt:i_repot_dt,
                  :l_sebi_rept:i_sebi_rept,
				  :l_deal_stat:i_deal_stat, 
				  :l_location_cd:i_location_cd, 
				  :l_deal_code:i_deal_code,
				  :l_off_market:i_off_market,
				  :l_mapped_deal:i_mapped_deal;
		  }
		  else
		  {
			  EXEC SQL FETCH dtr_rep_kotak
				  INTO:l_trn_ind:i_trn_ind,
				  :l_cust_code:i_cust_code,
				  :l_cln_code:i_cln_code,
				  :l_cln_sebi_reg_no:icln_sebi_reg_no,
				  :l_sebi_sub_acc:i_sebi_sub_acc,
				  :l_sys_date:i_sys_date,
				  :l_cln_name:i_cln_name,
				  :l_deal_date:i_deal_date,
				  :l_fclnt_trans:i_fclnt_trans,
				  :l_exch_code:i_exch_code,
				  :l_cost:i_cost,
				  :l_qty:i_qty,
				  :l_amt:i_amt,
				  :l_instr_name:i_instr_name,
				  :l_isin:i_isin,
				  :l_instr_sub_type:i_instr_sub_type,
				  :l_r_delay:i_r_delay,
				  :l_pty_sebi_reg_no:i_pty_sebi_reg_no,
				  :l_contrct_cd:i_contrct_cd,
				  :l_ident_no:i_ident_no,
				  :l_r_type:i_r_type,
				  :l_broker_cd:i_broker_cd,
				  :l_settl_code:i_settl_code,
				  :l_clh_flg:i_clh_flg,
				  :l_rowid1:i_rowid1,
				  :l_corp_id:i_corp_id,
				  :l_corp_clnt:i_corp_clnt,
				  :l_corp_no:i_corp_no,
				  :l_dl_class:i_dl_class,
				  :l_deal_cd:i_deal_cd,
				  :l_repot_dt:i_repot_dt,
				  :l_sebi_rept:i_sebi_rept,
  				  :l_deal_stat:i_deal_stat, 
				  :l_location_cd:i_location_cd, 
				  :l_deal_code:i_deal_code,
				  :l_off_market:i_off_market,
				  :l_mapped_deal:i_mapped_deal;
		  }
		  
		sprintf(chr_l_buf,"Check 1: Sqlerror check After fetching cursor |%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		 if(sqlca.sqlcode==1403)
			break;
		 IS_ANY_ORA_ERROR

		sprintf(chr_l_buf,"DL_BCN Trnsaction : Contract Code l_contrct_cd |%s|\n",l_contrct_cd);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		sprintf(chr_l_buf,"DL_Deal Trnsaction : Identity No. l_ident_no |%s|\n",l_ident_no);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		  fflush(l_logfile); fprintf(l_logfile,"\nCheck 2: Before Transaction Indicator\n");
		  sprintf(chr_l_buf,"Transaction Indicator is |%s|\n",l_trn_ind);
		  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		  fflush(l_logfile); fprintf(l_logfile,"\nCheck 3: After Transaction Indicator\n");

		// By Bawa -- 7/22/2008 -- for sebi_sub_acc chngs - Start
		IF_COND_EXISTS("REGREPT","SEBI_SUB_ACC_NOT_NULL")
		{

			EXEC SQL SELECT CLN_SEBICTG INTO :chr_l_cln_sebictg 
			 FROM MT_CLIENT 
				WHERE CLN_CODE = :l_cln_code ;

			IS_ANY_ORA_ERROR

			printf("\n ** ** CLN_SEBICTG   -- |%s| ** **  \n",chr_l_cln_sebictg);

			if (!strcmp(chr_l_cln_sebictg,"FI"))
			{
				printf("\n ** ** LENGTH of l_sebi_sub_acc = |%d| ** ** \n",strlen(l_sebi_sub_acc));
				
				if (strlen(l_sebi_sub_acc) == 0) // when l_sebi_sub_acc is null
				{
					printf("\n ** Before  l_sebi_sub_acc -- |%s| ** \n",l_sebi_sub_acc);
				
					/* EXEC SQL SELECT SUBSTR(CLN_SEBI_REG_NO ,7,4) INTO :l_sebi_sub_acc  Changed by Bawa - 8/5/2008 */
					EXEC SQL SELECT SUBSTR(replace(CLN_SEBI_REG_NO,'-',''),7,4) INTO :l_sebi_sub_acc
						FROM MT_REGDETAILS 
						WHERE CLN_CODE = :l_cln_code;
		
					IS_ANY_ORA_ERROR
					printf("\n ** After l_sebi_sub_acc -- |%s|  ** \n",l_sebi_sub_acc);
				}
			}
		}
		// By Bawa -- 7/22/2008 -- for sebi_sub_acc chngs - End 

        /* Skipping of RTS_ISSUE  and CA_RT_APPL_IND Records */
        if (strcmp(l_trn_ind,"C") == 0) 
        {
		  fflush(l_logfile); fprintf(l_logfile,"\nCheck 4\n");
          if((strcmp(l_settl_code,"I") == 0) && (strlen(l_repot_dt) != 0) && (strcmp(l_sebi_rept,"N") == 0))
              strcpy(l_settl_code,"C");
        }
        if (strcmp(l_trn_ind,"E") == 0)
	  	  {}
		  if (strcmp(l_trn_ind,"D") == 0)
	  	  {
				  fflush(l_logfile); fprintf(l_logfile,"\nCheck 5\n");
          sprintf(chr_l_buf,"Inside Skipping record Ind Check|%s|\n",l_trn_ind);
          CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
          if((!strncmp(l_ident_no,RTS_ISSUE,strlen(RTS_ISSUE))) ||(!strncmp(l_ident_no,CA_RT_APPL_IND,strlen(CA_RT_APPL_IND))))
			 continue;
	     }

		  fflush(l_logfile); fprintf(l_logfile,"\nCheck 6\n");
      if(strlen(l_isin) == 0)
        strcpy(l_isin,"NO_ISIN");
      if(strlen(l_exch_code) == 0)
        strcpy(l_exch_code,"99");

      fflush(stdout);
      if(strlen(l_pty_sebi_reg_no) == 0)
		  strcpy(l_pty_sebi_reg_no,"999999999999");
printf("\n A:1\n");
		/***** Start - For Reporting Amended Deal - Rahul ***************/
	   sprintf(chr_l_buf,"Check RowID |%s|\n",l_rowid1);
       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	if( strcmp(l_trn_ind,"B") == 0 )
	{
		EXEC SQL SELECT COUNT(*) INTO :l_amd_count FROM DL_BCN WHERE ROWID =:l_rowid1
						AND AMEND_DT IS NOT NULL;
		sprintf(chr_l_buf,"Check 7: Sqlerror check %d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		IS_ANY_ORA_ERROR
	
printf("\n A:2\n");
		EXEC SQL SELECT SEBI_REPORTED INTO :l_sebi_reported:i_sebi_reported FROM DL_BCN WHERE
		ROWID =:l_rowid1;
		sprintf(chr_l_buf,"Check 8: Sqlerror check %d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		IS_ANY_ORA_ERROR
	  }
printf("\n A:3\n");
		/***** END - For Reporting Amended Deal - Rahul ***************/

      if((strcmp(l_trn_ind,"B") == 0) && (strcmp(l_clh_flg,"C") == 0))
      {	
printf("\n A:4\n");
		/* Commented By Rahul */
		  fflush(l_logfile); fprintf(l_logfile,"\nCheck 9\n");
	      if ((strcmp(l_r_type,"00") == 0)  || (strcmp(l_r_type,"N ") == 0))
		   {				
printf("\n A:5\n");
	 	   	    strcpy(l_trans_type,"N");
			}
  		   fflush(l_logfile); fprintf(l_logfile,"\nCheck 10\n");
		   fflush(l_logfile); fprintf(l_logfile,"\n**********Repo_Date--> |%s|\n",l_repot_dt);
		   if ( (l_amd_count != 0 && strcmp(l_sebi_reported,"Y") == 0 ) || ( !strcmp(l_sebi_reported,"N")  &&  strcmp(l_repot_dt,APL_NULL_STRING) ))/*For Reporting Amended Deal - Rahul*/
				strcpy(l_trans_type,"A");
      }	

printf("\n A:6\n");
	  /* Setting Up the R-TYPE Values  for  Hand Delivery (DVP) Deals */
	    fflush(l_logfile); fprintf(l_logfile,"\nCheck 11\n");
        sprintf(chr_l_buf,"Indicator2 For Clh Flag|%s|\n",l_clh_flg);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	     if((strcmp(l_trn_ind,"B") == 0) && (strcmp(l_clh_flg,"D") == 0))
	     {
			  fflush(l_logfile); fprintf(l_logfile,"\nCheck 12\n");	
			  if ((strcmp(l_r_type,"00") == 0)  || (strcmp(l_r_type,"N ") == 0))
			  {
    			 fflush(l_logfile); fprintf(l_logfile,"\n**********Inside New Transaction for clh flag D*************\n");          
		         strcpy(l_trans_type,"N");
			  }
   			  fflush(l_logfile); fprintf(l_logfile,"\n**********Repo_Date--> |%s|\n",l_repot_dt);
			  /*if (l_amd_count != 0 && strcmp(l_sebi_reported,"Y") == 0)/*For Reporting Amended Deal - Rahul*/
			  if ( (l_amd_count != 0 && strcmp(l_sebi_reported,"Y") == 0 ) || ( !strcmp(l_sebi_reported,"N")  &&  strcmp(l_repot_dt,APL_NULL_STRING) ))/*For Reporting Amended Deal - Rahul*/
			      strcpy(l_trans_type,"A");

				//Added by Prateek on 22082014 for ISKB_6820(Records not getting picked up in SEBI DTS and NSDL Report,picked up in DTR report but having Report type null)- START
				if((l_amd_count != 0) && strcmp(l_sebi_reported,"Y"))
				{
				Alert("\nDeal is amended and it is not reported in SEBI REPORTS\n");
				fflush(l_logfile); fprintf(l_logfile,"\nDeal is amended and it is not reported in SEBI REPORTS\n");
				strcpy(l_trans_type,"N");
				}
				//Added by Prateek on 22082014 for ISKB_6820(Records not getting picked up in SEBI DTS and NSDL Report,picked up in DTR report but having Report type null)- END

   			 fflush(l_logfile); fprintf(l_logfile,"\n**********l_trans_type for clh flag D*************|%s|\n",l_trans_type);          
        }
  
printf("\n A:7\n");
        sprintf(chr_l_buf,"Value of Settlment Code|%s|\n",l_settl_code);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
        sprintf(chr_l_buf,"Value of Indicator value check|%s|\n",l_trn_ind);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		fflush(l_logfile); fprintf(l_logfile,"\nCheck 13\n");

        if((strcmp(l_trn_ind,"B") == 0) && (strcmp(l_settl_code,"I") == 0))
	     {
			  fflush(l_logfile); fprintf(l_logfile,"\nCheck 14\n");
         	  sprintf(chr_l_buf,"Value I STATUS |%s|\n",l_settl_code);
        	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
              
		   	  fflush(l_logfile); fprintf(l_logfile,"\n**********Repo_Date--> |%s|\n",l_repot_dt);
			  /*if (l_amd_count != 0 && strcmp(l_sebi_reported,"Y") == 0)/*For Reporting Amended Deal - Rahul*/
			  if ( (l_amd_count != 0 && strcmp(l_sebi_reported,"Y") == 0 ) || ( !strcmp(l_sebi_reported,"N")  &&  strcmp(l_repot_dt,APL_NULL_STRING) ))/*For Reporting Amended Deal - Rahul*/
		        strcpy(l_trans_type,"A");
				
				//Added by Prateek on 07082014 for ISKB_6793(In DDR Report where trades converted into hand delivery does not pick Reporting Type also does not reflect in DDS)- START
				//There were some Deals which were marked as DVP before generating the SEBI Reports,so amended count became greater than 0 and Sebi Reported Flag was "N"
				//So these deals didnot get picked in any of the conditions to update the Trans type,so we have inputted new condition to update the trans type as N(New)
				//because these deals are not reported to SEBI and handle these kind of situations
				if((l_amd_count != 0) && strcmp(l_sebi_reported,"Y"))
				{
					Alert("\nDeal is amended and it is not reported in SEBI REPORTS\n");
					fflush(l_logfile); fprintf(l_logfile,"\nDeal is amended and it is not reported in SEBI REPORTS\n");
					strcpy(l_trans_type,"N");
				}
				//Added by Prateek on 07082014 for ISKB_6793(In DDR Report where trades converted into hand delivery does not pick Reporting Type also does not reflect in DDS)- END
		 }

printf("\n A:8\n");
 		sprintf(chr_l_buf,"Indicator For hisbcng|%s|\n",l_trn_ind);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
      /* SetUp R_Trans_Type Flag as 'D' for HISBCN Records */
      if (strcmp(l_trn_ind,"C") == 0)
	  {
			sprintf(chr_l_buf,"Indicator Flag in HISBCN |%s|\n",l_trn_ind);
	        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			  if (strcmp(l_r_type,"09") == 0)
				    strcpy(l_trans_type,"D");
		      strcpy(l_r_delay,"P");
	   }

	    if (strcmp(l_trn_ind,"D") == 0)
	     {
			 strcpy(l_trans_type,"N");
		 }

printf("\n A:9\n");
	  sprintf(chr_l_buf,"Before checking Indicator Flag E Record for Dl_Class|%s|\n",l_dl_class);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	  printf("Value of DL***********|%s|\n",l_dl_class);
	  printf("Value of TransInd***********|%s|\n",l_trn_ind);

      if ((strcmp(l_trn_ind,"E") == 0) && (strcmp(l_dl_class,"56") == 0)) 
		{
			  sprintf(chr_l_buf,"Inside the SquareOff Trade Ind Value |%s|\n",l_trn_ind);
			  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	          sprintf(chr_l_buf,"Indicator Flag E Record Deal Cd|%s|\n",l_deal_cd);
			  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
          
             strcpy(l_r_delay,"P");
			 strcpy(l_settl_code,"H");
			 strcpy(l_r_type,"00");
		     strcpy(l_trans_type,"N");		

		    if (strcmp(l_deal_cd,"4") == 0) 
		       strcpy(l_fclnt_trans,"14");
            else if (strcmp(l_deal_cd,"3") == 0)
  			   strcpy(l_fclnt_trans,"13");

	         sprintf(chr_l_buf,"Inside the  DEALCD |%s|\n",l_deal_cd);
				 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
             sprintf(chr_l_buf,"Inside the  TranCode |%s|\n",l_fclnt_trans);
				 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		}

printf("\n A:9\n");
       if (strcmp(l_trn_ind,"F") == 0)
	    {
		   if (strcmp(l_r_type,"N") == 0)
			strcpy(l_trans_type,"N");
	 	}
	    		 
        sprintf(chr_l_buf,"Ind Value  |%s|\n",l_trn_ind);
   	    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
        sprintf(chr_l_buf,"Trans Type value after Transtype setup |%s|\n",l_trans_type);
	    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
    	CO_ProcMonitor(l_logfile,"Before Main Cursor",NULL,NULL);

	  	printf("value of trans type ==|%s|\n",l_trans_type);
     	fflush(stdout);

       EXEC SQL SELECT DSR_SEQ.NEXTVAL
	          INTO :l_unique_ident:i_unique_ident
				 FROM DUAL;
		IS_ANY_ORA_ERROR 

  /*    EXEC SQL SELECT TO_CHAR(TO_DATE(:l_sys_date),'DD/MM/YYYY') INTO :l_cnt_date:i_cnt_date
                FROM DUAL;
	   IS_ANY_ORA_ERROR
      strcat(l_cnt_date,APL_NULL_TIME);
	  strcpy(l_syst_date,l_cnt_date);  */ /* Rahul  - 26-Feb-2007 */

	   if(CO_RtvSysDtTime(l_syst_date,l_debug_info_ptr) !=APL_SUCCESS)
       {
                APL_GOBACK_FAIL
       }

	  CO_ProcMonitor(l_logfile,"Before selected1 Cursor",NULL,NULL);
      sprintf(chr_l_buf,"DATE Time check|%s|\n",l_syst_date);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
      sprintf(chr_l_buf,"ROW|%s|\n",l_rowid1);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
      sprintf(chr_l_buf,"Indicator For Selected Records|%s|\n",l_trn_ind);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		  
     if (strcmp(l_trn_ind,"B") == 0)
     {
 			if( strcmp(l_trans_type,"N") == 0)
			{	
        		EXEC SQL UPDATE DL_BCN SET SEBI_REPORTED = 'Y',
				       REPO_DATE =:l_syst_date:i_syst_date 
		             WHERE  ROWID =:l_rowid1; 
		    	IS_ANY_ORA_ERROR
			}
			if( strcmp(l_trans_type,"A") == 0)
			{
				EXEC SQL UPDATE DL_BCN SET SEBI_REPORTED = 'A',
					    REPO_DATE =:l_syst_date:i_syst_date
						 WHERE  ROWID =:l_rowid1;
				IS_ANY_ORA_ERROR			
			}
      }
	   else if((strcmp(l_trn_ind,"D") == 0) || (strcmp(l_trn_ind,"E") == 0))
      {
			
			EXEC SQL UPDATE DL_DEAL SET SEBI_REPORTED = 'Y', 
		                          REPO_DATE =:l_syst_date:i_syst_date
                 WHERE  ROWID =:l_rowid1;
	        IS_ANY_ORA_ERROR

           sprintf(chr_l_buf,"Sqlerror for D|%d|\n",sqlca.sqlcode);
	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
     }
	 if (strcmp(l_trn_ind,"B") == 0)
     {
		   sprintf(chr_l_buf,"uniq _dent|%s|\n",l_unique_ident);
	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	
			strcmp(l_str_uniq,APL_NULL_STRING);	
			 EXEC SQL SELECT LEC_ID INTO :l_str_uniq:i_str_uniq FROM DL_REGBCN
					WHERE  BROKER_CD =:l_broker_cd AND
								CONTRACT_CD =:l_contrct_cd AND
								TO_CHAR(DL_DATE,'DD-MON-YYYY') =:l_deal_date AND
								REPO_FLAG = 'D';
	 		 IS_ANY_ORA_ERROR

			if( strcmp(l_trans_type,"A") == 0)
				strcpy(l_unique_ident,l_str_uniq);
			
			EXEC SQL DELETE FROM DL_REGBCN 
				   WHERE  BROKER_CD =:l_broker_cd AND
			            CONTRACT_CD =:l_contrct_cd AND
						 TO_CHAR(DL_DATE,'DD-MON-YYYY') =:l_deal_date AND
						 REPO_FLAG = 'D';
		   sprintf(chr_l_buf,"SqlError Check On Delete DL_REGBCN |%d|\n",sqlca.sqlcode);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
 			IS_ANY_ORA_ERROR

			EXEC SQL INSERT INTO DL_REGBCN 
					  SELECT A.CONTRACT_CD,A.MKT_TYPE   ,A.TRAN_TYPE,A.DL_DATE,A.DL_PRICE,A.BROKERCOMM,A.EXCH_CD,A.DEAL_CD,A.CLH_FLG,A.SEBI_REG_NO,A.BROKER_CD,A.CLIENT_CD,A.QTY,A.INSTR_CD,A.SETTLEMENT_NO,A.DL_AMT,A.BROKERAGE_AMT,A.STT_AMT,A.SETTLMENT_AMT,A.DL_REF_NO,A.INTER_FII_FLG,A.SEBI_REPORTED,A.ENTRY,A.REPAIRED_IND,A.MAKER,A.MAKER_DT,A.ACCESS_STAMP,A.CHECKER,A.CHECKER_DT,A.STATUS,A.SETT_DT,A.NARRATIVE,A.OFF_MARKET,A.COUNTER_PTY,A.R_TRANS_CODE,A.R_SETT_CODE,A.R_DELAY,A.R_TYPE,A.REPO_DATE,A.AMEND_DT,A.FAILREASON_CD,A.SUB_FAIL_CD,A.LR_VALDATE,A.ADDR_FRM,A.ADDR_TO,NULL,:l_unique_ident,'D',A.STAMP_DUTY FROM DL_BCN A
					  WHERE A.ROWID =:l_rowid1;
			 sprintf(chr_l_buf,"SQLERROR CHECK |%d|\n",sqlca.sqlcode);
		      CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				IS_ANY_ORA_ERROR
     }
	 if (strcmp(l_trn_ind,"D") == 0)
	 {
         sprintf(chr_l_buf,"IdentiyNo  |%s|\n",l_ident_no);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	     sprintf(chr_l_buf,"Client Code|%s|\n",l_cln_code);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

     	 EXEC SQL DELETE FROM DL_REGDEAL 
			  WHERE IDENTIY_NO =:l_ident_no AND
			        CLIENT =:l_cln_code;
        printf("Check Of the sqlcode********** ==|%d|\n",sqlca.sqlcode);
        IS_ANY_ORA_ERROR
 
		sprintf(chr_l_buf,"SQLERROR CHECK DELETE OF DL_REGDEAL|%d|\n",sqlca.sqlcode);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         EXEC SQL INSERT INTO DL_REGDEAL
		    SELECT * FROM DL_DEAL WHERE ROWID =:l_rowid1;
         IS_ANY_ORA_ERROR

       sprintf(chr_l_buf,"SQLERROR CHECK For INsertOf DL_REGDEAL|%d|\n",sqlca.sqlcode);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

     }
     
      if (strcmp(l_trn_ind,"C") == 0)
		{
  
         sprintf(chr_l_buf,"Contract_cd|%s|\n",l_contrct_cd);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"Inside theHisRecords check for broker_cd|%s|\n",l_broker_cd);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"Inside theHisRecords  Deal Dt|%s|\n",l_deal_date);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	      /*Added LEC_NO check */
		  EXEC SQL SELECT LEC_ID  INTO :l_chr_trnid:i_chr_trnid
				         FROM DL_REGBCN
					     WHERE BROKER_CD =:l_broker_cd AND
									  CONTRACT_CD =:l_contrct_cd  AND
						              TO_CHAR(DL_DATE,'DD-MON-YYYY') =:l_deal_date AND
			   						  LEC_NO IS NULL AND
            						  REPO_FLAG = 'D';
		printf("Check C error ==|%d|\n",sqlca.sqlcode);
        IS_ANY_ORA_ERROR

        /* ISKB-432  Start - Delete BCN records from regulatory Table - Rahul 09Oct2007 */
		EXEC SQL UPDATE DL_REGBCN SET SEBI_REPORTED = 'D',
							REPO_DATE =:l_syst_date:i_syst_date
			     WHERE BROKER_CD =:l_broker_cd AND
							  CONTRACT_CD =:l_contrct_cd  AND
				              TO_CHAR(DL_DATE,'DD-MON-YYYY') =:l_deal_date AND
							  LEC_NO IS NULL AND
							  LEC_ID  = :l_chr_trnid AND
        					  REPO_FLAG = 'D';
		 printf("Deleting Record from Regulatory Table sql error =|%d|\n",sqlca.sqlcode);
         IS_ANY_ORA_ERROR
        /* ISKB-432  End - Delete BCN records from regulatory Table - Rahul 09Oct2007 */

         sprintf(chr_l_buf,"Select LecId from DL_REGBCN|%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"select lec id from val of Broker_cd|%s|\n",l_broker_cd);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
        sprintf(chr_l_buf,"select lec id from val of Contract CD|%s|\n",l_contrct_cd);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
        sprintf(chr_l_buf,"select lec id from val of Contract Deal dt|%s|\n",l_deal_date);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"Check SysDate Format Check|%s|\n",l_sys_date);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
    }

       printf("records commited1 |%d|\n",sqlca.sqlerrd[2]);
	   fflush(stdout);	//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal
       sprintf(chr_l_buf,"records updated1==|%d|\n",sqlca.sqlerrd[2]);
	    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        if (strcmp(l_trn_ind,"C") == 0)
	     {
          EXEC SQL UPDATE DL_HISBCN SET SEBI_REPORTED = 'D',
					    REPO_DATE =:l_syst_date:i_syst_date
						  WHERE ROWID =:l_rowid1;
	      IS_ANY_ORA_ERROR
	      strcpy(l_unique_ident,l_chr_trnid);
		  }

		    sprintf(chr_l_buf,"Indicator Val F |%s|\n",l_trn_ind);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        if (strcmp(l_trn_ind,"F") == 0)
		  {
          EXEC SQL INSERT INTO CARDSEBI VALUES (:l_corp_id:i_corp_id,
					                                 :l_corp_clnt:i_corp_clnt,
																:l_corp_no:i_corp_no,
													         :l_syst_date:i_syst_date);

          printf("Value of sqlerror ==|%d|\n",sqlca.sqlcode);
          IS_ANY_ORA_ERROR

           sprintf(chr_l_buf," SQL ERROR CARDSEBI|%d|\n",sqlca.sqlcode);
           CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
       }


      CO_ProcMonitor(l_logfile,"Before first Cursor fprintf status",NULL,NULL);

      sprintf(chr_l_buf,"CLR type value of the Sec Cursor|%s|\n",l_r_type);
	   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

      sprintf(chr_l_buf,"Inside the  DEALCD |%s|\n",l_deal_cd);
     	CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

     sprintf(chr_l_buf,"Inside the  TranCode |%s|\n",l_fclnt_trans);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

     if (strcmp(l_trn_ind,"E") == 0)
	  {
       l_chr_sqrate = l_amt/l_qty;
       sprintf(chr_l_buf,"Calcu OfRate E Trans |%lf|\n",l_chr_sqrate);
	    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
	    l_cost = l_chr_sqrate;
	  }

	  /* Strat - SEBI Code Change - Rahul*/
		
		memset(l_reg_daily_struct_h,NULL,sizeof(REG_DAILY_STRUCT_H));		
	  	memset(l_reg_daily_struct_new,NULL,sizeof(REG_DAILY_STRUCT_H));
   
		strcpy(l_reg_daily_struct_h->h_trans_natr, l_fclnt_trans);
		strcpy(l_reg_daily_struct_h->h_settl_code, l_settl_code);
   	strcpy(l_reg_daily_struct_h->h_res_delay, l_r_delay);
		strcpy(l_reg_daily_struct_h->h_rep_type, l_trans_type);
		strcpy(l_reg_daily_struct_h->h_res_amend, l_r_type);
  		strcpy(l_reg_daily_struct_h->h_instr_sub_type, l_instr_sub_type);	    
	  
		EXEC SQL SELECT replace(:l_cln_sebi_reg_no,'-','') INTO :l_cln_sebi_reg_no FROM DUAL;
		strcpy(l_cust_code,"IN/CUS/017");

		if ( !strcmp(p_sebi_rep,"OLD") || !strcmp(p_sebi_rep,"BOTH"))
	   {	
		 memset(l_reg_daily_struct_new,NULL,sizeof(REG_DAILY_STRUCT_H)); 
		 if(SEBI_Code_Change( l_logfile,l_reg_daily_struct_h,l_reg_daily_struct_new,"OLD",l_debug_info_ptr) == APL_FAILURE)
		      APL_GOBACK_FAIL
// Old format Report not required		  
//fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%.4lf|%.2lf|%.2lf|%s|%s|%s|%s\n",l_cust_code,l_sys_date,l_unique_ident,l_cln_sebi_reg_no,l_cln_name,l_sebi_sub_acc,l_pty_sebi_reg_no,l_instr_name,l_isin,l_deal_date,l_reg_daily_struct_new->h_trans_natr,l_exch_code,l_reg_daily_struct_new->h_settl_code,l_cost,l_qty,l_amt,l_reg_daily_struct_new->h_instr_sub_type,l_reg_daily_struct_new->h_res_delay,l_reg_daily_struct_new->h_rep_type,l_reg_daily_struct_new->h_res_amend);
// ChangeS

// ChangeE

		}
		if ( !strcmp(p_sebi_rep,"NEW") || !strcmp(p_sebi_rep,"BOTH"))
		{
		  memset(l_reg_daily_struct_new,NULL,sizeof(REG_DAILY_STRUCT_H));	
		  if(SEBI_Code_Change( l_logfile,l_reg_daily_struct_h,l_reg_daily_struct_new,"NEW",l_debug_info_ptr) == APL_FAILURE)
				APL_GOBACK_FAIL
// FII Name Removed
//		  fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file_new,"%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%.4lf|%.2lf|%.2lf|%s|%s|%s|%s\n",l_cust_code,l_sys_date,l_unique_ident,l_cln_sebi_reg_no,l_cln_name,l_sebi_sub_acc,l_pty_sebi_reg_no,l_instr_name,l_isin,l_deal_date,l_reg_daily_struct_new->h_trans_natr,l_exch_code,l_reg_daily_struct_new->h_settl_code,l_cost,l_qty,l_amt,l_reg_daily_struct_new->h_instr_sub_type,l_reg_daily_struct_new->h_res_delay,l_reg_daily_struct_new->h_rep_type,l_reg_daily_struct_new->h_res_amend);
		  fflush(l_ptr_hbrokers_handoff_file_new); fprintf(l_ptr_hbrokers_handoff_file_new,"%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%.4lf|%.2lf|%.2lf|%s|%s|%s|%s\n",l_cust_code,l_sys_date,l_unique_ident,l_cln_sebi_reg_no,l_sebi_sub_acc,l_pty_sebi_reg_no,l_instr_name,l_isin,l_deal_date,l_reg_daily_struct_new->h_trans_natr,l_exch_code,l_reg_daily_struct_new->h_settl_code,l_cost,l_qty,l_amt,l_reg_daily_struct_new->h_instr_sub_type,l_reg_daily_struct_new->h_res_delay,l_reg_daily_struct_new->h_rep_type,l_reg_daily_struct_new->h_res_amend);
		

				/* End - SEBI Code Change - Rahul*/
					/* ISKB 342 - Start - Common Function call for all datatype - Rahul - 25June2007*/
						if(APL_SUCCESS != Cell_Common("left",117,l_cust_code,0,0.0,"S","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					 if(APL_SUCCESS != Cell_Common("left",85,l_sys_date,0,0.0,"M","xldate",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",95,l_unique_ident,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",111,l_cln_sebi_reg_no,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",143,l_sebi_sub_acc,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",128,l_pty_sebi_reg_no,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
                                          if(APL_SUCCESS != Cell_Common("left",269,l_instr_name,0,0.0,"M","xlzro",l_logfile))
                                                                 APL_GOBACK_FAIL
                                          if(APL_SUCCESS != Cell_Common("left",94,l_isin,0,0.0,"M","xlzro",l_logfile))
                                                                 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",85,l_deal_date,0,0.0,"M","xldate",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",110,l_reg_daily_struct_new->h_trans_natr,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",95,APL_NULL_STRING,atoi(l_exch_code),0.0,"M","",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",119,l_reg_daily_struct_new->h_settl_code,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",94,APL_NULL_STRING,0,l_cost,"M","xlflt_4",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",88,APL_NULL_STRING,0,l_qty,"M","xlflt",l_logfile)) 					  
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("left",70,APL_NULL_STRING,0,l_amt,"M","xlflt",l_logfile)) 			
								 APL_GOBACK_FAIL
					 if(APL_SUCCESS != Cell_Common("left",130,l_reg_daily_struct_new->h_instr_sub_type,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					 if(APL_SUCCESS != Cell_Common("left",116,l_reg_daily_struct_new->h_res_delay,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					 if(APL_SUCCESS != Cell_Common("left",113,l_reg_daily_struct_new->h_rep_type,0,0.0,"M","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					 if(APL_SUCCESS != Cell_Common("left",141,l_reg_daily_struct_new->h_res_amend,0,0.0,"E","xlzro",l_logfile))
								 APL_GOBACK_FAIL
					/* ISKB 342 - End - Common Function call for all datatype - Rahul - 25June2007*/
					/*Added by supriya for DTR,DDR xml report start*/

         

			EXEC SQL INSERT
			INTO DL_REG_REPT_XML
			 (
				BATCH_NO,
				REPO_DATE,
				CUST_CODE,
			        TRANSACTION_ID,
				FII_REG_NO,
				SUB_ACC_REG_NO,
				BRK_REG_NO,
				INSTR_NAME,
				INSTR_ISIN,
				TRANSACTION_DT,
				TRAN_NATURE,
				EXCH_CODE,
				SETTL_CD,
				DL_PRICE,
				QTY,
				DL_AMT,
				INSTR_TYPE,
				RES_DELAY,
				REP_TYPE,
				RES_AMEND,
				SUB_CUST_TYP
			)
			VALUES
			(
				:chr_seq_no,
				:l_sys_date,
				:l_cust_code,
				:l_unique_ident,
				:l_cln_sebi_reg_no,
				:l_sebi_sub_acc,
				:l_pty_sebi_reg_no,
				:l_instr_name,
				:l_isin,
				:l_deal_date,
				:l_reg_daily_struct_new->h_trans_natr,
				:l_exch_code,
				:l_reg_daily_struct_new->h_settl_code,
				:l_cost,
				:l_qty,
				:l_amt,
				:l_reg_daily_struct_new->h_instr_sub_type,
				:l_reg_daily_struct_new->h_res_delay,
				:l_reg_daily_struct_new->h_rep_type,
				:l_reg_daily_struct_new->h_res_amend,
				'C'
			 );

			printf("\n SQL CODE : [%d]",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
			printf(" after  insert into DL_REG_REPT_XML");
/*Added by supriya for DTR,DDR xml report end*/
				/*ISKB_198 - FPI Regulatory Reporting - starts*/
				if(strcmp(p_rep_name,"DTR") == 0)	//Generate NSDL Report only for DTR records
				{	
					sprintf(chr_l_buf,"Populating NSDL Report Intermediate Table\n");
				    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					
					if (strcmp(l_trn_ind,"B") == 0 || strcmp(l_trn_ind,"C") == 0)	//BCN based
					{
						strcpy(l_record_ref,l_contrct_cd);
						sprintf(l_temp_var,"NSDL_REPORTED='Y' AND RECORD_REF='%s' AND PTY_SEBI_REG_NO='%s' AND TRUNC(DEAL_DATE)=to_date('%s','dd/mm/yyyy') AND SOURCE_IND in ('B','C') ",l_record_ref,l_pty_sebi_reg_no,l_deal_date);

						if (strcmp(l_deal_stat,"RC") == 0)
						{
							//For reconcilled BCN, location code = that of mapped deal
							EXEC SQL
							SELECT LOCATION_CD
							  INTO :l_location_cd:i_location_cd
   							  FROM DL_DEAL
							 WHERE CLIENT = :l_cln_code
							   AND IDENTIY_NO = :l_mapped_deal;

							printf("RC LOC CD Value of sqlerror ==|%d|\n",sqlca.sqlcode);
							IS_ANY_ORA_ERROR

							//strcpy(l_location_cd,l_mapped_deal);
						}
						else if (strcmp(l_deal_stat,"AA") == 0)
						{
							//For non-reconciled BCN location code = depository mapping of client with preference to NSDL if both mapped
							EXEC SQL
							SELECT CLN_DEPO_CODE 
  							  INTO :l_location_cd:i_location_cd
							  FROM MT_CLI_DEPO_MAP DP1
			                 WHERE DP1.CLN_CODE=:l_cln_code
							   AND (DP1.CLN_DEPO_CODE='NSDL' OR 
								   (NOT EXISTS (SELECT 1 FROM MT_CLI_DEPO_MAP DP2 WHERE DP1.CLN_CODE=DP2.CLN_CODE AND DP2.CLN_DEPO_CODE='NSDL')
								    AND DP1.CLN_DEPO_CODE='CDSL'));

							printf("LOC CD Value of sqlerror ==|%d|\n",sqlca.sqlcode);
							if (sqlca.sqlcode!=1403)	//If LOCATION CODE not maintained still NSDL report should fetch reocrd with blank loc code value
							{
								IS_ANY_ORA_ERROR
							}							
						}
						
					}
					else if (strcmp(l_trn_ind,"D") == 0 || strcmp(l_trn_ind,"E") == 0)	//Deal based
					{
						strcpy(l_record_ref,l_ident_no);
						sprintf(l_temp_var,"NSDL_REPORTED='Y' AND RECORD_REF='%s' AND CLN_SEBI_REG_NO='%s' AND SEBI_SUB_ACC='%s' AND SOURCE_IND in ('D','E') ",l_record_ref,l_cln_sebi_reg_no,l_sebi_sub_acc);
					}
					else if (strcmp(l_trn_ind,"F") == 0)	//part redemption for HDFC
					{
					
						strcpy(l_record_ref,l_corp_id);
						sprintf(l_temp_var,"NSDL_REPORTED='Y' AND RECORD_REF='%s' AND CLN_SEBI_REG_NO='%s' AND SEBI_SUB_ACC='%s' AND SOURCE_IND='F' ",l_record_ref,l_cln_sebi_reg_no,l_sebi_sub_acc);						
					}

					printf("l_record_ref :%s\n",l_record_ref);
					printf("l_location_cd :%s\n",l_location_cd);


					/*For amend and delete case, search last reported record and now report it as deleted. */
					if ( !strcmp(l_reg_daily_struct_new->h_rep_type,l_amend_code) || !strcmp(l_reg_daily_struct_new->h_rep_type,l_delete_code))
					{
						sprintf(chr_l_buf,"Amended / Deleted case\n");
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

						strcpy(l_fetch_query,"INSERT INTO NSDL_DTR_REPORT_INTERM ");
						strcat(l_fetch_query,"SELECT CUST_CODE,SYS_DATE,UNIQUE_IDENT,CLN_SEBI_REG_NO,SEBI_SUB_ACC,PTY_SEBI_REG_NO,INSTR_NAME,ISIN,DEAL_DATE,TRANS_NATR,EXCH_CODE,SETTL_CODE,COST,QTY,AMT,INSTR_SUB_TYPE,RES_DELAY, ");
						//strcat(l_fetch_query,l_delete_code);
						strcat(l_fetch_query,"'DL_RPT_TYPE_D',RES_AMEND,SOURCE_IND,RECORD_REF,'N',LOCATION_CD,DEAL_CD,OFF_MARKET,CLN_CODE,SYSDATE ");
						strcat(l_fetch_query,"FROM NSDL_DTR_REPORT_INTERM WHERE REP_TYPE='DL_RPT_TYPE_N' AND ");
						strcat(l_fetch_query,l_temp_var);
						strcat(l_fetch_query,"AND REPORT_DATE=(SELECT MAX(REPORT_DATE) FROM NSDL_DTR_REPORT_INTERM WHERE ");
						strcat(l_fetch_query,l_temp_var);
						strcat(l_fetch_query," )");	
						
						printf("l_fetch_query after assign :%s\n",l_fetch_query);
	
						EXEC SQL EXECUTE IMMEDIATE :l_fetch_query;					

						printf("AMEND Value of sqlerror ==|%d|\n",sqlca.sqlcode);

						IS_ANY_ORA_ERROR
					}

					/*EXEC SQL PREPARE S FROM :l_fetch_query;
					EXEC SQL DECLARE cur_nsdl_del CURSOR FOR S;
					IS_ANY_ORA_ERROR
					CO_ProcMonitor(l_logfile,"Opening the Cursor rbi_rept",NULL,NULL);
					EXEC SQL OPEN cur_nsdl_del;
					for(;;)
					{
						CO_ProcMonitor(l_logfile,"Entered for loop",NULL,NULL);					 
						sqlca.sqlcode = 0; 

						EXEC SQL FETCH cur_nsdl_del
							      INTO :l_cust_code,
								:l_sys_date,
								:l_unique_ident,
								:l_cln_sebi_reg_no,
								:l_sebi_sub_acc,
								:l_pty_sebi_reg_no,
								:l_instr_name,
								:l_isin,
								:l_date,
								:l_reg_daily_struct_new->h_trans_natr,
								:l_exch_code,
								:l_reg_daily_struct_new->h_sett:l_code,
								:l_cost,
								:l_qty,
								:l_amt,
								:l_reg_daily_struct_new->h_instr_sub_type,
								:l_reg_daily_struct_new->h_res_delay,
								:l_reg_daily_struct_new->h_rep_type,
								:l_reg_daily_struct_new->h_res_amend,
								:l_trn_ind,
								:l_record_ref;

						sprintf(chr_l_buf,"Sqlca.sqlcode after fetch is |%d|\n",sqlca.sqlcode);
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						IS_ANY_ORA_ERROR
						if (sqlca.sqlcode == 1403)
							break;

					}

					EXEC SQL CLOSE cur_nsdl_del;
				   IS_ANY_ORA_ERROR */					

					
				   //For Delete scenario no new records needed
					if ( !strcmp(l_reg_daily_struct_new->h_rep_type,l_new_code) || !strcmp(l_reg_daily_struct_new->h_rep_type,l_amend_code))
					{
						sprintf(chr_l_buf,"Adding NSDL Report Intemediate table\n");
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

					EXEC SQL INSERT INTO NSDL_DTR_REPORT_INTERM
							 VALUES (:l_cust_code,
								:l_sys_date,
								:l_unique_ident,
								:l_cln_sebi_reg_no,
								:l_sebi_sub_acc,
								:l_pty_sebi_reg_no,
								:l_instr_name,
								:l_isin,
								:l_deal_date,
								:l_reg_daily_struct_new->h_trans_natr,
								:l_exch_code,
								:l_reg_daily_struct_new->h_settl_code,
								:l_cost,
								:l_qty,
								:l_amt,
								:l_reg_daily_struct_new->h_instr_sub_type,
								:l_reg_daily_struct_new->h_res_delay,
								:l_new_code,
								:l_reg_daily_struct_new->h_res_amend,
								:l_trn_ind,
								:l_record_ref,
								'N',
								:l_location_cd,
								:l_deal_code,
								:l_off_market,
								:l_cln_code,
								sysdate );//sysdate we are internally using to decide last reported record to be deleted for amend cases

					  printf("New Value of sqlerror ==|%d|\n",sqlca.sqlcode);
					  
					  IS_ANY_ORA_ERROR					
					}
				}
				/*ISKB_198 - FPI Regulatory Reporting - ends*/

				/*Added by Prateek on 05102015 for ISKB_1656(NSDL Transaction Report for Debt Deals) - START */

				if(strcmp(p_rep_name,"DDR") == 0)	//Generate NSDL Report only for DDR records
				{
					sprintf(chr_l_buf,"Populating NSDL Report Intermediate Table(NSDL_DDR_REPORT_INTERM)\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					if (strcmp(l_trn_ind,"B") == 0 || strcmp(l_trn_ind,"C") == 0)	//BCN based
					{
						strcpy(l_record_ref,l_contrct_cd);
						sprintf(l_temp_var,"NSDL_REPORTED='Y' AND RECORD_REF='%s' AND PTY_SEBI_REG_NO='%s' AND TRUNC(DEAL_DATE)=to_date('%s','dd/mm/yyyy') AND SOURCE_IND in ('B','C') ",l_record_ref,l_pty_sebi_reg_no,l_deal_date);
						if (strcmp(l_deal_stat,"RC") == 0)
						{
							//For reconcilled BCN, location code = that of mapped deal
								EXEC SQL
								SELECT LOCATION_CD
								INTO :l_location_cd:i_location_cd
								FROM DL_DEAL
								WHERE CLIENT = :l_cln_code
								AND IDENTIY_NO = :l_mapped_deal;

							printf("RC LOC CD Value of sqlerror ==|%d|\n",sqlca.sqlcode);
							IS_ANY_ORA_ERROR

							//strcpy(l_location_cd,l_mapped_deal);
						}
						else if (strcmp(l_deal_stat,"AA") == 0)
						{
							//For non-reconciled BCN location code = depository mapping of client with preference to NSDL if both mapped

							EXEC SQL
							SELECT CLN_DEPO_CODE 
							INTO :l_location_cd:i_location_cd
							FROM MT_CLI_DEPO_MAP DP1
							WHERE DP1.CLN_CODE=:l_cln_code
							AND (DP1.CLN_DEPO_CODE='NSDL' OR 
							(NOT EXISTS (SELECT 1 FROM MT_CLI_DEPO_MAP DP2 WHERE DP1.CLN_CODE=DP2.CLN_CODE AND DP2.CLN_DEPO_CODE='NSDL')
							AND DP1.CLN_DEPO_CODE='CDSL'));

							printf("LOC CD Value of sqlerror ==|%d|\n",sqlca.sqlcode);
							fflush(stdout);
							if (sqlca.sqlcode!=1403)	//If LOCATION CODE not maintained still NSDL report should fetch reocrd with blank loc code value
							{
								IS_ANY_ORA_ERROR
							}
						}
						
					}
					else if (strcmp(l_trn_ind,"D") == 0 || strcmp(l_trn_ind,"E") == 0)	//Deal based
					{
						strcpy(l_record_ref,l_ident_no);
						sprintf(l_temp_var,"NSDL_REPORTED='Y' AND RECORD_REF='%s' AND CLN_SEBI_REG_NO='%s' AND SEBI_SUB_ACC='%s' AND SOURCE_IND in ('D','E') ",l_record_ref,l_cln_sebi_reg_no,l_sebi_sub_acc);
		}
					else if (strcmp(l_trn_ind,"F") == 0)	//part redemption for HDFC
					{
						strcpy(l_record_ref,l_corp_id);
						sprintf(l_temp_var,"NSDL_REPORTED='Y' AND RECORD_REF='%s' AND CLN_SEBI_REG_NO='%s' AND SEBI_SUB_ACC='%s' AND SOURCE_IND='F' ",l_record_ref,l_cln_sebi_reg_no,l_sebi_sub_acc);						
					}
					//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Starts
					printf("l_record_ref :%s\n",l_record_ref);
					fflush(stdout);	
					printf("l_location_cd :%s\n",l_location_cd);
					fflush(stdout);
					printf("Transaction Indicatior 1= |%s|\n",l_trn_ind);
					fflush(stdout);	
					printf("Report Type = |%s|\n",l_reg_daily_struct_new->h_rep_type);
					fflush(stdout);	
					printf("Amend Code = |%s|\n",l_amend_code);
					fflush(stdout);	
					printf("Delete Code = |%s|\n",l_delete_code);
					fflush(stdout);	
					printf("New Code = |%s|\n",l_new_code);
					fflush(stdout);	
					//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Ends

					/*For amend and delete case, search last reported record and now report it as deleted. */
					if ( !strcmp(l_reg_daily_struct_new->h_rep_type,l_amend_code) || !strcmp(l_reg_daily_struct_new->h_rep_type,l_delete_code))
					{
						sprintf(chr_l_buf,"Amended / Deleted case\n");
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

						strcpy(l_fetch_query,"INSERT INTO NSDL_DDR_REPORT_INTERM ");
						strcat(l_fetch_query,"SELECT CUST_CODE,SYS_DATE,UNIQUE_IDENT,CLN_SEBI_REG_NO,SEBI_SUB_ACC,PTY_SEBI_REG_NO,INSTR_NAME,ISIN,DEAL_DATE,TRANS_NATR,EXCH_CODE,SETTL_CODE,COST,QTY,AMT,INSTR_SUB_TYPE,RES_DELAY, ");
						//strcat(l_fetch_query,l_delete_code);
						strcat(l_fetch_query,"'DL_RPT_TYPE_D',RES_AMEND,SOURCE_IND,RECORD_REF,'N',LOCATION_CD,DEAL_CD,OFF_MARKET,CLN_CODE,SYSDATE ");
						strcat(l_fetch_query,"FROM NSDL_DDR_REPORT_INTERM WHERE REP_TYPE='DL_RPT_TYPE_N' AND ");
						strcat(l_fetch_query,l_temp_var);
						sprintf(chr_l_buf,"l_temp_var after  :%s\n",l_temp_var);
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						strcat(l_fetch_query,"AND REPORT_DATE=(SELECT MAX(REPORT_DATE) FROM NSDL_DDR_REPORT_INTERM WHERE ");
						strcat(l_fetch_query,l_temp_var);
						sprintf(chr_l_buf,"l_temp_var after  :%s\n",l_temp_var);
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						strcat(l_fetch_query," )");

						//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Starts
						printf("l_fetch_query after assign :%s\n",l_fetch_query);
						fflush(stdout);
						sprintf(chr_l_buf,"Venkat Printed l_fetch_query ==|%s|\n",l_fetch_query);
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						printf("Buffer Length 1 = |%d|\n",strlen(chr_l_buf));
						fflush(stdout);
						EXEC SQL EXECUTE IMMEDIATE :l_fetch_query;
						printf("AMEND Value of sqlerror ==|%d|\n",sqlca.sqlcode);
						fflush(stdout);
						printf("Transaction Indicator 2 =|%s|\n",l_trn_ind);
						fflush(stdout);
						//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Ends
						IS_ANY_ORA_ERROR
	  }
					//For Delete scenario no new records needed
					if ( !strcmp(l_reg_daily_struct_new->h_rep_type,l_new_code) || !strcmp(l_reg_daily_struct_new->h_rep_type,l_amend_code))
					{
						//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Starts
						sprintf(chr_l_buf,"Adding NSDL Report Intemediate table\n");
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						sprintf(chr_l_buf,"null err trace- start\n");
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						printf("Buffer Length 2 = |%d|\n",strlen(chr_l_buf));
						fflush(stdout);
					    sprintf(chr_l_buf,"SOURCE_IND == |%s|\n",l_trn_ind);  
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						printf("Buffer Length  = |%d|\n",strlen(chr_l_buf));
						fflush(stdout);
					    sprintf(chr_l_buf,"RECORD_REF == |%s|\n",l_record_ref);
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					    sprintf(chr_l_buf,"DEAL_CD == |%s|\n",l_deal_code);
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					    sprintf(chr_l_buf,"OFF_MARKET == |%s|\n",l_off_market);
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					    sprintf(chr_l_buf,"CLN_CODE == |%s|\n",l_cln_code);          
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					    sprintf(chr_l_buf,"null err trace - complete  111\n");
					    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

						//	Alert("Transaction Indicator is...|%s|",l_trn_ind);
						printf("Transaction Indicator is .. |%s|",l_trn_ind);
						fflush(stdout);
						//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal - Ends
						EXEC SQL INSERT INTO NSDL_DDR_REPORT_INTERM
							 VALUES (:l_cust_code,
								:l_sys_date,
								:l_unique_ident,
								:l_cln_sebi_reg_no,
								:l_sebi_sub_acc,
								:l_pty_sebi_reg_no,
								:l_instr_name,
								:l_isin,
								:l_deal_date,
								:l_reg_daily_struct_new->h_trans_natr,
								:l_exch_code,
								:l_reg_daily_struct_new->h_settl_code,
								:l_cost,
								:l_qty,
								:l_amt,
								:l_reg_daily_struct_new->h_instr_sub_type,
								:l_reg_daily_struct_new->h_res_delay,
								:l_new_code,
								:l_reg_daily_struct_new->h_res_amend,
								:l_trn_ind,
								:l_record_ref,
								'N',
								:l_location_cd,
								:l_deal_code,
								:l_off_market,
								:l_cln_code,
								sysdate );//sysdate we are internally using to decide last reported record to be deleted for amend cases

					  sprintf(chr_l_buf,"New Value of sqlerror ==|%d|\n",sqlca.sqlcode);
					  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					  printf("New Value of sqlerror ==|%d|\n",sqlca.sqlcode);
						fflush(stdout);	//(ISKB_9103) - Memory Corruption Issue - Changes by Mrinal.
					  IS_ANY_ORA_ERROR
					}
				}
				/*Added by Prateek on 05102015 for ISKB_1656(NSDL Transaction Report for Debt Deals) - END */
		}
	  }


     CO_ProcMonitor(l_logfile,"Closing a dtr_rep cursor",NULL,NULL); 
     IF_COND_EXISTS("REG_REPT","DAILY_REPT")
	  		EXEC SQL CLOSE dtr_rep_hdfc;
	  else
	  	   EXEC SQL CLOSE dtr_rep_kotak;
	  IS_ANY_ORA_ERROR

	/* Excle formate changes -Rahul 30/04/2007 */
	if(APL_SUCCESS != XLS_End_Page())
		  APL_GOBACK_FAIL

	/*ISKB_198 - FPI Regulatory Reporting - starts*/
	EXEC SQL COMMIT;		//commit needed because otherwise it will not be available for RegRept program to generate NSDL excel report
		IS_ANY_ORA_ERROR

	if(strcmp(p_rep_name,"DTR") == 0)	//Generate NSDL Report only for DTR records
	{
		sprintf(chr_l_buf,"Generating NSDL Report for DTR\n");
	    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		//calling pure excel generation framework
		strcpy(l_intl_root_path,getenv("INTL_ROOT_PATH"));
		if (CO_ReadToken(l_ptr_ini_file,"INTL_PDF_PATH",chr_l_pdf_dir,l_debug_info_ptr) != APL_SUCCESS)
					return(APL_FAILURE);
	
		//Changes done by shrinath for KOTAK IB_1720 start
		EXEC SQL SELECT to_char(SYS_DATE,'DDMMYYYY') INTO :chr_l_sysdatename FROM PRO_SYS_DATE;
		IS_ANY_ORA_ERROR
			strcpy(l_pro_gseqno_struct_h.sequencename, "FPIISINEQ_SEQ");
		strcpy(l_pro_gseqno_struct_h.seq_attrb_a, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_b, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_c, APL_NULL_STRING);
	
		l_pro_gseqno_struct_h.seq_stepby = 1;
		l_pro_gseqno_struct_h.seq_start = 1;
		l_pro_gseqno_struct_h.last_seqnum = 99;
		l_pro_gseqno_struct_h.recycle_ind = RECYCLE_EOD;
	
       if((l_db_seq = CO_RtvNxtSeqNum(&l_pro_gseqno_struct_h,l_debug_info_ptr)) == APL_FAILURE)
             APL_GOBACK_FAIL
	
		sprintf(chr_l_xls_file,"FPIISINEQ%s%02d.XLS",chr_l_sysdatename,l_db_seq); /*pending 01 in stead of 1 */
		l_proc_id = getpid();	/*returns -1 as error */
		//Changes done by shrinath for KOTAK KB_1720 ends
		if (l_proc_id < 0)
			APL_GOBACK_FAIL
	
		printf ("\nArgument :%s:\n",l_intl_root_path);
		printf ("Argument :%s:\n",chr_l_pdf_dir);
		printf ("Argument :%s:\n",chr_l_xls_file);
		printf ("Argument :%s:\n",p_intl_envdatastruct_h->usr);
		printf ("Argument :%d:\n",l_proc_id);
		fflush(stdout);
	
		sprintf(l_gen_excelrpt,"%sExcelRPT_Generator.ksh %s %s %s %d %s",l_intl_root_path, chr_l_pdf_dir, chr_l_xls_file, p_intl_envdatastruct_h->usr, l_proc_id, "XL_01");
		fflush(stdout);
		l_i_retval=system(l_gen_excelrpt);
	
		if(l_i_retval == 0)
			printf("ExcelRPT_Generator.ksh Executed Successfully ");
		else
		{
			printf("ExcelRPT_Generator.ksh Executed UnSuccessfully ");
			fflush(stdout);
	
			APL_GOBACK_FAIL
		}
	}
	/*ISKB_198 - FPI Regulatory Reporting - ends*/

	/*Added by Prateek on 05102015 for ISKB_1656(NSDL Transaction Report for Debt Deals) - START */
	if(strcmp(p_rep_name,"DDR") == 0)	//Generate NSDL Report only for DDR records
	{
		sprintf(chr_l_buf,"Generating NSDL Report for Debt\n");
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		//Calling pure excel generation framework
		strcpy(l_intl_root_path,getenv("INTL_ROOT_PATH"));
		if (CO_ReadToken(l_ptr_ini_file,"INTL_PDF_PATH",chr_l_pdf_dir,l_debug_info_ptr) != APL_SUCCESS)
		return(APL_FAILURE);
	
		//Changes done by shrinath for KOTAK  KB_1720 start
		EXEC SQL SELECT to_char(SYS_DATE,'DDMMYYYY')INTO :chr_l_sysdatename FROM PRO_SYS_DATE;
		IS_ANY_ORA_ERROR
		//Changes for Reset of Sequence
		strcpy(l_pro_gseqno_struct_h.sequencename, "FPIISINDEBT_SEQ");
		strcpy(l_pro_gseqno_struct_h.seq_attrb_a, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_b, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_c, APL_NULL_STRING);
	
		l_pro_gseqno_struct_h.seq_stepby = 1;
		l_pro_gseqno_struct_h.seq_start = 1;
		l_pro_gseqno_struct_h.last_seqnum = 99;
		l_pro_gseqno_struct_h.recycle_ind = RECYCLE_EOD;

		if((int_l_seqnum_a = CO_RtvNxtSeqNum(&l_pro_gseqno_struct_h,l_debug_info_ptr)) == APL_FAILURE)
		APL_GOBACK_FAIL

		sprintf(chr_l_xls_file,"FPIISINDEBT%s%02d.XLS",chr_l_sysdatename,int_l_seqnum_a); /*pending 01 in stead of 1 */
		l_proc_id = getpid();	/*returns -1 as error */
		//Changes done by shrinath for  KOTAK  KB_1720 ends
		if (l_proc_id < 0)
		APL_GOBACK_FAIL
	
		printf ("\n NSDL_Debt-Argument :%s:\n",l_intl_root_path);
		printf ("NSDL_Debt-Argument :%s:\n",chr_l_pdf_dir);
		printf ("NSDL_Debt-Argument :%s:\n",chr_l_xls_file);
		printf ("NSDL_Debt-Argument :%s:\n",p_intl_envdatastruct_h->usr);
		printf ("NSDL_Debt-Argument :%d:\n",l_proc_id);
		fflush(stdout);
	
		sprintf(l_gen_excelrpt,"%sExcelRPT_Generator.ksh %s %s %s %d %s",l_intl_root_path, chr_l_pdf_dir, chr_l_xls_file, p_intl_envdatastruct_h->usr, l_proc_id, "XL_02");
		fflush(stdout);
		l_i_retval=system(l_gen_excelrpt);
	
		if(l_i_retval == 0)
			printf("NSDL_Debt - ExcelRPT_Generator.ksh Executed Successfully ");
		else
		{
			printf("NSDL_Debt - ExcelRPT_Generator.ksh Executed UnSuccessfully ");
			fflush(stdout);
	
			APL_GOBACK_FAIL
		}
	}
	/*Added by Prateek on 05102015 for ISKB_1656(NSDL Transaction Report for Debt Deals) - END */

	RETURN_SUCCESS :
		#ifdef SYS_DEBUG
			printf("Leaving Function Daily_FRep_ClntInst with success\n");
			fflush(stdout);
		#endif
		if ( !strcmp(p_sebi_rep,"OLD") || !strcmp(p_sebi_rep,"BOTH"))	/* SEBI Code Change - Rahul */
//Changes for Excel Format	fclose(l_ptr_hbrokers_handoff_file);
		if ( !strcmp(p_sebi_rep,"NEW") || !strcmp(p_sebi_rep,"BOTH")) /* SEBI Code Change - Rahul */
			fclose(l_ptr_hbrokers_handoff_file_new);
		free(l_intl_rept_struct_ha);
		/*Start - SEBI Code Change - Rahul */
		free(l_reg_daily_struct_h);
		//free(l_reg_daily_struct_h);
		/*End - SEBI Code Change - Rahul */
		fclose(l_ptr_ini_file);
		free(l_intl_rept_struct_ha_xls);
      CO_ProcMonitor(l_logfile,"Leaving Function Daily_FRep_ClntInst with Success",NULL,NULL);
		return(APL_SUCCESS);

	RETURN_FAILURE :
		#ifdef SYS_DEBUG
			printf("Leaving Function Daily_FRep_ClntInst with errors\n");
			fflush(stdout);
		#endif
		if ( !strcmp(p_sebi_rep,"OLD") || !strcmp(p_sebi_rep,"BOTH")) /* SEBI Code Change - Rahul */
//Changes for Excel Format:	fclose(l_ptr_hbrokers_handoff_file);
		if ( !strcmp(p_sebi_rep,"NEW") || !strcmp(p_sebi_rep,"BOTH"))/* SEBI Code Change - Rahul */
			fclose(l_ptr_hbrokers_handoff_file_new);
		free(l_intl_rept_struct_ha);
		/* SEBI Code Change - Rahul */
		free(l_reg_daily_struct_h);
		free(l_reg_daily_struct_new);
		/* SEBI Code Change - Rahul */
		fclose(l_ptr_ini_file);
		free(l_intl_rept_struct_ha_xls);
      CO_ProcMonitor(l_logfile,"Leaving Function Daily_FRep_ClntInst with Failure",NULL,NULL);
		return(APL_FAILURE);

}


/* Start - SEBI Code Change function - Rahul */
int SEBI_Code_Change(FILE *l_logfile,REG_DAILY_STRUCT_H *l_reg_daily_struct_h,REG_DAILY_STRUCT_H *l_reg_daily_struct_new,char *l_sebi_rep_type,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
			
    char  chr_l_buf[BUFFER_LEN]   =  APL_NULL_STRING;
  	 CO_ProcMonitor(l_logfile,"Entering Function SEBI_Code_Change",NULL,NULL);

		EXEC SQL SELECT DECODE(:l_sebi_rep_type,'OLD',OLD_CODE,'NEW',NEW_CODE )  INTO :l_reg_daily_struct_new->h_trans_natr
		         FROM DL_SEBI_CODE  WHERE CODE_TYPE = 'TXN_CODE' AND INDICATOR = trim(:l_reg_daily_struct_h->h_trans_natr) ;
			IS_ANY_ORA_ERROR
			sprintf(chr_l_buf,"Nature Of Transaction |%s|\n",l_reg_daily_struct_new->h_trans_natr);
	      CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

			
		EXEC SQL SELECT DECODE(:l_sebi_rep_type,'OLD',OLD_CODE,'NEW',NEW_CODE )  INTO :l_reg_daily_struct_new->h_settl_code
		        FROM DL_SEBI_CODE  WHERE CODE_TYPE = 'SETT_CODE' AND INDICATOR = trim(:l_reg_daily_struct_h->h_settl_code) ;
			IS_ANY_ORA_ERROR
		   sprintf(chr_l_buf,"Settelment Code  |%s|\n",l_reg_daily_struct_new->h_settl_code);
	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		EXEC SQL SELECT DECODE(:l_sebi_rep_type,'OLD',OLD_CODE,'NEW',NEW_CODE )  INTO :l_reg_daily_struct_new->h_res_delay
				 FROM DL_SEBI_CODE  WHERE CODE_TYPE = 'RES_DELAY' AND INDICATOR = trim(:l_reg_daily_struct_h->h_res_delay) ;
			 IS_ANY_ORA_ERROR 
		   sprintf(chr_l_buf,"Reasn For Delay   |%s|\n",l_reg_daily_struct_new->h_res_delay);
	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		EXEC SQL SELECT DECODE(:l_sebi_rep_type,'OLD',OLD_CODE,'NEW',NEW_CODE )  INTO :l_reg_daily_struct_new->h_rep_type
				 FROM DL_SEBI_CODE  WHERE CODE_TYPE = 'REP_TYPE' AND INDICATOR = trim(:l_reg_daily_struct_h->h_rep_type) ;
			 IS_ANY_ORA_ERROR		
		   sprintf(chr_l_buf,"Reporting Type   |%s|\n",l_reg_daily_struct_new->h_rep_type);
	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		EXEC SQL SELECT DECODE(:l_sebi_rep_type,'OLD',OLD_CODE,'NEW',NEW_CODE )  INTO :l_reg_daily_struct_new->h_res_amend
				 FROM DL_SEBI_CODE  WHERE CODE_TYPE = 'RES_AMD' AND INDICATOR = trim(:l_reg_daily_struct_h->h_res_amend) ;
			 IS_ANY_ORA_ERROR	  
		   sprintf(chr_l_buf,"Reason for Ammendment |%s|\n",l_reg_daily_struct_new->h_res_amend);
	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	EXEC SQL SELECT DECODE(:l_sebi_rep_type,'OLD',OLD_CODE,'NEW',NEW_CODE) INTO :l_reg_daily_struct_new->h_instr_sub_type
		FROM DL_SEBI_CODE  WHERE CODE_TYPE = 'INST_SUB_TYPE' AND INDICATOR = trim(:l_reg_daily_struct_h->h_instr_sub_type) ;
			 IS_ANY_ORA_ERROR
				 sprintf(chr_l_buf,"Instrument Sub Type is |%s|\n",l_reg_daily_struct_new->h_instr_sub_type);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 
	
	if(!strcmp(l_reg_daily_struct_new->h_instr_sub_type,APL_NULL_STRING))
	{
			strcpy(l_reg_daily_struct_new->h_instr_sub_type,"REG_DL_INSTR_");
	}
	fflush(l_logfile); fprintf(l_logfile,"Returing h_instr_sub_type=|%s|\n",l_reg_daily_struct_new->h_instr_sub_type);			

		RETURN_SUCCES :
			#ifdef SYS_DEBUG
		       CO_ProcMonitor(l_logfile,"Leaving Function SEBI_Code_Change with Success 1",NULL,NULL);
				fflush(stdout);
			#endif
			CO_ProcMonitor(l_logfile,"Leaving Function SEBI_Code_Change with Success",NULL,NULL);
		return(APL_SUCCESS);

		RETURN_FAILURE :
			#ifdef SYS_DEBUG
			    CO_ProcMonitor(l_logfile,"Leaving Function SEBI_Code_Change with Failure 1",NULL,NULL);
				fflush(stdout);
			#endif
			CO_ProcMonitor(l_logfile,"Leaving Function SEBI_Code_Change with Failure",NULL,NULL);
		return(APL_FAILURE);

}
/* End - SEBI Code Change function - Rahul */

int Sum_FRep_ClntInst(char *p_rep_name,char *p_chr_daily_dt,char **argv,FILE *l_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char	chr_l_sysdate[APL_DATE_LEN]										=	APL_NULL_STRING;
   char  chr_l_sr_no[4]                                         =  APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]								=	APL_NULL_STRING;
	char  chr_l_h_aresponse_ca_id[CORP_ID_LEN]						   =	APL_NULL_STRING;
	char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char chr_l_File_Name_new[FILENAME_LEN_A]   = APL_NULL_STRING;	//Changes for Excel Format
	char chr_l_Path[FILENAME_LEN_A]   = APL_NULL_STRING;		//Changes for Excel Format
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_buf[BUFFER_LEN]                    =  APL_NULL_STRING;
    char l_instr_type[4] = APL_NULL_STRING;
	 char l_instr_type_sec[4] = APL_NULL_STRING; 
  char l_cust_code[11] = APL_NULL_STRING;	//Changes for Excel Format
  char l_cnt_date[11] = APL_NULL_STRING;

  char l_instr_type1[4] = APL_NULL_STRING;  /* ISKB - 560: ASHISH 16-02-2008 */

  short i_cnt_date = 0;
  short i_cust_code = 0;
  
  char l_sys_date[12] = APL_NULL_STRING;
  short i_sys_date = 0;
  char l_trn_ind[2] = APL_NULL_STRING;
  short i_trn_ind = 0;
  double  l_pur_count = 0.0;
  short i_pur_count = 0;
  double  l_sal_count= 0.0;
  short  i_sal_count= 0;
  double l_bonus_count = 0.0;
  short i_bonus_count = 0;
  double l_pur_value = 0.0;
  short i_pur_value = 0;
  double l_sal_value = 0.0;
  short i_sal_value = 0;
  double l_del_value = 0.0;
  short i_del_value = 0;
  double l_amd_value = 0.0;
  short i_amd_value = 0;

 /*Start- For Calculating CA Trade Value -Rahul */ 
  double l_bonus_purval = 0.0;
  short i_bonus_purval = 0;
  double l_bonus_salval = 0.0;
  short i_bonus_salval = 0;

/*Commented on 14112013 for ISKB_6399-START
  int l_CA_RD_cnt = 0;
  short i_CA_RD_cnt = 0;
  double l_CA_RD_qty = 0.0;
  short i_CA_RD_qty = 0;
  double l_CA_RD_amt = 0.0;
  short i_CA_RD_amt = 0;
Commented on 14112013 for ISKB_6399-END*/
  
/*End - For Calculating CA Trade Value -Rahul */	  
    
    int l_pur_trns_cnt = 0;
    short i_pur_trns_cnt = 0;
    int l_sal_trns_cnt = 0;
    short i_sal_trns_cnt = 0;
    int l_bon_trns_cnt = 0;
    short i_bon_trns_cnt = 0;
    int l_all_count = 0;
    int l_del_count = 0; 
    short i_del_count = 0;
    double l_deal_count  = 0.0;
    short  i_deal_count  = 0;
    int l_amd_count  = 0;
	 short i_amd_count = 0;
    double l_sum_amd  = 0.0;
    short i_sum_amd = 0;
    double l_all_purqty = 0.0;
    double l_all_salqty = 0.0;
	 double l_all_purcval = 0.0;
    double l_all_salcval = 0.0;
	 int l_sqr_pur_cnt = 0;
	 short i_sqr_pur_cnt = 0;
	 int l_sqr_sal_cnt = 0;
	 short i_sqr_sal_cnt = 0;
	 double l_sqr_purqty = 0.0;
    short i_sqr_purqty = 0;
	 double l_sqr_salqty = 0.0;
	 short i_sqr_salqty = 0;
	 double l_sqr_purval = 0.0;
	 short i_sqr_purval = 0;
    double l_sqr_salval = 0.0;
	 short i_sqr_salval = 0;
    int  l_chr_pcount = 0;
	 int  l_chr_scount = 0;
	//Added on 24102013 for ISKB_6377(trades having transaction code 07 and 15 were not picked up in DTS report)-START
	int l_bon_trns_deal_cnt = 0;
	short i_bon_trns_deal_cnt = 0;
	int l_bon_trns_bcn_cnt = 0;
	short i_bon_trns_bcn_cnt = 0;
	double l_bonus_deal_count = 0.0;
	short i_bonus_deal_count = 0;
	double l_bonus_bcn_count = 0.0;
	short i_bonus_bcn_count = 0;
	//Added on 24102013 for ISKB_6377(trades having transaction code 07 and 15 were not picked up in DTS report)-START
	/* Added by Panith For CSGL DDR Reports  [START]*/
	int l_csgl_pur_cnt = 0;
	short i_csgl_pur_cnt = 0;
	int l_csgl_sal_cnt = 0;
	short i_csgl_sal_cnt = 0;
	double l_csgl_purqty = 0.0;
    short i_csgl_purqty = 0;
	double l_csgl_salqty = 0.0;
	short i_csgl_salqty = 0;
	double l_csgl_purval = 0.0;
	 short i_csgl_purval = 0;
    double l_csgl_salval = 0.0;
	 short i_csgl_salval = 0;
	/* Added by Panith For CSGL DDR Reports  [END]*/
	FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;


	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;
	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha_xls  =NULL;	//Changes for Excel Format

	memset(chr_l_sr_no,'\0',4);
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	/* changes by amish 1905 */
	 memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));

	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);
	l_intl_rept_struct_ha_xls= (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));	//Changes for Excel Format
	APL_MALLOC_FAIL(l_intl_rept_struct_ha_xls);		//Changes for Excel Format

	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));

   CO_ProcMonitor(l_logfile,"Entered Into Summary Report ",NULL,NULL);

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");
   
   sprintf(chr_l_buf," Report Name is |%s|\n",p_rep_name);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

//changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report
   if ((strcmp(p_rep_name,"DTS") == 0))
   {
     strcpy(l_instr_type_sec,"EQ");
   }

	else if ((strcmp(p_rep_name,"DDS") == 0))
   {
    strcpy(l_instr_type_sec,"DB");
   }	  
//changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report 

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		  return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		  return(APL_FAILURE);

   printf("FILE Check the file name CHEEEEE ==|%s|\n",chr_l_handoff_dir);

	EXEC SQL SELECT to_char(SYS_DATE,'DDMMYY') INTO :chr_l_sysdate FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR

  	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);
	strcpy(chr_l_Path,chr_l_handoff_dir);	//Changes for Excel Format

   if (strcmp(p_rep_name,"DTS") ==0)
   {	
	      strcat(chr_l_hbrokers_handoff_file_name,"DS");
		  strcpy(chr_l_File_Name_new,"DS");
   }
   else if (strcmp(p_rep_name,"DDS") ==0)
	{
	    strcat(chr_l_hbrokers_handoff_file_name,"DDS");
		strcpy(chr_l_File_Name_new,"DDS");
	}
   strcat(chr_l_hbrokers_handoff_file_name,chr_l_sysdate);
   strcat(chr_l_hbrokers_handoff_file_name,".txt");
   strcat(chr_l_File_Name_new,chr_l_sysdate);
   

	 sprintf(chr_l_buf,"File Name chr_l_hbrokers_handoff_file_name |%s|\n",chr_l_hbrokers_handoff_file_name);
	 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	
   if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
      return(APL_FAILURE);

   memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));


 	strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
   strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   l_intl_rept_struct_ha->report_width = 100;
   strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);

   strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);

   //strcat(p_chr_daily_dt,APL_NULL_TIME);
//Start Changes for Excel Format for Excel Format
   if(APL_SUCCESS != XLS_Strt_Page(chr_l_Path,chr_l_File_Name_new,"Sheet1"))
	{
       APL_GOBACK_FAIL
	}
	strcat(chr_l_File_Name_new,".xls");
	strcpy(l_intl_rept_struct_ha_xls->report_name,chr_l_File_Name_new);
    strcpy(l_intl_rept_struct_ha_xls->report_desc, APL_HOFF_FILE_DESC);
    strcpy(l_intl_rept_struct_ha_xls->report_date, argv[2]);
    l_intl_rept_struct_ha_xls->report_width = 100;
    strcpy(l_intl_rept_struct_ha_xls->task_desc, p_intl_envdatastruct_h->processtion);
    strcpy(l_intl_rept_struct_ha_xls->fe_be_ind, APL_BE_IND);
    strcpy(l_intl_rept_struct_ha_xls->usr, p_intl_envdatastruct_h->usr);

    if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha_xls, l_debug_info_ptr))
    {
       APL_GOBACK_FAIL
    }
//End Changes for Excel Format

   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
       APL_GOBACK_FAIL
   }
	
	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_curr_datetime,l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }
   sprintf(chr_l_buf,"Date Passed for Sum Report|%s|\n",p_chr_daily_dt);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
   

   sprintf(chr_l_buf,"Cust Code of the Records Before Query|%s|\n",l_cust_code);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

/*    EXEC SQL SELECT CUST_CODE  INTO :l_cust_code:i_cust_code
		              FROM MT_COMMON_SYS_PARAMS;
*/
	strcpy(l_cust_code,"IN/CUS/017");
	IS_ANY_ORA_ERROR

	sprintf(chr_l_buf,"Cust Code of the Records After Query|%s|\n",l_cust_code);
	CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	CO_ProcMonitor(l_logfile,"Calculating Number (Count) of Transaction\n",NULL,NULL);
	EXEC SQL SELECT COUNT(*) INTO :l_pur_trns_cnt
			         FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
					 WHERE /*DEAL_CD IN ('2','4') AND*/ 
					             A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
				   			     A.INSTR_CD = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
			       B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec) AND
					 B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
			       /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					A.R_TRANS_CODE in ('01','02','03','05','06','14','16') AND 
						         TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') AND A.SEBI_REPORTED = 'Y' /*AMEND_DT IS NULL*/;

	IS_ANY_ORA_ERROR
	printf("Error check on ==|%d|\n",sqlca.sqlcode);
	
   sprintf(chr_l_buf,"No Of Purchase Transactions |%d|\n",l_pur_trns_cnt);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

   printf("Query Check3\n");  
	 
   EXEC SQL SELECT COUNT(*) INTO :l_sal_trns_cnt:i_sal_trns_cnt
					 FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
					 WHERE /*DEAL_CD IN ('1','3') AND*/
								   A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
								   A.INSTR_CD = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
			       B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec) AND
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
			       /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					 A.R_TRANS_CODE in ('04','08','09','10','11','13') AND 
					              TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  AND A.SEBI_REPORTED = 'Y' /*AMEND_DT IS NULL*/;

	printf("Value of count in sales ==|%d|\n",l_sal_trns_cnt);

  IS_ANY_ORA_ERROR

   sprintf(chr_l_buf,"No Of Sale Transactions |%d|\n",l_sal_trns_cnt);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	


/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//   EXEC SQL SELECT COUNT(*) INTO :l_sqr_pur_cnt:i_sqr_pur_cnt
//					FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
//				    WHERE /*DEAL_CD = '4' AND*/
//								A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//						        A.INSTR_CODE = B.INSTR_CODE AND	/* ISKB - 560: ASHISH 16-02-2008 Start */
//			      ((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//	        OR    (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//			      /*ISKB - 560: ASHISH 16-02-2008 End */ AND
//					((A.R_TRANS_CODE in ('01','02','03','05','06','14','16') AND A.DL_CLASS IN ('17','18','19','21') ) OR
//								(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('2','4') ))
//								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */
   /* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start
   Details: 16 removed for SP-AM/TO deals,07 added only for CV event)  */
   EXEC SQL SELECT COUNT(*) INTO :l_sqr_pur_cnt:i_sqr_pur_cnt //sq and CA purchase except Bonus, SP, CR
   FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E
				    WHERE /*DEAL_CD = '4' AND*/
								A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
   E.CORP_ID(+) = A.INFORMATON AND 
						        A.INSTR_CODE = B.INSTR_CODE AND	/* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
   B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			      /*ISKB - 560: ASHISH 16-02-2008 End */ AND
				  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND
/*changes done by shrinath for KOTAK KB_1720 Ends for DTS and DDS summary report*/
	/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
   (((A.R_TRANS_CODE in ('01','02','03','05','06', '14') OR (A.R_TRANS_CODE ='07' AND E.CA_EVENT = 'CV') ) AND A.DL_CLASS IN ('17','18','19','21')) OR  */
   (((A.R_TRANS_CODE in ('01','02','03','05','06', '14')) AND A.DL_CLASS IN ('17','18','19','21')) OR
   /*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-END*/
								(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('2','4') ))
								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  ;
   /* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End
   Details: 16 removed for SP-AM/TO deals,07 added only for CV event)  */

    IS_ANY_ORA_ERROR

	sprintf(chr_l_buf,"No Of sales SQUARE OFF TRADE |%d|\n",l_sqr_pur_cnt);
	 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//	   EXEC SQL SELECT COUNT(*) INTO :l_sqr_sal_cnt:i_sqr_sal_cnt
//					FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
//				     WHERE /*DEAL_CD = '3' AND*/
//       							 A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//					             A.INSTR_CODE = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
//			           ((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//			    OR     (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//  			           /* ISKB - 560: ASHISH 16-02-2008 End */ AND
//					((A.R_TRANS_CODE in ('04','08','09','10','11','13') AND A.DL_CLASS IN ('17','18','19','21') ) OR
//								(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('1','3') ))
//								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

	   /* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start
	   Details: 15,16 to be added only for CV deals)  */
	   EXEC SQL SELECT COUNT(*) INTO :l_sqr_sal_cnt:i_sqr_sal_cnt //sq and CA Sell except Bonus, SP, CR
	   FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E
				     WHERE /*DEAL_CD = '3' AND*/
       							 A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
	   E.CORP_ID(+) = A.INFORMATON AND
					             A.INSTR_CODE = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
	   B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
  			           /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					   B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
		/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
	   (((A.R_TRANS_CODE in ('04','08','09','10','11','13') OR (A.R_TRANS_CODE in ('15','16') and E.CA_EVENT = 'CV')) AND A.DL_CLASS IN ('17','18','19','21') ) OR */
	   (((A.R_TRANS_CODE in ('04','08','09','10','11','13') OR (A.R_TRANS_CODE in ('16') and E.CA_EVENT = 'CV')) AND A.DL_CLASS IN ('17','18','19','21') ) OR
	   /*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-END*/
	   (A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('1','3') )) AND 
	   TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  ;
	   /* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK)  on 10/06/2014  - End
	   Details: 15,16 to be added only for CV deals) */
      IS_ANY_ORA_ERROR

	 sprintf(chr_l_buf,"No Of purchase SQUARE OFF TRADE |%d|\n",l_sqr_sal_cnt);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			
    /* Added by Panith For CSGL DDR Reports  [START]*/
		EXEC SQL SELECT COUNT(*) INTO :l_csgl_pur_cnt:i_csgl_pur_cnt FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND E.CORP_ID(+) = A.INFORMATON AND A.INSTR_CODE = B.INSTR_CODE AND
B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND NATION_CODE = :l_instr_type_sec ) AND B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name ) AND (( A.DL_CLASS IN ('1','20') AND A.DEAL_CD IN ('2','4') AND A.LOCATION_CD IN ('CSGL')  AND A.ENTRY <> 'G' ))
								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') 
			AND A.DOMESTIC_CPCLT != 'CONVERSION';
		IS_ANY_ORA_ERROR
		sprintf(chr_l_buf,"No Of CSGL purchases  |%d|\n",l_csgl_pur_cnt);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		
		EXEC SQL SELECT COUNT(*) INTO :l_csgl_sal_cnt:i_csgl_sal_cnt FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND E.CORP_ID(+) = A.INFORMATON AND A.INSTR_CODE = B.INSTR_CODE AND
B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND NATION_CODE = :l_instr_type_sec ) AND B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name ) AND (( A.DL_CLASS IN ('1','20') AND A.DEAL_CD IN ('1','3') AND A.LOCATION_CD IN ('CSGL')  AND A.ENTRY <> 'G' ))
								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') 
			AND A.DOMESTIC_CPCLT != 'CONVERSION';
		IS_ANY_ORA_ERROR
		sprintf(chr_l_buf,"No Of CSGL sales  |%d|\n",l_csgl_sal_cnt);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	/* Added by Panith For CSGL DDR Reports  [END]*/
		
		//Query of Deal Uncommented and sum of both counts are taken for ISKB_6377-START
		//This count(l_bon_trns_cnt) will be populated in "Others" column of DTS Report
		//Quary of taking count from BCN was added for ISKB_6213 now count of both the queries is added for ISKB_6377
		//Query from DL_DEAL will work for System generated CA deals and Query from BCN will work for manually added DVP trades of DL_CLASS 20(Non billable)
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//		EXEC SQL SELECT COUNT(*) INTO :l_bon_trns_deal_cnt:i_bon_trns_deal_cnt 
//						 FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
//				         WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//						A.INSTR_CODE = B.INSTR_CODE AND 
//			           ((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//			     OR    (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//						 AND A.R_TRANS_CODE in ('07','12','15') AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

						/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
						Details: R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */
		EXEC SQL SELECT COUNT(*) INTO :l_bon_trns_deal_cnt:i_bon_trns_deal_cnt 
						FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E
						WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						E.CORP_ID(+) = A.INFORMATON AND
						A.INSTR_CODE = B.INSTR_CODE AND 
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
						B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec) AND
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
						(A.R_TRANS_CODE in ('12') OR (A.R_TRANS_CODE in ('07','15','16') and E.CA_EVENT <> 'CV')) AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ; */
						(A.R_TRANS_CODE in ('07','12','15') OR (A.R_TRANS_CODE in ('16') and E.CA_EVENT <> 'CV')) AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)- END*/
						/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End 
						Details: R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */

						Alert("SqlCode after deal query is |%d|",sqlca.sqlcode);

						IS_ANY_ORA_ERROR

						Alert("Value of l_bon_trns_deal_cnt is |%d|",l_bon_trns_deal_cnt);

		/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
		EXEC SQL SELECT COUNT(*) INTO :l_bon_trns_bcn_cnt:i_bon_trns_bcn_cnt
		FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
		WHERE A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
		A.INSTR_CD = B.INSTR_CODE AND
		((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
		OR (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
		AND A.R_TRANS_CODE in ('07','12','15') AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
		Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

		/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
		Details: R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */
		EXEC SQL SELECT COUNT(*) INTO :l_bon_trns_bcn_cnt:i_bon_trns_bcn_cnt
						//Commented and Rewritten by Prateek on 26112014 for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--START
						//FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E, DL_DEAL F
						FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
						//Commented and Rewritten by on 26112014 Prateek for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--END
						WHERE A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						//Commented by Prateek on 26112014 for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--START
						//E.CORP_ID(+) = F.INFORMATON AND											
						//F.CONTRACT_CD = A.CONTRACT_CD AND										
						//Commented by Prateek on 26112014 for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--END
						A.INSTR_CD = B.INSTR_CODE AND
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
						B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec) AND
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
						AND (A.R_TRANS_CODE in ('12') OR (A.R_TRANS_CODE in ('07','15','16') and E.CA_EVENT <> 'CV')) AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ; */	//Changed by Darrel Viegas (REPO_DATE to A.REPO_DATE)
						AND A.R_TRANS_CODE in ('07','12','15') AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-END*/
		/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK)  on 10/06/2014  - End 
		Details: R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */

						Alert("SqlCode after bcn query is |%d|",sqlca.sqlcode);

						IS_ANY_ORA_ERROR

						Alert("Value of l_bon_trns_deal_cnt is |%d|",l_bon_trns_deal_cnt);

						l_bon_trns_cnt=(l_bon_trns_deal_cnt)+(l_bon_trns_bcn_cnt);

		//Query of Deal Uncommented and sum of both counts are taken for ISKB_6377-END

		printf("Value of count in dl_class ==|%d|\n",l_bon_trns_cnt);
		sprintf(chr_l_buf,"No Of Bonus Transactions |%d|\n",l_bon_trns_cnt);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

	/*Commented on 14112013 for ISKB_6399(DTS report shows additional one record in others field irrespective of trade and DDR & DDS reports shows one additional sale trade for part-redemption)-- START
	//Start -for Part RD Event - Rahul 
		EXEC SQL SELECT COUNT(*) INTO :l_CA_RD_cnt:i_CA_RD_cnt FROM CARDSEBI 
			  WHERE TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
		IS_ANY_ORA_ERROR

	   l_bon_trns_cnt = l_bon_trns_cnt + l_CA_RD_cnt;
		sprintf(chr_l_buf,"**********l_CA_RD_cnt |%d|",l_CA_RD_cnt);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		 
	//End -for Part RD Event - Rahul
	
	Commented on 14112013 for ISKB_6399(DTS report shows additional one record in others field irrespective of trade and DDR & DDS reports shows one additional sale trade for part-redemption)-- END*/
	
    /* Calclu Purchase Count */

   l_chr_pcount = l_pur_trns_cnt + l_sqr_pur_cnt+l_csgl_pur_cnt; /* Added by Panith For CSGL DDR Reports */
	 sprintf(chr_l_buf,"No Of Tot Purcount |%d|\n",l_chr_pcount);
	    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	l_chr_scount = l_sal_trns_cnt + l_sqr_sal_cnt+l_csgl_sal_cnt;/* Added by Panith For CSGL DDR Reports */

   sprintf(chr_l_buf," No Of Tot Salecount |%d|\n",l_chr_scount);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

    l_all_count = l_pur_trns_cnt + l_sal_trns_cnt + l_bon_trns_cnt + l_sqr_pur_cnt + l_sqr_sal_cnt+l_csgl_pur_cnt+l_csgl_sal_cnt; /* Added by Panith For CSGL DDR Reports */

   sprintf(chr_l_buf,"No Of All Type Transactions |%d|\n",l_all_count);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
  

	 printf("Count all records==|%d|\n",l_all_count);
     printf("check instr type==|%s|\n",l_instr_type);
	  printf("Check of instr Type ==|%s|\n",l_instr_type_sec);
		printf("Sett Date ==|%s|\n",p_chr_daily_dt);

	 CO_ProcMonitor(l_logfile,"Calculating Sum of Qty\n",NULL,NULL);
	 
	  EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_pur_count:i_pur_count 
						FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
				       WHERE /*DEAL_CD IN ('2','4') AND*/
						             A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
					    	         A.INSTR_CD = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			         B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					 B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						A.R_TRANS_CODE in ('01','02','03','05','06','14','16') AND
						             TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') AND A.SEBI_REPORTED = 'Y' /*AMEND_DT IS NULL*/;
	  IS_ANY_ORA_ERROR
     sprintf(chr_l_buf,"No Of sum Of Purchase  Transactions |%lf|\n",l_pur_count);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_sal_count:i_sal_count 
					   FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
				        WHERE /*DEAL_CD IN ('1','3') AND*/
        							  A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						              A.INSTR_CD = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
			        B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			        /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					 B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						A.R_TRANS_CODE in ('04','08','09','10','11','13') AND
									  TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') AND A.SEBI_REPORTED = 'Y' /*AMEND_DT IS NULL*/;

	   IS_ANY_ORA_ERROR

     sprintf(chr_l_buf,"No Of sum Of sale  Transactions |%lf|\n",l_sal_count);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//	EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_sqr_purqty:i_sqr_purqty
//			   	    FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
//					 WHERE /*DEAL_CD = '4' AND*/
//								  A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//							      A.INSTR_CODE = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
//			       ((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//			 OR    (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//			       /* ISKB - 560: ASHISH 16-02-2008 End */ AND
//					((A.R_TRANS_CODE in ('01','02','03','05','06','14','16') AND A.DL_CLASS IN ('17','18','19','21') )  OR
//								  (A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('2','4') ))
//								  AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
	Details: 16 removed for SP-AM/TO deals,07 added only for CV event */
	EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_sqr_purqty:i_sqr_purqty
	FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E
					 WHERE /*DEAL_CD = '4' AND*/
								  A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
	E.CORP_ID(+) = A.INFORMATON AND
							      A.INSTR_CODE = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
	B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			       /* ISKB - 560: ASHISH 16-02-2008 End */ AND
				   B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
	/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
	(((A.R_TRANS_CODE in ('01','02','03','05','06', '14') OR(A.R_TRANS_CODE ='07' AND E.CA_EVENT = 'CV') ) AND A.DL_CLASS IN ('17','18','19','21')) OR 	*/
	(((A.R_TRANS_CODE in ('01','02','03','05','06', '14')) AND A.DL_CLASS IN ('17','18','19','21')) OR
	/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-END*/		
								  (A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('2','4') ))
								  AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End 
	Details: 16 removed for SP-AM/TO deals,07 added only for CV event */

     IS_ANY_ORA_ERROR
	 sprintf(chr_l_buf,"No Of sum Of Purchase SQUARE OFF TRADE |%lf|\n",l_sqr_purqty);
	 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//	EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_sqr_salqty:i_sqr_salqty
//					FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
//			        WHERE /*DEAL_CD = '3' AND*/
//								 A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//							     A.INSTR_CODE = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
//			       ((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//			 OR    (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
  //			       /* ISKB - 560: ASHISH 16-02-2008 End */ AND
//					((A.R_TRANS_CODE in ('04','08','09','10','11','13') AND  A.DL_CLASS IN ('17','18','19','21') ) OR
//								(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('1','3') )	)
//								 AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
	Details: 15,16 to be added only for CV deals */
	EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_sqr_salqty:i_sqr_salqty
	FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E
			        WHERE /*DEAL_CD = '3' AND*/
								 A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
	E.CORP_ID(+) = A.INFORMATON AND
							     A.INSTR_CODE = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
			       B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
  			       /* ISKB - 560: ASHISH 16-02-2008 End */ AND
				   B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
		/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
		(((A.R_TRANS_CODE in ('04','08','09','10','11','13') OR (A.R_TRANS_CODE in ('15','16') and E.CA_EVENT = 'CV')) AND A.DL_CLASS IN ('17','18','19','21') ) OR */
		(((A.R_TRANS_CODE in ('04','08','09','10','11','13') OR (A.R_TRANS_CODE in ('16') and E.CA_EVENT = 'CV')) AND A.DL_CLASS IN ('17','18','19','21') ) OR
		/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-END*/
		(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('1','3') ))
		 AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End 
	Details: 15,16 to be added only for CV deals */

	  IS_ANY_ORA_ERROR
	 sprintf(chr_l_buf,"No Of sum Of Sale SQUARE OFF TRADE |%lf|\n",l_sqr_salqty);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	/* Added by Panith For CSGL DDR Reports  [START]*/
			EXEC SQL SELECT ROUND(SUM(CASE WHEN B.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND((A.QTY*B.NOMINAL_VALUE),2) ELSE ROUND((A.QTY),2) END),2) INTO :l_csgl_purqty:i_csgl_purqty FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND E.CORP_ID(+) = A.INFORMATON AND A.INSTR_CODE = B.INSTR_CODE AND
B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND NATION_CODE = :l_instr_type_sec ) AND B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name ) AND (( A.DL_CLASS IN ('1','20') AND A.DEAL_CD IN ('2','4') AND A.LOCATION_CD IN ('CSGL')  AND A.ENTRY <> 'G' ))
								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  
				AND A.DOMESTIC_CPCLT != 'CONVERSION'
				;
		IS_ANY_ORA_ERROR
		sprintf(chr_l_buf,"No Of Sum Of CSGL purchases  |%lf|\n",l_csgl_purqty);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		
			EXEC SQL SELECT ROUND(SUM(CASE WHEN B.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND((A.QTY*B.NOMINAL_VALUE),2) ELSE ROUND((A.QTY),2) END),2) INTO :l_csgl_salqty:i_csgl_salqty FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND E.CORP_ID(+) = A.INFORMATON AND A.INSTR_CODE = B.INSTR_CODE AND
B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND NATION_CODE = :l_instr_type_sec ) AND B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name ) AND (( A.DL_CLASS IN ('1','20') AND A.DEAL_CD IN ('1','3') AND A.LOCATION_CD IN ('CSGL')  AND A.ENTRY <> 'G' ))
								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  
				AND A.DOMESTIC_CPCLT != 'CONVERSION';
		IS_ANY_ORA_ERROR
		sprintf(chr_l_buf,"No Of Sum Of CSGL sales  |%lf|\n",l_csgl_salqty);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);		
	/* Added by Panith For CSGL DDR Reports  [END]*/

    l_all_purqty =  l_pur_count + l_sqr_purqty + l_csgl_purqty; /* Added by Panith For CSGL DDR Reports */

    l_all_salqty =  l_sal_count + l_sqr_salqty + l_csgl_salqty; /* Added by Panith For CSGL DDR Reports */

     sprintf(chr_l_buf,"Value of all PurQty |%lf|\n",l_all_purqty);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     sprintf(chr_l_buf,"Value of all SalQty |%lf|\n",l_all_salqty);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

	//Query of Deal Uncommented and sum of both counts are taken for ISKB_6377-Start
	//This count(l_bonus_count) will be populated in "No of Bonus Shares" column of DTS Report
	//Quary of taking count from BCN was added for ISKB_6213 now count of both the queries is added for ISKB_6377
	//Query from DL_DEAL will work for System generated CA deals and Query from BCN will work for manually added DVP trades of DL_CLASS 20(Non billable)
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//		EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_bonus_deal_count:i_bonus_deal_count  
//					      FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
//					      WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//						A.INSTR_CODE = B.INSTR_CODE AND 
//			           ((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//			     OR    (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//						AND A.R_TRANS_CODE in ('07','12','15') AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

						/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
						Details:  R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */
		EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_bonus_deal_count:i_bonus_deal_count  
						FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E
					      WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						E.CORP_ID(+) = A.INFORMATON AND
						A.INSTR_CODE = B.INSTR_CODE AND 
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
			           B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec) AND 
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total quantity of trades having trans code 07 and 15 should be in Number of Bonus Shares i.e. in column H)-START
						(A.R_TRANS_CODE in ('12') OR(A.R_TRANS_CODE in ('07','15','16') and E.CA_EVENT <> 'CV')) AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ; */ 
						(A.R_TRANS_CODE in ('07','12','15') OR(A.R_TRANS_CODE in ('16') and E.CA_EVENT <> 'CV')) AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total quantity of trades having trans code 07 and 15 should be in Number of Bonus Shares i.e. in column H)-END*/
						/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End 
						Details:  R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */

						Alert("SqlCode after deal query is |%d|",sqlca.sqlcode);

						IS_ANY_ORA_ERROR

						Alert("value of l_bonus_deal_count is |%d|",l_bonus_deal_count);

/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//		EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_bonus_bcn_count:i_bonus_bcn_count
//						FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
//						WHERE A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//						A.INSTR_CD = B.INSTR_CODE AND
//						((B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//						OR (B.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//						AND A.R_TRANS_CODE in ('07','12','15') AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

						/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
						Details: R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */
						EXEC SQL SELECT ROUND((SUM(A.QTY)),2) INTO :l_bonus_bcn_count:i_bonus_bcn_count //Changed by Darrel Viegas from QTY to A.QTY
						//Commented and Rewritten by Prateek on 26112014 for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--START
						//FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E, DL_DEAL F
						  FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
						//Commented and Rewritten by Prateek on 26112014 for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--END
						WHERE A.CLIENT_CD = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						//Commented by Prateek on 26112014 for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--START
						//E.CORP_ID(+) = F.INFORMATON AND                                        
						//F.CONTRACT_CD = A.CONTRACT_CD AND  
						//Commented by Prateek on 26112014 for ISKB_455(UAT Fix - System is not picking manually added BCN in DTS Report)--END
						A.INSTR_CD = B.INSTR_CODE AND
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
						B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec) AND 
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name)  
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total quantity of trades having trans code 07 and 15 should be in Number of Bonus Shares i.e. in column H)-START
						AND (A.R_TRANS_CODE in ('12') OR(A.R_TRANS_CODE in ('07','15','16') and E.CA_EVENT <> 'CV')) AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;*/ 
						AND A.R_TRANS_CODE in ('07','12','15') AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
						/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total quantity of trades having trans code 07 and 15 should be in Number of Bonus Shares i.e. in column H)- END*/
						//Changed by Darrel Viegas (REPO_DATE to A.REPO_DATE)
						/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End 
						Details: R_trans_code condition been added for CV event & 07,15,16 should be excluded for CV event changes */

						Alert("SqlCode after bcn query is |%d|",sqlca.sqlcode);

						IS_ANY_ORA_ERROR

						Alert("value of l_bonus_bcn_count is |%d|",l_bonus_bcn_count);

						l_bonus_count = (l_bonus_deal_count)+(l_bonus_bcn_count);

						Alert("value of l_bonus_count is |%d|",l_bonus_count);

	//Query of Deal Uncommented and sum of both counts are taken for ISKB_6377-End

		/*Commented on 14112013 for ISKB_6399(DTS report shows additional one record in others field irrespective of trade and DDR & DDS reports shows one additional sale trade for part-redemption)-- START
	  
		//Start -for Part RD Event - Rahul
		 
		EXEC SQL	SELECT ROUND(SUM(A.QUANTITY_PAID),2),ROUND(SUM(A.CURR_PYMT),2) 
		      INTO :l_CA_RD_qty:i_CA_RD_qty,:l_CA_RD_amt:i_CA_RD_amt
		      FROM CACHEQUE A,CARDSEBI B
			   WHERE  A.CORP_ID = B.CORP_ID AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;

		IS_ANY_ORA_ERROR

		sprintf(chr_l_buf,"l_CA_RD_qty |%lf|\n l_CA_RD_amt |%lf|\n",l_CA_RD_qty,l_CA_RD_amt);	
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		l_bonus_count = l_bonus_count + l_CA_RD_qty;
		//End -for Part RD Event - Rahul 

		Commented on 14112013 for ISKB_6399(DTS report shows additional one record in others field irrespective of trade and DDR & DDS reports shows one additional sale trade for part-redemption)-- END*/

     sprintf(chr_l_buf,"No Of sum Of Bonus  Transactions |%lf|\n",l_bonus_count);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     /*Price Value selection Changed - Kouser */
	  
      EXEC SQL SELECT ROUND((SUM(DL_AMT)),2) INTO :l_pur_value:i_pur_value
						FROM DL_BCN A,MT_INSTRUMENT C,MT_CLIENT D 
						WHERE /*A.DEAL_CD IN ('2','4') AND*/
						             A.CLIENT_CD = D.CLN_CODE AND D.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						             A.INSTR_CD = C.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
			         C.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec) 
			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					 C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						A.R_TRANS_CODE in ('01','02','03','05','06','14','16') AND
									 TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  AND A.SEBI_REPORTED = 'Y' /*AMEND_DT IS NULL*/;

     IS_ANY_ORA_ERROR
     sprintf(chr_l_buf,"No Of Value Of Purchase  Transactions |%lf|\n",l_pur_value);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
      
  /* Price Value Selection Changed - Kouser */
		 
  EXEC SQL SELECT ROUND((SUM(DL_AMT)),2) INTO :l_sal_value:i_sal_value
					FROM DL_BCN A,MT_INSTRUMENT C,MT_CLIENT D
					WHERE /*A.DEAL_CD IN ('1','3') AND*/
           						 A.CLIENT_CD = D.CLN_CODE AND D.CLN_TYPE in ('F','FP') AND			//FP added for FPI
								 A.INSTR_CD = C.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			     C.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			     /* ISKB - 560: ASHISH 16-02-2008 End */ AND
				  C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
					A.R_TRANS_CODE in ('04','08','09','10','11','13') AND
				                TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY')  AND A.SEBI_REPORTED = 'Y' /*AMEND_DT IS NULL*/;

   IS_ANY_ORA_ERROR
	sprintf(chr_l_buf,"No Of Value Of sale  Transactions |%lf|\n",l_sal_value);
	CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		/*     sprintf(chr_l_buf,"Sqlerror Check On Salvalue |%d|\n",sqlca.sqlcode);
     			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
		*/
	/*   EXEC SQL SELECT ROUND((SUM(NET_AMT)),2) INTO :l_sqr_purval:i_sqr_purval *//* For CA Trade -Rahul */
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//	   EXEC SQL SELECT ROUND((SUM(DECODE(A.DL_CLASS,'56',NET_AMT,AMOUNT))),2) INTO :l_sqr_purval:i_sqr_purval
//					FROM DL_DEAL A,MT_INSTRUMENT C,MT_CLIENT D
//					WHERE /*A.DEAL_CD  = '4' AND*/
//								A.CLIENT = D.CLN_CODE AND D.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//								A.INSTR_CODE = C.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
//			         ((C.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//			   OR    (C.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND
//					((A.R_TRANS_CODE in ('01','02','03','05','06', '14','16') AND A.DL_CLASS IN ('17','18','19','21') ) OR
//								(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('2','4') ))
//								AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
	Details: 16 removed for SP-AM/TO deals,07 added only for CV event */
	   EXEC SQL SELECT ROUND((SUM(DECODE(A.DL_CLASS,'56',NET_AMT,AMOUNT))),2) INTO :l_sqr_purval:i_sqr_purval
	FROM DL_DEAL A,MT_INSTRUMENT C,MT_CLIENT D,CAEVENT E
					WHERE /*A.DEAL_CD  = '4' AND*/
								A.CLIENT = D.CLN_CODE AND D.CLN_TYPE in ('F','FP') AND			//FP added for FPI
	E.CORP_ID(+) = A.INFORMATON AND
								A.INSTR_CODE = C.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			         C.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					  C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ENd for DTS and DDS summary report*/
	/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
	(((A.R_TRANS_CODE in ('01','02','03','05','06', '14') OR(A.R_TRANS_CODE ='07' AND E.CA_EVENT = 'CV') ) AND A.DL_CLASS IN ('17','18','19','21')) OR 	*/
	(((A.R_TRANS_CODE in ('01','02','03','05','06', '14')) AND A.DL_CLASS IN ('17','18','19','21')) OR
	/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-END*/
								(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('2','4') ))
								AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End 
	Details: 16 removed for SP-AM/TO deals,07 added only for CV event */

     IS_ANY_ORA_ERROR

		sprintf(chr_l_buf,"No Of Value of Purchase SQUARE OFF TRADE |%lf|\n",l_sqr_purval);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		  
		  
     /*sprintf(chr_l_buf,"Sqlerror Check OnSqrOff Purvalue |%d|\n",sqlca.sqlcode);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	*/

/*        EXEC SQL SELECT ROUND((SUM(NET_AMT)),2) INTO :l_sqr_salval:i_sqr_salval *//* For CA Trade -Rahul */
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//		    EXEC SQL SELECT ROUND((SUM(DECODE(A.DL_CLASS,'56',NET_AMT,AMOUNT))),2) INTO :l_sqr_salval:i_sqr_salval 
//						 FROM DL_DEAL A,MT_INSTRUMENT C,MT_CLIENT D
//				         WHERE /*A.DEAL_CD  = '3' AND*/
//				                      A.CLIENT = D.CLN_CODE AND D.CLN_TYPE in ('F','FP') AND			//FP added for FPI
//									  A.INSTR_CODE = C.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
//			               ((C.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DDS'))
//			         OR    (C.INSTR_TYPE NOT IN (:l_instr_type,:l_instr_type1,:l_instr_type_sec) AND EXISTS (SELECT 1 FROM DUAL WHERE :p_rep_name = 'DTS')))
//			               /* ISKB - 560: ASHISH 16-02-2008 End */ AND
//						 ((A.R_TRANS_CODE in ('04','08','09','10','11','13') AND A.DL_CLASS IN ('17','18','19','21') ) OR
//									(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('1','3') ))
//
//									AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

		/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start 
		Details: 15,16 to be added only for CV deals */
		    EXEC SQL SELECT ROUND((SUM(DECODE(A.DL_CLASS,'56',NET_AMT,AMOUNT))),2) INTO :l_sqr_salval:i_sqr_salval 
		FROM DL_DEAL A,MT_INSTRUMENT C,MT_CLIENT D,CAEVENT E
 				         WHERE /*A.DEAL_CD  = '3' AND*/
				                      A.CLIENT = D.CLN_CODE AND D.CLN_TYPE in ('F','FP') AND			//FP added for FPI
		E.CORP_ID(+)=A.INFORMATON AND
									  A.INSTR_CODE = C.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			               C.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			               /* ISKB - 560: ASHISH 16-02-2008 End */ AND
						    C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 End for DTS and DDS summary report*/
		/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-START
		(((A.R_TRANS_CODE in ('04','08','09','10','11','13') OR (A.R_TRANS_CODE in ('15','16') and E.CA_EVENT = 'CV')) AND A.DL_CLASS IN ('17','18','19','21') ) OR */
		(((A.R_TRANS_CODE in ('04','08','09','10','11','13') OR (A.R_TRANS_CODE in ('16') and E.CA_EVENT = 'CV')) AND A.DL_CLASS IN ('17','18','19','21') ) OR 
		/*Commented and Rewritten By Prateek on 03112014 for ISKB_455(TEMP ISIN UAT FIX -Total number of trades having trans code 07 and 15 should be in the Others i.e. in Column D)-END*/
									(A.DL_CLASS IN ('56') AND A.DEAL_CD IN ('1','3') ))
									AND TRUNC(A.REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;
		/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End 
		Details: 15,16 to be added only for CV deals */

        IS_ANY_ORA_ERROR

     /*sprintf(chr_l_buf,"Sqlerror Check OnSqrOff Purvalue |%d|\n",sqlca.sqlcode);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	*/

     sprintf(chr_l_buf,"No Of Val of sale SQUARE OFF TRADE|%lf|\n",l_sqr_salval);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	 /* Added by Panith For CSGL DDR Reports  [START]*/
	 			EXEC SQL SELECT ROUND(SUM(CASE WHEN B.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND(((A.QTY*A.COST*B.NOMINAL_VALUE)/100),2) ELSE ROUND((A.AMOUNT),2) END),2) INTO :l_csgl_purval:i_csgl_purval FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND E.CORP_ID(+) = A.INFORMATON AND A.INSTR_CODE = B.INSTR_CODE AND
B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND NATION_CODE = :l_instr_type_sec ) AND B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name ) AND (( A.DL_CLASS IN ('1','20') AND A.DEAL_CD IN ('2','4') AND A.LOCATION_CD IN ('CSGL')  AND A.ENTRY <> 'G' ))
								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') 
					AND A.DOMESTIC_CPCLT != 'CONVERSION' ;
		IS_ANY_ORA_ERROR
		sprintf(chr_l_buf,"No Of Value Of CSGL purchases  |%lf|\n",l_csgl_purval);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		
	 			EXEC SQL SELECT ROUND(SUM(CASE WHEN B.INSTR_SUB_TYPE IN ('GB','GS','GP','GT') THEN ROUND(((A.QTY*A.COST*B.NOMINAL_VALUE)/100),2) ELSE ROUND((A.AMOUNT),2) END),2) INTO :l_csgl_salval:i_csgl_salval FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C,CAEVENT E WHERE A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND E.CORP_ID(+) = A.INFORMATON AND A.INSTR_CODE = B.INSTR_CODE AND
B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT WHERE MAP_TYPE = 'CSGL_INSTR_TYPE' AND NATION_CODE = :l_instr_type_sec ) AND B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name ) AND (( A.DL_CLASS IN ('1','20') AND A.DEAL_CD IN ('1','3') AND A.LOCATION_CD IN ('CSGL')  AND A.ENTRY <> 'G' ))
								AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') 
					AND A.DOMESTIC_CPCLT != 'CONVERSION';
		IS_ANY_ORA_ERROR
		sprintf(chr_l_buf,"No Of Value Of CSGL sales  |%lf|\n",l_csgl_salval);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	 /* Added by Panith For CSGL DDR Reports  [END]*/

	  /*Start - For Calculating CA Trade Value -Rahul */
	  EXEC SQL SELECT ROUND((SUM(AMOUNT)),2) INTO :l_bonus_purval:i_bonus_purval
				        FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
				   	    WHERE /*A.DEAL_CD IN ('2','4') AND*/
						            A.CLIENT = C.CLN_CODE AND C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						            A.INSTR_CODE = B.INSTR_CODE AND /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			         B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 end for DTS and DDS summary report*/
						A.R_TRANS_CODE in ('01','02','03','05','06','14','16') AND
						            DL_CLASS IN ('17','18','19','21') AND TRUNC(REPO_DATE) = TO_DATE(:p_chr_daily_dt,'DD/MM/YYYY') ;

	  IS_ANY_ORA_ERROR

	 /* EXEC SQL SELECT ROUND((SUM(AMOUNT)),2) INTO :l_bonus_salval:i_bonus_salval
		   FROM DL_DEAL A,MT_INSTRUMENT B,MT_CLIENT C
		   WHERE DL_CLASS IN ('17','18','19','21') AND
		   A.INSTR_CODE = B.INSTR_CODE AND
		   A.DEAL_CD IN ('1','3') AND
		   A.CLIENT = C.CLN_CODE AND
		   B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND
		   C.CLN_TYPE = 'F' AND
		   REPO_DATE =:p_chr_daily_dt;
		IS_ANY_ORA_ERROR
			
	  sprintf(chr_l_buf,"Value of Other Purvalue |%lf| and salval |%lf|\n",l_bonus_purval,l_bonus_salval);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);*/
	 
	  /*End - For Calculating CA Trade Value -Rahul */
     
	  /*l_all_purcval = l_pur_value + l_sqr_purval + l_bonus_purval;*/
     /*l_all_salcval = l_sal_value + l_sqr_salval + l_bonus_salval + l_CA_RD_amt;*/
	l_all_purcval = l_pur_value + l_sqr_purval + l_csgl_purval; /* Added by Panith For CSGL DDR Reports */
	l_all_salcval = l_sal_value + l_sqr_salval + l_csgl_salval; /* Added by Panith For CSGL DDR Reports */
    
	sprintf(chr_l_buf,"Value of all Purvalue |%lf|\n",l_all_purcval);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     sprintf(chr_l_buf,"Value of All Salvalue  |%lf|\n",l_all_salcval);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     EXEC SQL SELECT TO_CHAR(TO_DATE(:p_chr_daily_dt),'DD/MM/YYYY') INTO :l_cnt_date:i_cnt_date
		     from DUAL;

     IS_ANY_ORA_ERROR


           EXEC SQL SELECT COUNT(*) INTO :l_del_count:i_del_count 
				    FROM DL_HISBCN A,MT_INSTRUMENT B,MT_CLIENT C
					 WHERE TO_CHAR(TO_DATE(A.REPO_DATE),'DD/MM/YYYY') =:l_cnt_date AND 
						 	A.STATUS = 'DD' AND
                     A.INSTR_CD = B.INSTR_CODE AND
							A.CLIENT_CD = C.CLN_CODE AND
				         /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			              B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			              /* ISKB - 560: ASHISH 16-02-2008 End */ AND
						   B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 Ends for DTS and DDS summary report*/
			            C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
							A.SEBI_REPORTED IN ('Y','D','A');


	IS_ANY_ORA_ERROR

     sprintf(chr_l_buf,"No Of Count of Delete Transactions |%d|\n",l_del_count);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	


           EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_deal_count:i_deal_count 
				    FROM DL_HISBCN A,MT_INSTRUMENT B,MT_CLIENT C
					 WHERE TO_CHAR(TO_DATE(A.REPO_DATE),'DD/MM/YYYY') =:l_cnt_date AND 
						 	A.STATUS = 'DD' AND
                     A.INSTR_CD = B.INSTR_CODE AND
							A.CLIENT_CD = C.CLN_CODE AND
				         /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
  			              B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			              /* ISKB - 560: ASHISH 16-02-2008 End */ AND
						   B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ENds for DTS and DDS summary report*/
			            C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
							A.SEBI_REPORTED IN ('Y','D','A');

            IS_ANY_ORA_ERROR

     sprintf(chr_l_buf,"Value Of DU Transactions SqlError|%d|\n",sqlca.sqlcode);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     sprintf(chr_l_buf,"Value Of DU Transactions |%lf|\n",l_deal_count);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
		 
            EXEC SQL SELECT ROUND((SUM(DL_AMT)),2) INTO :l_del_value:i_del_value
				         FROM DL_HISBCN A,MT_INSTRUMENT C,MT_CLIENT D
                       WHERE A.STATUS = 'DD' AND              
						         TO_CHAR(TO_DATE(A.REPO_DATE),'DD/MM/YYYY') = :l_cnt_date AND
								   A.INSTR_CD = C.INSTR_CODE AND
									A.CLIENT_CD = D.CLN_CODE AND
								   /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			               C.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			               /* ISKB - 560: ASHISH 16-02-2008 End */ AND
						    C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
									D.CLN_TYPE in ('F','FP') AND			//FP added for FPI
									A.SEBI_REPORTED IN ('Y','D','A');
			  

	IS_ANY_ORA_ERROR

     sprintf(chr_l_buf,"Value Of Delete Transactions |%lf|\n",l_del_value);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     /* Records Under Deletion  check Based on Sebi Reported Flag - 'Y' Status - Kouser 

              EXEC SQL  select COUNT(*) INTO :l_deal_count:i_deal_count
                FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
                      WHERE A.INSTR_CD = B.INSTR_CODE AND
							 A.CLIENT_CD = C.CLN_CODE AND
                      B.INSTR_TYPE IN (:l_instr_type,:l_instr_type_sec) AND
							 C.CLN_TYPE = 'F' AND
							 A.STATUS  = 'DU' AND
							 A.SEBI_REPORTED = 'Y';
	 IS_ANY_ORA_ERROR */
     
    EXEC SQL SELECT TO_CHAR(SYS_DATE,'DD-MON-YYYY') INTO :l_sys_date:i_sys_date
                    FROM PRO_SYS_DATE;

	 IS_ANY_ORA_ERROR

             /*EXEC SQL SELECT SYS_DATE INTO :l_sys_date:i_sys_date
                FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR*/

     EXEC SQL SELECT TO_CHAR(TO_DATE(:p_chr_daily_dt),'DD/MM/YYYY') INTO :l_cnt_date:i_cnt_date   FROM DUAL;

     IS_ANY_ORA_ERROR
	 
     EXEC  SQL SELECT COUNT(*) INTO :l_amd_count:i_amd_count
	           FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
              WHERE A.INSTR_CD = B.INSTR_CODE AND
				        A.CLIENT_CD = C.CLN_CODE AND
                    /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			         B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
						  C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
						  A.SEBI_REPORTED = 'A' AND
                    TO_CHAR(TO_DATE(REPO_DATE),'DD/MM/YYYY') =:l_cnt_date;
	 IS_ANY_ORA_ERROR

    sprintf(chr_l_buf,"Count Of Amend Dt Transactions |%d|\n",l_amd_count);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

    EXEC SQL SELECT TO_CHAR(TO_DATE(:p_chr_daily_dt),'DD/MM/YYYY') INTO :l_cnt_date:i_cnt_date    FROM DUAL;
     IS_ANY_ORA_ERROR


     EXEC SQL SELECT ROUND((SUM(QTY)),2) INTO :l_sum_amd:i_sum_amd
	            FROM DL_BCN A,MT_INSTRUMENT B,MT_CLIENT C
				   WHERE   A.INSTR_CD = B.INSTR_CODE AND
                       A.CLIENT_CD = C.CLN_CODE AND
					        /* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			         B.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND 
					  B.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
							  C.CLN_TYPE in ('F','FP') AND			//FP added for FPI
					        A.SEBI_REPORTED = 'A' AND
							  TO_CHAR(TO_DATE(REPO_DATE),'DD/MM/YYYY') =:l_cnt_date;
	IS_ANY_ORA_ERROR

     sprintf(chr_l_buf,"Formatted Date  |%s|\n",l_cnt_date);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	


     sprintf(chr_l_buf,"Sum Of Amend Dt Transactions |%lf|\n",l_sum_amd);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
     
      EXEC SQL SELECT ROUND((SUM(DL_AMT)),2) INTO :l_amd_value:i_amd_value
				          FROM DL_BCN A,MT_INSTRUMENT C,MT_CLIENT D
						         WHERE TO_CHAR(TO_DATE(A.REPO_DATE),'DD/MM/YYYY') = :l_cnt_date AND
                                 A.INSTR_CD = C.INSTR_CODE AND
											A.CLIENT_CD = D.CLN_CODE AND
											/* ISKB - 560: ASHISH 16-02-2008 Start */
/*changes done by shrinath for KOTAK KB_1720 starts for DTS and DDS summary report*/
 			         C.INSTR_SUB_TYPE IN (SELECT DISTINCT MAP_VAL FROM PRO_SGENSTAT
                      WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND NATION_CODE = :l_instr_type_sec)
			         /* ISKB - 560: ASHISH 16-02-2008 End */ AND
					  C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE
                        FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and
                        MT_REG_RPT.INST_BLK_FLG='Y'and MT_REG_RPT.RPT_TYPE = :p_rep_name) AND 
/*changes done by shrinath for KOTAK KB_1720 ends for DTS and DDS summary report*/
											A.SEBI_REPORTED = 'A' AND
											D.CLN_TYPE in ('F','FP');			//FP added for FPI
			  
		sprintf(chr_l_buf,"SQL ERROR CHECK ON AMENT DATE RECS CALC ==|%d|\n",sqlca.sqlcode);
	   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		IS_ANY_ORA_ERROR;

     sprintf(chr_l_buf,"Value of Amend Transactions |%lf|\n",l_amd_value);
     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

   CO_ProcMonitor(l_logfile,"Before Inserting Records Into Handoff File",NULL,NULL);

			fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%d|%d|%d|%d|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%d|%.2lf|%.2lf|%d|%.2lf|%.2lf|%s\n",l_cust_code,l_chr_pcount,l_chr_scount,l_bon_trns_cnt,l_all_count,l_all_purqty,l_all_salqty,l_bonus_count,l_all_purcval,l_all_salcval,l_del_count,l_deal_count,l_del_value,l_amd_count,l_sum_amd,l_amd_value,l_sys_date);
//Start Changes for Excel Format
						/* ISKB 342 - Start - Common Function call for all datatype - Rahul - 25June2007*/


					  if(APL_SUCCESS != Cell_Common("left",93,l_cust_code,0,0.0,"S","xlzro",l_logfile))
					  						 APL_GOBACK_FAIL

					  if(APL_SUCCESS != Cell_Common("right",93,APL_NULL_STRING,l_chr_pcount,0.0,"M","",l_logfile)) 
								 APL_GOBACK_FAIL


					  if(APL_SUCCESS != Cell_Common("right",100,APL_NULL_STRING,l_chr_scount,0.0,"M","",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",64,APL_NULL_STRING,l_bon_trns_cnt,0.0,"M","",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",93,APL_NULL_STRING,l_all_count,0.0,"M","",l_logfile)) 
								 APL_GOBACK_FAIL 
					  if(APL_SUCCESS != Cell_Common("right",84,APL_NULL_STRING,0,l_all_purqty,"M","decimal",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",75,APL_NULL_STRING,0,l_all_salqty,"M","decimal",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",87,APL_NULL_STRING,0,l_bonus_count,"M","decimal",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",85,APL_NULL_STRING,0,l_all_purcval,"M","xlflt",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",87,APL_NULL_STRING,0,l_all_salcval,"M","xlflt",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",101,APL_NULL_STRING,l_del_count,0.0,"M","",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",89,APL_NULL_STRING,0,l_deal_count,"M","decimal",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",97,APL_NULL_STRING,0,l_del_value,"M","xlflt",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",92,APL_NULL_STRING,l_amd_count,0.0,"M","",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",93,APL_NULL_STRING,0,l_sum_amd,"M","decimal",l_logfile)) 
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",93,APL_NULL_STRING,0,l_amd_value,"M","xlflt",l_logfile))
								 APL_GOBACK_FAIL
					  if(APL_SUCCESS != Cell_Common("right",85,l_sys_date,0,0.0,"E","xldate",l_logfile))  /* Rahul 18-May-2007 */
								 APL_GOBACK_FAIL
					/* ISKB 342 - End - Common Function call for all datatype - Rahul - 25June2007*/
//End Changes for Excel Format
	/*Added by supriya for DTS xml report generation start*/
  
		printf("before  insert into DL_REG_SUMM_XML");
		EXEC SQL INSERT
		INTO DL_REG_SUMM_XML
		 (
			BATCH_NO,
			REPO_DATE,
			NO_OF_PURCHASE_TXN,
			NO_OF_SALE_TXN,
			NO_OF_OTHER_TXN,
			NO_OF_FRESH_TXN,
			NO_OF_SHARES_PURCHASED,
			NO_OF_SHARES_SOLD,
			NO_OF_BONUS_SHARES,
			PURCHASE_VALUE,
			SALE_VALUE,
			NO_OF_DELETED_TXNS,
			NO_OF_DELETED_SHARES,
			VALUE_OF_DELETED_TXNS,
			NO_OF_AMENDMENT_TXNS,
			NO_OF_AMENDMENT_SHARES,
			VALUE_OF_AMENDMENT_TXN,
			SUB_CUST_TYP
		 )
		VALUES
		(
			:chr_seq_no,
			:l_sys_date,
			:l_chr_pcount,
			:l_chr_scount,
			:l_bon_trns_cnt,
			:l_all_count,
			:l_all_purqty,
			:l_all_salqty,
			:l_bonus_count,
			:l_all_purcval,
			:l_all_salcval,
			:l_del_count,
			:l_deal_count,
			:l_del_value,
			:l_amd_count,
			:l_sum_amd,
			:l_amd_value,
			'C'
		);
		printf("\n SQL CODE : [%d]",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
		printf("after  insert into DL_REG_SUMM_XML");
		EXEC SQL COMMIT;
		IS_ANY_ORA_ERROR
		
	/*Added by supriya for DTS xml report generation end*/

   CO_ProcMonitor(l_logfile,"After Inserting Records Into Handoff File",NULL,NULL);
   	  	/* Excle formate changes -Rahul 30/04/2007 */
		if(APL_SUCCESS != XLS_End_Page())
		  APL_GOBACK_FAIL

	RETURN_SUCCESS :
	
		#ifdef SYS_DEBUG
	    printf("Leaving Function Sum_FRep_ClntInst with success\n");
       fflusg(stdout);
		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		free(l_intl_rept_struct_ha_xls);
      CO_ProcMonitor(l_logfile,"Leaving Function Sum_FRep_ClntInst with Success",NULL,NULL);
		return(APL_SUCCESS);

	RETURN_FAILURE :

		#ifdef SYS_DEBUG
	    printf("Leaving Function Sum_FRep_ClntInst with success\n");
       fflusg(stdout);
		#endif

		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		free(l_intl_rept_struct_ha_xls);
      CO_ProcMonitor(l_logfile,"Leaving Function Sum_FRep_ClntInst with Failure",NULL,NULL);
		return(APL_FAILURE);

}

/* RBI REPORT */
int RBI_Mod_ClntInst(char *p_rep_name,char *p_chr_rbi_dt,char *p_rept_for_dt,char p_bnk_hol_ind, char **argv,FILE *l_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char	chr_l_sysdate[APL_DATE_LEN]	= APL_NULL_STRING;
   char  chr_l_sr_no[4]                          = APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]		=	APL_NULL_STRING;
	char  chr_l_h_aresponse_ca_id[CORP_ID_LEN]		=	APL_NULL_STRING;
	static char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING; /* IUT Fix - Bageshri - ISKB_4554 */
    /*ISKB_4554  Added to generate incremental files for multiple times RBI XML report generation - Shweta - 20092011*/
	char  chr_l_txt_rpt_file_name_temp[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_xml_rpt_file_name_temp[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_txt_rpt_file_name_incr[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_xml_rpt_file_name_incr[FILENAME_LEN_A]   = APL_NULL_STRING;
    /*ISKB_4554  Added to generate incremental files for multiple times RBI XML report generation - Shweta - 20092011*/
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
   char l_rowid[APL_ROWID_LEN] =  APL_NULL_STRING;
	short i_rowid = 0;
   char  chr_l_buf[BUFFER_LEN]                    =  APL_NULL_STRING;
   char l_chr_date[3] = APL_NULL_STRING;
	char l_chr_month[3] = APL_NULL_STRING;
   char l_chr_cust_cd[4] = APL_NULL_STRING;
	short i_chr_cust_cd = 0;
	char  l_cust_code[4] = APL_NULL_STRING;
	short i_cust_code =0;
   char l_trn_ind[2] = APL_NULL_STRING;
   short i_trn_ind = 0;
	char  l_rbi_reg_no[21] = APL_NULL_STRING;
	short i_rbi_reg_no =0;
	char  l_sebi_sub_acc[16] = APL_NULL_STRING; /* By Harvinder Singh -- ISKB 1266 -- Date 13May2008 */
	short i_sebi_sub_acc=0;
	char  l_sys_date[11] = APL_NULL_STRING;
	short i_sys_date=0;
	char  l_dl_date[11] = APL_NULL_STRING;
	short i_dl_date=0;
	char  l_dt_input[11] = APL_NULL_STRING;
	short i_dt_input=0;
	char  l_amend_dt[11] = APL_NULL_STRING;
	short i_amend_dt=0;
	char l_uniq_ident[13] = APL_NULL_STRING;
	short i_uniq_ident = 0;
	char  l_instr_sub_type[4] = APL_NULL_STRING;
	short  i_instr_sub_type = 0;
	double  l_qty = 0.0;
	short i_qty = 0;
	double l_rec_qty = 0.0;
	short i_rec_qty = 0;
	double  l_dl_amt = 0.0;
	short i_dl_amt = 0;
	double  l_dl_price = 0.0;
	short i_dl_price = 0;
	double  l_nom_value = 0.0;
	short i_nom_value = 0;
	char l_lec_id[13] = APL_NULL_STRING;
	char  l_instr_isin[13] = APL_NULL_STRING;
	short i_instr_isin = 0;
	char l_llec_no[11] = APL_NULL_STRING;
	char l_trans_cd[3] = APL_NULL_STRING;
	short i_trans_cd = 0;
	char l_rbi_instrcd[21] = APL_NULL_STRING;
	short i_rbi_instrcd = 0;
	char l_instr_code[9] = APL_NULL_STRING;
	short i_instr_code = 0;
	char l_csy_date[20] = APL_NULL_STRING;
	short i_csy_date = 0;
	char l_rec_ccd[17] = APL_NULL_STRING;
	short i_rec_ccd = 0;
	char l_unq_id[4] = APL_NULL_STRING;
	short  i_unq_id = 0;
	char l_uniq_date[7] = APL_NULL_STRING;
	char l_lrval_date[20] = APL_NULL_STRING;
	char l_contract_cd[17] = APL_NULL_STRING;
   short i_contract_cd = 0;
	char l_lrdate[20] = APL_NULL_STRING;
	short i_lrdate = 0;
	char l_date_input[11] = APL_NULL_STRING;
	char l_identity_no[17] = APL_NULL_STRING;
	short i_identity_no = 0;
	char l_broker_cd[11] = APL_NULL_STRING;
	short i_broker_cd = 0;
	char l_lr_vdate[20] = APL_NULL_STRING;
	short i_lr_vdate= 0;
   char l_vdate[12] = APL_NULL_STRING;
   char l_tcode[3] = APL_NULL_STRING;
   char l_trn_cd[3] = APL_NULL_STRING;
   char l_chr_rmk[50] = APL_NULL_STRING;
   char l_chr_pdate[11] = APL_NULL_STRING;
   char l_inter_fii[2] = APL_NULL_STRING;
   short i_inter_fii = 0;
	short i_valdate=0;
	short i_uniq_date = 0;
   short i_vdate = 0;
	char l_csyst_date[20] =APL_NULL_STRING;
	short i_csyst_date = 0;
	char l_bcn_rmk[16] = APL_NULL_STRING;
   int int_cnt = 0;
	char l_def_value[4] = APL_NULL_STRING;
	char l_lec_date[11] = APL_NULL_STRING;
	short i_lec_date = 0;
	char l_nvalue[5] = APL_NULL_STRING;
	short i_nvalue = 0;
   short i_chr_pdate = 0; 
   char l_maker_dt[20] = APL_NULL_STRING;
   short i_maker_dt = 0;
   char l_hrec_date[5] = APL_NULL_STRING;
   short i_hrec_date = 0;
   char l_hlec_no[11] = APL_NULL_STRING;
	short i_hlec_no = 0;
   char l_hlec_id[13] = APL_NULL_STRING;
   short  i_hlec_id = 0;
   char l_dl_class[3] = APL_NULL_STRING;
   short  i_dl_class = 0;
   char l_deal_rmk[16] = APL_NULL_STRING;
   char l_deal_cd[2] = APL_NULL_STRING;
   short i_deal_cd = 0;
	char l_cust_cd[3] = APL_NULL_STRING;
	short i_cust_cd = 0;
	/* New Added for Counter setup -  Kouser */
	char l_chr_cntr[5] = APL_NULL_STRING;
	short i_chr_cntr = 0;
	char l_lec_dt[11] = APL_NULL_STRING;
	short i_lec_dt = 0;
	char l_chr_ldate[11] = APL_NULL_STRING;
	short i_chr_ldate = 0;
	double l_chr_rate = 0.0;
   /*char l_rbi_instrd[21] = APL_NULL_STRING;  //Commented for ISKB_4554  - RBI Code fetched in single variable - ISKB_4554 -UAT Fix - 13102011
   short i_rbi_instrd = 0;
   char l_rbi_instrce[21] = APL_NULL_STRING;
   short i_rbi_instrce = 0;*/
   char l_rbi_hinstrcd[21] = APL_NULL_STRING;
   short i_rbi_hinstrcd = 0;
	/* Changes - Added  - Kouser */
   char l_sett_code[2] = APL_NULL_STRING;
	short i_sett_code = 0;
	char l_rtype[3] = APL_NULL_STRING;
	short i_rtype = 0;
	double l_chr_rtval = 0.0;
	short i_chr_rtval = 0;
	double l_chr_price = 0.0;
   short i_chr_price = 0;

   /**** Add by ASHISH 17-09-2007 Start ****/

 double l_rbi_rev_dl_amt = 0;
 double l_strt_dl_amt = 0;
 int l_rbi_rev_nom_val = 0;
 int l_strt_nom_value = 0;

 short i_rbi_rev_nom_val = 0;
 short  i_rbi_rev_dl_amt = 0;
 short i_strt_dl_amt = 0;
 short i_strt_nom_value = 0;

 /**** Add by ASHISH 17-09-2007 End ****/

double l_rbi_rev_qty = 0;
 double l_strt_qty = 0;

 short i_rbi_rev_qty = 0;
short i_strt_qty= 0;


 int l_double_precision = 4;

   /*****Start - For Amended Trade _ Rahul***********/
	int l_amd_cnt = 0;
	short i_amd_cnt = 0;
	/*****End - For Amended Trade _ Rahul***********/
	/*****Start - For revesre Amended BCN _ Rahul***********/
	char  l_rev_dl_date[11] = APL_NULL_STRING;
	short i_rev_dl_date =0;
	char l_rev_trans_cd[3] = APL_NULL_STRING;
	short i_rev_trans_cd = 0;
	double  l_rev_qty = 0.0;
	short i_rev_qty = 0;
	double l_rev_dl_amt = 0.0;
	short i_rev_dl_amt = 0;
	char l_rev_lr_valdate[11] = APL_NULL_STRING;
	short i_rev_lr_valdate = 0;
	double l_tmp_dl_amt = 0.0;
	double l_rev_chr_rtval = 0.0;
	short i_rev_chr_rtval = 0;
	char l_chr_rev_rmk[50] = APL_NULL_STRING;

	char  l_rev_rbi_reg_no[21] = APL_NULL_STRING;
	short i_rev_rbi_reg_no =0;
	char  l_rev_sebi_sub_acc[16] = APL_NULL_STRING; /* By Harvinder Singh -- ISKB 1266 -- Date 13May2008 */
	short i_rev_sebi_sub_acc=0;
	char l_rev_rbi_instrcd[21] = APL_NULL_STRING;
	short i_rev_rbi_instrcd = 0;
	char  l_rev_instr_sub_type[4] = APL_NULL_STRING;
	short  i_rev_instr_sub_type = 0;
	char  l_rev_instr_isin[13] = APL_NULL_STRING;
	short i_rev_instr_isin = 0;
	double  l_rev_nom_value = 0.0;
	short i_rev_nom_value = 0;
    char l_rev_lec_id[13] = APL_NULL_STRING;
	/*****End - For revesre Amended BCN _ Rahul***********/
		char l_orig_lecno[11] = APL_NULL_STRING;
		char l_client_cd[11] = APL_NULL_STRING; //Added by Gaurav for Temporary ISIN
		short i_client_cd = 0; //Added by Gaurav for Temporary ISIN
	/*Satrt: Isolve - 155 Changes Done for RBI LEC Repot - Rahul - 01/04/2007*/
	char	l_chr_ret_date[APL_DATE_LEN]	= APL_NULL_STRING; 
	char l_chr_trd_date[3] = APL_NULL_STRING;
	char l_chr_trd_month[3] = APL_NULL_STRING;
	/*End: Isolve - 155 Changes Done for RBI LEC Repot - Rahul - 01/04/2007*/

	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START */

#define STAT_DESC_LEN 45
	int retval = 0;	
	char p_remove_junk[1000] = APL_NULL_STRING;
	char l_intl_root_path[200] = APL_NULL_STRING;
	char chr_l_pdf_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char l_cln_name[61] = APL_NULL_STRING;
	short i_cln_name = 0;
	char l_rev_cln_name[61] = APL_NULL_STRING;
	short i_rev_cln_name = 0;
	char l_cmp_name[51] = APL_NULL_STRING;
	short i_cmp_name = 0;
	char l_rev_cmp_name[51] = APL_NULL_STRING;
	short i_rev_cmp_name = 0;
	char l_mst_name[61] = APL_NULL_STRING;
	short i_mst_name = 0;
	char l_rev_mst_name[61] = APL_NULL_STRING;
	short i_rev_mst_name = 0;
	char l_instr_type_desc[STAT_DESC_LEN] = APL_NULL_STRING;
	short i_instr_type_desc = 0;
	char l_rev_instr_type_desc[STAT_DESC_LEN] = APL_NULL_STRING;
	short i_rev_instr_type_desc = 0;
	char l_txn_type_desc[STAT_DESC_LEN] = APL_NULL_STRING;
	short i_txn_type_desc = 0;
	char l_rev_txn_type_desc[STAT_DESC_LEN] = APL_NULL_STRING;
	short i_rev_txn_type_desc = 0;
	char  chr_l_xml_file[FILENAME_LEN_A]   = APL_NULL_STRING;
	char l_chr_year[5] = APL_NULL_STRING;
	char l_xml_cust_cd[6] = APL_NULL_STRING;
	short l_rbi_xml_flg =0;

	char g_pdf_db_url[500]          = APL_NULL_STRING;
	char g_pdf_driver_class[500]= APL_NULL_STRING;
	char g_pdf_db_user[20]          = APL_NULL_STRING;
	char g_pdf_db_password[20]      = APL_NULL_STRING;
	char g_combined_param[2000] = APL_NULL_STRING;

	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END */
   /*ISKB_4554 RBI_LEC_XML_Rpt_Format Retro -- 28072011 -- Shweta--Start*/
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	char l_rept_for_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char l_rept_for_dt_day[3] = APL_NULL_STRING;
	char l_rept_for_dt_mon[3] = APL_NULL_STRING;
	char l_rept_for_dt_yr[5] = APL_NULL_STRING;
	char l_prev_buss_date[APL_DATE_LEN] = APL_NULL_STRING;
	char l_rtv_lec_date[APL_DATE_LEN] = APL_NULL_STRING;
	char l_deal_dt_day[3] = APL_NULL_STRING;
	char l_deal_dt_mon[3] = APL_NULL_STRING;
    char l_lec_dt_day[3] = APL_NULL_STRING;   /*To fetch Lec no -  Shweta - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
	char l_lec_dt_mon[3] = APL_NULL_STRING;    /*To fetch Lec no -  Shweta - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
	short i_rept_for_dt_day = 0;
	short i_rept_for_dt_mon = 0;
	short i_rept_for_dt_yr = 0;
	short i_deal_dt_day = 0;
	short i_deal_dt_mon = 0;
    short i_lec_dt_day = 0;  /*To fetch Lec no -  Shweta - ISKB_4554  - ISKB_4554 -UAT Fix - 13102011 */
	short i_lec_dt_mon = 0;  /*To fetch Lec no -  Shweta - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
	short i_rtv_lec_date = 0;
	//static int l_txthoff_file_mode_ind;	/* 0 to indicated mode write, 1 to indicate mode as append*/ /* commented IUT Fix - Bageshri - ISKB_4554 */
	char l_fetch_query[10000];
	char l_fetch_query_1[3000];
	char l_fetch_query_2[4000];
	char l_fetch_query_3[3000];
	char l_temp_var[500];
	int l_hol_exists_flg = 0;
        char l_tcode_type_desc[51] = APL_NULL_STRING;/*Added by Shweta - To handle transaction description for deleted bcns -  ISKB_4554 -UAT Fix - 13102011 */
	short i_tcode_type_desc = 0;  /*Added by Shweta - To handle transaction description for deleted bcns - ISKB_4554 -UAT Fix - 13102011 */

   char  chr_custody_id_b[APL_USERID_LEN]           	=  APL_NULL_STRING;// Added for Encryption changes

	memset(l_fetch_query,NULL,sizeof(l_fetch_query));
	memset(l_fetch_query_1,NULL,sizeof(l_fetch_query_1));
	memset(l_fetch_query_2,NULL,sizeof(l_fetch_query_2));
	memset(l_fetch_query_3,NULL,sizeof(l_fetch_query_3));
	memset(l_temp_var,NULL,sizeof(l_temp_var));
        memset(l_tcode_type_desc, NULL, sizeof(l_tcode_type_desc)); /*Added by Shweta - To handle transaction description for deleted bcns - ISKB_4554 -UAT Fix - 13102011 */	
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
   /*ISKB_4554 RBI_LEC_XML_Rpt_Format Retro -- 28072011 -- Shweta--End*/
	int l_file_incr_cnt = 0;   /*ISBB_4622 - Added to handle Multiple times report generation - Shweta - 20092011 - ISKB_4554 -UAT Fix - 13102011 */
  EXEC SQL VAR  l_rbi_instrcd IS STRING;
  EXEC SQL VAR l_instr_type_desc     IS STRING;
  EXEC SQL VAR l_rev_instr_type_desc     IS STRING;
  EXEC SQL VAR l_txn_type_desc     IS STRING;
  EXEC SQL VAR l_rev_txn_type_desc     IS STRING;
  EXEC SQL VAR l_prev_buss_date IS STRING;  /*ISKB_4554 RBI_LEC_XML_Rpt_Format Retro -- 08082011-- Shweta*/
  EXEC SQL VAR chr_custody_id_b IS STRING; // Added for Encryption changes

   FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;
	 /*ISBB_4622 - Added to handle Multiple times report generation - Shweta - 20092011 - ISKB_4554 -UAT Fix - 13102011 */
	FILE  *l_ptr_txt_rpt_file  =  NULL; 
	FILE  *l_ptr_xml_rpt_file  =  NULL;
	 /*ISBB_4622 - Added to handle Multiple times report generation - Shweta - 20092011 - ISKB_4554 -UAT Fix - 13102011 */

	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

	INTL_REPT_STRUCT_H            *l_intl_rept_struct_hx  =NULL;		// HDFC ENH - RBI XML Format by Bageshri on 23-06-2009

   // By Harvinder Singh - To get the blocked inst  sub types and party codes
   /*BlockedInstPartyCodes(p_rep_name);*/

	memset(chr_l_sr_no,'\0',4);
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	/* changes by amish 1905 */
	 memset(chr_l_txt_rpt_file_name_temp, NULL, sizeof(chr_l_txt_rpt_file_name_temp));
	 memset(chr_l_txt_rpt_file_name_incr, NULL, sizeof(chr_l_txt_rpt_file_name_incr));
	 memset(chr_l_xml_rpt_file_name_incr, NULL, sizeof(chr_l_xml_rpt_file_name_incr));
	 memset(chr_l_xml_file, NULL, sizeof(chr_l_xml_file));		// HDFC ENH - RBI XML Format by Bageshri on 23-06-2009

	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);
	l_intl_rept_struct_hx   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));	// HDFC ENH - RBI XML Format by Bageshri on 23-06-2009
	APL_MALLOC_FAIL(l_intl_rept_struct_hx);	// HDFC ENH - RBI XML Format by Bageshri on 23-06-2009
	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcpy(l_intl_root_path,chr_l_inifile);	// HDFC ENH - RBI XML Format by Bageshri on 23-06-2009
	strcat(chr_l_inifile,"intl_sun.cfg");

   CO_ProcMonitor(l_logfile,"ENTER Into RBI Reports Function",NULL,NULL); 

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
	         return(APL_FAILURE);

		/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START */

        if (APL_FAILURE == CO_ReadToken(l_ptr_ini_file,"DB_URL",g_pdf_db_url,l_debug_info_ptr))
        {

                printf("Error : DB_URL  not set in intl_sun.cfg File \n");
                APL_GOBACK_FAIL
        }

        if (APL_FAILURE == CO_ReadToken(l_ptr_ini_file,"DRIVER_CLASS",g_pdf_driver_class,l_debug_info_ptr))
        {

                printf("Error : DRIVER_CLASS  not set in intl_sun.cfg File \n");
                APL_GOBACK_FAIL
        }

		  /* Commented by Gouse for Encryption changes - 01/11/2012 
        if (APL_FAILURE == CO_ReadToken(l_ptr_ini_file,"PDF_DB_USER",g_pdf_db_user,l_debug_info_ptr))
        {

                printf("Error : PDF_DB_USER  not set in intl_sun.cfg File \n");
                APL_GOBACK_FAIL
        }

        if (APL_FAILURE == CO_ReadToken(l_ptr_ini_file,"PDF_DB_PASS",g_pdf_db_password,l_debug_info_ptr))
        {
                printf("Error : PDF_DB_PASS  not set in intl_sun.cfg File \n");
                APL_GOBACK_FAIL
        }*/

		  //User Id / Password fetching from encrypted file
		  APL_FETCH_DB_LOGIN_DETAILS(l_ptr_ini_file, chr_custody_id_b,g_pdf_db_user,g_pdf_db_password,APL_OUT_FILE,&l_debug_info_ptr)

			Alert("g_pdf_db_user is |%s|",g_pdf_db_user);
			Alert("g_pdf_db_password |%s",g_pdf_db_password);

        strcpy(g_combined_param,g_pdf_db_url);
        strcat(g_combined_param,",");
        strcat(g_combined_param,g_pdf_driver_class);
        strcat(g_combined_param,",");
        strcat(g_combined_param,g_pdf_db_user);
        strcat(g_combined_param,",");
        strcat(g_combined_param,g_pdf_db_password);
        strcat(g_combined_param,",");

/*	EXEC SQL SELECT to_char(SYS_DATE,'DD') INTO :l_chr_date FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR

    EXEC SQL SELECT to_char(SYS_DATE,'MM') INTO :l_chr_month FROM PRO_SYS_DATE;
    IS_ANY_ORA_ERROR*/

	EXEC SQL SELECT to_char(SYS_DATE,'DD'),to_char(SYS_DATE,'MM'), to_char(SYS_DATE,'YYYY')
		INTO :l_chr_date, :l_chr_month, :l_chr_year
	  FROM PRO_SYS_DATE;

    IS_ANY_ORA_ERROR

	IF_COND_EXISTS("REG_REPT","RBI_XML") /* IUT Fix - Bageshri - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
		l_rbi_xml_flg = 1;

	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */



	/*Start: ISolve - 155 Changes Done for RBI LEC Repot - Rahul - 04/04/2007*/
	EXEC SQL SELECT to_char(SYS_DATE,'DD/MM/YYYY HH24:MI:SS') INTO :chr_l_sysdate FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR

	if ( Rtv_Prev_BussDate(chr_l_sysdate,l_chr_ret_date,"",l_debug_info_ptr) == APL_FAILURE)
    {
	     fprintf( l_logfile,"\n Fail to Retrieve previous business date \n"); 
		 APL_GOBACK_FAIL
     }
	fflush(l_logfile); fprintf(l_logfile,"Privious Bussiness Date id |%s|\n",l_chr_ret_date );
	
	EXEC SQL SELECT  to_char(to_date(:l_chr_ret_date,'DD/MM/YYYY HH24:MI:SS'),'DD'),
									to_char(to_date(:l_chr_ret_date,'DD/MM/YYYY HH24:MI:SS'),'MM') 
									INTO :l_chr_trd_date,:l_chr_trd_month FROM DUAL;
	IS_ANY_ORA_ERROR 	
	/*End: ISolve - 155 Changes Done for RBI LEC Repot - Rahul - 04/04/2007*/


	EXEC SQL SELECT FIELD_VAL INTO :l_chr_cust_cd:i_chr_cust_cd
          FROM PRO_GSSPLVAL
  		  WHERE MAIN_FUN = 'RBI_CODE' AND
				 SUB_PROCESS = 'RBI';
    sprintf(chr_l_buf,"SQLerror check on pro_gss|%d|\n",sqlca.sqlcode);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
	IS_ANY_ORA_ERROR

    sprintf(chr_l_buf,"Cust Code|%s|\n",l_chr_cust_cd);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

	if(g_for_dt_cnt== 1) /* IUT Fix - Bageshri - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
	{
	 memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name)); /* IUT Fix - Bageshri - ISKB_4554 */
  	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);
   strcat(chr_l_hbrokers_handoff_file_name,l_chr_cust_cd);
/*	strcat(chr_l_hbrokers_handoff_file_name,l_chr_date);
    strcat(chr_l_hbrokers_handoff_file_name,l_chr_month);*/
	/*Start: ISolve - 155 Changes Done for RBI LEC Repot - Rahul - 11/04/2007*/
		strcat(chr_l_hbrokers_handoff_file_name,l_chr_trd_date);
		strcat(chr_l_hbrokers_handoff_file_name,l_chr_trd_month);
	/*End: ISolve - 155 Changes Done for RBI LEC Repot - Rahul - 11/04/2007*/
	strcpy(chr_l_txt_rpt_file_name_temp,chr_l_hbrokers_handoff_file_name);  /*ISKB_4554  - Added to handle multiple times report generation - Shweta - 20092011 - ISKB_4554 -UAT Fix - 13102011 */
	strcat(chr_l_hbrokers_handoff_file_name,".fii");
	printf("File name form ==|%s|\n",chr_l_hbrokers_handoff_file_name);

   /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta -- Start*/	
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	/*ISKB_4554  -- RBI_LEC_XML_Rpt_Format -- Retro -- Shweta 06092011-- Start*/ 
	}
        l_file_incr_cnt = 0;   /*ISKB_4554  - Added to handle multiple times report generation - Shweta - 20092011- ISKB_4554 -UAT Fix - 13102011 */

/*ISKB_4554  - Changes to add incremental data in a new file,to handle multiple times report generation - 20092011 - Shweta - Start - ISKB_4554 -UAT Fix - 13102011 */
if(g_for_dt_cnt == 1)
	{   
		l_ptr_txt_rpt_file = fopen(chr_l_hbrokers_handoff_file_name,"r");	/*read mode to check file existence*/
		while(l_ptr_txt_rpt_file != NULL )
		{	
			fclose(l_ptr_txt_rpt_file);		
			memset(chr_l_txt_rpt_file_name_incr, NULL, sizeof(chr_l_txt_rpt_file_name_incr));
			l_file_incr_cnt++;			
			sprintf(l_temp_var,"_%d",l_file_incr_cnt);
			strcpy(chr_l_txt_rpt_file_name_incr,chr_l_txt_rpt_file_name_temp);
			strcat(chr_l_txt_rpt_file_name_incr,l_temp_var);
		    strcat(chr_l_txt_rpt_file_name_incr,".fii");
			//strcat(chr_l_txt_rpt_file_name_incr,".TXT");
			l_ptr_txt_rpt_file = fopen(chr_l_txt_rpt_file_name_incr,"r");  
		}
		if(l_file_incr_cnt >0)
		{
			strcpy(chr_l_hbrokers_handoff_file_name,chr_l_txt_rpt_file_name_incr);
		}
	}

/*ISKB_4554  - Changes to add incremental data in a new file,to handle multiple times report generation - 20092011 - Shweta - Start- ISKB_4554 -UAT Fix - 13102011 */


	if(g_for_dt_cnt == 1) /* IUT Fix - Bageshri - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
	{
		if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)	/*write mode*/
      return(APL_FAILURE);
	}
	else  /* IUT Fix - Bageshri - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
	{
		if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"a")) == NULL)	/*append mode*/
      return(APL_FAILURE);
	}
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/

   /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 --Shweta -- End*/	
   
   
   memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));

   strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
   strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   l_intl_rept_struct_ha->report_width = 100;
   strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);
   strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);


/*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta --Start*/	
/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	if(g_for_dt_cnt == 1) /* IUT Fix - Bageshri - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
	{
   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
		APL_GOBACK_FAIL
   }
		//l_txthoff_file_mode_ind = 1; /* commented IUT Fix - Bageshri - ISKB_4554 - ISKB_4554 -UAT Fix - 13102011 */
		
	}
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
   /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 --Shweta -- End*/	

	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START  */

	memset(l_intl_rept_struct_hx,NULL,sizeof(INTL_REPT_STRUCT_H));

	if(l_rbi_xml_flg == 1)
	{
		
      /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta --Start*/	
		/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
		if(g_bnk_ind == 1)
		{
			strcpy(l_rept_for_dt,p_rept_for_dt);
			EXEC SQL SELECT TO_CHAR(TO_DATE(:l_rept_for_dt,'DD/MM/YYYY'),'DD'), TO_CHAR(TO_DATE(:l_rept_for_dt,'DD/MM/YYYY'),'MM'), TO_CHAR(TO_DATE(:l_rept_for_dt,'DD/MM/YYYY'),'YYYY')
						INTO :l_rept_for_dt_day:i_rept_for_dt_day, :l_rept_for_dt_mon:i_rept_for_dt_mon, :l_rept_for_dt_yr:i_rept_for_dt_yr
						FROM DUAL;

			IS_ANY_ORA_ERROR
		}
		else
		{
			strcpy(l_rept_for_dt_day,l_chr_date);
			strcpy(l_rept_for_dt_mon,l_chr_month);
			strcpy(l_rept_for_dt_yr,l_chr_year);
		}
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
   /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta --End*/	
	
		strcpy(chr_l_xml_file, chr_l_handoff_dir);
		strcat(chr_l_xml_file, "FormLEC_");
		strcpy(l_xml_cust_cd,l_chr_cust_cd);
		/*CO_PadString(l_xml_cust_cd,'L',5,"0",l_debug_info_ptr);*/ /* In XML Report file name Bankcode should not contain zero*/
		strcat(chr_l_xml_file, l_xml_cust_cd);
		strcat(chr_l_xml_file, "_");
		strcat(chr_l_xml_file, l_rept_for_dt_day);		/*HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
		strcat(chr_l_xml_file, "_");
		strcat(chr_l_xml_file, l_rept_for_dt_mon);		/*HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
		strcat(chr_l_xml_file, "_");
		strcat(chr_l_xml_file, l_rept_for_dt_yr);		/*HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
	        strcpy(chr_l_xml_rpt_file_name_temp,chr_l_xml_file); /*ISKB_4554  Added to handle multiple times RBI Report Gen - Shweta - 20092011*/
		strcat(chr_l_xml_file, ".xml");

		/*ISKB_4554  - Changes to add incremental data in a new file - 20092011 - Shweta - Start - ISKB_4554 -UAT Fix - 13102011 */
		l_file_incr_cnt = 0;
		l_ptr_xml_rpt_file = fopen(chr_l_xml_file,"r");	/*read mode to check file existence*/
		while(l_ptr_xml_rpt_file != NULL )
		{	
			fclose(l_ptr_xml_rpt_file);			
			memset(chr_l_xml_rpt_file_name_incr, NULL, sizeof(chr_l_xml_rpt_file_name_incr));
			l_file_incr_cnt++;			
			sprintf(l_temp_var,"_%d",l_file_incr_cnt);
			strcpy(chr_l_xml_rpt_file_name_incr,chr_l_xml_rpt_file_name_temp);
			strcat(chr_l_xml_rpt_file_name_incr,l_temp_var);
			strcat(chr_l_xml_rpt_file_name_incr,".xml");
			l_ptr_xml_rpt_file = fopen(chr_l_xml_rpt_file_name_incr,"r");  
		}
		if(l_file_incr_cnt >0)
		{
			strcpy(chr_l_xml_file,chr_l_xml_rpt_file_name_incr);
		}
		/*ISKB_4554  - Changes to add incremental data in a new file - 20092011 - Shweta - Start - ISKB_4554 -UAT Fix - 13102011 */
		printf("XML File name ==|%s|\n",chr_l_xml_file);

	   strcpy(l_intl_rept_struct_hx->report_name, chr_l_xml_file+strlen(chr_l_handoff_dir));
	   strcpy(l_intl_rept_struct_hx->report_desc, APL_HOFF_FILE_DESC);
	   strcpy(l_intl_rept_struct_hx->report_date, argv[2]);
	   l_intl_rept_struct_hx->report_width = 100;
	   strcpy(l_intl_rept_struct_hx->task_desc, p_intl_envdatastruct_h->processtion);
	   strcpy(l_intl_rept_struct_hx->fe_be_ind, APL_BE_IND);
	   strcpy(l_intl_rept_struct_hx->usr, p_intl_envdatastruct_h->usr);

	   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_hx, l_debug_info_ptr))
	   {
			APL_GOBACK_FAIL
	   }
	}

	memset(l_instr_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);
	memset(l_rev_instr_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);
	memset(l_txn_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);
	memset(l_rev_txn_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);

	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */

	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_curr_datetime,l_debug_info_ptr))
    {
        APL_GOBACK_FAIL
    }

       sprintf(l_llec_no,"%s%s",l_chr_date,l_chr_month);
   sprintf(chr_l_buf,"Date Passed to Function RBI is |%s|\n",p_chr_rbi_dt);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
	/* Commented - Retro from ICICI (IB_5067 / IB_5106) - starts here */
/*	EXEC SQL SELECT TO_DATE(:p_chr_rbi_dt,'DD/MM/YYYY') INTO :l_chr_pdate:i_chr_pdate
                   FROM DUAL; 
     IS_ANY_ORA_ERROR

   sprintf(chr_l_buf,"Convert Date Passed to Function DATE |%s|\n",l_chr_pdate);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
      */
     	/* Commented - Retro from ICICI (IB_5067 / IB_5106)-  ends here */
     	
      /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta --Start*/	
		/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/

	/*Cursor query taken in a variable*/
	/*Based on the Country Condition the filter on deal_date will be applied in the query for each union in addition to other changes. 
	Also an additional column is added for LEC Date for the LEC Date criteria for SP or CR backdated trades. 
	The value taken in the column will be same as previous except for second union which is made country specific*/
	
	/* Commented and Rewritten By Swathi on 22072016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI 
	should appear for the client type as FPI instead of its master account) - START
	strcpy(l_fetch_query_1,"SELECT 'B',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),NULL,NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC, 1, 9)),TO_CHAR(B.DL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.SETTLMENT_AMT,B.DL_PRICE,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),TO_CHAR(B.AMEND_DT,'DD-MM-YYYY'),C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,B.CONTRACT_CD,NULL,B.BROKER_CD,B.INTER_FII_FLG,NULL,NULL,B.INSTR_CD,B.R_SETT_CODE,B.R_TYPE,B.CLIENT_CD, DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME, 1, 60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50), ");*/
	
	strcpy(l_fetch_query_1,"SELECT 'B',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),NULL,D.CLN_SEBI_REG_NO,DECODE(DECODE(A.CLN_MASTER,A.CLN_CODE,NULL,SUBSTR(D.SEBI_SUB_ACC, 1,9)),null,null,decode(A.CLN_TYPE,'FP',NULL,SUBSTR(D.SEBI_SUB_ACC, 1,9) )),TO_CHAR(B.DL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.SETTLMENT_AMT,B.DL_PRICE,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),TO_CHAR(B.AMEND_DT,'DD-MM-YYYY'),C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,B.CONTRACT_CD,NULL,B.BROKER_CD,B.INTER_FII_FLG,NULL,NULL,B.INSTR_CD,B.R_SETT_CODE,B.R_TYPE,B.CLIENT_CD, DECODE(DECODE(A.CLN_MASTER,A.CLN_CODE,NULL,SUBSTR(A.CLN_NAME, 1, 60)),null,null,decode(A.CLN_TYPE,'FP',NULL,SUBSTR(A.CLN_NAME, 1, 60))), decode(A.CLN_TYPE,'FP',decode(A.CLN_MASTER,A.CLN_CODE,SUBSTR(M.CLN_NAME, 1, 60),SUBSTR(A.CLN_NAME, 1, 60) ),SUBSTR(M.CLN_NAME, 1, 60)), SUBSTR(CM.CMP_NAME,1,50), ");
	/* Commented and Rewritten By Swathi on 22072016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI 
	should appear for the client type as FPI instead of its master account) - END*/
	//strcat(l_fetch_query_1,"TO_CHAR(B.DL_DATE,'DD/MM/YYYY') "); /*Added for HDFC ENH - RBI XML Format by Sana on 20-04-2011 */
	/*ISKB_4554  -- Changed for RBI_LEC_XML Rept format -- Additional changes--Start*/ 
	sprintf(l_temp_var,"'%s', ",l_rept_for_dt);
	strcat(l_fetch_query_1,l_temp_var);
	strcat(l_fetch_query_1,"MR.RBI_INSTR_CODE ");
	/*ISKB_4554  -- Changed for RBI_LEC_XML Rept format -- Additional changes--End*/ 
	strcat(l_fetch_query_1,"FROM MT_COMMON_SYS_PARAMS,PRO_SYS_DATE E,MT_CLIENT A,DL_BCN B,MT_INSTRUMENT C,MT_REGDETAILS D, MT_CLIENT M, MT_COMPANY CM ,MT_RBI_MONITORY MR ");
	strcat(l_fetch_query_1,"WHERE A.CLN_CODE = D.CLN_CODE AND ");
	strcat(l_fetch_query_1,"B.CLIENT_CD = A.CLN_CODE AND ");
	strcat(l_fetch_query_1,"B.INSTR_CD = C.INSTR_CODE AND ");
	strcat(l_fetch_query_1,"A.CLN_TYPE in ('F','FP') AND "); 			//FP added for FPI
	/* strcat(l_fetch_query_1,"B.STATUS != 'UU' AND ");*/   //ISKB-518: ASHISH 16-11-2007 
	strcat(l_fetch_query_1,"B.STATUS IN ('AA','RC') AND ");
	strcat(l_fetch_query_1,"A.CLN_MASTER = M.CLN_CODE AND ");
	strcat(l_fetch_query_1,"C.CMP_CODE = CM.CMP_CODE AND ");
	/*strcat(l_fetch_query_1,"C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and MT_REG_RPT.INST_BLK_FLG='Y' ");
	sprintf(l_temp_var,"and MT_REG_RPT.RPT_TYPE = '%s') AND ",p_rep_name);
	strcat(l_fetch_query_1,l_temp_var);
	strcat(l_fetch_query_1,"B.BROKER_CD NOT IN (SELECT DISTINCT MT_REG_RPT.PTY_CD FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='PTY'  and MT_REG_RPT.STATUS = 'AA' and MT_REG_RPT.PTY_BLK_FLG='Y' ");
	strcat(l_fetch_query_1,l_temp_var);*/
	strcat(l_fetch_query_1,"MR.INSTR_CODE (+) = B.INSTR_CD AND ");
	strcat(l_fetch_query_1,"(B.LR_VALDATE IS NULL OR (B.LR_VALDATE IS NOT NULL AND B.AMEND_DT IS NOT NULL AND B.AMEND_DT > B.LR_VALDATE ");
	/*ISKB_4554  -- Changed for RBI_LEC_XML Rept format -- Additional changes -- to fetch all amended deals before l_rept_for_dt--Start*/ 
	sprintf(l_temp_var," AND B.AMEND_DT <= TO_DATE('%s 23:59:59','DD/MM/YYYY HH24:MI:SS'))) ",l_rept_for_dt);
	strcat(l_fetch_query_1,l_temp_var);
	/*ISKB_4554  -- Changed for RBI_LEC_XML Rept format -- Additional changes -- to fetch all amended deals before l_rept_for_dt--End*/ 
   	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	if(g_bnk_ind == 1)
	{
		/*ISKB_4554  -- Changed for RBI_LEC_XML Rept format -- Additional changes -- to fetch all deals before l_rept_for_dt*/ 
		/*sprintf(l_temp_var,"AND B.DL_DATE BETWEEN TO_DATE('%s 00:00:00','DD/MM/YYYY HH24:MI:SS') AND TO_DATE('%s 23:59:59','DD/MM/YYYY HH24:MI:SS') AND B.STATUS != 'UU' ",l_rept_for_dt, l_rept_for_dt);*/
		sprintf(l_temp_var,"  AND B.DL_DATE <= TO_DATE('%s 23:59:59','DD/MM/YYYY HH24:MI:SS') ",l_rept_for_dt);		
		strcat(l_fetch_query_1,l_temp_var);
		/*if(p_bnk_hol_ind == 'N')
		{
			strcat(l_fetch_query_1,"AND NOT EXISTS (SELECT 1 FROM MT_HOLIDAY ");
			strcat(l_fetch_query_1,"WHERE MT_HOLIDAY.H_DATE BETWEEN TO_DATE(TO_CHAR(B.DL_DATE,'DD/MM/YYYY')||' 00:00:00','DD/MM/YYYY HH24:MI:SS') AND TO_DATE(TO_CHAR(B.DL_DATE,'DD/MM/YYYY')||' 23:59:59','DD/MM/YYYY HH24:MI:SS') AND MT_HOLIDAY.BANK_IND = 'Y' AND (MT_HOLIDAY.EXCH_CODE IS NULL OR MT_HOLIDAY.EXCH_CODE = B.EXCH_CD))");
		}*/
	}
		/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
		/*ISKB_4554  -- RBI_LEC_XML_Rpt_Format -- Retro -- Shweta 06092011--End*/ 
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - Start */
//		strcpy(l_fetch_query_2," UNION ALL SELECT 'D',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),SUBSTR(B.UNIQ_IDENT_NO,1,12),NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC, 1, 9)), ");
//		strcat(l_fetch_query_2," TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'), ");
//		strcat(l_fetch_query_2," C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.AMOUNT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,NULL,NULL,B.INSTR_CODE,NULL,NULL, DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME, 1, 60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50), ");
/* Commented by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014  - End */

	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014 - Start 
	Details: to change r_trans_code value in RBI Report */
	/* Commented and Rewritten By Swathi on 02092016 - SACD tag Closed For All FPI Clients and FII Master Accounts -for ISKB_1951- START */
		//strcpy(l_fetch_query_2," UNION ALL SELECT 'D',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),SUBSTR(B.UNIQ_IDENT_NO,1,12),NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC, 1, 9)), ");
		strcpy(l_fetch_query_2," UNION ALL SELECT 'D',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),SUBSTR(B.UNIQ_IDENT_NO,1,12),D.CLN_SEBI_REG_NO,DECODE(DECODE(A.CLN_MASTER,A.CLN_CODE,NULL,SUBSTR(D.SEBI_SUB_ACC, 1,9)),null,null,decode(A.CLN_TYPE,'FP',NULL,SUBSTR(D.SEBI_SUB_ACC, 1,9) )), ");
	/* Commented and Rewritten By Swathi on 02092016 -SACD tag Closed For All FPI Clients and FII Master Accounts- for ISKB_1951- END */	
		strcat(l_fetch_query_2," TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'), ");
		//strcat(l_fetch_query_2," C.INSTR_SUB_TYPE,DECODE(CA.CA_EVENT,'CV',get_rbi_codes_for_cv(B.DEAL_CD,CA.CMP_CODE),B.R_TRANS_CODE),B.QTY,B.AMOUNT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,B.DL_CLASS,NULL,B.INSTR_CODE,NULL,NULL,B.CLIENT,DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME, 1, 60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50), PS.MAP_DESC,PT.MAP_DESC,  ");
		
/* Commented and Rewritten By Swathi on 22072016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI 
	should appear for the client type as FPI instead of its master account) - START
		strcat(l_fetch_query_2," C.INSTR_SUB_TYPE,DECODE(CA.CA_EVENT,'CV',get_rbi_codes_for_cv(B.DEAL_CD,CA.CMP_CODE),B.R_TRANS_CODE),B.QTY,B.AMOUNT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,B.DL_CLASS,NULL,B.INSTR_CODE,NULL,NULL,B.CLIENT,DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME, 1, 60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50),  ");*/	
		strcat(l_fetch_query_2," C.INSTR_SUB_TYPE,DECODE(CA.CA_EVENT,'CV',get_rbi_codes_for_cv(B.DEAL_CD,CA.CMP_CODE),B.R_TRANS_CODE),B.QTY,B.AMOUNT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,B.DL_CLASS,NULL,B.INSTR_CODE,NULL,NULL,B.CLIENT,DECODE(DECODE(A.CLN_MASTER,A.CLN_CODE,NULL,SUBSTR(A.CLN_NAME, 1, 60)),null,null,decode(A.CLN_TYPE,'FP',NULL,SUBSTR(A.CLN_NAME, 1, 60))),decode(A.CLN_TYPE,'FP',decode(A.CLN_MASTER,A.CLN_CODE,SUBSTR(M.CLN_NAME, 1, 60),SUBSTR(A.CLN_NAME, 1, 60) ),SUBSTR(M.CLN_NAME, 1, 60)), SUBSTR(CM.CMP_NAME,1,50),  ");			
		/* Commented and Rewritten By Swathi on 22072016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI should appear for the client type as FPI instead of its master account) - END*/
	/* Retro by Darrel Viegas for ISKB_455 (Temporary ISIN processing enh KOTAK) on 10/06/2014 - End 
	Details: to change r_trans_code value in RBI Report */

   	/*ISKB_4554  -- RBI_LEC_XML_Rpt_Format -- Retro -- Shweta 06092011--Start*/ 
   	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	if(g_bnk_ind == 1)
	{
		/*sprintf(l_temp_var,"DECODE(CA.CA_EVENT,'SP',DECODE(TO_DATE('%s','DD/MM/YYYY'),TRUNC(B.INSTRUMENT_DT),TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'),'%s'), ",l_prev_buss_date, l_prev_buss_date);
		strcat(l_fetch_query_2,l_temp_var);
		sprintf(l_temp_var,"'CR',DECODE(TO_DATE('%s','DD/MM/YYYY'),TRUNC(B.INSTRUMENT_DT),TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'),'%s'),TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY')) ",l_prev_buss_date,l_prev_buss_date);
		strcat(l_fetch_query_2,l_temp_var);*/
        /*ISKB_4554  -- Commented and rewritten for RBI_LEC_XML Rept format -- Additional changes -- Shweta*/ 
        /*LEC_DT should be report_for_date for all CA transactions*/
		sprintf(l_temp_var,"'%s' ,",l_rept_for_dt);
    	strcat(l_fetch_query_2,l_temp_var);

	}

	else
	{
		strcat(l_fetch_query_2,"TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY') ");
	}
   	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
	   	/*ISKB_4554  -- RBI_LEC_XML_Rpt_Format -- Retro -- Shweta 06092011--End*/ 
        strcat(l_fetch_query_2,"MR.RBI_INSTR_CODE ");  
	strcat(l_fetch_query_2,"FROM MT_COMMON_SYS_PARAMS,PRO_SYS_DATE E,MT_CLIENT A,DL_DEAL B,MT_INSTRUMENT C,MT_REGDETAILS D, MT_CLIENT M, MT_COMPANY CM , MT_RBI_MONITORY MR ");
	/*Gaurav Uncommented Below code for Temoprary ISIN START*/
		if(g_bnk_ind == 1) // Bageshri commented ISKB_5434  - non equity normal trades to be reported based on BCNs only same as of SEBI reporting
		{
		strcat(l_fetch_query_2,", CAEVENT CA "); //Added CAEVENT table for HDFC ENH - RBI XML Format by Sana on 20-04-2011
		}
		/*Gaurav Uncommented Below code for Temoprary ISIN END*/
	strcat(l_fetch_query_2,"WHERE A.CLN_CODE = D.CLN_CODE AND ");
	strcat(l_fetch_query_2,"B.CLIENT = a.CLN_CODE AND ");
	strcat(l_fetch_query_2,"B.INSTR_CODE = C.INSTR_CODE AND ");
	strcat(l_fetch_query_2,"A.CLN_TYPE in ('F','FP') AND ");	//FP added for FPI
	/*Gaurav Uncommented Below code for Temoprary ISIN START*/
	if(g_bnk_ind == 1) //Bageshri commented ISKB_5434
	{
		strcat(l_fetch_query_2,"B.INFORMATON = CA.CORP_ID(+) AND "); //Added Condition on Corp id for HDFC ENH - RBI XML Format by Sana on 20-04-2011
	}
	/*Gaurav Uncommented Below code for Temoprary ISIN END*/
	//strcat(l_fetch_query_2,"((B.DL_CLASS IN ('17','18','21','19')) "); // Bageshri commented ISKB_5434
	strcat(l_fetch_query_2,"B.DL_CLASS IN ('17','18','21','19') ");  // Bageshri added ISKB_5434
	//strcat(l_fetch_query_2,"OR (B.DL_CLASS = '1' AND C.INSTR_SUB_TYPE IN (SELECT MAP_VAL FROM PRO_SGENSTAT WHERE MAP_TYPE = 'RBI_INSTR_SUB_TYPE' AND MAP_VAL != 'EQ'))) ");  //HDFC ENH - FOC Change for Debt Instrument Deals by Sana on 20-04-2011 // Bageshri commented ISKB_5434
   //strcat(l_fetch_query_2,"OR (B.DL_CLASS = '1')) ");  //HDFC ENH - FOC Change for Debt Instrument Deals by Sana on 20-04-2011  // Bageshri commented ISKB_5434
	//    strcat(l_fetch_query_2,"AND CONTRACT_CD IS NULL ");
	strcat(l_fetch_query_2,"AND B.DEAL_STAT = 'CS' AND ");
	strcat(l_fetch_query_2,"A.CLN_MASTER = M.CLN_CODE AND ");
	strcat(l_fetch_query_2,"C.CMP_CODE = CM.CMP_CODE AND ");
	/*strcat(l_fetch_query_2,"C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and MT_REG_RPT.INST_BLK_FLG='Y' and ");
	sprintf(l_temp_var,"MT_REG_RPT.RPT_TYPE = '%s') AND ",p_rep_name);
	strcat(l_fetch_query_2,l_temp_var);
	strcat(l_fetch_query_2,"B.DOMESTIC_CPCLT NOT IN (SELECT DISTINCT MT_REG_RPT.PTY_CD FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='PTY'  and MT_REG_RPT.STATUS = 'AA' and MT_REG_RPT.PTY_BLK_FLG='Y' and ");
	strcat(l_fetch_query_2,l_temp_var);*/
	strcat(l_fetch_query_2,"MR.INSTR_CODE (+) = B.INSTR_CODE AND ");
	strcat(l_fetch_query_2,"B.LR_VALDATE IS NULL ");
   	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	if(g_bnk_ind == 1)
	{
		/*strcat(l_fetch_query_2,"AND ((CA.CA_EVENT IN ('SP','CR') AND (B.SEBI_REPORTED IN ('N','G') OR B.SEBI_REPORTED IS NULL) ");
		sprintf(l_temp_var,"AND (TO_DATE('%s','DD/MM/YYYY') = TO_DATE('%s','DD/MM/YYYY'))) ", l_prev_buss_date, l_rept_for_dt, l_rept_for_dt);
		strcat(l_fetch_query_2, l_temp_var);
		sprintf(l_temp_var,"OR ((CA.CA_EVENT NOT IN ('SP','CR') OR CA.CA_EVENT IS NULL) AND B.DEAL_DATE BETWEEN TO_DATE('%s 00:00:00','DD/MM/YYYY HH24:MI:SS') AND TO_DATE('%s 23:59:59','DD/MM/YYYY HH24:MI:SS'))) ",l_rept_for_dt, l_rept_for_dt);
			strcat(l_fetch_query_2, l_temp_var);*/

        /*ISKB_4554  -- Commented and rewritten for RBI_LEC_XML Rept format -- Additional changes -- Shweta*/ 
		/*To fetch all the CA deals which are settled till l_rept_for_dt*/
		sprintf(l_temp_var,"AND B.INSTRUMENT_DT <= TO_DATE('%s 23:59:59','DD/MM/YYYY HH24:MI:SS')",l_rept_for_dt);
		strcat(l_fetch_query_2,l_temp_var);

/*		if(p_bnk_hol_ind == 'N')
		{
			strcat(l_fetch_query_2,"AND NOT EXISTS (SELECT 1 FROM MT_HOLIDAY ");
			strcat(l_fetch_query_2,"WHERE MT_HOLIDAY.H_DATE BETWEEN TO_DATE(TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY')||' 00:00:00','DD/MM/YYYY HH24:MI:SS') AND TO_DATE(TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY')||' 23:59:59','DD/MM/YYYY HH24:MI:SS') AND MT_HOLIDAY.BANK_IND = 'Y' AND (MT_HOLIDAY.EXCH_CODE IS NULL OR MT_HOLIDAY.EXCH_CODE = B.EXCH_CODE))");
		}*/
	}
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
	
	/* Commented and Rewritten By Swathi on 22072016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI 
	should appear for the client type as FPI instead of its master account) - START
	strcpy(l_fetch_query_3," UNION ALL SELECT 'E',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),SUBSTR(B.UNIQ_IDENT_NO,1,12),NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC, 1, 9)),TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.NET_AMT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,B.DL_CLASS,B.DEAL_CD,B.INSTR_CODE,NULL,NULL,B.CLIENT, DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME, 1, 60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50), ");*/
	
	strcpy(l_fetch_query_3," UNION ALL SELECT 'E',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),SUBSTR(B.UNIQ_IDENT_NO,1,12),D.CLN_SEBI_REG_NO,DECODE(DECODE(A.CLN_MASTER,A.CLN_CODE,NULL,SUBSTR(D.SEBI_SUB_ACC, 1,9)),null,null,decode(A.CLN_TYPE,'FP',NULL,SUBSTR(D.SEBI_SUB_ACC, 1,9))),TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.NET_AMT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,B.DL_CLASS,B.DEAL_CD,B.INSTR_CODE,NULL,NULL,B.CLIENT, DECODE(DECODE(A.CLN_MASTER,A.CLN_CODE,NULL,SUBSTR(A.CLN_NAME, 1, 60)),null,null,decode(A.CLN_TYPE,'FP',NULL,SUBSTR(A.CLN_NAME, 1, 60))),decode(A.CLN_TYPE,'FP',decode(A.CLN_MASTER,A.CLN_CODE,SUBSTR(M.CLN_NAME, 1, 60),SUBSTR(A.CLN_NAME, 1, 60) ),SUBSTR(M.CLN_NAME, 1, 60)), SUBSTR(CM.CMP_NAME,1,50), ");
	
	/* Commented and Rewritten By Swathi on 22072016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI 
	should appear for the client type as FPI instead of its master account) - END*/
	//strcat(l_fetch_query_3,"TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY') "); /*Added for HDFC ENH - RBI XML Format by Sana on 20-04-2011 */
	sprintf(l_temp_var,"'%s' ,",l_rept_for_dt);
	strcat(l_fetch_query_3,l_temp_var);
	strcat(l_fetch_query_3,"MR.RBI_INSTR_CODE ");
	strcat(l_fetch_query_3,"FROM MT_COMMON_SYS_PARAMS,PRO_SYS_DATE E,MT_CLIENT A,DL_DEAL B,MT_INSTRUMENT C,MT_REGDETAILS D, MT_CLIENT M, MT_COMPANY CM,MT_RBI_MONITORY MR ");
	strcat(l_fetch_query_3,"WHERE A.CLN_CODE = D.CLN_CODE AND ");
	strcat(l_fetch_query_3,"B.CLIENT = A.CLN_CODE AND ");
	strcat(l_fetch_query_3,"B.INSTR_CODE = C.INSTR_CODE AND ");
	strcat(l_fetch_query_3,"A.CLN_TYPE in ('F','FP') AND ");		//FP added for FPI
	strcat(l_fetch_query_3,"((B.DL_CLASS = '56') or ( ( B.ENTRY <> 'G' AND B.LOCATION_CD = 'CSGL') and B.deal_date<(select sys_date from pro_sys_date) ))AND ");
	strcat(l_fetch_query_3,"A.CLN_MASTER = M.CLN_CODE AND ");
	strcat(l_fetch_query_3,"C.CMP_CODE = CM.CMP_CODE AND ");
	/* strcat(l_fetch_query_3,"C.INSTR_SUB_TYPE NOT IN (SELECT DISTINCT MT_REG_RPT.INST_SUB_TYPE FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='INS' and MT_REG_RPT.STATUS='AA' and MT_REG_RPT.INST_BLK_FLG='Y' and ");
	sprintf(l_temp_var,"MT_REG_RPT.RPT_TYPE = '%s') AND ",p_rep_name);
	strcat(l_fetch_query_3,l_temp_var);
	strcat(l_fetch_query_3,"B.DOMESTIC_CPCLT NOT IN (SELECT DISTINCT MT_REG_RPT.PTY_CD FROM MT_REG_RPT WHERE MT_REG_RPT.BLK_IND ='PTY'  and MT_REG_RPT.STATUS = 'AA' and MT_REG_RPT.PTY_BLK_FLG='Y' and ");
	strcat(l_fetch_query_3,l_temp_var);*/
	strcat(l_fetch_query_3,"MR.INSTR_CODE (+) = B.INSTR_CODE AND ");
	strcat(l_fetch_query_3,"B.DEAL_STAT != 'UU' AND B.LR_VALDATE IS NULL ");
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	if(g_bnk_ind == 1)
	{
		/*sprintf(l_temp_var,"AND B.DEAL_DATE BETWEEN TO_DATE('%s 00:00:00','DD/MM/YYYY HH24:MI:SS') AND TO_DATE('%s 23:59:59','DD/MM/YYYY HH24:MI:SS') ",l_rept_for_dt, l_rept_for_dt);*/
		/*ISKB_4554  -- Commented and rewritten for RBI_LEC_XML Rept format -- Additional changes -- Shweta*/ 
		/*To fetch all the deals till l_rept_for_dt*/
		sprintf(l_temp_var,"AND B.DEAL_DATE <= TO_DATE('%s 23:59:59','DD/MM/YYYY HH24:MI:SS')",l_rept_for_dt);
			strcat(l_fetch_query_3, l_temp_var);
		/*if(p_bnk_hol_ind == 'N')
		{
			strcat(l_fetch_query_3,"AND NOT EXISTS (SELECT 1 FROM MT_HOLIDAY ");
			strcat(l_fetch_query_3,"WHERE MT_HOLIDAY.H_DATE BETWEEN TO_DATE(TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY')||' 00:00:00','DD/MM/YYYY HH24:MI:SS') AND TO_DATE(TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY')||' 23:59:59','DD/MM/YYYY HH24:MI:SS') AND MT_HOLIDAY.BANK_IND = 'Y' AND (MT_HOLIDAY.EXCH_CODE IS NULL OR MT_HOLIDAY.EXCH_CODE = B.EXCH_CODE))");
		}*/
	}
   	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
	strcpy(l_fetch_query,l_fetch_query_1);
	strcat(l_fetch_query,l_fetch_query_2);
	strcat(l_fetch_query,l_fetch_query_3);
	CO_ProcMonitor(l_logfile,"l_fetch_query after assign",NULL,NULL);
	CO_ProcMonitor(l_logfile,l_fetch_query,NULL,NULL);
	sprintf(chr_l_buf,"l_fetch_query len after assign : |%d|",strlen(l_fetch_query));
	CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	l_fetch_query[strlen(l_fetch_query)] = '\0';
   CO_ProcMonitor(l_logfile,"Declaring the Cursor rbi_rept",NULL,NULL);

	EXEC SQL PREPARE S FROM :l_fetch_query;
	EXEC SQL DECLARE rbi_rept CURSOR FOR S;
	IS_ANY_ORA_ERROR
   	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
   /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta --End*/	
	/*ISKB_4554  -- RBI_LEC_XML_Rpt_Format -- Retro -- Shweta 06092011--End*/ 
	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START  */

    /*COMMENTED BY SANA FOR RBI XML REPORT ENHANCEMENT AS THE SAME QUERY IS TAKEN IN A VARIABLE AS ABOVE 20-04-2011 -- Part of ISKB_4554 -- Retro*/
   /*EXEC SQL DECLARE rbi_rept CURSOR FOR
   SELECT 'B',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),NULL,NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC,1,9)),TO_CHAR(B.DL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.SETTLMENT_AMT,B.DL_PRICE,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),TO_CHAR(B.AMEND_DT,'DD-MM-YYYY'),C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,B.CONTRACT_CD,NULL,B.BROKER_CD,B.INTER_FII_FLG,NULL,NULL,B.INSTR_CD,B.R_SETT_CODE,B.R_TYPE, DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME,1,60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50)
     FROM MT_COMMON_SYS_PARAMS,PRO_SYS_DATE E,MT_CLIENT A,DL_BCN B,MT_INSTRUMENT C,MT_REGDETAILS D, MT_CLIENT M, MT_COMPANY CM
	WHERE A.CLN_CODE = D.CLN_CODE AND
    B.CLIENT_CD = A.CLN_CODE AND
    B.INSTR_CD = C.INSTR_CODE AND
    A.CLN_TYPE = 'F' AND 
   // B.STATUS != 'UU' AND    ISKB-518: ASHISH 16-11-2007 
    B.STATUS IN ('AA','RC') AND // ISKB-518: ASHISH 16-11-2007 
	A.CLN_MASTER = M.CLN_CODE AND
	C.CMP_CODE = CM.CMP_CODE AND
    (B.LR_VALDATE IS NULL OR (B.LR_VALDATE IS NOT NULL AND B.AMEND_DT IS NOT NULL AND B.AMEND_DT > B.LR_VALDATE))//rahul 
    UNION
   SELECT 'D',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),SUBSTR(B.UNIQ_IDENT_NO,1,12),NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC,1,9)),TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.AMOUNT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,NULL,NULL,B.INSTR_CODE,NULL,NULL, DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME,1,60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50)
      FROM MT_COMMON_SYS_PARAMS,PRO_SYS_DATE E,MT_CLIENT A,DL_DEAL B,MT_INSTRUMENT C,MT_REGDETAILS D, MT_CLIENT M, MT_COMPANY CM
    WHERE A.CLN_CODE = D.CLN_CODE AND
    B.CLIENT = a.CLN_CODE AND
    B.INSTR_CODE = C.INSTR_CODE AND
    A.CLN_TYPE = 'F' AND
	B.DL_CLASS IN ('17','18','19','21') AND
	B.DEAL_STAT = 'CS' AND 
	A.CLN_MASTER = M.CLN_CODE AND
	C.CMP_CODE = CM.CMP_CODE AND
    B.LR_VALDATE IS NULL
    UNION 
  SELECT 'E',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),SUBSTR(B.UNIQ_IDENT_NO,1,12),NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC,1,9)),TO_CHAR(B.DEAL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.NET_AMT,B.COST,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),NULL,C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,NULL,B.IDENTIY_NO,NULL,NULL,B.DL_CLASS,B.DEAL_CD,B.INSTR_CODE,NULL,NULL, DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME,1,60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50)
      FROM MT_COMMON_SYS_PARAMS,PRO_SYS_DATE E,MT_CLIENT A,DL_DEAL B,MT_INSTRUMENT C,MT_REGDETAILS D, MT_CLIENT M, MT_COMPANY CM
  WHERE A.CLN_CODE = D.CLN_CODE AND
    B.CLIENT = A.CLN_CODE AND
    B.INSTR_CODE = C.INSTR_CODE AND
    A.CLN_TYPE = 'F' AND
	 B.DL_CLASS = '56' AND
	A.CLN_MASTER = M.CLN_CODE AND
	C.CMP_CODE = CM.CMP_CODE AND
	 B.DEAL_STAT != 'UU' AND
	 B.LR_VALDATE IS NULL;
	*/

	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */



   CO_ProcMonitor(l_logfile,"Opening the Cursor rbi_rept",NULL,NULL);
	EXEC SQL OPEN rbi_rept;
  
  	IS_ANY_ORA_ERROR
	  for(;;)
	  {
	     CO_ProcMonitor(l_logfile,"Entered for loop",NULL,NULL);
		 
			sqlca.sqlcode = 0; 
			memset(l_rbi_instrcd,APL_NULL_CHAR,sizeof(l_rbi_instrcd));

			EXEC SQL FETCH rbi_rept 
						INTO :l_trn_ind:i_trn_ind,
						     :l_cust_code:i_cust_code,
							  :l_sys_date:i_sys_date,
							  :l_uniq_ident:i_uniq_ident,
							  :l_rbi_reg_no:i_rbi_reg_no,
							  :l_sebi_sub_acc:i_sebi_sub_acc,
							  :l_dl_date:i_dl_date,
							  :l_instr_sub_type:i_instr_sub_type,
							  :l_trans_cd:i_trans_cd,
							  :l_qty:i_qty,
							  :l_dl_amt:i_dl_amt,
							  :l_dl_price:i_dl_price,
                              :l_dt_input:i_dt_input,
							  :l_amend_dt:i_amend_dt,
							  :l_instr_isin:i_instr_isin,
							  :l_nom_value:i_nom_value,
							  :l_rowid:i_rowid,
							  :l_contract_cd:i_contract_cd,
							  :l_identity_no:i_identity_no,
							  :l_broker_cd:i_broker_cd,
							  :l_inter_fii:i_inter_fii,
							  :l_dl_class:i_dl_class,
							  :l_deal_cd:i_deal_cd,
							  :l_instr_code:i_instr_code,
                              :l_sett_code:i_sett_code,
		                      :l_rtype:i_rtype,
							  :l_client_cd:i_client_cd, //Added by Gaurav for Temoprary ISIN
							  :l_cln_name:i_cln_name,  //  master -> DECODE(DECODE(A.CLN_MASTER,A.CLN_CODE,NULL,SUBSTR(A.CLN_NAME, 1, 60)),null,null,decode(A.CLN_TYPE,'FP',NULL,SUBSTR(A.CLN_NAME, 1, 60)))
							  :l_mst_name:i_mst_name,  // SUBSTR(M.CLN_NAME,1,60),  --subaccount
							  :l_cmp_name:i_cmp_name,			// HDFC ENH - RBI XML Format by Bageshri on 23-06-2009
							  //:l_instr_type_desc:i_instr_type_desc,//Added by Gaurav for Temoprary ISIN 
							  //:l_txn_type_desc:i_txn_type_desc,     //Added by Gaurav for Temoprary ISIN
							  :l_rtv_lec_date:i_rtv_lec_date,	   	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 FOR RETRIEVING LEC DATE*/
                              :l_rbi_instrcd:i_rbi_instrcd;				/*ISKB_4554  - To fetch RBI_INSTR_CODE - Shweta - 16092011*/
                                                               /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta --End*/	

          sprintf(chr_l_buf,"Sqlca.sqlcode after fetch is |%d|\n",sqlca.sqlcode);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			IS_ANY_ORA_ERROR
			if (sqlca.sqlcode == 1403)
				break;
		/* commented IUT Fix - Bageshri - ISKB_4554 */
	        /*EXEC SQL SELECT FIELD_VAL INTO :l_cust_cd:i_cust_cd
		                  FROM PRO_GSSPLVAL 
 								WHERE MAIN_FUN = 'RBI_CODE' AND
 								SUB_PROCESS = 'RBI';
           sprintf(chr_l_buf,"SqlError chck1 for PRO_GSSPLVAL |%d|\n",sqlca.sqlcode);
  	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			IS_ANY_ORA_ERROR
		*/
		strcpy(l_cust_cd,l_chr_cust_cd); /* IUT Fix - Bageshri - ISKB_4554 */
			
         sprintf(chr_l_buf,"INDICATOR VALUE CHECK |%s|\n",l_trn_ind);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        if (strcmp(l_trn_ind,"D") == 0)
		{
             sprintf(chr_l_buf,"Inside Skipping record of Identiy No|%s|\n",l_identity_no);
             CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

			if(!strlen(l_trans_cd))
			{             
				sprintf(chr_l_buf,"Skipping record of Identiy No |%s| & deal date |%s|, as Regulatory transaction code is not available \n",l_identity_no,l_dl_date);
	            CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			    continue;
			}

            if((!strncmp(l_identity_no,RTS_ISSUE,strlen(RTS_ISSUE))) ||(!strncmp(l_identity_no,CA_RT_APPL_IND,strlen(CA_RT_APPL_IND))))
				 continue;
        }

         sprintf(chr_l_buf,"Sett CodePassed to Skipping record Check|%s|\n",l_sett_code);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"LR Type Passed to Skipping record Check|%s|\n",l_rtype);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

       /* Deals Converted From Clearing House To HandDelivery Not to be Displayed - Kouser*/
	/*ISKB_5591- Commented by Jeevan on 16-04-2012 - Reason - These records should be included in RBI Report - Start 
         if ((strcmp(l_trn_ind,"B") == 0) && (strcmp(l_sett_code,"I") == 0) && (strcmp(l_rtype,"15") == 0))
		 {
			   sprintf(chr_l_buf,"Inside Skipping record Settlement Code Value|%s|\n",l_sett_code);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	           continue;
         }
	 Commented by Jeevan on 16-04-2012 - Reason - These records should be included in RBI Report - Ends ISKB_5591*/
/*Commented by Shweta S - ISKB_4554  - RBI_INSTR_CODE has been fetched in main query  16092011*/
/*	   if (strcmp(l_trn_ind,"B") == 0)
		{

              EXEC SQL SELECT SUBSTR(RBI_INSTR_CODE,1,5) INTO :l_rbi_instrcd:i_rbi_instrcd
			                    FROM MT_RBI_MONITORY
                                WHERE INSTR_CODE =:l_instr_code;
			sprintf(chr_l_buf,"BSqlError check1  |%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            IS_ANY_ORA_ERROR

	         sprintf(chr_l_buf,"RBI INSTR CODE |%s|\n",l_rbi_instrcd);
			 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         }
		 else if (strcmp(l_trn_ind,"D") == 0)
         {

				EXEC SQL SELECT SUBSTR(RBI_INSTR_CODE,1,5) INTO :l_rbi_instrd:i_rbi_instrd
						       FROM MT_RBI_MONITORY
								WHERE INSTR_CODE =:l_instr_code;
				sprintf(chr_l_buf,"DDSqlError check1  |%d|\n",sqlca.sqlcode);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				IS_ANY_ORA_ERROR

				sprintf(chr_l_buf,"RBI INSTR CODE |%s|\n",l_rbi_instrd);
			   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		}
		else if (strcmp(l_trn_ind,"E") == 0)
		{

                EXEC SQL SELECT SUBSTR(RBI_INSTR_CODE,1,5) INTO :l_rbi_instrce:i_rbi_instrce
						       FROM MT_RBI_MONITORY
							   WHERE INSTR_CODE =:l_instr_code;
				sprintf(chr_l_buf,"EESqlError check1  |%d|\n",sqlca.sqlcode);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	            IS_ANY_ORA_ERROR

	          sprintf(chr_l_buf,"RBI INSTR CODE |%s|\n",l_rbi_instrce);
		      CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
        }*/

		strcpy(l_bcn_rmk,APL_NULL_STRING); 
		strcpy(l_deal_rmk,APL_NULL_STRING); 
	
         sprintf(chr_l_buf,"Date Passed from FE to assign lec Date is |%s|\n",l_chr_pdate);
		CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"Sys Date|%s|\n",l_sys_date);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"Contract Code|%s|\n",l_contract_cd);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"BROKER CD|%s|\n",l_broker_cd);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	      sprintf(chr_l_buf,"Instr Isis |%s|\n",l_instr_isin);
		  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
          sprintf(chr_l_buf,"Settlement Amt |%lf|\n",l_nom_value);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
          sprintf(chr_l_buf,"Inter FII Flag |%s|\n",l_inter_fii);
		  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);


         CO_ProcMonitor(l_logfile,"After Fetching the records from  rbi_rept Cursor",NULL,NULL);
  	     /*	strcpy(l_def_value,"000"); - Commented  Counter value check Changed - Kouser */  
         int_cnt = int_cnt + 1;
         sprintf(chr_l_buf,"Counter Value |%d|\n",int_cnt);
	     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			
         /* SetUp a Counter Value for Lecid - Kouser */
		    EXEC SQL SELECT LPAD(:int_cnt,4,'0') INTO :l_chr_cntr:i_chr_cntr
				           FROM DUAL; 
			 IS_ANY_ORA_ERROR
		/*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta --Start*/	
		/*HDFC ENH - RBI XML Format by Sana on 02-05-2011 FOR RETRIEVING LEC NO AND TRANS NO BASED ON DEAL DATE -- START*/
		if(g_bnk_ind == 1)
		{
       		/*Lec_no should be based on lec_date - Shweta - 23092011 - ISKB_4554 - Start*/	
			EXEC SQL SELECT TO_CHAR(TO_DATE(:l_dl_date,'DD/MM/YYYY'),'DD'), 
				TO_CHAR(TO_DATE(:l_dl_date,'DD/MM/YYYY'),'MM'),TO_CHAR(TO_DATE(:l_rept_for_dt,'DD/MM/YYYY'),'DD'), 
				TO_CHAR(TO_DATE(:l_rept_for_dt,'DD/MM/YYYY'),'MM')
				INTO :l_deal_dt_day:i_deal_dt_day, :l_deal_dt_mon:i_deal_dt_mon,:l_lec_dt_day:i_lec_dt_day, :l_lec_dt_mon:i_lec_dt_mon
			FROM PRO_SYS_DATE;
			IS_ANY_ORA_ERROR
       			/*sprintf(l_llec_no,"%s%s",l_deal_dt_day,l_deal_dt_mon);
                   	sprintf(chr_l_buf,"FORMED LEC NO |%s|\n",l_llec_no);
                   	CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);*/
			sprintf(l_lec_id,"%s%s%s",l_deal_dt_day,l_deal_dt_mon,l_chr_cntr);
                   	sprintf(chr_l_buf,"LEC ID |%s|\n",l_lec_id);
                   	CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

					sprintf(l_llec_no,"%s%s",l_lec_dt_day,l_lec_dt_mon);
                   	sprintf(chr_l_buf,"FORMED LEC NO |%s|\n",l_llec_no);
                   	CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);                   	

       		/*Lec_no should be based on lec_date - Shweta - 23092011 - ISKB_4554 - End*/	
		}
		/*HDFC ENH - RBI XML Format by Sana on 02-05-2011 FOR RETRIEVING LEC NO AND TRANS NO BASED ON DEAL DATE -- END*/
		/*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta -- End*/	
		else
		{
		   sprintf(l_lec_id,"%s%s%s",l_chr_date,l_chr_month,l_chr_cntr);
			sprintf(chr_l_buf,"LEC ID |%s|\n",l_lec_id);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);			
		}

        EXEC SQL SELECT TO_CHAR(TO_DATE(:l_sys_date),'DD/MM/YYYY') INTO :l_csy_date:i_csy_date
                from DUAL;
	     IS_ANY_ORA_ERROR

		strcat(l_csy_date,APL_NULL_TIME);
		strcpy(l_csyst_date,l_csy_date);

        sprintf(chr_l_buf,"Sysdate first |%s|\n",l_csyst_date);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	    CO_ProcMonitor(l_logfile,"Before Insert Into DL_REGBCN table",NULL,NULL); 
        sprintf(chr_l_buf,"Isin check |%s|\n",l_instr_isin);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        if (strlen(l_instr_isin) == 0)
			  strcpy(l_instr_isin,"NO_ISIN");
        
		if (strcmp(l_trans_cd,"04") == 0)
               strcpy(l_trans_cd,"4");
         else if (strcmp(l_trans_cd,"01") == 0)
		 	   strcpy(l_trans_cd,"1");

         sprintf(chr_l_buf,"Trans Code in First Cursor |%s|\n",l_trans_cd);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		 sprintf(chr_l_buf,"Before Checking Inter FII Flag |%s|\n",l_inter_fii);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"Before TransInd Value |%s|\n",l_trn_ind);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         if ((strcmp(l_trn_ind,"D") == 0) && (strcmp(l_trans_cd,"15") == 0) || (strcmp(l_trans_cd,"16") == 0))
		 {
		 	 sprintf(chr_l_buf,"TransCode COrp |%s|\n",l_trans_cd);
	         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			 strcpy(l_trans_cd,"04");
         }
             
         /* Changes for SetUp TransCode Values - 56,59 - Kouser */
        if ((strcmp(l_trn_ind,"E") == 0) && (strcmp(l_dl_class,"56") == 0))
		{
	         sprintf(chr_l_buf," Inside the SquareOff Record Status for Passed Dl_Class|%s|\n",l_dl_class);
		     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

			if (strcmp(l_deal_cd,"4") == 0)
		          strcpy(l_trans_cd,"1");
			else if (strcmp(l_deal_cd,"3") == 0)
				 strcpy(l_trans_cd,"4");
	 		strcpy(l_deal_rmk,"CLOSEOUT TRADE");
		}
		if ((strcmp(l_trn_ind,"B") == 0) && (strcmp(l_inter_fii,"Y") == 0) || (strcmp(l_inter_fii,"T") == 0))
		{
			  strcpy(l_bcn_rmk,"INTER FII TRADE");
		}

   
         EXEC SQL SELECT TO_CHAR(TO_DATE(:l_chr_pdate,'DD/MM/YYYY'),'DD/MM/YYYY') INTO :l_chr_ldate:i_chr_ldate
			       FROM DUAL;
         IS_ANY_ORA_ERROR

	       sprintf(chr_l_buf,"DATE FOR CONVERT FE PASSED DATE|%s|\n",l_chr_ldate);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         /* Calculation Of Rate value Only for BCN Records Changes  - Kouser*/
	      if ((strcmp(l_trn_ind,"B") == 0) || (strcmp(l_trn_ind,"E") == 0))
		  {
				sprintf(chr_l_buf,"Inside Rate calculation|%lf|\n",l_dl_amt);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		         l_chr_rate = l_dl_amt/l_qty;
		  }

         EXEC SQL SELECT ROUND((nvl(:l_chr_rate,0)),4) INTO :l_chr_rtval:i_chr_rtval
				  FROM DUAL;
		 IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"After Converting Of RoundVal |%lf|\n",l_chr_rtval);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

         EXEC SQL SELECT ROUND((nvl(:l_dl_price,0)),4) INTO :l_chr_price:i_chr_price
				  FROM DUAL;
         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"After Converting Of RoundVal |%lf|\n",l_chr_price);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		 /********* Start - Fetch LEC_NO AND ID For Amended Deal - Rahul ***********/
		if(strcmp(l_trn_ind,"B") == 0)
		{
				EXEC SQL SELECT count(*) INTO :l_amd_cnt:i_amd_cnt FROM DL_BCN 
					WHERE ROWID = :l_rowid AND LR_VALDATE IS NOT NULL AND AMEND_DT IS NOT NULL 
							AND AMEND_DT > LR_VALDATE;
				IS_ANY_ORA_ERROR
			   sprintf(chr_l_buf,"Check: Record is Amended |%d|\n",l_amd_cnt);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				
				if (l_amd_cnt == 1)
				{

					/************* Strat - For Report Reverse Amended BCN - Rahul ************************/

					CO_ProcMonitor(l_logfile,"Start Reporting Reverse Amended BCN\n",NULL,NULL);

					/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START  */

					EXEC SQL SELECT DL_DATE,R_TRANS_CODE,QTY,SETTLMENT_AMT,LR_VALDATE,NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),
					DECODE(CL.CLN_MASTER,CL.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC,1,9)),
					/*SUBSTR(RBI_INSTR_CODE,1,5), */
					A.RBI_INSTR_CODE, /*ISKB_4554  - to display the rbi instr code as maintained in custody- Shweta - 16092011*/					 
					C.INSTR_SUB_TYPE,C.INSTR_ISIN,C.NOMINAL_VALUE,
					/*Commented and rewritten by swathi - on 01/08/2016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI should appear for the client type as FPI instead of its master account)- START
					DECODE(CL.CLN_MASTER,CL.CLN_CODE,null,SUBSTR(CL.CLN_NAME,1,60)),*/					
					DECODE(DECODE(CL.CLN_MASTER,CL.CLN_CODE,null,SUBSTR(CL.CLN_NAME,1,60)),null,null,decode(CL.CLN_TYPE,'FP',NULL,SUBSTR(CL.CLN_NAME, 1, 60)) ),
					/*Commented and rewritten by swathi - on 01082016 for ISKB_1951(In RBI xml report for FPI accounts,in place of FII name, name of the corresponding FPI should appear for the client type as FPI instead of its master account)- ENDS */
					/*Changed for ISKB_1951-24082016- Master name should appear for all FII clients -Master name for FPI Master Account-Subaccount Name in case of FPI SubAccount- START */
					//SUBSTR(M.CLN_NAME,1,60),
					decode(CL.CLN_TYPE,'FP',decode(CL.CLN_MASTER,CL.CLN_CODE,SUBSTR(M.CLN_NAME, 1, 60),SUBSTR(CL.CLN_NAME, 1, 60) ),SUBSTR(M.CLN_NAME, 1, 60)),
                   /*Changed for ISKB_1951-24082016- Master name should appear for all FII clients -Master name for FPI Master Account-Subaccount Name in case of FPI SubAccount - END */
					SUBSTR(CM.CMP_NAME,1,50)
					 INTO :l_rev_dl_date:i_rev_dl_date,:l_rev_trans_cd:i_rev_trans_cd,
								:l_rev_qty:i_rev_qty,:l_rev_dl_amt:i_rev_dl_amt,
								:l_rev_lr_valdate:i_rev_lr_valdate,:l_rev_rbi_reg_no:i_rev_rbi_reg_no,
								:l_rev_sebi_sub_acc:i_rev_sebi_sub_acc,:l_rev_rbi_instrcd:i_rev_rbi_instrcd,
								:l_rev_instr_sub_type:i_rev_instr_sub_type,:l_rev_instr_isin:i_rev_instr_isin,
								:l_rev_nom_value:i_rev_nom_value, :l_rev_cln_name:i_rev_cln_name,
								:l_rev_mst_name:i_rev_mst_name, :l_rev_cmp_name:i_rev_cmp_name
					 FROM DL_REGBCN B,MT_REGDETAILS D,MT_RBI_MONITORY A,MT_INSTRUMENT C, MT_CLIENT CL, MT_CLIENT M, MT_COMPANY CM
					 WHERE B.INSTR_CD = C.INSTR_CODE AND A.INSTR_CODE (+) = B.INSTR_CD AND B.CLIENT_CD = D.CLN_CODE           
							AND C.CMP_CODE = CM.CMP_CODE AND B.CLIENT_CD = CL.CLN_CODE AND CL.CLN_MASTER = M.CLN_CODE
						   AND B.BROKER_CD = :l_broker_cd AND to_char(B.DL_DATE,'DD/MM/YYYY') = :l_dl_date AND
						   B.CONTRACT_CD =:l_contract_cd AND B.REPO_FLAG = 'R'  ;

					/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */

					IS_ANY_ORA_ERROR
					
					l_tmp_dl_amt = l_rev_dl_amt/l_rev_qty;
					EXEC SQL SELECT ROUND((nvl(:l_tmp_dl_amt,0)),4) INTO :l_rev_chr_rtval:i_rev_chr_rtval FROM DUAL;
					IS_ANY_ORA_ERROR	
						
					l_rbi_rev_dl_amt = 0;
					l_rbi_rev_nom_val = 0;
					l_rbi_rev_qty = 0;

					i_rbi_rev_dl_amt = 0;
					i_rbi_rev_nom_val = 0;
					i_rbi_rev_qty = 0;

				 EXEC SQL SELECT ROUND(:l_rev_dl_amt,:l_double_precision), ROUND(:l_rev_nom_value,:l_double_precision) , ROUND(:l_rev_qty,:l_double_precision)
					      INTO:l_rbi_rev_dl_amt:i_rbi_rev_dl_amt,:l_rbi_rev_nom_val:i_rbi_rev_nom_val,:l_rbi_rev_qty:i_rbi_rev_qty
					      FROM DUAL;
				          printf("\n Error in query = |%d| \n",sqlca.sqlcode);
				 IS_ANY_ORA_ERROR
				 printf("\n Value of Deal Amount after Round off(upto 2 decimal places) = |%lf| \n",l_rbi_rev_dl_amt);
				 printf("\n Trucated Nominal Value = |%d| \n",l_rbi_rev_nom_val);

					
			        if ((strcmp(l_rev_trans_cd,"01") == 0 ) || (strcmp(l_rev_trans_cd,"02") == 0 ))
                    {
						strcpy(l_chr_rev_rmk,"PURCHASE TXN REPORTED ON ");
						strcat(l_chr_rev_rmk,l_rev_lr_valdate);
						strcat(l_chr_rev_rmk," AMENDED");
	            		 strcpy(l_rev_trans_cd,"4");
				   }
		           else if ((strcmp(l_rev_trans_cd,"04") == 0 ))
				   {
					   strcpy(l_chr_rev_rmk,"SALE TXN REPORTED ON ");
					   strcat(l_chr_rev_rmk,l_rev_lr_valdate);
	   				   strcat(l_chr_rev_rmk," AMENDED");
		   			  strcpy(l_rev_trans_cd,"1");
				  }

					 if(strlen(l_rev_instr_isin) == 0)
						strcpy(l_rev_instr_isin,"NO_ISIN");
				  
	  				strcpy(l_rev_lec_id,APL_NULL_STRING);  
					CO_ProcMonitor(l_logfile,"Fetching Transaction ID for  Amended Trade\n",NULL,NULL);
					EXEC SQL SELECT LEC_NO,LEC_ID INTO :l_orig_lecno,:l_rev_lec_id FROM DL_REGBCN
						WHERE BROKER_CD =:l_broker_cd AND to_char(DL_DATE,'DD/MM/YYYY') = :l_dl_date AND
						CONTRACT_CD =:l_contract_cd AND
						REPO_FLAG = 'R';
					IS_ANY_ORA_ERROR
  				  fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"%s\",\"%s\"\n",l_cust_cd,l_rev_dl_date,l_llec_no,l_rev_lec_id,l_rev_rbi_reg_no,l_rev_sebi_sub_acc,l_rtv_lec_date,l_rev_rbi_instrcd,l_rev_instr_sub_type,l_rev_trans_cd,l_rev_qty,l_rev_dl_amt,l_rev_chr_rtval,l_chr_ldate,l_chr_ldate,l_rev_instr_isin,l_rev_nom_value,l_orig_lecno,l_chr_rev_rmk);	

				/*********** ASHISH 13-06-2009 Start **************/
				if(l_rbi_xml_flg == 1)
				{
					CO_Trim(l_rev_trans_cd,'0','L',l_rev_trans_cd,l_debug_info_ptr);

					 sprintf(chr_l_buf,"Trans Code |%s|instr sub |%s|\n",l_rev_trans_cd,l_rev_instr_sub_type);
					 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

					//Added for ISKB_6213(Transaction code 04 should be populated instead of 15 in RBI XML Report)-Start

					Alert("R_Trans_Code Before Copying is |%s|",l_rev_trans_cd);

					if ((strcmp(l_rev_trans_cd,"15") == 0 ))
					{
						strcpy(l_rev_trans_cd,"4");
					}	
					
					Alert("R_Trans_Code After Copying is |%s|",l_rev_trans_cd);

					//Added for ISKB_6213(Transaction code 04 should be populated instead of 15 in RBI XML Report)-End

					memset(l_rev_instr_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);
					memset(l_rev_txn_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);

					EXEC SQL SELECT PT.MAP_DESC 
						INTO :l_rev_txn_type_desc:i_rev_txn_type_desc
					FROM PRO_SGENSTAT PT WHERE MAP_TYPE ='RBI_TXN_CODE' AND NATION_CODE = 'IN'
					AND PT.MAP_VAL = :l_rev_trans_cd;

					IS_ANY_ORA_ERROR

					EXEC SQL SELECT PT.MAP_DESC 
						INTO :l_rev_instr_type_desc:i_rev_instr_type_desc
					FROM PRO_SGENSTAT PT WHERE MAP_TYPE ='RBI_INSTR_SUB_TYPE' AND NATION_CODE = 'IN'
					AND PT.MAP_VAL = :l_rev_instr_sub_type;
			
					EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_rev_lec_id,to_date(:l_rev_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_llec_no,to_date(:l_rtv_lec_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rev_rbi_reg_no,:l_rev_mst_name,:l_rev_sebi_sub_acc,:l_rev_cln_name,:l_rev_instr_isin,:l_rev_rbi_instrcd,:l_rev_cmp_name,:l_rev_instr_type_desc,:l_rev_trans_cd,:l_rev_txn_type_desc,:l_rbi_rev_nom_val,:l_rev_chr_rtval,:l_rbi_rev_qty,:l_rbi_rev_dl_amt,:l_orig_lecno,:l_chr_rev_rmk,'N',:l_intl_rept_struct_ha->report_date);
					
					
					
					printf("\n 1 Sql error to insert data into table MT_RBI_REGREP_TRANS_LIST = |%d| \n",sqlca.sqlcode);
					IS_ANY_ORA_ERROR
				}

  				/*********** ASHISH 13-06-2009 End **************/
				  
				  strcpy(l_orig_lecno,APL_NULL_STRING); 
				/************* End - For Report Reverse Amended BCN - Rahul ************************/
				}
			}			
			/********* End - Fetch LEC_NO AND ID For Amended Deal - Rahul ***********/

			/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START  */

			if(l_rbi_xml_flg == 1)
			{

				memset(l_instr_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);
				memset(l_txn_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);

				CO_Trim(l_trans_cd,'0','L',l_trans_cd,l_debug_info_ptr);

				 sprintf(chr_l_buf,"Trans Code |%s|instr sub |%s|\n",l_trans_cd,l_instr_sub_type);
				 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

				EXEC SQL SELECT PT.MAP_DESC 
					INTO :l_txn_type_desc:i_txn_type_desc
				FROM PRO_SGENSTAT PT WHERE MAP_TYPE ='RBI_TXN_CODE' AND NATION_CODE = 'IN'
				AND PT.MAP_VAL = :l_trans_cd;

				IS_ANY_ORA_ERROR

				EXEC SQL SELECT PT.MAP_DESC 
					INTO :l_instr_type_desc:i_instr_type_desc
				FROM PRO_SGENSTAT PT WHERE MAP_TYPE ='RBI_INSTR_SUB_TYPE' AND NATION_CODE = 'IN'
				AND PT.MAP_VAL = :l_instr_sub_type;

 /*  Add by ASHISH 17-09-2007 */
            l_strt_dl_amt = 0;
			l_strt_nom_value = 0;
			i_strt_dl_amt = 0;
			i_strt_nom_value = 0;
            l_strt_qty = 0;
			i_strt_qty = 0;

			EXEC SQL SELECT ROUND(:l_dl_amt,:l_double_precision), ROUND(:l_nom_value,:l_double_precision), ROUND(:l_qty,:l_double_precision)
					      INTO:l_strt_dl_amt:i_strt_dl_amt,:l_strt_nom_value:i_strt_nom_value,:l_strt_qty:i_strt_qty
					      FROM DUAL;
				          printf("\n Error in query = |%d| \n",sqlca.sqlcode);
				 IS_ANY_ORA_ERROR
				 printf("\n Value of Deal Amount after Round off(upto 2 decimal places) = |%lf| \n",l_strt_dl_amt);
				 printf("\n Trucated Nominal Value = |%d| \n",l_strt_nom_value);
			


			}

			/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */
			
        if (strcmp(l_trn_ind,"B") == 0)
		{	
		/*	fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"\",\"%s\"\n",l_cust_cd,l_dl_date,l_llec_no,l_lec_id,l_rbi_reg_no,l_sebi_sub_acc,l_dl_date,l_rbi_instrcd,l_instr_sub_type,l_trans_cd,l_qty,l_dl_amt,l_chr_rtval,l_chr_ldate,l_chr_ldate,l_instr_isin,l_nom_value,l_bcn_rmk);*/
 fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"\",\"%s\"\n",l_cust_cd,l_dl_date,l_llec_no,l_lec_id,l_rbi_reg_no,l_sebi_sub_acc,l_rtv_lec_date,l_rbi_instrcd,l_instr_sub_type,l_trans_cd,l_qty,l_dl_amt,l_chr_rtval,l_chr_ldate,l_chr_ldate,l_instr_isin,l_nom_value,l_bcn_rmk); /*Changes for LEC date - HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
		                                      /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta*/	
		/*********** ASHISH 13-06-2009 Start **************/
			if(l_rbi_xml_flg == 1)
			{
//				CO_Trim(l_trans_cd,'0','L',l_trans_cd,l_debug_info_ptr);
			
				//Added for ISKB_6213(Transaction code 04 should be populated instead of 15 in RBI XML Report)-Start
					Alert("R_TRANS_CODE before Copying is |%s|",l_trans_cd);
					memset(l_txn_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);
				
					if ((strcmp(l_trans_cd,"15") == 0 ))
					{
						strcpy(l_trans_cd,"4");
					}						

					EXEC SQL SELECT PT.MAP_DESC 
					INTO :l_txn_type_desc:i_txn_type_desc
					FROM PRO_SGENSTAT PT WHERE MAP_TYPE ='RBI_TXN_CODE' AND NATION_CODE = 'IN'
					AND PT.MAP_VAL = :l_trans_cd;
					
					Alert("R_Trans_Code After Copying is |%s|",l_trans_cd);
					Alert("R_Trans_Code_Description  is |%s|",l_txn_type_desc);

				 //Added for ISKB_6213(Transaction code 04 should be populated instead of 15 in RBI XML Report)-End

				/*EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_lec_id,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_llec_no,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rbi_reg_no,:l_mst_name,:l_sebi_sub_acc,:l_cln_name,:l_instr_isin,:l_rbi_instrcd,:l_cmp_name,:l_instr_type_desc,:l_trans_cd,:l_txn_type_desc,:l_strt_nom_value,:l_chr_rtval,:l_strt_qty,:l_strt_dl_amt,NULL,:l_bcn_rmk,'N',:l_intl_rept_struct_ha->report_date);*/
				EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_lec_id,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_llec_no,to_date(:l_rtv_lec_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rbi_reg_no,:l_mst_name,:l_sebi_sub_acc,:l_cln_name,:l_instr_isin,:l_rbi_instrcd,:l_cmp_name,:l_instr_type_desc,:l_trans_cd,:l_txn_type_desc,:l_strt_nom_value,:l_chr_rtval,:l_strt_qty,:l_strt_dl_amt,NULL,:l_bcn_rmk,'N',:l_intl_rept_struct_ha->report_date); /*Changes for LEC date - HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
				/*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta*/	
				
				printf("\n 2 Sql error to insert data into table MT_RBI_REGREP_TRANS_LIST = |%d| \n",sqlca.sqlcode);

				fflush(stdout);

				IS_ANY_ORA_ERROR
			}

		/*********** ASHISH 13-06-2009 End **************/
			
			strcpy(l_rbi_instrcd,APL_NULL_STRING);
        }
        else if (strcmp(l_trn_ind,"E") == 0) 
		 {
		//	 fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"\",\"%s\"\n",l_cust_cd,l_dl_date,l_llec_no,l_lec_id,l_rbi_reg_no,l_sebi_sub_acc,l_dl_date,l_rbi_instrce,l_instr_sub_type,l_trans_cd,l_qty,l_dl_amt,l_chr_rtval,l_chr_ldate,l_chr_ldate,l_instr_isin,l_nom_value,l_deal_rmk);
			/*Changes for LEC date - HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
			/*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta*/	
			fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"\",\"%s\"\n",l_cust_cd,l_dl_date,l_llec_no,l_lec_id,l_rbi_reg_no,l_sebi_sub_acc,l_rtv_lec_date,l_rbi_instrcd,l_instr_sub_type,l_trans_cd,l_qty,l_dl_amt,l_chr_rtval,l_chr_ldate,l_chr_ldate,l_instr_isin,l_nom_value,l_deal_rmk); 
			/*********** ASHISH 13-06-2009 Start **************/	
			if(l_rbi_xml_flg == 1)
			{
//				CO_Trim(l_trans_cd,'0','L',l_trans_cd,l_debug_info_ptr);

				/*Commented by Sana EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_lec_id,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_llec_no,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rbi_reg_no,:l_mst_name,:l_sebi_sub_acc,:l_cln_name,:l_instr_isin,:l_rbi_instrce,:l_cmp_name,:l_instr_type_desc,:l_trans_cd,:l_txn_type_desc,:l_strt_nom_value,:l_chr_rtval,:l_strt_qty,:l_strt_dl_amt,NULL,:l_deal_rmk,'N',:l_intl_rept_struct_ha->report_date);*/
				/*Changes for LEC date - HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
	            /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta*/	
				EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_lec_id,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_llec_no,to_date(:l_rtv_lec_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rbi_reg_no,:l_mst_name,:l_sebi_sub_acc,:l_cln_name,:l_instr_isin,:l_rbi_instrcd,:l_cmp_name,:l_instr_type_desc,:l_trans_cd,:l_txn_type_desc,:l_strt_nom_value,:l_chr_rtval,:l_strt_qty,:l_strt_dl_amt,NULL,:l_deal_rmk,'N',:l_intl_rept_struct_ha->report_date); 
				
				
				printf("\n 3 Sql error to insert data into table MT_RBI_REGREP_TRANS_LIST = |%d| \n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR
			}

			/*********** ASHISH 13-06-2009 End **************/
		 
		//	 strcpy(l_rbi_instrce,APL_NULL_STRING);
        }
		else
		 {	
			/*fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"\",\"\"\n",l_cust_cd,l_dl_date,l_llec_no,l_lec_id,l_rbi_reg_no,l_sebi_sub_acc,l_dl_date,l_rbi_instrd,l_instr_sub_type,l_trans_cd,l_qty,l_dl_amt,l_chr_price,l_chr_ldate,l_chr_ldate,l_instr_isin,l_nom_value);*/
                   /*Commented By Sana fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%d,\"\",\"\",\n",l_cust_cd,l_dl_date,l_llec_no,l_lec_id,l_rbi_reg_no,l_sebi_sub_acc,l_dl_date,l_rbi_instrd,l_instr_sub_type,l_trans_cd,l_qty,l_strt_dl_amt,l_chr_price,l_chr_ldate,l_chr_ldate,l_instr_isin,l_strt_nom_value);*/
		   /*Changes for LEC date - HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
			/*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta*/	
		   fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"\",\"\"\n",l_cust_cd,l_dl_date,l_llec_no,l_lec_id,l_rbi_reg_no,l_sebi_sub_acc,l_rtv_lec_date,l_rbi_instrcd,l_instr_sub_type,l_trans_cd,l_qty,l_dl_amt,l_chr_price,l_chr_ldate,l_chr_ldate,l_instr_isin,l_nom_value); 
			

			/*********** ASHISH 13-06-2009 Start **************/

			if(l_rbi_xml_flg == 1)
			{

//					CO_Trim(l_trans_cd,'0','L',l_trans_cd,l_debug_info_ptr);
			
				/*Commented By Sana EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_lec_id,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_llec_no,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rbi_reg_no,:l_mst_name,:l_sebi_sub_acc,:l_cln_name,:l_instr_isin,:l_rbi_instrd,:l_cmp_name,:l_instr_type_desc,:l_trans_cd,:l_txn_type_desc,:l_strt_nom_value,:l_chr_price,:l_strt_qty,:l_strt_dl_amt,NULL,NULL,'N',:l_intl_rept_struct_ha->report_date);*/
				/*Changes for LEC date - HDFC ENH - RBI XML Format by Sana on 20-04-2011*/
            /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta*/	
				EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_lec_id,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_llec_no,to_date(:l_rtv_lec_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rbi_reg_no,:l_mst_name,:l_sebi_sub_acc,:l_cln_name,:l_instr_isin,:l_rbi_instrcd,:l_cmp_name,:l_instr_type_desc,:l_trans_cd,:l_txn_type_desc,:l_strt_nom_value,:l_chr_price,:l_strt_qty,:l_strt_dl_amt,NULL,NULL,'N',:l_intl_rept_struct_ha->report_date); 
				
				
				printf("\n 4 Sql error to insert data into table MT_RBI_REGREP_TRANS_LIST = |%d| \n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR
			}

			/*********** ASHISH 13-06-2009 End **************/
			
	//		strcpy(l_rbi_instrd,APL_NULL_STRING);
		 }

	   /* Amended Trade - Date with Time  - Rahul */
	   if ( CO_RtvSysDtTime(l_csyst_date,l_debug_info_ptr)      == APL_FAILURE )
                APL_GOBACK_FAIL

       sprintf(chr_l_buf,"SysDate passed before update INTO DL_BCN|%s|\n",l_csyst_date);
       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

     
		if (strcmp(l_trn_ind,"B") == 0)
		{
	       sprintf(chr_l_buf," Inside B of l_csyst_date|%s|\n",l_csyst_date);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
			sprintf(chr_l_buf," Inside B of Rowid|%s|\n",l_rowid);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
		 
				/******** Start - Update LR_valdate for Amended Trade - Rahul ********/ 
					EXEC SQL UPDATE DL_BCN SET LR_VALDATE =:l_csyst_date:i_csyst_date
									WHERE  ROWID = :l_rowid; 
					 sprintf(chr_l_buf," DataUpdation check Status In DL_BCN|%d|\n",sqlca.sqlcode);
	                 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
					  IS_ANY_ORA_ERROR
			 /******** End - Update LR_valdate for Amended Trade - Rahul ********/
            

		}
		else if (strcmp(l_trn_ind,"D") == 0)
		{
        		EXEC SQL UPDATE DL_DEAL SET LR_VALDATE =:l_csyst_date:i_csyst_date
				         WHERE  ROWID = :l_rowid; 
				sprintf(chr_l_buf," DataUpdation check Status in DL_DEAL|%d|\n",sqlca.sqlcode);
                CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
				IS_ANY_ORA_ERROR
		}
			
	   if (strcmp(l_trn_ind,"E") == 0)
	   {
		     sprintf(chr_l_buf," Inside E of l_csyst_date|%s|\n",l_csyst_date);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
	        sprintf(chr_l_buf," Inside E of Rowid|%s|\n",l_rowid);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

			EXEC SQL UPDATE DL_DEAL SET LR_VALDATE =:l_csyst_date:i_csyst_date
                        WHERE  ROWID = :l_rowid;
			sprintf(chr_l_buf," DataUpdation check Status in DL_DEAL|%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			IS_ANY_ORA_ERROR
       }

	     if(strcmp(l_trn_ind,"B") == 0)
	     {
              sprintf(chr_l_buf,"Deal Date Passed In RBI=|%s|\n",l_dl_date);
			  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	
				EXEC SQL SELECT  TO_CHAR(TO_DATE(:l_dl_date),'DD/MM/YYYY') INTO :l_lec_dt:i_lec_dt
					 FROM DUAL;
				sprintf(chr_l_buf,"Deal Date Passed In RBI SQLERROR check=|%d|\n",sqlca.sqlcode);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	           IS_ANY_ORA_ERROR
	
		       sprintf(chr_l_buf,"Deal Date Passed In RBI=|%s|\n",l_lec_dt);
		 	   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

				EXEC SQL DELETE FROM DL_REGBCN
					    WHERE BROKER_CD =:l_broker_cd AND
					       CONTRACT_CD =:l_contract_cd AND
							 TO_CHAR(DL_DATE,'DD/MM/YYYY') =:l_lec_dt AND
							 REPO_FLAG = 'R';
				sprintf(chr_l_buf,"SqlError Check On Delete in RBI=|%d|\n",sqlca.sqlcode);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				IS_ANY_ORA_ERROR

			    EXEC SQL INSERT INTO DL_REGBCN
					    SELECT A.CONTRACT_CD,A.MKT_TYPE   ,A.TRAN_TYPE,A.DL_DATE,A.DL_PRICE,A.BROKERCOMM,A.EXCH_CD,A.DEAL_CD,A.CLH_FLG,A.SEBI_REG_NO,A.BROKER_CD,A.CLIENT_CD,A.QTY,A.INSTR_CD,A.SETTLEMENT_NO,A.DL_AMT,A.BROKERAGE_AMT,A.STT_AMT,A.SETTLMENT_AMT,A.DL_REF_NO,A.INTER_FII_FLG,A.SEBI_REPORTED,A.ENTRY,A.REPAIRED_IND,A.MAKER,A.MAKER_DT,A.ACCESS_STAMP,A.CHECKER,A.CHECKER_DT,A.STATUS,A.SETT_DT,A.NARRATIVE,A.OFF_MARKET,A.COUNTER_PTY,A.R_TRANS_CODE,A.R_SETT_CODE,A.R_DELAY,A.R_TYPE,A.REPO_DATE,A.AMEND_DT,A.FAILREASON_CD,A.SUB_FAIL_CD,A.LR_VALDATE,A.ADDR_FRM,A.ADDR_TO,:l_llec_no,:l_lec_id,'R',A.STAMP_DUTY FROM DL_BCN A
						 WHERE  A.ROWID =:l_rowid;
			   sprintf(chr_l_buf,"sqlcheck1 |%d|\n",sqlca.sqlcode);
			   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
                IS_ANY_ORA_ERROR
			  
        }
    	g_for_loop_ctr++;
	}  //for ends


   CO_ProcMonitor(l_logfile,"Delaring the reverse _entry Cursor",NULL,NULL); 

	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START  */
  
   EXEC SQL DECLARE rbi_reverse_rept CURSOR FOR
   SELECT 'H',CUST_CODE,TO_CHAR(E.SYS_DATE,'DD-MM-YYYY'),NVL((SUBSTR(D.CLN_RBI_REG_NO,1,16)),D.CLN_SEBI_REG_NO),DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(D.SEBI_SUB_ACC,1,9)),TO_CHAR(B.DL_DATE,'DD/MM/YYYY'),C.INSTR_SUB_TYPE,B.R_TRANS_CODE,B.QTY,B.SETTLMENT_AMT,B.DL_PRICE,TO_CHAR(E.SYS_DATE,'DD/MM/YYYY'),TO_CHAR(B.AMEND_DT,'DD-MM-YYYY'),C.INSTR_ISIN,C.NOMINAL_VALUE,B.ROWID,B.CONTRACT_CD,B.BROKER_CD,B.LR_VALDATE,B.INSTR_CD, DECODE(A.CLN_MASTER,A.CLN_CODE,null,SUBSTR(A.CLN_NAME,1,60)), SUBSTR(M.CLN_NAME,1,60), SUBSTR(CM.CMP_NAME,1,50),
	:l_rept_for_dt,
	MR.RBI_INSTR_CODE 
     FROM MT_COMMON_SYS_PARAMS,PRO_SYS_DATE E,MT_CLIENT A,DL_HISBCN B,MT_INSTRUMENT C,MT_REGDETAILS D, MT_CLIENT M, MT_COMPANY CM, MT_RBI_MONITORY MR 
  WHERE A.CLN_CODE = D.CLN_CODE AND
    B.CLIENT_CD = A.CLN_CODE AND
    B.INSTR_CD = C.INSTR_CODE AND
    A.CLN_TYPE in ('F','FP') AND		//FP added for FPI
	 B.STATUS = 'DD' AND 
	A.CLN_MASTER = M.CLN_CODE AND
	C.CMP_CODE = CM.CMP_CODE AND
	MR.INSTR_CODE (+) = B.INSTR_CD AND  
	 B.LR_VALDATE IS NOT NULL
     AND B.CLOSING_DATE <= TO_DATE(:l_rept_for_dt ||' 23:59:59','DD/MM/YYYY HH24:MI:SS');
	   	/*ISKB_4554  -- RBI_LEC_XML_Rpt_Format -- Additional Changes -- Shweta*/ 	 	
	
	/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */

	IS_ANY_ORA_ERROR

   CO_ProcMonitor(l_logfile,"Before Openning the reverse _entry Cursor",NULL,NULL); 
	EXEC SQL OPEN rbi_reverse_rept;
	  
	for(;;)
	  {
			memset(l_rbi_instrcd,APL_NULL_CHAR,sizeof(l_rbi_instrcd));
			i_rtv_lec_date =0;
			EXEC SQL FETCH rbi_reverse_rept 
						INTO :l_trn_ind:i_trn_ind,
						     :l_cust_code:i_cust_code,
							  :l_sys_date:i_sys_date,
							  :l_rbi_reg_no:i_rbi_reg_no,
							  :l_sebi_sub_acc:i_sebi_sub_acc,
							  :l_dl_date:i_dl_date,
							  :l_instr_sub_type:i_instr_sub_type,
							  :l_trans_cd:i_trans_cd,
							  :l_qty:i_qty,
							  :l_dl_amt:i_dl_amt,
							  :l_dl_price:i_dl_price,
							  :l_dt_input:i_dt_input,
							  :l_amend_dt:i_amend_dt,
							  :l_instr_isin:i_instr_isin,
							  :l_nom_value:i_nom_value,
							  :l_rowid:i_rowid,
							  :l_contract_cd:i_contract_cd,
							  :l_broker_cd:i_broker_cd,
							  :l_lr_vdate:i_lr_vdate,
							  :l_instr_code:i_instr_code,
							  :l_cln_name:i_cln_name,
							  :l_mst_name:i_mst_name,
							  :l_cmp_name:i_cmp_name,			// HDFC ENH - RBI XML Format by Bageshri on 23-06-2009
								:l_rtv_lec_date:i_rtv_lec_date,
							  :l_rbi_hinstrcd:i_rbi_hinstrcd; /*Added by Shweta -- ISKB_4554  -- to fetch RBI Code 16092011*/

			sprintf(chr_l_buf,"Sqlca.sqlcode after fetch Hisbcn records  |%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			IS_ANY_ORA_ERROR
			if(sqlca.sqlcode==1403)
				   break;
			/* commented IUT Fix - Bageshri - ISKB_4554 */
			  /*EXEC SQL SELECT FIELD_VAL INTO :l_cust_cd:i_cust_cd
                       FROM PRO_GSSPLVAL
	                   WHERE MAIN_FUN = 'RBI_CODE' AND
	                    SUB_PROCESS = 'RBI';
			printf("Rec Check==|%d|\n",sqlca.sqlcode);
	        IS_ANY_ORA_ERROR*/
			strcpy(l_cust_cd,l_chr_cust_cd); /* IUT Fix - Bageshri - ISKB_4554 */
	
			printf("Value of Instr_code in Reverse==|%s|\n",l_instr_code);
			fflush(stdout);


       /*Commented by Shweta as RBI_INSTR_CODE is fetched in main query ISSB -4622 - 16092011*/
		/*if (strcmp(l_trn_ind,"H") == 0)
		  {
			       EXEC SQL SELECT SUBSTR(RBI_INSTR_CODE,1,5) INTO :l_rbi_hinstrcd:i_rbi_hinstrcd
	                    FROM MT_RBI_MONITORY
		                 WHERE INSTR_CODE =:l_instr_code;
					sprintf(chr_l_buf,"Sqlerror Check|%d|\n",sqlca.sqlcode);
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
  				    IS_ANY_ORA_ERROR
	
				 sprintf(chr_l_buf,"Insrd Code in reverse part|%s|\n",l_rbi_hinstrcd);
				 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		  }*/
      /*Commented by Shweta as RBI_INSTR_CODE is fetched in main query ISSB -4622 - 16092011*/

       
         sprintf(chr_l_buf,"Cust Codefrom from reverse cursor|%s|\n",l_cust_code);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"SYS DATE from from reverse cursor|%s|\n",l_sys_date);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"dl_date from reverse cursor|%s|\n",l_dl_date);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"l_contract_cd from reverse cursor|%s|\n",l_contract_cd);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"l_lr_vdate from reverse cursor|%s|\n",l_lr_vdate);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"l_qty  from reverse cursor|%lf|\n",l_qty);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"l_dl_price from reverse cursor|%lf|\n",l_dl_price);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"l_nom_value  from reverse cursor|%lf|\n",l_nom_value);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
         sprintf(chr_l_buf,"Date Of Input from reverse cursor|%s|\n",l_dt_input);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				
         CO_ProcMonitor(l_logfile,"After Fetching of reverse _entry Cursor",NULL,NULL); 
	      EXEC SQL SELECT TO_CHAR(TO_DATE(:l_lr_vdate),'DD/MON/YYYY') INTO :l_vdate:i_vdate
		        FROM DUAL;
         IS_ANY_ORA_ERROR

         /* For Lec_id,Lec No select - DL_DATE Format Changed to DD/MM/YYYY  - Kouser */
         EXEC SQL SELECT  TO_CHAR(TO_DATE(:l_dl_date),'DD/MM/YYYY') INTO :l_lec_dt:i_lec_dt
				  FROM DUAL;
    		IS_ANY_ORA_ERROR
          /*strcat(l_lec_dt," 12:00:00"); */
         sprintf(chr_l_buf,"Deal Date format for select lec_id ,lec_no|%s|\n",l_lec_dt);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		
		
		/* IUT Fix - Bageshri - ISKB_4554 */
		  EXEC SQL SELECT TO_CHAR(TO_DATE(:l_rept_for_dt,'DD/MM/YYYY'),'DD'),TO_CHAR(TO_DATE(:l_rept_for_dt,'DD/MM/YYYY'),'MM'),LEC_ID 
				INTO :l_lec_dt_day:i_lec_dt_day, :l_lec_dt_mon:i_lec_dt_mon,:l_hlec_id:i_hlec_id
					           FROM DL_REGBCN
							   WHERE CONTRACT_CD =:l_contract_cd AND BROKER_CD =:l_broker_cd AND
						                     to_char(DL_DATE,'DD/MM/YYYY') =:l_lec_dt AND LEC_NO IS NOT NULL AND
			                                 LR_VALDATE IS NOT NULL AND REPO_FLAG = 'R';
			sprintf(chr_l_buf,"sqlcode for regbcn |%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			IS_ANY_ORA_ERROR
			sprintf(l_hlec_no,"%s%s",l_lec_dt_day,l_lec_dt_mon); /* IUT Fix - Bageshri - ISKB_4554 */
	
			sprintf(chr_l_buf,"Lec No|%s|\n",l_hlec_no);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	        sprintf(chr_l_buf,"Lec ID|%s|\n",l_hlec_id);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	        sprintf(chr_l_buf,"Trans Code from sec Cursor|%s|\n",l_trans_cd);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         if(strlen(l_instr_isin) == 0)
			  strcpy(l_instr_isin,"NO_ISIN");
         if ((strcmp(l_trans_cd,"01") == 0 ) || (strcmp(l_trans_cd,"02") == 0 ))
		      strcpy(l_tcode,"4");
	     else if ((strcmp(l_trans_cd,"04") == 0 ))
		   strcpy(l_tcode,"1");

	        if (strcmp(l_tcode,"4") == 0)
			{
					strcpy(l_chr_rmk,"PURCHASE TXN REPORTED ON ");
					strcat(l_chr_rmk,l_vdate);
					strcat(l_chr_rmk," AMENDED");
			 }
			 else if (strcmp(l_tcode,"1") == 0 )
			 {
					strcpy(l_chr_rmk,"SALE TXN REPORTED ON ");
					strcat(l_chr_rmk,l_vdate);
					strcat(l_chr_rmk," AMENDED");
	         }
        
         sprintf(chr_l_buf,"Trans Code Value for first Cursor |%s|\n",l_tcode);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		  sprintf(chr_l_buf,"Date Of Input In Reverse|%s|\n",l_date_input);
		  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		
	        l_chr_rate = l_dl_amt/l_qty;
	        
			EXEC SQL SELECT ROUND((nvl(:l_chr_rate,0)),4) INTO :l_chr_rtval:i_chr_rtval
		       FROM DUAL;
			 IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"Rounded RateIn HisBcn|%lf|\n",l_chr_rtval);
		 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

 /*  Add by ASHISH 17-09-2007 */
            l_strt_dl_amt = 0;
			l_strt_nom_value = 0;
			i_strt_dl_amt = 0;
			i_strt_nom_value = 0;
            l_strt_qty = 0;
			i_strt_qty = 0;

			EXEC SQL SELECT ROUND(:l_dl_amt,:l_double_precision), ROUND(:l_nom_value,:l_double_precision), ROUND(:l_qty,:l_double_precision)
					      INTO:l_strt_dl_amt:i_strt_dl_amt,:l_strt_nom_value:i_strt_nom_value,:l_strt_qty:i_strt_qty
					      FROM DUAL;
				          printf("\n Error in query = |%d| \n",sqlca.sqlcode);
				 IS_ANY_ORA_ERROR
				 printf("\n Value of Deal Amount after Round off(upto 2 decimal places) = |%lf| \n",l_strt_dl_amt);
				 printf("\n Trucated Nominal Value = |%d| \n",l_strt_nom_value);
			

        EXEC SQL SELECT TO_CHAR(TO_DATE(:l_chr_pdate,'DD/MM/YYYY'),'DD/MM/YYYY') INTO :l_chr_ldate:i_chr_ldate
			              FROM DUAL;
	    sprintf(chr_l_buf,"SqlCode error check for Input  & Amend Date for reverse entry|%s|\n",l_chr_ldate);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	   IS_ANY_ORA_ERROR

		    fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s,%lf,%lf,%.4lf,\"%s\",\"%s\",\"%s\",%lf,\"%s\",\"%s\"\n",l_cust_cd,l_dl_date,l_llec_no,l_hlec_id,l_rbi_reg_no,l_sebi_sub_acc,l_rtv_lec_date,l_rbi_hinstrcd,l_instr_sub_type,l_tcode,l_qty,l_dl_amt,l_chr_rtval,l_chr_ldate,l_chr_ldate,l_instr_isin,l_nom_value,l_hlec_no,l_chr_rmk);

			/*********** ASHISH 13-06-2009 Start **************/
			if(l_rbi_xml_flg == 1)
			{
				CO_Trim(l_tcode,'0','L',l_tcode,l_debug_info_ptr);

				 sprintf(chr_l_buf,"Trans Code |%s|instr sub |%s|\n",l_tcode,l_instr_sub_type);
				 CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

				/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START  */

				//Added for ISKB_6213(Transaction code 04 should be populated instead of 15 in RBI XML Report)-Start

				Alert("R_TRANS_CODE is before Copying is |%s|",l_tcode);

				if ((strcmp(l_tcode,"15") == 0 ))
				{
					strcpy(l_tcode,"4");
				}					
				
				Alert("R_Trans_Code After Copying is |%s|",l_tcode);

				//Added for ISKB_6213(Transaction code 04 should be populated instead of 15 in RBI XML Report)-End
					
				memset(l_instr_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);
				memset(l_txn_type_desc, APL_NULL_CHAR, STAT_DESC_LEN);

				EXEC SQL SELECT PT.MAP_DESC 
					INTO :l_txn_type_desc:i_txn_type_desc
				FROM PRO_SGENSTAT PT WHERE MAP_TYPE ='RBI_TXN_CODE' AND NATION_CODE = 'IN'
				AND PT.MAP_VAL = :l_tcode;

				IS_ANY_ORA_ERROR

				EXEC SQL SELECT PT.MAP_DESC 
					INTO :l_instr_type_desc:i_instr_type_desc
				FROM PRO_SGENSTAT PT WHERE MAP_TYPE ='RBI_INSTR_SUB_TYPE' AND NATION_CODE = 'IN'
				AND PT.MAP_VAL = :l_instr_sub_type;

				/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */

				EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST VALUES(:l_xml_cust_cd,:l_hlec_id,to_date(:l_dl_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_hlec_no,to_date(:l_rtv_lec_date||'12:00:00','dd/mm/yyyy hh:mi:ss'),:l_rbi_reg_no,:l_mst_name,:l_sebi_sub_acc,:l_cln_name,:l_instr_isin,:l_rbi_hinstrcd,:l_cmp_name,:l_instr_type_desc,:l_tcode,:l_txn_type_desc,:l_strt_nom_value,:l_chr_rtval,:l_strt_qty,:l_strt_dl_amt,:l_hlec_no,:l_chr_rmk,'N',:l_intl_rept_struct_ha->report_date);		

				
				printf("\n 5 Sql error to insert data into table MT_RBI_REGREP_TRANS_LIST = |%d| \n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR
			}
			/*********** ASHISH 13-06-2009 End **************/

			strcpy(l_rbi_hinstrcd,APL_NULL_STRING);

	
		  EXEC SQL UPDATE DL_HISBCN SET LR_VALDATE = NULL
		         WHERE ROWID =:l_rowid;
		    sprintf(chr_l_buf,"Check In HisBcn records updated==|%d|\n",sqlca.sqlerrd[2]);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		  IS_ANY_ORA_ERROR
          g_for_loop_ctr++;
      }
        
      EXEC SQL CLOSE rbi_reverse_rept;
	  IS_ANY_ORA_ERROR
      			
	   EXEC SQL CLOSE rbi_rept;
	   IS_ANY_ORA_ERROR
    
		EXEC SQL COMMIT;
		IS_ANY_ORA_ERROR

		/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - START  */

		if(l_rbi_xml_flg == 1)
		{

			printf("\n\n----- Creating XML file -------- \n\n");

			if (CO_ReadToken(l_ptr_ini_file,"INTL_PDF_PATH",chr_l_pdf_dir,l_debug_info_ptr) != APL_SUCCESS)
				return(APL_FAILURE);

			printf("INTL_ROOT_PATH : |%s|\n",l_intl_root_path);

			fflush(stdout);

			sprintf(p_remove_junk,"%sCreateXML.ksh %s RBI_REGREPORT %s %s",l_intl_root_path, chr_l_pdf_dir, chr_l_xml_file, g_combined_param);

			//printf("p_remove_junk :|%s|\n",p_remove_junk);

			fflush(stdout);

			retval=system(p_remove_junk);

			if(retval == 0)
				printf("CreateXML.ksh Executed Successfully ");
			else
			{
				printf("CreateXML.ksh Executed UnSuccessfully ");
				fflush(stdout);

				APL_GOBACK_FAIL
			}

			printf("\n\n----- End Of XML file creation Part -------- \n\n");


			Alert("\n XML Creation command executd with status = |%d|\n ",retval);

			if(retval == 0)
			{
			EXEC SQL UPDATE MT_RBI_REGREP_TRANS_LIST SET REPO_GEN_FLAG = 'Y' WHERE TRUNC(PROCESS_DATE) = (SELECT TRUNC(SYS_DATE) FROM PRO_SYS_DATE) AND REPO_GEN_FLAG = 'N';

			IS_ANY_ORA_ERROR

			}

			Alert(" Done with the process !!!!! ");
		}
		/* HDFC ENH - RBI XML Format by Bageshri on 23-06-2009 - END  */

	RETURN_SUCCESS :
		#ifdef SYS_DEBUG
			printf("Leaving Function RBI_Mod_ClntInst with success\n");
		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		CO_ProcMonitor(l_logfile,"Leaving Function RBI_Mod_ClntInst with Success",NULL,NULL);
		return(APL_SUCCESS);

	RETURN_FAILURE :
		#ifdef SYS_DEBUG
			printf("Leaving Function RBI_Mod_ClntInst with errors\n");
		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		CO_ProcMonitor(l_logfile,"Leaving Function RBI_Mod_ClntInst with Failure",NULL,NULL);
		return(APL_FAILURE);
}


/* Monthly Report */

int MPR_Mod_ClntInst(char *p_rep_name,char *p_chr_yymn_dt,char **argv,FILE *l_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char	chr_l_sysdate[APL_DATE_LEN]										=	APL_NULL_STRING;
   char  chr_l_sr_no[4]                                         =  APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]								=	APL_NULL_STRING;
	char  chr_l_h_aresponse_ca_id[CORP_ID_LEN]						   =	APL_NULL_STRING;
	char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_buf[BUFFER_LEN]                    =  APL_NULL_STRING;
   /*char  p_chr_yymn_dt[7] = APL_NULL_STRING;*/   
   char l_first_day[20] = APL_NULL_STRING;
   char l_last_day[20] = APL_NULL_STRING;
   char l_max_date[20] = APL_NULL_STRING;
   char l_safek_date[11] = APL_NULL_STRING;
   short i_safek_date = 0;
   char l_cust_code[4] = APL_NULL_STRING;
   short i_cust_code = 0;
   char l_cln_code[11] = APL_NULL_STRING;
   short i_cln_code = 0;
   char l_instr_code[9] = APL_NULL_STRING;
   short i_instr_code = 0;	
   char l_sys_dt[20] = APL_NULL_STRING;
   short i_sys_dt = 0;
   short i_first_day = 0;
   short i_last_day = 0;
   short i_max_date = 0;
   char  l_sebi_reg_no[21] = APL_NULL_STRING;
   short i_sebi_reg_no = 0;
   char l_cln_name[61] = APL_NULL_STRING;
   short i_cln_name = 0;
   char l_sebi_sub_acc[16] = APL_NULL_STRING; /* By Harvinder Singh -- ISKB 1266 -- Date 13May2008 */
   short i_sebi_sub_acc = 0;
   char l_instr_isin[13] = APL_NULL_STRING;
   short i_instr_isin = 0;
   char l_instr_type[4] = APL_NULL_STRING;
   short i_instr_type = 0;
   double l_opn_count = 0.0;
   short i_opn_count = 0;
   double l_sum_value = 0.0;
   short i_sum_value = 0;
   double l_pur_value = 0.0;
   short i_pur_value = 0;
   double l_sale_sum = 0.0;
   short i_sale_sum = 0;
   double l_sale_value = 0.0;
   short i_sale_value = 0;
   double l_cls_pos = 0.0;
   short i_cls_pos = 0;
   double l_prn_cptl = 0.0;
   /*short i_prn_cptl = 0;*/
   double l_cls_value = 0.0;
   short i_cls_value = 0;
   double l_instr_tot_val = 0;
   short i_instr_tot_val = 0;
   double l_prcnt_cptl = 0.0;
   /*short i_prcnt_cptl = 0;*/
   char f_last_day[20] = APL_NULL_STRING;
   char f_first_day[20] = APL_NULL_STRING;
   char l_syst_date[20] = APL_NULL_STRING;
   char l_chr_month[3] = APL_NULL_STRING;
   char l_chr_yr[3] = APL_NULL_STRING;
   int int_ret_flag = 0;

  /* Changes - Added - Kouser */
   char l_chr_safek_date[11] = APL_NULL_STRING;
   /*char l_chr_ret_date[11] = APL_NULL_STRING;
   char l_chr_cls_date[11] = APL_NULL_STRING;*/
   double l_dl_purqty = 0.0;
   short i_dl_purqty = 0;
   double l_dl_salqty = 0.0;
   short i_dl_salqty = 0;
   double l_dl_purvalue = 0.0;
   short i_dl_purvalue = 0;
   double l_dl_salvalue = 0.0;
   short i_dl_salvalue = 0;
   char l_chr_value_dt[11] = APL_NULL_STRING;
   double l_pur_sum = 0.0;
   short i_pur_sum = 0;
   double  l_chr_pursum = 0.0;
   short  i_chr_pursum = 0;
   double  l_chr_salsum = 0.0;
   short  i_chr_salsum = 0;
   double  l_chr_purvalue = 0.0;
   short  i_chr_purvalue = 0;
   double  l_chr_salvalue = 0.0;
   short  i_chr_salvalue = 0; 
   char l_chr_cls_date[11] = APL_NULL_STRING;
   short i_chr_cls_date = 0;
   char l_chr_prc_date[11] = APL_NULL_STRING;
   short i_chr_prc_date = 0;
	double l_chr_prncap = 0.0;
	short i_chr_prncap = 0;
	double l_chr_cls_pos = 0.0;
	char l_opn_date[11] = APL_NULL_STRING;
	short i_opn_date = 0;
	int l_cnt = 0;
	short i_cnt = 0;

   EXEC SQL VAR  l_cln_code IS STRING;
	double l_ins_purqty = 0.0;
	short i_ins_purqty = 0;
   double l_ins_salqty = 0.0;
	short i_ins_salqty = 0;
	double l_ins_purvalue = 0.0;
	short i_ins_purvalue = 0;
	double l_ins_salvalue = 0.0;
	short i_ins_salvalue = 0;
	char l_cmp_code[11] = APL_NULL_STRING;
	short i_cmp_code = 0;
	double l_chr_pdcap = 0.0;
	short i_chr_pdcap = 0;
	double l_ins_pdcap = 0.0;
	short i_ins_pdcap = 0;
	double l_ins_opncnt = 0.0;
	short i_ins_opncnt = 0;
   double l_ins_clsval = 0.0;
	short i_ins_clsval = 0;
	double l_nom_value = 0.0;
	short i_nom_value = 0;
		/*char l_chr_sysdt[12] = APL_NULL_STRING;
	 short i_chr_sysdt = 0;*/
	 int l_pur_cnt = 0;
	 short i_pur_cnt = 0;
	 int l_sal_cnt = 0;
	 short i_sal_cnt = 0;
	 int l_cpur_cnt = 0;
	 short i_cpur_cnt = 0;
    int l_csal_cnt = 0;
	 short i_csal_cnt = 0;
    int l_chr_opcnt = 0;
	 short i_chr_opcnt = 0;
	 int l_dt_cnt = 0;
	 short i_dt_cnt = 0;
	 int l_cls_cnt = 0;
	 short i_cls_cnt = 0;
	 double l_cbal_value = 0.0; /* Rahul */
	 short i_cbal_value = 0;/* Rahul */

	EXEC SQL VAR  l_instr_isin IS STRING;
	FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;

	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

	memset(chr_l_sr_no,NULL,4);
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	/* changes by amish 19/05 */
    memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));
	
	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);


	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
	memset(l_cust_code,NULL,sizeof(l_cust_code));

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

   printf("Entered function MPR_Mod_ClntInst\n"); 
	fflush(stdout);

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		  return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		  return(APL_FAILURE);


	EXEC SQL SELECT to_char(SYS_DATE,'DDMMYY') INTO :chr_l_sysdate FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR

   EXEC SQL SELECT to_char(SYS_DATE,'MM') INTO :l_chr_month FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR

   EXEC SQL SELECT to_char(SYS_DATE,'YY') INTO :l_chr_yr FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR

  	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);
   strcat(chr_l_hbrokers_handoff_file_name,"MPR");
   strcat(chr_l_hbrokers_handoff_file_name,l_chr_month);
   strcat(chr_l_hbrokers_handoff_file_name,l_chr_yr);
   strcat(chr_l_hbrokers_handoff_file_name,".txt");

   printf("file11111==|%s|\n",chr_l_hbrokers_handoff_file_name);
   if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
        return(APL_FAILURE);
   printf("file11111==|%s|\n",chr_l_hbrokers_handoff_file_name);
   memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));
 	strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
   strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   l_intl_rept_struct_ha->report_width = 100;
   strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);

   strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);

   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
       APL_GOBACK_FAIL
   }
	
	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_curr_datetime,l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }
   
   EXEC SQL SELECT  to_char(to_date(:p_chr_yymn_dt,'MMYYYY'),'YYYYMM') 
            INTO :l_sys_dt:i_sys_dt
		      FROM DUAL;

   IS_ANY_ORA_ERROR


   sprintf(chr_l_buf,"SqlError Check For ReportDate |%d|\n",sqlca.sqlcode);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

   sprintf(chr_l_buf,"Date Passed To Report For Month |%s|\n",l_sys_dt);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

	
   EXEC SQL SELECT  to_char((last_day(to_date(:p_chr_yymn_dt,'MMYYYY'))),'DD/MM/YYYY') 
		              INTO :l_last_day:i_last_day
						  FROM DUAL;
   IS_ANY_ORA_ERROR

   printf("Value of MonthYear *********MMYYYY|%s|\n",p_chr_yymn_dt);

	
 
   sprintf(chr_l_buf,"Selected Last Day |%s|\n",l_last_day);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

	strcat(l_last_day,APL_NULL_TIME); 
   strcpy(f_last_day,l_last_day);

   sprintf(chr_l_buf,"Selected Last Day With APL_TIME|%s|\n",f_last_day);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 


	EXEC SQL SELECT to_char((last_day(to_date(:p_chr_yymn_dt,'MMYYYY'))- to_number(to_char(last_day(to_date(:p_chr_yymn_dt,'MMYYYY')),'DD'))+1),'DD/MM/YYYY') 
	               INTO :l_first_day:i_first_day FROM DUAL;

   IS_ANY_ORA_ERROR

   sprintf(chr_l_buf,"Selected First Day |%s|\n",l_first_day);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 


   strcat(l_first_day,APL_NULL_TIME);
	strcpy(f_first_day,l_first_day);
	
   sprintf(chr_l_buf,"Selected First Day WITH APLTIME|%s|\n",f_first_day);
   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

   
    /*EXEC SQL DECLARE ccode_rept CURSOR FOR SELECT A.CLIENT,A.INSTR_CODE
	      FROM DL_HISSAFEK A,MT_CLIENT B,MT_INSTRUMENT C
	       WHERE A.CLIENT = B.CLN_CODE AND
                A.INSTR_CODE = C.INSTR_CODE AND
				    B.STATUS = 'AA' AND
				    B.CLN_TYPE = 'F' AND 
					 C.INSTR_TYPE = 'SHS' AND
					  POSIT_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1
					  GROUP BY A.CLIENT,A.INSTR_CODE;*/

   EXEC SQL DECLARE ccode_rept CURSOR FOR SELECT A.CLIENT_CD,A.INSTR_CD
	       FROM DL_REGBCN A,MT_CLIENT B,MT_INSTRUMENT C
		    WHERE A.CLIENT_CD = B.CLN_CODE AND
		          A.INSTR_CD = C.INSTR_CODE AND
		          B.STATUS = 'AA' AND
		          B.CLN_TYPE = 'F' AND
		          C.INSTR_TYPE = 'SHS' AND
		          A.SEBI_REPORTED = 'Y' AND 
       REPO_DATE BETWEEN to_date(:f_first_day) AND TO_DATE(:f_last_day) + 1 
		           GROUP BY A.CLIENT_CD,A.INSTR_CD 
       UNION    
	    SELECT A.CLIENT,A.INSTR_CODE
		 FROM DL_REGDEAL A,MT_CLIENT B,MT_INSTRUMENT C
		      WHERE A.CLIENT = B.CLN_CODE AND
		            A.INSTR_CODE = C.INSTR_CODE AND
			         B.STATUS = 'AA' AND
						B.CLN_TYPE = 'F' AND
						C.INSTR_TYPE = 'SHS' AND
                  A.SEBI_REPORTED = 'Y' AND 
	              A.DL_CLASS IN ('17','18','19','21') AND 
					  REPO_DATE BETWEEN to_date(:f_first_day) AND TO_DATE(:f_last_day) + 1
	              GROUP BY A.CLIENT,A.INSTR_CODE;

   printf("Error********** check ==|%d|\n",sqlca.sqlcode);

    IS_ANY_ORA_ERROR

    sprintf(chr_l_buf,"SqlError For Declaring MainCursor |%d|\n",sqlca.sqlcode);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 
		  
    EXEC SQL OPEN ccode_rept;

	 IS_ANY_ORA_ERROR

    sprintf(chr_l_buf,"SqlError after Opening of Main Cursor |%d|\n",sqlca.sqlcode);
    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 
     
	  for(;;)
     {
        EXEC SQL FETCH ccode_rept 
				     INTO :l_cln_code:i_cln_code,
						:l_instr_code:i_instr_code;

        IS_ANY_ORA_ERROR

        sprintf(chr_l_buf,"SqlError after Fetch of Client code value |%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

        sprintf(chr_l_buf,"Fetch of Client1 |%s|\n",l_cln_code);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

        sprintf(chr_l_buf,"Fetch of Instr1 |%s|\n",l_instr_code);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	     if(sqlca.sqlcode==1403)
		     break;

        EXEC SQL SELECT CUST_CODE,A.CLN_NAME,SUBSTR(B.CLN_SEBI_REG_NO,1,16),B.SEBI_SUB_ACC
                   INTO :l_cust_code:i_cust_code,
                        :l_cln_name:i_cln_name,
                        :l_sebi_reg_no:i_sebi_reg_no,
                        :l_sebi_sub_acc:i_sebi_sub_acc
		   FROM MT_COMMON_SYS_PARAMS,MT_CLIENT A,MT_REGDETAILS B,PRO_SYS_DATE
			WHERE A.CLN_CODE =:l_cln_code AND  
			B.CLN_CODE =:l_cln_code AND
			A.CLN_CODE = B.CLN_CODE;

	      IS_ANY_ORA_ERROR

          sprintf(chr_l_buf,"Select of Client details Based on Client|%d|\n",sqlca.sqlcode);
          CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

          sprintf(chr_l_buf,"Value ofCust Code |%s|\n",l_cust_code);
          CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

          sprintf(chr_l_buf,"Value of l_sebi_reg_no|%s|\n",l_sebi_reg_no);
          CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

          sprintf(chr_l_buf,"Value of Sebi Subacc|%s|\n",l_sebi_sub_acc);
          CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);


          /*if(sqlca.sqlcode==1403)
          break;*/

               EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2)
							 INTO :l_pur_cnt:i_pur_cnt,
		                      :l_pur_sum:i_pur_sum
					   FROM DL_REGBCN
					   WHERE CLIENT_CD =:l_cln_code AND
                  INSTR_CD =:l_instr_code AND
						SEBI_REPORTED = 'Y' AND
					   R_TYPE NOT IN ('09','10','11','12') AND
		            DEAL_CD IN ('2','4') AND
						REPO_FLAG = 'D' AND
                  REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;


        IS_ANY_ORA_ERROR

		  sprintf(chr_l_buf,"Sqlerror check for BCN PURCHASE|%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	


        sprintf(chr_l_buf,"Value of select of purqty |%lf|\n",l_pur_sum);
		  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2)
                INTO :l_sal_cnt:i_sal_cnt,
					      :l_sale_sum:i_sale_sum
                FROM DL_REGBCN
                WHERE CLIENT_CD =:l_cln_code AND	 
                INSTR_CD =:l_instr_code AND
					 SEBI_REPORTED = 'Y' AND
					 R_TYPE NOT IN ('09','10','11','12')  AND
					 REPO_FLAG = 'D' AND
			       DEAL_CD IN ('1','3') AND
					 REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;

        IS_ANY_ORA_ERROR

        sprintf(chr_l_buf,"Sqlercheck for select of salqty |%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        sprintf(chr_l_buf,"Value of for select of salqty |%lf|\n",l_sale_sum);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
    
        EXEC SQL SELECT ROUND((nvl(SUM(DL_AMT),0)),2)
                  INTO :l_pur_value:i_pur_value
			         FROM DL_REGBCN
			         WHERE CLIENT_CD =:l_cln_code AND
                  INSTR_CD =:l_instr_code AND
						SEBI_REPORTED = 'Y' AND
						R_TYPE NOT IN ('09','10','11','12') AND
						REPO_FLAG = 'D' AND
					   DEAL_CD IN ('2','4') AND
					   REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
						 
        IS_ANY_ORA_ERROR

        sprintf(chr_l_buf,"  Sqlerror check for select of purvalue|%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

        EXEC SQL SELECT ROUND((nvl(SUM(DL_AMT),0)),2)
			            INTO :l_sale_value:i_sale_value
						   FROM DL_REGBCN
						   WHERE CLIENT_CD =:l_cln_code AND
						   INSTR_CD =:l_instr_code AND
							SEBI_REPORTED = 'Y' AND
							R_TYPE NOT IN ('09','10','11','12') AND
							REPO_FLAG = 'D' AND
						   DEAL_CD IN ('1','3') AND
						   REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;

        IS_ANY_ORA_ERROR


        sprintf(chr_l_buf,"Sqlerror check for selectedd of salvalue |%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

        EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2)
								    INTO :l_cpur_cnt:i_cpur_cnt,
                                 :l_dl_purqty:i_dl_purqty
					         FROM DL_REGDEAL
					         WHERE CLIENT =:l_cln_code AND
		   			      INSTR_CODE =:l_instr_code AND
								SEBI_REPORTED = 'Y' AND
					         DL_CLASS IN ('17','18','19','21') AND
                        DEAL_CD IN ('2','4') AND
                        REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1
                        AND (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%');
						  
        IS_ANY_ORA_ERROR

        sprintf(chr_l_buf,"Sqlerror check for select of dl_purqty |%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

        EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2)
							     INTO :l_csal_cnt:i_csal_cnt,
                               :l_dl_salqty:i_dl_salqty
							  FROM DL_REGDEAL
							  WHERE CLIENT =:l_cln_code AND
							  INSTR_CODE =:l_instr_code AND
                       SEBI_REPORTED = 'Y' AND
                       DL_CLASS IN ('17','18','19','21') AND
                       DEAL_CD IN ('1','3') AND
			              REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1
							  AND (IDENTIY_NO NOT LIKE '%RIGHTS%'
	                    AND IDENTIY_NO NOT LIKE '%CARTAP%');

        IS_ANY_ORA_ERROR

        sprintf(chr_l_buf,"Sqlerror check for select of dl_salqty |%d|\n",sqlca.sqlcode);
        CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

        EXEC SQL SELECT ROUND((nvl(SUM(AMOUNT),0)),2)
	                    INTO :l_dl_purvalue:i_dl_purvalue
						     FROM DL_REGDEAL
						     WHERE CLIENT =:l_cln_code AND
						     INSTR_CODE =:l_instr_code AND
							  SEBI_REPORTED = 'Y' AND
                       DL_CLASS IN ('17','18','19','21') AND
			              DEAL_CD IN ('2','4') AND
			              REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1
                       AND (IDENTIY_NO NOT LIKE '%RIGHTS%'
                       AND IDENTIY_NO NOT LIKE '%CARTAP%');

		   IS_ANY_ORA_ERROR

         sprintf(chr_l_buf," Sqlerror check for select dl_purvalue |%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

         EXEC SQL SELECT ROUND((nvl(SUM(AMOUNT),0)),2)
		                  INTO :l_dl_salvalue:i_dl_salvalue
						      FROM DL_REGDEAL
						      WHERE CLIENT =:l_cln_code AND
				   		   INSTR_CODE =:l_instr_code AND
								SEBI_REPORTED = 'Y' AND
				            DL_CLASS IN ('17','18','19','21') AND
				            DEAL_CD IN ('1','3') AND
					         REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1
					         AND (IDENTIY_NO NOT LIKE '%RIGHTS%'
			                    AND IDENTIY_NO NOT LIKE '%CARTAP%');

		   IS_ANY_ORA_ERROR
							 
							 
         sprintf(chr_l_buf,"Sqlerror check for select dl_salvalue|%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 
        
		   sprintf(chr_l_buf,"Date Passed opn_count|%s|\n",l_safek_date);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         /*EXEC SQL SELECT COUNT(*),TO_CHAR(TRUNC(MAX(PRICE_DATE)),'DD/MM/YYYY')
              INTO :l_cls_cnt:i_cls_cnt,
				       :l_chr_prc_date:i_chr_prc_date
		   FROM MT_DLYMKTPRC
			WHERE TRUNC(PRICE_DATE) <= last_day(TO_DATE(:p_chr_yymn_dt,'MMYYYY')) AND
			INSTR_CODE =:l_instr_code;*/

         EXEC SQL SELECT COUNT(*),TO_CHAR(TRUNC(MAX(PRICE_DATE)),'DD/MM/YYYY') 
              INTO :l_cls_cnt:i_cls_cnt,
				       :l_chr_prc_date:i_chr_prc_date
				  FROM MT_DLYMKTPRC 
		   WHERE to_char(PRICE_DATE,'MMYYYY')=:p_chr_yymn_dt AND INSTR_CODE =:l_instr_code;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"Sqlerror check for select Cls Price Date****|%d|\n",sqlca.sqlcode);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"Date selected for Clsing Price For a Month|%s|\n",l_chr_prc_date);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);


         if ((l_cls_cnt) != 0)
         {

         EXEC SQL SELECT ROUND((nvl(SUM(CLOSING_PR),0)),2)
              INTO :l_cls_value:i_cls_value
	           FROM MT_DLYMKTPRC
			     WHERE TO_CHAR(TO_DATE(PRICE_DATE),'DD/MM/YYYY') =:l_chr_prc_date AND  
				        INSTR_CODE =:l_instr_code;

         IS_ANY_ORA_ERROR

          sprintf(chr_l_buf,"SqlErrorCheck for l_cls_value |%d|\n",sqlca.sqlcode);
          CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

         }
			else 
			{

          l_cls_value = 0;

          sprintf(chr_l_buf,"Cls_Price Value |%lf|\n",l_cls_value);
          CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 
         }

         EXEC SQL SELECT ROUND((nvl(:l_cls_value,0)),2) INTO :l_ins_clsval:i_ins_clsval
		       FROM DUAL;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"Sqlerror check for Round ofl_cls_value  |%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

			sprintf(chr_l_buf,"Closing Price Value for Month  |%lf|\n",l_cls_value);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         /*EXEC SQL SELECT  NVL((INSTR_TOT_NOM_VAL),0) INTO :l_instr_tot_val:i_instr_tot_val
                  FROM MT_INSTRUMENT
				      WHERE INSTR_CODE = :l_instr_code;

         IS_ANY_ORA_ERROR*/

         EXEC SQL SELECT INSTR_ISIN,INSTR_TYPE,CMP_CODE,NVL(NOMINAL_VALUE,0)
	               INTO :l_instr_isin:i_instr_isin,
			              :l_instr_type:i_instr_type,
							  :l_cmp_code:i_cmp_code,
							  :l_nom_value:i_nom_value
			         FROM MT_INSTRUMENT
                  WHERE INSTR_CODE =:l_instr_code;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"Sqlerror check for Select l_instr_isin |%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

         sprintf(chr_l_buf,"Value of INSTR ISIN|%s|\n",l_instr_isin);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"Nominal Value ***|%lf|\n",l_nom_value);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"CmpCode***|%s|\n",l_cmp_code);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         l_chr_pursum = l_pur_sum + l_dl_purqty;

         sprintf(chr_l_buf,"Total Sum Value|%lf|\n",l_chr_pursum);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         l_chr_salsum = l_sale_sum + l_dl_salqty;

         sprintf(chr_l_buf,"Total SalSum Value|%lf|\n",l_chr_salsum);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         l_chr_purvalue =  l_pur_value + l_dl_purvalue;

         sprintf(chr_l_buf,"Total Purchase Value|%lf|\n",l_chr_purvalue);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

		   l_chr_salvalue =  l_sale_value + l_dl_salvalue;

         sprintf(chr_l_buf,"Total Sale Value|%lf|\n",l_chr_salvalue);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

         EXEC SQL SELECT ROUND((nvl(:l_chr_pursum,0)),2) INTO :l_ins_purqty:i_ins_purqty
			     FROM DUAL;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"Sqlerror check for Select l_ins_purqty|%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

         EXEC SQL SELECT ROUND((nvl(:l_chr_salsum,0)),2) INTO :l_ins_salqty:i_ins_salqty
		        FROM DUAL;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"Sqlerror check for Select salsaum |%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 

         EXEC SQL SELECT ROUND((:l_chr_purvalue),2) INTO :l_ins_purvalue:i_ins_purvalue
	               FROM DUAL;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"Sqlerror check for Select purvalue|%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	 


         EXEC SQL SELECT ROUND((:l_chr_salvalue),2) INTO :l_ins_salvalue:i_ins_salvalue
              FROM DUAL;

         IS_ANY_ORA_ERROR 

         sprintf(chr_l_buf,"Sqlerror check for Select Salvalue|%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

			/* Calculation of Closing Pos */

         exec sql select count(*),to_char(trunc(max(sys_date)),'DD/MM/YYYY')
				   into  :l_dt_cnt:i_dt_cnt,
                     :l_opn_date:i_opn_date
	         from dl_regmpr
				where trunc(sys_date)<= last_day(Add_months(to_date(:p_chr_yymn_dt,'MMYYYY'), -1));
		 
         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"SQLError Check On OpenDate|%d|\n",sqlca.sqlcode);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        if ((l_dt_cnt) != 0)
        {
         sprintf(chr_l_buf,"Count Value|%d|\n",l_dt_cnt);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

         EXEC SQL SELECT NVL(CLSBAL_QTY,0) 
			        	     INTO :l_opn_count:i_opn_count
			        FROM DL_REGMPR
                 WHERE CLIENT =:l_cln_code AND
					  INSTR_CODE =:l_instr_code AND
                 TO_CHAR(SYS_DATE,'DD/MM/YYYY') =:l_opn_date;


         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"SqlError Check on the Selection OpnBalance|%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"Open Date for DL_REGMPR|%lf|\n",l_opn_count);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

        }
		  else
         {
           l_opn_count = 0;

            sprintf(chr_l_buf,"Open Amt Value|%lf|\n",l_opn_count);
			   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
   
         }

         EXEC SQL SELECT ROUND((nvl(:l_opn_count,0)),2) INTO :l_ins_opncnt:i_ins_opncnt
		        FROM DUAL;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"SqlError Check OpnAmt|%d|\n",sqlca.sqlcode);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"Value Of Check OpnAmt|%lf|\n",l_ins_opncnt);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"Value Of Check InsPurqty|%lf|\n",l_ins_purqty);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"Value Of Check salqty|%lf|\n",l_ins_salqty);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         l_chr_cls_pos = l_ins_opncnt + l_ins_purqty - l_ins_salqty;

         sprintf(chr_l_buf,"Calculate Cls_Pos|%lf|\n",l_chr_cls_pos);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         /*EXEC SQL SELECT ROUND((:l_chr_cls_pos),2) INTO :l_cls_pos:i_cls_pos
			     FROM DUAL;*/

         EXEC SQL SELECT ROUND((nvl(:l_chr_cls_pos,0)),2) INTO :l_cls_pos:i_cls_pos
                  FROM DUAL;				 


         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"SqlError Check ClsAmt|%lf|\n",l_cls_pos);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

				
		   /*	l_chr_pdcap =0;*/

         EXEC SQL SELECT CMP_TPCAPITAL INTO :l_chr_pdcap:i_chr_pdcap
	               FROM MT_COMPANY	
				      WHERE CMP_CODE =:l_cmp_code;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"SqlError Check on PaidUpCapital |%d|\n",sqlca.sqlcode);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

         sprintf(chr_l_buf,"Value of PaidUpCapital |%lf|\n",l_chr_pdcap);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
      
			/* Calculation of Prncp_Amount */

         EXEC SQL SELECT ROUND((nvl(:l_chr_pdcap,0)),2) INTO :l_ins_pdcap:i_ins_pdcap
			     FROM DUAL;

         IS_ANY_ORA_ERROR

         sprintf(chr_l_buf,"SqlError checkRounding Value of PaidupCapital|%d|\n",sqlca.sqlcode);
         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL); 

         sprintf(chr_l_buf,"Rounding Value of PaidupCapital|%lf|\n",l_ins_pdcap);
		   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

 
         l_prcnt_cptl =(l_cls_pos * l_nom_value * 100)/l_ins_pdcap;

			sprintf(chr_l_buf,"VAL Of Calculate PrnPerc|%lf|\n",l_prcnt_cptl);
	      CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);


         EXEC SQL SELECT ROUND((:l_prcnt_cptl),2) INTO :l_chr_prncap:i_chr_prncap
		        FROM DUAL;

         sprintf(chr_l_buf,"VAL In RoundVal*******|%d|\n",sqlca.sqlcode);
	      CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);


         IS_ANY_ORA_ERROR

          sprintf(chr_l_buf,"After In RoundVal*******|%d|\n",sqlca.sqlcode);
	       CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	  
		   printf(" l_cln_code|%s|\n",l_cln_code);
		   printf(" l_instr_cod==|%s|\n",l_instr_code);
		   printf(" l_cust_code|%s|\n",l_cust_code);
		   printf(" Lastday|%s|\n",l_last_day);
		   printf(" l_sebi_reg_no=|%s|\n",l_sebi_reg_no);
		   printf(" l_sesub_ac|%s|\n",l_sebi_sub_acc);
		   printf("l_instr_isin==|%s|\n",l_instr_isin);
		   printf("Opn count==|%lf|\n",l_ins_opncnt);
		   printf("purqty==|%lf|\n",l_ins_purqty);
		   printf("Purvalue==|%lf|\n",l_ins_purvalue);
		   printf("slqty=|%lf|\n",l_ins_salqty);
		   printf("salvalue==|%lf|\n",l_ins_salvalue);
		   printf("l_cls_value==|%lf|\n",l_ins_clsval);
		   printf("l_chr_prncap==|%lf|\n",l_chr_prncap);

         printf("Value OF PRNNNNNCAP ==|%lf|\n",l_chr_prncap);

         /*EXEC SQL INSERT INTO DL_REGMPR (CLIENT,INSTR_CODE,CUST_CODE,SYS_DATE,FII_SEBI_REG_NO,FII_INSTR_NAME,SEBI_SUB_ACC,ISIN_CODE,OPNBAL_QTY,PUR_QTY,PUR_VALUE,SOLD_QTY,SOLD_VALUE,CLSBAL_QTY,CLS_VALUE,PRCNT_CPTL) VALUES (:l_cln_code:i_cln_code,
				                                                	:l_instr_code:i_instr_code,
																				  :l_cust_code:i_cust_code,
																				  :l_last_day:i_last_day,
                                                              :l_sebi_reg_no:i_sebi_reg_no,
                                                              :l_cln_name:i_cln_name,
																				 :l_sebi_sub_acc:i_sebi_sub_acc,
																				 :l_instr_isin:i_instr_isin,
																				 :l_ins_opncnt:i_ins_opncnt,
																				 :l_ins_purqty:i_ins_purqty,
																				 :l_ins_purvalue:i_ins_purvalue,
																				 :l_ins_salqty:i_ins_salqty,
																				 :l_ins_salvalue:i_ins_salvalue,
																				 :l_cls_pos:i_cls_pos,
																				 :l_ins_clsval:i_ins_clsval,
																           :l_chr_prncap:i_chr_prncap);
			
				        printf("BeforeINSERT check|%d|\n",sqlca.sqlcode);

         printf("After InsertValue OF PRNNNNNCAP ==|%lf|\n",l_chr_prncap);

															
	    IS_ANY_ORA_ERROR

     sprintf(chr_l_buf,"SqlError Check on the Inserting Data For Dl_Regmpr|%d|\n",sqlca.sqlcode);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

      printf("INSERT check|%d|\n",sqlca.sqlcode);*/

	   printf("l_pur_cnt ==%d\n",l_pur_cnt);
       printf("l_sal_cnt ==%d\n",l_sal_cnt);
       printf("l_cpur ==%d\n",l_cpur_cnt);
       printf("l_csal==%d\n",l_csal_cnt);
       printf("OpnAmt==|%lf|\n",l_ins_opncnt);
       printf("ClosQty==|%lf|\n",l_cls_pos);


       /* Skipping records for - No Open Balance,NoSale,No Purchase, No ClosingBal */

       if(((l_ins_opncnt) == 0) && ((l_pur_cnt) == 0) && ((l_sal_cnt) == 0) && ((l_cpur_cnt) == 0) && ((l_csal_cnt == 0)) && ((l_cls_pos == 0)))
		 {
          sprintf(chr_l_buf,"Inside Skipping Process|%d|\n",l_pur_cnt);
		    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			 continue;
		 }
		 else
		 {
			 printf("Inside fPrintf\n");
			 /*  Calculation of closing Balance */
			l_cbal_value = l_cls_pos * l_ins_clsval;
			i_cbal_value = i_ins_clsval;
			sprintf(chr_l_buf,"***********value of closing balance l_cbal_value|%d|\n",l_cbal_value);
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			
	    fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf\n",l_cust_code,l_sys_dt,l_sebi_reg_no,l_cln_name,l_sebi_sub_acc,l_instr_isin,l_ins_opncnt,l_ins_purqty,l_ins_purvalue,l_ins_salqty,l_ins_salvalue,l_cls_pos,l_cbal_value,l_chr_prncap);


         EXEC SQL INSERT INTO DL_REGMPR (CLIENT,INSTR_CODE,CUST_CODE,SYS_DATE,FII_SEBI_REG_NO,FII_INSTR_NAME,SEBI_SUB_ACC,ISIN_CODE,OPNBAL_QTY,PUR_QTY,PUR_VALUE,SOLD_QTY,SOLD_VALUE,CLSBAL_QTY,CLS_VALUE,PRCNT_CPTL) VALUES (:l_cln_code:i_cln_code,
				                                                	:l_instr_code:i_instr_code,
																				  :l_cust_code:i_cust_code,
																				  :l_last_day:i_last_day,
                                                              :l_sebi_reg_no:i_sebi_reg_no,
                                                              :l_cln_name:i_cln_name,
																				 :l_sebi_sub_acc:i_sebi_sub_acc,
																				 :l_instr_isin:i_instr_isin,
																				 :l_ins_opncnt:i_ins_opncnt,
																				 :l_ins_purqty:i_ins_purqty,
																				 :l_ins_purvalue:i_ins_purvalue,
																				 :l_ins_salqty:i_ins_salqty,
																				 :l_ins_salvalue:i_ins_salvalue,
																				 :l_cls_pos:i_cls_pos,
																				 :l_cbal_value:i_cbal_value,
																             :l_chr_prncap:i_chr_prncap);
			

	    IS_ANY_ORA_ERROR

     sprintf(chr_l_buf,"SqlError Check on the Inserting Data For Dl_Regmpr|%d|\n",sqlca.sqlcode);
	  CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		 }
		  l_opn_count = 0;
		  l_cls_pos = 0;
		  l_cls_value = 0;
		  l_chr_prncap = 0;
		  l_chr_cls_pos = 0;
		  l_prcnt_cptl = 0;
		  l_chr_pdcap = 0;
		  l_ins_pdcap = 0;
		  l_ins_clsval = 0;
		  l_ins_opncnt = 0;
        l_ins_purqty = 0;
	     l_ins_purvalue = 0;
		  l_ins_salqty = 0;
		  l_ins_salvalue = 0;
		  l_cbal_value = 0;
		  printf("After sett values for All\n");
   }	

        sprintf(chr_l_buf,"After fprintf Closing Price Value Instrument  |%lf|\n",l_cls_value);
	     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

        EXEC SQL CLOSE ccode_rept;

        IS_ANY_ORA_ERROR

        sprintf(chr_l_buf,"After Closing Of Cursor |%d|\n",sqlca.sqlcode);
	     CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);

	RETURN_SUCCESS :
		#ifdef SYS_DEBUG
			printf("Leaving Function MPR_Mod_ClntInst with success\n");

		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		return(APL_SUCCESS);

	RETURN_FAILURE :

		#ifdef SYS_DEBUG
			printf("Leaving Function MPR_Mod_ClntInst with errors\n");
		#endif

		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);

   }

  /* AUC1 Report */

int AUC_Mod_ClntInst(char *p_rep_name,char *p_chr_yymn_dt,char **argv,FILE *p_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char	chr_l_sysdate[APL_DATE_LEN]										=	APL_NULL_STRING;
    char  chr_l_sr_no[4]                                         =  APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]								=	APL_NULL_STRING;
	char  chr_l_h_aresponse_ca_id[CORP_ID_LEN]						   =	APL_NULL_STRING;
	char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
   /*char  p_chr_yymn_dt[7] = APL_NULL_STRING;*/   
    char l_first_day[20] = APL_NULL_STRING;
    char l_last_day[20] = APL_NULL_STRING;
    char l_cln_code[11] = APL_NULL_STRING;
    short i_cln_code = 0;
  
	char l_sys_dt[20] = APL_NULL_STRING;
	short i_sys_dt = 0;
    short i_first_day = 0;
    short i_last_day = 0;
    short i_max_date = 0;
	char l_pty_type[2] = APL_NULL_STRING;
	short i_pty_type = 0;
	char  l_cln_type[5] = APL_NULL_STRING;
	short i_cln_type = 0;
	double l_sum_pos = 0.0;
	short i_sum_pos = 0;
	double l_pty_sum = 0.0;
	short i_pty_sum = 0;
	
	int l_cnt_clnt= 0;
	int l_pty_cnt = 0;	
	int l_tot_nos = 0;
	
	double l_tot_sum = 0.0;
	int l_cclnt_cnt = 0;
    char l_ctype_val[5] = APL_NULL_STRING;
    double  l_csum_cnt = 0.0;

  int l_fclnt_cnt = 0;
  char l_ftype_val[5] = APL_NULL_STRING;
  double l_fsum_cnt = 0.0;

  int l_oclnt_cnt = 0;
  char l_otype_val[5] = APL_NULL_STRING;
  double l_osum_cnt = 0.0;

  int l_iclnt_cnt = 0;
  char l_itype_val[5] = APL_NULL_STRING;
  double  l_isum_cnt = 0.0;


  int l_mclnt_cnt = 0;
  char l_mtype_val[5] = APL_NULL_STRING;
  double  l_msum_cnt = 0.0;

  int l_nclnt_cnt = 0;
  char l_ntype_val[5] = APL_NULL_STRING;
  double  l_nsum_cnt = 0.0;

  int l_bclnt_cnt = 0;
  char l_btype_val[5] = APL_NULL_STRING;
  double  l_bsum_cnt = 0.0;

  int l_eclnt_cnt = 0;
  char l_etype_val[5] = APL_NULL_STRING;
  double  l_esum_cnt = 0.0;

  int l_brok_cnt = 0;
  char l_brok_type[2] = APL_NULL_STRING;
  double  l_brok_sum = 0.0;

  int l_oth_cnt = 0;
  char l_oth_type[5] = APL_NULL_STRING;
  double  l_oth_sum = 0.0;


  int l_pty_oth_cnt = 0;
  char l_pty_oth_type[2] = APL_NULL_STRING;
  double  l_pty_oth_sum = 0.0;
  double l_chr_clnt_sum = 0.0;
  double l_chr_pty_sum = 0.0;

  double l_chr_f_sum = 0.0;
  double l_chr_i_sum = 0.0;
  double l_chr_m_sum = 0.0;
  double l_chr_n_sum = 0.0;
  double l_chr_c_sum = 0.0;
  double l_chr_o_sum = 0.0;
  double l_chr_b_sum = 0.0;
  double l_chr_e_sum = 0.0;
  double l_chr_oth_sum = 0.0;
  double l_chr_brok_sum = 0.0;
  double l_chr_pty_osum = 0.0;


  double l_all_sum = 0.0;
  double l_chr_clt_sum =0.0;
  double l_chr_pt_sum =0.0;
  double l_chr_all_tot=0.0;

  double l_other_sum = 0.0;
  double l_othr_sum = 0.0;
  int l_other_nos = 0;
  int l_all_nos = 0;
  int l_chr_clt_nos = 0;
  int l_chr_pt_nos = 0;

  

  char f_first_day[20] = APL_NULL_STRING;
  char f_last_day[20] = APL_NULL_STRING;
  int	 l_int_loop = 0;
  EXEC SQL VAR l_ctype_val IS STRING;

	FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;


	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

	memset(chr_l_sr_no,NULL,4);
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	/* changes by amish 19/05 */
    memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));
	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);

    memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

    printf("Entered function AUC_Mod_ClntInst\n");
    fflush(stdout); 

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		  return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		  return(APL_FAILURE);

	EXEC SQL SELECT to_char(SYS_DATE,'DDMMYY') INTO :chr_l_sysdate FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR

   strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);
   strcat(chr_l_hbrokers_handoff_file_name,"AUC");
   strcat(chr_l_hbrokers_handoff_file_name,chr_l_sysdate);
   strcat(chr_l_hbrokers_handoff_file_name,".txt");
   printf("Opening Report File for  write |%s|\n",chr_l_hbrokers_handoff_file_name);
   if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
      return(APL_FAILURE);

   memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));


   strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
   strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   l_intl_rept_struct_ha->report_width = 100;
   strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);

   strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);


   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
		APL_GOBACK_FAIL
   }
	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_curr_datetime,l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }
		 EXEC SQL SELECT  to_char((last_day(to_date(:p_chr_yymn_dt,'MMYYYY'))),'DD/MM/YYYY') 
		              INTO :l_last_day:i_last_day
						  FROM DUAL;
	    IS_ANY_ORA_ERROR
		//strcat(l_last_day,APL_NULL_TIME); 
		strcpy(f_last_day,l_last_day);
	    printf("Last day of month is |%s|\n",f_last_day);
	    fflush(stdout);
	
		 EXEC SQL SELECT to_char((last_day(to_date(:p_chr_yymn_dt,'MMYYYY'))- to_number(to_char(last_day(to_date(:p_chr_yymn_dt,'MMYYYY')),'DD'))+1),'DD/MM/YYYY') 
	               INTO :l_first_day:i_first_day FROM DUAL;
		IS_ANY_ORA_ERROR
		//strcat(l_first_day,APL_NULL_TIME);
		strcpy(f_first_day,l_first_day);
		printf("First day of month is |%s|\n",f_first_day);
	    fflush(stdout);

	  /*******************     Vaibhav 17 July 2006  **********************************//*
	  EXEC SQL DECLARE auc_rept  CURSOR FOR SELECT count(distinct a.cln_code),sum(b.safekeep_pos*c.closing_pr),
			 a.cln_type
				 FROM mt_client a, dl_hissafek b, mt_dlymktprc c, mt_instrument d
				 WHERE a.cln_code =b.client
				 AND b.instr_code = c.instr_code
				 AND b.instr_code = d.instr_code
				 AND (POSIT_DATE >= :f_first_day)
				 AND (POSIT_DATE <= :f_last_day)
				 AND d.instr_type ='SHS'
				 AND price_date =(select max(price_date) from mt_dlymktprc where price_date <=b.posit_date and instr_code = b.instr_code)
				 GROUP BY a.cln_type
				 UNION
				SELECT count(distinct a.cln_code),sum(b.safekeep_pos*d.nominal_value),
			 a.cln_type
				 FROM mt_client a, dl_hissafek b, mt_instrument d
				 WHERE a.cln_code =b.client
				 AND b.instr_code = d.instr_code
				 AND (POSIT_DATE >= :f_first_day)
				 AND (POSIT_DATE <= :f_last_day)
				 AND d.instr_type ='SHS'
				 AND d.instr_code NOT IN (SELECT instr_code FROM mt_dlymktprc)
				 GROUP BY a.cln_type
				 UNION
				 SELECT count(distinct a.cln_code),sum(b.safekeep_pos*d.nominal_value),a.cln_type
				 FROM mt_client a, dl_hissafek b,mt_instrument d
				 WHERE a.cln_code =b.client
				 AND b.instr_code = d.instr_code
				 AND (POSIT_DATE >= :f_first_day)
				 AND (POSIT_DATE <= :f_last_day)
				 AND d.instr_type ='BON'
				 GROUP BY a.cln_type;
	  IS_ANY_ORA_ERROR

		  /*******************     Vaibhav 17 July 2006  **********************************/
		  /***********************Rahul 02/02/2007 ****************************/
		EXEC SQL DECLARE auc_rept  CURSOR FOR
			SELECT Count(distinct b.client),sum(b.safekeep_pos*c.closing_pr),a.CLN_SEBICTG
					  FROM mt_client a, dl_hissafek b, mt_dlymktprc c, mt_instrument d
					  WHERE a.cln_code =b.client  AND b.instr_code = c.instr_code
						AND b.instr_code = d.instr_code
						AND TRUNC(POSIT_DATE) = (SELECT trunc(max(POSIT_DATE)) FROM DL_HISSAFEK WHERE /* CLIENT = a.cln_code 
									AND INSTR_CODE = d.instr_code AND*/ (TRUNC(POSIT_DATE) >= :f_first_day) AND (TRUNC(POSIT_DATE) <= :f_last_day))  
						AND price_date =(select max(price_date) from mt_dlymktprc where instr_code = b.instr_code
												AND TRUNC(price_date) <= :f_last_day)
						Group By a.CLN_SEBICTG;
		    IS_ANY_ORA_ERROR
		
		  /***********************Rahul 02/02/2007 ****************************/	 
	  EXEC SQL OPEN auc_rept;

     IS_ANY_ORA_ERROR
 
     for(;;)
     {
			l_int_loop = l_int_loop +1;
				
         EXEC SQL FETCH auc_rept 
	          INTO :l_cnt_clnt,
				      :l_sum_pos:i_sum_pos,
					   :l_cln_type:i_cln_type;
		  printf("Sqlcode after Fetch |%d|\n",sqlca.sqlcode);
	      if(sqlca.sqlcode==1403)
		        break;
		   IS_ANY_ORA_ERROR
		  
		   printf("*********Inside a NEW Loop**************\n");

				printf("*********Output Of Cursor auc_rept***************\n");
			 	printf("Cnt_Clnt = |%d|\n",l_cnt_clnt);
		 		printf("Sum Pos = |%lf|\n",l_sum_pos);
				printf("Cln Type = |%s|\n",l_cln_type);
				printf("******************************************************\n");
			   if (strcmp(l_cln_type,"FI") == 0)
			   {
				  printf("Calculating For FII (FOREIGN INSTITUTIONAL INVESTOR) Clients \n");
			      l_fclnt_cnt = l_fclnt_cnt + l_cnt_clnt;
			      strcpy(l_ftype_val,l_cln_type);
			      l_fsum_cnt = l_fsum_cnt + l_sum_pos;
				  l_chr_f_sum = l_fsum_cnt / 10000000;
			   }
			   else if (strcmp(l_cln_type,"FA") == 0 )
               {
					 printf("Calculating For FI (FINANCIAL INSTITUTION) Clients \n");
				     l_iclnt_cnt = l_iclnt_cnt + l_cnt_clnt;
					 strcpy(l_itype_val,l_cln_type);
					 l_isum_cnt = l_isum_cnt + l_sum_pos;
				     l_chr_i_sum = l_isum_cnt / 10000000;
				}
				else if (strcmp(l_cln_type,"MF") == 0 )
				{
					 printf("Calculating For MF (MUTUAL FUND) Clients \n");
				     l_mclnt_cnt = l_mclnt_cnt + l_cnt_clnt;
					 strcpy(l_mtype_val,l_cln_type);
					 l_msum_cnt = l_msum_cnt + l_sum_pos;
					 l_chr_m_sum = l_msum_cnt / 10000000;
                
				}
				else if (strcmp(l_cln_type,"NR") == 0 )
				{
					printf("Calculating For NR (NRI's) Clients \n");
				    l_nclnt_cnt = l_nclnt_cnt + l_cnt_clnt;
					strcpy(l_ntype_val,l_cln_type);
					l_nsum_cnt = l_nsum_cnt + l_sum_pos;
					l_chr_n_sum = l_nsum_cnt / 10000000;
	 			}
				else if (strcmp(l_cln_type,"OC") == 0)
  			    {
				   printf("Calculating For OC (OVERSEAS CORPORATE BODIES) Clients\n");
				   l_oclnt_cnt = l_oclnt_cnt + l_cnt_clnt;
				   strcpy(l_otype_val,l_cln_type);
				   l_osum_cnt = l_osum_cnt + l_sum_pos;
                   l_chr_o_sum = l_osum_cnt / 10000000;
			    }
				else if (strcmp(l_cln_type,"BR") == 0)
  			    {
				   printf("Calculating For BR (BROKERS) Clients\n");
				   l_oclnt_cnt = l_oclnt_cnt + l_cnt_clnt;
				   strcpy(l_brok_type,l_cln_type);
				   l_brok_sum = l_brok_sum + l_sum_pos;
                   l_chr_brok_sum = l_brok_sum / 10000000;
			    }
				else if (strcmp(l_cln_type,"CO") == 0)
                 {
					 printf("Calculating For CO (Corporates) Clients\n");
				     l_brok_cnt = l_brok_cnt + l_cnt_clnt;
					 strcpy(l_ctype_val,l_cln_type);
					 l_csum_cnt = l_csum_cnt + l_sum_pos;
	                 l_chr_c_sum = l_csum_cnt / 10000000;
				 }
				else if (strcmp(l_cln_type,"BN") == 0 )
				{
					 printf("Calculating For BN (Banks) Clients\n");
				     l_bclnt_cnt = l_bclnt_cnt + l_cnt_clnt;
					 strcpy(l_btype_val,l_cln_type);
					 l_bsum_cnt = l_bsum_cnt + l_sum_pos;
                     l_chr_b_sum = l_bsum_cnt / 10000000;
	             }
				else if (strcmp(l_cln_type,"FD") == 0 )
				{
					 printf("Calculating For FD (Foreign Depository) Clients\n");
	  			     l_eclnt_cnt = l_eclnt_cnt + l_cnt_clnt;
					 strcpy(l_etype_val,l_cln_type);
					 l_esum_cnt = l_esum_cnt + l_sum_pos;
	                 l_chr_e_sum = l_esum_cnt / 10000000;
				 }
				/*else if ((strcmp(l_cln_type,"F") != 0) && (strcmp(l_cln_type,"I") != 0) && (strcmp(l_cln_type,"M") != 0) && (strcmp(l_cln_type,"N") != 0) && (strcmp(l_cln_type,"O") != 0) && (strcmp(l_cln_type,"C") != 0) &&  (strcmp(l_cln_type,"B") != 0) && (strcmp(l_cln_type,"E") != 0))*/
				else
				{
					 printf("Calculating For OT (OTHERS) Clients\n");
				     l_oth_cnt = l_oth_cnt + l_cnt_clnt;
					 strcpy(l_oth_type,l_cln_type);
					 l_oth_sum = l_oth_sum + l_sum_pos;
					 l_chr_oth_sum = l_oth_sum / 10000000;
			    }

		  l_chr_clt_nos = l_fclnt_cnt + l_iclnt_cnt + l_mclnt_cnt + l_nclnt_cnt + l_oclnt_cnt + l_brok_cnt+l_cclnt_cnt + l_bclnt_cnt + l_eclnt_cnt + l_oth_cnt;
		  printf("Total No of Various Clients ==|%d|\n",l_chr_clt_nos);
	       /*l_chr_clt_sum = l_fsum_cnt + l_isum_cnt + l_msum_cnt + l_nsum_cnt +  l_osum_cnt +l_csum_cnt + l_chr_brok_sum+l_csum_cnt + l_bsum_cnt + l_esum_cnt + l_oth_sum;*/
	       l_chr_clt_sum  = l_chr_f_sum + l_chr_i_sum + l_chr_m_sum + l_chr_n_sum + l_chr_o_sum + l_chr_c_sum + l_chr_brok_sum + l_chr_c_sum +  l_chr_b_sum + l_chr_e_sum + l_chr_oth_sum;
          printf("Total Holdings of Various Clients ==|%lf|\n",l_chr_clt_sum);


         } /* End of for */

/*          EXEC SQL DECLARE auc_ptyrept CURSOR FOR 
         select count(a.pty_code),sum(safekeep_pos*closing_pr) ,pty_type
		   from mt_party a, dl_hissafek b, mt_dlymktprc c,mt_instrument d
			where a.pty_code =b.client
	      and b.instr_code = c.instr_code
			 AND b.instr_code= d.instr_code	
			 AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
			 AND d.instr_type ='SHS'
         and price_date =(select max(price_date) from mt_dlymktprc where price_date <=b.posit_date) group by pty_type
			UNION
         select count(a.pty_code),sum(safekeep_pos*d.nominal_value) ,pty_type
		   from mt_party a, dl_hissafek b,mt_instrument d
			where a.pty_code =b.client
			 AND b.instr_code= d.instr_code	
			 AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
			 AND d.instr_type ='SHS'
			 AND d.instr_code NOT IN (SELECT instr_code FROM mt_dlymktprc)
		  	group by pty_type
			UNION
			select count(a.pty_code),sum(safekeep_pos*d.nominal_value),pty_type
			from mt_party a, dl_hissafek b,mt_instrument d
			where a.pty_code =b.client
			and b.instr_code = d.instr_code
			and (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
			AND d.instr_type ='BON'
			group by pty_type;

		 
             IS_ANY_ORA_ERROR

				 EXEC SQL OPEN auc_ptyrept;

			 	 IS_ANY_ORA_ERROR

		      for(;;)
				{
              EXEC SQL FETCH auc_ptyrept
                         INTO :l_pty_cnt,
		                        :l_pty_sum:i_pty_sum,
			                     :l_pty_type:i_pty_type;

	        if(sqlca.sqlcode==1403)
		        break;

               IS_ANY_ORA_ERROR


            if (strcmp(l_pty_type,"B") == 0 )
             {
					 printf("Enter Into Broker Check\n");
				    l_brok_cnt = l_brok_cnt + l_pty_cnt;
				 strcpy(l_brok_type,l_pty_type);
              
					 l_brok_sum = l_brok_sum + l_pty_sum;
                l_chr_brok_sum = l_brok_sum / 10000000;
                printf("Value of Other Sum in Brok ==|%lf|\n",l_chr_brok_sum);
					 printf("VAL OF BROKER SUM ==|%lf|\n",l_brok_sum);
				 }
					else if (strcmp(l_pty_type,"B") != 0)
				   {
				    l_pty_oth_cnt = l_pty_oth_cnt + l_pty_cnt;
					 strcpy(l_pty_oth_type,l_pty_type);
					 l_pty_oth_sum = l_pty_oth_sum + l_pty_sum;
					 
                l_chr_pty_osum = l_pty_oth_sum / 10000000;
                printf("Value of Other Sum in other in party  ==|%lf|\n",l_chr_pty_osum);

					 printf("Value of Other Pty Count==|%d|\n",l_pty_oth_cnt);
					 printf("Value of other pty Type ==|%s|\n",l_pty_oth_type);
					 printf("Value of other Pty Sum ==|%lf|\n",l_pty_oth_sum);
            }

               l_chr_pt_sum = l_chr_pt_sum + l_brok_sum + l_pty_oth_sum;
               printf("Count of Party No==|%lf|\n",l_chr_pt_sum);
	            l_chr_pt_nos = l_brok_cnt + l_pty_oth_cnt;
					printf("Count of Party Nos==|%d|\n",l_chr_pt_nos);
				}
       EXEC SQL CLOSE auc_ptyrept;
       IS_ANY_ORA_ERROR
    EXEC SQL CLOSE auc_rept;
	 IS_ANY_ORA_ERROR

      l_all_sum = l_chr_clt_sum + l_chr_pt_sum;
	     l_chr_all_tot = l_all_sum / 10000000;
		 l_all_nos = l_chr_clt_nos + l_chr_pt_nos;
	     printf("All Nos ==|%d|\n",l_all_nos);l_chr_clt_nos
		  l_other_nos = l_oth_cnt + l_pty_oth_cnt;
		  l_other_sum = l_oth_sum + l_pty_oth_sum;
		  printf("Value of other COUNT ==|%d|\n",l_other_nos);
		  printf("Value of Other SUM ==|%lf|\n",l_other_sum);
		  l_othr_sum = l_other_sum / 10000000;
		  printf("Value of OTHER SUM in Cr ==|%lf|\n",l_othr_sum);
 /***********************Rahul 02/02/2007 ****************************/
		 EXEC SQL CLOSE auc_rept;
		 IS_ANY_ORA_ERROR

		 fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%d|%lf|%d|%lf|%d|%lf|%d|%lf|%d|%lf|%d|%lf|%d|%lf|%d|%lf|%d|%lf|%d|%lf|%d|%lf|\n",l_fclnt_cnt,l_chr_f_sum,l_iclnt_cnt,l_chr_i_sum,l_mclnt_cnt,l_chr_m_sum,l_nclnt_cnt,l_chr_n_sum,l_oclnt_cnt,l_chr_o_sum,l_brok_cnt,l_chr_brok_sum,l_cclnt_cnt,l_chr_c_sum,l_bclnt_cnt,l_chr_b_sum,l_eclnt_cnt,l_chr_e_sum,l_oth_cnt,l_chr_oth_sum,l_chr_clt_nos,l_chr_clt_sum);

	RETURN_SUCCESS :
		#ifdef SYS_DEBUG
			printf("Leaving Function AUC_Mod_ClntInst with success\n");
		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		return(APL_SUCCESS);

	RETURN_FAILURE :
		#ifdef SYS_DEBUG
			printf("Leaving Function AUC_Mod_ClntInst with errors\n");
		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);

   }

/* Quaterly Report- Commited By Rahul 27-July-2006 */
/*   
int Quat_Mod_ClntDet(char *p_rep_name,char *p_chr_mnyy_dt,char **argv,FILE *p_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char	chr_l_sysdate[APL_DATE_LEN]										=	APL_NULL_STRING;
   char  chr_l_sr_no[4]                                         =  APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]								=	APL_NULL_STRING;
	char  chr_l_h_aresponse_ca_id[CORP_ID_LEN]						   =	APL_NULL_STRING;
	char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
   /*char  p_chr_yymn_dt[7] = APL_NULL_STRING;*/   
   /* char l_first_day[20] = APL_NULL_STRING;
    char l_last_day[20] = APL_NULL_STRING;
    char l_max_date[20] = APL_NULL_STRING;
    char l_safek_date[11] = APL_NULL_STRING;
    short i_safek_date = 0;
    char l_cust_code[4] = APL_NULL_STRING;
    short i_cust_code = 0;
    char l_cln_code[11] = APL_NULL_STRING;
    short i_cln_code = 0;
    char l_instr_code[9] = APL_NULL_STRING;
    short i_instr_code = 0;	
  
  char l_sys_dt[20] = APL_NULL_STRING;
  short i_sys_dt = 0;
  short i_first_day = 0;
  short i_last_day = 0;
  short i_max_date = 0;

  char  l_rbi_reg_no[21] = APL_NULL_STRING;
  short i_rbi_reg_no = 0;
  char l_cln_name[61] = APL_NULL_STRING;
  short i_cln_name = 0;
  char l_sebi_sub_acc[8] = APL_NULL_STRING;
  short i_sebi_sub_acc = 0;
  char l_instr_isin[13] = APL_NULL_STRING;
  short i_instr_isin = 0;
  char l_instr_type[4] = APL_NULL_STRING;
  short i_instr_type = 0;
  double l_opn_count = 0.0;
  short i_opn_count = 0;
  double l_sum_value = 0.0;
  short i_sum_value = 0;

  double l_pur_value = 0.0;
  short i_pur_value = 0;
  double l_sale_sum = 0.0;
  short i_sale_sum = 0;
  double l_sale_value = 0.0;
  short i_sale_value = 0;
  double l_cls_pos = 0.0;
  short i_cls_pos = 0;
  double l_prn_cptl = 0.0;
 /*short i_prn_cptl = 0;*/
 /* double l_cls_value = 0.0;
  short i_cls_value = 0;
  double l_cls_price = 0.0;
  short i_cls_price = 0;
  char l_instr_name[61] = APL_NULL_STRING;
  short i_instr_name = 0;

  char f_last_day[20] = APL_NULL_STRING;
  char f_first_day[20] = APL_NULL_STRING;
  
  char l_chr_month[3] = APL_NULL_STRING;
  char l_chr_yr[3] = APL_NULL_STRING;
  
  EXEC SQL VAR  l_cln_code IS STRING;
  EXEC SQL VAR  l_instr_isin IS STRING;

	FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;


	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

	memset(chr_l_sr_no,NULL,4);
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	/* changes by amish 19/05 */
   /* memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));
	
	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);


	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
	memset(l_cust_code,NULL,sizeof(l_cust_code));

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");
   printf("Entered function Quat_Mod_ClntDet\n");
   fflush(stdout); 
	
	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		  return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		  return(APL_FAILURE);

	EXEC SQL SELECT to_char(SYS_DATE,'MMYY') INTO :chr_l_sysdate FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR

   EXEC SQL SELECT to_char(SYS_DATE,'MM') INTO :l_chr_month FROM PRO_SYS_DATE;
   
	IS_ANY_ORA_ERROR

   EXEC SQL SELECT to_char(SYS_DATE,'YY') INTO :l_chr_yr FROM PRO_SYS_DATE;		

	IS_ANY_ORA_ERROR

  	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);

    if(strcmp(p_rep_name,"HYE") == 0)
	 {
   strcat(chr_l_hbrokers_handoff_file_name,"hye");
    }
	 else
	 {
		 strcat(chr_l_hbrokers_handoff_file_name,"hyd");
    }
   strcat(chr_l_hbrokers_handoff_file_name,l_chr_month);
   strcat(chr_l_hbrokers_handoff_file_name,l_chr_yr);
   strcat(chr_l_hbrokers_handoff_file_name,".txt");
   if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
      return(APL_FAILURE);

   memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));


 	strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
   strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   l_intl_rept_struct_ha->report_width = 100;
   strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);

   strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);


   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
       APL_GOBACK_FAIL
   }
	
	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_curr_datetime,l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }

   printf("Value Passed  Date in Quately report=|%s|\n",p_chr_mnyy_dt);


       EXEC SQL SELECT TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(:p_chr_mnyy_dt,'MMYYYY'), +2)),'DD/MM/YYYY')  INTO :l_last_day:i_last_day FROM DUAL;

       IS_ANY_ORA_ERROR



      strcat(l_last_day,APL_NULL_TIME); 
      strcpy(f_last_day,l_last_day);
   
      EXEC SQL SELECT to_char((last_day(to_date(:p_chr_mnyy_dt,'MMYYYY'))- to_number(to_char(last_day(to_date(:p_chr_mnyy_dt,'MMYYYY')),'DD'))+1),'DD/MM/YYYY') INTO :l_first_day:i_first_day FROM DUAL;

      IS_ANY_ORA_ERROR

      strcat(l_first_day,APL_NULL_TIME);
	   strcpy(f_first_day,l_first_day);

      exec sql select to_char(trunc(max(posit_date)),'DD/MM/YYYY') 
	             into :l_safek_date:i_safek_date
	             from dl_hissafek
	   where trunc(posit_date)<= last_day(Add_months(to_date(:p_chr_mnyy_dt,'MMYYYY'), -1));


		IS_ANY_ORA_ERROR

      EXEC SQL DECLARE ccode_rep CURSOR FOR SELECT CLN_CODE 
	                       FROM MT_CLIENT 
						    	  WHERE STATUS = 'AA' AND
								  CLN_TYPE = 'F';
	
      IS_ANY_ORA_ERROR
		  
      EXEC SQL OPEN ccode_rep;

	   IS_ANY_ORA_ERROR
 
      for(;;)
      {
        EXEC SQL FETCH ccode_rep 
	          INTO :l_cln_code:i_cln_code;


	        if(sqlca.sqlcode==1403)
		        break;
       
          EXEC SQL SELECT CUST_CODE,A.CLN_NAME,B.CLN_RBI_REG_NO,B.SEBI_SUB_ACC,TO_CHAR(SYS_DATE,'YYYYMM')
                   INTO :l_cust_code:i_cust_code,
                        :l_cln_name:i_cln_name,
                        :l_rbi_reg_no:i_rbi_reg_no,
                        :l_sebi_sub_acc:i_sebi_sub_acc,
                        :l_sys_dt:i_sys_dt
		    FROM MT_COMMON_SYS_PARAMS,MT_CLIENT A,MT_REGDETAILS B,PRO_SYS_DATE
			 WHERE A.CLN_CODE =:l_cln_code AND  
			 B.CLN_CODE =:l_cln_code AND
			 A.CLN_CODE = B.CLN_CODE;
  
	       IS_ANY_ORA_ERROR

           if(strcmp(p_rep_name,"HYE") == 0)
			  { 
          		EXEC SQL DECLARE instr_equt CURSOR FOR 
				 	SELECT DISTINCT A.INSTR_CODE 
                      FROM DL_HISSAFEK A,MT_INSTRUMENT B
                      WHERE CLIENT =:l_cln_code AND
						    A.INSTR_CODE = B.INSTR_CODE
						    AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
          			    AND INSTR_TYPE = 'SHS';

                      IS_ANY_ORA_ERROR
							 printf("After Declaring the Instr Cursor\n");
              }
              else
				  {
          		EXEC SQL DECLARE instr_ncur CURSOR FOR 
				 	SELECT DISTINCT A.INSTR_CODE 
                      FROM DL_HISSAFEK A,MT_INSTRUMENT B
                      WHERE CLIENT =:l_cln_code AND
						    A.INSTR_CODE = B.INSTR_CODE
						    AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
						    AND INSTR_TYPE != 'SHS';

               IS_ANY_ORA_ERROR
		         }
            if(strcmp(p_rep_name,"HYE") == 0)
            {

				 EXEC SQL OPEN instr_equt;

             IS_ANY_ORA_ERROR
				}
				else
				{	
			    EXEC SQL OPEN instr_ncur;
			 	 IS_ANY_ORA_ERROR
				}

				for(;;)
				{

               if(strcmp(p_rep_name,"HYE") == 0)
					{
               EXEC SQL FETCH instr_equt   
                         INTO :l_instr_code:i_instr_code; 
               IS_ANY_ORA_ERROR
               }
					else
					{
               EXEC SQL FETCH instr_ncur   
                         INTO :l_instr_code:i_instr_code; 
               IS_ANY_ORA_ERROR
					}

	            if(sqlca.sqlcode==1403)
		             break;

               EXEC SQL SELECT nvl(SUM(QTY),0)  
				          INTO :l_sum_value:i_sum_value
					       FROM DL_HISBCN 
					       WHERE CLIENT_CD =:l_cln_code AND 
							 INSTR_CD =:l_instr_code AND
							 DEAL_CD IN ('2','4')
                      AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day);
                    
					IS_ANY_ORA_ERROR
             

               EXEC SQL SELECT nvl(SUM(QTY),0)
				          INTO :l_sale_sum:i_sale_sum 	
					       FROM DL_HISBCN 
					       WHERE CLIENT_CD =:l_cln_code AND 
							 INSTR_CD =:l_instr_code AND
							 DEAL_CD IN ('1','3') 
                      AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day);

                IS_ANY_ORA_ERROR 

					  EXEC SQL SELECT nvl(SUM(a.QTY*b.CLOSING_PR),0) 
                 INTO :l_pur_value:i_pur_value
					  from DL_HISBCN a , mt_dlymktprc b
					  WHERE a.instr_cd = b.instr_code AND 
					  CLIENT_CD =:l_cln_code AND 
					  instr_cd =:l_instr_code AND 
					  DEAL_CD IN ('2','4')
                 AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day)
                 AND  B.PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=A.SETT_DT); 

                IS_ANY_ORA_ERROR

                 EXEC SQL SELECT nvl(SUM(a.QTY*b.CLOSING_PR),0) 
                 INTO :l_sale_value:i_sale_value
					  from DL_HISBCN a , mt_dlymktprc b


					  WHERE a.instr_cd = b.instr_code AND 
					  CLIENT_CD =:l_cln_code AND 
					  instr_cd =:l_instr_code AND
				     DEAL_CD IN ('1','3')	
                 AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day)
                 AND B.PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=A.SETT_DT); 
                  IS_ANY_ORA_ERROR
      
                 EXEC SQL SELECT SUM(SAFEKEEP_POS)
					       INTO :l_opn_count:i_opn_count
					       FROM DL_HISSAFEK
					       WHERE TO_CHAR(TO_DATE(POSIT_DATE),'DD/MM/YYYY') <=:l_safek_date AND
						    INSTR_CODE =:l_instr_code AND
						    CLIENT =:l_cln_code;

				          IS_ANY_ORA_ERROR		 

                  EXEC SQL SELECT SUM(SAFEKEEP_POS)
                       INTO :l_cls_pos:i_cls_pos 
						    FROM DL_HISSAFEK
							 WHERE CLIENT =:l_cln_code AND
							 INSTR_CODE =:l_instr_code 
                      AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day);

                     IS_ANY_ORA_ERROR

                 EXEC SQL SELECT nvl(SUM(A.SAFEKEEP_POS*B.CLOSING_PR),0) 
                 INTO :l_cls_value:i_cls_value
					  from DL_HISSAFEK A, MT_DLYMKTPRC B
					  WHERE A.INSTR_CODE = B.INSTR_CODE AND 
					  CLIENT =:l_cln_code AND 
					  A.INSTR_CODE =:l_instr_code 
                 AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
                 AND B.PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=A.POSIT_DATE); 

                IS_ANY_ORA_ERROR

                EXEC SQL SELECT CLOSING_PR INTO:l_cls_price:i_cls_price
					 FROM MT_DLYMKTPRC
					         WHERE INSTR_CODE =:l_instr_code AND
					         PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=:f_last_day);

                IS_ANY_ORA_ERROR


                EXEC SQL SELECT SUBSTR(INSTR_NAME,1,60) 
					 INTO :l_instr_name:i_instr_name
					 FROM MT_INSTRUMENT
					 WHERE INSTR_CODE =:l_instr_code;

                IS_ANY_ORA_ERROR

                EXEC SQL SELECT INSTR_ISIN,INSTR_TYPE 
					 INTO :l_instr_isin:i_instr_isin,
					      :l_instr_type:i_instr_type
					 FROM MT_INSTRUMENT
					 WHERE INSTR_CODE =:l_instr_code;

                IS_ANY_ORA_ERROR


       if((strcmp(l_instr_isin,APL_NULL_STRING )==0) &&  ((strcmp(l_instr_type,"BON")==0) || (strcmp(l_instr_type , "FMT")==0)))
       {
       fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%s|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf\n",l_cust_code,l_sys_dt,l_rbi_reg_no,l_cln_name,l_sebi_sub_acc,l_instr_code,l_instr_name,l_opn_count,l_sum_value,l_pur_value,l_sale_sum,l_sale_value,l_cls_pos,l_cls_value,l_cls_price,l_prn_cptl);
       }
      else
	   {  
       fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%s|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf\n",l_cust_code,l_sys_dt,l_rbi_reg_no,l_cln_name,l_sebi_sub_acc,l_instr_isin,l_instr_name,l_opn_count,l_sum_value,l_pur_value,l_sale_sum,l_sale_value,l_cls_pos,l_cls_value,l_cls_price,l_prn_cptl);
		}
	}

      if(strcmp(p_rep_name,"HYE") == 0)
		{
        EXEC SQL CLOSE instr_equt;

       IS_ANY_ORA_ERROR
		}
      else
		{
        EXEC SQL CLOSE instr_ncur;
		  IS_ANY_ORA_ERROR
      }
	  }	

    EXEC SQL CLOSE ccode_rep;

	 IS_ANY_ORA_ERROR


	RETURN_SUCCESS :
		#ifdef SYS_DEBUG
			printf("Leaving Function Quat_Mod_ClntDet with success\n");

		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		return(APL_SUCCESS);

	RETURN_FAILURE :

		#ifdef SYS_DEBUG
			printf("Leaving Function Quat_Mod_ClntDet with errors\n");
		#endif

		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
   }
*/

/* Half Yearly commited by -Rahul*/
/*
int Half_Mod_ClntDet(char *p_rep_name,char *p_chr_mnyy_dt,char **argv,FILE *p_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
	char	chr_l_sysdate[APL_DATE_LEN]										=	APL_NULL_STRING;
   char  chr_l_sr_no[4]                                         =  APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]								=	APL_NULL_STRING;
	char  chr_l_h_aresponse_ca_id[CORP_ID_LEN]						   =	APL_NULL_STRING;
	char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
   /*char  p_chr_yymn_dt[7] = APL_NULL_STRING;*/   
  /*  char l_first_day[20] = APL_NULL_STRING;
    char l_last_day[20] = APL_NULL_STRING;
    char l_max_date[20] = APL_NULL_STRING;
    char l_safek_date[11] = APL_NULL_STRING;
    short i_safek_date = 0;
    char l_cust_code[4] = APL_NULL_STRING;
    short i_cust_code = 0;
    char l_cln_code[11] = APL_NULL_STRING;
    short i_cln_code = 0;
    char l_instr_code[9] = APL_NULL_STRING;
    short i_instr_code = 0;	
    int l_instr_tot_val = 0; 
    char l_sys_dt[20] = APL_NULL_STRING;
    short i_sys_dt = 0;
    short i_first_day = 0;
    short i_last_day = 0;
    short i_max_date = 0;

    char  l_rbi_reg_no[21] = APL_NULL_STRING;
    short i_rbi_reg_no = 0;
    char l_cln_name[61] = APL_NULL_STRING;
    short i_cln_name = 0;
    char l_sebi_sub_acc[8] = APL_NULL_STRING;
    short i_sebi_sub_acc = 0;
    char l_instr_isin[13] = APL_NULL_STRING;
    short i_instr_isin = 0;
   /*double l_prn_cptl = 0.0;*/
    /*char l_instr_type[4] = APL_NULL_STRING;
    short i_instr_type = 0;
    double l_opn_count = 0.0;
    short i_opn_count = 0;
    double l_sum_value = 0.0;
    short i_sum_value = 0;
    double l_pur_value = 0.0;
    short i_pur_value = 0;
    double l_sale_sum = 0.0;
    short i_sale_sum = 0;
    double l_sale_value = 0.0;
    short i_sale_value = 0;
    double l_cls_pos = 0.0;
    short i_cls_pos = 0;
    double l_prn_cptl = 0.0;
    double l_cls_value = 0.0;
    short i_cls_value = 0;
    double l_cls_price = 0.0;
    short i_cls_price = 0;
    char l_instr_name[61] = APL_NULL_STRING;
    short i_instr_name = 0;
    char f_last_day[20] = APL_NULL_STRING;
    char f_first_day[20] = APL_NULL_STRING;
    char l_chr_month[3] = APL_NULL_STRING;
    char l_chr_yr[3] = APL_NULL_STRING;
  
  EXEC SQL VAR  l_cln_code IS STRING;
  EXEC SQL VAR  l_instr_isin IS STRING;

	FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;


	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

	memset(chr_l_sr_no,NULL,4);
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
   /* changes by amish 19/05 */
	/* memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));

	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);


	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
	memset(l_cust_code,NULL,sizeof(l_cust_code));

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

   printf("Entered function Half_Mod_ClntDet\n");
   fflush(stdout);

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		  return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		  return(APL_FAILURE);

	
	EXEC SQL SELECT to_char(SYS_DATE,'MMYY') INTO :chr_l_sysdate FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR

   EXEC SQL SELECT to_char(SYS_DATE,'MM') INTO :l_chr_month FROM PRO_SYS_DATE;

   IS_ANY_ORA_ERROR

   EXEC SQL SELECT to_char(SYS_DATE,'YY') INTO :l_chr_yr FROM PRO_SYS_DATE;

   IS_ANY_ORA_ERROR

  	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);

    if(strcmp(p_rep_name,"HYE") == 0)
	 {
		 strcat(chr_l_hbrokers_handoff_file_name,"hye");
    }
	 else
	 {
		 strcat(chr_l_hbrokers_handoff_file_name,"hyd");
    }
   strcat(chr_l_hbrokers_handoff_file_name,l_chr_month);
   strcat(chr_l_hbrokers_handoff_file_name,l_chr_yr);
   strcat(chr_l_hbrokers_handoff_file_name,".txt");
   if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
      return(APL_FAILURE);

   memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));

 	strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
  strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
   strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
   l_intl_rept_struct_ha->report_width = 100;
   strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);

   strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
   strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);


   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
       APL_GOBACK_FAIL
   }
	
	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_curr_datetime,l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }

   /*EXEC SQL SELECT  to_char((last_day(to_date(:p_chr_yymn_dt,'YYYYMM'))),'DD/MM/YYYY') 
		              INTO :l_last_day:i_last_day
						  FROM DUAL;*/
     /*  EXEC SQL SELECT TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(:p_chr_mnyy_dt,'MMYYYY'), +5)),'DD/MM/YYYY')  INTO :l_last_day:i_last_day FROM DUAL;

       IS_ANY_ORA_ERROR

      strcat(l_last_day,APL_NULL_TIME); 
      strcpy(f_last_day,l_last_day);

      EXEC SQL SELECT to_char((last_day(to_date(:p_chr_mnyy_dt,'MMYYYY'))- to_number(to_char(last_day(to_date(:p_chr_mnyy_dt,'MMYYYY')),'DD'))+1),'DD/MM/YYYY') INTO :l_first_day:i_first_day FROM DUAL;

    IS_ANY_ORA_ERROR

    strcat(l_first_day,APL_NULL_TIME);
	 strcpy(f_first_day,l_first_day);

    exec sql select to_char(trunc(max(posit_date)),'DD/MM/YYYY') 
	             into :l_safek_date:i_safek_date
	 from dl_hissafek
	 where trunc(posit_date)<= last_day(Add_months(to_date(:p_chr_mnyy_dt,'MMYYYY'), -1));

	 IS_ANY_ORA_ERROR

    EXEC SQL DECLARE ccode_rept1 CURSOR FOR SELECT CLN_CODE 
	                       FROM MT_CLIENT 
						    	  WHERE STATUS = 'AA' AND
								  CLN_TYPE = 'F';

	 IS_ANY_ORA_ERROR 
		  
    EXEC SQL OPEN ccode_rept1;

	 IS_ANY_ORA_ERROR
 
    for(;;)
      {
        EXEC SQL FETCH ccode_rept1 
	          INTO :l_cln_code:i_cln_code;


        IS_ANY_ORA_ERROR

	        if(sqlca.sqlcode==1403)
		     break;
       
        EXEC SQL SELECT CUST_CODE,A.CLN_NAME,B.CLN_RBI_REG_NO,B.SEBI_SUB_ACC,TO_CHAR(SYS_DATE,'YYYYMM')
                   INTO :l_cust_code:i_cust_code,
                        :l_cln_name:i_cln_name,
                        :l_rbi_reg_no:i_rbi_reg_no,
                        :l_sebi_sub_acc:i_sebi_sub_acc,
                        :l_sys_dt:i_sys_dt
		    FROM MT_COMMON_SYS_PARAMS,MT_CLIENT A,MT_REGDETAILS B,PRO_SYS_DATE
			 WHERE A.CLN_CODE =:l_cln_code AND  
			 B.CLN_CODE =:l_cln_code AND
			 A.CLN_CODE = B.CLN_CODE;
  
	       IS_ANY_ORA_ERROR

           if(strcmp(p_rep_name,"HYE") == 0)
			  { 
          		EXEC SQL DECLARE instr_equt1 CURSOR FOR 
				   SELECT DISTINCT A.INSTR_CODE 
                         FROM DL_HISSAFEK A,MT_INSTRUMENT B
                         WHERE CLIENT =:l_cln_code AND
								 A.INSTR_CODE = B.INSTR_CODE
						       AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
          					 AND INSTR_TYPE = 'SHS';

               IS_ANY_ORA_ERROR
              }
              else
				  {
          		EXEC SQL DECLARE instr_ncur1 CURSOR FOR 
				 		SELECT DISTINCT A.INSTR_CODE 
                         FROM DL_HISSAFEK A,MT_INSTRUMENT B
                         WHERE CLIENT =:l_cln_code AND
								 A.INSTR_CODE = B.INSTR_CODE
						       AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
								 AND INSTR_TYPE != 'SHS';

               IS_ANY_ORA_ERROR
		         }

               if(strcmp(p_rep_name,"HYE") == 0)
               {

				    EXEC SQL OPEN instr_equt1;

                IS_ANY_ORA_ERROR
				   }
				   else
				   {	
			       EXEC SQL OPEN instr_ncur1;

			 	    IS_ANY_ORA_ERROR
			    	}

				for(;;)
				{

               if(strcmp(p_rep_name,"HYE") == 0)
					{
               EXEC SQL FETCH instr_equt1   
                         INTO :l_instr_code:i_instr_code; 
               IS_ANY_ORA_ERROR
               }
					else
					{
               EXEC SQL FETCH instr_ncur1   
                         INTO :l_instr_code:i_instr_code; 
               IS_ANY_ORA_ERROR
					}

	            if(sqlca.sqlcode==1403)
		             break;

               EXEC SQL SELECT nvl(SUM(QTY),0)  
				          INTO :l_sum_value:i_sum_value
					       FROM DL_HISBCN 
					       WHERE CLIENT_CD =:l_cln_code AND 
							 INSTR_CD =:l_instr_code AND
							 DEAL_CD IN ('2','4')
                      AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day);
                    
					IS_ANY_ORA_ERROR
             

               EXEC SQL SELECT nvl(SUM(QTY),0)
				          INTO :l_sale_sum:i_sale_sum 	
					       FROM DL_HISBCN 
					       WHERE CLIENT_CD =:l_cln_code AND 
							 INSTR_CD =:l_instr_code AND
							 DEAL_CD IN ('1','3') 
                      AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day);

                IS_ANY_ORA_ERROR 

					  EXEC SQL SELECT nvl(SUM(a.QTY*b.CLOSING_PR),0) 
                 INTO :l_pur_value:i_pur_value
					  from DL_HISBCN a , mt_dlymktprc b
					  WHERE a.instr_cd = b.instr_code AND 
					  CLIENT_CD =:l_cln_code AND 
					  instr_cd =:l_instr_code AND 
					  DEAL_CD IN ('2','4')
                 AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day)
                 AND  B.PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=A.SETT_DT); 

                IS_ANY_ORA_ERROR

                 EXEC SQL SELECT nvl(SUM(a.QTY*b.CLOSING_PR),0) 
                 INTO :l_sale_value:i_sale_value
					  from DL_HISBCN a , mt_dlymktprc b


					  WHERE a.instr_cd = b.instr_code AND 
					  CLIENT_CD =:l_cln_code AND 
					  instr_cd =:l_instr_code AND
				     DEAL_CD IN ('1','3')	
                 AND (SETT_DT >= :f_first_day AND SETT_DT <= :f_last_day)
                 AND B.PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=A.SETT_DT); 
                  IS_ANY_ORA_ERROR
						
                 EXEC SQL SELECT SUM(SAFEKEEP_POS)
					       INTO :l_opn_count:i_opn_count
					       FROM DL_HISSAFEK
					       WHERE TO_CHAR(TO_DATE(POSIT_DATE),'DD/MM/YYYY') <=:l_safek_date AND
						    INSTR_CODE =:l_instr_code AND
						    CLIENT =:l_cln_code;

				          IS_ANY_ORA_ERROR		 

                  EXEC SQL SELECT SUM(SAFEKEEP_POS)
                       INTO :l_cls_pos:i_cls_pos 
						    FROM DL_HISSAFEK
							 WHERE CLIENT =:l_cln_code AND
							 INSTR_CODE =:l_instr_code 
                      AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day);

                     IS_ANY_ORA_ERROR

                 EXEC SQL SELECT nvl(SUM(A.SAFEKEEP_POS*B.CLOSING_PR),0) 
                 INTO :l_cls_value:i_cls_value
					  from DL_HISSAFEK A, MT_DLYMKTPRC B
					  WHERE A.INSTR_CODE = B.INSTR_CODE AND 
					  CLIENT =:l_cln_code AND 
					  A.INSTR_CODE =:l_instr_code 
                 AND (POSIT_DATE >= :f_first_day AND POSIT_DATE <= :f_last_day)
                 AND B.PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=A.POSIT_DATE); 

                IS_ANY_ORA_ERROR

                EXEC SQL SELECT CLOSING_PR INTO:l_cls_price:i_cls_price
					   FROM MT_DLYMKTPRC
					   WHERE INSTR_CODE =:l_instr_code AND
					         PRICE_DATE = (SELECT MAX(PRICE_DATE) FROM MT_DLYMKTPRC WHERE PRICE_DATE <=:f_last_day);

                IS_ANY_ORA_ERROR

                EXEC SQL SELECT SUBSTR(INSTR_NAME,1,60) 
					 INTO :l_instr_name:i_instr_name
					 FROM MT_INSTRUMENT
					 WHERE INSTR_CODE =:l_instr_code;

                IS_ANY_ORA_ERROR

                EXEC SQL SELECT  INSTR_TOT_NOM_VAL INTO :l_instr_tot_val
			         FROM MT_INSTRUMENT
			         WHERE INSTR_CODE = :l_instr_code;	  

                IS_ANY_ORA_ERROR
					 
                l_prn_cptl = l_cls_pos /l_instr_tot_val * 100; 

                EXEC SQL SELECT INSTR_ISIN,INSTR_TYPE 
					 INTO :l_instr_isin:i_instr_isin,
					      :l_instr_type:i_instr_type
					 FROM MT_INSTRUMENT
					 WHERE INSTR_CODE =:l_instr_code;

                IS_ANY_ORA_ERROR


       if((strcmp(l_instr_isin,APL_NULL_STRING )==0) &&  ((strcmp(l_instr_type,"BON")==0) || (strcmp(l_instr_type , "FMT")==0)))
       {
       fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%s|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf\n",l_cust_code,l_sys_dt,l_rbi_reg_no,l_cln_name,l_sebi_sub_acc,l_instr_code,l_instr_name,l_opn_count,l_sum_value,l_pur_value,l_sale_sum,l_sale_value,l_cls_pos,l_cls_value,l_cls_price,l_prn_cptl);
       }
      else
	   {  
       fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%s|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf\n",l_cust_code,l_sys_dt,l_rbi_reg_no,l_cln_name,l_sebi_sub_acc,l_instr_isin,l_instr_name,l_opn_count,l_sum_value,l_pur_value,l_sale_sum,l_sale_value,l_cls_pos,l_cls_value,l_cls_price,l_prn_cptl);
		}
	}

      if(strcmp(p_rep_name,"HYE") == 0)
		{
        EXEC SQL CLOSE instr_equt1;

       IS_ANY_ORA_ERROR
		}
      else
		{
        EXEC SQL CLOSE instr_ncur1;
		  IS_ANY_ORA_ERROR
      }
	  }	

    EXEC SQL CLOSE ccode_rept1;

	 IS_ANY_ORA_ERROR


	RETURN_SUCCESS :
		#ifdef SYS_DEBUG
			printf("Leaving Function Half_Mod_ClntDet with success\n");

		#endif
		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);
		return(APL_SUCCESS);

	RETURN_FAILURE :

		#ifdef SYS_DEBUG
			printf("Leaving Function Half_Mod_ClntDet with errors\n");
		#endif

		fclose(l_ptr_hbrokers_handoff_file);
		free(l_intl_rept_struct_ha);

    }
*/



/******* Half Yearly Report - Rahul 21/07/2006 ******/
int Half_Mod_ClntDet(char *p_rep_name,char *p_chr_mnyy_dt,char **argv,FILE *l_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	/*Variable Declaration start */
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	char	chr_l_sysdate[APL_DATE_LEN]	=	APL_NULL_STRING;
	char l_chr_month[3] = APL_NULL_STRING;
	char l_chr_yr[5] = APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]	=	APL_NULL_STRING;
 	char  chr_l_buf[BUFFER_LEN] =  APL_NULL_STRING;
	
	char l_first_day[20] = APL_NULL_STRING;
	short i_first_day = 0;
	char l_last_day[20] = APL_NULL_STRING;
	short i_last_day = 0;
	char f_last_day[20] = APL_NULL_STRING;
	char f_first_day[20] = APL_NULL_STRING;

	char l_cust_code[11] = APL_NULL_STRING;
	short i_cust_code = 0;
	char l_cln_code[11] = APL_NULL_STRING;
	short i_cln_code = 0;
	char l_cln_name[61] = APL_NULL_STRING;
	short i_cln_name = 0;
	char  l_rbi_reg_no[21] = APL_NULL_STRING;
	short i_rbi_reg_no = 0;
	char l_sys_dt[20] = APL_NULL_STRING;
	short i_sys_dt = 0;
	char l_instr_code[9] = APL_NULL_STRING;
	short i_instr_code = 0;	
	char  l_sebi_sub_acc[16] = APL_NULL_STRING; /* By Harvinder Singh -- ISKB 1266 -- Date 13May2008 */
	short i_sebi_sub_acc=0;
	double l_bcnpur_qty = 0.0;
	short i_bcnpur_qty = 0;
	double l_bcnpur_value = 0.0;
	short i_bcnpur_value = 0;
	double l_bcnsale_qty = 0.0;
	short i_bcnsale_qty = 0 ;
	double l_bcnsale_value = 0.0 ;
	short i_bcnsale_value = 0;
	double l_dlpur_qty = 0.0;
	short i_dlpur_qty = 0; 
	double l_dlpur_value = 0.0 ;
	short i_dlpur_value = 0;
	double l_dlsal_qty = 0.0 ;
	short i_dlsal_qty = 0;
	double l_dlsal_value = 0.0 ;
	short i_dlsal_value = 0;
	double l_totpur_qty = 0.0;
	double l_totsal_qty = 0.0; 
	double l_totsal_val = 0.0;
	double l_totpur_val = 0.0;
	double l_ins_purqty = 0.0;
	short i_ins_purqty = 0;
	double l_ins_salqty = 0.0;
	short i_ins_salqty = 0;
	double l_ins_purval = 0.0;
	short i_ins_purval = 0;
	double l_ins_salval = 0.0;
	short i_ins_salval = 0;
	char l_instr_name[61] = APL_NULL_STRING;
	short i_instr_name = 0;
	char l_instr_isin[13] = APL_NULL_STRING;
	short i_instr_isin = 0;
	char l_instr_type[4] = APL_NULL_STRING;
	short i_instr_type = 0;
	int l_cls_dtcnt = 0 ;
	short i_cls_dtcnt = 0 ;
	/* Start - Rahul */
		int l_rec_cnt = 0 ;
		short i_rec_cnt = 0 ;
	/* End- Rahul */
	char l_cls_date[20] = APL_NULL_STRING;
	short i_cls_date = 0;
	double l_opn_qty = 0.0;
	short i_opn_qty = 0;
	double l_opn_val = 0.0;
	short i_opn_val = 0;
	double l_ins_opnqty = 0.0;
	short i_ins_opnqty = 0;
	double l_ins_opnval = 0.0;
	short i_ins_opnval = 0;
	double l_cls_qty = 0.0;
	double l_ins_clsqty = 0.0;
	short i_ins_clsqty = 0;
	int l_cls_cnt = 0;
	short i_cls_cnt = 0;
	char l_cls_prcdt[20] = APL_NULL_STRING;
	short i_cls_prcdt  = 0;
	double l_cls_mktval = 0.0;
	short i_cls_mktval = 0;
	double l_ins_clsmktval = 0.0;
	short i_ins_clsmktval = 0;
	double l_cls_val = 0.0;
	double l_ins_clsval = 0.0;
	short i_ins_clsval = 0;
	/*Start - 09/11/2006 */
		double l_closing_val = 0.0;
		double l_ins_closing_val = 0.0;
		short i_ins_closing_val = 0;
	/*End - 09/11/2006 */
	double l_prcnt_cptl = 0.0;
	double l_ins_prncap = 0.0;
	short i_ins_prncap = 0;
	double l_chr_prncap = 0.0;
	short i_chr_prncap = 0;
	double l_instr_tot_val = 0;
	short i_instr_tot_val = 0;
	int l_cpur_cnt = 0;
	short i_cpur_cnt = 0;
	int l_csal_cnt = 0;
	short i_csal_cnt = 0;
	short i_prcnt_cptl = 0;
	double l_nom_value = 0.0;
	short i_nom_value = 0;
	char l_cmp_code[11] = APL_NULL_STRING;
   short i_cmp_code = 0;
   double l_ins_pdcap = 0.0;
	short i_ins_pdcap = 0;
	char l_chr_instr[4] = APL_NULL_STRING;
	short i_chr_instr = 0;
         char l_rep_type[2] = APL_NULL_STRING;
	short i_rep_type = 0;

	// By Bawa -- 7/22/2008 -- for sebi_sub_acc chngs 
	char	chr_l_cln_sebictg [5]	=	APL_NULL_STRING;
	
	EXEC SQL VAR  l_cln_code IS STRING;
	EXEC SQL VAR  l_instr_isin IS STRING;

	FILE  *l_ptr_ini_file = NULL;
	INTL_REPT_STRUCT_H  *l_intl_rept_struct_ha  =NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;
	
	/* End */

	strcpy(l_rep_type,"H");
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));
	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);
	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
	memset(l_cust_code,NULL,sizeof(l_cust_code));

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	
	printf("Entered function Half_Mod_ClntDet\n");
	fflush(stdout);
	fflush(l_logfile); fprintf(l_logfile,"Entered function Half_Mod_ClntDet\n");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		return(APL_FAILURE);

/*	EXEC SQL SELECT to_char(SYS_DATE,'MMYY'),to_char(SYS_DATE,'MM'),to_char(SYS_DATE,'YY')
		INTO :chr_l_sysdate,:l_chr_month,:l_chr_yr 
		FROM PRO_SYS_DATE;*/

/*	  EXEC SQL SELECT TO_CHAR(ADD_MONTHS(to_date(:p_chr_mnyy_dt,'MMYYYY'),5),'YYYYMM'),*/
	  EXEC SQL SELECT TO_CHAR(ADD_MONTHS(to_date(:p_chr_mnyy_dt,'MMYYYY'),5),'MMYYYY'),
							TO_CHAR(ADD_MONTHS(to_date(:p_chr_mnyy_dt,'MMYYYY'),5),'MM'),
							TO_CHAR(ADD_MONTHS(to_date(:p_chr_mnyy_dt,'MMYYYY'),5),'YY') 			 
							INTO :chr_l_sysdate,:l_chr_month,:l_chr_yr FROM DUAL;
		IS_ANY_ORA_ERROR
	
	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);
	if(strcmp(p_rep_name,"HYE") == 0)
	{
		strcat(chr_l_hbrokers_handoff_file_name,"HYE");
	}
	else
	{
		strcat(chr_l_hbrokers_handoff_file_name,"HYD");
	}
	strcat(chr_l_hbrokers_handoff_file_name,l_chr_month);
	strcat(chr_l_hbrokers_handoff_file_name,l_chr_yr);
	strcat(chr_l_hbrokers_handoff_file_name,".txt");
	if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);
	
	fflush(l_logfile); fprintf(l_logfile,"Report File Genrated is |%s|\n",chr_l_hbrokers_handoff_file_name);
	memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));

	strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
	strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
	strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	l_intl_rept_struct_ha->report_width = 100;
	strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);

	strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
	strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);


	if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
		APL_GOBACK_FAIL

	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_curr_datetime,l_debug_info_ptr))
		APL_GOBACK_FAIL

		EXEC SQL SELECT TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(:p_chr_mnyy_dt,'MMYYYY'), +5)),'DD/MM/YYYY')  INTO :l_last_day:i_last_day FROM DUAL;
	   IS_ANY_ORA_ERROR

	/*strcat(l_last_day,APL_NULL_TIME); */
	strcpy(f_last_day,l_last_day);

	EXEC SQL SELECT to_char((last_day(to_date(:p_chr_mnyy_dt,'MMYYYY'))- to_number(to_char(last_day(to_date(:p_chr_mnyy_dt,'MMYYYY')),'DD'))+1),'DD/MM/YYYY') INTO :l_first_day:i_first_day FROM DUAL;
	IS_ANY_ORA_ERROR

	/*strcat(l_first_day,APL_NULL_TIME);*/
	strcpy(f_first_day,l_first_day);

	fflush(l_logfile); fprintf(l_logfile,"First Date -->|%s|\nLast Date -->|%s| \n",l_first_day,l_last_day);
	EXEC SQL DECLARE ccode_rept1 CURSOR FOR 
		SELECT CLN_CODE FROM MT_CLIENT 
		WHERE STATUS = 'AA' AND CLN_TYPE = 'F';
	EXEC SQL OPEN ccode_rept1;
	IS_ANY_ORA_ERROR
	
	for(;;)
	{
			EXEC SQL FETCH ccode_rept1 
				INTO :l_cln_code:i_cln_code;

			IS_ANY_ORA_ERROR

				if(sqlca.sqlcode==1403)
					break;

			fflush(l_logfile); fprintf(l_logfile,"Cursor fetched Data l_cln_code |%s|\n",l_cln_code);
			EXEC SQL SELECT CUST_CODE,A.CLN_NAME,B.CLN_SEBI_REG_NO,B.SEBI_SUB_ACC,TO_CHAR(SYS_DATE,'MMYYYY')
				INTO :l_cust_code:i_cust_code,
					  :l_cln_name:i_cln_name,
					  :l_rbi_reg_no:i_rbi_reg_no,
					  :l_sebi_sub_acc:i_sebi_sub_acc,
					  :l_sys_dt:i_sys_dt
						  FROM MT_COMMON_SYS_PARAMS,MT_CLIENT A,MT_REGDETAILS B,PRO_SYS_DATE
						  WHERE A.CLN_CODE =:l_cln_code AND  
						  B.CLN_CODE =:l_cln_code AND
						  A.CLN_CODE = B.CLN_CODE;

			IS_ANY_ORA_ERROR
			
			// By Bawa -- 7/22/2008 -- for sebi_sub_acc chngs - Start
			IF_COND_EXISTS("REGREPT","SEBI_SUB_ACC_NOT_NULL")
			{
				EXEC SQL SELECT CLN_SEBICTG INTO :chr_l_cln_sebictg 
				 FROM MT_CLIENT 
					WHERE CLN_CODE = :l_cln_code ;

				IS_ANY_ORA_ERROR

				printf("\n ** ** CLN_SEBICTG   -- |%s| \n",chr_l_cln_sebictg);

				if (!strcmp(chr_l_cln_sebictg,"FI"))
				{
					printf("\n ** ** -- LENGTH of l_sebi_sub_acc = |%d|  *** \n",strlen(l_sebi_sub_acc));
					
					if (strlen(l_sebi_sub_acc) == 0) // when l_sebi_sub_acc is null
					{
						printf("\n ** Before  l_sebi_sub_acc -- |%s| \n",l_sebi_sub_acc);

						/* EXEC SQL SELECT SUBSTR(CLN_SEBI_REG_NO,7,4) INTO :l_sebi_sub_acc  Changed by Bawa - 8/5/2008 */
						EXEC SQL SELECT SUBSTR(replace(CLN_SEBI_REG_NO,'-',''),7,4) INTO :l_sebi_sub_acc
							FROM MT_REGDETAILS 
							WHERE CLN_CODE = :l_cln_code;
			
						IS_ANY_ORA_ERROR
						printf("\n ** After l_sebi_sub_acc -- |%s| \n",l_sebi_sub_acc);
					}
				}
			}
			// By Bawa -- 7/22/2008 -- for sebi_sub_acc chngs - End 
			
			fflush(l_logfile); fprintf(l_logfile,"Report File Data l_cust_code |%s|\n",l_cust_code);
			fflush(l_logfile); fprintf(l_logfile,"Report File Data l_cln_name |%s|\n",l_cln_name);
			fflush(l_logfile); fprintf(l_logfile,"Report File Data l_rbi_reg_no |%s|\n",l_rbi_reg_no);
			fflush(l_logfile); fprintf(l_logfile,"Report File Data l_sebi_sub_acc |%s|\n",l_sebi_sub_acc);
			fflush(l_logfile); fprintf(l_logfile,"Report File Data l_sys_dt |%s|\n",l_sys_dt);
			
				if(strcmp(p_rep_name,"HYE") == 0)
				{ 
					CO_ProcMonitor(l_logfile,"Declearing Cursor instr_equt1 for HYE",NULL,NULL);
					EXEC SQL DECLARE instr_equt1 CURSOR FOR 
						SELECT DISTINCT A.INSTR_CD
						FROM DL_REGBCN A,MT_INSTRUMENT B
						WHERE A.CLIENT_CD =:l_cln_code AND
						A.INSTR_CD = B.INSTR_CODE AND
						REPO_DATE BETWEEN to_date(:f_first_day,'DD/MM/YYYY') AND TO_DATE(:f_last_day,'DD/MM/YYYY') + 1
						AND B.INSTR_TYPE = 'SHS'
						UNION
						SELECT DISTINCT A.INSTR_CODE
						FROM DL_REGDEAL  A,MT_INSTRUMENT B
						WHERE CLIENT =:l_cln_code AND
						A.INSTR_CODE = B.INSTR_CODE AND
						REPO_DATE BETWEEN to_date(:f_first_day,'DD/MM/YYYY') AND TO_DATE(:f_last_day,'DD/MM/YYYY') + 1
						AND B.INSTR_TYPE = 'SHS'
						/* ISKB432 - Extra Union added to fetch Instr Code of Conversion Broker - Rahul 27Sep2007 */
                        UNION
						SELECT DISTINCT A.INSTR_CD
						FROM DL_BCN A,MT_INSTRUMENT B
						WHERE A.CLIENT_CD =:l_cln_code AND
						A.INSTR_CD = B.INSTR_CODE AND
						BROKER_CD = 'CONVERSION' AND
						A.CHECKER_DT BETWEEN to_date(:f_first_day,'DD/MM/YYYY') AND TO_DATE(:f_last_day,'DD/MM/YYYY') + 1
						AND B.INSTR_TYPE = 'SHS';
						
					strcpy(l_chr_instr,"SHS");
				}
				else
				{
					CO_ProcMonitor(l_logfile,"Declearing Cursor instr_ncur1 for ELSE",NULL,NULL);
					EXEC SQL DECLARE instr_ncur1 CURSOR FOR 
						SELECT DISTINCT A.INSTR_CD
						FROM DL_REGBCN A,MT_INSTRUMENT B
						WHERE A.CLIENT_CD =:l_cln_code AND
						A.INSTR_CD = B.INSTR_CODE AND
						REPO_DATE BETWEEN to_date(:f_first_day,'DD/MM/YYYY') AND TO_DATE(:f_last_day,'DD/MM/YYYY') + 1
						AND B.INSTR_TYPE != 'SHS'
						UNION
						SELECT DISTINCT A.INSTR_CODE
						FROM DL_REGDEAL  A,MT_INSTRUMENT B
						WHERE CLIENT =:l_cln_code AND
						A.INSTR_CODE = B.INSTR_CODE AND
						REPO_DATE BETWEEN to_date(:f_first_day,'DD/MM/YYYY') AND TO_DATE(:f_last_day,'DD/MM/YYYY') + 1
						AND B.INSTR_TYPE != 'SHS'
						/* ISKB432 - Extra Union added to fetch Instr Code of Conversion Broker - Rahul 27Sep2007 */
						UNION
						SELECT DISTINCT A.INSTR_CD
						FROM DL_REGBCN A,MT_INSTRUMENT B
						WHERE A.CLIENT_CD =:l_cln_code AND
						A.INSTR_CD = B.INSTR_CODE AND
						BROKER_CD = 'CONVERSION' AND
						A.CHECKER_DT BETWEEN to_date(:f_first_day,'DD/MM/YYYY') AND TO_DATE(:f_last_day,'DD/MM/YYYY') + 1
						AND B.INSTR_TYPE != 'SHS';
					
					strcpy(l_chr_instr,"BON");
				}

			if(strcmp(p_rep_name,"HYE") == 0)
			{
				EXEC SQL OPEN instr_equt1;
				fflush(l_logfile); fprintf(l_logfile,"Open Cursor instr_equt1 with error code |%d|\n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR
			}
			else
			{	
				EXEC SQL OPEN instr_ncur1;
				IS_ANY_ORA_ERROR
			}

			for(;;)
			{

				if(strcmp(p_rep_name,"HYE") == 0)
				{
					EXEC SQL FETCH instr_equt1   
						INTO :l_instr_code:i_instr_code;
					IS_ANY_ORA_ERROR
				}
				else
				{
					EXEC SQL FETCH instr_ncur1   
						INTO :l_instr_code:i_instr_code;
					IS_ANY_ORA_ERROR
				}

				if(sqlca.sqlcode==1403)
					break;

				fflush(l_logfile); fprintf(l_logfile,"Instrument Code fetch from cursor l_instr_code|%s|\n",l_instr_code);
				/* Calculation of Purchased Qty,value and sale Qty,value */
				EXEC SQL SELECT nvl(SUM(QTY),0),ROUND((nvl(SUM(DL_AMT),0)),2)
					INTO :l_bcnpur_qty:i_bcnpur_qty,
						  :l_bcnpur_value:i_bcnpur_value
							  FROM DL_REGBCN
							  WHERE CLIENT_CD =:l_cln_code AND
							  INSTR_CD =:l_instr_code AND
							  SEBI_REPORTED IN ('Y' ,'A') AND  /* ISKB319 - Amended BCN Report - RahulC */
							  R_TYPE NOT IN ('09','10','11','12') AND
							  REPO_FLAG = 'D' AND
							  DEAL_CD IN ('2','4') AND
							  BROKER_CD != 'CONVERSION' AND
							  REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
				IS_ANY_ORA_ERROR

			fflush(l_logfile); fprintf(l_logfile,"BCN Purchse Qty & value l_bcnpur_qty -->|%lf| & l_bcnpur_value -->|%lf|\n",l_bcnpur_qty,l_bcnpur_value);

					EXEC SQL SELECT nvl(SUM(QTY),0),ROUND((nvl(SUM(DL_AMT),0)),2)
					INTO :l_bcnsale_qty:i_bcnsale_qty,
						  :l_bcnsale_value:i_bcnsale_value
							  FROM DL_REGBCN
							  WHERE CLIENT_CD =:l_cln_code AND
							  INSTR_CD =:l_instr_code AND
							  SEBI_REPORTED IN ('Y' ,'A') AND  /* ISKB319 - RahulC*/
							  R_TYPE NOT IN ('09','10','11','12') AND
							  REPO_FLAG = 'D' AND
							  DEAL_CD IN ('1','3') AND
							  BROKER_CD != 'CONVERSION' AND
							  REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
				IS_ANY_ORA_ERROR

			fflush(l_logfile); fprintf(l_logfile,"BCN Sale Qty & value l_bcnsale_qty -->|%lf| & l_bcnsale_value-->|%lf|\n",l_bcnsale_qty,l_bcnsale_value);

					EXEC SQL	SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
					INTO :l_cpur_cnt:i_cpur_cnt,
						  :l_dlpur_qty:i_dlpur_qty,
						  :l_dlpur_value:i_dlpur_value
							  FROM DL_REGDEAL
							  WHERE CLIENT =:l_cln_code AND
							  INSTR_CODE =:l_instr_code AND
							  SEBI_REPORTED IN ('Y' ,'A') AND /* ISKB319 - RahulC*/
							  DL_CLASS IN ('17','18','19','21') AND
							  DEAL_CD IN ('2','4') AND
							  DOMESTIC_CPCLT != 'CONVERSION' AND
							  REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1
							  AND (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%');
				IS_ANY_ORA_ERROR

		fflush(l_logfile); fprintf(l_logfile,"Deal Purchas qty & value l_dlpur_qty -->|%lf| & l_dlpur_value-->|%lf|\n",l_dlpur_qty,l_dlpur_value);

					EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
					INTO :l_csal_cnt:i_csal_cnt,
						  :l_dlsal_qty:i_dlsal_qty,
						  :l_dlsal_value:i_dlsal_value
							  FROM DL_REGDEAL
							  WHERE CLIENT =:l_cln_code AND
							  INSTR_CODE =:l_instr_code AND
							  SEBI_REPORTED IN ('Y' ,'A') AND /* ISKB319 - RahulC*/
							  DL_CLASS IN ('17','18','19','21') AND
							  DEAL_CD IN ('1','3') AND
							  DOMESTIC_CPCLT != 'CONVERSION' AND
							  REPO_DATE BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1
							  AND (IDENTIY_NO NOT LIKE '%RIGHTS%'  AND IDENTIY_NO NOT LIKE '%CARTAP%');
				IS_ANY_ORA_ERROR

      fflush(l_logfile); fprintf(l_logfile,"Deal Sale qty & value l_dlsal_qty -->|%lf| & l_dlsal_value-->|%lf|\n",l_dlsal_qty,l_dlsal_value);
					
				l_totpur_qty = l_bcnpur_qty + l_dlpur_qty;
				l_totsal_qty = l_bcnsale_qty + l_dlsal_qty;
				l_totpur_val = l_bcnpur_value + l_dlpur_value;
				l_totsal_val = l_bcnsale_value + l_dlsal_value;

			
		/* Strat - for Broker_cd = 'Conversion' */
				
				l_bcnpur_qty = 0;
				l_dlpur_qty = 0;
				l_bcnsale_qty = 0;
				l_dlsal_qty = 0;
				/*Start - ISKB432  - Trade done by Conversion Broker should be Reported from DL_BCN Table - Rahul- 27Sep2007 */
				EXEC SQL SELECT nvl(SUM(QTY),0),ROUND(nvl(SUM(DL_AMT),0),2)
					INTO :l_bcnpur_qty:i_bcnpur_qty,
							:l_dlpur_qty:i_dlpur_qty
							  FROM DL_BCN
							  WHERE CLIENT_CD = :l_cln_code AND
							  INSTR_CD = :l_instr_code AND
							  STATUS IN ('AA','RC') AND
							  R_TYPE NOT IN ('09','10','11','12') AND
							  DEAL_CD IN ('2','4') AND
							  BROKER_CD = 'CONVERSION' AND
							  CHECKER_DT BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
				IS_ANY_ORA_ERROR

				EXEC SQL SELECT nvl(SUM(QTY),0),ROUND(nvl(SUM(DL_AMT),0),2)
					INTO :l_bcnsale_qty:i_bcnsale_qty,
							:l_dlsal_qty:i_dlsal_qty
		  				    FROM DL_BCN
							  WHERE CLIENT_CD =:l_cln_code AND
							  INSTR_CD =:l_instr_code AND
							  STATUS IN ('AA','RC') AND
				              R_TYPE NOT IN ('09','10','11','12') AND
							  DEAL_CD IN ('1','3') AND
							  BROKER_CD = 'CONVERSION' AND
							  CHECKER_DT BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
				IS_ANY_ORA_ERROR

				 l_totpur_qty = l_totpur_qty + l_bcnpur_qty ;
				 l_totsal_qty = l_totsal_qty + l_bcnsale_qty ; 
  				 l_totpur_val = l_totpur_val  + l_dlpur_qty;
				 l_totsal_val = l_totsal_val  + l_dlsal_qty;
				/*End - ISKB432  - Trade done by Conversion Broker should be Reported from DL_BCN Table - Rahul- 27Sep2007 */
		/* End - for Broker_cd = 'Conversion' */
				
			
	  fflush(l_logfile); fprintf(l_logfile,"Total Purchase qty & value l_totpur_qty -->|%lf| & l_totpur_val-->|%lf|\n",l_totpur_qty,l_totpur_val);
     fflush(l_logfile); fprintf(l_logfile,"Total Sale qty & value l_salpur_qty -->|%lf| & l_salpur_val-->|%lf|\n",l_totsal_qty,l_totsal_val);
		/* 09-Nov-2006 */
		l_closing_val = l_totpur_val - l_totsal_val;

		EXEC SQL SELECT ROUND((nvl(:l_totpur_qty,0)),2),ROUND((nvl(:l_totsal_qty,0)),2),
					ROUND((nvl(:l_totpur_val,0)),2),ROUND((nvl(:l_totsal_val,0)),2),
					ROUND((nvl(:l_closing_val,0)),2)
					INTO :l_ins_purqty:i_ins_purqty,:l_ins_salqty:i_ins_salqty,
					  		:l_ins_purval:i_ins_purval,:l_ins_salval:i_ins_salval,
							:l_ins_closing_val:i_ins_closing_val
					FROM DUAL;
		IS_ANY_ORA_ERROR
		
		fflush(l_logfile); fprintf(l_logfile,"Report Data :Total Purchase qty & value l_ins_purqty -->|%lf| & l_ins_purval-->|%lf|\n",l_ins_purqty,l_ins_purval);
		fflush(l_logfile); fprintf(l_logfile,"Report Data :Total Sale qty & value l_ins_salqty -->|%lf| & l_ins_salval-->|%lf|\n",l_ins_salqty,l_ins_salval);
					/*End*/	

		
		EXEC SQL SELECT SUBSTR(INSTR_NAME,1,60),INSTR_ISIN,INSTR_TYPE,INSTR_TOT_NOM_VAL,NVL(NOMINAL_VALUE,0),CMP_CODE 
				INTO :l_instr_name:i_instr_name,:l_instr_isin:i_instr_isin,
					  :l_instr_type:i_instr_type,:l_instr_tot_val:i_instr_tot_val,
					  :l_nom_value:i_nom_value,:l_cmp_code:i_cmp_code
				FROM MT_INSTRUMENT
				WHERE INSTR_CODE =:l_instr_code;
		IS_ANY_ORA_ERROR

		fflush(l_logfile); fprintf(l_logfile,"Report Data: l_instr_name -->|%s| & l_instr_isin-->|%s|\n",l_instr_name,l_instr_isin);
		fflush(l_logfile); fprintf(l_logfile,"Report Data: l_instr_type -->|%s| & l_instr_tot_val-->|%lf|\n",l_instr_type,l_instr_tot_val);

		/* Calculation of Opning Qty & value */
		if(strcmp(p_rep_name,"HYE") == 0)
			EXEC SQL SELECT COUNT(*),TO_CHAR(TRUNC(MAX(SYS_DATE)),'DD/MM/YYYY')
				INTO  :l_cls_dtcnt:i_cls_dtcnt,
						:l_cls_date:i_cls_date
				FROM DL_REGHALF_YEAR
				WHERE TRUNC(SYS_DATE)<=  last_day(Add_months(to_date(:p_chr_mnyy_dt,'MMYYYY'), -1))
						AND INSTR_TYPE = 'SHS' AND REP_TYPE = 'H';
		else
			EXEC SQL SELECT COUNT(*),TO_CHAR(TRUNC(MAX(SYS_DATE)),'DD/MM/YYYY')
				INTO  :l_cls_dtcnt:i_cls_dtcnt,
						:l_cls_date:i_cls_date
				FROM DL_REGHALF_YEAR
				WHERE TRUNC(SYS_DATE)<=  last_day(Add_months(to_date(:p_chr_mnyy_dt,'MMYYYY'), -1))	
						AND INSTR_TYPE != 'SHS' AND REP_TYPE = 'H';
		IS_ANY_ORA_ERROR

		if ((l_cls_dtcnt) != 0)
		{
			if(strcmp(p_rep_name,"HYE") == 0)
				EXEC SQL SELECT NVL(CLSBAL_QTY,0),NVL(CLS_VALUE,0) 
						INTO :l_opn_qty:i_opn_qty,
								  :l_opn_val:i_opn_val
						FROM DL_REGHALF_YEAR
						WHERE CLIENT =:l_cln_code AND INSTR_CODE =:l_instr_code AND
								TO_CHAR(SYS_DATE,'DD/MM/YYYY') =:l_cls_date
								AND INSTR_TYPE = 'SHS';
			else
				EXEC SQL SELECT NVL(CLSBAL_QTY,0),NVL(CLS_VALUE,0)
					INTO :l_opn_qty:i_opn_qty,
						  :l_opn_val:i_opn_val
					FROM DL_REGHALF_YEAR
					WHERE CLIENT =:l_cln_code AND INSTR_CODE =:l_instr_code AND
							  TO_CHAR(SYS_DATE,'DD/MM/YYYY') =:l_cls_date
							  AND INSTR_TYPE != 'SHS';		  
	      fflush(l_logfile); fprintf(l_logfile,"\nsqlca.sqlcode %d",sqlca.sqlcode);
				
			IS_ANY_ORA_ERROR
 		  /*Start - ISKB432  - for Records which does not has Opening Balance - Rahul- 27Sep2007 */
			if(sqlca.sqlcode == 1403)
			{
				l_opn_val = 0;	
				l_opn_qty = 0;
			}
 		  /*End - ISKB432  - for Records which does not has Opening Balance - Rahul- 27Sep2007 */
		}
		else
		{
			l_opn_val = 0;	
			l_opn_qty = 0;
		}

		EXEC SQL SELECT ROUND((nvl(:l_opn_qty,0)),2),ROUND((nvl(:l_opn_val,0)),2) 
			INTO :l_ins_opnqty:i_ins_opnqty,
				  :l_ins_opnval:i_ins_opnval FROM DUAL;
			IS_ANY_ORA_ERROR
			
			fflush(l_logfile); fprintf(l_logfile,"Report Data: l_ins_opnqty-->|%lf| & l_ins_opnval --> |%lf|\n",l_ins_opnqty,l_ins_opnval);
			
			/* Calculation of Closing  Qty & value */	
				l_cls_qty = l_ins_opnqty + l_ins_purqty - l_ins_salqty;
				
				EXEC SQL SELECT ROUND((nvl(:l_cls_qty,0)),2) INTO :l_ins_clsqty:i_ins_clsqty
					FROM DUAL;	

				fflush(l_logfile); fprintf(l_logfile,"Report Data: l_ins_clsqty-->|%lf|\n",l_ins_clsqty);
				EXEC SQL SELECT COUNT(*),TO_CHAR(TRUNC(MAX(PRICE_DATE)),'DD/MM/YYYY')
					INTO :l_cls_cnt:i_cls_cnt,
						  :l_cls_prcdt:i_cls_prcdt
					FROM MT_DLYMKTPRC 
					WHERE to_char(PRICE_DATE,'MMYYYY') <= :chr_l_sysdate
							  AND INSTR_CODE =:l_instr_code;
				IS_ANY_ORA_ERROR

				fflush(l_logfile); fprintf(l_logfile," Price Date l_cls_prcdt-->|%s|\n",l_cls_prcdt);
				if ((l_cls_cnt) != 0)
				{
						EXEC SQL SELECT ROUND((nvl(SUM(CLOSING_PR),0)),2)
							INTO :l_cls_mktval:i_cls_mktval
							FROM MT_DLYMKTPRC
							WHERE TO_CHAR(TO_DATE(PRICE_DATE),'DD/MM/YYYY') =:l_cls_prcdt AND  
							INSTR_CODE =:l_instr_code;
						IS_ANY_ORA_ERROR
				}
				else 
						l_cls_mktval = 0;


				EXEC SQL SELECT ROUND((nvl(:l_cls_mktval,0)),2) INTO :l_ins_clsmktval:i_ins_clsmktval
					FROM DUAL;
				fflush(l_logfile); fprintf(l_logfile,"Report Data: l_ins_clsmktval-->|%lf|\n",l_ins_clsmktval);
				
				l_cls_val = l_cls_qty * l_ins_clsmktval;
				EXEC SQL SELECT ROUND((nvl(:l_cls_val,0)),2) INTO :l_ins_clsval:i_ins_clsval
					FROM DUAL;

				fflush(l_logfile); fprintf(l_logfile,"Report Data: l_ins_clsval-->|%lf|\n",l_ins_clsval);

				EXEC SQL SELECT ROUND((nvl(CMP_TPCAPITAL,0)),2) INTO :l_ins_pdcap:i_ins_pdcap
					FROM MT_COMPANY
					WHERE CMP_CODE =:l_cmp_code;
				IS_ANY_ORA_ERROR
				
				l_prcnt_cptl =(l_ins_clsqty * l_nom_value * 100)/l_ins_pdcap;
				EXEC SQL SELECT ROUND((:l_prcnt_cptl),2) INTO :l_chr_prncap:i_chr_prncap
					FROM DUAL;

				fflush(l_logfile); fprintf(l_logfile,"Report Data: l_prcnt_cptl-->|%lf|\n",l_prcnt_cptl);
				fflush(l_logfile); fprintf(l_logfile,"****************Instrument Type is |%s|\n\n",l_chr_instr);

			   /*Start-ISKB157 - To change custodian code from 017 to IN/CUS/017 - Rahul 17-May-07*/
				EXEC SQL SELECT replace(:l_rbi_reg_no,'-','') INTO :l_rbi_reg_no FROM DUAL;
				IS_ANY_ORA_ERROR
				strcpy(l_cust_code,"IN/CUS/017");
			   /*End -ISKB157 - To change custodian code from 017 to IN/CUS/017 - Rahul 17-May-07*/

		       /* Skipping records for - No Open Balance,NoSale,No Purchase, No ClosingBal */

				 /*if((l_ins_opncnt == 1)  && (l_cpur_cnt == 0) && (l_csal_cnt == 0) && (l_ins_clsqty == 0))*/
				if((l_ins_purqty == 0) && (l_ins_salqty == 0) && (l_ins_clsqty == 0))
				{
					fflush(l_logfile); fprintf(l_logfile,"Inside Skipping Process\n");
					continue;
				}
				else
				{  
/*					fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%s|%.2lf|%2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf\n",l_cust_code,chr_l_sysdate,l_rbi_reg_no,l_cln_name,l_sebi_sub_acc,l_instr_isin,l_instr_name,l_ins_opnqty,l_ins_opnval,l_ins_purqty,l_ins_purval,l_ins_salqty,l_ins_salval,l_ins_clsqty,l_ins_clsval,l_ins_clsmktval,l_chr_prncap);*/
					fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%s|%s|%s|%s|%s|%s|%s|%.2lf|%2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf|%.2lf\n",l_cust_code,chr_l_sysdate,l_rbi_reg_no,l_cln_name,l_sebi_sub_acc,l_instr_isin,l_instr_name,l_ins_opnqty,l_ins_opnval,l_ins_purqty,l_ins_purval,l_ins_salqty,l_ins_salval,l_ins_clsqty,l_ins_closing_val,l_ins_clsval,l_chr_prncap);
					
					EXEC SQL SELECT COUNT(*) INTO :l_rec_cnt:i_rec_cnt
					  		FROM DL_REGHALF_YEAR
							WHERE CLIENT = :l_cln_code AND INSTR_CODE = :l_instr_code AND
						   TO_CHAR(SYS_DATE,'DD/MM/YYYY') = :l_last_day
							AND REP_TYPE = 'H';
					fflush(l_logfile); fprintf(l_logfile,"\nRahul ----> sqlca.sqlcode %d\n",sqlca.sqlcode);
			 		IS_ANY_ORA_ERROR	
					
					if ( l_rec_cnt == 0 )
					{
					EXEC SQL INSERT INTO DL_REGHALF_YEAR (CLIENT,INSTR_CODE,CUST_CODE,SYS_DATE,FII_SEBI_REG_NO,FII_INSTR_NAME,SEBI_SUB_ACC,ISIN_CODE,SCRIPT_NAME,OPNBAL_QTY,OPNBAL_VALUE,PUR_QTY,PUR_VALUE,SOLD_QTY,SOLD_VALUE,CLSBAL_QTY,CLS_VALUE,CLS_MKT_VALUE,PRCNT_CPTL,INSTR_TYPE,REP_TYPE) VALUES (:l_cln_code:i_cln_code,
							:l_instr_code:i_instr_code,
							:l_cust_code:i_cust_code,
							:l_last_day:i_last_day,
							:l_rbi_reg_no:i_rbi_reg_no,
							:l_cln_name:i_cln_name,
							:l_sebi_sub_acc:i_sebi_sub_acc,
							:l_instr_isin:i_instr_isin,
							:l_instr_name:i_instr_name,
							:l_ins_opnqty:i_ins_opnqty,
							:l_ins_opnval:i_ins_opnval,
							:l_ins_purqty:i_ins_purqty,
							:l_ins_purval:i_ins_purval,
							:l_ins_salqty:i_ins_salqty,
							:l_ins_salval:i_ins_salval,
							:l_ins_clsqty:i_ins_clsqty,
							:l_ins_closing_val:i_ins_closing_val,
							:l_ins_clsval:i_ins_clsval,
							/*:l_ins_clsval:i_ins_clsval,
							:l_ins_clsmktval:i_ins_clsmktval,*/
							:l_chr_prncap:i_chr_prncap,
							:l_chr_instr:i_chr_instr,
							:l_rep_type:i_rep_type);
					fflush(l_logfile); fprintf(l_logfile,"\nRahul ----> sqlca.sqlcode after Insert  %d\n",sqlca.sqlcode);
					IS_ANY_ORA_ERROR
						
					}
					else
					{
						fflush(l_logfile); fprintf(l_logfile,"Report is already Genrated\n");
					}
				}
			
			}
		if(strcmp(p_rep_name,"HYE") == 0)
			{
				EXEC SQL CLOSE instr_equt1;

				IS_ANY_ORA_ERROR
			}
			else
			{
				EXEC SQL CLOSE instr_ncur1;
				IS_ANY_ORA_ERROR
			}
	}	

			EXEC SQL CLOSE ccode_rept1;

			IS_ANY_ORA_ERROR


	RETURN_SUCCESS :
			#ifdef SYS_DEBUG
					fflush(l_logfile); fprintf(l_logfile,"Leaving Function Half_Mod_ClntDet with success\n");
					printf("Leaving Function Half_Mod_ClntDet with success\n");
			#endif
			fclose(l_ptr_hbrokers_handoff_file);
			free(l_intl_rept_struct_ha);
			fclose(l_ptr_ini_file);
			return(APL_SUCCESS);

	RETURN_FAILURE :

			#ifdef SYS_DEBUG
				fflush(l_logfile); fprintf(l_logfile,"Leaving Function Half_Mod_ClntDet with error\n");
				printf("Leaving Function Half_Mod_ClntDet with errors\n");
			#endif
			fclose(l_ptr_hbrokers_handoff_file);
			free(l_intl_rept_struct_ha);

 }

/* End -Rahul */



/******* Quarterly Report - Rahul 09/11/2006 ******/
int Quat_Mod_ClntDet(char *p_rep_name,char *p_chr_mnyy_dt,char **argv,FILE *l_logfile,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	/*Variable Declaration start */
	char  chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char  chr_l_hbrokers_handoff_file_name[FILENAME_LEN_A]   = APL_NULL_STRING;
	char  chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	char	chr_l_sysdate[APL_DATE_LEN]	=	APL_NULL_STRING;
	char l_chr_month[3] = APL_NULL_STRING;
	char l_chr_yr[3] = APL_NULL_STRING;
	char	chr_l_curr_datetime[APL_DATE_LEN]	=	APL_NULL_STRING;

   char l_first_day[20] = APL_NULL_STRING;
   char l_last_day[20] = APL_NULL_STRING;
   char f_last_day[20] = APL_NULL_STRING;
   char f_first_day[20] = APL_NULL_STRING;

	int l_detail_pur_cnt = 0;
	short i_detail_pur_cnt = 0.0;
	double l_detail_pur_qty = 0.0;
	short i_detail_pur_qty = 0;
	double l_detail_pur_val = 0.0;
	short i_detail_pur_val = 0;

	int l_detail_sal_cnt = 0;
	short i_detail_sal_cnt = 0.0;
	double l_detail_sal_qty = 0.0;
	short i_detail_sal_qty = 0;
	double l_detail_sal_val = 0.0;
	short i_detail_sal_val = 0;

	double l_detail_tot_qty  = 0.0;
	double l_detail_tot_val  = 0.0;
	int l_detail_tot_cnt = 0;

	int l_delay_pur_cnt = 0;
	short i_delay_pur_cnt = 0.0;
	double l_delay_pur_qty = 0.0;
	short i_delay_pur_qty = 0;
	double l_delay_pur_val = 0.0;
	short i_delay_pur_val = 0;

	int l_delay_sal_cnt = 0;
	short i_delay_sal_cnt = 0.0;
	double l_delay_sal_qty = 0.0;
	short i_delay_sal_qty = 0;
	double l_delay_sal_val = 0.0;
	short i_delay_sal_val = 0;

	double l_delay_tot_qty  = 0.0;
	double l_delay_tot_val  = 0.0;
	int l_delay_tot_cnt = 0;

	int l_notset_pur_cnt = 0;
	short i_notset_pur_cnt = 0.0;
	double l_notset_pur_qty = 0.0;
	short i_notset_pur_qty = 0;
	double l_notset_pur_val = 0.0;
	short i_notset_pur_val = 0;

	int l_notset_sal_cnt = 0;
	short i_notset_sal_cnt = 0.0;
	double l_notset_sal_qty = 0.0;
	short i_notset_sal_qty = 0;
	double l_notset_sal_val = 0.0;
	short i_notset_sal_val = 0;

	double l_notset_tot_qty  = 0.0;
	double l_notset_tot_val  = 0.0;
	int l_notset_tot_cnt   = 0;

	int l_notset_bf_cnt = 0;
	short i_notset_bf_cnt = 0.0;
	double l_notset_bf_qty = 0.0;
	short i_notset_bf_qty = 0;
	double l_notset_bf_val = 0.0;
	short i_notset_bf_val = 0;

	FILE  *l_ptr_ini_file = NULL;
	INTL_REPT_STRUCT_H  *l_intl_rept_struct_ha  =NULL;
	FILE  *l_ptr_hbrokers_handoff_file  =  NULL;
	
	/* End */

	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	memset(chr_l_hbrokers_handoff_file_name, NULL, sizeof(chr_l_hbrokers_handoff_file_name));
	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);
	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	
	printf("Entered function Quat_Mod_ClntDet");
	fflush(stdout);
	fflush(l_logfile); fprintf(l_logfile,"Entered function Quat_Mod_ClntDet\n");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		return(APL_FAILURE);
	if (CO_ReadToken(l_ptr_ini_file,"INTL_REP_PATH_F",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		return(APL_FAILURE);

	EXEC SQL SELECT TO_CHAR(ADD_MONTHS(to_date(:p_chr_mnyy_dt,'MMYYYY'),2),'YYYYMM'),
			 TO_CHAR(ADD_MONTHS(to_date(:p_chr_mnyy_dt,'MMYYYY'),2),'MM'),
			 TO_CHAR(ADD_MONTHS(to_date(:p_chr_mnyy_dt,'MMYYYY'),2),'YY') 
		INTO :chr_l_sysdate,:l_chr_month,:l_chr_yr FROM DUAL;
	IS_ANY_ORA_ERROR
	
	strcpy(chr_l_hbrokers_handoff_file_name,chr_l_handoff_dir);
	if(strcmp(p_rep_name,"HYE") == 0)
	{
		strcat(chr_l_hbrokers_handoff_file_name,"QTE");
	}
	else
	{
		strcat(chr_l_hbrokers_handoff_file_name,"QTD");
	}

	strcat(chr_l_hbrokers_handoff_file_name,l_chr_month);
	strcat(chr_l_hbrokers_handoff_file_name,l_chr_yr);
	strcat(chr_l_hbrokers_handoff_file_name,".txt");
	if ((l_ptr_hbrokers_handoff_file = fopen(chr_l_hbrokers_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);
	
	fflush(l_logfile); fprintf(l_logfile,"Report File Genrated is |%s|\n",chr_l_hbrokers_handoff_file_name);

	memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));
	strcpy(l_intl_rept_struct_ha->report_name, chr_l_hbrokers_handoff_file_name+strlen(chr_l_handoff_dir));
	strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
	strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	l_intl_rept_struct_ha->report_width = 100;
	strcpy(l_intl_rept_struct_ha->task_desc, p_intl_envdatastruct_h->processtion);
	strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
	strcpy(l_intl_rept_struct_ha->usr, p_intl_envdatastruct_h->usr);


	if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
		APL_GOBACK_FAIL

		EXEC SQL SELECT TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(:p_chr_mnyy_dt,'MMYYYY'), +2)),'DD/MM/YYYY')  INTO :l_last_day FROM DUAL;
    	   IS_ANY_ORA_ERROR
		strcpy(f_last_day,l_last_day);
	
		EXEC SQL SELECT to_char((last_day(to_date(:p_chr_mnyy_dt,'MMYYYY'))- to_number(to_char(last_day(to_date(:p_chr_mnyy_dt,'MMYYYY')),'DD'))+1),'DD/MM/YYYY') INTO :l_first_day FROM DUAL;
			IS_ANY_ORA_ERROR
		strcpy(f_first_day,l_first_day);
		fflush(l_logfile); fprintf(l_logfile,"First Date -->|%s|\nLast Date -->|%s| \n",l_first_day,l_last_day);
		
		/***************** Calculation for Details Settelment ********************/
		fflush(l_logfile); fprintf(l_logfile,"\n**********	Calculation for Details Settelment ****************\n");	
/*		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)/10000000),4)*/
		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
		INTO :l_detail_pur_cnt:i_detail_pur_cnt,
                			 :l_detail_pur_qty:i_detail_pur_qty,
						     :l_detail_pur_val:i_detail_pur_val
					FROM DL_DEAL
					WHERE /*SEBI_REPORTED = 'Y' AND*/
					DEAL_CD IN ('2','4') AND  DEAL_STAT = 'CS'
					AND (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%')AND
					TRUNC(SETL_DATE) BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
		IS_ANY_ORA_ERROR
		fflush(l_logfile); fprintf(l_logfile,"Details : Purchase qty & value l_detail_pur_qty -->|%lf| & l_detail_pur_val-->|%lf|\n",l_detail_pur_qty,l_detail_pur_val);		

	/*	EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)/10000000),4)*/
		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
					INTO :l_detail_sal_cnt:i_detail_sal_cnt,
                			 :l_detail_sal_qty:i_detail_sal_qty,
						     :l_detail_sal_val:i_detail_pur_val
					FROM DL_DEAL
					WHERE /*SEBI_REPORTED = 'Y' AND*/
					DEAL_CD IN ('1','3') AND DEAL_STAT = 'CS'
					AND (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%')AND
					TRUNC(SETL_DATE) BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
		IS_ANY_ORA_ERROR
		fflush(l_logfile); fprintf(l_logfile,"Details : Sale qty & value l_detail_sal_qty -->|%lf| & l_detail_sal_val-->|%lf|\n",l_detail_sal_qty,l_detail_sal_val);
		
		l_detail_tot_qty  = l_detail_pur_qty + l_detail_sal_qty;
		l_detail_tot_val  =  l_detail_pur_val + l_detail_sal_val;
		l_detail_tot_cnt  =  l_detail_pur_cnt + l_detail_sal_cnt;
		fflush(l_logfile); fprintf(l_logfile,"Details : Total count & qty & value l_detail_tot_cnt --> |%d| &  l_detail_tot_qty -->|%lf| & l_detail_tot_val-->|%lf|\n",l_detail_tot_cnt,l_detail_tot_qty,l_detail_tot_val);


		/**********	Calculation for Delayed Settelment ****************/
		fflush(l_logfile); fprintf(l_logfile,"\n**********	Calculation for Delayed Settelment ****************\n");	
/*		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)/10000000),4)*/
		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
					INTO  :l_delay_pur_cnt:i_delay_pur_cnt,
                			 :l_delay_pur_qty:i_delay_pur_qty,
						     :l_delay_pur_val:i_delay_pur_val
					FROM DL_DEAL
					WHERE /*SEBI_REPORTED = 'Y' AND*/
							  DEAL_CD IN ('2','4') AND DEAL_STAT = 'CS'
							  AND (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%')AND
				             TRUNC(INSTRUMENT_DT) > TRUNC(SETL_DATE) AND
							  TRUNC(SETL_DATE) BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
		IS_ANY_ORA_ERROR
		fflush(l_logfile); fprintf(l_logfile,"Delayed Settelment : Purchase qty & value l_delay_pur_qty -->|%lf| & l_delay_pur_val-->|%lf|\n",l_delay_pur_qty,l_delay_pur_val);	
           
/*        EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)/10000000),4)*/
        EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
		INTO  :l_delay_sal_cnt:i_delay_sal_cnt,
                			 :l_delay_sal_qty:i_delay_sal_qty,
						     :l_delay_sal_val:i_delay_pur_val
							  FROM DL_DEAL
				  WHERE /*SEBI_REPORTED = 'Y' AND*/
							  DEAL_CD IN ('1','3') AND DEAL_STAT = 'CS'
							  AND (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%')AND
			                  TRUNC(MONEY_SETL_DT) > TRUNC(SETL_DATE) AND
							  TRUNC(SETL_DATE) BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
		IS_ANY_ORA_ERROR
		fflush(l_logfile); fprintf(l_logfile,"Delayed Settelment : Sale qty & value l_delay_sal_qty -->|%lf| & l_delay_sal_val-->|%lf|\n",l_delay_sal_qty,l_delay_sal_val);		

        l_delay_tot_qty  = l_delay_pur_qty + l_delay_sal_qty;
		l_delay_tot_val  =  l_delay_pur_val + l_delay_sal_val;
		l_delay_tot_cnt  = l_delay_pur_cnt + l_delay_sal_cnt;
		fflush(l_logfile); fprintf(l_logfile,"Delayed Settelment :  Total Count & qty & value l_delay_tot_cnt ---|%d| & l_delay_tot_qty -->|%lf| & l_delay_tot_val-->|%lf|\n",l_delay_tot_cnt,l_delay_tot_qty,l_delay_tot_val);        


		/**********	Calculation for Not Setteled Trade ****************/
		fflush(l_logfile); fprintf(l_logfile,"\n**********	Calculation for Not Setteled Trade ****************\n");	
/*		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)/10000000),4)*/
		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
		INTO :l_notset_pur_cnt:i_notset_pur_cnt,
                			 :l_notset_pur_qty:i_notset_pur_qty,
						     :l_notset_pur_val:i_notset_pur_val
						  FROM DL_DEAL
						  WHERE /*SEBI_REPORTED = 'Y' AND*/
						  DEAL_CD IN ('2','4') AND  DEAL_STAT NOT IN ('CS','UU') AND
						  (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%')AND
						  TRUNC(SETL_DATE) BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
		IS_ANY_ORA_ERROR
		fflush(l_logfile); fprintf(l_logfile,"Not Setteled Trade : Purchase qty & value l_notset_pur_qty -->|%lf| & l_notset_pur_val-->|%lf|\n",l_notset_pur_qty,l_notset_pur_val);	

/*		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)/10000000),4)*/
		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
		INTO :l_notset_sal_cnt:i_notset_sal_cnt,
                			 :l_notset_sal_qty:i_notset_sal_qty,
						     :l_notset_sal_val:i_notset_sal_val
						  FROM DL_DEAL
						  WHERE /*SEBI_REPORTED = 'Y' AND*/
						  DEAL_CD IN ('1','3') AND  DEAL_STAT NOT IN ('CS','UU') AND 
						  (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%')AND
						  TRUNC(SETL_DATE) BETWEEN TO_DATE(:f_first_day) AND TO_DATE(:f_last_day) + 1;
		IS_ANY_ORA_ERROR
		fflush(l_logfile); fprintf(l_logfile,"Not Setteled Trade : Sale qty & value l_notset_sal_qty -->|%lf| & l_notset_sal_val-->|%lf|\n",l_notset_sal_qty,l_notset_sal_val);		

        l_notset_tot_qty  = l_notset_pur_qty + l_notset_sal_qty;
		l_notset_tot_val  =  l_notset_pur_val + l_notset_sal_val;
		l_notset_tot_cnt  =  l_notset_pur_cnt + l_notset_sal_cnt;
		fflush(l_logfile); fprintf(l_logfile,"Delayed Settelment :  Total count & qty & value l_notset_tot_cnt -- > |%d| & l_delay_tot_qty -->|%lf| & l_delay_tot_val-->|%lf|\n",l_notset_tot_cnt,l_notset_tot_qty,l_notset_tot_val);        

		/**********	Calculation for B/F Trade ****************/
		fflush(l_logfile); fprintf(l_logfile,"\n**********	Calculation for BF Trade ****************\n");	
/*		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)/10000000),4)*/
		EXEC SQL SELECT COUNT(*),ROUND((nvl(SUM(QTY),0)),2),ROUND((nvl(SUM(AMOUNT),0)),2)
					INTO :l_notset_bf_cnt:i_notset_bf_cnt,
                			 :l_notset_bf_qty:i_notset_bf_qty,
						     :l_notset_bf_val:i_notset_bf_val
						  FROM DL_DEAL
						  WHERE /*SEBI_REPORTED = 'Y' AND*/
						  DEAL_STAT NOT IN ('CS','UU')
						  AND TRUNC(SETL_DATE) <= TO_DATE (:f_last_day)  AND
						  (IDENTIY_NO NOT LIKE '%RIGHTS%' AND IDENTIY_NO NOT LIKE '%CARTAP%');

		IS_ANY_ORA_ERROR
		fflush(l_logfile); fprintf(l_logfile,"BF Trade :  qty & value l_notset_bf_qty -->|%lf| & l_notset_bf_val-->|%lf|\n",l_notset_bf_qty,l_notset_bf_val);		

		/********** Display data in Report file ****************/
		fflush(l_logfile); fprintf(l_logfile,"\n**********	Display data in  Report file ****************\n");	
		fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"0|0.00|0|0.00|%d|%.2lf\n",l_notset_bf_cnt,l_notset_bf_val );
		fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%d|%.2lf|%d|%.2lf|%d|%.2lf\n",l_detail_pur_cnt,l_detail_pur_val,l_delay_pur_cnt,l_delay_pur_val,l_notset_pur_cnt,l_notset_pur_val );
		fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%d|%.2lf|%d|%.2lf|%d|%.2lf\n",l_detail_sal_cnt,l_detail_sal_val,l_delay_sal_cnt,l_delay_sal_val,l_notset_sal_cnt,l_notset_sal_val );
		fflush(l_ptr_hbrokers_handoff_file); fprintf(l_ptr_hbrokers_handoff_file,"%d|%.2lf|%d|%.2lf|%d|%.2lf\n",l_detail_tot_cnt,l_detail_tot_val,l_delay_tot_cnt,l_delay_tot_val,l_notset_tot_cnt,l_notset_tot_val );

	RETURN_SUCCESS :
			#ifdef SYS_DEBUG
					fflush(l_logfile); fprintf(l_logfile,"Leaving Function Half_Mod_ClntDet with success\n");
					printf("Leaving Function Half_Mod_ClntDet with success\n");
			#endif
			fclose(l_ptr_hbrokers_handoff_file);
			free(l_intl_rept_struct_ha);
			fclose(l_ptr_ini_file);
			return(APL_SUCCESS);

	RETURN_FAILURE :

			#ifdef SYS_DEBUG
				fflush(l_logfile); fprintf(l_logfile,"Leaving Function Half_Mod_ClntDet with error\n");
				printf("Leaving Function Half_Mod_ClntDet with errors\n");
			#endif
			fclose(l_ptr_hbrokers_handoff_file);
			free(l_intl_rept_struct_ha);

 }
/* End -Rahul */


main(int argc,char **argv)
{

#define FIR_QUATER "04"
#define SEC_QUATER "07" 
#define THD_QUATER "10"
#define FTH_QUATER "01"
#define FIR_HALF "04"
#define SEC_HALF "10"

#define APL_MON_HLF1 "HLF1"
#define APL_MON_HLF2 "HLF2"
#define APL_MON_01 "JAN"
#define APL_MON_02 "FEB"
#define APL_MON_03 "MAR"
#define APL_MON_04 "APR"
#define APL_MON_05 "MAY"
#define APL_MON_06 "JUN"
#define APL_MON_07 "JUL"
#define APL_MON_08 "AUG"
#define APL_MON_09 "SEP"
#define APL_MON_10 "OCT"
#define APL_MON_11 "NOV"
#define APL_MON_12 "DEC"
#define APL_MONTH_JAN "01"
#define APL_MONTH_FEB "02"
#define APL_MONTH_MAR "03"
#define APL_MONTH_APR "04"
#define APL_MONTH_MAY "05"
#define APL_MONTH_JUN "06"
#define APL_MONTH_JUL "07"
#define APL_MONTH_AUG "08"
#define APL_MONTH_SEP "09"
#define APL_MONTH_OCT "10"
#define APL_MONTH_NOV "11"
#define APL_MONTH_DEC "12"
#define APL_MON_QTR1 "QTR1"
#define APL_MON_QTR2 "QTR2"
#define APL_MON_QTR3 "QTR3"
#define APL_MON_QTR4 "QTR4"


   struct sqlca sqlca;
   /*DEBUG_INFO_STRUCT_H *l_debug_info_ptr  =  NULL;*/
	/*Start Changes - Rahul */
/*	DEBUG_INFO_STRUCT_H   *l_debug_info_struct = NULL, **l_debug_info_ptr = &l_debug_info_struct;
	l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *));
*/	/*End Changes -Rahul */

	DEBUG_INFO_STRUCT_H *l_debug_info_ptr = (DEBUG_INFO_STRUCT_H *) NULL;
	
   INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;

   FILE  *l_finifile                      	=  NULL;
   FILE  *l_logfile                       	=  NULL;
   FILE  *l_repfile                       	=  NULL;

   char  chr_l_logfile_name[PATH_LENGTH]      	=  APL_NULL_STRING;
   char  chr_uname[APL_USERID_LEN]            	=  APL_NULL_STRING;
   char  chr_custody_id_b[APL_USERID_LEN]           	=  APL_NULL_STRING;
   char  chr_passwd[APL_PASSWD_LEN]           	=  APL_NULL_STRING;
   char  chr_l_logdir[PATH_LENGTH]            	=  APL_NULL_STRING;
   char  chr_l_inifile[PATH_LENGTH]           	=  APL_NULL_STRING;
	/*char  chr_l_ca_id[CORP_ID_LEN]						=	APL_NULL_STRING;*/		
	/*char  chr_l_h_aentitl_account[APL_CLIENT_LENGTH]=	APL_NULL_STRING;  */
	char  chr_l_h_cname[66]								=	APL_NULL_STRING;
   char 	**temp 										=	NULL;
   char 	**chr_temp1 										=	NULL;
   char  chr_l_buf[BUFFER_LEN]                    =  APL_NULL_STRING;
   /*char  chr_l_sel_type[2]                       =  APL_NULL_STRING; */
	/*char	chr_l_sr_no[5]									= APL_NULL_STRING;*/

   int   int_num 											=	0;
   int   int_l_retval                         	=  0;
	int   count 										= 	0;
	int   int_page											=	0;
	short l_i_cname									=	0;
	char l_sebi_rep_type[5]  = APL_NULL_STRING;  /* SEBI Code chnage - Rahul */
	EXEC SQL VAR chr_uname  IS STRING;
   EXEC SQL VAR chr_custody_id_b IS STRING;
   EXEC SQL VAR chr_passwd IS STRING;
	EXEC SQL VAR chr_l_h_cname				IS STRING;
   sqlca.sqlcode = 0;
      char chr_rep_name[10] = APL_NULL_STRING;
      char chr_rep_date[APL_DATE_LEN] = APL_NULL_STRING;//Added for DDR,DTR xml report generation
      char chr_from_date[11] = APL_NULL_STRING;
      char chr_to_date[11] = APL_NULL_STRING;
      char chr_daily_dt[20] = APL_NULL_STRING;
	   char chr_yymn_dt[7] = APL_NULL_STRING; 
	   char chr_mnyy_dt[7] = APL_NULL_STRING; 
	   char chr_mnyy_det[7] = APL_NULL_STRING; 
		char Quat_No[5] = APL_NULL_STRING;
		char quat_yr[4] = APL_NULL_STRING;
		char chr_mon_det[4] = APL_NULL_STRING;
		char chr_myr_det[7] = APL_NULL_STRING;
		char rep_perd[5] = APL_NULL_STRING;

       /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta -- Start*/	
        /*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
	char l_rpt_from_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char l_rpt_to_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char l_rpt_for_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char l_rpt_for_dt_temp[APL_DATE_LEN] = APL_NULL_STRING;
	int l_date_diff = 0;
	int l_hol_exists = 0;
	short i_rpt_for_dt_temp = 0;
	char l_bnk_hol_ind = 'T';
	int l_wh_count = 0;
	short i_wh_count = 0;
	/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
	//Added by supriya for DTR,DDR xml report genration start
	 pid_t h_proc_id;
	 char l_gen_xmlrpt[1000] = APL_NULL_STRING;
	 int l_i_retval = 0;
	 char l_intl_root_path1[200] = APL_NULL_STRING;
	 //Added by supriya for DTR,DDR xml report genration end
	
	char l_max_process_date[APL_DATE_LEN] = APL_NULL_STRING; /*ISKB_4554 -- Additional chngs for RBi XML Report Format -- Shweta*/
	EXEC SQL VAR l_max_process_date IS STRING;  /*ISKB_4554 -- Additional chngs for RBi XML Report Format -- Shweta*/

	memset(chr_l_h_cname,NULL,66);
   strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
   strcat(chr_l_inifile,"intl_sun.cfg");

	l_debug_info_ptr = (DEBUG_INFO_STRUCT_H *)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *));
	
	if ( ( l_finifile=fopen(chr_l_inifile,"r") ) == NULL)
   {
      APL_GOBACK_FAIL
   }

   APL_FETCH_DB_LOGIN_DETAILS(l_finifile, chr_custody_id_b, chr_uname, chr_passwd, APL_OUT_FILE, &l_debug_info_ptr)

   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;

   if (sqlca.sqlcode)
   {
      APL_GOBACK_FAIL
   }
   else
   {
		if (APL_FAILURE == CO_Rtv_RptFileName( "2M",
                                          APL_LOGFILE_DESC,
                                          100,
                                          argv[5],
                                          argv,
                                          &l_logfile,
                                          &l_debug_info_ptr ) )
      {
      	APL_GOBACK_FAIL
      }


     if(BT_Status_Update(argv[0],
				             argv[1],
						       argv[2],
						       APL_STARTED_STATUS,
						       l_debug_info_ptr) ==APL_FAILURE)
      {
	       printf("Codition Failed\n");
		    APL_GOBACK_FAIL
		}			  

       printf("check status in report Gener\n");

		EXEC SQL COMMIT WORK;

      if (sqlca.sqlcode)
      {
         CO_ProcMonitor(l_logfile, "Could not commit after opening chr_log file", NULL, NULL);
         APL_GOBACK_FAIL
      }

      if (APL_FAILURE == CO_RtvSysParams(&l_debug_info_ptr))
      {
         CO_ProcMonitor(l_logfile, "Error In Getting System Parameters", NULL, NULL);
         CO_PrnErr(l_debug_info_ptr);
         APL_GOBACK_FAIL
      }
      strcpy(chr_rep_date, argv[2]);//Added for DDR,DTR xml report generation
      strcpy(l_intl_env_data_h.usr, argv[3]);
      strcpy(l_intl_env_data_h.h_mode, argv[4]);
      strcpy(l_intl_env_data_h.processtion, argv[5]);
      strcpy(l_intl_env_data_h.auth_req, argv[6]);
      strcpy(l_intl_env_data_h.subprocess, argv[7]);
      strcpy(l_intl_env_data_h.h_process, argv[8]);

	   if (APL_FAILURE == CO_SplitStr( argv[9],
                                       '|',
                                       &int_num,
                                       &temp ))
      {
      	CO_ProcMonitor(l_logfile, "Failure from CO_SplitStr", NULL, NULL);
         APL_GOBACK_FAIL
      }
		/*else	
			CO_ProcMonitor(l_logfile,"Successful in CO_SplitStr",NULL,NULL);*/
	
		
		if(int_num == 0)
		{
			CO_ProcMonitor(l_logfile,"Improper Number Of Arguments",NULL,NULL);
			APL_GOBACK_FAIL
		}
		//Added by supriya for DDR and DTR xml report genration start
		memset(chr_seq_no,APL_NULL_CHAR,sizeof(chr_seq_no));
		EXEC SQL SELECT (BATCH_NO_DL_REG.NEXTVAL) INTO :chr_seq_no FROM  DUAL;
		printf("xml reg report seq |%s| ",chr_seq_no);


   strcpy(chr_rep_name,temp[0]);
	strcpy(rep_perd,temp[1]);

	  
	if(strcmp(chr_rep_name,"DTR")== 0)
			 { 
             strcpy(chr_rep_name,temp[0]);
				 strcat(chr_rep_name,APL_NULL_STRING);
             strcpy(chr_from_date,temp[1]);
				 printf("from date from FE ==|%s|\n",chr_from_date);
				 strcat(chr_from_date,APL_NULL_STRING);
				 strcpy(chr_to_date,chr_from_date);
				strcpy(l_sebi_rep_type,temp[2]); /* SEBI Code chnage - Rahul */ 
	
            if (APL_FAILURE == Daily_FRep_ClntInst(l_sebi_rep_type,chr_rep_name,chr_from_date,chr_to_date,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
            {
					sprintf(chr_l_buf,"Unsuccessful in DTR_Mod_ClntInst\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_FAIL
            }
				else
				{
					sprintf(chr_l_buf,"Successful in DTR_Mod_ClntInst \n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				}	
				strcpy(chr_rep_name,"DTS");//supriya
          }
          //else supriya 
	  if(strcmp(chr_rep_name,"DDR") == 0)
	       {
		           strcpy(chr_rep_name,temp[0]);
		           strcat(chr_rep_name,APL_NULL_STRING);
		           strcpy(chr_from_date,temp[1]);
		           strcat(chr_rep_name,APL_NULL_STRING);
		           strcpy(chr_to_date,chr_from_date);
					  strcpy(l_sebi_rep_type,APL_NULL_STRING);
					  strcpy(l_sebi_rep_type,temp[2]); /* SEBI Code chnage - Rahul */
					  
           if (APL_FAILURE == Daily_FRep_ClntInst(l_sebi_rep_type,chr_rep_name,chr_from_date,chr_to_date,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
	        {
            sprintf(chr_l_buf,"Unsuccessful in DDR_Mod_ClntInst\n");
	         CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
		      APL_GOBACK_FAIL
		     }
			  else
           {
		       sprintf(chr_l_buf,"Successful in DDR_Mod_ClntInst \n");
			    CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
			  }
			  strcpy(chr_rep_name,"DDS");//supriya
			 }
       //else supriya 
			 if (strcmp(chr_rep_name,"DTS") == 0) 
          {
				    strcpy(chr_daily_dt,temp[1]);

         if (APL_FAILURE == Sum_FRep_ClntInst(chr_rep_name,chr_daily_dt,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
            {
					sprintf(chr_l_buf,"Unsuccessful in DTS_Mod_ClntInst\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_FAIL
            }
				else
				{
					sprintf(chr_l_buf,"Successful in DTS_Mod_ClntInst \n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				}
				
          }
          // else supriya
			 if (strcmp(chr_rep_name,"DDS") == 0) 
          {
				    strcpy(chr_daily_dt,temp[1]);

         if (APL_FAILURE == Sum_FRep_ClntInst(chr_rep_name,chr_daily_dt,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
            {
					sprintf(chr_l_buf,"Unsuccessful in DDS_Mod_ClntInst\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_FAIL
            }
				else
				{
					sprintf(chr_l_buf,"Successful in DDS_Mod_ClntInst \n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				}
			 }	
         // else supriya
       	 if (strcmp(chr_rep_name,"RBI") == 0)
		 {
			strcpy(chr_daily_dt,temp[1]);
			printf("Before passing to Function==|%s|\n",chr_daily_dt);
			/*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta -- Start*/	
			/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - START*/
			IF_COND_EXISTS("RBI_LEC_RPT","MULTIPLE")
			{
					g_bnk_ind = 1;
			}
			else
				g_bnk_ind = 0;
			strcpy(l_rpt_to_dt,temp[1]);

			sprintf(chr_l_buf,"------------------ Parameters Passed for running Daily RBI LEC Report -------------------------------------------- \n");
			CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
			g_for_dt_cnt = 0;  /*ISKB_4554  Added to handle multiple times RBI Report Generation - Shweta - 20092011*/ /* IUT Fix - Bageshri - ISKB_4554 */

			if(g_bnk_ind == 0)
			{
				sprintf(chr_l_buf,"\n Report Date |%s|\n",l_rpt_to_dt);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
				sprintf(chr_l_buf,"------------------------------------------------------------------------------------------------------------------ \n");
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

				l_bnk_hol_ind = 'T';		/*Some dummy value*/
				g_for_dt_cnt++;  /*ISKB_4554  Added to handle multiple times RBI Report Generation - Shweta - 20092011*/ /* IUT Fix - Bageshri - ISKB_4554 */
			/* if (APL_FAILURE == RBI_Mod_ClntInst(chr_rep_name,chr_daily_dt,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))*/ //shweta
				if (APL_FAILURE == RBI_Mod_ClntInst(chr_rep_name,chr_daily_dt,l_rpt_to_dt,l_bnk_hol_ind,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
				{
						sprintf(chr_l_buf,"Unsuccessful in RBI_Mod_ClntInst\n");
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					APL_GOBACK_FAIL
				}
					else
					{
						sprintf(chr_l_buf,"Successful in RBI_Mod_ClntInst \n");
				   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					APL_GOBACK_SUCCESS
				}

			}
			else
			{
				l_bnk_hol_ind = 'N';
				
				/*If the Deals From Date is not avalable from FE*/
				/*Additional Chngs for RBI FII XML Report Format - 30082011 - Shweta */
				if(!strcmp(temp[2],APL_NULL_STRING))
				{
				   EXEC SQL SELECT TO_CHAR(MAX(PROCESS_DATE),'DD/MM/YYYY') INTO :l_max_process_date  FROM MT_RBI_REGREP_TRANS_LIST,PRO_SYS_DATE 
				   WHERE PROCESS_DATE < TO_DATE(TO_CHAR(SYS_DATE,'DD/MM/YYYY')||' 00:00:00','DD/MM/YYYY HH24:MI:SS');

				   IS_ANY_ORA_ERROR
				   strcpy(l_rpt_from_dt,l_max_process_date);
				   strcpy(l_rpt_for_dt,l_max_process_date);   
				}
				
				else
				{
					sprintf(chr_l_buf,"Deals From Date |%s|\n",l_rpt_from_dt);
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

				strcpy(l_rpt_from_dt,temp[2]);
				strcpy(l_rpt_for_dt,temp[2]);
				}
				
				sprintf(chr_l_buf,"Deals To Date |%s|\n",l_rpt_to_dt);
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	

				sprintf(chr_l_buf,"---------------------------------------------------------------------------------------------------- \n");
				CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
				/*ISKB_4554  -SBI -  Additional Changes in RBI LEC XML Report - End - Shweta*/			

		    
				/*If the To Date is system date then the report should not be generated for that day*/
				EXEC SQL SELECT TO_CHAR(DECODE(
						TO_DATE(:l_rpt_to_dt,'DD/MM/YYYY'),TRUNC(SYS_DATE),TO_DATE(:l_rpt_to_dt,'DD/MM/YYYY')-1,
						TO_DATE(:l_rpt_to_dt,'DD/MM/YYYY')),'DD/MM/YYYY')
					INTO :l_rpt_to_dt
					FROM PRO_SYS_DATE;
				IS_ANY_ORA_ERROR
				
				/*To take the diff between two dates and call the fn that number of times by assigning value to l_rpt_for_dt to be passed to fn*/
				if(APL_FAILURE == CO_Pro_DateComp(l_rpt_from_dt,l_rpt_to_dt,&l_date_diff,l_debug_info_ptr))
				{
					sprintf(chr_l_buf,"Error during date comparison for RBI Report Generation\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					APL_GOBACK_FAIL
				}
				
				printf("Reports to be generated for deals not reported between |%s| and |%s|\n",l_rpt_from_dt,l_rpt_to_dt);
				printf("Date diff between two dates is |%d|\n",l_date_diff);

				while(l_date_diff >= 0)
				{
					/*To find out if it is a weekly off and planned holiday with trading holiday*/
					/*EXEC SQL SELECT COUNT(*) into :l_wh_count:i_wh_count FROM MT_HOLIDAY
						WHERE ((H_CLASS = 'WH' AND HOL_IND = 'Y') OR (H_CLASS = 'PH' AND EXCH_CODE IS NOT NULL))
						AND TRUNC(H_DATE) = TO_DATE(:l_rpt_for_dt,'DD/MM/YYYY');*/

					/*Commented and re-written for RBI XML report format changes --ISKB_4554 - Shweta*/

					/*ISKB_4554  - 16092011 - Shweta - Start*/
				/*	EXEC SQL SELECT COUNT(*) into :l_wh_count:i_wh_count  FROM DL_DEAL
					WHERE DL_CLASS = '1'  AND DEAL_STAT not in ('UU','DU')
					AND CLH_FLG = 'C'
					AND DEAL_DATE BETWEEN 
					TO_DATE(:l_rpt_for_dt ||' 00:00:00','DD/MM/YYYY HH24:MI:SS')  
					AND TO_DATE(:l_rpt_for_dt ||' 23:59:59','DD/MM/YYYY HH24:MI:SS'); */
					/*ISKB_4554  - 16092011 - Shweta - End*/
	                             /*Retro from ICICI(IB_5067 / IB_5106) --replaced the above query Starts*/
                                        EXEC SQL SELECT COUNT(*) into :l_wh_count:i_wh_count  FROM MT_HOLIDAY  
                                         WHERE status='AA' AND EXCH_CODE IN ('NSE','BSE','MCS')  
                                          AND H_DATE BETWEEN  		                          TO_DATE(:l_rpt_for_dt ||' 00:00:00','DD/MM/YYYY HH24:MI:SS')  
					AND TO_DATE(:l_rpt_for_dt ||' 23:59:59','DD/MM/YYYY HH24:MI:SS');
                                       IS_ANY_ORA_ERROR // Retro from ICICI(IB_5067 / IB_5106) --replaced the above query Ends*/

			/*	Priyanka - retro done from ICICI -IB_6045
			if(l_wh_count == 2) // Retro from ICICI- IB_5067 / IB_5106( l_wh_count == 0)*/
				if(l_wh_count > 0)//Priyanka - retro done from ICICI -IB_6045
				{
					printf("\nSkipping For Date |%s|",l_rpt_for_dt);
					printf("\n*******Exchange Holiday*******\n");
					sprintf(chr_l_buf," Date |%s| is Exchange Holiday, so report file is not generated for this date.\n",l_rpt_for_dt);
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);	
				}
				else
				{
					/*Commented for ISKB_4554  - shweta - 12092011 -l_bnk_hol_ind no longer needed */
					/*if(APL_FAILURE == CO_Chk_Holiday(l_rpt_for_dt,&l_hol_exists,l_debug_info_ptr,APL_NULL_STRING))
				{
					sprintf(chr_l_buf,"Error during holiday check for RBI Report Generation\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
           			APL_GOBACK_FAIL
				}
				if(l_hol_exists == 1)
				{
					l_bnk_hol_ind = 'Y';	//Cursor query to fetch based on deal date and not dateof_input
					}*/
				/*Bank indicator to be passed to function so as to report deals on bank holidays*/
					g_for_dt_cnt++;  /*ISKB_4554  Added to handle multiple times RBI Report Generation - Shweta - 20092011*/
					if (APL_FAILURE == RBI_Mod_ClntInst(chr_rep_name,chr_daily_dt,l_rpt_for_dt,l_bnk_hol_ind,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
					{
						sprintf(chr_l_buf,"Unsuccessful in RBI_Mod_ClntInst\n");
						CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
						APL_GOBACK_FAIL
					}
					else
					{
						l_bnk_hol_ind = 'N';
						sprintf(chr_l_buf,"Successful in RBI_Mod_ClntInst \n");
					   CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					}
				}
									
				EXEC SQL SELECT TO_CHAR(TO_DATE(:l_rpt_for_dt,'DD/MM/YYYY')+1,'DD/MM/YYYY')
							INTO :l_rpt_for_dt_temp:i_rpt_for_dt_temp
							FROM DUAL;
				IS_ANY_ORA_ERROR

				if(sqlca.sqlcode == 0)
				{
					strcpy(l_rpt_for_dt,l_rpt_for_dt_temp);
					strcpy(l_rpt_for_dt_temp,"");
				}
		       else
				{
					sprintf(chr_l_buf,"Error during RBI Report Generation\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
           			APL_GOBACK_FAIL
				}
				/*If report for date is greater than report to date then break from loop*/
				if(APL_FAILURE == CO_Pro_DateComp(l_rpt_for_dt,l_rpt_to_dt,&l_date_diff,l_debug_info_ptr))
				{
					sprintf(chr_l_buf,"Error during date comparison for RBI Report Generation\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
					APL_GOBACK_FAIL
				}
            }
		/*Shweta - to check no records fetched in cursor - ISKB_4554 - Addtional RBI LEC Chngs - 28082011 - Start*/          
         if(g_for_loop_ctr == 0)
		  {
			EXEC SQL INSERT INTO MT_RBI_REGREP_TRANS_LIST(REPO_GEN_FLAG,PROCESS_DATE) VALUES ('Y',:argv[2]);			
		  }
		/*Shweta - to check no records fetched in cursor - ISKB_4554 - Addtional RBI LEC Chngs - 28082011 - End*/

		}
			/*HDFC ENH - RBI XML Format by Sana on 20-04-2011 - END*/
        /*ISKB_4554 -- Retro for RBI_LEC_XML_Rpt_Format -- 28072011 -- Shweta -- End*/	
				 } //Shweta
       
       //else supriya 
       if (strcmp(chr_rep_name,"MPR") == 0)
            { 
				    strcpy(chr_mon_det,temp[1]);
					 if (strcmp(APL_MON_01,chr_mon_det) == 0)
                 {
						  strcpy(chr_myr_det,APL_MONTH_JAN);
						  strcat(chr_myr_det,temp[2]);
					  }
					 else if (strcmp(APL_MON_02,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_FEB);
						  strcat(chr_myr_det,temp[2]);
					  }
                 else if (strcmp(APL_MON_03,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_MAR);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_04,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_APR);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_05,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_MAY);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_06,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_JUN);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_07,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_JUL);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_08,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_AUG);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_09,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_SEP);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_10,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_OCT);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_11,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_NOV);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_12,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_DEC);
						  strcat(chr_myr_det,temp[2]);
                 }
					  printf("Passing the DateMonth for Funtion ==|%s|\n",chr_myr_det);

         if (APL_FAILURE == MPR_Mod_ClntInst(chr_rep_name,chr_myr_det,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
            {
					sprintf(chr_l_buf,"Unsuccessful in MPR_Mod_ClntInst\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_FAIL
            }
				else
				{
					sprintf(chr_l_buf,"Successful in MPR_Mod_ClntInst \n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				}	
            }
           // else supriya
				if ((strcmp(chr_rep_name,"HYE") == 0) && ((strcmp(rep_perd,APL_MON_HLF1)== 0) ||(strcmp(rep_perd,APL_MON_HLF2) == 0)))
            { 
				    strcpy(Quat_No,temp[1]);
               if (strcmp(Quat_No,APL_MON_HLF1) == 0)
					{
						 strcpy(chr_mnyy_det,FIR_HALF);
						 strcpy(quat_yr,temp[2]);
						 strcat(chr_mnyy_det,quat_yr);
					}

               if (strcmp(Quat_No,APL_MON_HLF2) == 0)
					{
						 strcpy(chr_mnyy_det,SEC_HALF);
						 strcpy(quat_yr,temp[2]);
						 strcat(chr_mnyy_det,quat_yr);
					}

					 printf("HYE Half before passing to Function==|%s|\n",chr_mnyy_det);

         if (APL_FAILURE == Half_Mod_ClntDet(chr_rep_name,chr_mnyy_det,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
            {
					sprintf(chr_l_buf,"Unsuccessful in Half_Mod_ClntDet\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_FAIL
            }
				else
				{
					sprintf(chr_l_buf,"Successful in HYE_Mod_ClntInst \n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				}	
            }
          //  else supriya
				if ((strcmp(chr_rep_name,"HYD") == 0) && ((strcmp(rep_perd,APL_MON_HLF1)== 0) ||(strcmp(rep_perd,APL_MON_HLF2) == 0)))
            { 
					 strcpy(Quat_No,temp[1]);
					 printf("In HYD Quat no ==|%s|\n",Quat_No);
               if (strcmp(Quat_No,APL_MON_HLF1) == 0)
					{
						 printf("Insdie HYE REPORT\n");
						 strcpy(chr_mnyy_det,FIR_HALF);
						 strcpy(quat_yr,temp[2]);
						 printf("After Copy temp2==|%s|\n",quat_yr);
						 strcat(chr_mnyy_det,quat_yr);
						 printf("After add yr==|%s|\n",chr_mnyy_det);
					}
               if (strcmp(Quat_No,APL_MON_HLF2) == 0)
					{
						 strcpy(chr_mnyy_det,SEC_HALF);
						 strcpy(quat_yr,temp[2]);
						 strcat(chr_mnyy_det,quat_yr);
               }

					 printf("Before passing to Function==|%s|\n",chr_mnyy_det);

         if (APL_FAILURE == Half_Mod_ClntDet(chr_rep_name,chr_mnyy_det,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
            {
					sprintf(chr_l_buf,"Unsuccessful in Half_Mod_ClntDet\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_FAIL
            }
				else
				{
					sprintf(chr_l_buf,"Successful in Half_Mod_ClntDet\n"); 
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
				}	
            }
           // else supriya
				if ((strcmp(chr_rep_name,"HYE") == 0) && ((strcmp(rep_perd,APL_MON_QTR1)== 0) ||(strcmp(rep_perd,APL_MON_QTR2) == 0) || (strcmp(rep_perd,APL_MON_QTR3) == 0) || (strcmp(rep_perd,APL_MON_QTR4) == 0)))
             {
              strcpy(Quat_No,temp[1]);
              printf("Value of Quat No==|%s|\n",Quat_No);
              if(strcmp(Quat_No,"QTR1") == 0)
              {
                 strcpy(chr_mnyy_det,FIR_QUATER);
                 strcpy(quat_yr,temp[2]);
                 strcat(chr_mnyy_det,quat_yr);
              }
              if(strcmp(Quat_No,"QTR2") == 0)
              {
                strcpy(chr_mnyy_det,SEC_QUATER);
                strcpy(quat_yr,temp[2]);
                strcat(chr_mnyy_det,quat_yr);
              }
              if (strcmp(Quat_No,"QTR3") == 0)
              {
                strcpy(chr_mnyy_det,THD_QUATER);
                strcpy(quat_yr,temp[2]);
                strcat(chr_mnyy_det,quat_yr);
              }
             if (strcmp(Quat_No,"QTR4") == 0)
			    {
				     strcpy(chr_mnyy_det,FTH_QUATER);
				     strcpy(quat_yr,temp[2]);
				    strcat(chr_mnyy_det,quat_yr);
				 }	  
             printf("Before passing to Function==|%s|\n",chr_mnyy_det);
  
             if (APL_FAILURE == Quat_Mod_ClntDet(chr_rep_name,chr_mnyy_det,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
              {	
                printf("Inside the Quat Success status\n");
                sprintf(chr_l_buf,"Unsuccessful in Quat_Mod_ClntDet\n");
                CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
               APL_GOBACK_FAIL
              }
            else
	            {
	              sprintf(chr_l_buf,"Successful in Quat_Mod_ClntDet \n");
	              CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	            }
	            }	
            // else supriya 
				 if ((strcmp(chr_rep_name,"HYD") == 0) && ((strcmp(rep_perd,APL_MON_QTR1)== 0) ||(strcmp(rep_perd,APL_MON_QTR2) == 0) || (strcmp(rep_perd,APL_MON_QTR3) == 0) || (strcmp(rep_perd,APL_MON_QTR4) == 0)))
             {
              strcpy(Quat_No,temp[1]);
              if(strcmp(Quat_No,"QTR1") == 0)
              {
                 strcpy(chr_mnyy_det,FIR_QUATER);
                 strcpy(quat_yr,temp[2]);
                 strcat(chr_mnyy_det,quat_yr);
              }
              if(strcmp(Quat_No,"QTR2") == 0)
              {
                strcpy(chr_mnyy_det,SEC_QUATER);
                strcpy(quat_yr,temp[2]);
                strcat(chr_mnyy_det,quat_yr);
              }
              if (strcmp(Quat_No,"QTR3") == 0)
              {
                strcpy(chr_mnyy_det,THD_QUATER);
                strcpy(quat_yr,temp[2]);
                strcat(chr_mnyy_det,quat_yr);
              }
             if (strcmp(Quat_No,"QTR4") == 0)
			    {
				     strcpy(chr_mnyy_det,FTH_QUATER);
				     strcpy(quat_yr,temp[2]);
				    strcat(chr_mnyy_det,quat_yr);
				 }	  
             printf("Before passing to Function==|%s|\n",chr_mnyy_det);
  
             if (APL_FAILURE == Quat_Mod_ClntDet(chr_rep_name,chr_mnyy_det,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
              {	
                printf("Inside the Quat Success status\n");
                sprintf(chr_l_buf,"Unsuccessful in Quat_Mod_ClntDet\n");
                CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
               APL_GOBACK_FAIL
              }
            else
	            {
	              sprintf(chr_l_buf,"Successful in Quat_Mod_ClntDet \n");
	              CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
	            }
               }
               //else supriya
				   if (strcmp(chr_rep_name,"AUC") == 0)
               { 
                printf("Enter Into Monthly Rep of AUC\n");

				    strcpy(chr_mon_det,temp[1]);
					 if (strcmp(APL_MON_01,chr_mon_det) == 0)
                 {
						  strcpy(chr_myr_det,APL_MONTH_JAN);
						  strcat(chr_myr_det,temp[2]);
					  }
					 else if (strcmp(APL_MON_02,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_FEB);
						  strcat(chr_myr_det,temp[2]);
					  }
                 else if (strcmp(APL_MON_03,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_MAR);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_04,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_APR);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_05,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_MAY);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_06,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_JUN);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_07,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_JUL);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_08,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_AUG);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_09,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_SEP);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_10,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_OCT);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_11,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_NOV);
						  strcat(chr_myr_det,temp[2]);
                 }
                 else if (strcmp(APL_MON_12,chr_mon_det) == 0)
					  {
						  strcpy(chr_myr_det,APL_MONTH_DEC);
						  strcat(chr_myr_det,temp[2]);
                 }
					 printf("AUCBefore passing to Function==|%s|\n",chr_myr_det);

         if (APL_FAILURE == AUC_Mod_ClntInst(chr_rep_name,chr_myr_det,argv,l_logfile,&l_intl_env_data_h,&l_debug_info_ptr))
            {
					sprintf(chr_l_buf,"Unsuccessful in AUC_Mod_ClntInst\n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_FAIL
            }
				else
				{
					sprintf(chr_l_buf,"Successful in AUC_Mod_ClntInst \n");
					CO_ProcMonitor(l_logfile,chr_l_buf,NULL,NULL);
            	APL_GOBACK_SUCCESS
            }
            }
	             /*Added by supriya for DTR,DDR XML report generation start*/
	  if ((!strcmp(chr_rep_name,"DDS")) || (!strcmp(chr_rep_name,"DTS")) )
		{
			h_proc_id = getpid();		
			if (h_proc_id < 0)
			{
			    APL_GOBACK_FAIL
			}
				
			printf ("\nArgument batch no:%s\n",chr_seq_no);
			printf ("Argument USER:%s:\n",l_intl_env_data_h.usr);
			printf ("Argument proc_id :%d:\n",h_proc_id);
			
			strcpy(l_intl_root_path1,getenv("INTL_ROOT_PATH"));
		
			fflush(stdout);
	
			sprintf(l_gen_xmlrpt,"%sXmlRPT_Generator.ksh %s %s %d %s %s",l_intl_root_path1,chr_seq_no,l_intl_env_data_h.usr, h_proc_id,chr_rep_name,chr_rep_date);

			Alert("l_gen_xmlrpt : %s",l_gen_xmlrpt);
		
			fflush(stdout);
			l_i_retval=system(l_gen_xmlrpt);
	
			if(l_i_retval == 0)
				printf("XmlRPT_Generator.ksh Executed Successfully ");
			else
			{
				printf("XmlRPT_Generator.ksh Executed UnSuccessfully ");
				fflush(stdout);
	
				APL_GOBACK_FAIL
			}

		}
		/* Added by supriya for DTR,DDR XML report generation end */
		   }
			
	fclose(l_finifile);
	
	RETURN_SUCCESS:
	{
         printf("Before Updation Process\n");

		if(strcmp(chr_rep_name,"DTR"))		//In case of DTR Report, NSDL report getting generated through command line excel framework which will mark it completed
		{
		   printf("Before Updation Process\n");
	      if(APL_FAILURE == BT_Status_Completed(argv[0],argv[1],argv[2],l_debug_info_ptr))
		   {
		      APL_GOBACK_FAIL
		   }
		}


		 /* Commentedprintf("Before Updation Process\n");
			EXEC SQL UPDATE SYS_BATCHPROC
                        SET STATUS='completed'
                        WHERE PROCESS_NAME =:argv[0]
                        AND PROC_INIT =:argv[1]
                        AND STARTDATE =:argv[2]
                        AND STATUS = 'started';*/

		EXEC SQL COMMIT WORK RELEASE;
		printf("After Update Task\n");
      CO_Proc_RptClose(l_logfile,&l_debug_info_ptr);
		CO_Proc_RptClose(l_repfile,&l_debug_info_ptr);
		exit(0);
	}		
	
	RETURN_FAILURE:
	{
		EXEC SQL ROLLBACK WORK RELEASE;
		CO_Proc_RptClose(l_logfile,&l_debug_info_ptr);
		CO_Proc_RptClose(l_repfile,&l_debug_info_ptr);
		exit(-1);
	}
}	

