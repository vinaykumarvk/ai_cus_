


   
   
   
   
   
   
   
   
   
   
   
   




#include <CO_HostStructdef.h>

#define FILEPATH_LEN				70
#define FILENAME_LEN_A				80
#define PAGE_HDR_LENGTH		10
#define REPORT_PAGE_LEN			80
#define QUANTITY_LEN					25	
#define AMOUNT_LEN_A				65	

#define	HANDOFF_NORMAL	"N"
#define	HANDOFF_TRUE	"T"
#define	HANDOFF_BOTH	"B"
#define	SEC_CD_LEN_D		9



#define  TYPEOF_DEAL_CORP_1   "18"
#define  TYPEOF_DEAL_CORP_2   "19"
#define  TYPEOF_DEAL_CORP    "C"
#define  NORMAL_DEAL         "N"


EXEC SQL INCLUDE sqlca;

main(int argc,char **argv)
{
	DEBUG_INFO_STRUCT_H			*l_debug_info_ptr = NULL;
	FILE						*l_ptr_ini_file = NULL;
	FILE						*l_ptr_log_file = NULL;
	INTL_ENV_DATA_STRUCT_H	l_intl_envdatastruct_h;
	char						chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	char						chr_uname[APL_USERID_LEN]   = APL_NULL_STRING;
	char						chr_passwd[APL_PASSWD_LEN]  = APL_NULL_STRING;
	char						chr_custody_id_b[APL_USERID_LEN]  = APL_NULL_STRING;
	int						int_l_flg = 0;
	int						int_retval = 0;
	char						chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	struct sqlca			sqlca;
	char						chr_l_cntry_code[3];
	int						int_num = 0;
	char						**temp = NULL;

	memset(&l_intl_envdatastruct_h,NULL,sizeof(INTL_ENV_DATA_STRUCT_H));
	
	

	strcpy(l_intl_envdatastruct_h.usr, argv[3]);
	strcpy(l_intl_envdatastruct_h.h_mode, argv[4]);
	strcpy(l_intl_envdatastruct_h.processtion, argv[5]);
	strcpy(l_intl_envdatastruct_h.auth_req, argv[6]);
	strcpy(l_intl_envdatastruct_h.subprocess, argv[7]);
	strcpy(l_intl_envdatastruct_h.h_process, argv[8]);

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		exit(-1);
	
	APL_FETCH_DB_LOGIN_DETAILS(l_ptr_ini_file,chr_custody_id_b,chr_uname,chr_passwd,APL_OUT_FILE,&l_debug_info_ptr)
	
	

	if (CO_DB_Connection_N(chr_uname,chr_passwd,&l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	

	int_retval = CO_Rtv_RptFileName("3G",APL_LOGFILE_DESC,100, argv[5], argv, &l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

	

	EXEC SQL COMMIT WORK;
	
	if (sqlca.sqlcode != 0)
	{
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}
	
                      
   if ( CO_RtvSysParams(l_debug_info_ptr) == APL_FAILURE)         
						APL_GOBACK_FAIL									 

	strcpy(chr_l_cntry_code,g_mt_commonsys_params_struct_h.nation_code);           
   printf("l_cntry_code is %s\n",chr_l_cntry_code);                 

	memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
	sprintf(chr_l_buf,"Clearing House - %s",chr_l_cntry_code);
	CO_ProcMonitor(l_ptr_log_file,chr_l_buf,NULL,NULL);

	CO_ProcMonitor(l_ptr_log_file,"______________________\n",NULL,NULL);
	CO_ProcMonitor(l_ptr_log_file,"** Rahul **  Work Committed after chr_logfile creation  - \n",NULL,&l_intl_envdatastruct_h);

	
   int_retval = CO_Proc_BtchLock(argv,l_ptr_log_file,&l_debug_info_ptr);

   if (int_retval != APL_SUCCESS)
   {
      CO_ProcMonitor(l_ptr_log_file,"Unable to lock BATCH_IN_PROC record - Rollback done \n",NULL,&l_intl_envdatastruct_h);
      CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);
      EXEC SQL ROLLBACK WORK RELEASE;
      APL_GOBACK_FAIL
   }

	int_retval = DL_Clh_DlFn(argv,l_ptr_log_file,&l_intl_envdatastruct_h,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		int_l_flg = 1;

		CO_Proc_Exit(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);

		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);

		}

		CO_ProcMonitor(l_ptr_log_file,"FAILURE from Clearing House hand-off h_file generation program \n",NULL,&l_intl_envdatastruct_h);

		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		APL_GOBACK_FAIL	
	}
	else
	{
		int_l_flg = 0;

		CO_Proc_Exit(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);

		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);

		}

		CO_ProcMonitor(l_ptr_log_file,"SUCCESS from Clearing House hand-off h_file generation program \n",NULL,&l_intl_envdatastruct_h);

		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		APL_GOBACK_SUCCESS
	}

	RETURN_SUCCESS	: 
	{
		fclose(l_ptr_ini_file);
	   return(0);
	}

	RETURN_FAILURE	: 
	{
		fclose(l_ptr_ini_file);
  		return(-1);	
	}
}




int DL_Clh_DlFn(char **argv,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	struct sqlca 		  		sqlca;
	FILE							*l_ptr_ini_file = NULL;
	FILE							*l_ptr_rc_handoff_file = NULL;
	FILE							*l_ptr_dc_handoff_file = NULL;
	FILE							*l_ptr_broker_handoff_file = NULL;
	char							chr_l_inifile[FILENAME_LEN_A] = APL_NULL_STRING;
	char							chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
	char							chr_l_rc_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
	char							chr_l_dc_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
	char							chr_l_broker_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
	SYS_DL_DEAL_STRUCT_H		l_sys_dl_deal_struct_hb;
	SYS_DL_DEAL_STRUCT_I		l_sys_dl_deal_struct_il;
	int							int_retval;
	char							chr_l_entrytype[2];
	char							chr_l_typeoftrd[3];
	char							chr_l_typeoftrd1[3];
	char							chr_l_trcode_a[2];
	char							chr_l_date[7];
	char							chr_l_mstacc_a[11];
	short							i_mstclt;
	char							chr_l_clscode_a[5];
	short							i_classcd;
	char							chr_l_acc_cl_code[16];
	short							i_acc_cl_code;
	char							chr_l_newissue[3]; 
	short							i_new_issue;
	char							chr_l_mothinstrflg[2];
	short							i_mother_sec_ind;
	char							chr_l_notmotherflg[2];
	char							chr_l_cubk[2];
	short							i_clt_brk_all;
	char							dbl_l_amount_a[66];
	char							int_l_domcpac[11];
	DL_CLHTR_STRUCT_H			l_dl_clhtr_struct_h;
	DL_CLHTR_STRUCT_I			l_dl_clhtr_struct_i;
	char							chr_l_instr_parent[9];
	short							i_instr_parent;
	char							chr_l_clhtr_account[11];
	char							chr_l_clhtr_instrcode[9];
	char							chr_l_clhtr_recdel[2];
	double						l_clhtr_quantity;
	double						dbl_l_clhtr_amount;
	char							chr_l_sys_date[APL_DATE_LEN];
	short							i_sys_date = 0;
	char							chr_l_ca_id[21];
	short							i_corp_id;
	char							chr_l_ce_typ[3];
	short							i_ca_event;
	char							chr_l_instrcode_a[9];
	int							int_l_no_lines_printed;
	int							int_l_page_no;
	FILE							*l_clh_cust_TR_rpt_file = NULL;
	FILE							*l_clh_broker_TR_rpt_file = NULL;
	FILE							*l_clh_error_TR_rpt_file = NULL;
	int							i,int_l_diff;
	char							chr_l_gen_handoff_file_flg[2];
	char							chr_l_incl_amt_flg[2];
	int							int_num = 0;
	char							**temp = NULL;
	int							int_l_err_cond = 0;
	INTL_REPT_STRUCT_H				*l_intl_rept_struct_ha	=NULL;
	short							l_truedvpflag	=	0;	
	char							chr_l_typeoffile[APL_FLAG_LENGTH]	=	APL_NULL_STRING;	
	char							chr_l_acctruedvp[APL_FLAG_LENGTH]						= APL_NULL_STRING;	
	short							i_acctruedvp										=	0	;	

	
	char		chr_l_setclient[APL_CLIENT_LENGTH]	=	APL_NULL_STRING;
	char		chr_l_setinstrcode[APL_INSTRUMENTCODE_LEN]	=	APL_NULL_STRING;
	double	l_setsafekeep_pos							=	0.0;
	short		i_setaccount						=	0;
	short		i_setinstr_code							=	0;
	short		i_setsafek							=	0;
	
	char	int_l_status[3]			=	APL_NULL_STRING;
	short i_status_ind			=	0;
	char  chr_l_mst_clhacc[16]  =  APL_NULL_STRING;	
	short i_mst_clhacc   	=  0;

	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_instr_code IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_dl_client IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_indentity_no IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_domcpclt_cd IS STRING;

	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_classofdl IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_dealcd IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_clientof IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_countclt IS STRING;

	EXEC SQL VAR l_dl_clhtr_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_clhtr_struct_h.h_dl_client IS STRING;

	EXEC SQL VAR chr_l_mothinstrflg IS STRING;
	EXEC SQL VAR chr_l_instr_parent IS STRING;
	EXEC SQL VAR chr_l_clscode_a IS STRING;
	EXEC SQL VAR chr_l_newissue IS STRING;
	EXEC SQL VAR chr_l_cubk IS STRING;
	EXEC SQL VAR chr_l_trcode_a IS STRING;
	EXEC SQL VAR chr_l_entrytype IS STRING;
	EXEC SQL VAR chr_l_typeoftrd IS STRING;
	EXEC SQL VAR chr_l_typeoftrd1 IS STRING;
	EXEC SQL VAR chr_l_mstacc_a IS STRING;
	EXEC SQL VAR chr_l_ca_id IS STRING;
	EXEC SQL VAR chr_l_acc_cl_code IS STRING;
	EXEC SQL VAR chr_l_acctruedvp	IS STRING;
	EXEC SQL VAR chr_l_instrcode_a		IS STRING;	
	
	
	EXEC SQL VAR	chr_l_setclient 	IS STRING;
	EXEC SQL VAR	chr_l_setinstrcode		IS STRING;
	
	EXEC SQL VAR chr_l_mst_clhacc IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Clh_DlFn \n",NULL,p_intl_env_data_struct_h_d);

	memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
	memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
	memset(chr_l_rc_handoff_file_name,NULL,sizeof(chr_l_rc_handoff_file_name));
	memset(chr_l_dc_handoff_file_name,NULL,sizeof(chr_l_dc_handoff_file_name));
	memset(chr_l_broker_handoff_file_name,NULL,sizeof(chr_l_broker_handoff_file_name));

	l_intl_rept_struct_ha	= (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));	
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);

	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
      return(APL_FAILURE);

	if (CO_RtvSysDt(chr_l_sys_date,l_debug_info_ptr) != APL_SUCCESS)
		return(APL_FAILURE);

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		return(APL_FAILURE);

	if (CO_ReadToken(l_ptr_ini_file,"INTL_HF_PATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		return(APL_FAILURE);

	chr_l_date[0] = chr_l_sys_date[0];
	chr_l_date[1] = chr_l_sys_date[1];
	chr_l_date[2] = chr_l_sys_date[3];
	chr_l_date[3] = chr_l_sys_date[4];
	chr_l_date[4] = chr_l_sys_date[8];
	chr_l_date[5] = chr_l_sys_date[9];
	chr_l_date[6] = '\0';
		
	strcpy(chr_l_rc_handoff_file_name,chr_l_handoff_dir);
	strcat(chr_l_rc_handoff_file_name,"RY");
	strcat(chr_l_rc_handoff_file_name,chr_l_date);
	strcat(chr_l_rc_handoff_file_name,".CIY");

	strcpy(chr_l_dc_handoff_file_name,chr_l_handoff_dir);
	strcat(chr_l_dc_handoff_file_name,"DY");
	strcat(chr_l_dc_handoff_file_name,chr_l_date);
	strcat(chr_l_dc_handoff_file_name,".CIY");
		
	if ((l_ptr_rc_handoff_file = fopen(chr_l_rc_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);

	  
	strcpy(l_intl_rept_struct_ha->report_name, chr_l_rc_handoff_file_name+strlen(chr_l_handoff_dir));
	strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
	strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	l_intl_rept_struct_ha->report_width = 100;
	strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
	strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
	strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);

	  
	if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
		
	if ((l_ptr_dc_handoff_file = fopen(chr_l_dc_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);
	
	memset(l_intl_rept_struct_ha,NULL,sizeof(INTL_REPT_STRUCT_H));

  
 	strcpy(l_intl_rept_struct_ha->report_name, chr_l_dc_handoff_file_name+strlen(chr_l_handoff_dir));
	strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
	strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	l_intl_rept_struct_ha->report_width = 100;
	strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
	strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
	strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);

	 
	if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
   {
   	APL_GOBACK_FAIL
   }
		
	

	int_retval = CO_Rtv_RptFileName("CH","Customer hand-off Rep - TR",80,p_intl_env_data_struct_h_d->processtion,NULL,&l_clh_cust_TR_rpt_file,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);
	
	int_l_page_no = 1;

	

	int_retval = WriteCustReportHeaderForTrFn(l_clh_cust_TR_rpt_file,int_l_page_no,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);

	sleep(2);
	
	int_l_no_lines_printed = PAGE_HDR_LENGTH;
	
	
	
	EXEC SQL DECLARE settledpos_mst CURSOR FOR
		SELECT B.CLN_MASTER, A.INSTR_CODE, SUM(A.SAFEKEEP_POS) 
		FROM DL_SAFEK A, MT_CLIENT B
		WHERE A.CLIENT = B.CLN_CODE
		GROUP BY B.CLN_MASTER, A.INSTR_CODE 
		HAVING SUM(A.SAFEKEEP_POS) > 0.0
		ORDER BY B.CLN_MASTER, A.INSTR_CODE;	

	EXEC SQL OPEN settledpos_mst;

	for(;;)
	{
		memset(chr_l_setclient, APL_NULL_CHAR, APL_CLIENT_LENGTH);
		memset(chr_l_setinstrcode, APL_NULL_CHAR, APL_INSTRUMENTCODE_LEN);
		l_setsafekeep_pos = 0.0;

		EXEC SQL FETCH settledpos_mst 
			INTO :chr_l_setclient:i_setaccount, :chr_l_setinstrcode:i_setinstr_code, :l_setsafekeep_pos:i_setsafek;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;

		EXEC SQL SELECT NEW_ISSUE, MOTHER_SEC_IND, INSTR_PARENT
      INTO :chr_l_newissue:i_new_issue, :chr_l_mothinstrflg:i_mother_sec_ind, :chr_l_instr_parent:i_instr_parent
      FROM MT_INSTRUMENT
      WHERE instr_code = :chr_l_setinstrcode;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if (strcmp(chr_l_newissue,"N") == 0)
         strcpy(chr_l_newissue,"E");
      else if ((strcmp(chr_l_newissue,"Y") == 0) && (strcmp(chr_l_mothinstrflg,"Y") != 0))
         strcpy(chr_l_newissue,"Y");
      else if ((strcmp(chr_l_newissue,"M") == 0) && (strcmp(chr_l_mothinstrflg,"Y") != 0))
         strcpy(chr_l_newissue,"MZ");

      if (strcmp(chr_l_mothinstrflg,"Y" ) == 0)
			strcpy(chr_l_instrcode_a, chr_l_setinstrcode);
      else
         strcpy(chr_l_instrcode_a, chr_l_instr_parent);

		EXEC SQL SELECT a.CLN_CLH
      INTO :chr_l_acc_cl_code:i_acc_cl_code
      FROM MT_CLIENT a
      WHERE a.CLN_CODE = :chr_l_setclient;

      IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		int_retval = CDBGenClEntryTrFn(l_ptr_dc_handoff_file, chr_l_acc_cl_code, chr_l_instrcode_a, chr_l_newissue, "", l_setsafekeep_pos, chr_l_sys_date, "DELV",
                                          "1", p_ptr_log_file, p_intl_env_data_struct_h_d, l_debug_info_ptr);
	}

	EXEC SQL DECLARE settledpos_sub CURSOR FOR
		SELECT B.CLN_CODE, A.INSTR_CODE, SUM(A.SAFEKEEP_POS) 
		FROM DL_SAFEK A, MT_CLIENT B
		WHERE A.CLIENT = B.CLN_CODE
		GROUP BY B.CLN_CODE, A.INSTR_CODE
		HAVING SUM(A.SAFEKEEP_POS) > 0.0
		ORDER BY B.CLN_CODE, A.INSTR_CODE;	

	EXEC SQL OPEN settledpos_sub;

	for(;;)
	{
		memset(chr_l_setclient, APL_NULL_CHAR, APL_CLIENT_LENGTH);
		memset(chr_l_setinstrcode, APL_NULL_CHAR, APL_INSTRUMENTCODE_LEN);
		l_setsafekeep_pos = 0.0;

		EXEC SQL FETCH settledpos_sub 
			INTO :chr_l_setclient:i_setaccount, :chr_l_setinstrcode:i_setinstr_code, :l_setsafekeep_pos:i_setsafek;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;

		EXEC SQL SELECT NEW_ISSUE, MOTHER_SEC_IND, INSTR_PARENT
      INTO :chr_l_newissue:i_new_issue, :chr_l_mothinstrflg:i_mother_sec_ind, :chr_l_instr_parent:i_instr_parent
      FROM MT_INSTRUMENT
      WHERE instr_code = :chr_l_setinstrcode;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if (strcmp(chr_l_newissue,"N") == 0)
         strcpy(chr_l_newissue,"E");
      else if ((strcmp(chr_l_newissue,"Y") == 0) && (strcmp(chr_l_mothinstrflg,"Y") != 0))
         strcpy(chr_l_newissue,"Y");
      else if ((strcmp(chr_l_newissue,"M") == 0) && (strcmp(chr_l_mothinstrflg,"Y") != 0))
         strcpy(chr_l_newissue,"MZ");

      if (strcmp(chr_l_mothinstrflg,"Y" ) == 0)
			strcpy(chr_l_instrcode_a, chr_l_setinstrcode);
      else
         strcpy(chr_l_instrcode_a, chr_l_instr_parent);

		EXEC SQL SELECT a.CLN_CLH
      INTO :chr_l_acc_cl_code:i_acc_cl_code
      FROM MT_CLIENT a
      WHERE a.CLN_CODE = :chr_l_setclient;

      IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		int_retval = CDBGenClEntryTrFn(l_ptr_rc_handoff_file, "", chr_l_instrcode_a, chr_l_newissue, chr_l_acc_cl_code, l_setsafekeep_pos, chr_l_sys_date, "RECV", 
                                          "1", p_ptr_log_file, p_intl_env_data_struct_h_d, l_debug_info_ptr); 
	}

	

	strcpy((char *)chr_l_entrytype, "G");
	strcpy((char *)chr_l_typeoftrd, "19");
	strcpy((char *)chr_l_typeoftrd1, "18");
	strcpy((char *)chr_l_trcode_a, "4");
	strcpy(int_l_status, STATUS_CONF);

   EXEC SQL DECLARE TradeInfo CURSOR FOR
   	SELECT a.* FROM DL_DEAL a,MT_CLIENT b
      WHERE (a.ENTRY != :chr_l_entrytype OR a.dl_class = :chr_l_typeoftrd
             OR (a.dl_class = :chr_l_typeoftrd1 AND a.deal_cd = :chr_l_trcode_a))
         AND   a.DEAL_STAT = :int_l_status
         AND   a.TRANS_DATE IS NOT NULL
         AND   a.setl_date <= :chr_l_sys_date
         AND   a.client = b.CLN_CODE
         ORDER BY b.CLN_master,a.client,a.instr_code;	

	EXEC SQL OPEN TradeInfo;

	IS_ANY_ORA_ERROR

	for(;;)
	{
		EXEC SQL FETCH TradeInfo INTO :l_sys_dl_deal_struct_hb:l_sys_dl_deal_struct_il;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;

		EXEC SQL SELECT NEW_ISSUE,CLASSCD
		INTO :chr_l_newissue:i_new_issue,:chr_l_clscode_a:i_classcd
		FROM MT_INSTRUMENT
		WHERE instr_code = :l_sys_dl_deal_struct_hb.h_instr_code;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		

		if ((strcmp(chr_l_newissue,"R") == 0) || (strcmp(chr_l_clscode_a,"HS")!=0))
			continue;

		if (strcmp(g_mt_commonsys_params_struct_h.ca_module_ind,"Y") == 0)
		{
			if (strcmp(l_sys_dl_deal_struct_hb.h_classofdl,"19") == 0)
			{
				EXEC SQL SELECT corp_id 
				INTO :chr_l_ca_id:i_corp_id
				FROM CACHEQUE
				WHERE DEAL_IDENTITY_NO = :l_sys_dl_deal_struct_hb.h_indentity_no;

				IS_ANY_ORA_ERROR

				if (sqlca.sqlcode != 1403)
				{

				EXEC SQL SELECT CA_EVENT
				INTO :chr_l_ce_typ:i_ca_event
				FROM CAEVENT
				WHERE corp_id = :chr_l_ca_id;
				
				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

				

				if ((strcmp(chr_l_ce_typ,"BO") != 0) && (strcmp(chr_l_ce_typ,"SD") != 0))
					continue;
				}
			}
		}

		EXEC SQL SELECT CLN_master
		INTO :chr_l_mstacc_a:i_mstclt
		FROM MT_CLIENT
		WHERE CLN_CODE = :l_sys_dl_deal_struct_hb.h_dl_client;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if ((strcmp(l_sys_dl_deal_struct_hb.h_classofdl,"18") != 0) && (strcmp(l_sys_dl_deal_struct_hb.h_classofdl,"19") != 0))
		{
			if (strcmp(l_sys_dl_deal_struct_hb.h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
         {
         	 
				strncpy(int_l_domcpac,l_sys_dl_deal_struct_hb.h_countclt,APL_CLIENT_LENGTH-1);
            strcat(int_l_domcpac,"\0");
         }
			else
				strcpy(int_l_domcpac,l_sys_dl_deal_struct_hb.h_domcpclt_cd);

		}
		else
			strcpy(int_l_domcpac,l_sys_dl_deal_struct_hb.h_domcpclt_cd);

		if (strcmp(int_l_domcpac,NULL) == 0)
		{
			if (int_l_err_cond == 0)
			{
				

				int_retval = CO_Rtv_RptFileName("CH","Error Rep - TR",80,p_intl_env_data_struct_h_d->processtion,NULL,&l_clh_error_TR_rpt_file,l_debug_info_ptr);

				if (int_retval != APL_SUCCESS)
					APL_GOBACK_FAIL
				
				int_l_err_cond = 1;

				

				int_retval = WriteErrorReportHeaderForTrFn(l_clh_error_TR_rpt_file,int_l_page_no,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

				if (int_retval != APL_SUCCESS)
					APL_GOBACK_FAIL

			}

			

			int_retval = WriteErrorReportDetailsForTrFn(l_clh_error_TR_rpt_file,l_sys_dl_deal_struct_hb.h_dl_client,l_sys_dl_deal_struct_hb.h_indentity_no,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);
			if (int_retval != APL_SUCCESS)
				APL_GOBACK_FAIL

			continue;
		}
			
		
		memset(chr_l_acctruedvp, APL_NULL_CHAR, APL_FLAG_LENGTH);

		EXEC SQL SELECT CLN_REG_BCL_IND
		INTO :chr_l_acctruedvp:i_acctruedvp
		FROM MT_CLIENT
		WHERE CLN_CODE = :int_l_domcpac;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

			EXEC SQL SELECT MOTHER_SEC_IND,INSTR_PARENT,CLASSCD
			INTO :chr_l_mothinstrflg:i_mother_sec_ind,:chr_l_instr_parent:i_instr_parent,:chr_l_clscode_a:i_classcd
			FROM MT_INSTRUMENT
			WHERE instr_code = :l_sys_dl_deal_struct_hb.h_instr_code;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

			strcpy(chr_l_clhtr_account, l_sys_dl_deal_struct_hb.h_dl_client);
			strcpy(chr_l_clhtr_instrcode,l_sys_dl_deal_struct_hb.h_instr_code);
		
			if ((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"2") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"4") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				strcpy(chr_l_clhtr_recdel, "1");
			else if ((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"1") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"5") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"7") == 0))
				strcpy(chr_l_clhtr_recdel, "0");
			
			if ((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"4") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"5") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"7") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				dbl_l_clhtr_amount = l_sys_dl_deal_struct_hb.h_amt;
			else if ((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"1") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"2") == 0))
				dbl_l_clhtr_amount = 0.0;

			if((0 == strcmp(TYPEOF_DEAL_CORP_1, l_sys_dl_deal_struct_hb.h_classofdl)) || (0 == strcmp(TYPEOF_DEAL_CORP_2, l_sys_dl_deal_struct_hb.h_classofdl)))
         {
            strcpy(chr_l_typeoftrd, TYPEOF_DEAL_CORP);
         }
         else
         {
            strcpy(chr_l_typeoftrd, NORMAL_DEAL);
         }

		int_retval = CDBRecsInClhTrFn(chr_l_clhtr_account,chr_l_clhtr_instrcode,chr_l_clhtr_recdel, chr_l_acctruedvp, p_ptr_log_file, chr_l_typeoftrd, 
                                    p_intl_env_data_struct_h_d, l_debug_info_ptr );	

			if (int_retval == APL_SUCCESS)
			{
				strcpy(l_dl_clhtr_struct_h.h_dl_client,chr_l_clhtr_account);
				strcpy(l_dl_clhtr_struct_h.h_instr_code,chr_l_clhtr_instrcode);
				strcpy(l_dl_clhtr_struct_h.h_rec_del,chr_l_clhtr_recdel);
				l_dl_clhtr_struct_h.h_qty = l_sys_dl_deal_struct_hb.h_qty;
				l_dl_clhtr_struct_h.h_amt = dbl_l_clhtr_amount;
				strcpy(l_dl_clhtr_struct_h.h_act_dvp, chr_l_acctruedvp);
				strcpy(l_dl_clhtr_struct_h.h_classofdl, chr_l_typeoftrd);

				
				 
				 l_dl_clhtr_struct_i.i_dl_client = 0;
				 l_dl_clhtr_struct_i.i_instr_code = 0;
				 l_dl_clhtr_struct_i.i_rec_del = 0;
				 l_dl_clhtr_struct_i.i_qty = 0;
				 l_dl_clhtr_struct_i.i_amt = 0;
				l_dl_clhtr_struct_i.i_act_dvp = 0;
				l_dl_clhtr_struct_i.i_classofdl = 0;
			
				 EXEC SQL INSERT INTO DL_CLHTR
					VALUES (:l_dl_clhtr_struct_h:l_dl_clhtr_struct_i);

				 IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
			}
			else if (int_retval == APL_RECS_EXIST)
			{
				EXEC SQL UPDATE DL_CLHTR
				SET QTY = QTY + :l_sys_dl_deal_struct_hb.h_qty,
					 AMOUNT = AMOUNT + :dbl_l_clhtr_amount
				WHERE client = :chr_l_clhtr_account
				AND   instr_code = :chr_l_clhtr_instrcode
				AND   REC_DEL = :chr_l_clhtr_recdel
				AND	ACT_DVP = :chr_l_acctruedvp
				AND   dl_class = :chr_l_typeoftrd;
		
				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
			}
		}

	if (sqlca.sqlerrd[2] == 0)
	{
		CO_InsertErr(l_debug_info_ptr,ERR_NOTHING_REPORT,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
	
		EXEC SQL CLOSE TradeInfo;

		APL_GOBACK_FAIL
	}

	EXEC SQL DECLARE ClhTrInfo CURSOR FOR
		SELECT * FROM DL_CLHTR;

	EXEC SQL OPEN ClhTrInfo;

	IS_ANY_ORA_ERROR

	for(;;)
	{
		EXEC SQL FETCH ClhTrInfo INTO :l_dl_clhtr_struct_h:l_dl_clhtr_struct_i;

		IS_ANY_ORA_ERROR
		
		if (APL_ZERO_RESULT_SET)
			break;

		EXEC SQL SELECT CLASSCD
		INTO :chr_l_clscode_a:i_classcd
		FROM MT_INSTRUMENT
		WHERE instr_code = :l_dl_clhtr_struct_h.h_instr_code;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if (strcmp(chr_l_clscode_a,"HS") != 0)
			continue;

		EXEC SQL SELECT NEW_ISSUE,MOTHER_SEC_IND,INSTR_PARENT
		INTO :chr_l_newissue:i_new_issue,:chr_l_mothinstrflg:i_mother_sec_ind,:chr_l_instr_parent:i_instr_parent
		FROM MT_INSTRUMENT
		WHERE instr_code = :l_dl_clhtr_struct_h.h_instr_code;
		
		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		

		if (strcmp(chr_l_newissue,"N") == 0)
			strcpy(chr_l_newissue,"E");
		else if ((strcmp(chr_l_newissue,"Y") == 0) && (strcmp(chr_l_mothinstrflg,"Y") != 0))
			strcpy(chr_l_newissue,"Y");
		else if ((strcmp(chr_l_newissue,"M") == 0) && (strcmp(chr_l_mothinstrflg,"Y") != 0))
			strcpy(chr_l_newissue,"MZ");

		if (strcmp(chr_l_mothinstrflg,"Y" ) == 0)
			strcpy(chr_l_notmotherflg,"N");
		else
			strcpy(chr_l_notmotherflg,"Y");

		if (strcmp(chr_l_notmotherflg,"Y") == 0)
			strcpy(chr_l_instrcode_a,chr_l_instr_parent);
		else
			strcpy(chr_l_instrcode_a,l_dl_clhtr_struct_h.h_instr_code);

		memset(chr_l_acc_cl_code, APL_NULL_CHAR, 16);
		memset(chr_l_mst_clhacc, APL_NULL_CHAR, 16);

		EXEC SQL SELECT a.CLN_CLH, b.CLN_CLH
      INTO :chr_l_acc_cl_code:i_acc_cl_code, :chr_l_mst_clhacc:i_mst_clhacc
      FROM MT_CLIENT a, MT_CLIENT b
      WHERE a.CLN_CODE = :l_dl_clhtr_struct_h.h_dl_client
			AND a.CLN_master = b.CLN_CODE;

      IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

			if (strcmp(l_dl_clhtr_struct_h.h_rec_del,"1") == 0)
			{
				int_retval = CDBGenClEntryTrFn(l_ptr_rc_handoff_file, "", chr_l_instrcode_a, chr_l_newissue, chr_l_acc_cl_code, l_dl_clhtr_struct_h.h_qty, chr_l_sys_date, "RECV", 
                                          l_dl_clhtr_struct_h.h_classofdl, p_ptr_log_file, p_intl_env_data_struct_h_d, l_debug_info_ptr);

				int_retval = CDBGenClEntryTrFn(l_ptr_dc_handoff_file, chr_l_mst_clhacc, chr_l_instrcode_a, chr_l_newissue, "", l_dl_clhtr_struct_h.h_qty, chr_l_sys_date, "DELV",
                                          l_dl_clhtr_struct_h.h_classofdl, p_ptr_log_file, p_intl_env_data_struct_h_d, l_debug_info_ptr);
			}	
			else if (strcmp(l_dl_clhtr_struct_h.h_rec_del,"0") == 0)
			{
				int_retval = CDBGenClEntryTrFn(l_ptr_rc_handoff_file, "", chr_l_instrcode_a, chr_l_newissue, chr_l_mst_clhacc, l_dl_clhtr_struct_h.h_qty, chr_l_sys_date, "RECV", 
                                          l_dl_clhtr_struct_h.h_classofdl, p_ptr_log_file, p_intl_env_data_struct_h_d, l_debug_info_ptr);

				int_retval = CDBGenClEntryTrFn(l_ptr_dc_handoff_file, chr_l_acc_cl_code, chr_l_instrcode_a, chr_l_newissue, "", l_dl_clhtr_struct_h.h_qty, chr_l_sys_date, "DELV",
                                          l_dl_clhtr_struct_h.h_classofdl, p_ptr_log_file, p_intl_env_data_struct_h_d, l_debug_info_ptr);
			}

			if (int_retval != APL_SUCCESS)
				APL_GOBACK_FAIL

		}

		int_retval = WriteCustReportDetailsForTrFn(l_clh_cust_TR_rpt_file,l_dl_clhtr_struct_h.h_dl_client,chr_l_acc_cl_code,chr_l_instrcode_a,chr_l_newissue, chr_l_sys_date,l_dl_clhtr_struct_h.h_qty,
                                                   l_dl_clhtr_struct_h.h_rec_del,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

		int_l_no_lines_printed = int_l_no_lines_printed + 2;

		if (int_l_no_lines_printed == REPORT_PAGE_LEN)
		{
			int_l_page_no = int_l_page_no + 1;

			

			int_retval = WriteCustReportHeaderForTrFn(l_clh_cust_TR_rpt_file,int_l_page_no,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

			if (int_retval != APL_SUCCESS)
				APL_GOBACK_FAIL

			int_l_no_lines_printed = PAGE_HDR_LENGTH;
		}
	
	EXEC SQL CLOSE ClhTrInfo;

	EXEC SQL CLOSE TradeInfo;

	EXEC SQL DELETE FROM DL_CLHTR;
	
	EXEC SQL DELETE PRO_CNTRY_SYS_PARAMS WHERE MAIN_FUN='TAKAS_BANK' AND  COND_FUN='SEG_POSITIONS' AND NATION='TR';

	IS_ANY_ORA_ERROR

	fprintf(l_clh_cust_TR_rpt_file,"\n\n");

	for(i=0;i<135;i++)
		fprintf(l_clh_cust_TR_rpt_file,"-");
	
	if (int_l_err_cond == 1)
	{
		fprintf(l_clh_error_TR_rpt_file,"\n\n");
		for(i=0;i<135;i++)
			fprintf(l_clh_error_TR_rpt_file,"-");
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		fclose(l_ptr_rc_handoff_file);
		fclose(l_ptr_dc_handoff_file);

		EXEC SQL CLOSE settledpos_sub;
		EXEC SQL CLOSE settledpos_mst;

		free(l_intl_rept_struct_ha);

		
		fclose(l_ptr_ini_file);

		

		int_retval = CO_Proc_RptClose(l_clh_cust_TR_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);
		
		if (int_l_err_cond == 1)
		{
			int_retval = CO_Proc_RptClose(l_clh_error_TR_rpt_file,l_debug_info_ptr);

			if (int_retval != APL_SUCCESS)
				return(APL_FAILURE);
		}
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Clh_DlFn successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		fclose(l_ptr_rc_handoff_file);
		fclose(l_ptr_dc_handoff_file);

		EXEC SQL CLOSE settledpos_sub;
		EXEC SQL CLOSE settledpos_mst;

		free(l_intl_rept_struct_ha);
		
		
		fclose(l_ptr_ini_file);
		
		

		int_retval = CO_Proc_RptClose(l_clh_cust_TR_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);
		
		if (int_l_err_cond == 1)
		{
			int_retval = CO_Proc_RptClose(l_clh_error_TR_rpt_file,l_debug_info_ptr);

			if (int_retval != APL_SUCCESS)
				return(APL_FAILURE);
		}
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Clh_DlFn with failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}




int CDBRecsInClhTrFn(char *chr_p_client, char *p_instr_code, char *p_recdel, char *p_truedvp, FILE *p_ptr_log_file, char *p_typeofdeal,
                     INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,
                        DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   EXEC SQL BEGIN DECLARE SECTION;

   struct sqlca  sqlca;
   int           int_l_num_rows = 0;

   EXEC SQL END DECLARE SECTION;

   CO_ProcMonitor(p_ptr_log_file,"Entered processtion CDBRecsInClhTrFn \n",NULL,p_intl_env_data_struct_h_d);

   sqlca.sqlcode = 0;

	 EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_num_rows
   FROM DL_CLHTR
   WHERE client = :chr_p_client
   AND   instr_code = :p_instr_code
   AND   REC_DEL = :p_recdel
   AND   ACT_DVP = :p_truedvp
   AND   dl_class = :p_typeofdeal;

   IS_ANY_ORA_ERROR

   if (int_l_num_rows == 0)
      APL_GOBACK_SUCCESS
   else
      APL_GOBACK_FAIL

   RETURN_SUCCESS :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CDBRecsInClhTrFn successfully\n",NULL,p_intl_env_data_struct_h_d);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CDBRecsInClhTrFn with failure\n",NULL,p_intl_env_data_struct_h_d);

      if (sqlca.sqlcode == 0)
         return(APL_RECS_EXIST);
      else
         return(APL_FAILURE);
   }
}



int CDBGenClEntryTrFn(FILE *p_ptr_clh_tr_file, char *p_dbcltt, char *p_instr_code, char *p_newissue, char *p_crcltt, double p_quantity, char *p_conf_date, char *p_recdel,
                        char *p_typeofdeal, FILE *p_ptr_log_file, INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca  sqlca;
   char          chr_l_instr_parent[9];
   short         i_instr_parent;
   char          chr_l_mothinstrflg[2];
	short         i_mother_sec_ind;
   char          chr_l_conf_dt[APL_DATE_LEN];
   char          chr_l_date[11];
   char          chr_l_rep_outqty[QUANTITY_LEN+1] = APL_NULL_STRING;
   char          l_quantity[QUANTITY_LEN+1] = APL_NULL_STRING;
   int           int_l_start = 0;
   int           i = 0;
   char          chr_l_citibank_free_acct[3];
   char          chr_l_acct_num[2];

   
   EXEC SQL VAR chr_l_instr_parent IS STRING;
   

   CO_ProcMonitor(p_ptr_log_file,"Entered processtion CDBGenClEntryTrFn \n",NULL,p_intl_env_data_struct_h_d);
  
   sqlca.sqlcode = 0;

   EXEC SQL SELECT MOTHER_SEC_IND,INSTR_PARENT
   INTO :chr_l_mothinstrflg:i_mother_sec_ind,:chr_l_instr_parent:i_instr_parent
   FROM MT_INSTRUMENT
   WHERE instr_code = :p_instr_code;

   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

   if (strcmp(chr_l_mothinstrflg,"N") == 0)
      strcpy(p_instr_code,chr_l_instr_parent);

   strcpy(chr_l_conf_dt,p_conf_date);

   chr_l_date[0] = chr_l_conf_dt[0];
   chr_l_date[1] = chr_l_conf_dt[1];
   chr_l_date[2] = chr_l_conf_dt[2];
   chr_l_date[3] = chr_l_conf_dt[3];
   chr_l_date[4] = chr_l_conf_dt[4];
   chr_l_date[5] = chr_l_conf_dt[5];
   chr_l_date[6] = chr_l_conf_dt[6];
   chr_l_date[7] = chr_l_conf_dt[7];
   chr_l_date[8] = chr_l_conf_dt[8];
   chr_l_date[9] = chr_l_conf_dt[9];
   chr_l_date[10] = '\0';

   CO_ToStr(p_quantity,QUANTITY_LEN,2,chr_l_rep_outqty);

   
  
   while (isspace(chr_l_rep_outqty[i]))
      i++;
  
   while(chr_l_rep_outqty[i] != APL_NULL_CHAR)
      l_quantity[int_l_start++] = chr_l_rep_outqty[i++];

   l_quantity[int_l_start] = APL_NULL_CHAR;
	
   strcpy(chr_l_citibank_free_acct,"30");
   strcpy(chr_l_acct_num,"0");

   

   
   if (strcmp(p_recdel,"DELV") == 0)
   {
      if(0 == strcmp(TYPEOF_DEAL_CORP, p_typeofdeal))
         fprintf(p_ptr_clh_tr_file,"CIY,%s,%s,%s,%s,%s,%s,%s,%s,,10\n",p_dbcltt,chr_l_citibank_free_acct,chr_l_date,p_instr_code,p_newissue,p_crcltt,chr_l_acct_num,l_quantity);
      else
         fprintf(p_ptr_clh_tr_file,"CIY,%s,%s,%s,%s,%s,%s,%s,%s,,2\n",p_dbcltt,chr_l_citibank_free_acct,chr_l_date,p_instr_code,p_newissue,p_crcltt,chr_l_acct_num,l_quantity);
   }
   else if (strcmp(p_recdel,"RECV") == 0)
   {
      if(0 == strcmp(TYPEOF_DEAL_CORP, p_typeofdeal))
         fprintf(p_ptr_clh_tr_file,"CIY,%s,%s,%s,%s,%s,%s,%s,%s,,10\n",p_dbcltt,chr_l_acct_num,chr_l_date,p_instr_code,p_newissue,p_crcltt,chr_l_citibank_free_acct,l_quantity);
      else
         fprintf(p_ptr_clh_tr_file,"CIY,%s,%s,%s,%s,%s,%s,%s,%s,,2\n",p_dbcltt,chr_l_acct_num,chr_l_date,p_instr_code,p_newissue,p_crcltt,chr_l_citibank_free_acct,l_quantity);
   }
   

   RETURN_SUCCESS :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CDBGenClEntryTrFn successfully\n",NULL,p_intl_env_data_struct_h_d);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CDBGenClEntryTrFn with failure\n",NULL,p_intl_env_data_struct_h_d);
  
      return(APL_FAILURE);
   }
}



int WriteCustReportHeaderForTrFn(FILE *p_ptr_clh_rpt_file,int p_page_no,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca  sqlca;
	char			  chr_l_sys_date[9];
	int			  i;
	char			  chr_l_corp_name[41];
	short			  i_ca_clr_name;

	EXEC SQL VAR chr_l_sys_date IS STRING;
	EXEC SQL VAR chr_l_corp_name IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion WriteCustReportHeaderForTrFn\n",NULL,p_intl_env_data_struct_h_d);
	
	sqlca.sqlcode = 0;

	EXEC SQL SELECT TO_CHAR(SYS_DATE,'DD/MM/YY')
	INTO :chr_l_sys_date
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	EXEC SQL SELECT ca_identname
	INTO :chr_l_corp_name:i_ca_clr_name
	FROM MT_COMMON_SYS_PARAMS;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	fprintf(p_ptr_clh_rpt_file,"\n");

	for (i=0;i<135;i++)
		fprintf(p_ptr_clh_rpt_file,"-");

	fprintf(p_ptr_clh_rpt_file,"\n%s         CLEARING HOUSE HAND-OFF FILE REPORT                        Page %d\n",chr_l_sys_date,p_page_no);

	fprintf(p_ptr_clh_rpt_file,"                           %s\n\n",chr_l_corp_name);

	fprintf(p_ptr_clh_rpt_file,"                  Customer Hand-off File Details \n\n");
	
	for (i=0;i<135;i++)
		fprintf(p_ptr_clh_rpt_file,"-");

	fprintf(p_ptr_clh_rpt_file,"\nCustomer      Clh. Code         Instrurity    Mkt. Code  Pre-Matched                        Quantity       Rec/Del\n\n");
	
	for (i=0;i<135;i++)
		fprintf(p_ptr_clh_rpt_file,"-");
	
	fprintf(p_ptr_clh_rpt_file,"\n");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteCustReportHeaderForTrFn successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteCustReportHeaderForTrFn with failure \n",NULL,p_intl_env_data_struct_h_d);
	
		return(APL_FAILURE);
	}
}



int WriteErrorReportHeaderForTrFn(FILE *p_ptr_clh_rpt_file,int p_page_no,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca  sqlca;
	char			  chr_l_sys_date[9];
	int			  i;
	char			  chr_l_corp_name[41];
	short			  i_ca_clr_name;

	EXEC SQL VAR chr_l_sys_date IS STRING;
	EXEC SQL VAR chr_l_corp_name IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion WriteErrorReportHeaderForTrFn\n",NULL,p_intl_env_data_struct_h_d);
	
	sqlca.sqlcode = 0;

	EXEC SQL SELECT TO_CHAR(SYS_DATE,'DD/MM/YY')
	INTO :chr_l_sys_date
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	EXEC SQL SELECT ca_identname
	INTO :chr_l_corp_name:i_ca_clr_name
	FROM MT_COMMON_SYS_PARAMS;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	fprintf(p_ptr_clh_rpt_file,"\n");

	for (i=0;i<135;i++)
		fprintf(p_ptr_clh_rpt_file,"-");

	fprintf(p_ptr_clh_rpt_file,"\n%s         CLEARING HOUSE ERROR REPORT                                Page %d\n",chr_l_sys_date,p_page_no);

	fprintf(p_ptr_clh_rpt_file,"                       %s\n\n",chr_l_corp_name);
	
	fprintf(p_ptr_clh_rpt_file,"                      Error File Details \n\n\n");
	for(i=0;i<135;i++)
		fprintf(p_ptr_clh_rpt_file,"-");

	fprintf(p_ptr_clh_rpt_file,"\nAccount       Reference No.           Error Details     \n\n");
	for (i=0;i<135;i++)
		fprintf(p_ptr_clh_rpt_file,"-");

	fprintf(p_ptr_clh_rpt_file,"\n");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteErrorReportHeaderForTrFn successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteErrorReportHeaderForTrFn with failure \n",NULL,p_intl_env_data_struct_h_d);
	
		return(APL_FAILURE);
	}
}



int WriteCustReportDetailsForTrFn(FILE *p_ptr_clh_rpt_file,char *chr_p_client,char *p_clhclient,char *p_instr_code,char *p_newissue,char *p_conf_date,double p_quantity,char *p_recdel,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca  sqlca;
	char			  chr_l_instr_parent[9];
	short			  i_instr_parent;
	char			  chr_l_mothinstrflg[2];
	short			  i_mother_sec_ind;
	char			  chr_l_conf_dt[APL_DATE_LEN];
	char			  chr_l_date[9];
	char          chr_l_desc[30];
	char			  chr_l_rep_outqty[QUANTITY_LEN+1] = APL_NULL_STRING;
	
	
	EXEC SQL VAR chr_l_instr_parent IS STRING;
	

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion WriteCustReportDetailsForTrFn\n",NULL,p_intl_env_data_struct_h_d);
	
	sqlca.sqlcode = 0;

	EXEC SQL SELECT MOTHER_SEC_IND,INSTR_PARENT
	INTO :chr_l_mothinstrflg:i_mother_sec_ind,:chr_l_instr_parent:i_instr_parent
	FROM MT_INSTRUMENT
	WHERE instr_code = :p_instr_code;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	if (strcmp(chr_l_mothinstrflg,"N") == 0)
		strcpy(p_instr_code,chr_l_instr_parent);

	strcpy(chr_l_conf_dt,p_conf_date);

	chr_l_date[0] = chr_l_conf_dt[0];
	chr_l_date[1] = chr_l_conf_dt[1];
	chr_l_date[2] = chr_l_conf_dt[2];
	chr_l_date[3] = chr_l_conf_dt[3];
	chr_l_date[4] = chr_l_conf_dt[4];
	chr_l_date[5] = chr_l_conf_dt[5];
	chr_l_date[6] = chr_l_conf_dt[8];
	chr_l_date[7] = chr_l_conf_dt[9];
	chr_l_date[8] = '\0';

	if (strcmp(p_recdel,"0") == 0)
		strcpy(chr_l_desc,"DEL");
	else 
		strcpy(chr_l_desc,"REC");

	CO_ToStr(p_quantity,QUANTITY_LEN,2,chr_l_rep_outqty);

	fprintf(p_ptr_clh_rpt_file,"%-14s%-18s%-12s%-11s%-20s%s%5s%-7s\n\n",chr_p_client,p_clhclient,p_instr_code,p_newissue,chr_l_date,chr_l_rep_outqty,' ',chr_l_desc);

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteCustReportDetailsForTrFn successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteCustReportDetailsForTrFn with failure \n",NULL,p_intl_env_data_struct_h_d);
	
		return(APL_FAILURE);
	}
}

int WriteErrorReportDetailsForTrFn(FILE *p_ptr_clh_rpt_file,char *chr_p_client,char *chr_p_refno,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca  sqlca;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion WriteErrorReportDetailsForTrFn\n",NULL,p_intl_env_data_struct_h_d);
	
	sqlca.sqlcode = 0;

	fprintf(p_ptr_clh_rpt_file,"%-14s%-18s      Counterparty Information Missing\n\n",chr_p_client,chr_p_refno);

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteErrorReportDetailsForTrFn successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion WriteErrorReportDetailsForTrFn with failure \n",NULL,p_intl_env_data_struct_h_d);
	
		return(APL_FAILURE);
	}
}



int CO_DB_Connection_N(char *p_username,char *p_passwd,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca		sqlca;

	CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CO_DB_Connection_O \n",NULL,NULL);
	sqlca.sqlcode = 0;

	EXEC SQL CONNECT :p_username IDENTIFIED BY :p_passwd;

	if (sqlca.sqlcode != 0)
		APL_GOBACK_FAIL

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_O SUCCESS \n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_O FAILURE \n",NULL,NULL);

		return(APL_FAILURE);
	}
}



 int CO_Proc_Exit(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,int p_flg)
 {
   struct sqlca      sqlca;
   char              chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;

   CO_ProcMonitor(p_ptr_log_file,"Entered processtion DoFinalProcessingFn1 \n",NULL,NULL);
   sqlca.sqlcode = 0;

   if (p_flg == 0)
   {
      

      if (CO_ChkErr(*l_debug_info_ptr) != APL_SUCCESS)
      {
         memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
         sprintf(chr_l_buf,"Finished Clearing House program");

         EXEC SQL UPDATE SYS_BATCHPROC
         SET stat_det = :chr_l_buf,
             status = 'completed'
         WHERE process_name = :argv[0]
         AND proc_init = :argv[1]
         AND STARTDATE = :argv[2]
         AND status = 'started';
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

      }

      EXEC SQL COMMIT WORK RELEASE;

      CO_ProcMonitor(p_ptr_log_file,"Work Committed \n",NULL,NULL);
   }
   else if (p_flg == 1)
   {
      EXEC SQL ROLLBACK WORK RELEASE;

      CO_ProcMonitor(p_ptr_log_file,"Rollback Done \n",NULL,NULL);
   }

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DoFinalProcessingFn1 SUCCESS \n",NULL,NULL);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion DoFinalProcessingFn1 FAILURE \n",NULL,NULL);

      return(APL_FAILURE);
   }
}



int CO_Proc_BtchLock(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca      sqlca;
   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;

   CO_ProcMonitor(p_ptr_log_file,"Entered processtion LockRecFn1 \n",NULL,NULL);

   sqlca.sqlcode = 0;

   EXEC SQL SELECT processing_status  INTO :chr_g_restart_data:g_restart_data_i
   FROM SYS_BATCHPROC
   WHERE process_name = :argv[0]
   AND proc_init = :argv[1]
   AND STARTDATE = :argv[2]
   AND status = 'started'
   FOR UPDATE OF processing_status,status;

   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion LockRecFn1 SUCCESS \n",NULL,NULL);
      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion LockRecFn1 FAILURE \n",NULL,NULL);

      return(APL_FAILURE);
   }
}



int CO_DB_Connection_O(char *p_username,char *p_passwd,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca      sqlca;

   CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CO_DB_Connection_O \n",NULL,NULL);
   sqlca.sqlcode = 0;

   EXEC SQL CONNECT :p_username IDENTIFIED BY :p_passwd;

   if (sqlca.sqlcode != 0)
      APL_GOBACK_FAIL

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
      CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_O SUCCESS \n",NULL,NULL);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_O FAILURE \n",NULL,NULL);

      return(APL_FAILURE);
   }
}
