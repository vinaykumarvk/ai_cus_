
 
#include "stdio_64.h"
#include <string.h>
#include "IV_Control_A.h" 
#include "CO_OthStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

#define PIPESEP '|'

int main(int argc, char **argv) //AIX - Warnings Removal
{

	struct					sqlca sqlca;

	/* OPT:AIX DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr 				= (DEBUG_INFO_STRUCT_H *) NULL; */
	DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr;
	INTL_ENV_DATA_STRUCT_H 		*p_intlenv_data_struct_h	= (INTL_ENV_DATA_STRUCT_H *) NULL;
	//int						 int_retval				= 0;
	FILE 						*chr_finifile			= NULL;
	//char 						chr_l_sys_date[APL_DATE_LEN];
	int 						i = 0;
	char 						chr_inifile[PATH_LENGTH];
	char 						chr_uname[APL_USERID_LEN];
	char 						chr_passwd[APL_PASSWD_LEN];
	char						chr_custody_id_b[APL_USERID_LEN];

	char **l_probill_val	=	NULL;
	int l_probill_count	=	0;
	char l_probill_ind[2]   =	APL_NULL_STRING;
	char l_probill_param[4000] = APL_NULL_STRING;

	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL VAR chr_uname 	IS STRING;
	EXEC SQL VAR chr_passwd 	IS STRING;
	EXEC SQL END DECLARE SECTION;

	
	p_intlenv_data_struct_h   =  (INTL_ENV_DATA_STRUCT_H*)calloc(1,sizeof(INTL_ENV_DATA_STRUCT_H));
	APL_MALLOC_FAIL(p_intlenv_data_struct_h);

	strcpy(l_probill_param,argv[9]);

	printf("l_probill_param :|%s|\n",l_probill_param);

	if(CO_SplitStr(l_probill_param,PIPESEP,&l_probill_count,&l_probill_val) == APL_FAILURE)
	{
		 CO_ProcMonitor(fp, "Failure from CO_SplitStr -- PIPESEP -- ", NULL, NULL);
		 APL_GOBACK_FAIL
	}

	for(i=0;i<l_probill_count;i++)
	{
		if(i==4)
		strcpy(l_probill_ind,l_probill_val[i]);
	}

	printf("l_probill_ind :|%s|\n",l_probill_ind);

	if((!strcmp(l_probill_ind,"G"))||(!strcmp(l_probill_ind,"R")))	/* Changes by Bageshri for Provisional Bill Reset Functionality */
	{
	
	   strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
	   strcat(chr_inifile,"intl_sun.cfg");

	   if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
	      exit(-1);

	   APL_FETCH_DB_LOGIN_DETAILS(chr_finifile, chr_custody_id_b, chr_uname, chr_passwd , APL_OUT_FILE , l_debug_info_ptr)//AIX - Warnings Removal
	   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;
	   IS_ANY_ORA_ERROR
		
		
	   EXEC SQL COMMIT;
	   IS_ANY_ORA_ERROR
		

	   if (APL_FAILURE == CO_RtvSysParams(l_debug_info_ptr))//AIX - Warnings Removal
	   {
	      APL_GOBACK_FAIL
	   }

		CO_FreeErrLst(l_debug_info_ptr);//AIX - Warnings Removal

		printf("Entering IV_Proc_CallBillGen \n");
			
		if (APL_FAILURE == IV_Proc_CallBillGen(argv))
		{
			CO_FreeErrLst(l_debug_info_ptr);//AIX - Warnings Removal
			printf("Failure from IV_Proc_CallBillGen \n");
			EXEC SQL ROLLBACK WORK RELEASE;		
			IS_ANY_ORA_ERROR
			
		}	
		else
		{
			printf("Success from IV_Proc_CallBillGen \n");
			EXEC SQL COMMIT WORK RELEASE;
			IS_ANY_ORA_ERROR

		}

	}
	else if(!strcmp(l_probill_ind,"P"))
	{

	   strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
	   strcat(chr_inifile,"intl_sun.cfg");

	   printf("Second Time Login for Printing \n");

	   if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
	      exit(-1);

	   APL_FETCH_DB_LOGIN_DETAILS(chr_finifile, chr_custody_id_b, chr_uname, chr_passwd , APL_OUT_FILE , l_debug_info_ptr)//AIX - Warnings Removal
	   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;
	   IS_ANY_ORA_ERROR
		
		
		   EXEC SQL COMMIT;
		   IS_ANY_ORA_ERROR

		CO_FreeErrLst(l_debug_info_ptr);//AIX - Warnings Removal

		printf("Entering IV_Prov_CallBillPrnt \n");
			
		if (APL_FAILURE == IV_Prov_CallBillPrnt(argv))
		{
			CO_FreeErrLst(l_debug_info_ptr);//AIX - Warnings Removal
			printf("Failure from IV_Prov_CallBillPrnt \n");
			EXEC SQL ROLLBACK WORK RELEASE;		
			IS_ANY_ORA_ERROR
			APL_GOBACK_FAIL
		}	
		else
		{
			printf("Success from IV_Prov_CallBillPrnt \n");
			EXEC SQL COMMIT WORK RELEASE;
			IS_ANY_ORA_ERROR
			APL_GOBACK_SUCCESS
		}


		CO_FreeErrLst(l_debug_info_ptr);//AIX - Warnings Removal

	}


	APL_GOBACK_SUCCESS
	
	RETURN_SUCCESS:
	exit(0); 


	RETURN_FAILURE:
	exit(1); 
}

