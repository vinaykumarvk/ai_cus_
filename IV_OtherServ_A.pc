




#include "stdio_64.h"
#include <string.h> 
#include <stdlib.h> 
#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;



int IV_Chk_IVOTHERSERVIsExistOthSrv(const char *p_client, int *int_p_retstat, 
				   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	extern int IV_Rtv_IVCNTLPARAM(SYS_IVCONTROLPARAM_STRUCT *l_sys_ivcontrol_param_struct, 
				int *int_l_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	int int_l_status = 0;

	EXEC SQL BEGIN DECLARE SECTION;

		int int_h_count = 0;
		SYS_IVCONTROLPARAM_STRUCT l_sys_ivcontrol_param_struct;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_prev_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_upto_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_processdt IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.b_dlv_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.last_dlv_date IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.archival_dt IS STRING;
		EXEC SQL VAR l_sys_ivcontrol_param_struct.last_rpt_date IS STRING;
		short int int_i_count = 0;
		I_SYS_IVCONTROLPARAM_STRUCT l_i_sys_ivcontrolparam_struct= {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	if ( APL_FAILURE == 
		IV_Rtv_IVCNTLPARAM(&l_sys_ivcontrol_param_struct, &int_l_status, l_debug_info_ptr) )
	{
		*int_p_retstat = int_l_status;

		if ( int_l_status == IV_NO_DATA_FOUND_ERR )
		{
			CO_InsertErr(l_debug_info_ptr, ERR_BILLCNTRL_PARAM_NOTFND, 
				       APL_NULL_STRING, APL_NULL_STRING, 
				       APL_NULL_STRING, __LINE__, __FILE__);
		}

		APL_GOBACK_FAIL
	}

	EXEC SQL SELECT NVL( COUNT(*), 0 )
		 INTO :int_h_count INDICATOR :int_i_count
		 FROM IV_SERV_OTH
		 WHERE ((CLIENT = :p_client) AND
			(B_UPTO_DATE > :l_sys_ivcontrol_param_struct.b_prev_date) AND 
			(B_UPTO_DATE <= :l_sys_ivcontrol_param_struct.b_upto_date));

	if ( sqlca.sqlcode < 0 )
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}
	else if ( !int_h_count )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;

		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Chk_IVOTHERSERVIsExistOthSrv().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
 IV_Chk_IVOTHERSERVIsExistOthSrv().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}
