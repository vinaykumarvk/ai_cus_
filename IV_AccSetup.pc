




#include "stdio_64.h"
#include <string.h> 
#include <stdlib.h> 

#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;




int IV_Rtv_IVCUSTSETUP(char *chr_p_client,IV_CLIENTSETUP_STRUCT *p_iv_clientsetup_struct,
                       int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	Alert ("Calling IV_Rtv_IVCUSTSETUP for client |%s|",chr_p_client);
	fflush(stdout);

char h_dl_client[20];
IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct;
I_IV_CLIENTSETUP_STRUCT l_i_iv_clientsetup_struct;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.default_feeclt IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.client IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.comm_clt IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.rec_clt IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.information IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.b_ccycd IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.fees_ccy IS STRING; 
EXEC SQL VAR l_iv_clt_setup_struct.last_pymt_ccy IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.maker IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.checker IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.checker_dt IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.maker_dt IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.spl_clt_cd IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.access_stamp IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.date_of_input IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.vat_cd IS STRING;			
EXEC SQL VAR l_iv_clt_setup_struct.vat_note IS STRING;

/***** Bageshri  HDFCIV_001 *******/
EXEC SQL VAR l_iv_clt_setup_struct.oblg_lvl IS STRING;	
EXEC SQL VAR l_iv_clt_setup_struct.oblg_typ IS STRING;	
EXEC SQL VAR l_iv_clt_setup_struct.pay_in_acc IS STRING;	
EXEC SQL VAR l_iv_clt_setup_struct.pay_out_acc IS STRING;	
EXEC SQL VAR l_iv_clt_setup_struct.acc_code1 IS STRING;	
EXEC SQL VAR l_iv_clt_setup_struct.acc_code2 IS STRING;	
EXEC SQL VAR l_iv_clt_setup_struct.acc_code2desc IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.oblig_rep_flg IS STRING;	
EXEC SQL VAR l_iv_clt_setup_struct.cln_supermst IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.bnk_acc IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.bnk_fcy_acc IS STRING; /* YOG 211206 */
EXEC SQL VAR l_iv_clt_setup_struct.pymt_acc IS STRING;
/* HDFCIV_001 Bageshri ********END*/	
EXEC SQL VAR l_iv_clt_setup_struct.ann_fee_month IS STRING;/* HDFCIV_004 PJ */
EXEC SQL VAR l_iv_clt_setup_struct.lst_bill_dt IS STRING;/* vinay */
EXEC SQL VAR l_iv_clt_setup_struct.dir_db_date IS STRING;/* vinay */
EXEC SQL VAR l_iv_clt_setup_struct.b_basis IS STRING;/* Bageshri HB_IV_001 */
EXEC SQL VAR l_iv_clt_setup_struct.b_dlv_date IS STRING;/* Bageshri HB_IV_001 */
EXEC SQL VAR l_iv_clt_setup_struct.b_basis_cust IS STRING;/* Bageshri HB_IV_001 */

EXEC SQL END DECLARE SECTION;

struct sqlca sqlca;

#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif


memset(h_dl_client, APL_NULL_CHAR, sizeof(h_dl_client));
	strcpy(h_dl_client,chr_p_client);
Alert("Client After Copy is : |%s|",h_dl_client);
fflush(stdout);

memset(&l_iv_clt_setup_struct, NULL, sizeof(IV_CLIENTSETUP_STRUCT));
memset(&l_i_iv_clientsetup_struct, NULL, sizeof(I_IV_CLIENTSETUP_STRUCT));


	EXEC SQL SELECT *
	         INTO :l_iv_clt_setup_struct:l_i_iv_clientsetup_struct
		 FROM IV_CLIENTSETUP
		 WHERE client = :h_dl_client;

	printf("After Fetch IV_CLIENTSETUP : sqlca.sqlcode:|%d|",sqlca.sqlcode);	
	fflush(stdout);
		
	if(sqlca.sqlcode == 1403)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		Alert("No Setup Details Maintained for Client |%s|",h_dl_client);
		fflush(stdout);
		APL_GOBACK_FAIL
	}
	else
	{	
		if(l_i_iv_clientsetup_struct.i_bl_currencycode == -1)
		{
			strcpy(l_iv_clt_setup_struct.b_ccycd," ");
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_fee_currencycode == -1) 
		{
		 	strcpy(l_iv_clt_setup_struct.fees_ccy," ");	
			*int_p_retstat = IV_COLUMN_NULL_ERR;
		}
		if(l_i_iv_clientsetup_struct.i_send_to_master_ind == -1)
		{
			l_iv_clt_setup_struct.send_to_master_ind = ' ';
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_b_gen_flag == -1)
		{
			l_iv_clt_setup_struct.b_gen_ind = ' ';
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_minimumfee_to == -1)
		{
			l_iv_clt_setup_struct.minimumfee_to = ' ';
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_min_hld_adj == -1)
		{
			l_iv_clt_setup_struct.min_hld_adj = ' ';
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_comm_tax_amount == -1)
		{
			l_iv_clt_setup_struct.comm_tax_amt = 0;
		}
		if(l_i_iv_clientsetup_struct.i_minimumfee == -1)
		{
			l_iv_clt_setup_struct.minimumfee = 0;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_stat_ind == -1)
		{
			l_iv_clt_setup_struct.stat_ind = ' ';
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_lstdlosamount == -1)
		{
			l_iv_clt_setup_struct.last_lost_amt = 0;
		}
		if(l_i_iv_clientsetup_struct.i_tot_os_amount == -1)
		{
			l_iv_clt_setup_struct.total_osamount = 0;
		}
		if(l_i_iv_clientsetup_struct.i_dir_db_flag == -1)
		{
			l_iv_clt_setup_struct.dir_db_ind = ' ';
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_def_fee_clt == -1)
		{
			strcpy(l_iv_clt_setup_struct.default_feeclt," ");
		}
		if(l_i_iv_clientsetup_struct.i_new_dt == -1)
		{
			strcpy(l_iv_clt_setup_struct.date_of_input," ");
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_maker == -1)
		{
			strcpy(l_iv_clt_setup_struct.maker ," ");
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_maker_dt == -1)
		{
			strcpy(l_iv_clt_setup_struct.maker_dt," ");
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_checker == -1)
		{
			strcpy(l_iv_clt_setup_struct.checker," ");
		}
		if(l_i_iv_clientsetup_struct.i_checker_dt == -1)
		{
			strcpy(l_iv_clt_setup_struct.checker_dt," ");
		}
		if(l_i_iv_clientsetup_struct.i_access_stamp == -1)
		{
			strcpy(l_iv_clt_setup_struct.access_stamp," ");
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		if(l_i_iv_clientsetup_struct.i_spl_clt_cd == -1)
		{
			strcpy(l_iv_clt_setup_struct.spl_clt_cd," ");
		}
		if(l_i_iv_clientsetup_struct.i_comm_clt == -1)
		{
			strcpy(l_iv_clt_setup_struct.comm_clt," ");
		}
		if(l_i_iv_clientsetup_struct.i_rec_clt == -1)
		{
			strcpy(l_iv_clt_setup_struct.rec_clt," ");
			*int_p_retstat = IV_COLUMN_NULL_ERR;
		}
		if(l_i_iv_clientsetup_struct.i_footinfo == -1)
		{
			strcpy(l_iv_clt_setup_struct.information," ");
		}
		if(l_i_iv_clientsetup_struct.i_lst_pymt_dt == -1)
		{
			strcpy(l_iv_clt_setup_struct.last_pymt_date," ");
		}
		if(l_i_iv_clientsetup_struct.i_lst_pm_currencycode == -1)
		{
			strcpy(l_iv_clt_setup_struct.last_pymt_ccy," ");
		}
		if(l_i_iv_clientsetup_struct.i_lst_pm_amount == -1)
		{
			l_iv_clt_setup_struct.last_pymt_amt = 0;
		}
		if(l_i_iv_clientsetup_struct.i_lstdlosamount == -1)
		{
			l_iv_clt_setup_struct.last_lost_amt = 0;
		}
		
		if(l_i_iv_clientsetup_struct.i_vat_cd == -1)
		{
			strcpy(l_iv_clt_setup_struct.vat_cd," ");
		}
		if(l_i_iv_clientsetup_struct.i_vatfootinfo == -1)
		{
			strcpy(l_iv_clt_setup_struct.vat_note," ");
		}
		/* HDFCIV_004 PJ */
		if(l_i_iv_clientsetup_struct.i_portfolio_eval == -1)
		{
		/*	strcpy(l_iv_clt_setup_struct.portfolio_eval," ");	*/
			l_iv_clt_setup_struct.portfolio_eval = ' ';
		}
		if(l_i_iv_clientsetup_struct.i_nav_ind == -1)
		{
			l_iv_clt_setup_struct.nav_ind =' ';
		}
		if(l_i_iv_clientsetup_struct.i_ann_fee_month == -1)
		{
		/***************** Bageshri  HDFCIV_001 ***********************/
			strcpy(l_iv_clt_setup_struct.ann_fee_month," ");
		}
		if(l_i_iv_clientsetup_struct.i_oblg_lvl == -1)
		{
			strcpy(l_iv_clt_setup_struct.oblg_lvl," ");
		}
		if(l_i_iv_clientsetup_struct.i_oblg_typ == -1)
		{
			strcpy(l_iv_clt_setup_struct.oblg_typ," ");
		}
		if(l_i_iv_clientsetup_struct.i_pay_in_day == -1)
		{
			l_iv_clt_setup_struct.pay_in_day=0;
		}
		if(l_i_iv_clientsetup_struct.i_pay_out_day == -1)
		{
			l_iv_clt_setup_struct.pay_out_day=0;
		}
		if(l_i_iv_clientsetup_struct.i_b_freq == -1)
		{
			l_iv_clt_setup_struct.b_freq=' ';
		}
		if(l_i_iv_clientsetup_struct.i_pay_out_lmt == -1)
		{
			l_iv_clt_setup_struct.pay_out_lmt=0;
		}
		if(l_i_iv_clientsetup_struct.i_dvp_ind == -1)
		{
			l_iv_clt_setup_struct.dvp_ind=' ';
		}
		if(l_i_iv_clientsetup_struct.i_acc_typ == -1)
		{
			l_iv_clt_setup_struct.acc_typ=' ';
		}
		if(l_i_iv_clientsetup_struct.i_pay_in_acc == -1)
		{
			strcpy(l_iv_clt_setup_struct.pay_in_acc," ");
		}
		if(l_i_iv_clientsetup_struct.i_pay_out_acc == -1)
		{
			strcpy(l_iv_clt_setup_struct.pay_out_acc," ");
		}
		if(l_i_iv_clientsetup_struct.i_acc_code1 == -1)
		{
			strcpy(l_iv_clt_setup_struct.acc_code1," ");
		}
		if(l_i_iv_clientsetup_struct.i_acc_code2 == -1)
		{
			strcpy(l_iv_clt_setup_struct.acc_code2," ");
		}
		if(l_i_iv_clientsetup_struct.i_acc_code2desc == -1)
		{
			strcpy(l_iv_clt_setup_struct.acc_code2desc," ");
		}
		if(l_i_iv_clientsetup_struct.i_oblig_rep_flg == -1)
		{
			strcpy(l_iv_clt_setup_struct.oblig_rep_flg," ");
		}
		if(l_i_iv_clientsetup_struct.i_calc_basis == -1)
		{
			l_iv_clt_setup_struct.calc_basis=' ';
		}
		if(l_i_iv_clientsetup_struct.i_cln_supermst == -1)
		{
			strcpy(l_iv_clt_setup_struct.cln_supermst," ");
		}
		if(l_i_iv_clientsetup_struct.i_bnk_acc == -1)
		{
			strcpy(l_iv_clt_setup_struct.bnk_acc," ");
		}

		/* Added by YOG on 211206 for bnk_fcy_acc */
		if(l_i_iv_clientsetup_struct.i_bnk_fcy_acc == -1)
		{
			strcpy(l_iv_clt_setup_struct.bnk_fcy_acc," ");
		}
		/******* vinay kalaskar ********/
		if(l_i_iv_clientsetup_struct.i_maximumfee_to == -1)
		{
			l_iv_clt_setup_struct.maximumfee_to = ' ';
		}
		if(l_i_iv_clientsetup_struct.i_max_hld_adj == -1)
		{
			l_iv_clt_setup_struct.max_hld_adj = ' ';
		}
		if(l_i_iv_clientsetup_struct.i_txnminfee == -1)
		{
			l_iv_clt_setup_struct.txnminfee=0.0;
		}
		if(l_i_iv_clientsetup_struct.i_txnmaxfee == -1)
		{
			l_iv_clt_setup_struct.txnmaxfee=0.0;
		}
		if(l_i_iv_clientsetup_struct.i_maximumfee == -1)
		{
			l_iv_clt_setup_struct.maximumfee=0.0;
		}
		if(l_i_iv_clientsetup_struct.i_lst_bill_dt == -1)
		{
			strcpy(l_iv_clt_setup_struct.lst_bill_dt," ");
		}
		if(l_i_iv_clientsetup_struct.i_pymt_acc == -1)
		{
			strcpy(l_iv_clt_setup_struct.pymt_acc," ");
		}
		/* Bageshri  HDFCIV_001 *END */	
		/* Bageshri HB_IV_001 START */
		if(l_i_iv_clientsetup_struct.i_dir_db_date == -1)
		{
			strcpy(l_iv_clt_setup_struct.dir_db_date," ");
		}
		if(l_i_iv_clientsetup_struct.i_b_basis == -1)
		{
			strcpy(l_iv_clt_setup_struct.b_basis," ");
		}
		if(l_i_iv_clientsetup_struct.i_b_dlv_date == -1)
		{
			strcpy(l_iv_clt_setup_struct.b_dlv_date," ");
		}
		if(l_i_iv_clientsetup_struct.i_rep_pay_in_day == -1)
		{
			l_iv_clt_setup_struct.rep_pay_in_day=1;
		}
		if(l_i_iv_clientsetup_struct.i_rep_pay_out_day == -1)
		{
			l_iv_clt_setup_struct.rep_pay_out_day=2;
		}
		if(l_i_iv_clientsetup_struct.i_b_basis_cust == -1)
		{
			strcpy(l_iv_clt_setup_struct.b_basis_cust," ");
		}
		/* Bageshri HB_IV_001 END */
			
	}
	
	*p_iv_clientsetup_struct = l_iv_clt_setup_struct;
	Alert("Client in structure is |%s|",p_iv_clientsetup_struct->client);
	fflush(stdout);
	
	if(*int_p_retstat == IV_COLUMN_NULL_ERR)
	{
		APL_GOBACK_FAIL
	}
	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

   	RETURN_SUCCESS:
		Alert("Returning successfully from the function IV_Rtv_IVCUSTSETUP");
		fflush(stdout);
                return APL_SUCCESS;

        RETURN_FAILURE:
		Alert("Returning unsuccessfully from the function IV_Rtv_IVCUSTSETUP");
		fflush(stdout);
                return APL_FAILURE;


} 



int IV_Mod_IVBCUSTSETUPAmt(const IV_CLIENTSETUP_STRUCT *p_iv_clientsetup_struct_a, 
			  int *int_p_retstat, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	

	extern int CO_RtvSysDtTime(char *chr_l_sys_date_time, 
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

	

	EXEC SQL BEGIN DECLARE SECTION;

		char chr_h_sys_date_time[APL_DATE_LEN];
		I_IV_CLIENTSETUP_STRUCT l_i_iv_clientsetup_struct = {0, 0, 0, 0, 0, 0, 0, 0, 0, 
			0, 0, 0, 0, 0, 0, 0, 0, 0, 
			0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0};		/* Bageshri  HDFCIV_001 *//* Bageshri  HB_IV_001 */
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	memset(chr_h_sys_date_time, APL_NULL_CHAR, APL_DATE_LEN);

	if (APL_FAILURE == CO_RtvSysDtTime(chr_h_sys_date_time, l_debug_info_ptr))
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

	if ( !strlen(p_iv_clientsetup_struct_a->last_pymt_date) )
	{
		l_i_iv_clientsetup_struct.i_lst_pymt_dt = -1;
		l_i_iv_clientsetup_struct.i_lst_pm_amount = -1;
		l_i_iv_clientsetup_struct.i_lst_pm_currencycode = -1;
	}

	EXEC SQL UPDATE IV_CLIENTSETUP
		 SET TOTAL_OSAMOUNT = :p_iv_clientsetup_struct_a->total_osamount
				   INDICATOR :l_i_iv_clientsetup_struct.i_tot_os_amount,
		     LAST_LOST_AMT = :p_iv_clientsetup_struct_a->last_lost_amt
				   INDICATOR :l_i_iv_clientsetup_struct.i_lstdlosamount,
		     LAST_PYMT_DATE = :p_iv_clientsetup_struct_a->last_pymt_date
				   INDICATOR :l_i_iv_clientsetup_struct.i_lst_pymt_dt,
		     LAST_PYMT_AMT = :p_iv_clientsetup_struct_a->last_pymt_amt
				   INDICATOR :l_i_iv_clientsetup_struct.i_lst_pm_amount,
		     LAST_PYMT_CCY = :p_iv_clientsetup_struct_a->last_pymt_ccy
				   INDICATOR :l_i_iv_clientsetup_struct.i_lst_pm_currencycode,
			 B_DLV_DATE = :p_iv_clientsetup_struct_a->b_dlv_date	//ISKB_430_07 shailesh 04122007
				   INDICATOR :l_i_iv_clientsetup_struct.i_b_dlv_date,	//The Bill Delivery also has to be updated	
		     ACCESS_STAMP = :chr_h_sys_date_time
				   INDICATOR :l_i_iv_clientsetup_struct.i_access_stamp
		 WHERE ((CLIENT = :p_iv_clientsetup_struct_a->client) AND
			(ACCESS_STAMP = :p_iv_clientsetup_struct_a->access_stamp));

	if ( sqlca.sqlcode < 0 )
	{
		char chr_l_buffer[KEY_LENGTH];

		memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer, 
			       APL_NULL_STRING, APL_NULL_STRING, 
			       __LINE__, __FILE__);

		APL_GOBACK_FAIL
	}
	else if ( sqlca.sqlcode == 1403 )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;

		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
IV_Mod_IVBCUSTSETUPAmt().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
IV_Mod_IVBCUSTSETUPAmt().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}
