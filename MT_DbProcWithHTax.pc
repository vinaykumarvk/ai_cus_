


   
   
   
   
   
   
   
   
   
   
   
   





#include "CO_HostStructdef.h"
EXEC SQL INCLUDE SQLCA;





int MT_Mod_DBWTaxRt( MT_WHTRATE_STRUCT_H    *p_mt_whtrate_struct_h,
                 INTL_ENV_DATA_STRUCT_H   *p_intl_env_data_struct_h_e,
                 DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
               )
{

  

	struct sqlca         sqlca;

	MT_WHTRATE_STRUCT_I   *l_mt_whtrate_struct_i = NULL;

	char  chr_access_stamp_time[APL_DATE_LEN] = APL_NULL_STRING;
	char  chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
	char  chr_p_rowid[APL_ROWID_LEN]          = APL_NULL_STRING;

   char     chr_l_mainfuncarea[APL_MAINFUNCAREA_LEN]      = APL_NULL_STRING;
	char     chr_l_condid_a[APL_CONDID_LEN]                  = APL_NULL_STRING;
	short  l_cntry_exists = 0 ;

   #ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
   #endif
  

   sqlca.sqlcode = 0;

	l_mt_whtrate_struct_i = (MT_WHTRATE_STRUCT_I *)calloc(1,sizeof(MT_WHTRATE_STRUCT_I));

printf("The h_mode is %s\n",p_intl_env_data_struct_h_e->h_mode);

   APL_IF_DEBUG
	{
   	CO_ProcMonitor(APL_OUT_FILE,"Entering processtion MT_Mod_DBWTaxRt!!!",NULL,p_intl_env_data_struct_h_e);
	}




	if(CO_RtvSysDtTime(chr_access_stamp_time, l_debug_info_ptr) != APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}


strcpy(chr_l_mainfuncarea, "WTHOLD_TAXRT");
strcpy(chr_l_condid_a, "AUTHORIZE");

   if(!strcmp(p_intl_env_data_struct_h_e->h_mode,APL_FUNC_INPUT))
   {

   	APL_IF_DEBUG
		{
   		CO_ProcMonitor(APL_OUT_FILE,"Entering Input h_mode of Function CDBUpdWtrFn",NULL,p_intl_env_data_struct_h_e);
		}
			
		if (APL_FAILURE == CO_Chk_CntryEnabled(chr_l_mainfuncarea,
														 chr_l_condid_a,
														 &l_cntry_exists,
														 l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}
		
  		strcpy(p_mt_whtrate_struct_h->h_access_stamp, chr_access_stamp_time);
		strcpy(p_mt_whtrate_struct_h->h_maker, p_intl_env_data_struct_h_e->usr); 
		strcpy(p_mt_whtrate_struct_h->h_maker_dt, chr_access_stamp_time);
			sleep(1);
		if (l_cntry_exists == 0)
		{
			strcpy(p_mt_whtrate_struct_h->h_status_ind, STATUS_UAUTH);
		}
	   else 
		{
			strcpy(p_mt_whtrate_struct_h->h_status_ind, STATUS_AUTH);
			strcpy(p_mt_whtrate_struct_h->h_checker, "SYSTEM");
			strcpy(p_mt_whtrate_struct_h->h_checker_dt, chr_access_stamp_time);
		}


  		EXEC SQL INSERT INTO MT_WHTRATE
			VALUES  (:p_mt_whtrate_struct_h:l_mt_whtrate_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE(
													ERR_WHT_EXIST,   
													p_mt_whtrate_struct_h->h_nationcode,
													p_mt_whtrate_struct_h->h_prodateype,
													APL_NULL_STRING
													)
	}


  if(!strcmp(p_intl_env_data_struct_h_e->h_mode,APL_FUNC_MODIFY))
   {

   	APL_IF_DEBUG
		{
   		CO_ProcMonitor(APL_OUT_FILE,"Entering Modify h_mode of Function CDBUpdWtrFn",NULL,p_intl_env_data_struct_h_e);
		}

		if (APL_FAILURE == CO_Chk_CntryEnabled(chr_l_mainfuncarea,
														 chr_l_condid_a,
														 &l_cntry_exists,
														 l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}

   		EXEC SQL SELECT ACCESS_STAMP, ROWID
        		INTO :chr_acc_stamp_compare,:chr_p_rowid
        		FROM MT_WHTRATE
            WHERE NATION_CD =:p_mt_whtrate_struct_h->h_nationcode
            AND   PROD_CLASS  =:p_mt_whtrate_struct_h->h_prodateype
				FOR UPDATE OF ACCESS_STAMP;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(
												E_WHT_NF,   
												p_mt_whtrate_struct_h->h_nationcode,
												p_mt_whtrate_struct_h->h_prodateype,
												APL_NULL_STRING
												)


   		if(!strcmp(p_mt_whtrate_struct_h->h_access_stamp,chr_acc_stamp_compare))
      	{
		  		strcpy(p_mt_whtrate_struct_h->h_access_stamp, chr_access_stamp_time);
		  		strcpy(p_mt_whtrate_struct_h->h_maker_dt, chr_access_stamp_time);
			
				
				printf("\n 6.9 ST support printfs .. |%d|",l_cntry_exists);
				/*if (l_cntry_exists > 0) - INTL_SOL_49 Fix - Rahul -16Feb2007*/
				if (l_cntry_exists == 0)  
				{
					printf("\n 6.Inside if > 0 9 ST support printfs .. |%d|",l_cntry_exists);
					strcpy(p_mt_whtrate_struct_h->h_status_ind, STATUS_UAUTH);
					strcpy(p_mt_whtrate_struct_h->h_maker, p_intl_env_data_struct_h_e->usr);
				}
	   		else 
				{
					printf("\n 6.Inside else  9 ST support printfs .. |%d|",l_cntry_exists);
					strcpy(p_mt_whtrate_struct_h->h_status_ind, STATUS_AUTH);
					strcpy(p_mt_whtrate_struct_h->h_maker, p_intl_env_data_struct_h_e->usr);
					strcpy(p_mt_whtrate_struct_h->h_checker, "SYSTEM"); 
					strcpy(p_mt_whtrate_struct_h->h_checker_dt, chr_access_stamp_time);
				}

					printf("\n 6.9 ST support printfs Just before update .. |%s|",p_mt_whtrate_struct_h->h_checker);
 	     			EXEC SQL UPDATE MT_WHTRATE SET
 					CUSTODYTAXRT = :p_mt_whtrate_struct_h->h_custodytaxrt,
 					MAKER = :p_intl_env_data_struct_h_e->usr,
 					MAKER_DT = :p_mt_whtrate_struct_h->h_maker_dt,
 					ACCESS_STAMP = :p_mt_whtrate_struct_h->h_access_stamp,
					STATUS = :p_mt_whtrate_struct_h->h_status_ind,
					CHECKER = :p_mt_whtrate_struct_h->h_checker,
					CHECKER_DT = :p_mt_whtrate_struct_h->h_checker_dt
						WHERE ROWID = :chr_p_rowid;

				IS_ANY_ORA_ERROR
			}

			else
			{
				CO_InsertErr(
									l_debug_info_ptr,
          						ERR_ACCESSSTAMP_CHGD,      
                           p_mt_whtrate_struct_h->h_nationcode,
                           p_mt_whtrate_struct_h->h_prodateype,
          						APL_NULL_STRING,
          						__LINE__,
          						__FILE__
         						); 

            APL_GOBACK_FAIL
			}
	} 

   if(!strcmp(p_intl_env_data_struct_h_e->h_mode, APL_FUNC_AUTHORISE))
   {
	
			

   	APL_IF_DEBUG
		{
   		CO_ProcMonitor(APL_OUT_FILE,"Entering AUTHORISE h_mode of Function CDBUpdWtrFn",NULL,p_intl_env_data_struct_h_e);
		}

		
		

	EXEC SQL SELECT ACCESS_STAMP, ROWID INTO :chr_acc_stamp_compare,	
	:chr_p_rowid FROM MT_WHTRATE 
	WHERE NATION_CD =:p_mt_whtrate_struct_h->h_nationcode
	AND PROD_CLASS  =:p_mt_whtrate_struct_h->h_prodateype
	FOR UPDATE OF ACCESS_STAMP;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(
					E_WHT_NF,   
					p_mt_whtrate_struct_h->h_nationcode,
					p_mt_whtrate_struct_h->h_prodateype,
					APL_NULL_STRING)				
 printf("\n the access stamp p_mt_whtrate_struct_h->h_access_stamp is %s\n ", p_mt_whtrate_struct_h->h_access_stamp);
	printf("\n the access stamp chr_acc_stamp_compare is %s\n",chr_acc_stamp_compare);
	if (!strcmp(p_mt_whtrate_struct_h->h_access_stamp,chr_acc_stamp_compare))
	{
		if(strcmp(p_mt_whtrate_struct_h->h_status_ind,STATUS_DEL_UAUTH))
		{
			strcpy(p_mt_whtrate_struct_h->h_access_stamp,chr_access_stamp_time); 
			strcpy(p_mt_whtrate_struct_h->h_checker,p_intl_env_data_struct_h_e->usr);
			strcpy(p_mt_whtrate_struct_h->h_checker_dt,chr_acc_stamp_compare);
			strcpy(p_mt_whtrate_struct_h->h_status_ind,STATUS_AUTH);
	
			 EXEC SQL UPDATE MT_WHTRATE SET
			 ACCESS_STAMP = :p_mt_whtrate_struct_h->h_access_stamp, 
			 CHECKER = :p_intl_env_data_struct_h_e->usr, 
			 CHECKER_DT = :p_mt_whtrate_struct_h->h_access_stamp,
			 STATUS = :p_mt_whtrate_struct_h->h_status_ind
			 WHERE NATION_CD = :p_mt_whtrate_struct_h->h_nationcode
			 AND PROD_CLASS  = :p_mt_whtrate_struct_h->h_prodateype;

 			 IS_ANY_ORA_ERROR;
		}
		else
		{
			EXEC SQL DELETE MT_WHTRATE
			   WHERE ROWID = :chr_p_rowid;

			IS_ANY_ORA_ERROR;
		}
	}
	else 
	{
		
            CO_InsertErr(
                           l_debug_info_ptr,
                           ERR_ACCESSSTAMP_CHGD,
                              
                           p_mt_whtrate_struct_h->h_nationcode,
                           p_mt_whtrate_struct_h->h_prodateype,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__
                           ); 

            APL_GOBACK_FAIL;
	}	
}

   if(!strcmp(p_intl_env_data_struct_h_e->h_mode, APL_FUNC_RESET))
   {
	
			

   	APL_IF_DEBUG
		{
   		CO_ProcMonitor(APL_OUT_FILE,"Entering RESET h_mode of Function CDBUpdWtrFn",NULL,p_intl_env_data_struct_h_e);
		}

		
		

	EXEC SQL SELECT ACCESS_STAMP, ROWID INTO :chr_acc_stamp_compare,	
	:chr_p_rowid FROM MT_WHTRATE 
	WHERE NATION_CD =:p_mt_whtrate_struct_h->h_nationcode
	AND PROD_CLASS  =:p_mt_whtrate_struct_h->h_prodateype
	FOR UPDATE OF ACCESS_STAMP;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(
					E_WHT_NF,   
					p_mt_whtrate_struct_h->h_nationcode,
					p_mt_whtrate_struct_h->h_prodateype,
					APL_NULL_STRING)				
 printf("\n the access stamp p_mt_whtrate_struct_h->h_access_stamp is %s\n ", p_mt_whtrate_struct_h->h_access_stamp);
	printf("\n the access stamp chr_acc_stamp_compare is %s\n",chr_acc_stamp_compare);
	if (!strcmp(p_mt_whtrate_struct_h->h_access_stamp,chr_acc_stamp_compare))
	{
		if(!strcmp(p_mt_whtrate_struct_h->h_status_ind,STATUS_DEL_UAUTH))
		{
			strcpy(p_mt_whtrate_struct_h->h_access_stamp,chr_access_stamp_time); 
			strcpy(p_mt_whtrate_struct_h->h_checker,p_intl_env_data_struct_h_e->usr);
			strcpy(p_mt_whtrate_struct_h->h_checker_dt,chr_acc_stamp_compare);
			strcpy(p_mt_whtrate_struct_h->h_status_ind,STATUS_AUTH);
	
			 EXEC SQL UPDATE MT_WHTRATE SET
			 ACCESS_STAMP = :p_mt_whtrate_struct_h->h_access_stamp, 
			 CHECKER = :p_intl_env_data_struct_h_e->usr, 
			 CHECKER_DT = :p_mt_whtrate_struct_h->h_access_stamp,
			 STATUS = :p_mt_whtrate_struct_h->h_status_ind
			 WHERE NATION_CD = :p_mt_whtrate_struct_h->h_nationcode
			 AND PROD_CLASS  = :p_mt_whtrate_struct_h->h_prodateype;

 			 IS_ANY_ORA_ERROR;
		}
	}
	else 
	{
		
            CO_InsertErr(
                           l_debug_info_ptr,
                           ERR_ACCESSSTAMP_CHGD,
                              
                           p_mt_whtrate_struct_h->h_nationcode,
                           p_mt_whtrate_struct_h->h_prodateype,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__
                           ); 

            APL_GOBACK_FAIL;
	}	
}
  if(!strcmp(p_intl_env_data_struct_h_e->h_mode, APL_FUNC_DELETE))
   {
		strcpy(p_mt_whtrate_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_whtrate_struct_h->h_checker_dt,APL_NULL_STRING);

   	APL_IF_DEBUG
		{
   		CO_ProcMonitor(APL_OUT_FILE,"Entering Delete h_mode of Function CDBUpdWtrFn",NULL,p_intl_env_data_struct_h_e);
		}
		
		if (APL_FAILURE == CO_Chk_CntryEnabled(chr_l_mainfuncarea,
														 chr_l_condid_a,
														 &l_cntry_exists,
														 l_debug_info_ptr))
		{
			APL_GOBACK_FAIL;
		}


         EXEC SQL SELECT ACCESS_STAMP, ROWID
            INTO :chr_acc_stamp_compare,:chr_p_rowid
            FROM MT_WHTRATE
            WHERE NATION_CD =:p_mt_whtrate_struct_h->h_nationcode
            AND   PROD_CLASS  =:p_mt_whtrate_struct_h->h_prodateype
				FOR UPDATE OF ACCESS_STAMP;


			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(
															E_WHT_NF,   
															p_mt_whtrate_struct_h->h_nationcode,
															p_mt_whtrate_struct_h->h_prodateype,
															APL_NULL_STRING
															)


         if(!strcmp(p_mt_whtrate_struct_h->h_access_stamp,chr_acc_stamp_compare))
   			{      
		  		   strcpy(p_mt_whtrate_struct_h->h_access_stamp, chr_access_stamp_time);
	        		strcpy(p_mt_whtrate_struct_h->h_maker_dt, chr_access_stamp_time);
               strcpy(p_mt_whtrate_struct_h->h_status_ind, STATUS_DEL_UAUTH);

					if (l_cntry_exists == 0)
					{
						strcpy(p_mt_whtrate_struct_h->h_status_ind, STATUS_DEL_UAUTH);

 		     		   EXEC SQL UPDATE MT_WHTRATE SET
 						CUSTODYTAXRT = :p_mt_whtrate_struct_h->h_custodytaxrt,
 						MAKER = :p_intl_env_data_struct_h_e->usr,
 						MAKER_DT = :p_mt_whtrate_struct_h->h_maker_dt,
 						ACCESS_STAMP = :p_mt_whtrate_struct_h->h_access_stamp,
						CHECKER = :p_mt_whtrate_struct_h->h_checker,
						CHECKER_DT = :p_mt_whtrate_struct_h->h_checker_dt,
						STATUS = :p_mt_whtrate_struct_h->h_status_ind
						WHERE ROWID = :chr_p_rowid;
					}
					else 
					{
						EXEC SQL DELETE MT_WHTRATE
			   		WHERE ROWID = :chr_p_rowid;
					}

            	IS_ANY_ORA_ERROR
           }

         else
         {
            CO_InsertErr(
                           l_debug_info_ptr,
                           ERR_ACCESSSTAMP_CHGD,
                              
                           p_mt_whtrate_struct_h->h_nationcode,
                           p_mt_whtrate_struct_h->h_prodateype,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__
                           ); 

            APL_GOBACK_FAIL
         }
   }





	if(APL_FAILURE == CO_ChkErr(*l_debug_info_ptr)) APL_GOBACK_SUCCESS
	else APL_GOBACK_FAIL


   RETURN_SUCCESS :
   {
   	APL_IF_DEBUG
		{
   		CO_ProcMonitor(APL_OUT_FILE,"Exiting processtion MT_Mod_DBWTaxRt successfully",NULL,p_intl_env_data_struct_h_e);
		}

		APL_FREE(l_mt_whtrate_struct_i);
      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
   	APL_IF_DEBUG
		{
   		CO_ProcMonitor(APL_OUT_FILE,"Exiting processtion MT_Mod_DBWTaxRt with failure",NULL,p_intl_env_data_struct_h_e);
		}

		APL_FREE(l_mt_whtrate_struct_i);
      return(APL_FAILURE);
   }

}

