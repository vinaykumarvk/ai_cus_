 /*Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *    These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
 /*********************************************************************
 *
 * Module Name         : MASTERS MAINTAINANCE
 *
 * File Name           : MT_DbUpdDlyQtions.pc
 *
 * Description         : This file contains all functions for maintenance of
 *                        Daily Quotations details
 *
 *
 *
 *            Version Control Block
 *
 * Date        Version          Author               Description
 * ---------   --------  ---------------  ---------------------------
 *  26/11/2005    1.0           ANIL           NEW FILE   HDFCMT_009
 *
 *********************************************************************/

#include  "CO_IndStructdef.h"
#include  "CR_Common.h"
#include  "MT_Interface.h"
#include  "sqlca.h"
#include  "CO_Commdef.h"

int MT_ModDlyQtionsFn(MT_DLYQTIONS_STRUCT_H *p_mt_dlyqtions_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 MT_DLYQTIONS_STRUCT_I *l_mt_dlyqtions_struct_i;
      struct sqlca sqlca;
      char chr_acc_stamp_compare[APL_DATE_LEN]=APL_NULL_STRING;
      char chr_sys_time_stamp[APL_DATE_LEN]=APL_NULL_STRING;
      short l_maker, l_makerdt, l_checker, l_checkerdt, l_access_stamp;
      short l_access_stamp_compare;
      int int_error_flag = APL_SUCCESS;
      int int_ret_val = 0;
		int no_entry_dlymkt = 0; /* HDFCIV_004 */
		int no_entry_quot = 0; 
                /* KB5878 --MCX Market Price Upload */
		int no_entry_mcs=0;
		int no_exch1=0;
		int no_exch2=0;
	
		char chr_modify_mode[2] =APL_NULL_STRING;

		char chr_pref_exch1[4]=APL_NULL_STRING;

		char chr_pref_exch2[4]=APL_NULL_STRING;

		char chr_pref_exch3[4]=APL_NULL_STRING; 
                /* KB5878 --MCX Market Price Upload */

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif
    APL_IF_DEBUG
      {
        CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_ModDlyQtionsFn\n",NULL,p_intl_envdatastruct_h);
      }

	IF_COND_EXISTS("MT_DLYQT","PREF_NSE")
	{
		strcpy(chr_pref_exch1,"NSE");
		strcpy(chr_pref_exch2,"BSE");
		strcpy(chr_pref_exch3,"MCS");   /* KB_5878 --MCX Market Price Upload */
	}
	else
	{
		strcpy(chr_pref_exch1,"BSE");
		strcpy(chr_pref_exch2,"NSE");
		strcpy(chr_pref_exch3,"MCS");    /* KB_5878 --MCX Market Price Upload */
	}
	printf("\n Amit:Instr_code=|%s| chr_pref_exch1=|%s| chr_pref_exch2=|%s|  chr_pref_exch3=|%s|\n",p_mt_dlyqtions_struct_h->h_instr_code,chr_pref_exch1,chr_pref_exch2,chr_pref_exch3);
	
 l_mt_dlyqtions_struct_i =(MT_DLYQTIONS_STRUCT_I *)calloc(1,sizeof(MT_DLYQTIONS_STRUCT_I));
 l_maker =0;
 l_makerdt =0;
 l_checker =0;
 l_checkerdt =0;
 l_access_stamp =0;
 l_access_stamp_compare =0;

   APL_IF_DEBUG
   {
   CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_ModDlyQtionsFn\n",NULL,p_intl_envdatastruct_h);
   }
 if (!strlen(p_mt_dlyqtions_struct_h->h_exch_code)) l_mt_dlyqtions_struct_i->i_exch_code =-1;
     else l_mt_dlyqtions_struct_i->i_exch_code =0;
 if (!strlen(p_mt_dlyqtions_struct_h->h_instr_code)) l_mt_dlyqtions_struct_i->i_instr_code =-1;
     else l_mt_dlyqtions_struct_i->i_instr_code=0;
 if (!strlen(p_mt_dlyqtions_struct_h->h_quot_date)) l_mt_dlyqtions_struct_i->i_quot_date =-1;
     else l_mt_dlyqtions_struct_i->i_quot_date =0;
/* if (p_mt_dlyqtions_struct_h->h_quot_prev_date==0) l_mt_dlyqtions_struct_i->i_quot_prev_date=-1;
     else l_mt_dlyqtions_struct_i->i_quot_prev_date =0;
 if (p_mt_dlyqtions_struct_h->h_open_at ==0) l_mt_dlyqtions_struct_i->i_open_at =-1;
     else l_mt_dlyqtions_struct_i->i_open_at =0;
 if (p_mt_dlyqtions_struct_h->h_high_at==0) l_mt_dlyqtions_struct_i->i_high_at=-1;
     else l_mt_dlyqtions_struct_i->i_high_at =0;
 if (p_mt_dlyqtions_struct_h->h_low_at ==0) l_mt_dlyqtions_struct_i->i_low_at =-1;
     else l_mt_dlyqtions_struct_i->i_low_at =0;
 if (p_mt_dlyqtions_struct_h->h_close_at ==0) l_mt_dlyqtions_struct_i->i_close_at =-1;
     else l_mt_dlyqtions_struct_i->i_close_at =0;
	 */
 if (!strlen(p_mt_dlyqtions_struct_h->h_maker)) l_mt_dlyqtions_struct_i->i_maker =-1;
     else l_mt_dlyqtions_struct_i->i_maker =0;
 if (!strlen(p_mt_dlyqtions_struct_h->h_maker_dt)) l_mt_dlyqtions_struct_i->i_maker_dt =-1;
     else l_mt_dlyqtions_struct_i->i_maker_dt =0;
 if (!strlen(p_mt_dlyqtions_struct_h->h_access_stamp)) l_mt_dlyqtions_struct_i->i_access_stamp =-1;
     else l_mt_dlyqtions_struct_i->i_access_stamp =0;
 if (!strlen(p_mt_dlyqtions_struct_h->h_status)) l_mt_dlyqtions_struct_i->i_status =-1;
       else l_mt_dlyqtions_struct_i->i_status =0;

 if(CO_RtvSysDtTime(chr_sys_time_stamp,l_debug_info_ptr) !=APL_SUCCESS)
          {
        APL_GOBACK_FAIL
          }

/* if ( strcmp(p_mt_dlyqtions_struct_h->h_maker,"GFU") == 0)	*/ /*** TUX ***/
	 strcpy(chr_modify_mode,"A");
/* 
 else
	 strcpy(chr_modify_mode,"M");
*/

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
 {
     APL_IF_DEBUG
      {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Input h_mode of Function MT_ModDlyQtionsFn\n",
                NULL,p_intl_envdatastruct_h);
      }
	
 	 if (strcmp(p_mt_dlyqtions_struct_h->h_status,STATUS_AUTH))
 	 	strcpy(p_mt_dlyqtions_struct_h->h_status,STATUS_UAUTH);
            l_mt_dlyqtions_struct_i->i_status =0;
    strcpy(p_mt_dlyqtions_struct_h->h_maker,p_intl_envdatastruct_h->usr);
            l_mt_dlyqtions_struct_i->i_maker =0;
    strcpy(p_mt_dlyqtions_struct_h->h_maker_dt,chr_sys_time_stamp);
            l_mt_dlyqtions_struct_i->i_maker_dt =0;
    strcpy(p_mt_dlyqtions_struct_h->h_access_stamp,chr_sys_time_stamp);
            l_mt_dlyqtions_struct_i->i_access_stamp =0;
 if ( strcmp(p_mt_dlyqtions_struct_h->h_maker,"GFU") == 0) /*** TUX ***/
	{
		
	 l_mt_dlyqtions_struct_i->i_checker=0;
	 l_mt_dlyqtions_struct_i->i_checker_dt=0;
	}
	else
	{
    strcpy(p_mt_dlyqtions_struct_h->h_checker,APL_NULL_STRING);
	 l_mt_dlyqtions_struct_i->i_checker=-1;
  	strcpy(p_mt_dlyqtions_struct_h->h_checker_dt,APL_NULL_STRING);
	 l_mt_dlyqtions_struct_i->i_checker_dt=-1;
	}

 EXEC SQL INSERT INTO MT_DAILY_QUOT VALUES (:p_mt_dlyqtions_struct_h:l_mt_dlyqtions_struct_i);
 IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DAILYQUOTATION_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	
	 printf("\n Amit:Maker=|%s| \n",p_mt_dlyqtions_struct_h->h_maker);
	 
	if(strcmp(p_mt_dlyqtions_struct_h->h_maker,"GFU") == 0)
	{
		printf("\n Amit:Inside maker=GFU \n"); 
		/* HDFCIV_004 PJ */
					/* IF Exchange is NSE Then after inserting into MT_DAILY_QUOT insert same entry into MT_DLYMKTPRC which will be used in 535 and billing module which requires preferably NSE Market priceor if missing then BSE. */
				
				printf("\n Amit:p_mt_dlyqtions_struct_h->h_exch_code=|%s| chr_pref_exch1=|%s| \n",p_mt_dlyqtions_struct_h->h_exch_code,chr_pref_exch1);
		
				if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code,chr_pref_exch1))
				{ 
				 /* Find if row already exists if exists then update else insert into MT_DLYMKTPRC */	
				
					no_entry_dlymkt = 0;
					EXEC SQL select count(*) into :no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE =  				    :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						IS_ANY_ORA_ERROR
					printf("\n no_entry_dlymkt=|%d| \n",no_entry_dlymkt);
							
					if ( no_entry_dlymkt == 0 ) 
					{
						printf("\n Amit:Just Before insert into MT_DLYMKTPRC \n");
						EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at,:chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

						IS_ANY_ORA_ERROR
					}
					else
					{
							EXEC SQL update MT_DLYMKTPRC set 
							CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
							MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
							ACCESS_STAMP = :chr_sys_time_stamp,
							MAKER = :p_mt_dlyqtions_struct_h->h_maker,
							MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
							MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
							CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
							CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
							where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
								and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						
						IS_ANY_ORA_ERROR
					}
				}
				else if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code, chr_pref_exch2))
				{
					no_entry_quot = 0;
					no_entry_dlymkt = 0;
				
					/* Either BSE / NSE Entry in MT_DLYMKTPRC */
					EXEC SQL select count(*) into :no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
			
						IS_ANY_ORA_ERROR
						printf("\n 1:no_entry_dlymkt=|%d| \n",no_entry_dlymkt);
							
					/* IF any NSE entry exist in MT_DLYMKTPRC we check table MT_DAILY_QUOT as we are sure that if any entry of NSE is auth in MT_DAILY_QUOT then it must be in MT_DLYMKTPRC */		
					/*
					EXEC SQL select count(*) into :no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'NSE' and status = 'AA';	*/
					EXEC SQL select count(*) into :no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch1 and status = 'AA';
				
						IS_ANY_ORA_ERROR
						printf("\n 1:no_entry_quot=|%d| \n",no_entry_quot);

							
					/*Start - Isolve ID 118 - Amit B as on 22-Mar-2007 - Changes for Daily quotation prices for NSE Upload*/
					/*if ( no_entry_dlymkt == 0)	*/
					if ( no_entry_quot == 0 && no_entry_dlymkt == 0) 
					{
						
						EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at, :chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

						IS_ANY_ORA_ERROR
					}
					else if( no_entry_quot == 0 && no_entry_dlymkt == 1) 
					{
						EXEC SQL update MT_DLYMKTPRC set 
							CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
							MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
										  ACCESS_STAMP = :chr_sys_time_stamp,
										  MAKER = :p_mt_dlyqtions_struct_h->h_maker,
										  MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
										  MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
										  CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
										  CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
											  where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
											  and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
            		
						IS_ANY_ORA_ERROR
					}
					/*Start - Isolve ID 118 - Amit B as on 22-Mar-2007 - Changes for Daily quotation prices for NSE Upload*/
				}
				

				else if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code, chr_pref_exch3))
				{
					
					no_entry_dlymkt = 0;
					no_entry_mcs=0;
					no_exch1=0;
					no_exch2=0;
				
					/* Either BSE / NSE Entry in MT_DLYMKTPRC */
					EXEC SQL select count(*) into :no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
			
				       	IS_ANY_ORA_ERROR
						printf("\n 1:no_entry_dlymkt=|%d| \n",no_entry_dlymkt);
							

					EXEC SQL select count(*) into :no_exch1 from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch1 and status = 'AA';
				
						IS_ANY_ORA_ERROR

					EXEC SQL select count(*) into :no_exch2 from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch2 and status = 'AA';
				
						IS_ANY_ORA_ERROR
					/* IF any NSE entry exist in MT_DLYMKTPRC we check table MT_DAILY_QUOT as we are sure that if any entry of NSE is auth in MT_DAILY_QUOT then it must be in MT_DLYMKTPRC */		
					/*
					EXEC SQL select count(*) into :no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'NSE' and status = 'AA';	*/
					EXEC SQL select count(*) into :no_entry_mcs from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch3 and status = 'AA';
				
						IS_ANY_ORA_ERROR
						printf("\n 1:no_entry_quot=|%d| \n",no_entry_quot);

							
					/*Start - Isolve ID 118 - Amit B as on 22-Mar-2007 - Changes for Daily quotation prices for NSE Upload*/
					/*if ( no_entry_dlymkt == 0)	*/

					if(no_exch1 > 0 || no_exch2 > 0)
					{
						/* NSE or BSE Entry Exists */
						printf("\n NSE or BSE Entry Exists  \n");
					}
					else
					{
						if ( no_entry_mcs == 1 && no_entry_dlymkt == 0) 
						{
							
							EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at, :chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

							IS_ANY_ORA_ERROR
						}



					else if( no_entry_dlymkt == 1) 
						{
							EXEC SQL update MT_DLYMKTPRC set 
								CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
								MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
											  ACCESS_STAMP = :chr_sys_time_stamp,
											  MAKER = :p_mt_dlyqtions_struct_h->h_maker,
											  MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
											  MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
											  CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
											  CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
												  where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
												  and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						
							IS_ANY_ORA_ERROR
						}
					}
				}
	}
 }

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
     {
       l_checker =-1;
       l_checkerdt =-1;
       strcpy(p_mt_dlyqtions_struct_h->h_checker,APL_NULL_STRING);
       strcpy(p_mt_dlyqtions_struct_h->h_checker_dt,APL_NULL_STRING);
CO_ProcMonitor(APL_OUT_FILE, "Entered Modify h_mode of Function MT_ModDlyQtionsFn\n",NULL,p_intl_envdatastruct_h);
       EXEC SQL SELECT ACCESS_STAMP, STATUS
       INTO   :chr_acc_stamp_compare:l_access_stamp_compare,
              :p_mt_dlyqtions_struct_h->h_status:l_mt_dlyqtions_struct_i->i_status
               FROM  MT_DAILY_QUOT
               WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
               AND  INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
               AND  QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date
               FOR UPDATE;
               IS_ANY_ORA_ERROR;
    if (!strcmp(p_mt_dlyqtions_struct_h->h_access_stamp,chr_acc_stamp_compare))
       {
      if(strcmp(p_mt_dlyqtions_struct_h->h_status,STATUS_DEL_UAUTH))
       {
         strcpy(p_mt_dlyqtions_struct_h->h_access_stamp,chr_sys_time_stamp);
          l_mt_dlyqtions_struct_i->i_access_stamp =0;
         strcpy(p_mt_dlyqtions_struct_h->h_status,STATUS_UAUTH);
          l_mt_dlyqtions_struct_i->i_status =0;
         strcpy(p_mt_dlyqtions_struct_h->h_maker,p_intl_envdatastruct_h->usr);
          l_mt_dlyqtions_struct_i->i_maker =0;
      EXEC SQL UPDATE MT_DAILY_QUOT SET
      QUOT_PREV_DATE=:p_mt_dlyqtions_struct_h->h_quot_prev_date:l_mt_dlyqtions_struct_i->i_quot_prev_date,
      OPEN_AT=:p_mt_dlyqtions_struct_h->h_open_at:l_mt_dlyqtions_struct_i->i_open_at,
      HIGH_AT=:p_mt_dlyqtions_struct_h->h_high_at:l_mt_dlyqtions_struct_i->i_high_at,
      LOW_AT =:p_mt_dlyqtions_struct_h->h_low_at:l_mt_dlyqtions_struct_i->i_low_at,
      CLOSE_AT =:p_mt_dlyqtions_struct_h->h_close_at:l_mt_dlyqtions_struct_i->i_close_at,
      MAKER =:p_intl_envdatastruct_h->usr:l_maker,
      MAKER_DT =:chr_sys_time_stamp:l_makerdt,
      CHECKER =:p_mt_dlyqtions_struct_h->h_checker:l_checker,
      CHECKER_DT =:p_mt_dlyqtions_struct_h->h_checker_dt:l_checkerdt,
      STATUS =:p_mt_dlyqtions_struct_h->h_status:l_mt_dlyqtions_struct_i->i_status,
      ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp
      WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
      AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
      AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;
      IS_ANY_ORA_ERROR;
      }
     else
            {
                         if (CO_InsertErr
                         (l_debug_info_ptr,
                         ERR_DAILYQUOTATION_CANT_MODIFY,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__
                         ) != APL_SUCCESS)
                         APL_GOBACK_FAIL
                         APL_GOBACK_FAIL
            }
      }
       else
          {
                         if (CO_InsertErr
                         (l_debug_info_ptr,
                         ERR_ACCESSSTAMP_CHGD,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__
                         ) != APL_SUCCESS)
                         APL_GOBACK_FAIL
                         APL_GOBACK_FAIL
           }
   }
if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
        {
        APL_IF_DEBUG
         {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Authorize h_mode of Function MT_ModDlyQtionsFn\n",
                NULL,p_intl_envdatastruct_h);
         }
        memset(p_mt_dlyqtions_struct_h->h_status, NULL, APL_STATUS_LEN);

        EXEC SQL SELECT ACCESS_STAMP, STATUS
           INTO   :chr_acc_stamp_compare:l_access_stamp_compare,
                  :p_mt_dlyqtions_struct_h->h_status:l_mt_dlyqtions_struct_i->i_status
           FROM  MT_DAILY_QUOT
           WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
           AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
           AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date
           FOR UPDATE;
IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DAILYQUOTATION_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
           IS_ANY_ORA_ERROR
        if (!strcmp(p_mt_dlyqtions_struct_h->h_access_stamp,chr_acc_stamp_compare))
           {
        if(strcmp(p_mt_dlyqtions_struct_h->h_status,STATUS_DEL_UAUTH))
            {
            strcpy(p_mt_dlyqtions_struct_h->h_access_stamp,chr_sys_time_stamp);
              l_mt_dlyqtions_struct_i->i_access_stamp =0;
            strcpy(p_mt_dlyqtions_struct_h->h_checker,p_intl_envdatastruct_h->usr);
              l_mt_dlyqtions_struct_i->i_checker=0;
            strcpy(p_mt_dlyqtions_struct_h->h_checker_dt,chr_sys_time_stamp);
              l_mt_dlyqtions_struct_i->i_checker_dt=0;
            strcpy(p_mt_dlyqtions_struct_h->h_status,STATUS_AUTH);
              l_mt_dlyqtions_struct_i->i_status =0;
				  
				  EXEC SQL UPDATE MT_DAILY_QUOT SET
					 CHECKER =:p_intl_envdatastruct_h->usr:l_checker,
					 CHECKER_DT =:chr_sys_time_stamp:l_checkerdt,
					 ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp,
					 STATUS =:p_mt_dlyqtions_struct_h->h_status:l_mt_dlyqtions_struct_i->i_status
					 WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
									 AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
									 AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;
				  IS_ANY_ORA_ERROR;

					/* HDFCIV_004 PJ */
					/* IF Exchange is NSE Then after inserting into MT_DAILY_QUOT insert same entry into MT_DLYMKTPRC which will be used in 535 and billing module which requires preferably NSE Market priceor if missing then BSE. */
				if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code,chr_pref_exch1))
				{ 
				 /* Find if row already exists if exists then update else insert into MT_DLYMKTPRC */	
				
					no_entry_dlymkt = 0;
					EXEC SQL select count(*) into :no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE =  				    :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						IS_ANY_ORA_ERROR
					if ( no_entry_dlymkt == 0 ) 
					{
						EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at,:chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

						IS_ANY_ORA_ERROR
					}
					else
					{
							EXEC SQL update MT_DLYMKTPRC set 
							CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
							MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
							ACCESS_STAMP = :chr_sys_time_stamp,
							MAKER = :p_mt_dlyqtions_struct_h->h_maker,
							MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
							MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
							CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
							CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
							where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
								and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						
						IS_ANY_ORA_ERROR
					}
				}
				else if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code, chr_pref_exch2))
				{
					no_entry_quot = 0;
					no_entry_dlymkt = 0;
				
					/* Either BSE / NSE Entry in MT_DLYMKTPRC */
					EXEC SQL select count(*) into no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
			
						IS_ANY_ORA_ERROR
					/* IF any NSE entry exist in MT_DLYMKTPRC we check table MT_DAILY_QUOT as we are sure that if any entry of NSE is auth in MT_DAILY_QUOT then it must be in MT_DLYMKTPRC */		
					/*
					EXEC SQL select count(*) into no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'NSE' and status = 'AA';	*/
					EXEC SQL select count(*) into no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch1 and status = 'AA';
				
						IS_ANY_ORA_ERROR
					if ( no_entry_quot == 0 && no_entry_dlymkt == 0) 
					{
						
						EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at, :chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

						IS_ANY_ORA_ERROR
					}	
					else if( no_entry_quot == 0 && no_entry_dlymkt == 1) 
					{
						EXEC SQL update MT_DLYMKTPRC set 
							CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
							MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
										  ACCESS_STAMP = :chr_sys_time_stamp,
										  MAKER = :p_mt_dlyqtions_struct_h->h_maker,
										  MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
										  MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
										  CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
										  CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
											  where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
											  and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
            		
						IS_ANY_ORA_ERROR
					}
					
				}
					
				/*KB_5878 --MCX -MKTPRICE Upload  Starts--*/
					
					else if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code, chr_pref_exch3))
				{
					no_entry_dlymkt = 0;
					no_entry_mcs=0;
					no_exch1=0;
					no_exch2=0;
				
					/* Either BSE / NSE Entry in MT_DLYMKTPRC */
					EXEC SQL select count(*) into :no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
			
						IS_ANY_ORA_ERROR
					printf("\n 1:no_entry_dlymkt=|%d| \n",no_entry_dlymkt);
							

					EXEC SQL select count(*) into :no_exch1 from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch1 and status = 'AA';
				
						IS_ANY_ORA_ERROR
						
						printf("\n 1:no_exch1 in AUHT=|%d| \n",no_exch1);
					EXEC SQL select count(*) into :no_exch2 from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch2 and status = 'AA';
				
						IS_ANY_ORA_ERROR
						printf("\n 1:no_exch2 in AUHT=|%d| \n",no_exch2);
					/* IF any NSE entry exist in MT_DLYMKTPRC we check table MT_DAILY_QUOT as we are sure that if any entry of NSE is auth in MT_DAILY_QUOT then it must be in MT_DLYMKTPRC */		
					/*
					EXEC SQL select count(*) into :no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'NSE' and status = 'AA';	*/
					EXEC SQL select count(*) into :no_entry_mcs from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch3 and status = 'AA';
				
						IS_ANY_ORA_ERROR
						printf("\n 1:no_entry_mcs in AUHT=|%d| \n",no_entry_mcs);

							
					/*Start - Isolve ID 118 - Amit B as on 22-Mar-2007 - Changes for Daily quotation prices for NSE Upload*/
					/*if ( no_entry_dlymkt == 0)	*/

					if(no_exch1 > 0 || no_exch2 > 0)
					{
						/* NSE or BSE Entry Exists */
						printf("\n NSE or BSE Entry Exists  \n");
					}
					else
					{
						if ( no_entry_mcs == 1 && no_entry_dlymkt == 0) 
						{
							
							EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at, :chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

							IS_ANY_ORA_ERROR
						}



					else if( no_entry_dlymkt == 1) 
						{
							EXEC SQL update MT_DLYMKTPRC set 
								CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
								MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
											  ACCESS_STAMP = :chr_sys_time_stamp,
											  MAKER = :p_mt_dlyqtions_struct_h->h_maker,
											  MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
											  MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
											  CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
											  CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
												  where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
												  and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						
							IS_ANY_ORA_ERROR
						}
					}
					
					
				}

				/*KB_5878 --MCSX -MKTPRICE Upload Ends--*/
					
            }
            else
            {
				/* HDFCIV_004 PJ */
				/* MT_DLYMKTPRC contains mirror image with NSE / BSE prices */
				
					no_entry_quot = 0;
					no_entry_dlymkt = 0;
					no_entry_mcs=0;
				
					/* Check if NSE Entry in MT_DAILY_QUOT */
					/*
					EXEC SQL select count(*) into no_entry_dlymkt from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'NSE' and status = 'AA';	*/
					EXEC SQL select count(*) into no_entry_dlymkt from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch1 and status = 'AA';
			
						IS_ANY_ORA_ERROR
					/* Check if BSE Entry in MT_DAILY_QUOT */		
					/*
					EXEC SQL select count(*) into no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'BSE' and status = 'AA';	*/
					EXEC SQL select count(*) into no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch2 and status = 'AA';
				
					/* FOR MCS */
					EXEC SQL select count(*) into no_entry_mcs from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch3 and status = 'AA';
				
						IS_ANY_ORA_ERROR
					
					if ( !strcmp(p_mt_dlyqtions_struct_h->h_exch_code,chr_pref_exch1))
					{
						/* IF NSE Entry is getting deleted then input BSE entry in Daily Price if available */
						EXEC SQL DELETE MT_DLYMKTPRC
            					WHERE INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
            					AND   PRICE_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;
						
						IS_ANY_ORA_ERROR
						if( no_entry_quot == 1 )
						{
							EXEC SQL INSERT INTO MT_DLYMKTPRC (SELECT QUOT_DATE, INSTR_CODE, CLOSE_AT,:chr_modify_mode,ACCESS_STAMP, MAKER, MAKER_DT,STATUS, CHECKER, CHECKER_DT 
								  FROM MT_DAILY_QUOT WHERE EXCH_CODE = :chr_pref_exch2 AND INSTR_CODE = :p_mt_dlyqtions_struct_h->h_instr_code  AND QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date);	  
						
							IS_ANY_ORA_ERROR
						}
					}
					else if ( !strcmp(p_mt_dlyqtions_struct_h->h_exch_code,chr_pref_exch2))
					{
						/* If BSE entry is getting deleted and NSE entry not in quotation then we can delete from Daily price also */ 
							if( no_entry_dlymkt == 0)
							{
								
							EXEC SQL DELETE MT_DLYMKTPRC
									WHERE INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
									AND   PRICE_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;	
						
							IS_ANY_ORA_ERROR
							}		
							
							printf("no_entry_mcs for MCS |%d|",no_entry_mcs);
							if(no_entry_mcs == 1)
							{
								EXEC SQL INSERT INTO MT_DLYMKTPRC (SELECT QUOT_DATE, INSTR_CODE, CLOSE_AT,:chr_modify_mode,ACCESS_STAMP, MAKER, MAKER_DT,STATUS, CHECKER, CHECKER_DT 
								  FROM MT_DAILY_QUOT WHERE EXCH_CODE = :chr_pref_exch3 AND INSTR_CODE = :p_mt_dlyqtions_struct_h->h_instr_code  AND QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date);	  
						
							IS_ANY_ORA_ERROR
							}
					} /* End of HDFCIV_004 */
					/*KB_5878 --MCSX -MKTPRICE Upload Starts--*/
							
					else if ( !strcmp(p_mt_dlyqtions_struct_h->h_exch_code,chr_pref_exch3))
					{
						
						
						/* IF BSE/NSE ENTRY IS NOT THEIR THEN DAILY PRICE REMOVED */
						if( no_entry_dlymkt == 0 && no_entry_quot == 0)
							{
								
							EXEC SQL DELETE MT_DLYMKTPRC
									WHERE INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
									AND   PRICE_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;	
						
							IS_ANY_ORA_ERROR
							}		


							
					} /* End of HDFCIV_004 */
					/*KB_5878 --MCSX -MKTPRICE Upload Ends--*/
            EXEC SQL DELETE MT_DAILY_QUOT
            WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
            AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
            AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;
            IS_ANY_ORA_ERROR

            }
           }
         else
           {
                         if (CO_InsertErr
                         (l_debug_info_ptr,
                         ERR_ACCESSSTAMP_CHGD,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__
                         ) != APL_SUCCESS)
                         APL_GOBACK_FAIL
                         APL_GOBACK_FAIL
           }
          }
if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
        {
          APL_IF_DEBUG
          {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Reset h_mode of Function MT_ModDlyQtionsFn\n",
                NULL,p_intl_envdatastruct_h);
          }
        memset(p_mt_dlyqtions_struct_h->h_status, NULL, APL_STATUS_LEN);
        
		  EXEC SQL SELECT ACCESS_STAMP, STATUS
                 INTO   :chr_acc_stamp_compare:l_access_stamp_compare,
                        :p_mt_dlyqtions_struct_h->h_status:l_mt_dlyqtions_struct_i->i_status
                 FROM MT_DAILY_QUOT
                 WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
                 AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
                 AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date
                 FOR UPDATE ;
IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DAILYQUOTATION_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
        IS_ANY_ORA_ERROR
        if (!strcmp(p_mt_dlyqtions_struct_h->h_access_stamp,chr_acc_stamp_compare))
           {
        if(!strcmp(p_mt_dlyqtions_struct_h->h_status,STATUS_DEL_UAUTH))
            {
            strcpy(p_mt_dlyqtions_struct_h->h_access_stamp,chr_sys_time_stamp);
            l_mt_dlyqtions_struct_i->i_access_stamp =0;
            strcpy(p_mt_dlyqtions_struct_h->h_checker,p_intl_envdatastruct_h->usr);
            l_mt_dlyqtions_struct_i->i_checker=0;
            strcpy(p_mt_dlyqtions_struct_h->h_checker_dt,chr_sys_time_stamp);
            l_mt_dlyqtions_struct_i->i_checker_dt=0;
            strcpy(p_mt_dlyqtions_struct_h->h_status,STATUS_AUTH);
            l_mt_dlyqtions_struct_i->i_status =0;
           EXEC SQL UPDATE MT_DAILY_QUOT SET
           CHECKER =:p_intl_envdatastruct_h->usr:l_checker,
           CHECKER_DT =:chr_sys_time_stamp:l_checkerdt,
           ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp,
           STATUS =:p_mt_dlyqtions_struct_h->h_status:l_mt_dlyqtions_struct_i->i_status
           WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
           AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
           AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;
           IS_ANY_ORA_ERROR;


					/* HDFCIV_004 PJ */
					/* IF Exchange is NSE Then after inserting into MT_DAILY_QUOT insert same entry into MT_DLYMKTPRC which will be used in 535 and billing module which requires preferably NSE Market priceor if missing then BSE. */
				if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code, chr_pref_exch1))
				{ 
				 /* Find if row already exists if exists then update else insert into MT_DLYMKTPRC */	
				
					no_entry_dlymkt = 0;
					EXEC SQL select count(*) into :no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE =  				    :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						IS_ANY_ORA_ERROR
					if ( no_entry_dlymkt == 0 ) 
					{
						EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at, :chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

						IS_ANY_ORA_ERROR
					}
					else
					{
							EXEC SQL update MT_DLYMKTPRC set 
							CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
							MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
							ACCESS_STAMP = :chr_sys_time_stamp,
							MAKER = :p_mt_dlyqtions_struct_h->h_maker,
							MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
							MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
							CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
							CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
							where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
								and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						
						IS_ANY_ORA_ERROR
					}
				}
				else if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code, chr_pref_exch2))
				{	
					no_entry_quot = 0;
					no_entry_dlymkt = 0;
				
					/* Either BSE / NSE Entry in MT_DLYMKTPRC */
					EXEC SQL select count(*) into no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
			
						IS_ANY_ORA_ERROR
					/* IF any NSE entry exist in MT_DLYMKTPRC we check table MT_DAILY_QUOT as we are sure that if any entry of NSE is auth in MT_DAILY_QUOT then it must be in MT_DLYMKTPRC */		
					/*
					EXEC SQL select count(*) into no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'NSE' and status = 'AA';	*/
					EXEC SQL select count(*) into no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch1 and status = 'AA';
				
						IS_ANY_ORA_ERROR
					if ( no_entry_quot == 0 && no_entry_dlymkt == 0) 
					{
						
						EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at, :chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

						IS_ANY_ORA_ERROR
					}	
					else if( no_entry_quot == 0 && no_entry_dlymkt == 1) 
					{
						EXEC SQL update MT_DLYMKTPRC set 
							CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
							MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
							ACCESS_STAMP = :chr_sys_time_stamp,
							MAKER = :p_mt_dlyqtions_struct_h->h_maker,
							MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
							MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
							CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
							CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
								where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
								and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
            		
						IS_ANY_ORA_ERROR
					}
					
				}


				/*KB_5878--Jeevan MKT PRICE Upload--*/

					else if (!strcmp(p_mt_dlyqtions_struct_h->h_exch_code, chr_pref_exch3))
				{	
					no_entry_dlymkt = 0;
					no_entry_mcs=0;
					no_exch1=0;
					no_exch2=0;
				
					/* Either BSE / NSE Entry in MT_DLYMKTPRC */
					EXEC SQL select count(*) into :no_entry_dlymkt from MT_DLYMKTPRC where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
			
						IS_ANY_ORA_ERROR
					/*	printf("\n 1:no_entry_dlymkt=|%d| \n",no_entry_dlymkt); */
							

					EXEC SQL select count(*) into :no_exch1 from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch1 and status = 'AA';
				
						IS_ANY_ORA_ERROR

					EXEC SQL select count(*) into :no_exch2 from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch2 and status = 'AA';
				
						IS_ANY_ORA_ERROR
					/* IF any NSE entry exist in MT_DLYMKTPRC we check table MT_DAILY_QUOT as we are sure that if any entry of NSE is auth in MT_DAILY_QUOT then it must be in MT_DLYMKTPRC */		
					/*
					EXEC SQL select count(*) into :no_entry_quot from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = 'NSE' and status = 'AA';	*/
					EXEC SQL select count(*) into :no_entry_mcs from MT_DAILY_QUOT where QUOT_DATE = :p_mt_dlyqtions_struct_h->h_quot_date and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code and EXCH_CODE = :chr_pref_exch3 and status = 'AA';
				
						IS_ANY_ORA_ERROR
						printf("\n 1:no_entry_quot=|%d| \n",no_entry_quot);

							
					/*Start - Isolve ID 118 - Amit B as on 22-Mar-2007 - Changes for Daily quotation prices for NSE Upload*/
					/*if ( no_entry_dlymkt == 0)	*/

					if(no_exch1 > 0 || no_exch2 > 0)
					{
						/* NSE or BSE Entry Exists */
						printf("\n NSE or BSE Entry Exists  \n");
					}
					else
					{
						if ( no_entry_mcs == 1 && no_entry_dlymkt == 0) 
						{
							
							EXEC SQL insert into MT_DLYMKTPRC values ( :p_mt_dlyqtions_struct_h->h_quot_date, :p_mt_dlyqtions_struct_h->h_instr_code, :p_mt_dlyqtions_struct_h->h_close_at, :chr_modify_mode,:chr_sys_time_stamp, :p_mt_dlyqtions_struct_h->h_maker, :p_mt_dlyqtions_struct_h->h_maker_dt, :p_mt_dlyqtions_struct_h->h_status, :p_mt_dlyqtions_struct_h->h_checker, :p_mt_dlyqtions_struct_h->h_checker_dt );

							IS_ANY_ORA_ERROR
						}



					else if( no_entry_dlymkt == 1) 
						{
							EXEC SQL update MT_DLYMKTPRC set 
								CLOSING_PR = :p_mt_dlyqtions_struct_h->h_close_at,
								MODIFYMODE = 'M', /* :chr_modify_mode, in modify mode it would be manual **/
											  ACCESS_STAMP = :chr_sys_time_stamp,
											  MAKER = :p_mt_dlyqtions_struct_h->h_maker,
											  MAKER_DT = :p_mt_dlyqtions_struct_h->h_maker_dt,
											  MKRTPR_STAT = :p_mt_dlyqtions_struct_h->h_status,
											  CHECKER = :p_mt_dlyqtions_struct_h->h_checker,
											  CHECKER_DT =  :p_mt_dlyqtions_struct_h->h_checker_dt
												  where PRICE_DATE = :p_mt_dlyqtions_struct_h->h_quot_date
												  and instr_code = :p_mt_dlyqtions_struct_h->h_instr_code;
						
							IS_ANY_ORA_ERROR
						}
					}
					
					
				}

				/*KB_5878--Jeevan MKT PRICE Upload--*/

           }
         else
           {
                         if (CO_InsertErr
                         (l_debug_info_ptr,
                         ERR_DAILYQUOTATION_CANT_RESET,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        APL_GOBACK_FAIL
           }
           }
          else
            {
                         if (CO_InsertErr
                         (l_debug_info_ptr,
                         ERR_ACCESSSTAMP_CHGD,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__
                         ) != APL_SUCCESS)
                         APL_GOBACK_FAIL
                         APL_GOBACK_FAIL
             }
        }
if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
        {
        l_checker =-1;
        l_checkerdt =-1;
        strcpy(p_mt_dlyqtions_struct_h->h_checker,APL_NULL_STRING);
        strcpy(p_mt_dlyqtions_struct_h->h_checker_dt,APL_NULL_STRING);
          APL_IF_DEBUG
           {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Delete h_mode of Function  MT_ModDlyQtionsFn\n",
                NULL,p_intl_envdatastruct_h);
           }
                  EXEC SQL SELECT ACCESS_STAMP
                  INTO :chr_acc_stamp_compare:l_access_stamp_compare
                  FROM MT_DAILY_QUOT
                  WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
                  AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
                  AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date
                  FOR UPDATE ;
                  IS_ANY_ORA_ERROR

        if (!strcmp(p_mt_dlyqtions_struct_h->h_access_stamp,chr_acc_stamp_compare))
           {
        strcpy(p_mt_dlyqtions_struct_h->h_access_stamp,chr_sys_time_stamp);
         l_mt_dlyqtions_struct_i->i_access_stamp =0;
        strcpy(p_mt_dlyqtions_struct_h->h_status,STATUS_DEL_UAUTH);
         l_mt_dlyqtions_struct_i->i_status =0;
                  EXEC SQL UPDATE MT_DAILY_QUOT SET
                  MAKER =:p_intl_envdatastruct_h->usr:l_maker,
                  MAKER_DT =:chr_sys_time_stamp:l_makerdt,
                  CHECKER =:p_intl_envdatastruct_h->usr:l_checker,
                  CHECKER_DT =:chr_sys_time_stamp:l_checkerdt,
                  ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp,
                  STATUS =:p_mt_dlyqtions_struct_h->h_status:l_mt_dlyqtions_struct_i->i_status
                  WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
                  AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
                  AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;
                  IS_ANY_ORA_ERROR
           }
        else
          {
                         if (CO_InsertErr
                         (l_debug_info_ptr,
                         ERR_ACCESSSTAMP_CHGD,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        APL_GOBACK_FAIL
           }
         }
if (int_error_flag == APL_FAILURE)
        {
        APL_GOBACK_FAIL
        }
 APL_GOBACK_SUCCESS
RETURN_SUCCESS :
        {
      CO_ProcMonitor(APL_OUT_FILE, "Function MT_ModDlyQtionsFn successful\n",NULL,p_intl_envdatastruct_h);
        free(l_mt_dlyqtions_struct_i);
        return(APL_SUCCESS);
        }
RETURN_FAILURE :
        {
      CO_ProcMonitor(APL_OUT_FILE, "Function MT_ModDlyQtionsFn successful\n",NULL,p_intl_envdatastruct_h);
        free(l_mt_dlyqtions_struct_i);
        return(APL_FAILURE);
        }
}
int MTMkrCkrDlyQtionsFn(char *p_exch_code,char *p_instr_code,char *p_quot_date,char *p_user,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  struct sqlca sqlca;
  char maker[15]=APL_NULL_STRING;
  short l_maker = 0;
  int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

APL_IF_DEBUG
  {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Function MTMkrCkrDlyQtionsFn\n",NULL,NULL);
  }


  if (!strlen(p_exch_code))
        {
        APL_DATA_MISSING("Exchange Code",APL_NULL_STRING,APL_NULL_STRING);
        int_error_flag = APL_FAILURE;
        }
  if (!strlen(p_instr_code))
        {
      APL_DATA_MISSING("Instrument CODE",APL_NULL_STRING,APL_NULL_STRING);
      int_error_flag = APL_FAILURE;
        }
  if (!strlen(p_quot_date))
        {
      APL_DATA_MISSING("Quotation date",APL_NULL_STRING,APL_NULL_STRING);
      int_error_flag = APL_FAILURE;
        }
  if (!strlen(p_user))
        {
        APL_DATA_MISSING("User",APL_NULL_STRING,APL_NULL_STRING);
        int_error_flag = APL_FAILURE;
        }

  if (int_error_flag == APL_FAILURE)
        {
        APL_GOBACK_FAIL
        }
  EXEC SQL VAR maker IS STRING(15);
  EXEC SQL SELECT MAKER
     INTO :maker:l_maker
     FROM MT_DAILY_QUOT
     WHERE EXCH_CODE =:p_exch_code
     AND   INSTR_CODE =:p_instr_code
     AND   QUOT_DATE =:p_quot_date;
     IS_ANY_ORA_ERROR

 if (strcmp(p_user,maker)==0)
        {
                        if (CO_InsertErr
                        (l_debug_info_ptr,
                        ERR_MAKER_CHECKER_SAME,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) == APL_SUCCESS)
                        APL_GOBACK_FAIL
                        int_error_flag = APL_FAILURE;
        }

  if (int_error_flag == APL_FAILURE)
        {
        APL_GOBACK_FAIL
        }
  APL_GOBACK_SUCCESS
 RETURN_SUCCESS :
 {
  APL_IF_DEBUG
   {
  CO_ProcMonitor(APL_OUT_FILE, "MTMkrCkrDlyQtionsFn Successful\n",NULL,NULL);
   }
return(APL_SUCCESS);
 }
 RETURN_FAILURE :
 {
  APL_IF_DEBUG
   {
  CO_ProcMonitor(APL_OUT_FILE, "MTMkrCkrDlyQtionsFn unsuccessful\n",NULL,NULL);
   }
return(APL_FAILURE);
 }
}

int CR_Chk_ValAtInstrument(MT_DLYQTIONS_STRUCT_H *p_mt_dlyqtions_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
        struct sqlca sqlca;
        char chr_p_Instatus[3]=APL_NULL_STRING;
        short l_IStatus=0;
#ifdef APL_THREADS
        APL_SET_CONTEXT
                EXEC SQL CONTEXT USE :my_ctx_local;
#endif

        APL_IF_DEBUG
        {
     CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Chk_ValAtInstrument \n",NULL,NULL);
        }

        memset(chr_p_Instatus,NULL,3);

                EXEC SQL SELECT STATUS into :chr_p_Instatus:l_IStatus
                FROM MT_INSTRUMENT
                WHERE INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code;
     IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
        if (strcmp(chr_p_Instatus,STATUS_AUTH))
        {
                        if (CO_InsertErr
                        (l_debug_info_ptr,
                        ERR_INSTRUMENT_NOT_AUTHORIZED,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) == APL_SUCCESS)
                        APL_GOBACK_FAIL
		  APL_GOBACK_FAIL
        }
                                             
 if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
         {
         APL_GOBACK_FAIL
         }
 else
      APL_GOBACK_SUCCESS
RETURN_SUCCESS :
           {
          APL_IF_DEBUG
            {
      CO_ProcMonitor(APL_OUT_FILE, "Function CR_Chk_ValAtInstrument is successful\n",NULL,NULL);
            }
           return(APL_SUCCESS);
           }
RETURN_FAILURE :
          {
        APL_IF_DEBUG
           {
      CO_ProcMonitor(APL_OUT_FILE, " CR_Chk_ValAtInstrument is failed\n",NULL,NULL);
           }
          return(APL_FAILURE);
          }
}
int ChkDlyQtions(MT_DLYQTIONS_STRUCT_H *p_mt_dlyqtions_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
      struct sqlca   sqlca;
      int      l_instr_count = 0;
      APL_IF_DEBUG
      {
     CO_ProcMonitor(APL_OUT_FILE,"Entered Processation ChkDlyQtions \n",NULL,NULL);
      }

      sqlca.sqlcode = 0;
			/* HDFCIV_004 PJ Appended date time format to quot_date*/
			if (strlen(p_mt_dlyqtions_struct_h->h_quot_date) == 10)
				strcat(p_mt_dlyqtions_struct_h->h_quot_date, " 12:00:00");

         EXEC SQL SELECT NVL(COUNT(*),0) INTO :l_instr_count
                  FROM  MT_DAILY_QUOT
                  WHERE EXCH_CODE =:p_mt_dlyqtions_struct_h->h_exch_code
                  AND   INSTR_CODE =:p_mt_dlyqtions_struct_h->h_instr_code
                  AND   QUOT_DATE =:p_mt_dlyqtions_struct_h->h_quot_date;

          if (l_instr_count == 0)
           {
                        if(CO_InsertErr(
                        l_debug_info_ptr,
                        ERR_DAILYQUOTATION_NOTFND,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        APL_GOBACK_FAIL
            }

if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
        {
         APL_GOBACK_FAIL
         }
 else
      APL_GOBACK_SUCCESS
RETURN_SUCCESS :
      {
      APL_IF_DEBUG
CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion ChkDlyQtions with Success\n",NULL,p_intl_envdatastruct_h);
      return(APL_SUCCESS);
      }

RETURN_FAILURE :
      {
      APL_IF_DEBUG
  CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion ChkDlyQtions with Failure\n",NULL,p_intl_envdatastruct_h);
  return(APL_FAILURE);//Added for AIX Migration Changes
      }
}
