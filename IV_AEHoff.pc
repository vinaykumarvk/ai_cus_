













 

#include "CR_Common.h"
#include "Intellect_Common.h"
#include "IV_Control_A.h" 

EXEC SQL INCLUDE SQLCA.H;

int	IV_AccEntIfIfn( char				*p_batch_no,
						  char				*p_ae_flname,	
						  DEBUG_INFO_STRUCT_H		**l_debug_info_ptr
						  )
{

	
	struct	sqlca sqlca;

	
	char		chr_l_inifile[PATH_LENGTH]			=APL_NULL_STRING;
	FILE		*l_finifile							=(FILE *) NULL;
	char		chr_l_buf[BUFFER_LEN]					=APL_NULL_STRING;

	char		chr_l_ae_path[PATH_LENGTH];
	char		chr_l_ae_filename[100]		=APL_NULL_STRING;
	char		chr_l_ae_pathname[PATH_LENGTH]		=APL_NULL_STRING;

	

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered B_AccEntFlFn \n",NULL,NULL);
	}

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH") );
	strcat(chr_l_inifile,"intl_sun.cfg");

	printf("the chr_l_inifile is %s\n",chr_l_inifile);

	if ( (l_finifile = fopen(chr_l_inifile,"r") )  == NULL )
	{
		APL_GOBACK_FAIL
	}


	if (APL_FAILURE == CO_ReadToken(	l_finifile,
						  						"INTL_AE_PATH",
						 					 	chr_l_ae_path,
												l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
	
	sprintf(chr_l_ae_filename,"%sF%s.%s",chr_l_ae_path,p_batch_no,g_mt_commonsys_params_struct_h.brnch_cd);

	strcpy(p_ae_flname,chr_l_ae_filename);

	printf("the p_ae_flname returned from the IV_AccEntIfIfn is %s\n",p_ae_flname);

	


	
	
	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of the IV_AccEntIfIfn successfully\n",NULL,NULL);

	}
	return (APL_SUCCESS);

	RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of the IV_AccEntIfIfn unsucessfully\n",NULL,NULL);
	}
	return (APL_FAILURE);
}

