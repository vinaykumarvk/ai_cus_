/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2014 Polaris Financial Technology Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Financial Technology Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Financial Technology Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Master Maintenance
 *
 * File Name           :      DL_ProcDL_A.pc
 *
 * Description         :      This file contains common functions related to Deal 
 *                            Processing Module.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description       RFS No.
 * ---------   --------  ------------     -------------     ---------
 * 11/11/2014   1.1       Prateek Singh   Changed for FPI   ISKB_7009
 *
 *********************************************************************/

#include "CO_HostStructdef.h"
#include "SMI_InterFace.h"
#include "SMI_Common.h"
#include "CA_Common.h"
EXEC SQL INCLUDE SQLCA.H;


#define SETL_TYPE_MSG 6    
int DL_Mod_DL(	SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h,
						char *p_ora_rowid,
						int *int_p_trdrepseqnum,
						INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
  if ( !strcmp( p_intl_envdatastruct_h->h_mode, "MOD") &&
			( p_intl_envdatastruct_h->h_process[0] == 'B' ) )
  {
     char l_pltopl_flg[DL_PLTOPL_FLG_LEN] = APL_NULL_STRING;
     short i_pltopl_flg = 0; 
     char chr_todays_date[APL_DATE_LEN] 	= APL_NULL_STRING;

     if(CO_RtvSysDtTime(chr_todays_date,l_debug_info_ptr) !=APL_SUCCESS)
		APL_GOBACK_FAIL

     EXEC SQL SELECT PLTOPL_FLG INTO :l_pltopl_flg:i_pltopl_flg FROM DL_DEAL 
                                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
						 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		printf("The flag from db : %s\n",l_pltopl_flg );

		IS_ANY_ORA_ERROR
      if ( i_pltopl_flg == -1 || l_pltopl_flg[0] =='F'|| l_pltopl_flg[0] =='N'|| l_pltopl_flg[0] =='M'|| l_pltopl_flg[0] =='S')/*Changes for manual marking  the deals as BC,for that added PLTOPL_FLG N,M,S as Deal is released through system(M,S)and manual release(N) :"Equity Fund Confirmation: Stop Confirmation" by Pallavi ISHB_473 01/10/2014 Starts*/
       {
        printf("\n Blocing process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'B',
	                             MAKER           = :p_intl_envdatastruct_h->usr,
				     MAKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;

		IS_ANY_ORA_ERROR
		
       }
       else if ( l_pltopl_flg[0] =='B')
       {
          printf("\n Blocing confirmation process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'C',
	                             CHECKER           = :p_intl_envdatastruct_h->usr,
				     CHECKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
                IS_ANY_ORA_ERROR
       }
      else if ( l_pltopl_flg[0] =='C')
       {
         printf("\n Relesing process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'R',
	                             MAKER           = :p_intl_envdatastruct_h->usr,
				     MAKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		IS_ANY_ORA_ERROR
       }
      else if (l_pltopl_flg[0] =='G')/*Changes for manual marking  the deals as RFC,for that added PLTOPL_FLG G as Deal is blocked during Matching:"Equity Fund Confirmation: Stop Confirmation" by Pallavi ISHB_473 01/10/2014 Starts*/
       {
	 Alert("PLTOPL_FLG is G...");
         printf("\n Relesing process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'L',
	                             MAKER           = :p_intl_envdatastruct_h->usr,
				     MAKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		IS_ANY_ORA_ERROR
       }
      else if ( l_pltopl_flg[0] =='L' )
       {
         Alert("Inside pltoplflg is 'L'...");
         printf("\n Relesing For Confirmation process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'N',
	                             CHECKER           = :p_intl_envdatastruct_h->usr,
				     CHECKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		IS_ANY_ORA_ERROR
       }
       /*Changes for manual marking  the deals as RFC,for that added PLTOPL_FLG G as Deal is blocked during Matching:"Equity Fund Confirmation: Stop Confirmation" by Pallavi ISHB_473 01/10/2014 Ends*/
       else if ( l_pltopl_flg[0] =='R' )
       {
         printf("\n Relesing For Confirmation process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'F',
	                             CHECKER           = :p_intl_envdatastruct_h->usr,
				     CHECKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		IS_ANY_ORA_ERROR
       }
      APL_GOBACK_SUCCESS
  }
  else if ( !strcmp( p_intl_envdatastruct_h->h_mode, "MOD") &&
			( p_intl_envdatastruct_h->h_process[0] == 'R' ) )
  {
  char l_pltopl_flg[DL_PLTOPL_FLG_LEN] = APL_NULL_STRING;
  short i_pltopl_flg = 0; 
  char chr_todays_date[APL_DATE_LEN] 	= APL_NULL_STRING;

     if(CO_RtvSysDtTime(chr_todays_date,l_debug_info_ptr) !=APL_SUCCESS)
		APL_GOBACK_FAIL
  
   EXEC SQL SELECT PLTOPL_FLG INTO :l_pltopl_flg:i_pltopl_flg FROM DL_DEAL 
                                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
						 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		printf("The flag from db : %s\n",l_pltopl_flg );

		IS_ANY_ORA_ERROR
       if ( l_pltopl_flg[0] =='B')
       {
          printf("\n Blocing confirmation process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = '',
	                             CHECKER           = :p_intl_envdatastruct_h->usr,
				     CHECKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		IS_ANY_ORA_ERROR
       }
       else if ( l_pltopl_flg[0] =='R' )
       {
         printf("\n Relesing For Confirmation process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'C',
	                             CHECKER           = :p_intl_envdatastruct_h->usr,
				     CHECKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		IS_ANY_ORA_ERROR
       }
       else if ( l_pltopl_flg[0] =='L' )/*Added PLTOPL_FLG L as reset Deal which is blocked during for Matching during release process:"Equity Fund Confirmation: Stop Confirmation" by Pallavi ISHB_473 01/10/2014 Starts*/
       {
         printf("\n Relesing For Confirmation process done for deal");
         EXEC SQL UPDATE DL_DEAL SET PLTOPL_FLG = 'G',
	                             CHECKER           = :p_intl_envdatastruct_h->usr,
				     CHECKER_DT        = :chr_todays_date
                                 WHERE CLIENT    = :p_sys_dl_deal_struct_h->h_dl_client
				 AND  IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no;
		IS_ANY_ORA_ERROR
       }/*Added PLTOPL_FLG L as reset Deal which is blocked during for Matching during release process:"Equity Fund Confirmation: Stop Confirmation" by Pallavi ISHB_473 01/10/2014 Ends*/
    APL_GOBACK_SUCCESS
  }
else
{	
int DL_Proc_SetlSeqNoRst( char *p_deal_client,
                        char *p_deal_ident,
                        char *p_deal_rowid,
                        double *p_dbl_settle_seq_no,
                        char p_action,
                        INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
                        DEBUG_INFO_STRUCT_H **l_debug_info_ptr);
	

  	char chr_todays_date[APL_DATE_LEN] 	= APL_NULL_STRING;
	char h_typeofinstr[TYPEOF_INSTR_LEN] 	= APL_NULL_STRING;
	char chr_l_buf[BUFFER_LEN] 				= APL_NULL_STRING;
	char chr_l_53x[4]							= APL_NULL_STRING;
  	struct sqlca sqlca;
	int int_error_flag = APL_SUCCESS;
	int int_l_declen = 0;
	double chr_l_val = 0.0;
	int int_l_flg = 0;
	char chr_l_h_euro[APL_CCYCODE_LEN] 	= APL_NULL_STRING;
	short l_i_euro = 0;
	char l_action = 'U';

	char 	 l_chr_cauflg_fii[2] = APL_NULL_STRING;
	short l_i_cauflgFii =0;
   char chr_l_refno_a[17] = APL_NULL_STRING;
   char chr_l_origrefno[17] = APL_NULL_STRING;
   char chr_l_countaccnm[66] = APL_NULL_STRING;
   char chr_l_clientof[66] = APL_NULL_STRING;
   char chr_l_instparty[36] = APL_NULL_STRING;
   char chr_l_interprty[36] = APL_NULL_STRING; 
   char chr_l_note1[261] =APL_NULL_STRING;
   char chr_l_instpartynm[66]  =  APL_NULL_STRING;
   char chr_l_interprtynm[66]  =  APL_NULL_STRING;
	
	int int_p_smieligibility_flg = 0;
	int int_p_ccseligibility_flg = 0;
	char  chr_l_h_ccsmsgtyp[APL_STATUS_LEN]  =  APL_NULL_STRING;
   char  chr_l_tempdt[APL_DATE_LEN]                 = APL_NULL_STRING;
	
	double	l_netposn			= 0.0;
   int   int_l_date_diff                            = 0;
	char chr_l_h_trade_status[3]			= APL_NULL_STRING;
   char chr_h_sysdate1[APL_DATE_LEN]		= APL_NULL_STRING;
	EI_SMI_PEND_DEAL_STRUCT_H 	*l_ei_smi_pend_deal_struct_ha;
	EI_SMI_PEND_DEAL_STRUCT_I *l_ei_smi_pend_deal_struct_ia;
	char chr_l_trd_sts[3] 					= APL_NULL_STRING;
	char chr_l_smi_note1[261]				= APL_NULL_STRING;
	int  int_l_pend_count = 0 ;
	/* int  int_l_jocondexists = 0;  OPT:AIX */
	short  int_l_jocondexists = 0; 
   char chr_l_h_clscode[5]	= APL_NULL_STRING; 
	short l_i_clscode  = 0; 

	short i_smi_note1       =       0;

   char chr_l_smi_failnote[36]          = APL_NULL_STRING;
   char chr_l_smi_verwith[26]           = APL_NULL_STRING;
   char chr_l_smi_countaccnm[66]        =  APL_NULL_STRING;
   char chr_l_smi_clientof[66]         =  APL_NULL_STRING;
   char chr_l_smi_comm_ref_no[17]       =  APL_NULL_STRING;
   char chr_h_smi_rowid[APL_ROWID_LEN]       =  APL_NULL_STRING;
	short i_smi_rowid = 0;


    
     char chr_l_inst_partynm[66]          =  APL_NULL_STRING;
     char chr_l_inter_prtynm[66]          =  APL_NULL_STRING;
     char chr_l_inst_party[36]                    = APL_NULL_STRING;
     char chr_l_inter_prty[36]             = APL_NULL_STRING;
     char chr_l_tag[6]                    = APL_NULL_STRING;
     int  int_l_seq_num = 0;
   
     char l_bcn_req[2] = APL_NULL_STRING; /* chgs by amish */
	  short i_bcn_req = 0;

	  char l_cln_sebi_expdt[APL_DATE_LEN] = APL_NULL_STRING;
	  char l_cln_rbi_expdt[APL_DATE_LEN] = APL_NULL_STRING;
	  short i_cln_sebi_expdt = 0;
	  short i_cln_rbi_expdt = 0;
	  char l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	   int    int_ru_diff       = 0;

		char l_end_dt[APL_DATE_LEN] = APL_NULL_STRING;/* changes by amish -- 20/06 */
		short i_end_dt = 0;
		int int_dt_diff = 0;
   short i_smi_comm_ref_no = 0;
   short i_smi_accountof = 0;
   short i_smi_countaccnm = 0;
   short i_smi_verwith = 0;
   short i_smi_failnote = 0;

   
   short i_inst_partynm = 0;
   short i_inter_prtynm = 0;
   short i_inst_party = 0;
    short i_inter_prty = 0;
  

	char chr_l_unique_ref_num[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING; 
	char chr_l_new_unique_ref_num[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING; 
	char chr_l_repair_uniq_ref[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING; 
	int int_l_count_partial_trd = 0;
	char chr_l_str_count_partial_trd[4]=APL_NULL_STRING;
	int int_l_txn_type=0;   
	

	char chr_mainfuncarea[APL_MAINFUNCAREA_LEN]	= APL_NULL_STRING;
	char chr_l_condid[APL_CONDID_LEN]	= APL_NULL_STRING;
	short int_l_condexists = 0;
	short    l_mccy_cacc_exists = 0;    
		char l_param_str[201] = APL_NULL_STRING;

	
	short	l_sfe_flg 		= 0;
	short l_pl_spa_chg   = 0;	

							/*Amol 111206 -- Override mode only for FII Client with Inter FII ='N'*/
	char chr_l_cln_type[5]=APL_NULL_STRING; 

	EXEC SQL VAR chr_l_h_clscode IS STRING ; 
	EXEC SQL VAR chr_l_repair_uniq_ref IS STRING; 

	
	SYS_DL_DEAL_STRUCT_I * l_sys_dl_deal_struct_i	=	NULL;


	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE	:my_ctx_local;
	#endif

   EXEC SQL VAR chr_l_refno_a IS STRING;
   EXEC SQL VAR chr_l_origrefno IS STRING;
   EXEC SQL VAR chr_l_countaccnm IS STRING;
   EXEC SQL VAR chr_l_instparty IS STRING;
   EXEC SQL VAR chr_l_interprty IS STRING;
   EXEC SQL VAR chr_l_clientof IS STRING;
   EXEC SQL VAR chr_l_note1 IS STRING;
   EXEC SQL VAR chr_l_instpartynm IS STRING;
   EXEC SQL VAR chr_l_interprtynm IS STRING;

   EXEC SQL VAR chr_l_smi_note1         IS STRING;
   EXEC SQL VAR chr_l_smi_failnote      IS STRING;
   EXEC SQL VAR chr_l_smi_verwith       IS STRING;
   EXEC SQL VAR chr_l_smi_countaccnm    IS STRING;
   EXEC SQL VAR chr_l_smi_clientof     IS STRING;
   EXEC SQL VAR chr_l_smi_comm_ref_no   IS STRING;
   EXEC SQL VAR chr_h_smi_rowid   IS STRING;

   
   EXEC SQL VAR chr_l_inst_partynm	    IS STRING;
   EXEC SQL VAR chr_l_inter_prtynm	    IS STRING;
   EXEC SQL VAR chr_l_inst_party	    IS STRING;
   EXEC SQL VAR chr_l_inter_prty	    IS STRING;
   EXEC SQL VAR chr_l_tag 		    IS STRING;
   EXEC SQL VAR chr_l_new_unique_ref_num    IS STRING;   
   EXEC SQL VAR p_sys_dl_deal_struct_h->h_uniq_ident_no    IS STRING;   

   
   memset(chr_l_smi_note1,        APL_NULL_CHAR,261);
   memset(chr_l_smi_failnote,     APL_NULL_CHAR,36);
   memset(chr_l_smi_verwith,      APL_NULL_CHAR,26);
   memset(chr_l_smi_countaccnm,   APL_NULL_CHAR,66);
   memset(chr_l_smi_clientof,    APL_NULL_CHAR,66);
   memset(chr_l_smi_comm_ref_no,  APL_NULL_CHAR,17);
	memset(l_param_str,APL_NULL_CHAR,201);

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function DL_MOD_DL", NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Account is : %s", p_sys_dl_deal_struct_h->h_dl_client);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The RefNo is : %s", p_sys_dl_deal_struct_h->h_indentity_no);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The MODE is : %s", p_intl_envdatastruct_h->h_mode);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
	}

	

	l_sys_dl_deal_struct_i	=	(SYS_DL_DEAL_STRUCT_I *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_i);
	memset(l_sys_dl_deal_struct_i,NULL,sizeof(SYS_DL_DEAL_STRUCT_I));

 	l_ei_smi_pend_deal_struct_ha = ( EI_SMI_PEND_DEAL_STRUCT_H *) calloc( 1,sizeof(EI_SMI_PEND_DEAL_STRUCT_H));
   APL_MALLOC_FAIL(l_ei_smi_pend_deal_struct_ha);
   memset(l_ei_smi_pend_deal_struct_ha , NULL , sizeof(EI_SMI_PEND_DEAL_STRUCT_H));

	l_ei_smi_pend_deal_struct_ia = ( EI_SMI_PEND_DEAL_STRUCT_I *) calloc( 1,sizeof(EI_SMI_PEND_DEAL_STRUCT_I));
   APL_MALLOC_FAIL(l_ei_smi_pend_deal_struct_ia);
   memset(l_ei_smi_pend_deal_struct_ia , NULL , sizeof(EI_SMI_PEND_DEAL_STRUCT_I));

	sqlca.sqlcode = 0;
	
   EXEC SQL VAR chr_l_trd_sts          IS STRING;
	EXEC SQL VAR chr_l_smi_note1        IS STRING;

	sprintf(chr_l_buf, "The MODE is : %s", p_intl_envdatastruct_h->h_mode);
    sprintf(chr_l_buf, "The h_dealcd is : %s", p_sys_dl_deal_struct_h->h_dealcd);
    sprintf(chr_l_buf, "The deal class is : %s", p_sys_dl_deal_struct_h->h_classofdl);
   
	Alert("value of p_sys_dl_deal_struct_h_a-> h_interest2 %lf",p_sys_dl_deal_struct_h-> h_interest);
   
   /*Added by shyam for RBI Monitory to restrict from purchase on 30/11/11 */
    if((strcmp(p_intl_envdatastruct_h->h_mode, "INP") == 0 || strcmp(p_intl_envdatastruct_h->h_mode, "MOD") == 0 || strcmp(p_intl_envdatastruct_h->h_mode, "RPR") == 0) && strcmp(p_sys_dl_deal_struct_h->h_classofdl, NORMALDEAL) == 0)
    {
        if(strcmp(p_sys_dl_deal_struct_h->h_dealcd, "2") == 0 || strcmp(p_sys_dl_deal_struct_h->h_dealcd, "4") == 0)
        {
	    /* Added by Gouse - UAT Issue - Not able to Delete in Repair mode - 24/04/2012 - Start */
	    if(strcmp(p_intl_envdatastruct_h->h_mode, RPR_MODE) == 0 && (p_intl_envdatastruct_h->h_process[0] == 'D'))
		printf("Skipping for Repair mode and Delete Option \n");
           /* Added by Gouse - UAT Issue - Not able to Delete in Repair mode - 24/04/2012 - End */

            else if(APL_FAILURE == chkRestrictForPurchase(p_sys_dl_deal_struct_h->h_dl_client, p_sys_dl_deal_struct_h->h_instr_code, l_debug_info_ptr))
            {
                CO_InsertErr(l_debug_info_ptr,ERR_DEAL_RESTRICT_PURCHASE,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
                APL_GOBACK_FAIL
            }
        }
    }
    
   if (strcmp(p_sys_dl_deal_struct_h->h_deal_status,STATUS_CONF)==0)
   {
      if (APL_FAILURE == DL_Proc_SetlSeqNoRst(p_sys_dl_deal_struct_h->h_dl_client, p_sys_dl_deal_struct_h->h_indentity_no, p_ora_rowid,
                                            (double *)&(p_sys_dl_deal_struct_h->h_regmsgquantity), l_action,  p_intl_envdatastruct_h, l_debug_info_ptr))
            APL_GOBACK_FAIL
   }
      


	

	memset(chr_l_buf, NULL, BUFFER_LEN);
	if (int_p_trdrepseqnum) sprintf(chr_l_buf, "%d", *int_p_trdrepseqnum);
	if ((!strcmp(p_intl_envdatastruct_h->h_mode, RPR_MODE)) && (p_intl_envdatastruct_h->h_process[0] == 'D'))
	{
		
		memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
      memset(chr_l_condid, APL_NULL_CHAR, APL_CONDID_LEN);
      strcpy(chr_mainfuncarea, "TRDRPR_INCMSG");
      strcpy(chr_l_condid, "UNDEL_NONRPRTRDS");
         if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, chr_l_condid, &int_l_condexists, l_debug_info_ptr) )
         {
           APL_GOBACK_FAIL
         }
         if (int_l_condexists)
         {
            

           EXEC SQL SELECT SYS_DATE INTO :chr_h_sysdate1
           FROM PRO_SYS_DATE;

           IS_ANY_ORA_ERROR

		    EXEC SQL UPDATE DL_DEALREPAIR
                    SET DEAL_STAT = 'DD',
                    MAKER = :p_intl_envdatastruct_h->usr,
                    MAKER_DT=:chr_h_sysdate1
           WHERE DL_REP_IDENTNO = RTRIM(:int_p_trdrepseqnum);
         }
         else
         {

	    		EXEC SQL DELETE DL_DEALREPAIR
				WHERE DL_REP_IDENTNO = RTRIM(:int_p_trdrepseqnum);
			}

	   	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
		   													chr_l_buf,
			   												"Trd. Repair Table",
															APL_NULL_STRING);
		

      EXEC SQL DELETE DL_MSGLINKDET
               WHERE INDEN_NUM = (SELECT INDEN_NUM FROM DL_MSGLINK WHERE DL_REP_IDENTNO = RTRIM(:int_p_trdrepseqnum));


      IS_ANY_ORA_ERROR

      EXEC SQL DELETE DL_MSGLINK
               WHERE DL_REP_IDENTNO = RTRIM(:int_p_trdrepseqnum);

      IS_ANY_ORA_ERROR

      

		APL_GOBACK_SUCCESS
	}


  

  if (!strlen(p_sys_dl_deal_struct_h->h_dlfromord))
  {
    p_sys_dl_deal_struct_h->h_dlfromord[0] = 'N';
    p_sys_dl_deal_struct_h->h_dlfromord[1] = '\0';
  }
  if (!strlen(p_sys_dl_deal_struct_h->h_ispymtlocal))
  {
    p_sys_dl_deal_struct_h->h_ispymtlocal[0] = 'N';
    p_sys_dl_deal_struct_h->h_ispymtlocal[1] = '\0';
  }
  if (!strlen(p_sys_dl_deal_struct_h->h_reginstr_ind))
  {
    p_sys_dl_deal_struct_h->h_reginstr_ind[0] = 'N';
    p_sys_dl_deal_struct_h->h_reginstr_ind[1] = '\0';
  }
 
	if (!strlen(p_sys_dl_deal_struct_h->h_locchng_flg)) 
	{
		p_sys_dl_deal_struct_h->h_locchng_flg[0] = 'N';
		p_sys_dl_deal_struct_h->h_locchng_flg[1] = '\0';
	}

  	

  	if(CO_RtvSysDtTime(chr_todays_date,l_debug_info_ptr) !=APL_SUCCESS)
		APL_GOBACK_FAIL


  	
  
  	strcpy(p_sys_dl_deal_struct_h->h_access_stamp, chr_todays_date);

	if (!strlen(p_sys_dl_deal_struct_h->h_entry))
	{
		if (!strcmp(p_intl_envdatastruct_h->h_mode, RPR_MODE))
		{
			strcpy(p_sys_dl_deal_struct_h->h_entry, "S");
		}
		else
		{
			strcpy(p_sys_dl_deal_struct_h->h_entry, "M");
		}
	}
	
	if (!strcmp(p_intl_envdatastruct_h->h_mode, RPR_MODE))
	{
		
		if (APL_FAILURE == CO_Chk_CntryEnabled(  "INCOMING_MSG",
                                             "SFE_MQ_INC",
                                             &l_sfe_flg,
                                             l_debug_info_ptr))
      {
         APL_GOBACK_FAIL
      }
		
		if (((!strcmp(p_sys_dl_deal_struct_h->h_entry, "M")) || (!strcmp(p_sys_dl_deal_struct_h->h_entry, "B"))) && (l_sfe_flg != 0))
			strcpy(p_sys_dl_deal_struct_h->h_reapired_ind, "N");
		else
			strcpy(p_sys_dl_deal_struct_h->h_reapired_ind, "Y");
	}

	if (!p_sys_dl_deal_struct_h->h_origquantity)
	{
		Alert("Inside Null");
  		p_sys_dl_deal_struct_h->h_origquantity = p_sys_dl_deal_struct_h->h_qty;
	}
	if (!p_sys_dl_deal_struct_h->h_origamount)
	{
  		p_sys_dl_deal_struct_h->h_origamount = p_sys_dl_deal_struct_h->h_amt;
	}
	if (!strlen(p_sys_dl_deal_struct_h->h_origindentity_no))
	{
  		strcpy(p_sys_dl_deal_struct_h->h_origindentity_no, p_sys_dl_deal_struct_h->h_indentity_no);
	}
  	if (!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT))
	{
		
		if (strcmp(p_sys_dl_deal_struct_h->h_newdt,APL_NULL_STRING)==0)
		{
    		strcpy(p_sys_dl_deal_struct_h->h_newdt, chr_todays_date);    
		}
	}
	if (!strlen(p_sys_dl_deal_struct_h->h_maker))
	{
  		strcpy(p_sys_dl_deal_struct_h->h_maker, p_intl_envdatastruct_h->usr);
	}
	if (!strlen(p_sys_dl_deal_struct_h->h_maker_dt))
	{
  		strcpy(p_sys_dl_deal_struct_h->h_maker_dt, chr_todays_date);    
	}
	if (!strlen(p_sys_dl_deal_struct_h->h_deal_status))
	{
  		strcpy(p_sys_dl_deal_struct_h->h_deal_status, APL_STATUS_UNAUTH);
	}
	 

  	if ((p_sys_dl_deal_struct_h->h_entry[0] == 'G') || 
	  	 (p_intl_envdatastruct_h->auth_req[0] == 'N')||
		 (p_sys_dl_deal_struct_h->h_entry[0] == 'S'  && !strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT)))
  	{
		if (!strlen(p_sys_dl_deal_struct_h->h_checker))
		{
    		strcpy(p_sys_dl_deal_struct_h->h_checker, p_sys_dl_deal_struct_h->h_maker);
		}
		if (!strlen(p_sys_dl_deal_struct_h->h_checker_dt))
		{
    		strcpy(p_sys_dl_deal_struct_h->h_checker_dt, p_sys_dl_deal_struct_h->h_maker_dt);
		}
		if ((!strlen(p_sys_dl_deal_struct_h->h_deal_status)) ||
			 (!strcmp(p_sys_dl_deal_struct_h->h_deal_status, APL_STATUS_UNAUTH)))
		{
    		strcpy(p_sys_dl_deal_struct_h->h_deal_status, APL_STS_AUTH);
		}
  	}
 
   

   if ( (p_sys_dl_deal_struct_h->h_entry[0] == 'S') &&
        !strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT) )
   {
      strcpy(p_sys_dl_deal_struct_h->h_maker_dt, p_sys_dl_deal_struct_h->h_newdt);
      strcpy(p_sys_dl_deal_struct_h->h_checker_dt, p_sys_dl_deal_struct_h->h_newdt);
		 if (strcmp(p_sys_dl_deal_struct_h->h_access_stamp,APL_NULL_STRING)==0) 
      strcpy(p_sys_dl_deal_struct_h->h_access_stamp, p_sys_dl_deal_struct_h->h_newdt);
   }

	/* chgs by amish 22/04 */
	
 	EXEC SQL SELECT CLN_BCN_REQD into :l_bcn_req:i_bcn_req FROM MT_CLIENT 
 	WHERE CLN_CODE = :p_sys_dl_deal_struct_h->h_dl_client; 
	
	IS_ANY_ORA_ERROR;
 
	printf("\nAMISH********MT_CLIENT*******|%s|\n",l_bcn_req);
	if(!strcmp(l_bcn_req,"T"))
			{
				strcpy(p_sys_dl_deal_struct_h->h_contract_req,"Y");
			}
	else
		 strcpy(p_sys_dl_deal_struct_h->h_contract_req,"N");

	printf("\nAMISH********dl_deal**********8*******|%s|\n",p_sys_dl_deal_struct_h->h_contract_req);

	EXEC SQL SELECT CLN_SEBI_REG_EXPDT,CLN_RBI_REG_EXPDT into :l_cln_sebi_expdt:i_cln_sebi_expdt,l_cln_rbi_expdt:i_cln_rbi_expdt FROM MT_REGDETAILS 
		WHERE CLN_CODE = :p_sys_dl_deal_struct_h->h_dl_client;
	IS_ANY_ORA_ERROR;
	
 	printf("\nSEBI EXP DATE IS |%s|\n",l_cln_sebi_expdt);
	printf("\nRBI EXP DATE IS |%s|\n",l_cln_rbi_expdt);
 
	
  EXEC SQL SELECT SYS_DATE into :l_sys_date from PRO_SYS_DATE;
  IS_ANY_ORA_ERROR;

 if(strcmp(l_cln_sebi_expdt,APL_NULL_STRING)) 
 {
	/* 
  if( CR_Chk_ExpDateValid(l_sys_date,l_cln_sebi_expdt,l_debug_info_ptr) == APL_FAILURE )
  */
  if ( APL_FAILURE  ==	 CO_Pro_DateComp(p_sys_dl_deal_struct_h->h_dlt,l_cln_sebi_expdt,&
			  int_ru_diff,l_debug_info_ptr))
  {
	  APL_GOBACK_FAIL
  }
		  
	if (int_ru_diff < 0)	  
  {
	  printf("\n SEBI DATE IS GREATER\n");
	 
         	   CO_InsertErr(l_debug_info_ptr, 
							ERR_DT_GRT_SEBIEXDT, 
							APL_NULL_STRING,
							APL_NULL_STRING, 
							APL_NULL_STRING, 
							__LINE__, 
							__FILE__);
           		 APL_GOBACK_FAIL     		 
  }
 }
 if(strcmp(l_cln_rbi_expdt,APL_NULL_STRING))
 {
	 /*
  if( CR_Chk_ExpDateValid(l_sys_date,l_cln_rbi_expdt,l_debug_info_ptr) == APL_FAILURE )
  */
	if ( APL_FAILURE  ==   CO_Pro_DateComp(p_sys_dl_deal_struct_h->h_dlt,
				l_cln_rbi_expdt,&int_ru_diff,l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}
	 if (int_ru_diff < 0)
	  {
       printf("\n RBI DATE IS GREATER\n");
	  
              CO_InsertErr(l_debug_info_ptr,
						  ERR_DT_GRT_RBIEXDT,
						  APL_NULL_STRING,
						  APL_NULL_STRING,
						  APL_NULL_STRING,
						  __LINE__,
						   __FILE__);
				  APL_GOBACK_FAIL
	  
	 
 		 }  
  	
 }

	if ((p_sys_dl_deal_struct_h->h_entry[0] == 'G'))
	{
      
      if ( CO_Chk_CntryEnabled( "MULTI_CCY",
                              "GL_CLT",
                               &l_mccy_cacc_exists,
                               l_debug_info_ptr
                            ) == APL_FAILURE
       )
       {
         APL_GOBACK_FAIL
       }
/** Changes:AmitB 290906:Split/CR blockwise Trades **/
		 IF_COND_EXISTS("SPLIT_PROCESSING","SPCR_MULTITRD")
		 {	
        	if(strcmp(p_sys_dl_deal_struct_h->h_classofdl,DEALTYPE_CORP_A)==0 && (strncmp(p_sys_dl_deal_struct_h->h_indentity_no,STOCK_SPLIT,strlen(STOCK_SPLIT) - 1)==0 || strncmp(p_sys_dl_deal_struct_h->h_indentity_no,CACR_IND,strlen(CACR_IND))==0))
			{
			  printf("\n Amit:Skip NULL cash client \n");
		 	}
		 else
		 {
	        if (!l_mccy_cacc_exists)
            strcpy(p_sys_dl_deal_struct_h->h_cash_client, APL_NULL_STRING);
		 }
		}
		else
		 {
			if (!l_mccy_cacc_exists)
            strcpy(p_sys_dl_deal_struct_h->h_cash_client, APL_NULL_STRING);
			 
		 }

		if (APL_FAILURE == CO_Chk_EMU_Period(	p_sys_dl_deal_struct_h->h_newdt,
														&int_l_flg,
														l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}

		if ( (int_l_flg == 2) || (int_l_flg == 3) ) 
		{
			EXEC SQL SELECT FIELD_VAL
			INTO :chr_l_h_euro:l_i_euro
			FROM PRO_GSSPLVAL
			WHERE MAIN_FUN = 'EMUCONV'
			AND	SUB_PROCESS			= 'EMU_CCY'
			AND	NATION			= :g_mt_commonsys_params_struct_h.nation_code;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_CCY_NOTFND,
																"EURO CURR.",
																APL_NULL_STRING,
																APL_NULL_STRING )

			strcpy(p_sys_dl_deal_struct_h->h_currencycode, chr_l_h_euro);
		}
	}

	
 
	EXEC SQL SELECT INSTR_TYPE INTO :h_typeofinstr
	FROM MT_INSTRUMENT
	WHERE instr_code = RTRIM(:p_sys_dl_deal_struct_h->h_instr_code);

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_INSTR_NOTFND,
														p_sys_dl_deal_struct_h->h_instr_code,
														APL_NULL_STRING,
														APL_NULL_STRING );

	

	CR_Proc_InstrQtyRound( p_sys_dl_deal_struct_h->h_qty, p_sys_dl_deal_struct_h->h_instr_code, &chr_l_val, l_debug_info_ptr );

	p_sys_dl_deal_struct_h->h_qty = chr_l_val;

	

	chr_l_val = 0;
	CR_Proc_InstrQtyRound( p_sys_dl_deal_struct_h->h_origquantity, p_sys_dl_deal_struct_h->h_instr_code, &chr_l_val, l_debug_info_ptr );
	p_sys_dl_deal_struct_h->h_origquantity = chr_l_val;

   
   if (((p_sys_dl_deal_struct_h->h_origquantity == 0) || (p_sys_dl_deal_struct_h->h_qty == 0)) && (strcmp(p_sys_dl_deal_struct_h->h_dealcd,APL_DEAL_CD)) && (strcmp(p_sys_dl_deal_struct_h->h_dealcd,APL_DEAL_CR)))
   {
      APL_DATA_MISSING( "Trade Quantity",
                        APL_NULL_STRING,
                        APL_NULL_STRING );
      APL_GOBACK_FAIL
   }

	

	EXEC SQL SELECT DEC_LEN INTO :int_l_declen
	FROM DL_CURRENCY
	WHERE currency_cd = RTRIM(:p_sys_dl_deal_struct_h->h_currencycode);

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF,
														"Decimal Len.",
														p_sys_dl_deal_struct_h->h_currencycode,
														APL_NULL_STRING);

	

	chr_l_val = 0;
	CO_Round(	p_sys_dl_deal_struct_h->h_amt, int_l_declen, &chr_l_val);
	p_sys_dl_deal_struct_h->h_amt = chr_l_val;

	
	

	if (!strcmp(h_typeofinstr, APL_INSTRU_FMT))
	{
		chr_l_val = 0;
		CO_Round(	p_sys_dl_deal_struct_h->h_pr, 3, &chr_l_val);
		p_sys_dl_deal_struct_h->h_pr = chr_l_val;

		p_sys_dl_deal_struct_h->h_pr/=100;
	}
	else
	{
		chr_l_val = 0;
		CO_Round(	p_sys_dl_deal_struct_h->h_pr, int_l_declen, &chr_l_val);
		p_sys_dl_deal_struct_h->h_pr = chr_l_val;
	}

	
	if ((strcmp(p_sys_dl_deal_struct_h->h_dealcd,APL_DEAL_DVP) == 0) || (strcmp(p_sys_dl_deal_struct_h->h_dealcd,APL_DEAL_DF) == 0) || (strcmp(p_sys_dl_deal_struct_h->h_dealcd,APL_DEAL_DCD) == 0))
	{
		if(CO_Chk_CntryEnabled("TRADE_MAINT","NTRD_NODLT",&int_l_jocondexists,l_debug_info_ptr)==APL_FAILURE)
          APL_GOBACK_FAIL

      	if (int_l_jocondexists)
      	{
         	EXEC SQL SELECT CLASSCD INTO :chr_l_h_clscode:l_i_clscode FROM MT_INSTRUMENT
         		WHERE instr_code = :p_sys_dl_deal_struct_h->h_instr_code;

					IS_ANY_ORA_ERROR

 	   	   if (strcmp(chr_l_h_clscode,"NTRD") == 0 )
   	      {
         	   CO_InsertErr(l_debug_info_ptr, ERR_DLVTRDS_NOTALLOWED, p_sys_dl_deal_struct_h->h_instr_code,APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
           		 APL_GOBACK_FAIL
         	}
      	}
	  }


		printf("ISO6.8-002 The unique_ref_num is : %s\n",p_sys_dl_deal_struct_h->h_uniq_ident_no);	 
	if (!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT)|| !strcmp(p_intl_envdatastruct_h->h_mode,RPR_MODE))
	{
		
	
		
		if (strlen(p_sys_dl_deal_struct_h->h_uniq_ident_no)==0)
		{
				  int_l_txn_type=SETL_TYPE_MSG; 
				  if (MS_Rtv_RefNo_A(int_l_txn_type,chr_l_unique_ref_num,l_debug_info_ptr) == APL_FAILURE)
					  {
							CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, p_intl_envdatastruct_h);
							APL_GOBACK_FAIL;
					  }
				  printf("ISO6.8-002 The unique_ref_num is : %s\n",p_sys_dl_deal_struct_h->h_uniq_ident_no);	
				  strcpy(p_sys_dl_deal_struct_h->h_uniq_ident_no,chr_l_unique_ref_num);
		}
		else if (strcmp(p_sys_dl_deal_struct_h->h_origindentity_no,p_sys_dl_deal_struct_h->h_indentity_no))
		{
			printf("ISO6.8-002 ******** The orig ref int_num is : %s\n",p_sys_dl_deal_struct_h->h_origindentity_no);	 
			printf("ISO6.8-002 ******** The ref int_num is : %s\n",p_sys_dl_deal_struct_h->h_indentity_no);	 
					

			      EXEC SQL SELECT COUNT(*) INTO :int_l_count_partial_trd 
               FROM DL_DEAL
               WHERE ORIG_REFNO=:p_sys_dl_deal_struct_h->h_origindentity_no;		
					sprintf(chr_l_str_count_partial_trd,"%d",int_l_count_partial_trd);

					strcpy(chr_l_new_unique_ref_num,p_sys_dl_deal_struct_h->h_uniq_ident_no);
					EXEC SQL SELECT RTRIM(:chr_l_new_unique_ref_num)||:int_l_count_partial_trd
					INTO :p_sys_dl_deal_struct_h->h_uniq_ident_no
					FROM DUAL;


					printf("ISO6.8-002 ******** l_str_partial_trd :*%s*\n",chr_l_str_count_partial_trd);	 
					printf("ISO6.8-002 ******** int_l_count_partial_trd:number : %d\n",int_l_count_partial_trd);	 
		}
		printf("ISO6.8-002 The unique_ref_num is : *%s*\n",p_sys_dl_deal_struct_h->h_uniq_ident_no);	 

		

		
	}
		printf("ISO6.8-002 ******  The unique_ref_num is : %s\n",p_sys_dl_deal_struct_h->h_uniq_ident_no);	 


  	

  	if ((!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT)) || (!strcmp(p_intl_envdatastruct_h->h_mode, RPR_MODE)))  
  	{

	
		if(strlen(p_sys_dl_deal_struct_h->h_fail_cd) == 0)
			l_sys_dl_deal_struct_i->i_subfailreas_cd	=	-1;

   if (strlen(p_sys_dl_deal_struct_h->h_indentity_no))
      {
      EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_indentity_no) into :chr_l_refno_a from dual;
      IS_ANY_ORA_ERROR
      strcpy(p_sys_dl_deal_struct_h->h_indentity_no,chr_l_refno_a);
      }
   if (strlen(p_sys_dl_deal_struct_h->h_origindentity_no))
      {
      EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_origindentity_no) into :chr_l_origrefno from dual;
      IS_ANY_ORA_ERROR
      strcpy(p_sys_dl_deal_struct_h->h_origindentity_no,chr_l_origrefno);
      }
	else
      strcpy(p_sys_dl_deal_struct_h->h_origindentity_no,chr_l_refno_a);
   if (strlen(p_sys_dl_deal_struct_h->h_countcltnm))
      {
      EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_countcltnm) into :chr_l_countaccnm from dual;
      IS_ANY_ORA_ERROR
      strcpy(p_sys_dl_deal_struct_h->h_countcltnm,chr_l_countaccnm);
      }
   if (strlen(p_sys_dl_deal_struct_h->h_clientof))
      {
      EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_clientof) into :chr_l_clientof from dual;
      IS_ANY_ORA_ERROR
      strcpy(p_sys_dl_deal_struct_h->h_clientof,chr_l_clientof);
      }
   if (strlen(p_sys_dl_deal_struct_h->h_instruct_person))
      {
      EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_instruct_person) into :chr_l_instparty from dual;
      IS_ANY_ORA_ERROR
      strcpy(p_sys_dl_deal_struct_h->h_instruct_person,chr_l_instparty);
      }
   if (strlen(p_sys_dl_deal_struct_h->h_info1))
      {
      EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_info1) into :chr_l_note1 from dual;
      IS_ANY_ORA_ERROR
      strcpy(p_sys_dl_deal_struct_h->h_info1,chr_l_note1);
      }
	if (strlen(p_sys_dl_deal_struct_h->h_instruct_personnm))
		{
		EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_instruct_personnm) into :chr_l_instpartynm from dual;	
		IS_ANY_ORA_ERROR
		strcpy(p_sys_dl_deal_struct_h->h_instruct_personnm,chr_l_instpartynm);
		}
	if (strlen(p_sys_dl_deal_struct_h->h_inter_med_person))
		{
		EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_inter_med_person) into :chr_l_interprty from dual;	
		IS_ANY_ORA_ERROR
		strcpy(p_sys_dl_deal_struct_h->h_inter_med_person,chr_l_interprty);
		}
	if (strlen(p_sys_dl_deal_struct_h->h_inter_med_personnm))
		{
		EXEC SQL SELECT UPPER(:p_sys_dl_deal_struct_h->h_inter_med_personnm) into :chr_l_interprtynm from dual;	
		IS_ANY_ORA_ERROR
		strcpy(p_sys_dl_deal_struct_h->h_inter_med_personnm,chr_l_interprtynm);
		}

		


		

			strcpy(chr_l_h_ccsmsgtyp,APL_NULL_STRING);

		if (g_mt_commonsys_params_struct_h.ccs_ind[0] == 'Y')
		{
        if ( APL_FAILURE == DL_Chk_CCSEligible (p_sys_dl_deal_struct_h->h_dl_client,
                                                  p_sys_dl_deal_struct_h->h_indentity_no,
                                                  &int_p_ccseligibility_flg,
																  MS_CCS_XX,
                                                  l_debug_info_ptr))
        {
           CO_ProcMonitor(APL_OUT_FILE,"Failure from CCS_CheckEligibility", NULL, p_intl_envdatastruct_h);
           APL_GOBACK_FAIL;
        }
        if (int_p_ccseligibility_flg)
        {
         	if ((!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT )) && 
					(!strcmp(p_sys_dl_deal_struct_h->h_deal_status,STATUS_AUTH)))
         	{
               if (p_sys_dl_deal_struct_h->h_dealcd[0] == DEALCD_RVP)
               {
                  strcpy(p_sys_dl_deal_struct_h->h_deal_status, APL_STATUS_CQ);
                  strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T1);
               }
               else if (p_sys_dl_deal_struct_h->h_dealcd[0] == DEALCD_DF )
               {
                  strcpy(chr_l_tempdt, APL_NULL_STRING);
                  if ( APL_FAILURE == CO_RtvSysDt(chr_l_tempdt, l_debug_info_ptr) )
                  {
                     APL_GOBACK_FAIL;
                  }

						EXEC SQL SELECT NVL(SUM(SAFEKEEP_POS),0)-NVL(SUM(VAL_REC),0)-NVL(SUM(NVALDELIVER),0) into :l_netposn
								FROM DL_SAFEK 
								WHERE CLIENT = :p_sys_dl_deal_struct_h->h_dl_client AND INSTR_CODE = :p_sys_dl_deal_struct_h->h_instr_code ;
						IS_ANY_ORA_ERROR

                  if ( APL_FAILURE == CO_Pro_DateComp(   p_sys_dl_deal_struct_h->h_setldt,
                                                      chr_l_tempdt,
                                                      &int_l_date_diff,
                                                      l_debug_info_ptr) )
                  {
                     APL_GOBACK_FAIL;
                  }
                  if ((int_l_date_diff > 0) || (l_netposn < 0) )
                  {
                     strcpy(p_sys_dl_deal_struct_h->h_deal_status, APL_STATUS_CD);
                     strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T3);
                  }
                  else
                  {
                     
                     strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T2);
                  }
               }
               else
               {
                  
                  strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T2);
               }
            }
         	else if ((!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT )) && 
					(!strcmp(p_sys_dl_deal_struct_h->h_deal_status,STATUS_CONF)))
         	{
					if (!strcmp(p_sys_dl_deal_struct_h->h_fail_cd,"90"))
					{
						strcpy(chr_l_h_ccsmsgtyp,MS_CCS_FC);
					} 
				}
			}
		}

		/*** Override Check***/
							/*Amol 111206 -- Override mode only for FII Client with Inter FII ='N'*/
			EXEC SQL SELECT CLN_TYPE INTO :chr_l_cln_type FROM MT_CLIENT WHERE CLN_CODE=:p_sys_dl_deal_struct_h->h_dl_client;
			IS_ANY_ORA_ERROR

			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
			/* Changes:Isolve-306:AmitB:040607:for non-FII Client interfii deal should go in repair 	*/
			//if(strcmp(chr_l_cln_type,"F")!=0 && !strcmp(p_sys_dl_deal_struct_h->h_interfii_flg,"Y"))
			  if(((strcmp(chr_l_cln_type,"F")!=0)&&(strcmp(chr_l_cln_type,"FP")!=0)) && (!strcmp(p_sys_dl_deal_struct_h->h_interfii_flg,"Y")))
			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
			{
				Alert("Prateek::Client type is |%s|",chr_l_cln_type);
				Alert("Prateek::InterFII flag is |%s|",p_sys_dl_deal_struct_h->h_interfii_flg);

				CO_InsertErr(l_debug_info_ptr,
							ERR_BCN_INTERFII_CAU_MISMATCHED,
						APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,__LINE__,
						__FILE__);
					APL_GOBACK_FAIL
			}
			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
/*	ISolve-306:AmitB:270607	*/
			//if((strcmp(chr_l_cln_type,"F") ==0)&& (strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT)==0) && (strcmp(p_sys_dl_deal_struct_h->h_deal_status ,"AA")==0) && (strcmp(p_sys_dl_deal_struct_h->h_interfii_flg,"Y")!=0))
			  if(((strcmp(chr_l_cln_type,"F") ==0)||(strcmp(chr_l_cln_type,"FP") ==0))&& (strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT)==0) && (strcmp(p_sys_dl_deal_struct_h->h_deal_status ,"AA")==0) && (strcmp(p_sys_dl_deal_struct_h->h_interfii_flg,"Y")!=0))
			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
			{

			Alert("Prateek:Client is not F or FP and InterFii flag is N");
               EXEC SQL SELECT NVL(CAUTION_FLG,'N')
					      	INTO :l_chr_cauflg_fii:l_i_cauflgFii
							   FROM MT_RBI_MONITORY
					          WHERE INSTR_CODE =:p_sys_dl_deal_struct_h->h_instr_code;
			   IS_ANY_ORA_ERROR
			   if(sqlca.sqlcode == 1403)
			   strcpy(l_chr_cauflg_fii,"N");
				
			   if ((strcmp(l_chr_cauflg_fii,"Y")==0) && (!strcmp(p_sys_dl_deal_struct_h->h_dealcd,APL_DEAL_RVP) || !strcmp(p_sys_dl_deal_struct_h->h_dealcd,APL_DEAL_RF)) )
		       {
			   Alert("Before copying status as Override");	
		           strcpy(p_sys_dl_deal_struct_h->h_deal_status,STATUS_OVERRIDE);
		       }
			
			}
			else	//Isolve 306:amitb:060507	/*	ISolve-306:AmitB:270607	*/
			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
			//if((strcmp(chr_l_cln_type,"F") ==0)&& (strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT)==0) && (strcmp(p_sys_dl_deal_struct_h->h_deal_status ,"AA")==0) && (strcmp(p_sys_dl_deal_struct_h->h_interfii_flg,"Y")==0))
			 if(((strcmp(chr_l_cln_type,"F") == 0)||(strcmp(chr_l_cln_type,"FP") == 0))&& (strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT)==0) && (strcmp(p_sys_dl_deal_struct_h->h_deal_status ,"AA")==0) && (strcmp(p_sys_dl_deal_struct_h->h_interfii_flg,"Y")==0))
			//Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
			{

			Alert("Prateek:Client is F or FP and InterFii flag is Y");
               EXEC SQL SELECT NVL(CAUTION_FLG,'N')
					      	INTO :l_chr_cauflg_fii:l_i_cauflgFii
							   FROM MT_RBI_MONITORY
					          WHERE INSTR_CODE =:p_sys_dl_deal_struct_h->h_instr_code;
			   IS_ANY_ORA_ERROR

				if(sqlca.sqlcode == 1403)
		 	    strcpy(l_chr_cauflg_fii,"N");

			   if (strcmp(l_chr_cauflg_fii,"N")==0 )
		       {
			   Alert("Caution Flag is N");
//		           strcpy(p_sys_dl_deal_struct_h->h_deal_status,STATUS_REPAIR);
					CO_InsertErr(l_debug_info_ptr,
							ERR_BCN_INTERFII_CAU_MISMATCHED,
						APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__);
					APL_GOBACK_FAIL
		       }
			
			}

		/*** Override Check***/

		/**No Delivery Check*/
		if  (strcmp(p_sys_dl_deal_struct_h->h_entry,"S")==0 && strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_REPAIR) != 0)	
		{
		
			printf("Inside No Del chk\n");
			printf("The vals are %s %s\n",p_sys_dl_deal_struct_h->h_dlt,p_sys_dl_deal_struct_h->h_instr_code);
			int_l_condexists = 0;
			EXEC SQL SELECT COUNT(*) 
				INTO :int_l_condexists
				FROM MT_NO_DELV 
				/*WHERE  NO_DEL_FROM < :p_sys_dl_deal_struct_h->h_dlt AND  NO_DEL_TO > :p_sys_dl_deal_struct_h->h_dlt;*/
				WHERE
				TO_DATE(:p_sys_dl_deal_struct_h->h_dlt,'DD/MM/YYYY HH:MI:SS') between NO_DEL_FROM  and NO_DEL_TO
				AND
				INSTR_CODE = :p_sys_dl_deal_struct_h->h_instr_code
				AND
				STATUS = 'AA'
				AND
				EXCH_CODE = :p_sys_dl_deal_struct_h->h_exch_code ;	
			IS_ANY_ORA_ERROR
				if (int_l_condexists > 0)
				{
				  printf("Instrument under  no del\n");
              CO_InsertErr(l_debug_info_ptr,
						  ERR_INSTR_NO_DEL,
						  APL_NULL_STRING,
						  APL_NULL_STRING,
						  APL_NULL_STRING,
						  __LINE__,
						   __FILE__);
				  APL_GOBACK_FAIL
				}
		}
		/***/	
	if(strcmp(p_sys_dl_deal_struct_h->h_entry,"S")==0)
	{	
		memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
		memset(chr_l_condid, APL_NULL_CHAR, APL_CONDID_LEN);
		int_l_condexists = 0;
		strcpy(chr_mainfuncarea, "DL_SETL_DT");
		strcpy(chr_l_condid, "ENDDT_LESS_SETDT");

				if ( APL_FAILURE == CO_Chk_CntryEnabled( chr_mainfuncarea, chr_l_condid, 
																&int_l_condexists, l_debug_info_ptr ) )
				{
					APL_GOBACK_FAIL
				}
			printf("\n contry specific val is |%d|\n",int_l_condexists);	
			if(int_l_condexists)
			{
				EXEC SQL SELECT END_DATE INTO :l_end_dt:i_end_dt FROM mt_settl_cal WHERE
					EXCH_CODE = :p_sys_dl_deal_struct_h->h_exch_code AND
					START_DATE = :p_sys_dl_deal_struct_h->h_dlt AND
					SETTL_TYPE = :p_sys_dl_deal_struct_h->h_mkt_type AND /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007*/				
					STATUS = 'AA';
				IS_ANY_ORA_ERROR

				printf("\n end date and setle date are |%s| & |%s|\n",l_end_dt,p_sys_dl_deal_struct_h->h_setldt);
				
				if ( APL_FAILURE  ==   CO_Pro_DateComp(l_end_dt,
				p_sys_dl_deal_struct_h->h_setldt,&int_dt_diff,l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
				printf("\n diff is |%d|\n",int_dt_diff);
					if( int_dt_diff > 0)
					{
							
				 			 printf("\n setl date greater\n");
           					   CO_InsertErr(l_debug_info_ptr,
									  ERR_ENDDT_LESS_SETTDT,
									  APL_NULL_STRING,
									  APL_NULL_STRING,
						 			  APL_NULL_STRING,
									  __LINE__,
								   __FILE__);
					  APL_GOBACK_FAIL
					}
				
			}
	}

	printf("\n Amit:BeforeDEALInsert:Cash_Client=|%s| \n",p_sys_dl_deal_struct_h->h_cash_client);	
	printf("\n p_sys_dl_deal_struct_h->h_origquantity is |%f|",p_sys_dl_deal_struct_h->h_origquantity); 
	printf("\n p_sys_dl_deal_struct_h->h_other_charges is |%ld|",p_sys_dl_deal_struct_h->h_other_charges); 
	printf("\n p_sys_dl_deal_struct_h->h_dpm_trans_ref_no is |%s|",p_sys_dl_deal_struct_h->h_dpm_trans_ref_no); 
	printf("\n p_sys_dl_deal_struct_h->h_csgl_trade_type is |%s|",p_sys_dl_deal_struct_h->h_csgl_trade_type); 
	
	
    	EXEC SQL INSERT INTO dl_deal VALUES (:p_sys_dl_deal_struct_h:l_sys_dl_deal_struct_i);

    	IS_ANY_ORA_ERROR_AND_DUPLICATE(	ERR_DEAL_EXIST, 
														p_sys_dl_deal_struct_h->h_dl_client, 
														p_sys_dl_deal_struct_h->h_indentity_no, 
														APL_NULL_STRING );

      if (APL_FAILURE == CO_Chk_CntryEnabled("TRADE_INQ", "PL_SPA",
                                           &l_pl_spa_chg, l_debug_info_ptr))
      {
         APL_GOBACK_FAIL
      }
      if(l_pl_spa_chg==1)
      {
         EXEC SQL UPDATE DL_DEAL SET INFORMATON=CHR(4) ||'SPA'|| CHR(5) ||  :p_sys_dl_deal_struct_h->h_indentity_no || CHR(4)
                  WHERE CLIENT=:p_sys_dl_deal_struct_h->h_dl_client
                  AND IDENTIY_NO =:p_sys_dl_deal_struct_h->h_indentity_no;
         IS_ANY_ORA_ERROR
      }

		
		if (strcmp(chr_l_h_ccsmsgtyp,APL_NULL_STRING))
		{
            
            if ( strcmp(chr_l_h_ccsmsgtyp,MS_CCS_T3) == 0)
            {
               strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T2);
	
               if (  DL_Mod_CCSPendDL(p_sys_dl_deal_struct_h->h_dl_client,
                              p_sys_dl_deal_struct_h->h_indentity_no,
                              chr_l_h_ccsmsgtyp,
										APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                              l_debug_info_ptr) == APL_FAILURE  )
               {
                     CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_envdatastruct_h);
                     APL_GOBACK_FAIL;
               }
               strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T3);
            }

				if (strcmp(chr_l_h_ccsmsgtyp,MS_CCS_FC)==0)
				{
           		if (  DL_Mod_CCSPendDL(p_sys_dl_deal_struct_h->h_dl_client,
                           		p_sys_dl_deal_struct_h->h_indentity_no,
                           		chr_l_h_ccsmsgtyp,
											p_sys_dl_deal_struct_h->h_fail_cd,
											p_sys_dl_deal_struct_h->h_subfailreas_cd,
											p_sys_dl_deal_struct_h->h_failinfo,
                           		l_debug_info_ptr) == APL_FAILURE  )
           		{
               		CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_envdatastruct_h);
               		APL_GOBACK_FAIL;
           		}
				}
				else
				{
	
           		if (  DL_Mod_CCSPendDL(p_sys_dl_deal_struct_h->h_dl_client,
                           		p_sys_dl_deal_struct_h->h_indentity_no,
                           		chr_l_h_ccsmsgtyp,
											APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                           		l_debug_info_ptr) == APL_FAILURE  )
           		{
               		CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_envdatastruct_h);
               		APL_GOBACK_FAIL;
					}
				}
            
            if ((!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT )) &&
               (!strcmp(p_sys_dl_deal_struct_h->h_deal_status,STATUS_CONF)))
            {
	
               if (  DL_Mod_CCSPendDL(p_sys_dl_deal_struct_h->h_dl_client,
                                 p_sys_dl_deal_struct_h->h_indentity_no,
                                 MS_CCS_RL,
                                 APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                                 l_debug_info_ptr) == APL_FAILURE  )
               {
                     CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_envdatastruct_h);
                     APL_GOBACK_FAIL;
               }
            }
		}
		
		
		

		
		if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT) && (p_sys_dl_deal_struct_h->h_entry[0] == 'S') && 
         (strcmp(p_sys_dl_deal_struct_h->h_deal_status,APL_STATUS_CD)!=0) && (strcmp(p_sys_dl_deal_struct_h->h_deal_status,APL_STATUS_CQ)!=0))
		{
         if (g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y')
            {
					
					EXEC SQL SELECT rowid
								INTO :chr_h_smi_rowid:i_smi_rowid
								FROM DL_DEAL
								WHERE CLIENT=:p_sys_dl_deal_struct_h->h_dl_client
								AND IDENTIY_NO	=	:p_sys_dl_deal_struct_h->h_indentity_no;
	
					IS_ANY_ORA_ERROR

               if (EI_Chk_SMIElg(p_sys_dl_deal_struct_h->h_loccode,
                                           p_sys_dl_deal_struct_h->h_dlt,
                                           p_sys_dl_deal_struct_h->h_classofdl,
                                           p_sys_dl_deal_struct_h->h_instr_code,
                                           p_sys_dl_deal_struct_h->h_locchng_flg,
														 chr_h_smi_rowid,
                                           &int_p_smieligibility_flg,
                                           p_intl_envdatastruct_h,
                                           l_debug_info_ptr
                                           ) == APL_FAILURE)
                  {
                     CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_envdatastruct_h);
                     APL_GOBACK_FAIL;
                  }
        
               if ( (int_p_smieligibility_flg) && ( strcmp(p_sys_dl_deal_struct_h->h_deal_status,STATUS_SETL) || strcmp(p_sys_dl_deal_struct_h->h_deal_status,STATUS_INSTR_SETL) || strcmp(p_sys_dl_deal_struct_h->h_deal_status,STATUS_MON_SETL) ) )
               {
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_dl_client,p_sys_dl_deal_struct_h->h_dl_client);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_indentity_no,p_sys_dl_deal_struct_h->h_indentity_no);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_dealcd,p_sys_dl_deal_struct_h->h_dealcd);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_classofdl,p_sys_dl_deal_struct_h->h_classofdl);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_ex_arena,p_sys_dl_deal_struct_h->h_ex_arena);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_dlt,p_sys_dl_deal_struct_h->h_dlt);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_setldt,p_sys_dl_deal_struct_h->h_setldt);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_loccode,p_sys_dl_deal_struct_h->h_loccode);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_instr_code,p_sys_dl_deal_struct_h->h_instr_code);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_currencycode,p_sys_dl_deal_struct_h->h_currencycode);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_domcpclt_cd,p_sys_dl_deal_struct_h->h_domcpclt_cd);
	if (strcmp(p_sys_dl_deal_struct_h->h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
		{
		if(strcmp(p_sys_dl_deal_struct_h->h_countclt,APL_NULL_STRING)!=0)
      {
         
         strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,p_sys_dl_deal_struct_h->h_countclt,APL_CLIENT_LENGTH-1);
         strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0"); 
       }
		else 
			strcpy(l_ei_smi_pend_deal_struct_ha->h_countclt,p_sys_dl_deal_struct_h->h_clientofcode);
		}
	else
     {
         
		strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,p_sys_dl_deal_struct_h->h_countclt,APL_CLIENT_LENGTH-1);
      strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0");
    }
		
								

						strcpy(chr_l_smi_note1,APL_NULL_STRING);
						
                  if(strcmp(p_sys_dl_deal_struct_h->h_info1,APL_NULL_STRING)==0)
                     strcpy(chr_l_smi_note1,APL_NULL_STRING);
                  else
                     {
							EXEC SQL SELECT NVL(REPLACE(REPLACE(:p_sys_dl_deal_struct_h->h_info1,chr(34),' '),chr(39),' '),NULL)
							INTO :chr_l_smi_note1:i_smi_note1 FROM DUAL ;
						IS_ANY_ORA_ERROR
							}

                  strcpy(l_ei_smi_pend_deal_struct_ha->h_info1,chr_l_smi_note1);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_fail_cd,p_sys_dl_deal_struct_h->h_fail_cd);

                  
                  strcpy(chr_l_smi_failnote,APL_NULL_STRING);
                  EXEC SQL SELECT REPLACE(REPLACE(:p_sys_dl_deal_struct_h->h_failinfo,chr(34),' '),chr(39),' ')
                  INTO :chr_l_smi_failnote:i_smi_failnote FROM DUAL ;
                  IS_ANY_ORA_ERROR
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_failinfo,chr_l_smi_failnote);

                  strcpy(chr_l_smi_verwith,APL_NULL_STRING);
                  EXEC SQL SELECT REPLACE(REPLACE(:p_sys_dl_deal_struct_h->h_verfied_with,chr(34),' '),chr(39),' ')
                  INTO :chr_l_smi_verwith:i_smi_verwith FROM DUAL ;
                  IS_ANY_ORA_ERROR
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_verfied_with,chr_l_smi_verwith);

                  strcpy(l_ei_smi_pend_deal_struct_ha->h_deal_status,p_sys_dl_deal_struct_h->h_deal_status);

                  strcpy(chr_l_smi_clientof,APL_NULL_STRING);
                  EXEC SQL SELECT REPLACE(REPLACE(:p_sys_dl_deal_struct_h->h_clientof,chr(34),' '),chr(39),' ')
                  INTO :chr_l_smi_clientof:i_smi_accountof FROM DUAL ;
                  IS_ANY_ORA_ERROR
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_clientof,chr_l_smi_clientof);

                  strcpy(chr_l_smi_countaccnm,APL_NULL_STRING);
                  EXEC SQL SELECT REPLACE(REPLACE(:p_sys_dl_deal_struct_h->h_countcltnm,chr(34),' '),chr(39),' ')
                  INTO :chr_l_smi_countaccnm:i_smi_countaccnm FROM DUAL ;
                  IS_ANY_ORA_ERROR
						if (strcmp(p_sys_dl_deal_struct_h->h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
						{
						if(strcmp(p_sys_dl_deal_struct_h->h_countclt,APL_NULL_STRING)!=0)
                  	strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_smi_countaccnm);
						else
							strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_smi_clientof);
						}
						else
							strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_smi_countaccnm);
						


                  l_ei_smi_pend_deal_struct_ha->h_qty = p_sys_dl_deal_struct_h->h_qty;
                  l_ei_smi_pend_deal_struct_ha->h_net_setlval = p_sys_dl_deal_struct_h->h_amt;
                  l_ei_smi_pend_deal_struct_ha->h_grs_setlval = p_sys_dl_deal_struct_h->h_brokercomm;
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_trans_status_ind,"A");
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_req_class,"N");
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_reject_reason,APL_NULL_STRING);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_access_stamp,chr_todays_date);
                  l_ei_smi_pend_deal_struct_ha->h_subfailreas_cd = p_sys_dl_deal_struct_h->h_subfailreas_cd;

                  strcpy(chr_l_smi_comm_ref_no,APL_NULL_STRING);
                  EXEC SQL SELECT REPLACE(REPLACE(:p_sys_dl_deal_struct_h->h_comm_indentity_no,chr(34),' '),chr(39),' ')
                  INTO :chr_l_smi_comm_ref_no:i_smi_comm_ref_no FROM DUAL ;
                  IS_ANY_ORA_ERROR
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_commonindentity_no,chr_l_smi_comm_ref_no);

                  strcpy(l_ei_smi_pend_deal_struct_ha->h_maker,p_intl_envdatastruct_h->usr);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_maker_dt,chr_todays_date);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_checker,APL_NULL_STRING);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_checker_dt,APL_NULL_STRING);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_confdate,p_sys_dl_deal_struct_h->h_confdate);

                  EXEC SQL INSERT INTO DL_SMI_PENDTXN 
                        VALUES (:l_ei_smi_pend_deal_struct_ha:l_ei_smi_pend_deal_struct_ia);
                  IS_ANY_ORA_ERROR;
               }
         }
 
		}
		

		if (!strcmp(p_intl_envdatastruct_h->h_mode, RPR_MODE))
		{

                       
		     EXEC SQL SELECT INTER_MED_PERSONNM,CLT_NAME
			   INTO :chr_l_inter_prtynm:i_inter_prtynm, :chr_l_inst_partynm:i_inst_partynm
		     FROM DL_DEALREPAIR WHERE CLIENT=:p_sys_dl_deal_struct_h->h_dl_client AND IDENTIY_NO=:p_sys_dl_deal_struct_h->h_indentity_no;

		      IS_ANY_ORA_ERROR;

		      if (strcmp(chr_l_inst_partynm,p_sys_dl_deal_struct_h->h_instruct_personnm))
		      {
		         strcpy(chr_l_tag,"95Q");
		         printf("****The old chr_value of instructing party name:%s\n", chr_l_inst_partynm);
		         printf("****The chr_new chr_value of instructing party name:%s\n", p_sys_dl_deal_struct_h->h_instruct_personnm);


		         EXEC SQL UPDATE DL_MSGLINKDET SET msg_tag = :chr_l_tag WHERE INDEN_NUM = (SELECT INDEN_NUM FROM DL_MSGLINK
				    WHERE CLIENT = :p_sys_dl_deal_struct_h->h_dl_client AND IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no AND
				  MSG_IN_OUT_IND ='I' AND ROWNUM < 2 ) AND SUBSTR(msg_tag,1,2) <> '97' AND SEQUENCE_NAME='SETPR'
				AND link_val ='INSTR';

		         IS_ANY_ORA_ERROR;
		      }	
		      if (strcmp(chr_l_inter_prtynm,p_sys_dl_deal_struct_h->h_inter_med_personnm))
		      {
	                 strcpy(chr_l_tag,"95Q");

			  EXEC SQL UPDATE DL_MSGLINKDET SET msg_tag = :chr_l_tag WHERE INDEN_NUM = (SELECT INDEN_NUM FROM DL_MSGLINK
				   WHERE CLIENT = :p_sys_dl_deal_struct_h->h_dl_client AND IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no AND
				   MSG_IN_OUT_IND ='I' AND ROWNUM < 2 ) AND SUBSTR(msg_tag,1,2) <> '97' AND SEQUENCE_NAME='SETPR'
				   AND link_val IN(':DEI1',':REI1');

			  IS_ANY_ORA_ERROR;
		  }
		  
			EXEC SQL DELETE DL_DEALREPAIR
			WHERE DL_REP_IDENTNO = :int_p_trdrepseqnum;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
																chr_l_buf,
																"Trd. Repair Table",
																APL_NULL_STRING);

			

         EXEC SQL UPDATE DL_MSGLINK
                  SET CLIENT = :p_sys_dl_deal_struct_h->h_dl_client,
                      IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no,
                      DL_REP_IDENTNO =NULL
                  WHERE DL_REP_IDENTNO = :int_p_trdrepseqnum;

         IS_ANY_ORA_ERROR
			
      	if (APL_FAILURE == CO_Chk_CntryEnabled("TRADE_INQ", "PL_SPA",
                                           &l_pl_spa_chg, l_debug_info_ptr))
      	{
         	APL_GOBACK_FAIL
      	}
      	if(l_pl_spa_chg==1)
      	{
         	EXEC SQL UPDATE DL_DEAL SET INFORMATON=CHR(4) ||'SPA'|| CHR(5) ||  :p_sys_dl_deal_struct_h->h_indentity_no || CHR(4)
            	      WHERE CLIENT=:p_sys_dl_deal_struct_h->h_dl_client
               	   AND IDENTIY_NO =:p_sys_dl_deal_struct_h->h_indentity_no;
         	IS_ANY_ORA_ERROR
      	}
			

         
  		}

		

		

		if ((strlen(p_sys_dl_deal_struct_h->h_instrdate)) &&
			 ((VAL_FREE_DEAL(p_sys_dl_deal_struct_h->h_dealcd[0])) ||
			  (strlen(p_sys_dl_deal_struct_h->h_moneydate))))
		{
			#ifdef EMU_PROCESSING
				memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
				memset(chr_l_condid, APL_NULL_CHAR, APL_CONDID_LEN);
				int_l_condexists = 0;
				strcpy(chr_mainfuncarea, "EMUCONV");
				strcpy(chr_l_condid, "REDENOM_SND_NO_53X");

				if ( APL_FAILURE == CO_Chk_CntryEnabled( chr_mainfuncarea, chr_l_condid, 
																&int_l_condexists, l_debug_info_ptr ) )
				{
					APL_GOBACK_FAIL
				}
			#endif

			if ((!strcmp(p_sys_dl_deal_struct_h->h_classofdl, RTSPROCDEAL)) ||
				 (!strcmp(p_sys_dl_deal_struct_h->h_classofdl, DEALTYPE_CORP_A)) ||
				 ((int_l_condexists > 0) && 
				  (!strcmp(p_sys_dl_deal_struct_h->h_classofdl, NONBILLDEAL)) && 
				  (!strncmp(p_sys_dl_deal_struct_h->h_indentity_no, "REDNOM", 6))))
			{
				strcpy(chr_l_53x, MS_MSGNO_53X);

				EXEC SQL INSERT INTO MS_MSGSTAT VALUES
				(	:p_sys_dl_deal_struct_h->h_indentity_no,
					:chr_l_53x,
					:p_sys_dl_deal_struct_h->h_dl_client,
					:chr_todays_date );

				IS_ANY_ORA_ERROR
			}
         else if (!strcmp(p_intl_envdatastruct_h->processtion,"LOCATION_CHANGE"))
         {
            if (APL_FAILURE == GBDbInsIMSGENT(      MS_MSGNO_53XN01,
                        p_sys_dl_deal_struct_h->h_indentity_no,
                        p_sys_dl_deal_struct_h->h_dl_client,
                        'Y',
                        l_param_str,
                        l_debug_info_ptr    ))
            {
               APL_GOBACK_FAIL
            }
         }

			else if (l_mt_core_sys_params_struct_h.ms_53x_online_eod_ind[0] == MS_SEND53X_ONLINE_IND)
			{
				if (APL_FAILURE == GBDbInsIMSGENT(	MS_MSGNO_53X,
																p_sys_dl_deal_struct_h->h_indentity_no,
																p_sys_dl_deal_struct_h->h_dl_client,
																'Y',
																l_param_str,
																l_debug_info_ptr ))
				{
					APL_GOBACK_FAIL
				}
			}
		}
	}

  	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
  	{

                
		EXEC SQL SELECT INTER_MED_PERSONNM, INSTRUCT_PERSONNM,rowid
			INTO :chr_l_inter_prtynm:i_inter_prtynm, :chr_l_inst_partynm:i_inst_partynm,:chr_h_smi_rowid:i_smi_rowid
		FROM DL_DEAL WHERE CLIENT=:p_sys_dl_deal_struct_h->h_dl_client AND IDENTIY_NO=:p_sys_dl_deal_struct_h->h_indentity_no;


	        IS_ANY_ORA_ERROR;
		

			printf("\n select1 * from ******************************************************************\n");	
		if (g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y') 
	  	{

			if (EI_Chk_SMIElg(p_sys_dl_deal_struct_h->h_loccode,
												 p_sys_dl_deal_struct_h->h_dlt,
												 p_sys_dl_deal_struct_h->h_classofdl,
												 p_sys_dl_deal_struct_h->h_instr_code,
												 APL_NULL_STRING,
												 chr_h_smi_rowid,	
												 &int_p_smieligibility_flg,
												 p_intl_envdatastruct_h,
												 l_debug_info_ptr
												 ) == APL_FAILURE)
			{
				CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_envdatastruct_h);
				APL_GOBACK_FAIL;
			}

			printf("\n select2 * from **|%d|int_p_smieligibility_flg****************************************************************\n",int_p_smieligibility_flg);	

			
		if(int_p_smieligibility_flg)
			{

			printf("\n select3 * from ******************************************************************\n");	

				EXEC SQL SELECT DEAL_STAT INTO :chr_l_trd_sts 
				FROM DL_DEAL WHERE ROWID = RTRIM(:p_ora_rowid); 
				IS_ANY_ORA_ERROR

				EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_pend_count FROM DL_SMI_PENDTXN 
				WHERE CLIENT = :p_sys_dl_deal_struct_h->h_dl_client and IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no ;

				IS_ANY_ORA_ERROR

			  
			  if( strcmp(chr_l_trd_sts,STATUS_UAUTH) && int_l_pend_count &&
               strcmp(chr_l_trd_sts,APL_STATUS_CQ) && strcmp(chr_l_trd_sts,APL_STATUS_CD) )
			  {

				EXEC SQL INSERT INTO DL_SMI_TMP_TRADE (SELECT * FROM DL_DEAL WHERE ROWID=RTRIM(:p_ora_rowid));

				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																	APL_NULL_STRING,
																	APL_NULL_STRING,
																	APL_NULL_STRING);
				strcpy(chr_l_h_trade_status,"SU");
			  }	
			  else
			  {
					strcpy(chr_l_h_trade_status,p_sys_dl_deal_struct_h->h_deal_status);
			  }	

              Alert("rahul is here: %s",p_sys_dl_deal_struct_h->h_csgl_trade_type);	
				
		printf("\nrahul4is |%s|\n",p_sys_dl_deal_struct_h->h_dpm_trans_ref_no);
		printf("\nrahul5 is |%lf|\n",p_sys_dl_deal_struct_h->h_other_charges);
		printf("\nrahul6 is |%s|\n",p_sys_dl_deal_struct_h->h_csgl_trade_type);			  

				EXEC SQL UPDATE dl_deal 
       		SET  deal_date	= :p_sys_dl_deal_struct_h->h_dlt,
        		setl_date 	= :p_sys_dl_deal_struct_h->h_setldt,
			 	COST 		= :p_sys_dl_deal_struct_h->h_pr,
	 			ex_arena 		= :p_sys_dl_deal_struct_h->h_ex_arena,
	 			AMOUNT 		= :p_sys_dl_deal_struct_h->h_amt,
	 			CUSTODYCOMM 		= :p_sys_dl_deal_struct_h->h_custodycomm,
	 			brokercomm 		= :p_sys_dl_deal_struct_h->h_brokercomm,
	 			STX_COMM 		= :p_sys_dl_deal_struct_h->h_stx_comm,
	 			OTH_COMM 		= :p_sys_dl_deal_struct_h->h_oth_comm,
				AMEND_COUNT 	= :p_sys_dl_deal_struct_h->h_amend_count,
	 			QTY 			= :p_sys_dl_deal_struct_h->h_qty,
	 			domestic_cpclt 		= :p_sys_dl_deal_struct_h->h_domcpclt_cd,
	 			SPOTTRD_IND 	= :p_sys_dl_deal_struct_h->h_isspotdl,
	 			ORIG_QTY 		= :p_sys_dl_deal_struct_h->h_qty,
	 			ORIG_AMOUNT 		= :p_sys_dl_deal_struct_h->h_amt,
	 			DEAL_FRM_ORD 	= :p_sys_dl_deal_struct_h->h_dlfromord,
	 			ENTRY 	= :p_sys_dl_deal_struct_h->h_entry,
	 			DOMCP_CUSTODYCLT 	= :p_sys_dl_deal_struct_h->h_domcp_custodyclt,
	 			cp_clt 	= :p_sys_dl_deal_struct_h->h_countclt,
	 			CP_CLTNAME 	= :p_sys_dl_deal_struct_h->h_countcltnm,
	 			clientof 	= :p_sys_dl_deal_struct_h->h_clientof,
	 			FX_REQD 		= :p_sys_dl_deal_struct_h->h_fx_reqd,
	 			lcl_identno 	= :p_sys_dl_deal_struct_h->h_locindentity_no,
	 			INSTRUCT_PERSON 	= :p_sys_dl_deal_struct_h->h_instruct_person,
	 			deal_cd 		= :p_sys_dl_deal_struct_h->h_dealcd,
	 			instr_code 		= :p_sys_dl_deal_struct_h->h_instr_code,
	 			currency_cd 		= :p_sys_dl_deal_struct_h->h_currencycode,
	 			dl_class 	= :p_sys_dl_deal_struct_h->h_classofdl,
	 			ORIG_REFNO 	= :p_sys_dl_deal_struct_h->h_indentity_no,
	 			maker 		= :p_sys_dl_deal_struct_h->h_maker,
	 			maker_dt 		= :p_sys_dl_deal_struct_h->h_maker_dt,
	 			checker 		= :p_sys_dl_deal_struct_h->h_checker,
	 			checker_dt 	= :p_sys_dl_deal_struct_h->h_checker_dt,
	 			DEAL_STAT= :chr_l_h_trade_status,
	 			access_stamp= :p_sys_dl_deal_struct_h->h_access_stamp,
	 			INFO1 		= :p_sys_dl_deal_struct_h->h_info1,
				BRK_NO 	= :p_sys_dl_deal_struct_h->h_brkrno,
	 			location_cd 	= :p_sys_dl_deal_struct_h->h_loccode,
	 			REGINSTR_IND 	= :p_sys_dl_deal_struct_h->h_reginstr_ind,
				PAYLOC_IND 	= :p_sys_dl_deal_struct_h->h_ispymtlocal,
	 			STATUS_POS = :p_sys_dl_deal_struct_h->h_pos_stat,
	 			LR_DL_CLASS 	= :p_sys_dl_deal_struct_h->h_lrdltype,
				gl_client= :p_sys_dl_deal_struct_h->h_cash_client,
				partial_ind_a= :p_sys_dl_deal_struct_h->h_allow_part_s,
				loc_chng_ind = :p_sys_dl_deal_struct_h->h_locchng_flg,
				INSTRUCT_PERSONNM	 = :p_sys_dl_deal_struct_h->h_instruct_personnm,
				CLIENTOF_CD = :p_sys_dl_deal_struct_h->h_clientofcode,
				INTER_MED_PERSON 		= :p_sys_dl_deal_struct_h->h_inter_med_person,
				INTER_MED_PERSONNM 	= :p_sys_dl_deal_struct_h->h_inter_med_personnm,
				fxccy 	= :p_sys_dl_deal_struct_h->h_fxccy,
				SETTLEMENT_NO = :p_sys_dl_deal_struct_h->h_settlement_no:l_sys_dl_deal_struct_i->i_settlement_no,
					MKT_TYPE = :p_sys_dl_deal_struct_h->h_mkt_type:l_sys_dl_deal_struct_i->i_mkt_type,
					CLH_FLG = :p_sys_dl_deal_struct_h->h_clh_flg:l_sys_dl_deal_struct_i->i_clh_flg,
					INTEREST = :p_sys_dl_deal_struct_h->h_interest:l_sys_dl_deal_struct_i->i_interest,
					NET_AMT = :p_sys_dl_deal_struct_h->h_net_amt:l_sys_dl_deal_struct_i->i_net_amt,
					PAYIN_DT = :p_sys_dl_deal_struct_h->h_payin_dt:l_sys_dl_deal_struct_i->i_payin_dt,
					PAYOUT_DT = :p_sys_dl_deal_struct_h->h_payout_dt:l_sys_dl_deal_struct_i->i_payout_dt,
					DEMAT_QTY = :p_sys_dl_deal_struct_h->h_demat_qty:l_sys_dl_deal_struct_i->i_demat_qty,
					CONTRACT_REQ = :p_sys_dl_deal_struct_h->h_contract_req:l_sys_dl_deal_struct_i->i_contract_req,
					EXCUM_FLG = :p_sys_dl_deal_struct_h->h_excum_flg:l_sys_dl_deal_struct_i->i_excum_flg,
					CRN_NO = :p_sys_dl_deal_struct_h->h_crn_no:l_sys_dl_deal_struct_i->i_crn_no,
					INTERFII_FLG = :p_sys_dl_deal_struct_h->h_interfii_flg:l_sys_dl_deal_struct_i->i_interfii_flg,
					PAY_MODE = :p_sys_dl_deal_struct_h->h_pay_mode:l_sys_dl_deal_struct_i->i_pay_mode,
					DL_SECSTATUS = :p_sys_dl_deal_struct_h->h_dl_secstatus:l_sys_dl_deal_struct_i->i_dl_secstatus,
					DL_MNYSTATUS = :p_sys_dl_deal_struct_h->h_dl_mnystatus:l_sys_dl_deal_struct_i->i_dl_mnystatus,
					AVAIL_QTY = :p_sys_dl_deal_struct_h->h_avail_qty:l_sys_dl_deal_struct_i->i_avail_qty,
					ALLOT_QTY = :p_sys_dl_deal_struct_h->h_allot_qty:l_sys_dl_deal_struct_i->i_allot_qty,
					SHORTAGE_QTY = :p_sys_dl_deal_struct_h->h_shortage_qty:l_sys_dl_deal_struct_i->i_shortage_qty,
					CLN_DEPOACC = :p_sys_dl_deal_struct_h->h_cln_depoacc:l_sys_dl_deal_struct_i->i_cln_depoacc,
					PLTOPL_FLG = :p_sys_dl_deal_struct_h->h_pltopl_flg:l_sys_dl_deal_struct_i->i_pltopl_flg,
					ORIG_STATUS = :p_sys_dl_deal_struct_h->h_orig_status:l_sys_dl_deal_struct_i->i_orig_status,
					MAP_FAILCODE = :p_sys_dl_deal_struct_h->h_map_failcode:l_sys_dl_deal_struct_i->i_map_failcode,
					MATCH_FAILCODE = :p_sys_dl_deal_struct_h->h_match_failcode:l_sys_dl_deal_struct_i->i_match_failcode,
					IS_MATCHED = :p_sys_dl_deal_struct_h->h_is_matched:l_sys_dl_deal_struct_i->i_is_matched,
					EXCH_CODE =:p_sys_dl_deal_struct_h->h_exch_code:l_sys_dl_deal_struct_i->i_exch_code,
					CONTRACT_CD =:p_sys_dl_deal_struct_h->h_contract_cd:l_sys_dl_deal_struct_i->i_contract_cd,
					SEBI_REPORTED=:p_sys_dl_deal_struct_h->h_sebi_reported:l_sys_dl_deal_struct_i->i_sebi_reported,
					R_TRANS_CODE =:p_sys_dl_deal_struct_h->h_r_trans_code:l_sys_dl_deal_struct_i->i_r_trans_code,
					R_SETT_CODE =:p_sys_dl_deal_struct_h->h_r_sett_code:l_sys_dl_deal_struct_i->i_r_sett_code,
					R_DELAY =:p_sys_dl_deal_struct_h->h_r_delay:l_sys_dl_deal_struct_i->i_r_delay,
					R_TYPE =:p_sys_dl_deal_struct_h->h_r_type:l_sys_dl_deal_struct_i->i_r_type,
					REPO_DATE =:p_sys_dl_deal_struct_h->h_repo_date:l_sys_dl_deal_struct_i->i_repo_date,
					/*Retro from HDFC by Ekta for Interoperability Starts */
					TRD_EXCH =:p_sys_dl_deal_struct_h->h_trd_exch:l_sys_dl_deal_struct_i->i_trd_exch,
					TRD_SETL_NO =:p_sys_dl_deal_struct_h->h_trd_setl_no:l_sys_dl_deal_struct_i->i_trd_setl_no,
					TRD_MKT_TYPE =:p_sys_dl_deal_struct_h->h_trd_mkt_type:l_sys_dl_deal_struct_i->i_trd_mkt_type,
					/*Retro from HDFC by Ekta for Interoperability Ends */
					STAMP_DUTY 		= :p_sys_dl_deal_struct_h->h_stamp_duty, /* SNOW- CS0046502 Added by Shradha for Stamp Duty Enh. */
					DPM_TRANS_REF_NO = :p_sys_dl_deal_struct_h->h_dpm_trans_ref_no:l_sys_dl_deal_struct_i->i_dpm_trans_ref_no,
					OTHER_CHARGES = :p_sys_dl_deal_struct_h->h_other_charges:l_sys_dl_deal_struct_i->i_other_charges,
					CSGL_TRADE_TYPE = :p_sys_dl_deal_struct_h->h_csgl_trade_type:l_sys_dl_deal_struct_i->i_csgl_trade_type

     			WHERE rowid = :p_ora_rowid;
				
				
						IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																	APL_NULL_STRING,
																	APL_NULL_STRING,
																	APL_NULL_STRING);

			}
		else
			{
			APL_IF_DEBUG
			{
				if (!strlen(p_ora_rowid)) 
				{	
					CO_ProcMonitor(APL_OUT_FILE, "RowID Not int_found !!!", NULL, p_intl_envdatastruct_h);
					APL_GOBACK_FAIL;
				}
			}
	
		

		if (!strcmp(p_intl_envdatastruct_h->subprocess, CUST_CHNG_IND))
		{
			p_sys_dl_deal_struct_h->h_amend_count++;
		}
        Alert("Inside rahul is here 2");

		printf("\nrahul1is |%s|\n",p_sys_dl_deal_struct_h->h_dpm_trans_ref_no);
		printf("\nrahul2 is |%lf|\n",p_sys_dl_deal_struct_h->h_other_charges);
		printf("\nrahul3 is |%s|\n",p_sys_dl_deal_struct_h->h_csgl_trade_type);
		EXEC SQL UPDATE dl_deal 
       SET  deal_date 			= :p_sys_dl_deal_struct_h->h_dlt,
         	setl_date 	= :p_sys_dl_deal_struct_h->h_setldt,
			 	COST 		= :p_sys_dl_deal_struct_h->h_pr,
	 			ex_arena 		= :p_sys_dl_deal_struct_h->h_ex_arena,
	 			AMOUNT 		= :p_sys_dl_deal_struct_h->h_amt,
	 			CUSTODYCOMM 		= :p_sys_dl_deal_struct_h->h_custodycomm,
	 			brokercomm 		= :p_sys_dl_deal_struct_h->h_brokercomm,
	 			STX_COMM 		= :p_sys_dl_deal_struct_h->h_stx_comm,
	 			OTH_COMM 		= :p_sys_dl_deal_struct_h->h_oth_comm,
				AMEND_COUNT 	= :p_sys_dl_deal_struct_h->h_amend_count,
	 			QTY 			= :p_sys_dl_deal_struct_h->h_qty,
	 			domestic_cpclt 		= :p_sys_dl_deal_struct_h->h_domcpclt_cd,
	 			SPOTTRD_IND 	= :p_sys_dl_deal_struct_h->h_isspotdl,
	 			ORIG_QTY 		= :p_sys_dl_deal_struct_h->h_qty,
	 			ORIG_AMOUNT 		= :p_sys_dl_deal_struct_h->h_amt,
	 			DEAL_FRM_ORD 	= :p_sys_dl_deal_struct_h->h_dlfromord,
	 			ENTRY 	= :p_sys_dl_deal_struct_h->h_entry,
	 			DOMCP_CUSTODYCLT 	= :p_sys_dl_deal_struct_h->h_domcp_custodyclt,
	 			cp_clt 	= :p_sys_dl_deal_struct_h->h_countclt,
	 			CP_CLTNAME 	= :p_sys_dl_deal_struct_h->h_countcltnm,
	 			clientof 	= :p_sys_dl_deal_struct_h->h_clientof,
	 			FX_REQD 		= :p_sys_dl_deal_struct_h->h_fx_reqd,
	 			lcl_identno 	= :p_sys_dl_deal_struct_h->h_locindentity_no,
	 			INSTRUCT_PERSON 	= :p_sys_dl_deal_struct_h->h_instruct_person,
	 			deal_cd 		= :p_sys_dl_deal_struct_h->h_dealcd,
	 			instr_code 		= :p_sys_dl_deal_struct_h->h_instr_code,
	 			currency_cd 		= :p_sys_dl_deal_struct_h->h_currencycode,
	 			dl_class 	= :p_sys_dl_deal_struct_h->h_classofdl,
	 			ORIG_REFNO 	= :p_sys_dl_deal_struct_h->h_indentity_no,
	 			maker 		= :p_sys_dl_deal_struct_h->h_maker,
	 			maker_dt 		= :p_sys_dl_deal_struct_h->h_maker_dt,
	 			checker 		= :p_sys_dl_deal_struct_h->h_checker,
	 			checker_dt 	= :p_sys_dl_deal_struct_h->h_checker_dt,
	 			DEAL_STAT= :p_sys_dl_deal_struct_h->h_deal_status,
	 			access_stamp= :p_sys_dl_deal_struct_h->h_access_stamp,
	 			INFO1 		= :p_sys_dl_deal_struct_h->h_info1,
				BRK_NO 	= :p_sys_dl_deal_struct_h->h_brkrno,
	 			location_cd 	= :p_sys_dl_deal_struct_h->h_loccode,
	 			REGINSTR_IND 	= :p_sys_dl_deal_struct_h->h_reginstr_ind,
				PAYLOC_IND 	= :p_sys_dl_deal_struct_h->h_ispymtlocal,
	 			STATUS_POS = :p_sys_dl_deal_struct_h->h_pos_stat,
	 			LR_DL_CLASS 	= :p_sys_dl_deal_struct_h->h_lrdltype,
				gl_client= :p_sys_dl_deal_struct_h->h_cash_client,
				partial_ind_a	= :p_sys_dl_deal_struct_h->h_allow_part_s,
				loc_chng_ind	= :p_sys_dl_deal_struct_h->h_locchng_flg,
            INSTRUCT_PERSONNM  	= :p_sys_dl_deal_struct_h->h_instruct_personnm,
            CLIENTOF_CD 	= :p_sys_dl_deal_struct_h->h_clientofcode,
				INTER_MED_PERSON 		= :p_sys_dl_deal_struct_h->h_inter_med_person,
				INTER_MED_PERSONNM 	= :p_sys_dl_deal_struct_h->h_inter_med_personnm,
				fxccy 		= :p_sys_dl_deal_struct_h->h_fxccy,
				SETTLEMENT_NO = :p_sys_dl_deal_struct_h->h_settlement_no:l_sys_dl_deal_struct_i->i_settlement_no,
				MKT_TYPE = :p_sys_dl_deal_struct_h->h_mkt_type:l_sys_dl_deal_struct_i->i_mkt_type,
				CLH_FLG = :p_sys_dl_deal_struct_h->h_clh_flg:l_sys_dl_deal_struct_i->i_clh_flg,
				INTEREST = :p_sys_dl_deal_struct_h->h_interest:l_sys_dl_deal_struct_i->i_interest,
				NET_AMT = :p_sys_dl_deal_struct_h->h_net_amt:l_sys_dl_deal_struct_i->i_net_amt,
				PAYIN_DT = :p_sys_dl_deal_struct_h->h_payin_dt:l_sys_dl_deal_struct_i->i_payin_dt,
				PAYOUT_DT = :p_sys_dl_deal_struct_h->h_payout_dt:l_sys_dl_deal_struct_i->i_payout_dt,
				DEMAT_QTY = :p_sys_dl_deal_struct_h->h_demat_qty:l_sys_dl_deal_struct_i->i_demat_qty,
				CONTRACT_REQ = :p_sys_dl_deal_struct_h->h_contract_req:l_sys_dl_deal_struct_i->i_contract_req,
				EXCUM_FLG = :p_sys_dl_deal_struct_h->h_excum_flg:l_sys_dl_deal_struct_i->i_excum_flg,
				CRN_NO = :p_sys_dl_deal_struct_h->h_crn_no:l_sys_dl_deal_struct_i->i_crn_no,
				INTERFII_FLG = :p_sys_dl_deal_struct_h->h_interfii_flg:l_sys_dl_deal_struct_i->i_interfii_flg,
				PAY_MODE = :p_sys_dl_deal_struct_h->h_pay_mode:l_sys_dl_deal_struct_i->i_pay_mode,
				DL_SECSTATUS = :p_sys_dl_deal_struct_h->h_dl_secstatus:l_sys_dl_deal_struct_i->i_dl_secstatus,
				DL_MNYSTATUS = :p_sys_dl_deal_struct_h->h_dl_mnystatus:l_sys_dl_deal_struct_i->i_dl_mnystatus,
				AVAIL_QTY = :p_sys_dl_deal_struct_h->h_avail_qty:l_sys_dl_deal_struct_i->i_avail_qty,
				ALLOT_QTY = :p_sys_dl_deal_struct_h->h_allot_qty:l_sys_dl_deal_struct_i->i_allot_qty,
				SHORTAGE_QTY = :p_sys_dl_deal_struct_h->h_shortage_qty:l_sys_dl_deal_struct_i->i_shortage_qty,
				CLN_DEPOACC = :p_sys_dl_deal_struct_h->h_cln_depoacc:l_sys_dl_deal_struct_i->i_cln_depoacc,
				PLTOPL_FLG = :p_sys_dl_deal_struct_h->h_pltopl_flg:l_sys_dl_deal_struct_i->i_pltopl_flg,
				ORIG_STATUS = :p_sys_dl_deal_struct_h->h_orig_status:l_sys_dl_deal_struct_i->i_orig_status,
				MAP_FAILCODE = :p_sys_dl_deal_struct_h->h_map_failcode:l_sys_dl_deal_struct_i->i_map_failcode,
				MATCH_FAILCODE = :p_sys_dl_deal_struct_h->h_match_failcode:l_sys_dl_deal_struct_i->i_match_failcode,
				IS_MATCHED = :p_sys_dl_deal_struct_h->h_is_matched:l_sys_dl_deal_struct_i->i_is_matched,
				EXCH_CODE =:p_sys_dl_deal_struct_h->h_exch_code:l_sys_dl_deal_struct_i->i_exch_code,
				CONTRACT_CD =:p_sys_dl_deal_struct_h->h_contract_cd:l_sys_dl_deal_struct_i->i_contract_cd,
				SEBI_REPORTED=:p_sys_dl_deal_struct_h->h_sebi_reported:l_sys_dl_deal_struct_i->i_sebi_reported,
				R_TRANS_CODE =:p_sys_dl_deal_struct_h->h_r_trans_code:l_sys_dl_deal_struct_i->i_r_trans_code,
				R_SETT_CODE =:p_sys_dl_deal_struct_h->h_r_sett_code:l_sys_dl_deal_struct_i->i_r_sett_code,
				R_DELAY =:p_sys_dl_deal_struct_h->h_r_delay:l_sys_dl_deal_struct_i->i_r_delay,
				R_TYPE =:p_sys_dl_deal_struct_h->h_r_type:l_sys_dl_deal_struct_i->i_r_type,
				REPO_DATE =:p_sys_dl_deal_struct_h->h_repo_date:l_sys_dl_deal_struct_i->i_repo_date,
					/*Retro from HDFC by Ekta for Interoperability Starts */
					TRD_EXCH =:p_sys_dl_deal_struct_h->h_trd_exch:l_sys_dl_deal_struct_i->i_trd_exch,
					TRD_SETL_NO =:p_sys_dl_deal_struct_h->h_trd_setl_no:l_sys_dl_deal_struct_i->i_trd_setl_no,
					TRD_MKT_TYPE =:p_sys_dl_deal_struct_h->h_trd_mkt_type:l_sys_dl_deal_struct_i->i_trd_mkt_type,
					/*Retro from HDFC by Ekta for Interoperability Ends */
					STAMP_DUTY 		= :p_sys_dl_deal_struct_h->h_stamp_duty, /* SNOW- CS0046502 Added by Shradha for Stamp Duty Enh. */
					DPM_TRANS_REF_NO = :p_sys_dl_deal_struct_h->h_dpm_trans_ref_no:l_sys_dl_deal_struct_i->i_dpm_trans_ref_no,
					OTHER_CHARGES = :p_sys_dl_deal_struct_h->h_other_charges:l_sys_dl_deal_struct_i->i_other_charges,
					CSGL_TRADE_TYPE = :p_sys_dl_deal_struct_h->h_csgl_trade_type:l_sys_dl_deal_struct_i->i_csgl_trade_type

     	WHERE rowid = :p_ora_rowid;
 
		
 
    	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF, 
														APL_NULL_STRING, 
														APL_NULL_STRING, 
														APL_NULL_STRING );			
			}
		}
		else
		{
			APL_IF_DEBUG
			{
				if (!strlen(p_ora_rowid)) 
				{	
					CO_ProcMonitor(APL_OUT_FILE, "RowID Not int_found !!!", NULL, p_intl_envdatastruct_h);
					APL_GOBACK_FAIL;
				}
			}
	
		

		if (!strcmp(p_intl_envdatastruct_h->subprocess, CUST_CHNG_IND))
		{
			p_sys_dl_deal_struct_h->h_amend_count++;
		}
		printf("\n Now inside DL_Mod_DL ..... updating trade table...\n");
		printf("\nquantity is |%lf|\n",p_sys_dl_deal_struct_h->h_qty);
		printf("\nrahul7is |%s|\n",p_sys_dl_deal_struct_h->h_dpm_trans_ref_no);
		printf("\nrahul8 is |%lf|\n",p_sys_dl_deal_struct_h->h_other_charges);
		printf("\nrahul9 is |%s|\n",p_sys_dl_deal_struct_h->h_csgl_trade_type);
		printf("\n THATS IT...\n");
		EXEC SQL UPDATE dl_deal 
       SET  deal_date 			= :p_sys_dl_deal_struct_h->h_dlt,
         	setl_date 	= :p_sys_dl_deal_struct_h->h_setldt,
			 	COST 		= :p_sys_dl_deal_struct_h->h_pr,
	 			ex_arena 		= :p_sys_dl_deal_struct_h->h_ex_arena,
	 			AMOUNT 		= :p_sys_dl_deal_struct_h->h_amt,
	 			CUSTODYCOMM 		= :p_sys_dl_deal_struct_h->h_custodycomm,
	 			brokercomm 		= :p_sys_dl_deal_struct_h->h_brokercomm,
	 			STX_COMM 		= :p_sys_dl_deal_struct_h->h_stx_comm,
	 			OTH_COMM 		= :p_sys_dl_deal_struct_h->h_oth_comm,
				AMEND_COUNT 	= :p_sys_dl_deal_struct_h->h_amend_count,
	 			QTY 			= :p_sys_dl_deal_struct_h->h_qty,
	 			domestic_cpclt 		= :p_sys_dl_deal_struct_h->h_domcpclt_cd,
	 			SPOTTRD_IND 	= :p_sys_dl_deal_struct_h->h_isspotdl,
	 			ORIG_QTY 		= :p_sys_dl_deal_struct_h->h_qty,
	 			ORIG_AMOUNT 		= :p_sys_dl_deal_struct_h->h_amt,
	 			DEAL_FRM_ORD 	= :p_sys_dl_deal_struct_h->h_dlfromord,
	 			ENTRY 	= :p_sys_dl_deal_struct_h->h_entry,
	 			DOMCP_CUSTODYCLT 	= :p_sys_dl_deal_struct_h->h_domcp_custodyclt,
	 			cp_clt 	= :p_sys_dl_deal_struct_h->h_countclt,
	 			CP_CLTNAME 	= :p_sys_dl_deal_struct_h->h_countcltnm,
	 			clientof 	= :p_sys_dl_deal_struct_h->h_clientof,
	 			FX_REQD 		= :p_sys_dl_deal_struct_h->h_fx_reqd,
	 			lcl_identno 	= :p_sys_dl_deal_struct_h->h_locindentity_no,
	 			INSTRUCT_PERSON 	= :p_sys_dl_deal_struct_h->h_instruct_person,
	 			deal_cd 		= :p_sys_dl_deal_struct_h->h_dealcd,
	 			instr_code 		= :p_sys_dl_deal_struct_h->h_instr_code,
	 			currency_cd 		= :p_sys_dl_deal_struct_h->h_currencycode,
	 			dl_class 	= :p_sys_dl_deal_struct_h->h_classofdl,
	 			ORIG_REFNO 	= :p_sys_dl_deal_struct_h->h_indentity_no,
	 			maker 		= :p_sys_dl_deal_struct_h->h_maker,
	 			maker_dt 		= :p_sys_dl_deal_struct_h->h_maker_dt,
	 			checker 		= :p_sys_dl_deal_struct_h->h_checker,
	 			checker_dt 	= :p_sys_dl_deal_struct_h->h_checker_dt,
	 			DEAL_STAT= :p_sys_dl_deal_struct_h->h_deal_status,
	 			access_stamp= :p_sys_dl_deal_struct_h->h_access_stamp,
	 			INFO1 		= :p_sys_dl_deal_struct_h->h_info1,
				BRK_NO 	= :p_sys_dl_deal_struct_h->h_brkrno,
	 			location_cd 	= :p_sys_dl_deal_struct_h->h_loccode,
	 			REGINSTR_IND 	= :p_sys_dl_deal_struct_h->h_reginstr_ind,
				PAYLOC_IND 	= :p_sys_dl_deal_struct_h->h_ispymtlocal,
	 			STATUS_POS = :p_sys_dl_deal_struct_h->h_pos_stat,
	 			LR_DL_CLASS 	= :p_sys_dl_deal_struct_h->h_lrdltype,
				gl_client= :p_sys_dl_deal_struct_h->h_cash_client,
				partial_ind_a= :p_sys_dl_deal_struct_h->h_allow_part_s,
				loc_chng_ind= :p_sys_dl_deal_struct_h->h_locchng_flg,
            INSTRUCT_PERSONNM  = :p_sys_dl_deal_struct_h->h_instruct_personnm,
            CLIENTOF_CD = :p_sys_dl_deal_struct_h->h_clientofcode,
            INTER_MED_PERSON = :p_sys_dl_deal_struct_h->h_inter_med_person,
            INTER_MED_PERSONNM = :p_sys_dl_deal_struct_h->h_inter_med_personnm,
            fxccy = :p_sys_dl_deal_struct_h->h_fxccy,
            
            INFORMATON = :p_sys_dl_deal_struct_h->h_misinfo,
				SETTLEMENT_NO = :p_sys_dl_deal_struct_h->h_settlement_no:l_sys_dl_deal_struct_i->i_settlement_no,
				MKT_TYPE = :p_sys_dl_deal_struct_h->h_mkt_type:l_sys_dl_deal_struct_i->i_mkt_type,
				CLH_FLG = :p_sys_dl_deal_struct_h->h_clh_flg:l_sys_dl_deal_struct_i->i_clh_flg,
				INTEREST = :p_sys_dl_deal_struct_h->h_interest:l_sys_dl_deal_struct_i->i_interest,
				NET_AMT = :p_sys_dl_deal_struct_h->h_net_amt:l_sys_dl_deal_struct_i->i_net_amt,
				PAYIN_DT = :p_sys_dl_deal_struct_h->h_payin_dt:l_sys_dl_deal_struct_i->i_payin_dt,
				PAYOUT_DT = :p_sys_dl_deal_struct_h->h_payout_dt:l_sys_dl_deal_struct_i->i_payout_dt,
				DEMAT_QTY = :p_sys_dl_deal_struct_h->h_demat_qty:l_sys_dl_deal_struct_i->i_demat_qty,
				CONTRACT_REQ = :p_sys_dl_deal_struct_h->h_contract_req:l_sys_dl_deal_struct_i->i_contract_req,
				EXCUM_FLG = :p_sys_dl_deal_struct_h->h_excum_flg:l_sys_dl_deal_struct_i->i_excum_flg,
				CRN_NO = :p_sys_dl_deal_struct_h->h_crn_no:l_sys_dl_deal_struct_i->i_crn_no,
				INTERFII_FLG = :p_sys_dl_deal_struct_h->h_interfii_flg:l_sys_dl_deal_struct_i->i_interfii_flg,
				PAY_MODE = :p_sys_dl_deal_struct_h->h_pay_mode:l_sys_dl_deal_struct_i->i_pay_mode,
				DL_SECSTATUS = :p_sys_dl_deal_struct_h->h_dl_secstatus:l_sys_dl_deal_struct_i->i_dl_secstatus,
				DL_MNYSTATUS = :p_sys_dl_deal_struct_h->h_dl_mnystatus:l_sys_dl_deal_struct_i->i_dl_mnystatus,
				AVAIL_QTY = :p_sys_dl_deal_struct_h->h_avail_qty:l_sys_dl_deal_struct_i->i_avail_qty,
				ALLOT_QTY = :p_sys_dl_deal_struct_h->h_allot_qty:l_sys_dl_deal_struct_i->i_allot_qty,
				SHORTAGE_QTY = :p_sys_dl_deal_struct_h->h_shortage_qty:l_sys_dl_deal_struct_i->i_shortage_qty,
				CLN_DEPOACC = :p_sys_dl_deal_struct_h->h_cln_depoacc:l_sys_dl_deal_struct_i->i_cln_depoacc,
				PLTOPL_FLG = :p_sys_dl_deal_struct_h->h_pltopl_flg:l_sys_dl_deal_struct_i->i_pltopl_flg,
				ORIG_STATUS = :p_sys_dl_deal_struct_h->h_orig_status:l_sys_dl_deal_struct_i->i_orig_status,
				MAP_FAILCODE = :p_sys_dl_deal_struct_h->h_map_failcode:l_sys_dl_deal_struct_i->i_map_failcode,
				MATCH_FAILCODE = :p_sys_dl_deal_struct_h->h_match_failcode:l_sys_dl_deal_struct_i->i_match_failcode,
				IS_MATCHED = :p_sys_dl_deal_struct_h->h_is_matched:l_sys_dl_deal_struct_i->i_is_matched,
				EXCH_CODE =:p_sys_dl_deal_struct_h->h_exch_code:l_sys_dl_deal_struct_i->i_exch_code,
				CONTRACT_CD =:p_sys_dl_deal_struct_h->h_contract_cd:l_sys_dl_deal_struct_i->i_contract_cd,
				SEBI_REPORTED=:p_sys_dl_deal_struct_h->h_sebi_reported:l_sys_dl_deal_struct_i->i_sebi_reported,
				R_TRANS_CODE =:p_sys_dl_deal_struct_h->h_r_trans_code:l_sys_dl_deal_struct_i->i_r_trans_code,
				R_SETT_CODE =:p_sys_dl_deal_struct_h->h_r_sett_code:l_sys_dl_deal_struct_i->i_r_sett_code,
				R_DELAY =:p_sys_dl_deal_struct_h->h_r_delay:l_sys_dl_deal_struct_i->i_r_delay,
				R_TYPE =:p_sys_dl_deal_struct_h->h_r_type:l_sys_dl_deal_struct_i->i_r_type,
				REPO_DATE =:p_sys_dl_deal_struct_h->h_repo_date:l_sys_dl_deal_struct_i->i_repo_date,
				/*Retro from HDFC by Ekta for Interoperability Starts */
					TRD_EXCH =:p_sys_dl_deal_struct_h->h_trd_exch:l_sys_dl_deal_struct_i->i_trd_exch,
					TRD_SETL_NO =:p_sys_dl_deal_struct_h->h_trd_setl_no:l_sys_dl_deal_struct_i->i_trd_setl_no,
					TRD_MKT_TYPE =:p_sys_dl_deal_struct_h->h_trd_mkt_type:l_sys_dl_deal_struct_i->i_trd_mkt_type,
					/*Retro from HDFC by Ekta for Interoperability Ends */
					STAMP_DUTY 		= :p_sys_dl_deal_struct_h->h_stamp_duty,/* SNOW- CS0046502 Added by Shradha for Stamp Duty Enh. */
					DPM_TRANS_REF_NO = :p_sys_dl_deal_struct_h->h_dpm_trans_ref_no:l_sys_dl_deal_struct_i->i_dpm_trans_ref_no,
					OTHER_CHARGES = :p_sys_dl_deal_struct_h->h_other_charges:l_sys_dl_deal_struct_i->i_other_charges,
					CSGL_TRADE_TYPE = :p_sys_dl_deal_struct_h->h_csgl_trade_type:l_sys_dl_deal_struct_i->i_csgl_trade_type
			WHERE rowid = :p_ora_rowid;
				/**New flds added on 12-04-6 **/	
 		
 
    	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF, 
														APL_NULL_STRING, 
														APL_NULL_STRING, 
														APL_NULL_STRING );			
  	}
	 
	 if (strcmp(chr_l_inst_partynm,p_sys_dl_deal_struct_h->h_instruct_personnm))
 	 {
            strcpy(chr_l_tag,"95Q");
            printf("****The old chr_value of instructing party name:%s\n", chr_l_inst_partynm);
	    printf("****The chr_new chr_value of instructing party name:%s\n", p_sys_dl_deal_struct_h->h_instruct_personnm);

	   EXEC SQL UPDATE DL_MSGLINKDET SET msg_tag = :chr_l_tag WHERE INDEN_NUM = (SELECT INDEN_NUM FROM DL_MSGLINK
                                           WHERE CLIENT = :p_sys_dl_deal_struct_h->h_dl_client AND IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no AND
                                                 MSG_IN_OUT_IND ='I' AND ROWNUM < 2 ) AND SUBSTR(msg_tag,1,2) <> '97' AND SEQUENCE_NAME='SETPR'
						AND link_val ='INSTR';
														 
           IS_ANY_ORA_ERROR;
   	 }
        if (strcmp(chr_l_inter_prtynm,p_sys_dl_deal_struct_h->h_inter_med_personnm))
	{
		 strcpy(chr_l_tag,"95Q");

			
           
            printf("****rahuls:%s\n", chr_l_inter_prtynm);
	    printf("****rahuls:%s\n", p_sys_dl_deal_struct_h->h_inter_med_personnm);
            printf("****The old chr_value of instructing party name:%s\n", chr_l_inter_prtynm);
	    printf("****The chr_new chr_value of instructing party name:%s\n", p_sys_dl_deal_struct_h->h_inter_med_personnm);

            EXEC SQL UPDATE DL_MSGLINKDET SET msg_tag = :chr_l_tag WHERE INDEN_NUM = (SELECT INDEN_NUM FROM DL_MSGLINK
				WHERE CLIENT = :p_sys_dl_deal_struct_h->h_dl_client AND IDENTIY_NO = :p_sys_dl_deal_struct_h->h_indentity_no AND
				MSG_IN_OUT_IND ='I' AND ROWNUM < 2 ) AND SUBSTR(msg_tag,1,2) <> '97' AND SEQUENCE_NAME='SETPR'
				AND link_val IN(':DEI1',':REI1');
           IS_ANY_ORA_ERROR;
	  }
          

	   

            memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
            memset(chr_l_condid, APL_NULL_CHAR, APL_CONDID_LEN);
            int_l_condexists = 0;
            strcpy(chr_mainfuncarea, "TRD_MAINT");
            strcpy(chr_l_condid, "TRANSMITDT_CHECK");

            if ( APL_FAILURE == CO_Chk_CntryEnabled( chr_mainfuncarea, chr_l_condid,
                                                &int_l_condexists, l_debug_info_ptr ) )
            {
               APL_GOBACK_FAIL
            }
		
			 	if(int_l_condexists!=0)	
				{
					if((strcmp(p_sys_dl_deal_struct_h->h_dealcd,"2")!=0) && (strcmp(p_sys_dl_deal_struct_h->h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd)!=0))
					{
						EXEC SQL UPDATE DL_DEAL SET TRANS_DATE=NULL WHERE ROWID=:p_ora_rowid;
						IS_ANY_ORA_ERROR
					}
				}
	

				if(strcmp(p_sys_dl_deal_struct_h->h_deal_status,APL_STS_AUTH)==0)
				{
	
			               if (  DL_Mod_CCSPendDL(p_sys_dl_deal_struct_h->h_dl_client,
                              p_sys_dl_deal_struct_h->h_indentity_no,
                              MS_CCS_T4,
                              APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                              l_debug_info_ptr) == APL_FAILURE  )
               {
                     CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_envdatastruct_h);
                     APL_GOBACK_FAIL;
               }
				}
	}
  	APL_GOBACK_SUCCESS
	
}

  	RETURN_SUCCESS :
  	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE, "Exiting Function DL_Mod_DL successfully", NULL, p_intl_envdatastruct_h);
		return(APL_SUCCESS);
  	}
  	RETURN_FAILURE :
  	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE, "Exiting Function DL_Mod_DL with errors", NULL, p_intl_envdatastruct_h);
		return(APL_FAILURE);
  	}

}



int DL_Chk_GLAcc(	char *chr_p_client,
							char *p_csh_client,
							char *p_ccy_code,
							char *p_dealcd,
							int  *p_exists,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{

   char chr_h_core[APL_MAINFUNCAREA_LEN]   = APL_NULL_STRING;
   char chr_l_main_funcarea[APL_MAINFUNCAREA_LEN] = APL_NULL_STRING;
   char chr_l_subfunc[APL_MAINFUNCAREA_LEN]   = APL_NULL_STRING;
   char chr_l_nondefflg[APL_MAINFUNCAREA_LEN] = APL_NULL_STRING;
   char chr_l_defflg[APL_MAINFUNCAREA_LEN] = APL_NULL_STRING;
   char chr_h_defccyflg[APL_MAINFUNCAREA_LEN]=APL_NULL_STRING;
   char chr_h_nondefccyflg[APL_MAINFUNCAREA_LEN]=APL_NULL_STRING;
	char chr_h_dumdefflg[APL_MAINFUNCAREA_LEN]=APL_NULL_STRING;

	struct sqlca sqlca;

	int	int_l_h_exists		= 0;
	/* int	int_l_condexists	= 0; OPT:AIX */
	short	int_l_condexists	= 0;
	short	l_i_exists		= 0;
      
	EXEC SQL VAR chr_h_defccyflg IS STRING;
   EXEC SQL VAR chr_h_nondefccyflg IS STRING;
   EXEC SQL VAR chr_h_dumdefflg IS STRING;



	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE	:my_ctx_local;
	#endif

	if ( APL_FAILURE == CO_Chk_CntryEnabled("SETUP_MULT_CCY","MULTI_CCY", &int_l_condexists, l_debug_info_ptr) ) 	
   {
   	APL_GOBACK_FAIL
   }
     
   if ((int_l_condexists) && (!strcmp(p_dealcd,APL_DEAL_DVP) || !strcmp(p_dealcd,APL_DEAL_RVP) || !strcmp(p_dealcd,APL_DEAL_CD) || !strcmp(p_dealcd,APL_DEAL_CR) || !strcmp(p_dealcd,APL_DEAL_DCD) || !strcmp(p_dealcd,APL_DEAL_RCR)))
   {
		strcpy(chr_h_core,SETTLEMENT);

      memset(chr_h_defccyflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_h_nondefccyflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      memset(chr_l_main_funcarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_subfunc,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_defflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      strcpy(chr_l_main_funcarea,"DEF_CASHACC_FLG");
      strcpy(chr_l_subfunc,chr_h_core);

      if (APL_FAILURE == CO_Rtv_FldVal(chr_l_main_funcarea,chr_l_subfunc,chr_l_defflg,l_debug_info_ptr))
      {
      	APL_GOBACK_FAIL
      }

      memset(chr_l_main_funcarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_subfunc,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_nondefflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      strcpy(chr_l_main_funcarea,"NONDEF_CASHACC_FLG");
      strcpy(chr_l_subfunc,chr_h_core);

      if (APL_FAILURE == CO_Rtv_FldVal(chr_l_main_funcarea,chr_l_subfunc,chr_l_nondefflg,l_debug_info_ptr))
      {
      	APL_GOBACK_FAIL
      }

      strcpy(chr_h_defccyflg,chr_l_defflg);
      strcpy(chr_h_nondefccyflg,chr_l_nondefflg);
		
		EXEC SQL SELECT NVL(COUNT(*),0)
      INTO :int_l_h_exists:l_i_exists
      FROM DL_CASHCLT
      WHERE CLIENT = RTRIM(:chr_p_client)
      AND   GL_ACCOUNT = RTRIM(:p_csh_client)
      AND   DEFAULT_CCY IN (:chr_h_defccyflg,:chr_h_nondefccyflg)
 		AND   CURRENCY_CD = :p_ccy_code;
 
      IS_ANY_ORA_ERROR

      if ((sqlca.sqlcode==1403) || (l_i_exists==-1))
      {
      	int_l_h_exists = 0;
      }

	}
	else
	{																																	
	
		EXEC SQL SELECT NVL(COUNT(*),0)
   	INTO :int_l_h_exists:l_i_exists
   	FROM MT_CLIENT
   	WHERE CLN_CODE = RTRIM(:chr_p_client)
   	AND   CLN_GL_ACCOUNT = RTRIM(:p_csh_client);

		IS_ANY_ORA_ERROR

		if ((sqlca.sqlcode == 0) && (int_l_h_exists==0))
		{
		
      	strcpy(chr_h_core,SETTLEMENT);

      	memset(chr_h_defccyflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      	memset(chr_h_nondefccyflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      	memset(chr_l_main_funcarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      	memset(chr_l_subfunc,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      	memset(chr_l_defflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      	strcpy(chr_l_main_funcarea,"DEF_CASHACC_FLG");
      	strcpy(chr_l_subfunc,chr_h_core);

      	if (APL_FAILURE == CO_Rtv_FldVal(chr_l_main_funcarea,chr_l_subfunc,chr_l_defflg,l_debug_info_ptr))
      	{
				APL_GOBACK_FAIL
      	}

      	memset(chr_l_main_funcarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      	memset(chr_l_subfunc,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      	memset(chr_l_nondefflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      	strcpy(chr_l_main_funcarea,"NONDEF_CASHACC_FLG");
      	strcpy(chr_l_subfunc,chr_h_core);

      	if (APL_FAILURE == CO_Rtv_FldVal(chr_l_main_funcarea,chr_l_subfunc,chr_l_nondefflg,l_debug_info_ptr))
      	{
				APL_GOBACK_FAIL
      	}

      	strcpy(chr_h_defccyflg,chr_l_defflg);
      	strcpy(chr_h_nondefccyflg,chr_l_nondefflg);

			EXEC SQL SELECT NVL(COUNT(*),0)
			INTO :int_l_h_exists:l_i_exists
			FROM DL_CASHCLT
			WHERE CLIENT = RTRIM(:chr_p_client)
			AND	GL_ACCOUNT = RTRIM(:p_csh_client)
			AND   DEFAULT_CCY IN (:chr_h_defccyflg,:chr_h_nondefccyflg);
	
		

			IS_ANY_ORA_ERROR

			if ((sqlca.sqlcode==1403) || (l_i_exists==-1))
			{
				int_l_h_exists = 0;
			}
		}
	}
		
	if ((sqlca.sqlcode == 0) && (int_l_h_exists==0))
	{
		if ( APL_FAILURE == CO_Chk_CntryEnabled("REMOTE_TRADE","DUMMY_ACCOUNT", &int_l_condexists, l_debug_info_ptr) )
		{
			APL_GOBACK_FAIL
		}
		
		if (int_l_condexists)
		{
			memset(chr_h_dumdefflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

			strcpy(chr_l_main_funcarea,"DEF_CASHACC_FLG");
			strcpy(chr_l_subfunc,GR_DUMMYCLI);

			if (APL_FAILURE == CO_Rtv_FldVal(chr_l_main_funcarea,chr_l_subfunc,chr_h_dumdefflg,l_debug_info_ptr))
			{
		 		APL_GOBACK_FAIL
		 	}

			if ( APL_FAILURE == CO_Chk_CntryEnabled("SETUP_MULT_CCY","MULTI_CCY", &int_l_condexists, l_debug_info_ptr) )    
   		{
      		APL_GOBACK_FAIL
   		}

   		if (int_l_condexists)
   		{
				EXEC SQL SELECT NVL(COUNT(*),0)
         	INTO :int_l_h_exists:l_i_exists
            FROM DL_CASHCLT
            WHERE CLIENT = RTRIM(:chr_p_client)
            AND   GL_ACCOUNT = RTRIM(:p_csh_client)
            AND   DEFAULT_CCY = :chr_h_dumdefflg 
				AND 	CURRENCY_CD = :p_ccy_code;
			}
			else
			{
				EXEC SQL SELECT NVL(COUNT(*),0)
				INTO :int_l_h_exists:l_i_exists
				FROM DL_CASHCLT
				WHERE CLIENT = RTRIM(:chr_p_client)
				AND	GL_ACCOUNT = RTRIM(:p_csh_client)
				AND   DEFAULT_CCY = :chr_h_dumdefflg ; 
			}
				IS_ANY_ORA_ERROR
		
			if ((sqlca.sqlcode==1403) || (l_i_exists==-1))
			{
				int_l_h_exists = 0;
			}

		}
	}
			
	*p_exists = int_l_h_exists;

	APL_GOBACK_SUCCESS

  	RETURN_SUCCESS :
  	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE, "Exiting Function DL_Chk_GLAcc successfully", NULL, NULL);
		return(APL_SUCCESS);
  	}
  	RETURN_FAILURE :
  	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE, "Exiting Function DL_Chk_GLAcc with errors", NULL, NULL);
		return(APL_FAILURE);
  	}
}


int DL_Proc_SetlSeqNoRst( char *p_deal_client,
                        char *p_deal_ident,
                        char *p_deal_rowid,
                        double *p_dbl_settle_seq_no,
                        char p_action,
                        INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
                        DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 
        PRO_GSEQNUM_STRUCT_H        l_pro_gseq_struct_h;
        short    l_lrflag    = 0;
        long  l_lng_lr_seq_num=0;
 

   
   

   #ifdef APL_THREADS
   APL_SET_CONTEXT
   EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

   
   EXEC SQL VAR l_pro_gseq_struct_h.sequencename        IS STRING;

  
  
        memset(&l_pro_gseq_struct_h,NULL,sizeof(PRO_GSEQNUM_STRUCT_H)); 

    l_lrflag=0;
    (*p_dbl_settle_seq_no) = 0.0;
    if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_SETTLEMENT", "LR_SETTL_ORDER", &l_lrflag, l_debug_info_ptr))
     {
      APL_GOBACK_FAIL
     }
    if (l_lrflag)
     {
      strcpy(l_pro_gseq_struct_h.sequencename, "SETTLEMENT_SEQ_NO");
      strcpy(l_pro_gseq_struct_h.seq_attrb_a, APL_NULL_STRING);
      strcpy(l_pro_gseq_struct_h.seq_attrb_b, APL_NULL_STRING);
      strcpy(l_pro_gseq_struct_h.seq_attrb_c, APL_NULL_STRING);

      l_pro_gseq_struct_h.seq_stepby = 1;
      l_pro_gseq_struct_h.seq_start = 1;
      l_pro_gseq_struct_h.last_seqnum = 999999999;
      l_pro_gseq_struct_h.recycle_ind = RECYCLE_YES;
      l_lng_lr_seq_num = CO_RtvNxtSeqNum(&l_pro_gseq_struct_h,l_debug_info_ptr);  
      if (l_lng_lr_seq_num == APL_FAILURE)
         APL_GOBACK_FAIL
      (*p_dbl_settle_seq_no) = (double) l_lng_lr_seq_num;

      sqlca.sqlcode =0;

   
      if ( p_action == 'U')
      {
         if (strlen(p_deal_rowid) != 0)
         {
            EXEC SQL UPDATE DL_DEAL SET
               REG_MSG_QTY = :(*p_dbl_settle_seq_no)
               WHERE ROWID=:p_deal_rowid;
         }
         else
         {
            EXEC SQL UPDATE DL_DEAL SET
               REG_MSG_QTY = :(*p_dbl_settle_seq_no)
               WHERE CLIENT= :p_deal_client
                  AND IDENTIY_NO= :p_deal_ident;

         }
      }

      IS_ANY_ORA_ERROR;

     }

   APL_GOBACK_SUCCESS

RETURN_SUCCESS:
    CO_ProcMonitor(APL_OUT_FILE, "Exiting Function DL_Proc_SetlSeqNoRst with success", NULL, NULL);
    return (APL_SUCCESS);

RETURN_FAILURE:
    CO_ProcMonitor(APL_OUT_FILE, "Exiting Function DL_Proc_SetlSeqNoRst with errors", NULL, NULL);
    return (APL_FAILURE);

}

/* Function added by shyam for RBI Monitory to check or monitory on NRI/FII client  on 28/11/11 */
int chkRestrictForPurchase(char* p_cln_code, char* p_instr_code, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
    struct  sqlca   sqlca;
    sqlca.sqlcode              =   0;
    
    char l_def_cln_type1[3]    =   APL_NULL_STRING;
    char l_def_cln_type2[3]    =   APL_NULL_STRING;
	//Added by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
	char l_def_cln_type3[3]    =   APL_NULL_STRING;
	//Added by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
    char l_cln_type [3]        =   APL_NULL_STRING;
    char chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
    memset( chr_l_buf, NULL, BUFFER_LEN );
    
    memset(l_def_cln_type1, APL_NULL_CHAR, sizeof(l_def_cln_type1));
    memset(l_def_cln_type2, APL_NULL_CHAR, sizeof(l_def_cln_type2));
	//Added by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
	memset(l_def_cln_type3, APL_NULL_CHAR, sizeof(l_def_cln_type3));
	//Added by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
    memset(l_cln_type, APL_NULL_CHAR, sizeof(l_cln_type));
    
    APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function chkRestrictForPurchase", NULL, NULL);
	}
    
    printf("\n shyam:: p_instr_code<%s>, p_cln_code<%s>", p_instr_code, p_cln_code);
    
	/*Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
    EXEC SQL SELECT NVL(SUBSTR(def_cln_type,1,1), '0'), NVL(SUBSTR(def_cln_type,3,1), '0')INTO :l_def_cln_type1, :l_def_cln_type2 FROM mt_rbi_monitory WHERE instr_code = :p_instr_code;*/

	EXEC SQL SELECT NVL(SUBSTR( DEF_CLN_TYPE||',', 1, INSTR(DEF_CLN_TYPE,',')-1),'0') ,  //First cln_type
	NVL(SUBSTR( DEF_CLN_TYPE||',,', INSTR( DEF_CLN_TYPE||',,', ',') +1,INSTR( DEF_CLN_TYPE||',,', ',', 1, 2 )-INSTR(DEF_CLN_TYPE||',,',',')-1 ),'0'), //Second cln_type
	NVL(RTRIM(SUBSTR( DEF_CLN_TYPE||',,', INSTR( DEF_CLN_TYPE||',,',',',1,2)+1),','),'0')   //Third cln_type
	INTO :l_def_cln_type1, :l_def_cln_type2, :l_def_cln_type3 FROM MT_RBI_MONITORY WHERE INSTR_CODE = :p_instr_code;

	/*Commented and Rewritten by Prateek on 11-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END*/
    IS_ANY_ORA_ERROR
        
    EXEC SQL SELECT cln_type INTO :l_cln_type FROM mt_client
            WHERE cln_code = :p_cln_code;
    IS_ANY_ORA_ERROR
    
    //printf("\n shyam::l_def_cln_type1<%s>, l_def_cln_type1<%s>, l_cln_type<%s>", l_def_cln_type1, l_def_cln_type2, l_cln_type);
	printf("\n Client Types are ::l_def_cln_type1<%s>, l_def_cln_type2<%s>, l_def_cln_type3<%s>, l_cln_type<%s>",l_def_cln_type1,l_def_cln_type2,l_def_cln_type3,l_cln_type);
    if(strcmp(l_def_cln_type1,l_cln_type) == 0 )
    {
        APL_GOBACK_FAIL
    }
    else if(strcmp(l_def_cln_type2,l_cln_type) == 0 )
    {
        APL_GOBACK_FAIL
    }
	else if(strcmp(l_def_cln_type3,l_cln_type) == 0 )
    {
        APL_GOBACK_FAIL
    }
        
    APL_GOBACK_SUCCESS
    
    RETURN_SUCCESS:
        CO_ProcMonitor(APL_OUT_FILE, "Exiting Function chkRestrictForPurchase with success", NULL, NULL);
        return (APL_SUCCESS);

    RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE, "Exiting Function chkRestrictForPurchase with Failure", NULL, NULL);
        return (APL_FAILURE);
}

int chkAllowForSellCsgl(SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
int int_l_posntype_count = 0;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
struct sqlca sqlca;
  
	 APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function chkAllowForSellCsgl", NULL, NULL);
	}
	
	Alert("RAHUL :INSTR_CODE |%s|",p_sys_dl_deal_struct_h->h_instr_code);
	
	 EXEC SQL SELECT NVL(count(*),0) INTO :int_l_posntype_count FROM MT_INSTRUMENT
	 WHERE INSTR_CODE = :p_sys_dl_deal_struct_h->h_instr_code 
	 AND INSTR_SUB_TYPE IN (SELECT MAP_VAL FROM PRO_SGENSTAT WHERE map_type ='CSGL_INSTR_TYPE'); 
	IS_ANY_ORA_ERROR
	 
	 Alert("int_l_posntype_count|%d|",int_l_posntype_count);
	 
	 if(int_l_posntype_count > 0)	
	     return 1;	
	else
		return 0;
	
	RETURN_SUCCESS:
{
	return APL_SUCCESS;
}
RETURN_FAILURE:
{
	return APL_FAILURE;
}
}

/*********************************** NEW COADING FOR DL_BIFDET **************************************/




/*********************************** NEW COADING FOR DL_BIFDET **************************************/

/*  T0 - Denish - 12Sep24 - - start */
int MT_validateT0Settlement(SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h,
                            INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
                            char *l_settl_ty,							
                            DEBUG_INFO_STRUCT_H **l_debug_info_ptr)  
{
	
	
struct sqlca sqlca;

int l_cnt_exc_det_bse=0;
int l_cnt_exc_det_nse=0;
        Alert("Inside MT_validateT0Settlement ...");
      	Alert("l_settl_ty value: %s\n",l_settl_ty);
		Alert("Exarena: %s\n",p_sys_dl_deal_struct_h->h_ex_arena);
		Alert("CLH Flg: %s\n",p_sys_dl_deal_struct_h->h_clh_flg);
		Alert("Trade Exchange: %s\n",p_sys_dl_deal_struct_h->h_trd_exch);
       if ((!strlen(l_settl_ty)) && (strcmp(p_sys_dl_deal_struct_h->h_ex_arena, "1") == 0) && (strcmp(p_sys_dl_deal_struct_h->h_clh_flg, "C") == 0 || strcmp(p_sys_dl_deal_struct_h->h_clh_flg, "D") == 0)) 
    {
                
                Alert("checkig 1 err");
                 CO_InsertErr(l_debug_info_ptr,
                                  ERR_SETL_TY_BLK,
                                  APL_NULL_STRING,
                                  APL_NULL_STRING,
                                  APL_NULL_STRING,
                                  __LINE__,
                                  __FILE__);
                                  APL_GOBACK_FAIL
    }  	
		
	 if (strcmp(p_sys_dl_deal_struct_h->h_trd_exch, APL_NULL_STRING) != 0 && strcmp(p_sys_dl_deal_struct_h->h_trd_exch, "NSE") == 0)
	 {
			Alert("checkig 2 NSE Condition :");		
			EXEC SQL SELECT NVL(COUNT(*),0) INTO :l_cnt_exc_det_nse
			FROM MT_INSTR_EXCH_DET 
			WHERE 
		    INSTR_CODE = :p_sys_dl_deal_struct_h->h_instr_code 
			AND MKT_TYPE in('49','50') 
			AND (:p_sys_dl_deal_struct_h->h_trd_exch = 'NSE' 
			AND EXCH_CODE = :p_sys_dl_deal_struct_h->h_trd_exch ) ;
			
            IS_ANY_ORA_ERROR
			Alert("checkig 2 NSE Condition sqlca.sqlcode %d\n",sqlca.sqlcode);
			
			if((strcmp(l_settl_ty,"T0")==0) && l_cnt_exc_det_nse==0)
			{
				Alert("checkig 2 err");
				 CO_InsertErr(l_debug_info_ptr,
                                  ERR_NT_INS_EXCH,
                                  APL_NULL_STRING,
                                  APL_NULL_STRING,
                                  APL_NULL_STRING,
                                  __LINE__,
                                  __FILE__);
								  APL_GOBACK_FAIL
				
			}
			
	   }	
		  
	   if (strcmp(p_sys_dl_deal_struct_h->h_trd_exch, APL_NULL_STRING) != 0 && strcmp(p_sys_dl_deal_struct_h->h_trd_exch, "BSE") == 0)
	  {
			Alert("checkig 3 BSE Condition :");	
			EXEC SQL SELECT NVL(COUNT(*),0) INTO :l_cnt_exc_det_bse
			FROM MT_INSTR_EXCH_DET 
			WHERE 
		    INSTR_CODE = :p_sys_dl_deal_struct_h->h_instr_code 
			AND SCRIP_CODE IS NOT NULL 
			AND MKT_TYPE in('41','17') 
			AND (:p_sys_dl_deal_struct_h->h_trd_exch = 'BSE' 
			AND EXCH_CODE = :p_sys_dl_deal_struct_h->h_trd_exch ) ;
		    
			IS_ANY_ORA_ERROR
			Alert("checkig 3 BSE sqlca.sqlcode %d\n",sqlca.sqlcode);
			
			if((strcmp(l_settl_ty,"T0")==0) && l_cnt_exc_det_bse==0)
			{
				Alert("checkig 3 err");
				 CO_InsertErr(l_debug_info_ptr,
                                  ERR_NT_INS_EXCH,
                                  APL_NULL_STRING,
                                  APL_NULL_STRING,
                                  APL_NULL_STRING,
                                  __LINE__,
                                  __FILE__);
								  APL_GOBACK_FAIL
				
			}
			
	 }
         
       
	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Successfully out From- MT_validateT0Settlement\n",NULL,NULL);
		return APL_SUCCESS;
	}
	

	RETURN_FAILURE:
	{
		CO_ProcMonitor(APL_OUT_FILE,"Unsuccessfully out From- MT_validateT0Settlement\n",NULL,NULL);
		return APL_FAILURE;
	}	

}
/*  T0 - Denish - 12Sep24 - - End */



