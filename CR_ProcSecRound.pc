/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to 
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or 
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 * Module Name         :	
 *
 * File Name           :
 *
 * Description         :	
 *
 *           
 *
 *            Version Control Block
 *
 * Date        Version		Author               Description
 * ---------   --------	 ---------------  ---------------------------
 *					
 *
 *********************************************************************/

   
   
   
   
   
   
   
   
   
   
   
   




#include "CR_Common.h"
#include "CR_Header_A.h"
EXEC SQL INCLUDE SQLCA.H;



int CR_Proc_SecQtyRound (double chr_p_val, char *p_securitycd, double *int_p_retval, DEBUG_INFO_STRUCT_H **l_debug_info_ptr ) 
{
	char 	chr_l_tiposec[TYPEOF_SEC_LEN]=APL_NULL_STRING;
	char 	chr_l_h_dec_precision[2]=APL_NULL_STRING;
	short	l_i_dec_precision = 0;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"Entered processtion CR_Proc_SecQtyRound\n");
	#endif

	EXEC SQL VAR chr_l_h_dec_precision IS STRING;

	CR_Rtv_SecChrVal(p_securitycd,"tiposec",chr_l_tiposec,l_debug_info_ptr);

	if ( !strcmp(chr_l_tiposec,SEC_TYPE_FMT) || !strcmp(chr_l_tiposec,"MMI") )
	{
		EXEC SQL SELECT FIELD_VAL INTO :chr_l_h_dec_precision:l_i_dec_precision
		FROM PRO_GSSPLVAL
		WHERE MAIN_FUN = 'QUANTITY_DEC_LEN'
		AND SUB_PROCESS = 'DEC_FOR_BONDS'
		AND NATION = :g_mt_commonsys_params_struct_h.nation_code;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
		{
			CO_Round(chr_p_val,l_mt_core_sys_params_struct_h.qty_dec_len,int_p_retval);
		}
		else
		{
			CO_Round(chr_p_val,atoi(chr_l_h_dec_precision),int_p_retval);
		}
	}	
	else if ( !strcmp(chr_l_tiposec,TYPOF_SEC_SHS) || !strcmp(chr_l_tiposec,DEALCD_RTS) || !strcmp(chr_l_tiposec,"WTS") || !strcmp(chr_l_tiposec,SEC_TYPE_BOND) )
	{
		EXEC SQL SELECT FIELD_VAL INTO :chr_l_h_dec_precision:l_i_dec_precision
		FROM PRO_GSSPLVAL
		WHERE MAIN_FUN = 'QUANTITY_DEC_LEN'
		AND SUB_PROCESS = 'DEC_FOR_EQUITIES'
		AND NATION = :g_mt_commonsys_params_struct_h.nation_code;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
		{
			CO_Round(chr_p_val,l_mt_core_sys_params_struct_h.qty_dec_len,int_p_retval);
		}
		else
		{
			CO_Round(chr_p_val,atoi(chr_l_h_dec_precision),int_p_retval);
		}
	}
	else
	{
		CO_Round(chr_p_val,l_mt_core_sys_params_struct_h.qty_dec_len,int_p_retval);
	}

	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"l_h_dec_precision=%s\n",chr_l_h_dec_precision);
	#endif

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"Exiting From CR_Proc_SecQtyRound successfully\n");
	#endif
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"Exiting From CR_Proc_SecQtyRound with errors\n");
	#endif
		return(APL_FAILURE);
	}
}



int CR_Proc_SecQtyRoundToStr (double chr_p_val, int    p_totlen, char *p_securitycd, char *int_p_retval, DEBUG_INFO_STRUCT_H **l_debug_info_ptr ) 
{
	char 	chr_l_tiposec[TYPEOF_SEC_LEN]=APL_NULL_STRING;
	char 	chr_l_h_dec_precision[2]=APL_NULL_STRING;
	short	l_i_dec_precision = 0;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"Entered processtion CR_Proc_SecQtyRoundToStr\n");
	#endif

	EXEC SQL VAR chr_l_h_dec_precision IS STRING;

	CR_Rtv_SecChrVal(p_securitycd,"tiposec",chr_l_tiposec,l_debug_info_ptr);

	if ( !strcmp(chr_l_tiposec,SEC_TYPE_FMT) || !strcmp(chr_l_tiposec,"MMI") )
	{
		EXEC SQL SELECT FIELD_VAL INTO :chr_l_h_dec_precision:l_i_dec_precision
		FROM PRO_GSSPLVAL
		WHERE MAIN_FUN = 'QUANTITY_DEC_LEN'
		AND SUB_PROCESS = 'DEC_FOR_BONDS'
		AND NATION = :g_mt_commonsys_params_struct_h.nation_code;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
		{
			CO_ToStr(chr_p_val,p_totlen,l_mt_core_sys_params_struct_h.qty_dec_len,int_p_retval);
		}
		else
		{
			CO_ToStr(chr_p_val,p_totlen,atoi(chr_l_h_dec_precision),int_p_retval);
		}
	}	

	else if ( !strcmp(chr_l_tiposec,TYPOF_SEC_SHS) || !strcmp(chr_l_tiposec,DEALCD_RTS) || !strcmp(chr_l_tiposec,"WTS") || !strcmp(chr_l_tiposec,SEC_TYPE_BOND) )
	{
		EXEC SQL SELECT FIELD_VAL INTO :chr_l_h_dec_precision:l_i_dec_precision
		FROM PRO_GSSPLVAL
		WHERE MAIN_FUN = 'QUANTITY_DEC_LEN'
		AND SUB_PROCESS = 'DEC_FOR_EQUITIES'
		AND NATION = :g_mt_commonsys_params_struct_h.nation_code;
		

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
		{
			CO_ToStr(chr_p_val,p_totlen,l_mt_core_sys_params_struct_h.qty_dec_len,int_p_retval);
		}
		else
		{
			CO_ToStr(chr_p_val,p_totlen,atoi(chr_l_h_dec_precision),int_p_retval);
		}
	}	
	else
	{
			CO_ToStr(chr_p_val,p_totlen,l_mt_core_sys_params_struct_h.qty_dec_len,int_p_retval);
	}
	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"l_h_dec_precision=%d\n",chr_l_h_dec_precision);
	#endif

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"Exiting From CR_Proc_SecQtyRound successfully\n");
	#endif
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
	#ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"Exiting From CR_Proc_SecQtyRound with errors\n");
	#endif
		return(APL_FAILURE);
	}
}
