








#include "Intellect_Common.h"
#include "CO_HostStructdef.h"
#include "DL_Interface.h" 
#include<stdlib.h>
#define FEED_LINERR_LENGTH 500
#define HDAT_DOMCPAC "0000000041"
#define HDAT_LOCNCODE "BOG"
#define MS_MSGNO_534 "534"
#define DLCD_BUY "BUY"
#define SELL_DLCODE "SELL"

char chr_g_rtgs_domcpac[21];
int	int_g_lot_multiplier;

EXEC SQL INCLUDE SQLCA.H;
int main(int argc,char **argv) //AIX Migration Changes
{
   DEBUG_INFO_STRUCT_H *l_debug_info_ptr = (DEBUG_INFO_STRUCT_H *) NULL;
   INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;
   	/* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
   FILE *l_logfile, *l_finifile, *l_mat_rept_file,*l_unmat_rept_file, *l_mis_rept_file;
    #else
    FILE *l_logfile = APL_OUT_FILE;
    FILE *l_finifile = APL_OUT_FILE;
    FILE *l_mat_rept_file = APL_OUT_FILE;
    FILE *l_unmat_rept_file = APL_OUT_FILE;
    FILE *l_mis_rept_file = APL_OUT_FILE;
    #endif
    #ifdef OS_LINUX
    l_logfile = APL_OUT_FILE;
    l_finifile = APL_OUT_FILE;
    l_mat_rept_file = APL_OUT_FILE;
    l_unmat_rept_file = APL_OUT_FILE;
    l_mis_rept_file = APL_OUT_FILE;
    #endif
   /* Added by kotubabu for Linux Migration-End*/
	  char l_temp_processing_status[51] = APL_NULL_STRING;
   char **temp;
   int int_num=0;
   char chr_l_hoff_file[PATH_LENGTH]=APL_NULL_STRING;
   char chr_l_inifile[PATH_LENGTH] = APL_NULL_STRING;
   struct sqlca sqlca;
   char chr_l_sys_date[11] = APL_NULL_STRING;
   int int_retval=0;

   char chr_uname[APL_USERID_LEN] = APL_NULL_STRING;
   char chr_custody_id_b[APL_USERID_LEN] = APL_NULL_STRING;
   char chr_passwd[APL_USERID_LEN] = APL_NULL_STRING;

   EXEC SQL BEGIN DECLARE SECTION;
   int int_l_count =0;

   EXEC SQL VAR chr_l_sys_date         IS STRING;
   EXEC SQL VAR chr_uname IS STRING;
   EXEC SQL VAR chr_passwd IS STRING;
   EXEC SQL END DECLARE SECTION;

   memset(&l_intl_env_data_h, NULL, sizeof(INTL_ENV_DATA_STRUCT_H));
   strcpy(l_intl_env_data_h.usr, argv[3]);
   strcpy(l_intl_env_data_h.h_mode, argv[4]);
   strcpy(l_intl_env_data_h.processtion, argv[5]);
   strcpy(l_intl_env_data_h.auth_req, argv[6]);
   strcpy(l_intl_env_data_h.subprocess, argv[7]);
   strcpy(l_intl_env_data_h.h_process, argv[8]);



   strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
   strcat(chr_l_inifile,"intl_sun.cfg");
   if ( ( l_finifile=fopen(chr_l_inifile,"r") ) == NULL)
   {
	APL_GOBACK_FAIL
   }
   sqlca.sqlcode=0;
   APL_FETCH_DB_LOGIN_DETAILS(l_finifile, chr_custody_id_b, chr_uname, chr_passwd, APL_OUT_FILE, &l_debug_info_ptr)
   IS_ANY_ORA_ERROR
   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;
  
  IS_ANY_ORA_ERROR

    
 
			        

    if (APL_FAILURE == CO_Rtv_RptFileName( "hd",
				APL_LOGFILE_DESC,
			        100,
					  argv[5],
			        argv,
			        &l_logfile,
			        &l_debug_info_ptr ))	
   {
	APL_GOBACK_FAIL
   }
    if (APL_FAILURE == CO_Rtv_RptFileName( "HD",
				"HDAT Matching Report",
			        100,
					  argv[5],
			        argv,
			        &l_mat_rept_file,
			        &l_debug_info_ptr ))	
   {
	APL_GOBACK_FAIL
   }

	fprintf(l_mat_rept_file,"\n");
	fprintf(l_mat_rept_file,"              Details of HDAT Trade Processed (Matching)     \n");
	fprintf(l_mat_rept_file,"\n");
	fprintf(l_mat_rept_file,"\n");
   fprintf(l_mat_rept_file,"Account           Reference           Trade Dt    Settle Dt   Qty(lots)  BOG Ref    ISIN      Trcode   Cash Amt      CounterParty        Results\n");
   fprintf(l_mat_rept_file,"-------------------------------------------------------------------------------------------------------------------------------------------------\n");

  sleep(1);

    if (APL_FAILURE == CO_Rtv_RptFileName( "HD",
				"HDAT UnMatch Report",
			        100,
					  argv[5],
			        argv,
			        &l_unmat_rept_file,
			        &l_debug_info_ptr ))	
   {
	APL_GOBACK_FAIL
   }

	fprintf(l_unmat_rept_file,"\n");
	fprintf(l_unmat_rept_file,"              Details of HDAT Trade Processed (UnMatched)    \n");
	fprintf(l_unmat_rept_file,"\n");
	fprintf(l_unmat_rept_file,"\n");
   fprintf(l_unmat_rept_file,"Account           Reference           Trade Dt    Settle Dt   Qty(lots)  BOG Ref    ISIN      Trcode   Cash Amt      CounterParty        Results\n");
   fprintf(l_unmat_rept_file,"-------------------------------------------------------------------------------------------------------------------------------------------------\n");

	sleep(1);
    if (APL_FAILURE == CO_Rtv_RptFileName( "HD",
				"HDAT Missing Report",
			        100,
					  argv[5],
			        argv,
			        &l_mis_rept_file,
			        &l_debug_info_ptr ))	
   {
	APL_GOBACK_FAIL
   }

	fprintf(l_mis_rept_file,"\n");
	fprintf(l_mis_rept_file,"              Details of HDAT Trade Processed (Missing)    \n");
	fprintf(l_mis_rept_file,"\n");
	fprintf(l_mis_rept_file,"\n");
   fprintf(l_mis_rept_file,"Account           Reference           Trade Dt    Settle Dt   Qty(lots)  BOG Ref    ISIN      Trcode   Cash Amt      CounterParty        Results\n");
   fprintf(l_mis_rept_file,"-------------------------------------------------------------------------------------------------------------------------------------------------\n");

   if ( APL_FAILURE == CO_ReadToken(l_finifile,
				    "INTL_UPL_PATH",
				    chr_l_hoff_file,
				    &l_debug_info_ptr ))
    {
	fprintf(l_logfile,"\nReturning unsuccessfully from CO_ReadToken\n");
	APL_GOBACK_FAIL
    }


   if (APL_FAILURE == CO_SplitStr( argv[9],
				    '|',
				    &int_num,
				    &temp ))
   {
	fprintf(l_logfile,"Returns unsuccessfully from CO_SplitStr\n");
   }
   if (int_num==0)
   {
	fprintf(l_logfile,"\n Zero argments \n");
   }

     EXEC SQL SELECT PROCESSING_STATUS into :l_temp_processing_status
     FROM SYS_BATCHPROC
     WHERE PROCESS_NAME=:argv[0]
     AND   PROC_INIT=:argv[1]
     AND   STARTDATE=:argv[2]
     AND   STATUS='started'
     FOR UPDATE OF PROCESSING_STATUS,STATUS; 

   if(APL_ZERO_RESULT_SET)
   {
      CO_ProcMonitor(l_logfile,"E:No entry in batch_in_proc\n",NULL,NULL);
      APL_GOBACK_FAIL
   }

   if (APL_FAILURE == CO_RtvSysParams(&l_debug_info_ptr))
   {
   	CO_ProcMonitor(l_logfile, "Error In Getting System Parameters", NULL, NULL);
   	CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
   	APL_GOBACK_FAIL
  	} 

   EXEC SQL SELECT to_char(SYS_DATE,'DD/MM/YYYY') 
		into :chr_l_sys_date FROM PRO_SYS_DATE;

   strcat(chr_l_hoff_file,temp[1]);
	fprintf(l_logfile,"HDAT File Name : %s\n",chr_l_hoff_file);
	fprintf(l_logfile,"System Date : %s\n",chr_l_sys_date);

   CO_ProcMonitor(l_logfile,"Start Processing\n",&l_debug_info_ptr,&l_intl_env_data_h);

 	
 	int_retval=ReadRecord(l_mat_rept_file,l_unmat_rept_file,l_mis_rept_file,&l_intl_env_data_h,chr_l_hoff_file,chr_l_sys_date,l_logfile,&l_debug_info_ptr);


   CO_ProcMonitor(l_logfile,"Finished Processing\n",&l_debug_info_ptr,&l_intl_env_data_h);
  RETURN_SUCCESS : 
	  EXEC SQL UPDATE SYS_BATCHPROC
	  SET  status = 'completed'
	  WHERE PROCESS_NAME=:argv[0]
	  AND   PROC_INIT=:argv[1]
	  AND   STARTDATE=:argv[2]
	  AND   STATUS='started';

  	  EXEC SQL COMMIT WORK RELEASE;			   
	  fprintf(l_logfile,"Successfully Exiting the program HDAT_Uplaod\n"); 
	  CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
	  CO_Proc_RptClose(l_mat_rept_file, &l_debug_info_ptr);
	  CO_Proc_RptClose(l_unmat_rept_file, &l_debug_info_ptr);
	  CO_Proc_RptClose(l_mis_rept_file, &l_debug_info_ptr);
	  fclose(l_finifile);
	  exit(APL_SUCCESS);

  RETURN_FAILURE :
  	  EXEC SQL COMMIT WORK RELEASE;			   
	  fprintf(l_logfile,"Unsuccessfully Exiting the program HDAT_Upload\n"); 
	  CO_Proc_RptClose(l_logfile, &l_debug_info_ptr);
	  CO_Proc_RptClose(l_mat_rept_file, &l_debug_info_ptr);
	  CO_Proc_RptClose(l_unmat_rept_file, &l_debug_info_ptr);
	  CO_Proc_RptClose(l_mis_rept_file, &l_debug_info_ptr);
	  
	  fclose(l_finifile);
	  exit(APL_FAILURE);
}

 


int ReadRecord(FILE *p_matrpt_file,FILE *p_unmatrpt_file,FILE *p_misrpt_file,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,char *p_hoff_file,char *chr_p_sys_date,FILE *p_logfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
FILE *l_fhoff_file;
FILE *l_logfile;
char *chr_l_hoff_file;
char chr_tempbuff_a[500] = APL_NULL_STRING;
char chr_l_sys_date[11]=APL_NULL_STRING;
char chr_l_hdat_line[500] = APL_NULL_STRING;
int int_retval=0;
int int_l_rec = 1;
char chr_l_lot_qty[21];

EXEC SQL VAR chr_l_lot_qty IS STRING;
EXEC SQL VAR chr_g_rtgs_domcpac IS STRING;

l_logfile=p_logfile;

chr_l_hoff_file=p_hoff_file;
strcpy(chr_l_sys_date,chr_p_sys_date);
   if ( ( l_fhoff_file=fopen(chr_l_hoff_file,"r") ) == NULL)
	{ 
	 fprintf(l_logfile,"Could not open the handoff h_file \n");
	 return(0);
   }
   else 
	 { 
	 fprintf(l_logfile,"Opened the handoff h_file \n");
	 }

	memset(chr_g_rtgs_domcpac,APL_NULL_CHAR,21);
	memset(chr_l_lot_qty,APL_NULL_CHAR,21);

    EXEC SQL SELECT FIELD_VAL
    INTO  :chr_g_rtgs_domcpac
    FROM PRO_GSSPLVAL
    WHERE MAIN_FUN='TRADE_MAINT'
    AND   SUB_PROCESS='RTGS_DOMCPAC';
		
	if(sqlca.sqlcode!=0)
	{
		fprintf(l_logfile,"No Records for DOMCPAC in gssplval\n");
		return(0);
	}


    EXEC SQL SELECT FIELD_VAL
     INTO  :chr_l_lot_qty
     FROM PRO_GSSPLVAL
     WHERE MAIN_FUN='HDAT_PROC'
     AND   SUB_PROCESS='QTY_LOTS';

	if(sqlca.sqlcode!=0)
	{
		fprintf(l_logfile,"No Records for QTY_LOT in gssplval\n");
		return(0);
	}

	int_g_lot_multiplier= atoi(chr_l_lot_qty);
	fprintf(l_logfile,"g_lot_multiplier is **%d**\n",int_g_lot_multiplier);
	fprintf(l_logfile,"l_lot_qty is ***%s***\n",chr_l_lot_qty);
	fprintf(l_logfile,"g_rtgs_domcpac is ***%s***\n",chr_g_rtgs_domcpac);
		
memset(chr_tempbuff_a,APL_NULL_CHAR,500);
fgets(chr_tempbuff_a,FEED_LINERR_LENGTH,l_fhoff_file);     
for ( ; ; )
	{
	memset(chr_l_hdat_line,APL_NULL_CHAR,500);
	strcpy(chr_l_hdat_line,chr_tempbuff_a);	
	memset(chr_tempbuff_a,APL_NULL_CHAR,500);
	fgets(chr_tempbuff_a,FEED_LINERR_LENGTH,l_fhoff_file);
fprintf(p_logfile,"--------------------------------------------------------------------------------------------\n");
	fprintf(l_logfile,"Record No : %d\n",int_l_rec);
	int_l_rec++;
	    int_retval=CR_Proc_EOCUpd(p_matrpt_file, p_unmatrpt_file, p_misrpt_file,p_intl_envdatastruct_h,chr_l_hdat_line,chr_l_sys_date,l_logfile,l_debug_info_ptr);
	memset(chr_l_hdat_line,APL_NULL_CHAR,500);

		if (feof(l_fhoff_file))
		{
	   	 break;
		}
	}

fclose(l_fhoff_file);
return(1);
}

 



int CR_Proc_EOCUpd(FILE *p_matrpt_file,FILE *p_unmatrpt_file,FILE *p_misrpt_file,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,char *p_hdat_line,char *chr_p_sys_date,FILE *p_logfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{ 
char chr_l_locrefno[17] = APL_NULL_STRING;
int int_l_decimallen = 0;
double dbl_l_amount_a = 0.00;
double dbl_l_acc_tol = 0.00;
short i_acc_tol = 0;
double l_quantity = 0.00;
double h_safekeep_pos=0.00,h_val_rec=0.00,h_val_del=0.00;
char chr_l_refno_a[17] = APL_NULL_STRING;
char chr_l_failcode_A[3] = APL_NULL_STRING;
char chr_l_amount_temp[25] = APL_NULL_STRING;
int int_noelem =  0;
int int_l_rpr_seq_num = 0;
int i = 0;
int int_l_amount_len=0;
char h_ora_rowid[APL_ROWID_LEN] = APL_NULL_STRING;
SYS_DL_DEAL_STRUCT_H     l_sys_dl_deal_struct_ha;
char **chr_l_param;
char h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char h_reg_bcl_ind[2] = APL_NULL_STRING;
char h_regbrflag[3] = APL_NULL_STRING;
char h_loccode[5]= APL_NULL_STRING;
char h_instr_code[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
char h_currencycode[4] = APL_NULL_STRING;
char chr_l_trcode_1[2] = APL_NULL_STRING;
char chr_l_trcode_temp[5] = APL_NULL_STRING;
char chr_h_countacc_desc[66] = APL_NULL_STRING;
char chr_h_countacc_biccode[13] = APL_NULL_STRING;
char chr_l_systemdatetime[APL_DATE_LEN] = APL_NULL_STRING;
char chr_l_trdt_temp[APL_DATE_LEN] = APL_NULL_STRING;
char chr_l_settledt_temp[APL_DATE_LEN] = APL_NULL_STRING;

char chr_l_acc[13] = APL_NULL_STRING;
char chr_l_pad_refno[17] = APL_NULL_STRING;
char chr_l_trdt_a[11] = APL_NULL_STRING;
char chr_l_sd[11] = APL_NULL_STRING;
char chr_l_pad_qty[6] = APL_NULL_STRING;
char chr_l_bog[7] = APL_NULL_STRING;
char chr_l_isin[13]=APL_NULL_STRING;
char chr_l_trcode_a[6]=APL_NULL_STRING;
char chr_l_cpcode[11]=APL_NULL_STRING;
double l_cashamount=0.00;

DL_DEAL_HDAT_STRUCT_H l_dl_deal_hdat_struct_h;
PRO_HDAT_STATIC_STRUCT_H l_pro_hdat_static_struct_h;
PRO_HDAT_STATIC_STRUCT_I l_pro_hdat_static_struct_i;
int int_l_length = 0;
struct sqlca sqlca;
char chr_l_line_read[500]=APL_NULL_STRING;
char chr_l_sys_date[11]=APL_NULL_STRING;
int	int_l_ccseligfail_flg	=	0;
DL_DEALAUDIT_STRUCT_H	 l_dl_dealaudit_struct_h;
short i_dl_client = 0;
short i_reg_bcl_ind = 0;
short i_instr_code	=0;
short i_currencycode	=0;
short i_loccode	=0;
short i_regbrflag	=0;
short i_indentity_no	=0;
short i_failreas_cd=0;
short i_locindentity_no=0;
short i_trdt_temp=0;
short i_settledt_temp=0;
short i_amt=0;
short i_brk_cd=0;
short i_clnt_clr_name=0;

EXEC SQL BEGIN DECLARE SECTION;
   int int_l_count = 0;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR h_instr_code IS STRING;
EXEC SQL VAR chr_l_refno_a IS STRING;
EXEC SQL VAR chr_l_failcode_A IS STRING;
EXEC SQL VAR h_reg_bcl_ind IS STRING;
EXEC SQL VAR h_loccode IS STRING;
EXEC SQL VAR h_currencycode IS STRING;
EXEC SQL VAR chr_h_countacc_desc IS STRING;
EXEC SQL VAR chr_h_countacc_biccode IS STRING;
EXEC SQL VAR h_regbrflag IS STRING;
EXEC SQL VAR chr_l_systemdatetime IS STRING;
EXEC SQL VAR h_ora_rowid IS STRING;
EXEC SQL VAR chr_l_locrefno IS STRING;
EXEC SQL VAR chr_l_amount_temp IS STRING;
EXEC SQL VAR chr_l_settledt_temp IS STRING;
EXEC SQL VAR chr_l_trdt_temp IS STRING;


EXEC SQL VAR l_dl_deal_hdat_struct_h.h_indentity_no IS STRING;
EXEC SQL VAR l_dl_deal_hdat_struct_h.h_dlt IS STRING;
EXEC SQL VAR l_dl_deal_hdat_struct_h.h_dealcd IS STRING;
EXEC SQL VAR l_dl_deal_hdat_struct_h.h_instr_isin IS STRING;
EXEC SQL VAR l_dl_deal_hdat_struct_h.h_hdat_countclt IS STRING;
EXEC SQL VAR l_dl_deal_hdat_struct_h.h_setldt IS STRING;
EXEC SQL VAR l_dl_deal_hdat_struct_h.h_locindentity_no IS STRING;
EXEC SQL VAR l_dl_deal_hdat_struct_h.h_ext_clhclient IS STRING;
EXEC SQL VAR chr_l_trcode_temp IS STRING;


EXEC SQL VAR l_pro_hdat_static_struct_h.h_mem_ident IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_instr_clt IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_brkcd IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_alternate_bidcd IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_detailription IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_mtch_detail IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_status_ind IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_maker IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_maker_dt IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_checker IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_checker_dt IS STRING;
EXEC SQL VAR l_pro_hdat_static_struct_h.h_access_stamp IS STRING;

EXEC SQL END DECLARE SECTION;
l_dl_deal_hdat_struct_h.h_qty = 0.00;
sqlca.sqlcode = 0;
l_dl_deal_hdat_struct_h.h_amt = 0.00;

memset(&l_dl_deal_hdat_struct_h,NULL,sizeof(DL_DEAL_HDAT_STRUCT_H));
memset(&l_pro_hdat_static_struct_h,NULL,sizeof(PRO_HDAT_STATIC_STRUCT_H)); 
memset(&l_sys_dl_deal_struct_ha,NULL,sizeof(SYS_DL_DEAL_STRUCT_H));
memset(&l_dl_dealaudit_struct_h,NULL,sizeof(DL_DEALAUDIT_STRUCT_H));
strcpy(chr_l_sys_date,chr_p_sys_date);
strcpy(chr_l_line_read,p_hdat_line);

memset(h_ora_rowid,APL_NULL_CHAR,APL_ROWID_LEN);

int_l_length = strlen(chr_l_line_read);

for (i = 0;i <int_l_length;i++)
{
	if ((chr_l_line_read[i] == '\r') || (chr_l_line_read[i] == '\n'))
	{
		chr_l_line_read[i]=',';
		chr_l_line_read[i+1]=APL_NULL_CHAR;
		break;
	}

}	

CO_SplitStr(chr_l_line_read,',', &int_noelem, &chr_l_param);
if (int_noelem < 21)
{
fprintf(p_logfile,"20 elements not int_found - The record details are not complete. \n");
fprintf(p_misrpt_file,"Invalid Record --");
fprintf(p_misrpt_file,"[%s]\n",p_hdat_line);
APL_GOBACK_FAIL;
}

strcpy(l_dl_deal_hdat_struct_h.h_indentity_no,chr_l_param[1]);
strcpy(l_dl_deal_hdat_struct_h.h_dlt,chr_l_param[2]);
strcpy(l_dl_deal_hdat_struct_h.h_dealcd,chr_l_param[4]);
strcpy(l_dl_deal_hdat_struct_h.h_instr_isin,chr_l_param[8]);
l_dl_deal_hdat_struct_h.h_qty = atoi(chr_l_param[10]);
l_dl_deal_hdat_struct_h.h_qty = l_dl_deal_hdat_struct_h.h_qty * int_g_lot_multiplier;
strcpy(l_dl_deal_hdat_struct_h.h_hdat_countclt,chr_l_param[13]);
l_dl_deal_hdat_struct_h.h_amt = atof(chr_l_param[14]);
strcpy(l_dl_deal_hdat_struct_h.h_setldt,chr_l_param[16]);
strcpy(l_dl_deal_hdat_struct_h.h_locindentity_no,chr_l_param[19]);
strcpy(l_dl_deal_hdat_struct_h.h_ext_clhclient,chr_l_param[20]);

strcat(l_dl_deal_hdat_struct_h.h_dlt," 12:00:00");
strcat(l_dl_deal_hdat_struct_h.h_setldt," 12:00:00");

fprintf(p_logfile,"Trade Ref No :%s",chr_l_param[1]);
fprintf(p_logfile,"  Trade Date :%s",l_dl_deal_hdat_struct_h.h_dlt);
fprintf(p_logfile,"  Trcode :%s",chr_l_param[4]);
fprintf(p_logfile,"  ISIN :%s\n",chr_l_param[8]);
fprintf(p_logfile,"Quantity in lots :%s",chr_l_param[10]);
fprintf(p_logfile,"  Quantity :%lf",l_dl_deal_hdat_struct_h.h_qty);
fprintf(p_logfile,"  HDAT Counterparty Code :%s\n",chr_l_param[13]);
fprintf(p_logfile,"Amount :%lf",l_dl_deal_hdat_struct_h.h_amt);
fprintf(p_logfile,"  Settle Date :%s\n",l_dl_deal_hdat_struct_h.h_setldt);
fprintf(p_logfile,"BOG Reference :%s",chr_l_param[19]);
fprintf(p_logfile,"  External Clearing House No :%s\n",chr_l_param[20]);

fprintf(p_logfile,"\n HDAT_STATIC MemberID from h_file |%s|",l_dl_deal_hdat_struct_h.h_hdat_countclt);

	EXEC SQL SELECT * INTO :l_pro_hdat_static_struct_h:l_pro_hdat_static_struct_i
	FROM PRO_HDAT_STATIC
	WHERE MEM_IDENT = :l_dl_deal_hdat_struct_h.h_hdat_countclt;

	IS_ANY_ORA_ERROR
	if (sqlca.sqlcode == 1403)
	{
		fprintf(p_logfile,"HDAT Static Member ID Not Found \n");
	   fprintf(p_misrpt_file,"Invalid HDAT Member ID (14th Field)\n");
		APL_GOBACK_FAIL;
	}

	memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(h_reg_bcl_ind,APL_NULL_CHAR,2);

	EXEC SQL SELECT CLN_CODE,CLN_REG_BCL_IND
		INTO :h_dl_client:i_dl_client,:h_reg_bcl_ind:i_reg_bcl_ind 
	from MT_CLIENT
	WHERE CLN_CODE = (SELECT INSTRUCT_CLT FROM PRO_HDAT_STATIC WHERE MEM_IDENT = :chr_l_param[11])
	and STATUS not in ('UU','CA','FA','DU','FU','CU');

memset(chr_l_acc,APL_NULL_CHAR,13);
memset(chr_l_pad_refno,APL_NULL_CHAR,17);
memset(chr_l_trdt_a,APL_NULL_CHAR,11);
memset(chr_l_sd,APL_NULL_CHAR,11);
memset(chr_l_pad_qty,APL_NULL_CHAR,6);
memset(chr_l_bog,APL_NULL_CHAR,7);
memset(chr_l_isin,APL_NULL_CHAR,13);
memset(chr_l_trcode_a,APL_NULL_CHAR,6);
memset(chr_l_cpcode,APL_NULL_CHAR,11);

strcpy(chr_l_acc,h_dl_client);
strcpy(chr_l_pad_refno,chr_l_param[1]);
strcpy(chr_l_trdt_a,chr_l_param[2]);
strcpy(chr_l_sd,chr_l_param[16]);
strcpy(chr_l_pad_qty,chr_l_param[10]);
strcpy(chr_l_bog,chr_l_param[19]);
strcpy(chr_l_isin,chr_l_param[8]);
strcpy(chr_l_trcode_a,chr_l_param[4]);
l_cashamount=atof(chr_l_param[14]);
strcpy(chr_l_cpcode,chr_l_param[13]);

if(APL_FAILURE == CO_PadString(chr_l_acc,'R',13," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_acc",NULL,NULL);
     sprintf(chr_l_acc,"%12s"," ");
	  strcat(chr_l_acc,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_pad_refno,'R',17," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_pad_refno",NULL,NULL);
     sprintf(chr_l_pad_refno,"%16s"," ");
	  strcat(chr_l_pad_refno,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_trdt_a,'R',11," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_trdt",NULL,NULL);
     sprintf(chr_l_trdt_a,"%10s"," ");
	  strcat(chr_l_trdt_a,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_sd,'R',11," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_sd",NULL,NULL);
     sprintf(chr_l_sd,"%10s"," ");
	  strcat(chr_l_sd,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_pad_qty,'R',6," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_pad_qty",NULL,NULL);
     sprintf(chr_l_pad_qty,"%5s"," ");
	  strcat(chr_l_pad_qty,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_bog,'R',7," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_bog",NULL,NULL);
     sprintf(chr_l_bog,"%6s"," ");
	  strcat(chr_l_bog,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_isin,'R',12," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_isin",NULL,NULL);
     sprintf(chr_l_isin,"%12s"," ");
	  strcat(chr_l_isin,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_trcode_a,'R',5," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_trcode",NULL,NULL);
     sprintf(chr_l_trcode_a,"%5s"," ");
	  strcat(chr_l_trcode_a,APL_NULL_STRING);	
   }
if(APL_FAILURE == CO_PadString(chr_l_cpcode,'R',10," ",l_debug_info_ptr))
   {
     CO_ProcMonitor(p_logfile,"Failure in CO_PadString Function for l_cpcode",NULL,NULL);
     sprintf(chr_l_cpcode,"%6s"," ");
	  strcat(chr_l_cpcode,APL_NULL_STRING);	
   }

	if (sqlca.sqlcode == 1403 || sqlca.sqlcode == -2112 )
	{
		fprintf(p_logfile,"Valid Account not int_found for HDAT Static Instructor client  no. \n");
      fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	   fprintf(p_misrpt_file,"Invalid ExtClh\n");
		APL_GOBACK_FAIL;
	}
	else
	{
		
	   fprintf(p_logfile,"\nChecking the SQL l_debuglist after Pad String Fn [%d]",sqlca.sqlcode);
		if(sqlca.sqlcode!=0)
		{
        fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
        APL_GOBACK_FAIL
		}
		
	}

if (strlen(l_dl_deal_hdat_struct_h.h_dlt) !=19) 
	{
	fprintf(p_logfile,"Trade Date is not proper\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Trade Date\n");
	APL_GOBACK_FAIL;
	}
if (strlen(l_dl_deal_hdat_struct_h.h_dealcd)>4) 
	{
	fprintf(p_logfile,"Trade Code is not proper\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Trade Code\n");
	APL_GOBACK_FAIL;
	}
if (strlen(l_dl_deal_hdat_struct_h.h_instr_isin)>12)
	{
	fprintf(p_logfile,"ISIN invalid\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"ISIN invalid\n");
	APL_GOBACK_FAIL;
	}
if (strlen(l_dl_deal_hdat_struct_h.h_hdat_countclt)>12) 
	{
	fprintf(p_logfile,"HDAT Countacc Member h_code is not proper\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid HDAT Countacc\n");
	APL_GOBACK_FAIL;
	}
if (strlen(l_dl_deal_hdat_struct_h.h_setldt) !=19) 
	{
	fprintf(p_logfile,"Settle Date is not proper\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Settle Date\n");
	APL_GOBACK_FAIL;
	}
if (strlen(l_dl_deal_hdat_struct_h.h_locindentity_no) > 16) 
	{
	fprintf(p_logfile,"Bog Reference no is not proper\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Bog Ref no\n");
	APL_GOBACK_FAIL;
	}
if (strlen(l_dl_deal_hdat_struct_h.h_ext_clhclient)>12)
	{
	fprintf(p_logfile,"External Clearing House Account is not proper\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Ext ClH A/C\n");
	APL_GOBACK_FAIL;
	}


if(APL_FAILURE == CO_RtvSysDtTime(chr_l_systemdatetime,l_debug_info_ptr))
{
	fprintf(p_logfile,"Error in retrieving the system chr_date time \n"); //AIX Migration Changes
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	APL_GOBACK_FAIL
}

if (h_reg_bcl_ind[0] == 'T')
	fprintf(p_logfile,"Account :%s  - Setup is to Update Trades only\n",h_dl_client);//AIX Migration Changes
if (h_reg_bcl_ind[0] == 'N')
	fprintf(p_logfile,"Account :%s - Setup is to only Create Trades \n",h_dl_client);//AIX Migration Changes

l_dl_deal_hdat_struct_h.h_indentity_no[strlen(l_dl_deal_hdat_struct_h.h_indentity_no)]=APL_NULL_CHAR;
l_dl_deal_hdat_struct_h.h_dlt[strlen(l_dl_deal_hdat_struct_h.h_dlt)]=APL_NULL_CHAR;
l_dl_deal_hdat_struct_h.h_dealcd[strlen(l_dl_deal_hdat_struct_h.h_dealcd)]=APL_NULL_CHAR;
l_dl_deal_hdat_struct_h.h_instr_isin[strlen(l_dl_deal_hdat_struct_h.h_instr_isin)]=APL_NULL_CHAR;
l_dl_deal_hdat_struct_h.h_hdat_countclt[strlen(l_dl_deal_hdat_struct_h.h_hdat_countclt)]=APL_NULL_CHAR;
l_dl_deal_hdat_struct_h.h_setldt[strlen(l_dl_deal_hdat_struct_h.h_setldt)]=APL_NULL_CHAR;
l_dl_deal_hdat_struct_h.h_locindentity_no[strlen(l_dl_deal_hdat_struct_h.h_locindentity_no)]=APL_NULL_CHAR;
l_dl_deal_hdat_struct_h.h_ext_clhclient[strlen(l_dl_deal_hdat_struct_h.h_ext_clhclient)]=APL_NULL_CHAR;

EXEC SQL SELECT 	to_date(:l_dl_deal_hdat_struct_h.h_dlt,'DD/MM/YYYY HH:MI:SS'),
						to_date(:l_dl_deal_hdat_struct_h.h_setldt,'DD/MM/YYYY HH:MI:SS') 
						INTO :chr_l_trdt_temp:i_trdt_temp,:chr_l_settledt_temp:i_settledt_temp 
						FROM DUAL;
if(sqlca.sqlcode !=0)
{
	fprintf(p_logfile,"Trade chr_date (%s) or Settlement chr_date(%s) is Invalid\n ",l_dl_deal_hdat_struct_h.h_dlt,l_dl_deal_hdat_struct_h.h_setldt); 
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Trade/Settle dt\n"); 
	APL_GOBACK_FAIL
} 

memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
memset(h_currencycode,APL_NULL_CHAR,4);
memset(h_loccode,APL_NULL_CHAR,5);
memset(h_regbrflag,APL_NULL_CHAR,3);

EXEC SQL SELECT instr_code,currency_cd,location_cd,REG_BR_IND 
INTO 	:h_instr_code:i_instr_code,
		:h_currencycode:i_currencycode,
		:h_loccode:i_loccode,
		:h_regbrflag:i_regbrflag 
FROM MT_INSTRUMENT
where instr_isin = rtrim(:l_dl_deal_hdat_struct_h.h_instr_isin) ;


if( sqlca.sqlcode==1403 )
{
	fprintf(p_logfile,"Instrode Not Found For ISIN = %s\n",l_dl_deal_hdat_struct_h.h_instr_isin);
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Instrurity\n");
	APL_GOBACK_FAIL;
}
else
{
	fprintf(p_logfile,"\nChecking for SQL Error after ISIN Select [%d]",sqlca.sqlcode);
	if (sqlca.sqlcode !=0 )
	{
     fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	  APL_GOBACK_FAIL;
   }
}



if(strlen(l_dl_deal_hdat_struct_h.h_dealcd)!=0)
{
	memset(chr_l_trcode_temp,APL_NULL_CHAR,5);
	EXEC SQL SELECT UPPER(:l_dl_deal_hdat_struct_h.h_dealcd) into :chr_l_trcode_temp FROM DUAL;
	fprintf(p_logfile,"\nChecking for SQL Error after Trcode Select [%d]",sqlca.sqlcode);

	if(sqlca.sqlcode!=0)
	{
   	fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
   	APL_GOBACK_FAIL;
	}
   
}
else
{
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Trcode\n");
	APL_GOBACK_FAIL
}
strcpy(l_dl_deal_hdat_struct_h.h_dealcd,chr_l_trcode_temp);

memset(chr_l_trcode_1,APL_NULL_CHAR,2);
if ((!strcmp(l_dl_deal_hdat_struct_h.h_dealcd,DLCD_BUY)))
{
	strcpy(chr_l_trcode_1,"4");
}
else if (!strcmp(l_dl_deal_hdat_struct_h.h_dealcd,SELL_DLCODE))
{
	strcpy(chr_l_trcode_1,"3");
}
else
{
fprintf(p_logfile,"Trade Code not proper\n");
fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
fprintf(p_misrpt_file,"Invalid Trade Code\n");
APL_GOBACK_FAIL
}

if (!strcmp(l_dl_deal_hdat_struct_h.h_dlt,APL_NULL_STRING))
{
	fprintf(p_logfile,"Trade Date not int_found \n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Trade Dt\n");
	APL_GOBACK_FAIL
}
if (l_dl_deal_hdat_struct_h.h_qty == 0)
{
	fprintf(p_logfile,"Quantity  is zero\n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Quantity\n");
	APL_GOBACK_FAIL
}
if (l_dl_deal_hdat_struct_h.h_amt == 0)
{
	fprintf(p_logfile,"Amount not int_found \n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Amount\n");
	APL_GOBACK_FAIL
}
if (!strcmp(l_dl_deal_hdat_struct_h.h_setldt,APL_NULL_STRING))
{
	fprintf(p_logfile,"Settle Date not int_found \n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid Settle Dt\n");
	APL_GOBACK_FAIL
}
if (strlen(l_dl_deal_hdat_struct_h.h_locindentity_no) == 0)
{
	fprintf(p_logfile,"BOG Reference No not int_found \n");
   fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_misrpt_file,"Invalid BOG Ref No\n");
	APL_GOBACK_FAIL
}


EXEC SQL SELECT LCL_IDENTNO into :chr_l_locrefno:i_locindentity_no from DL_DEAL
where LCL_IDENTNO = rtrim(:l_dl_deal_hdat_struct_h.h_locindentity_no);

if ( (sqlca.sqlcode != 0 ) && (sqlca.sqlcode !=1403))
	{
	  fprintf(p_logfile,"\n problem in selecting the Bog Ref No [%d]",sqlca.sqlcode);
     fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	  APL_GOBACK_FAIL
   }    


if (strcmp(chr_l_locrefno,APL_NULL_STRING))
{
	fprintf(p_logfile,"BOG Reference for this record is not unique. |%s| \n",l_dl_deal_hdat_struct_h.h_indentity_no); //AIX Migration Changes
	fprintf(p_unmatrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
	fprintf(p_unmatrpt_file,"BOG Ref No is not unique\n");
	APL_GOBACK_FAIL
}


if (strcmp(h_reg_bcl_ind,"T")==0)
{
	
   EXEC SQL SELECT NVL(CLN_TOLERANCE,0) INTO :dbl_l_acc_tol:i_acc_tol FROM MT_CLIENT WHERE CLN_CODE =:h_dl_client;
   
	if ( (sqlca.sqlcode !=0) && (sqlca.sqlcode !=1403))
	{
	  fprintf(p_logfile,"\nProblem in Selecting the Tolerance Limit [%d]",sqlca.sqlcode);
     fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
     APL_GOBACK_FAIL
   } 
	
   if(i_acc_tol == -1)
	 {
  		dbl_l_acc_tol = 0.00;
    }
  

  


	if ( (sqlca.sqlcode !=0) && (sqlca.sqlcode !=1403))
	{
	  fprintf(p_logfile,"\nProblem in Selecting the Bic Code ,CPdesc[%d]",sqlca.sqlcode);
     fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
     APL_GOBACK_FAIL
   } 
   

	memset(chr_l_failcode_A,APL_NULL_CHAR,3);
	memset(chr_l_refno_a,APL_NULL_CHAR,17);
	memset(h_ora_rowid,APL_NULL_CHAR,APL_ROWID_LEN);

	if(strlen(l_pro_hdat_static_struct_h.h_brkcd))
	{
	EXEC SQL SELECT ROWID,IDENTIY_NO,FAILREASON_CD, AMOUNT 
	 INTO :h_ora_rowid,:chr_l_refno_a:i_indentity_no,:chr_l_failcode_A:i_failreas_cd,:dbl_l_amount_a:i_amt  
	 FROM DL_DEAL
	 WHERE CLIENT=:h_dl_client
         AND INSTR_CODE=:h_instr_code
         AND DEAL_DATE= to_date(rtrim(:l_dl_deal_hdat_struct_h.h_dlt))
         AND SETL_DATE= to_date(:l_dl_deal_hdat_struct_h.h_setldt)
			AND DEAL_CD  = :chr_l_trcode_1
			AND QTY = :l_dl_deal_hdat_struct_h.h_qty
			 
			AND LCL_IDENTNO IS NULL
			AND LOCATION_CD = 'BOG'
			AND DOMESTIC_CPCLT = :chr_g_rtgs_domcpac
			AND (
					substr(CP_CLTNAME,1,8) =substr(:l_pro_hdat_static_struct_h.h_brkcd,1,8)
				 )
			AND ROWNUM<2;
	IS_ANY_ORA_ERROR

	if (sqlca.sqlcode == 0)
		fprintf(p_logfile,"\n Trade int_found with countaccnm same as HDAT_Static biccode |%d|\n",sqlca.sqlcode);//AIX Migration Changes
	}

	if((sqlca.sqlcode ==1403) && strlen(l_pro_hdat_static_struct_h.h_detailription))
	{
	EXEC SQL SELECT ROWID,IDENTIY_NO,FAILREASON_CD, AMOUNT 
	 INTO :h_ora_rowid,:chr_l_refno_a:i_indentity_no,:chr_l_failcode_A:i_failreas_cd,:dbl_l_amount_a:i_amt  
	 FROM DL_DEAL
	 WHERE CLIENT=:h_dl_client
         AND INSTR_CODE=:h_instr_code
         AND DEAL_DATE= to_date(rtrim(:l_dl_deal_hdat_struct_h.h_dlt))
         AND SETL_DATE= to_date(:l_dl_deal_hdat_struct_h.h_setldt)
			AND DEAL_CD  = :chr_l_trcode_1
			AND QTY = :l_dl_deal_hdat_struct_h.h_qty
			 
			AND LCL_IDENTNO IS NULL
			AND LOCATION_CD = 'BOG'
			AND DOMESTIC_CPCLT = :chr_g_rtgs_domcpac
			AND (
					(CP_CLTNAME = :l_pro_hdat_static_struct_h.h_detailription)
				 )
			AND ROWNUM<2;
	IS_ANY_ORA_ERROR
	if (sqlca.sqlcode == 0)
		fprintf(p_logfile,"\n Trade int_found with countaccnm same as HDAT_Static description |%d|\n",sqlca.sqlcode);//AIX Migration Changes
	}

	if((sqlca.sqlcode ==1403) && strlen(l_pro_hdat_static_struct_h.h_alternate_bidcd)) 
	{
	EXEC SQL SELECT ROWID,IDENTIY_NO,FAILREASON_CD, AMOUNT 
	 INTO :h_ora_rowid,:chr_l_refno_a:i_indentity_no,:chr_l_failcode_A:i_failreas_cd,:dbl_l_amount_a:i_amt  
	 FROM DL_DEAL
	 WHERE CLIENT=:h_dl_client
         AND INSTR_CODE=:h_instr_code
         AND DEAL_DATE= to_date(rtrim(:l_dl_deal_hdat_struct_h.h_dlt))
         AND SETL_DATE= to_date(:l_dl_deal_hdat_struct_h.h_setldt)
			AND DEAL_CD  = :chr_l_trcode_1
			AND QTY = :l_dl_deal_hdat_struct_h.h_qty
			 
			AND LCL_IDENTNO IS NULL
			AND LOCATION_CD = 'BOG'
			AND DOMESTIC_CPCLT = :chr_g_rtgs_domcpac
			AND (
					substr(CP_CLTNAME,1,8) =substr(:l_pro_hdat_static_struct_h.h_alternate_bidcd,1,8)
				 )
			AND ROWNUM<2;
	IS_ANY_ORA_ERROR
	if (sqlca.sqlcode == 0)
		fprintf(p_logfile,"\n Trade int_found with countaccnm same as HDAT_Static alt_biccode |%d| \n",sqlca.sqlcode);//AIX Migration Changes
	}

	if((sqlca.sqlcode ==1403) && strlen(l_pro_hdat_static_struct_h.h_mtch_detail)) 
	{
		fprintf(p_logfile,"\n V*%s*\n",h_dl_client);
		fprintf(p_logfile,"\n V*%s*\n",h_instr_code);
		fprintf(p_logfile,"\n V*%s*\n",l_dl_deal_hdat_struct_h.h_dlt);
		fprintf(p_logfile,"\n V*%s*\n",l_dl_deal_hdat_struct_h.h_setldt);
		fprintf(p_logfile,"\n V*%s*\n",chr_l_trcode_1);
		//fprintf(p_logfile,"\n V*%s*\n",l_dl_deal_hdat_struct_h.h_qty);Changes done for AIX Migration
		fprintf(p_logfile,"\n V*%lf*\n",l_dl_deal_hdat_struct_h.h_qty);
		fprintf(p_logfile,"\n V*%s*\n",chr_g_rtgs_domcpac);
		fprintf(p_logfile,"\n V*%s*\n",l_pro_hdat_static_struct_h.h_mtch_detail);
   
	EXEC SQL SELECT ROWID,IDENTIY_NO,FAILREASON_CD, AMOUNT 
	 INTO :h_ora_rowid,:chr_l_refno_a:i_indentity_no,:chr_l_failcode_A:i_failreas_cd,:dbl_l_amount_a:i_amt  
	 FROM DL_DEAL
	 WHERE CLIENT=:h_dl_client
         AND INSTR_CODE=:h_instr_code
         AND DEAL_DATE= to_date(rtrim(:l_dl_deal_hdat_struct_h.h_dlt))
         AND SETL_DATE= to_date(:l_dl_deal_hdat_struct_h.h_setldt)
			AND DEAL_CD  = :chr_l_trcode_1
			AND QTY = :l_dl_deal_hdat_struct_h.h_qty
			 
			AND LCL_IDENTNO IS NULL
			AND LOCATION_CD = 'BOG'
			AND DOMESTIC_CPCLT = :chr_g_rtgs_domcpac
			AND (
					(CP_CLTNAME like '%'||:l_pro_hdat_static_struct_h.h_mtch_detail||'%')
				 )
			AND ROWNUM<2;
	IS_ANY_ORA_ERROR
	if (sqlca.sqlcode == 0)
		fprintf(p_logfile,"\n Trade int_found with countaccnm as HDAT_Static mtch_desc |%d|\n",sqlca.sqlcode);//AIX Migration Changes
	}

	if(sqlca.sqlcode==-2112)
	{

		fprintf(p_logfile,"Multiple Trades Found for the record.\n"); 
	   fprintf(p_unmatrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
		fprintf(p_unmatrpt_file,"Trade Not unique\n");
		APL_GOBACK_FAIL
	}

	if (sqlca.sqlcode != 0)
	{
		fprintf(p_logfile,"Could not Update BOG Reference..sqlca.sqlcode is %d\n",sqlca.sqlcode); 
		fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
		fprintf(p_misrpt_file,"Trade not int_found to update\n");
	}
	else if (( dbl_l_amount_a > (l_dl_deal_hdat_struct_h.h_amt + dbl_l_acc_tol) )  || ( dbl_l_amount_a < (l_dl_deal_hdat_struct_h.h_amt - dbl_l_acc_tol )))
	{
		fprintf(p_logfile,"Cash Amount MisMatch..sqlca.sqlcode is %d [%lf][%lf][%lf]\n",sqlca.sqlcode,dbl_l_amount_a,l_dl_deal_hdat_struct_h.h_amt,dbl_l_acc_tol); 
		fprintf(p_unmatrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
		fprintf(p_unmatrpt_file,"Cash Amount MisMatch\n");
      APL_GOBACK_FAIL
	}

	if (strcmp(chr_l_refno_a,APL_NULL_STRING)) 
	{
		if ((!strcmp(chr_l_failcode_A,APL_NULL_STRING))  || (strcmp(chr_l_failcode_A,"90")) || (!strcmp(chr_l_failcode_A,"98")) || (!strcmp(chr_l_failcode_A,"41")) )
		{
			
			if ( VAL_DELIVER_DEAL(chr_l_trcode_1[0]) )
			{
            EXEC SQL SELECT SUM(NVL(SAFEKEEP_POS,0)),
				SUM(NVL(VAL_REC,0)),
				SUM(NVL(VAL_DEL,0))
				INTO :h_safekeep_pos, h_val_rec,h_val_del
				FROM DL_SAFEK
				WHERE CLIENT =:h_dl_client
				AND INSTR_CODE=:h_instr_code
				AND LOCATION_CD='BOG';

				fprintf(p_logfile,"\n Checking Position %d \n",sqlca.sqlcode);
				if (sqlca.sqlcode !=0)
				{
				  fprintf(p_logfile,"\n Problem in Selecting the Safek Positions [%d]",sqlca.sqlcode);
		        fprintf(p_unmatrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
              APL_GOBACK_FAIL
				}
				

				if ((l_dl_deal_hdat_struct_h.h_qty > (h_safekeep_pos+h_val_rec-h_val_del))
				  &&(VAL_DELIVER_DEAL(chr_l_trcode_1[0])))
	            strcpy(chr_l_failcode_A,"15");
            else
					strcpy(chr_l_failcode_A,"90");
         }
         else
			   strcpy(chr_l_failcode_A,"90");


			EXEC SQL UPDATE DL_DEAL SET
			lcl_identno = rtrim(:l_dl_deal_hdat_struct_h.h_locindentity_no),
			AMOUNT=:l_dl_deal_hdat_struct_h.h_amt,
			ORIG_AMOUNT=:l_dl_deal_hdat_struct_h.h_amt,
			FAILREASON_CD = :chr_l_failcode_A,
			SUB_FAIL_CD = 0
			where rowid = :h_ora_rowid;

		   if(sqlca.sqlcode !=0)
			{
				fprintf(p_logfile,"\nProblem in updating the Trade Table [%d]",sqlca.sqlcode);
			   fprintf(p_unmatrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
            APL_GOBACK_FAIL
			}
			

			
   		int_l_ccseligfail_flg = 0;
   		if (APL_FAILURE == DL_Chk_DLFailCd(chr_l_failcode_A,&int_l_ccseligfail_flg,l_debug_info_ptr))
   		{
      		APL_GOBACK_FAIL
   		}
   		if (int_l_ccseligfail_flg)
   		{
      		if ( APL_FAILURE ==  DL_Mod_CCSPendDL(h_dl_client,
                                             chr_l_refno_a,
                                             MS_CCS_FC,
                                             chr_l_failcode_A,
                                             APL_NULL_STRING,
                                             APL_NULL_STRING,
                                             &l_debug_info_ptr) )
      		{
         		APL_GOBACK_FAIL
      		}
   		}
			

	   	memset(&l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
      	strcpy(l_dl_dealaudit_struct_h.h_dl_client, h_dl_client);
      	strcpy(l_dl_dealaudit_struct_h.h_indentity_no, chr_l_refno_a);
      	strcpy(l_dl_dealaudit_struct_h.h_trail_for, "T");
      	strcpy(l_dl_dealaudit_struct_h.h_processdetail, "Update Fail Reason");
      	strcpy(l_dl_dealaudit_struct_h.h_proc_usr, "SYSTEM");
      	strcpy(l_dl_dealaudit_struct_h.h_subprocess, APL_NULL_STRING);
      	strcpy(l_dl_dealaudit_struct_h.h_logdate, APL_NULL_STRING);
      	
      	strcpy(l_dl_dealaudit_struct_h.h_fail_cd,chr_l_failcode_A);
      	l_dl_dealaudit_struct_h.h_qty = l_dl_deal_hdat_struct_h.h_qty;
      	strcpy(l_dl_dealaudit_struct_h.h_dlfromord, "N");

      	if (APL_FAILURE == CR_Mod_CLHAudTrail(&l_dl_dealaudit_struct_h, l_debug_info_ptr))
      	{
			   fprintf(p_logfile,"Failure while updating Audit Trail \n"); 
			   fprintf(p_unmatrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
         	APL_GOBACK_FAIL
      	}
			fprintf(p_logfile,"Trade & Audit Trail Updated\n"); 
		   fprintf(p_matrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
			fprintf(p_matrpt_file,"Trade updated\n");
	}
	else
	{
      EXEC SQL UPDATE DL_DEAL SET
      lcl_identno = rtrim(:l_dl_deal_hdat_struct_h.h_locindentity_no),
		AMOUNT=:l_dl_deal_hdat_struct_h.h_amt,
		ORIG_AMOUNT=:l_dl_deal_hdat_struct_h.h_amt
      where rowid = :h_ora_rowid;

		if(sqlca.sqlcode !=0)
		{
			fprintf(p_logfile,"\nProblem in updating the Trade Table [%d]",sqlca.sqlcode);
		   fprintf(p_unmatrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
         APL_GOBACK_FAIL
		}
      
		fprintf(p_logfile,"Trade & Audit Trail Updated\n"); 
		fprintf(p_matrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
		fprintf(p_matrpt_file,"Trade updated\n");
	}

	if (sqlca.sqlcode == 0)
	{
		
      if ( APL_FAILURE ==  DL_Mod_CCSPendDL(h_dl_client,
                                             chr_l_refno_a,
                                             MS_CCS_T4,
                                             APL_NULL_STRING,
                                             APL_NULL_STRING,
                                             APL_NULL_STRING,
                                             &l_debug_info_ptr) )
      {
         APL_GOBACK_FAIL
      }
		
		if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
   		                                 chr_l_refno_a,
      		                              h_dl_client,
         		                           'Y',
            		                        APL_NULL_STRING,
               		                     l_debug_info_ptr ) )
		{           	
			fprintf(p_logfile,"Failed To Insert into IMSGENT table\n");
			APL_GOBACK_FAIL
		}

		if (APL_FAILURE==EI_Mod_MQData(h_dl_client,
												chr_l_refno_a,
      		                         NULL,
         		                      NULL,
            		                   "B",
	            		                l_debug_info_ptr))
		{
			fprintf(p_logfile,"Failed To Insert into MQ Datawarehouse table\n");
 			APL_GOBACK_FAIL
		}
		fprintf(p_logfile," Updated BOG Reference no : %s for Account : %s and  Refno : %s \n",l_dl_deal_hdat_struct_h.h_locindentity_no,h_dl_client,chr_l_refno_a);
	}
 }
}
fflush(p_logfile);
		

if (strcmp(h_reg_bcl_ind,"N") == 0)
{
	if ((strlen(l_dl_deal_hdat_struct_h.h_indentity_no) > 16) || (strlen(l_dl_deal_hdat_struct_h.h_indentity_no) == 0))
	{
   	fprintf(p_logfile,"Trade Reference Not proper.\n");
		fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
		fprintf(p_misrpt_file,"Invalid Trade Refno\n");
   	APL_GOBACK_FAIL
	}
	if (strlen(l_dl_deal_hdat_struct_h.h_hdat_countclt) == 0)
	{
		fprintf(p_logfile,"HDAT counterparty not int_found \n");
	}
		



			if (strlen(l_pro_hdat_static_struct_h.h_brkcd))
				strcpy(chr_h_countacc_desc,l_pro_hdat_static_struct_h.h_brkcd);

			else if (strlen(l_pro_hdat_static_struct_h.h_detailription))
				strcpy(chr_h_countacc_desc,l_pro_hdat_static_struct_h.h_detailription);

			else if (strlen(l_pro_hdat_static_struct_h.h_alternate_bidcd))
				strcpy(chr_h_countacc_desc,l_pro_hdat_static_struct_h.h_alternate_bidcd);

			else if (strlen(l_pro_hdat_static_struct_h.h_mtch_detail))
				strcpy(chr_h_countacc_desc,l_pro_hdat_static_struct_h.h_mtch_detail);



strcpy(l_sys_dl_deal_struct_ha.h_dl_client,h_dl_client);
strcpy(l_sys_dl_deal_struct_ha.h_indentity_no,l_dl_deal_hdat_struct_h.h_indentity_no);
strcpy(l_sys_dl_deal_struct_ha.h_dlt,l_dl_deal_hdat_struct_h.h_dlt);
strcpy(l_sys_dl_deal_struct_ha.h_setldt,l_dl_deal_hdat_struct_h.h_setldt);

l_sys_dl_deal_struct_ha.h_amt = l_dl_deal_hdat_struct_h.h_amt;

l_sys_dl_deal_struct_ha.h_pr = 0;
strcpy(l_sys_dl_deal_struct_ha.h_ex_arena,"1");
l_sys_dl_deal_struct_ha.h_custodycomm  = 0;
l_sys_dl_deal_struct_ha.h_brokercomm  = 0;
l_sys_dl_deal_struct_ha.h_stx_comm  = 0;
l_sys_dl_deal_struct_ha.h_oth_comm  = 0;
strcpy(l_sys_dl_deal_struct_ha.h_instrdate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_moneydate,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_qty = l_dl_deal_hdat_struct_h.h_qty;
strcpy(l_sys_dl_deal_struct_ha.h_domcpclt_cd ,chr_g_rtgs_domcpac);
strcpy(l_sys_dl_deal_struct_ha.h_isspotdl     ,APL_NO_IND);
l_sys_dl_deal_struct_ha.h_origquantity = l_dl_deal_hdat_struct_h.h_qty ;
l_sys_dl_deal_struct_ha.h_origamount = l_dl_deal_hdat_struct_h.h_amt;
strcpy(l_sys_dl_deal_struct_ha.h_dlfromord,APL_NO_IND);
strcpy(l_sys_dl_deal_struct_ha.h_entry,"M");
strcpy(l_sys_dl_deal_struct_ha.h_reapired_ind,APL_NO_IND);
strcpy(l_sys_dl_deal_struct_ha.h_domcp_custodyclt,chr_g_rtgs_domcpac);
strcpy(l_sys_dl_deal_struct_ha.h_countclt,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_countcltnm,chr_h_countacc_desc);
strcpy(l_sys_dl_deal_struct_ha.h_clientof,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_custinfo,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_fx_reqd,"N");
strcpy(l_sys_dl_deal_struct_ha.h_ispymtlocal,APL_NO_IND);
strcpy(l_sys_dl_deal_struct_ha.h_verfied_with,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_diffamount  =  0;

strcpy(l_sys_dl_deal_struct_ha.h_brkrno,"07322");	
strcpy(l_sys_dl_deal_struct_ha.h_fail_cd,"90");
strcpy(l_sys_dl_deal_struct_ha.h_failinfo,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_ispart_,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_fx_rt   =  0;
l_sys_dl_deal_struct_ha.h_amend_count=0;
l_sys_dl_deal_struct_ha.h_number_a=0;
strcpy(l_sys_dl_deal_struct_ha.h_report_at_eom_ind,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_billdate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_locindentity_no,l_dl_deal_hdat_struct_h.h_locindentity_no);
strcpy(l_sys_dl_deal_struct_ha.h_instruct_person,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_rec_int_000=0;
strcpy(l_sys_dl_deal_struct_ha.h_dealcd,chr_l_trcode_1);
strcpy(l_sys_dl_deal_struct_ha.h_instr_code,h_instr_code);
strcpy(l_sys_dl_deal_struct_ha.h_currencycode,h_currencycode);
strcpy(l_sys_dl_deal_struct_ha.h_classofdl,"1");
strcpy(l_sys_dl_deal_struct_ha.h_origindentity_no,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_newdt,chr_l_systemdatetime);
strcpy(l_sys_dl_deal_struct_ha.h_maker,"SYSTEM");
strcpy(l_sys_dl_deal_struct_ha.h_maker_dt,chr_l_systemdatetime);
strcpy(l_sys_dl_deal_struct_ha.h_deal_status,"AA");
strcpy(l_sys_dl_deal_struct_ha.h_access_stamp,chr_l_systemdatetime);
strcpy(l_sys_dl_deal_struct_ha.h_info1,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_loccode,HDAT_LOCNCODE);
if( !strcmp(h_regbrflag,"RG") )
	strcpy(l_sys_dl_deal_struct_ha.h_reginstr_ind,"Y");
else 
	strcpy(l_sys_dl_deal_struct_ha.h_reginstr_ind,"N");
strcpy(l_sys_dl_deal_struct_ha.h_pos_stat,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_status_reg,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_confdate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_matchindentity_no,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_markfaildate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_candropdate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_checker,"SYSTEM");
strcpy(l_sys_dl_deal_struct_ha.h_checker_dt,chr_l_systemdatetime);
strcpy(l_sys_dl_deal_struct_ha.h_fxccy,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_inter_med_personnm,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_inter_med_person,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_clientofcode,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_instruct_personnm,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_comm_indentity_no,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_locchng_flg,"N");
l_sys_dl_deal_struct_ha.h_subfailreas_cd = 0;
strcpy(l_sys_dl_deal_struct_ha.h_msg_stat,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_cpamt = 0; 
strcpy(l_sys_dl_deal_struct_ha.h_cash_client,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_updhispos_date,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_mod_hispos_ind,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_clt_reqdel_flag,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_number_b = 0;
strcpy(l_sys_dl_deal_struct_ha.h_lr_ublckdate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_lr_ndsdate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_lr_ndsbldate,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_hostdate,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_complquantity    = 0;
l_sys_dl_deal_struct_ha.h_lostquantity     = 0;
l_sys_dl_deal_struct_ha.h_marktrfquantity  = 0;
l_sys_dl_deal_struct_ha.h_mcomplquantity   = 0;
l_sys_dl_deal_struct_ha.h_outregquantity   = 0;
l_sys_dl_deal_struct_ha.h_pendregquantity  = 0;
l_sys_dl_deal_struct_ha.h_retregquantity   = 0;
l_sys_dl_deal_struct_ha.h_stampquantity    = 0;
l_sys_dl_deal_struct_ha.h_tempoutquantity  = 0;
l_sys_dl_deal_struct_ha.h_tempretquantity  = 0;
l_sys_dl_deal_struct_ha.h_valdeedquantity = 0;
strcpy(l_sys_dl_deal_struct_ha.h_delrecdate      ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_lastregdate     ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_lr_chkdate      ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_lr_confdate     ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_lr_instrdate      ,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_regmsgquantity=0;
strcpy(l_sys_dl_deal_struct_ha.h_tmpoutdate      ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_tmpretdate      ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_transmitdate    ,APL_NULL_STRING);
l_sys_dl_deal_struct_ha.h_delta_000=0;
l_sys_dl_deal_struct_ha.h_delta_001=0;
l_sys_dl_deal_struct_ha.h_delta_002=0;
strcpy(l_sys_dl_deal_struct_ha.h_instrconv_ind     ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_ndsbldate       ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_ndsdate         ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_ublckdate       ,APL_NULL_STRING);
strcpy(l_sys_dl_deal_struct_ha.h_allow_part_s ,"N");
strcpy(l_sys_dl_deal_struct_ha.h_lrdltype       ,APL_NULL_STRING);

int_l_rpr_seq_num = 0;

strcpy(p_intl_envdatastruct_h->h_mode, APL_FUNC_INPUT);
strcpy(p_intl_envdatastruct_h->processtion, "Trade Input");
strcpy(p_intl_envdatastruct_h->auth_req, "Y");
strcpy(p_intl_envdatastruct_h->usr, "SYSTEM");
strcpy(p_intl_envdatastruct_h->subprocess,APL_NULL_STRING);
strcpy(p_intl_envdatastruct_h->h_process,APL_NULL_STRING);

fprintf(p_logfile,"Trade tructure ready \n");

	if (APL_FAILURE == DL_Proc_Trd(&l_sys_dl_deal_struct_ha,
   	                           &int_l_rpr_seq_num,
      	                        p_intl_envdatastruct_h,
         	                     l_debug_info_ptr) )
	{
		IS_ANY_ERROR_FATAL
		fprintf(p_logfile,"Trade Not Created \n");
  		fprintf(p_logfile, "CREATE TRADE FAILED : Account : %s Refno : %s\n", l_sys_dl_deal_struct_ha.h_dl_client,l_sys_dl_deal_struct_ha.h_indentity_no);
		CO_ProcMonitor(p_logfile,APL_NULL_STRING,l_debug_info_ptr,p_intl_envdatastruct_h);
		fprintf(p_misrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
		fprintf(p_misrpt_file,"Trade Not Created \n");
		APL_GOBACK_FAIL
	}
	else
	{
		fprintf(p_logfile,"Trade Created sucessfuly \n");
		fprintf(p_logfile,"Account = %s\n",l_sys_dl_deal_struct_ha.h_dl_client);
		fprintf(p_logfile,"Refno = %s\n",l_sys_dl_deal_struct_ha.h_indentity_no);
		fprintf(p_matrpt_file,"%s     %s   %s  %s  %s  %s  %s  %s  %lf  %s     ",chr_l_acc,chr_l_pad_refno,chr_l_trdt_a,chr_l_sd,chr_l_pad_qty,chr_l_bog,chr_l_isin,chr_l_trcode_a,l_cashamount,chr_l_cpcode); 
		fprintf(p_matrpt_file,"Trade Created sucessfuly \n");
		if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
   		                                 l_sys_dl_deal_struct_ha.h_indentity_no,
      		                              l_sys_dl_deal_struct_ha.h_dl_client,
         		                           'Y',
            		                        APL_NULL_STRING,
               		                     l_debug_info_ptr ) )
		{           
			fprintf(p_logfile,"Failed To Insert into IMSGENT table\n");
			CO_ProcMonitor(p_logfile,APL_NULL_STRING,l_debug_info_ptr,p_intl_envdatastruct_h);
			APL_GOBACK_FAIL
		}

		if (APL_FAILURE==EI_Mod_MQData(l_sys_dl_deal_struct_ha.h_dl_client,
   		                           l_sys_dl_deal_struct_ha.h_indentity_no,
      	                         NULL,
         	                      NULL,
            	                   "B",
               	                l_debug_info_ptr))
		{
			fprintf(p_logfile,"Failed To Insert into MQ Datawarehouse table\n");
			CO_ProcMonitor(p_logfile,APL_NULL_STRING,l_debug_info_ptr,p_intl_envdatastruct_h);
			APL_GOBACK_FAIL
		}
	}
}

EXEC SQL COMMIT WORK;
IS_ANY_ORA_ERROR
   RETURN_SUCCESS  :
   {
		memset(&l_dl_deal_hdat_struct_h,NULL,sizeof(DL_DEAL_HDAT_STRUCT_H));
		memset(&l_sys_dl_deal_struct_ha,NULL,sizeof(SYS_DL_DEAL_STRUCT_H));
      fprintf(p_logfile,"Success from CR_Proc_EOCUpd \n");
		CO_FreeErrLst(l_debug_info_ptr);
		fflush(p_logfile);
      return(APL_SUCCESS);
   }

   RETURN_FAILURE  :
   {
		memset(&l_dl_deal_hdat_struct_h,NULL,sizeof(DL_DEAL_HDAT_STRUCT_H));
		memset(&l_sys_dl_deal_struct_ha,NULL,sizeof(SYS_DL_DEAL_STRUCT_H));
      fprintf(p_logfile,"Failure from CR_Proc_EOCUpd [%d]\n",sqlca.sqlcode);
		CO_FreeErrLst(l_debug_info_ptr);
		fflush(p_logfile);
      return(APL_FAILURE);
   }
}
