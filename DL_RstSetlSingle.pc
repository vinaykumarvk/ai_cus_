












#include "CO_HostStructdef.h" 

#include "MS_Swift.h"

EXEC SQL INCLUDE SQLCA.H;

int DL_Proc_DLSetlTxnRst(DL_DEAL_RSTSST_STRUCT_H *,
		  int *,
  		  char *,
		  int,
		  INTL_ENV_DATA_STRUCT_H *,
		  DEBUG_INFO_STRUCT_H **);

int DL_Chk_MsgSnt(char *,
		char *,
		char *,
		char *,
		INTL_ENV_DATA_STRUCT_H *,
		DEBUG_INFO_STRUCT_H **);

int DL_Proc_DLSetlPosRst(DL_DEAL_RSTSST_STRUCT_H *,
		  int *,
	  	  char *,
		  INTL_ENV_DATA_STRUCT_H *,
		  DEBUG_INFO_STRUCT_H **);

int DL_Rtv_DLSetlRst(char *,
		char *,
		DL_DEAL_RSTSST_STRUCT_H *,
		DEBUG_INFO_STRUCT_H **);

int DL_Chk_DLRedom(	DL_DEAL_RSTSST_STRUCT_H *p_dl_deal_rstsst_struct_h,
								int *p_flg,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr );

int DL_Proc_DLSetlRst(DL_DEAL_RSTSST_STRUCT_H *l_dl_deal_rstsst_struct_h,
		char *chr_p_action,char *chr_p_access_stamp,
		INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

 

  DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_hd;
 
  DL_DEALRST_STRUCT_H *l_dl_dealrst_struct_h = NULL;
  DL_DEALRST_STRUCT_I *l_dl_dealrst_struct_i = NULL;
  struct sqlca sqlca;

  char chr_l_sysdt[APL_DATE_LEN];
  char chr_p_prntconfdt[APL_DATE_LEN];
  char chr_sys_date_time[APL_DATE_LEN];
  char chr_p_msgno_a[6];
  char chr_p_subfun[APL_SUB_FUN_LEN];
  char chr_p_compsts[3];
  char chr_l_mnewstatus[RECORD_STAT_LEN];
  char chr_l_moldstatus[RECORD_STAT_LEN];
  char chr_l_mrstinstr_dt[APL_DATE_LEN];
  char chr_l_mrstmoneydt[APL_DATE_LEN];
  char chr_l_msg_status[51]=APL_NULL_STRING;

  int int_p_safekrowid =0;

  short l_i_sysdt =0;
  short int_p_condexists = 0;
  short int_l_cond = 0;

  int int_p_setlqty =0;
  int int_error_flag = APL_SUCCESS;
  int int_p_mdtrstflg = APL_FAILURE;
  int int_p_enuf = APL_SUCCESS;
  int int_l_flg  = 0;
  int int_l_chkflg = 0;

  short p_i_rowid =0;
  short p_i_sys_date_time =0;
  short p_i_userid =0;
  short l_i_mrstinstr_dt =0;
  short l_i_mrstmoneydt =0;
  short l_i_moldstatus =0;

  
	char chr_l_fail_code[FAILREAS_CD_LEN]		= APL_NULL_STRING;
	short l_i_fail_code		= 0;
  

    char chr_param_string[200]= APL_NULL_STRING;
    int int_pcexist = 0;
    int int_msg_sent = 0;
    char   chr_tmp_rst_instr_dt[APL_DATE_LEN];
    char   chr_tmp_rst_moneydt[APL_DATE_LEN];
    char   chr_g_sys_date_time[APL_DATE_LEN];

    char   chr_l_typoftrade[3];
    char   chr_l_eventid[17];
    char   chr_l_prevseme[17];
    short  i_eventid=0;
    short  i_prevseme=0;



	int   int_p_smieligibility_flg = 0;
	char  chr_l_h_locncode_a[5]                        = APL_NULL_STRING;
   char  chr_l_h_trdt_a[20]                           = APL_NULL_STRING;
   char  chr_l_h_typeoftrd[3]                       = APL_NULL_STRING;
   char  chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN]             = APL_NULL_STRING;
   char  chr_l_h_locnchng_flg[2]                    = APL_NULL_STRING;

	short  l_i_locncode = 0;
   short  l_i_trdt = 0;
   short  l_i_typeoftrd = 0;
   short  l_i_instr_code = 0;
   short  l_i_locnchng_flg = 0;
	
	int int_l_scr_flg = 0;
	int int_l_one     = 1;
#ifdef APL_THREADS
		 APL_SET_CONTEXT
		 EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  l_dl_dealaudit_struct_hd = (DL_DEALAUDIT_STRUCT_H *)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H));

  l_dl_dealrst_struct_h = (DL_DEALRST_STRUCT_H *)calloc(1,sizeof(DL_DEALRST_STRUCT_H));
  l_dl_dealrst_struct_i = (DL_DEALRST_STRUCT_I *)calloc(1,sizeof(DL_DEALRST_STRUCT_I));
  APL_MALLOC_FAIL(l_dl_dealrst_struct_i);

 EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_dl_client IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_indentity_no IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_instr_code IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_setldt IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_classofdl IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_dealcd IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_origindentity_no IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_locindentity_no IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_domcpclt_cd IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_countclt IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_countcltnm IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_instrdate IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_moneydate IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_ispart_ IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_dlt IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_fail_cd IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_resetdt IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_msg_stat IS STRING;
   EXEC SQL VAR l_dl_dealrst_struct_h->h_clientof IS STRING;
	
	EXEC SQL VAR l_dl_dealrst_struct_h->h_instruct_person		IS STRING;
	EXEC SQL VAR l_dl_dealrst_struct_h->h_instruct_personnm 	IS STRING;
	EXEC SQL VAR l_dl_dealrst_struct_h->h_clientofcode	IS STRING;

	EXEC SQL VAR l_dl_dealrst_struct_h->h_inter_med_person      IS STRING;
	EXEC SQL VAR l_dl_dealrst_struct_h->h_inter_med_personnm    IS STRING; 

	
	EXEC SQL VAR l_dl_dealrst_struct_h->h_mod_hispos_ind	IS STRING;
	EXEC SQL VAR l_dl_dealrst_struct_h->h_loccode	IS STRING;
	

	EXEC SQL VAR chr_l_h_locncode_a                             IS STRING;
   EXEC SQL VAR chr_l_h_trdt_a                                 IS STRING;
   EXEC SQL VAR chr_l_h_typeoftrd                            IS STRING;
   EXEC SQL VAR chr_l_h_instrcode_A                               IS STRING;
   EXEC SQL VAR chr_l_h_locnchng_flg                         IS STRING;

   EXEC SQL VAR chr_l_typoftrade                             IS STRING;
   EXEC SQL VAR chr_l_eventid                                IS STRING;
   EXEC SQL VAR chr_l_prevseme                               IS STRING;

EXEC SQL END DECLARE SECTION;
 
 l_dl_dealrst_struct_i-> i_dl_client = 0;
 l_dl_dealrst_struct_i-> i_indentity_no = 0;
 l_dl_dealrst_struct_i-> i_amt = 0;
 l_dl_dealrst_struct_i-> i_instr_code = 0;
 l_dl_dealrst_struct_i-> i_qty = 0;
 l_dl_dealrst_struct_i-> i_setldt = 0;
 l_dl_dealrst_struct_i-> i_classofdl = 0;
 l_dl_dealrst_struct_i-> i_dealcd = 0;
 l_dl_dealrst_struct_i-> i_origindentity_no = 0;
 l_dl_dealrst_struct_i-> i_locindentity_no = 0;
 l_dl_dealrst_struct_i-> i_domcpclt_cd = 0;
 l_dl_dealrst_struct_i-> i_countclt = 0; 
 l_dl_dealrst_struct_i-> i_countcltnm = 0;
 l_dl_dealrst_struct_i-> i_instrdate = 0;
 l_dl_dealrst_struct_i-> i_moneydate = 0;
 l_dl_dealrst_struct_i-> i_ispart_ = 0;
 l_dl_dealrst_struct_i-> i_origquantity = 0;
 l_dl_dealrst_struct_i-> i_dlt = 0;
 l_dl_dealrst_struct_i-> i_failreas_cd = 0;
 l_dl_dealrst_struct_i-> i_entry = 0;
 l_dl_dealrst_struct_i-> i_resetdt = 0;
 l_dl_dealrst_struct_i-> i_msg_stat = 0;
 l_dl_dealrst_struct_i-> i_clientof = 0; 
 
 l_dl_dealrst_struct_i-> i_mod_hispos_ind = 0; 
 l_dl_dealrst_struct_i-> i_loccode = 0; 
 

 

l_dl_dealrst_struct_i-> i_instruct_person	=	0;
l_dl_dealrst_struct_i-> i_instruct_personnm = 0;
l_dl_dealrst_struct_i-> i_clientofcode	=	0;
l_dl_dealrst_struct_i-> i_inter_med_person     = 0;
l_dl_dealrst_struct_i-> i_inter_med_personnm   =  0; 


  strcpy(chr_p_msgno_a,APL_NULL_STRING);
  strcpy(chr_p_subfun,APL_NULL_STRING);
  strcpy(chr_p_compsts,STATUS_CONF);

APL_IF_DEBUG
	{
	CO_ProcMonitor(APL_OUT_FILE, 
		"Entered Function DL_Proc_DLSetlRst. Going for mandatory checks\n",
		NULL,p_intl_envdatastruct_h);
	}



  	if (!strlen(chr_p_action)) {APL_DATA_MISSING("Action",APL_NULL_STRING,APL_NULL_STRING);
  		int_error_flag = APL_FAILURE;}                 
  	if (!strlen(chr_p_access_stamp)) {APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING);
  		int_error_flag = APL_FAILURE;}                 



  if (int_error_flag == APL_FAILURE)
	{
	APL_GOBACK_FAIL
	}
 


	memset(chr_l_sysdt,APL_NULL_CHAR,APL_DATE_LEN);
	EXEC SQL SELECT SYS_DATE INTO :chr_l_sysdt:l_i_sysdt FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR

	
	memset(chr_l_msg_status,APL_NULL_CHAR,51);
   memset(chr_tmp_rst_instr_dt,APL_NULL_CHAR,APL_DATE_LEN);
   memset(chr_tmp_rst_moneydt,APL_NULL_CHAR,APL_DATE_LEN);
   strcpy(chr_tmp_rst_instr_dt,l_dl_deal_rstsst_struct_h->p_instrdate);
   strcpy(chr_tmp_rst_moneydt,l_dl_deal_rstsst_struct_h->p_moneydate);
	#ifdef EMU_PROCESSING

	

	if (APL_FAILURE == CO_Chk_EMU_Period(	l_dl_deal_rstsst_struct_h->p_instrdate,
													&int_l_chkflg,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	if (int_l_chkflg == 2)
	{
		if (APL_FAILURE == DL_Chk_DLRedom(	l_dl_deal_rstsst_struct_h,
															&int_l_flg,
															l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}
	
		if (int_l_flg)
		{
			CO_InsertErr(	l_debug_info_ptr,
				 					ERR_REDNEXIST_RESET_NOTALLOWED, 
				 					APL_NULL_STRING,
				 					APL_NULL_STRING,
				 					APL_NULL_STRING,
				 					__LINE__,
				 					__FILE__);
			APL_GOBACK_FAIL
		}
	}
	#endif

	
   if (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0)
   {
         EXEC SQL SELECT
                  LOCATION_CD,
                  DEAL_DATE,
                  DL_CLASS,
                  INSTR_CODE,
                  LOC_CHNG_IND
         INTO     :chr_l_h_locncode_a:l_i_locncode,
                  :chr_l_h_trdt_a:l_i_trdt,
                  :chr_l_h_typeoftrd:l_i_typeoftrd,
                  :chr_l_h_instrcode_A:l_i_instr_code,
                  :chr_l_h_locnchng_flg:l_i_locnchng_flg
         FROM
                  DL_DEAL
         WHERE
					ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		

			IS_ANY_ORA_ERROR

         if (EI_Chk_SMIElg(chr_l_h_locncode_a,
                                   chr_l_h_trdt_a,
                                   chr_l_h_typeoftrd,
                                   chr_l_h_instrcode_A,
                                   chr_l_h_locnchng_flg,
											  l_dl_deal_rstsst_struct_h->p_ora_rowid,
                                   &int_p_smieligibility_flg,
                                   p_intl_envdatastruct_h,
                                   l_debug_info_ptr
                                   ) == APL_FAILURE)
         {
            CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_envdatastruct_h);
            APL_GOBACK_FAIL;
         }
		  
			if(int_p_smieligibility_flg)
			{
				if(strcmp(p_intl_envdatastruct_h->h_mode,CHLD_RST_SETL_MODE) == 0)
				{
					int_l_scr_flg = 1;
				}
			}
	
      }



printf("\n");
printf("Action is %s,Flag is %d",chr_p_action,int_l_scr_flg);
printf("\n");

  if ((*chr_p_action =='S') && (int_l_scr_flg == 0))
     {
	int_p_mdtrstflg = APL_FAILURE;
 printf("\n Calling DL_Proc_DLSetlTxnRst 1 ..\n");
	DL_Proc_DLSetlTxnRst(l_dl_deal_rstsst_struct_h,
			&int_p_mdtrstflg,
			chr_p_access_stamp,
			int_p_smieligibility_flg,
	   	p_intl_envdatastruct_h,
			l_debug_info_ptr)	;
				printf("\n checking l_debuglist 1 ..\n");
  	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
     		{APL_GOBACK_FAIL }
				printf("\n done with checking l_debuglist 1 ..\n");
     }
	  


  if ((*chr_p_action =='B') && (int_l_scr_flg == 0))
     { 
	int_p_mdtrstflg = APL_SUCCESS;
 printf("\n Calling DL_Proc_DLSetlTxnRst 2 ..\n");
	DL_Proc_DLSetlTxnRst(l_dl_deal_rstsst_struct_h,
			&int_p_mdtrstflg,
			chr_p_access_stamp,
			int_p_smieligibility_flg,
	   	p_intl_envdatastruct_h,
			l_debug_info_ptr)	;
				printf("\n checking l_debuglist 2 ..\n");
  	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
     		{APL_GOBACK_FAIL }

     } 


  if ((*chr_p_action =='M') && (int_l_scr_flg == 0))
     {
     if(CO_RtvSysDtTime(chr_sys_date_time,l_debug_info_ptr) !=APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}
	
      int_p_condexists = 0;
      if ((APL_SUCCESS == CO_Chk_CntryEnabled ("TRD_SETTLEMENT_RESET", 	
				      		"MONEYDT_RST_CHG_QTY",
				      		&int_p_condexists,
				      		l_debug_info_ptr)) &&  (int_l_scr_flg == 0))
	{
	if (  (!strcmp(chr_p_access_stamp,l_dl_deal_rstsst_struct_h->p_cltstmp_cmp)) ||
			(	(strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0) &&
				(int_p_smieligibility_flg) ) )	
	   {
		
		strcpy(chr_l_fail_code,FAILREASON_539_INSTRSETL);
		l_i_fail_code = 0;
		
	   if (int_p_condexists == 0) 
	   	{
				
				
				int_l_cond = 0;
				if (APL_FAILURE == CO_Chk_CntryEnabled(	"TRD_GST_RST",
																	"HOSTDT_NOCHK_NULL",
																	&int_l_cond,
																	l_debug_info_ptr ))
				{
					APL_GOBACK_FAIL
				}

				
				
					EXEC SQL UPDATE DL_DEAL
					SET MONEY_SETL_DT = NULL,
					STATUS	= NULL,	
					ALLOW_DROPDT	= NULL,	
					HOST_DATE		= NULL,
			   	MAKER			= :p_intl_envdatastruct_h->usr:p_i_userid,
					MAKER_DT		= :chr_sys_date_time:p_i_sys_date_time,
					ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,
					FAILREASON_CD = :chr_l_fail_code:l_i_fail_code,		
					SUB_FAIL_CD	=	0,
					TOT_QTY	= 0,
					DL_COMPLETEQTY	= 0,
					PEND_REG_QTY	= 0,
					REC_INT_000 =0
					WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		

					IS_ANY_ORA_ERROR
				

		
	   	} 
	
	   if (int_p_condexists >0) 
	   	{
		int_p_condexists = 0;
		EXEC SQL UPDATE DL_DEAL
			SET MONEY_SETL_DT = NULL,
				STATUS	= NULL,	
				ALLOW_DROPDT	= NULL,	
				HOST_DATE		= NULL,		
			        MAKER		= :p_intl_envdatastruct_h->usr:p_i_userid,
				MAKER_DT		= :chr_sys_date_time:p_i_sys_date_time,
				FAILREASON_CD = :chr_l_fail_code:l_i_fail_code,		
				SUB_FAIL_CD	=	0,
				ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time
			WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		

		IS_ANY_ORA_ERROR


		
	   	} 
	   }
	else 
	   {
		if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	     }			
     }




				printf("\n again checking l_debuglist  ..\n");
  	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
     		{APL_GOBACK_FAIL }
				printf("\n done with again checking l_debuglist  ..\n");

			EXEC SQL VAR chr_l_mrstinstr_dt IS STRING;
			EXEC SQL VAR chr_l_mrstmoneydt IS STRING;
			EXEC SQL VAR chr_l_moldstatus IS STRING;

  			memset(chr_l_mrstinstr_dt,APL_NULL_CHAR,APL_DATE_LEN);
  			memset(chr_l_mrstmoneydt,APL_NULL_CHAR,APL_DATE_LEN);
  			memset(chr_l_mnewstatus,APL_NULL_CHAR,RECORD_STAT_LEN);
  			memset(chr_l_moldstatus,APL_NULL_CHAR,RECORD_STAT_LEN);

			EXEC SQL SELECT INSTRUMENT_DT, MONEY_SETL_DT, DEAL_STAT INTO
							:chr_l_mrstinstr_dt:l_i_mrstinstr_dt,
							:chr_l_mrstmoneydt:l_i_mrstmoneydt,
							:chr_l_moldstatus:l_i_moldstatus
								FROM DL_DEAL WHERE
						ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid;

			IS_ANY_ORA_ERROR

		if(int_l_scr_flg == 0)
		{
				printf("\n scr is 0  ..\n");
			if ((!strlen(chr_l_mrstinstr_dt)) && (!strlen(chr_l_mrstmoneydt)))
			{
				printf("\n scr is 1  ..\n");
				strcpy(chr_l_mnewstatus,STATUS_CONF);
				
				strcpy(chr_l_fail_code,APL_NULL_STRING);
				l_i_fail_code = -1;
				
				sqlca.sqlcode =0;

				EXEC SQL UPDATE DL_DEAL 
					SET DEAL_STAT =:chr_l_mnewstatus,
						FAILREASON_CD = :chr_l_fail_code:l_i_fail_code,			
						SUB_FAIL_CD	=	NULL
						WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid;

				IS_ANY_ORA_ERROR

				
			}
			else if ((!strlen(chr_l_mrstinstr_dt)) && (strlen(chr_l_mrstmoneydt)))
			{
				printf("\n scr is 2  ..\n");
				strcpy(chr_l_mnewstatus,STATUS_MON_SETL);
				
				strcpy(chr_l_fail_code,FAILREASON_539_MONEYSETL);
				l_i_fail_code = 0;
				
				sqlca.sqlcode =0;
				EXEC SQL UPDATE DL_DEAL 
					SET DEAL_STAT =:chr_l_mnewstatus,
						FAILREASON_CD = :chr_l_fail_code:l_i_fail_code,			
						SUB_FAIL_CD	=	0
						WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid;

				IS_ANY_ORA_ERROR
			}
			else if ((strlen(chr_l_mrstinstr_dt)) && (!strlen(chr_l_mrstmoneydt)))
			{
				printf("\n scr is 3  ..\n");
				strcpy(chr_l_mnewstatus,STATUS_INSTR_SETL);
				
				if (VAL_VP_DEAL(l_dl_deal_rstsst_struct_h->p_dealcd[0]))
				{
					strcpy(chr_l_fail_code,FAILREASON_539_INSTRSETL);
					l_i_fail_code = 0;
				}
				else
				{
					strcpy(chr_l_fail_code,APL_NULL_STRING);
					l_i_fail_code = -1;
				}
				
				sqlca.sqlcode =0;
				if(l_i_fail_code == -1)
				{

					EXEC SQL UPDATE DL_DEAL 
						SET DEAL_STAT =:chr_l_mnewstatus,
								FAILREASON_CD = :chr_l_fail_code:l_i_fail_code,			
								SUB_FAIL_CD	=	NULL
								WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid;

					IS_ANY_ORA_ERROR
				}
				else
				{

					EXEC SQL UPDATE DL_DEAL 
						SET DEAL_STAT =:chr_l_mnewstatus,
								FAILREASON_CD = :chr_l_fail_code:l_i_fail_code,			
								SUB_FAIL_CD	=	0	
								WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid;

					IS_ANY_ORA_ERROR
				}
			}

				printf("\n done with scr is 1  ..\n");
			
			if (strcmp(chr_l_moldstatus,STATUS_SETL)==0)
			{
				if (g_mt_commonsys_params_struct_h.ccs_ind[0] == 'Y')
				{
            	if (  DL_Mod_CCSPendDL(l_dl_deal_rstsst_struct_h->p_client,
                              l_dl_deal_rstsst_struct_h->p_indentity_no,
                              MS_CCS_SR,
                              APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                              l_debug_info_ptr) == APL_FAILURE  )
            	{
                	CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_envdatastruct_h);
                	APL_GOBACK_FAIL;
            	}				
				}
				else
				{
                  

                  EXEC SQL DELETE FROM DL_CCSPENDTXN WHERE
                     MSG_CLASS = 'XS' AND
                     IDENTITY = (SELECT UNIQ_IDENT_NO from DL_DEAL WHERE 
												IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no AND
												CLIENT = :l_dl_deal_rstsst_struct_h->p_client);

                  IS_ANY_ORA_ERROR
				}
			}
			
			printf("\n end CCS \n");
         strcpy(l_dl_dealaudit_struct_hd->h_dl_client,l_dl_deal_rstsst_struct_h->p_client);
		   strcpy(l_dl_dealaudit_struct_hd->h_indentity_no,l_dl_deal_rstsst_struct_h->p_indentity_no);
		   strcpy(l_dl_dealaudit_struct_hd->h_trail_for,"T");
		   strcpy(l_dl_dealaudit_struct_hd->h_processdetail,p_intl_envdatastruct_h->processtion);
		   strcpy(l_dl_dealaudit_struct_hd->h_proc_usr,p_intl_envdatastruct_h->usr);
		   strcpy(l_dl_dealaudit_struct_hd->h_subprocess,APL_NULL_STRING);
		   strcpy(l_dl_dealaudit_struct_hd->h_fail_cd,chr_l_fail_code);  
		   strcpy(l_dl_dealaudit_struct_hd->h_dlfromord,l_dl_deal_rstsst_struct_h->p_dlfromord);
    	   l_dl_dealaudit_struct_hd->h_qty =l_dl_deal_rstsst_struct_h->p_quantity ;

			if (*chr_p_action == 'M')
		   strcpy(l_dl_dealaudit_struct_hd->h_subprocess,SETTLE_MD);
			else if (*chr_p_action == 'S')
		   strcpy(l_dl_dealaudit_struct_hd->h_subprocess,SETTLE_SD);
			else if (*chr_p_action == 'B')
		   strcpy(l_dl_dealaudit_struct_hd->h_subprocess,SETTLE_SD_MD);

			printf("\n Calling CR_Mod_CLHAudTrail \n");
      	   if(APL_SUCCESS != CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_hd,l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			printf("\n Done with CR_Mod_CLHAudTrail \n");
		}

  
 
   EXEC SQL SELECT NVL(COUNT(*),0) into :int_msg_sent
         FROM DL_DEAL
         WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
         AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client
         AND instr(nvl(MSG_STAT,' '),'B') > 0
			AND DEAL_STAT = decode(:int_l_scr_flg,0,'CC','CS');

    IS_ANY_ORA_ERROR
 
		printf("msg_sent=(%d)\n",int_msg_sent);
		printf("l_rstsst_struct_h->p_instrdate=(%s)\n",l_dl_deal_rstsst_struct_h->p_instrdate);
		printf("l_rstsst_struct_h->p_mod_hispos_ind=(%s)\n",l_dl_deal_rstsst_struct_h->p_mod_hispos_ind);
    if ( (int_msg_sent > 0) || ((*chr_p_action != 'M' && strcmp(l_dl_deal_rstsst_struct_h->p_instrdate,chr_l_sysdt) && !strcmp(l_dl_deal_rstsst_struct_h->p_mod_hispos_ind,APL_NULL_STRING)) )) 
    {
      if (CO_RtvSysDt(chr_g_sys_date_time, l_debug_info_ptr) == APL_FAILURE)
				APL_GOBACK_FAIL

		printf("g_sys_date_time is (%s)\n",chr_g_sys_date_time);
      EXEC SQL SELECT NVL(COUNT(*),0) into :int_pcexist
           FROM DL_DEALRST
           WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
           AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client
			  AND to_char(RESET_DT,'DD/MM/YYYY') = (select to_char(SYS_DATE, 'DD/MM/YYYY') from pro_sys_date);
		/*shailesh 01-04-2008 chr_mm to mm(not related to any issue )*/    
      IS_ANY_ORA_ERROR  


      if (int_pcexist == 0)
      {
      

 		l_dl_dealrst_struct_i->i_dl_client 		= 0;
 		l_dl_dealrst_struct_i->i_indentity_no 		= 0;
 		l_dl_dealrst_struct_i->i_amt 		= 0;
 		l_dl_dealrst_struct_i->i_instr_code 		= 0;
 		l_dl_dealrst_struct_i->i_qty 			= 0;
 		l_dl_dealrst_struct_i->i_setldt 	= 0;
 		l_dl_dealrst_struct_i->i_classofdl 	= 0;
 		l_dl_dealrst_struct_i->i_dealcd 		= 0;
 		l_dl_dealrst_struct_i->i_origindentity_no 	= 0;
 		l_dl_dealrst_struct_i->i_locindentity_no 	= 0;
 		l_dl_dealrst_struct_i->i_domcpclt_cd 		= 0;
 		l_dl_dealrst_struct_i->i_countclt 	= 0; 
 		l_dl_dealrst_struct_i->i_countcltnm 	= 0;
 		l_dl_dealrst_struct_i->i_instrdate 		= 0;
 		l_dl_dealrst_struct_i->i_moneydate 		= 0;
 		l_dl_dealrst_struct_i->i_ispart_ 	= 0;
 		l_dl_dealrst_struct_i->i_origquantity 		= 0;
 		l_dl_dealrst_struct_i->i_dlt 			= 0;
 		l_dl_dealrst_struct_i->i_failreas_cd 	= 0;
 		l_dl_dealrst_struct_i->i_entry 	= 0;
 		l_dl_dealrst_struct_i->i_resetdt 	= 0;
 		l_dl_dealrst_struct_i->i_msg_stat 	= 0;
 		l_dl_dealrst_struct_i->i_clientof 	= 0; 
		
		l_dl_dealrst_struct_i->i_instruct_person	= 0;
		l_dl_dealrst_struct_i->i_instruct_personnm	= 0;
		l_dl_dealrst_struct_i->i_clientofcode = 0;
		l_dl_dealrst_struct_i->i_inter_med_person      = 0;
		l_dl_dealrst_struct_i->i_inter_med_personnm    = 0; 

		
		l_dl_dealrst_struct_i->i_mod_hispos_ind = 0;
		l_dl_dealrst_struct_i->i_loccode		 = 0;
		

		
		
      EXEC SQL SELECT client,IDENTIY_NO,nvl(AMOUNT,0),instr_code,QTY,setl_date,dl_class,deal_cd,ORIG_REFNO,nvl(lcl_identno,' '),domestic_cpclt,nvl(cp_clt,' '),nvl(CP_CLTNAME,' '),INSTRUMENT_DT,MONEY_SETL_DT,PARTIAL_IND_B,ORIG_QTY,deal_date,nvl(failreason_cd,' '),ENTRY,:chr_g_sys_date_time,ltrim(rtrim(MSG_STAT)),nvl(clientof,' '),INSTRUCT_PERSON,INSTRUCT_PERSONNM,CLIENTOF_CD,INTER_MED_PERSON,INTER_MED_PERSONNM,'Y',location_cd
        INTO :l_dl_dealrst_struct_h:l_dl_dealrst_struct_i
        FROM DL_DEAL
        WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
        AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client;

		

      IS_ANY_ORA_ERROR
       
       l_dl_dealrst_struct_i-> i_instrdate = 0;
       l_dl_dealrst_struct_i-> i_moneydate = 0;
      
      memset(l_dl_dealrst_struct_h->h_instrdate,APL_NULL_CHAR,APL_DATE_LEN);
      memset(l_dl_dealrst_struct_h->h_moneydate,APL_NULL_CHAR,APL_DATE_LEN);
		strcpy(chr_l_msg_status,l_dl_dealrst_struct_h->h_msg_stat);

		 
      
		if (int_msg_sent == 0)
		{
      	strcpy(l_dl_dealrst_struct_h->h_msg_stat,"R"); 
			l_dl_dealrst_struct_i->i_msg_stat=0;
		}
		else
		{
      	strcpy(l_dl_dealrst_struct_h->h_msg_stat,APL_NULL_STRING); 
			l_dl_dealrst_struct_i->i_msg_stat=-1;
		}
		 

      strcpy(l_dl_dealrst_struct_h->h_instrdate,chr_tmp_rst_instr_dt);
      strcpy(l_dl_dealrst_struct_h->h_moneydate,chr_tmp_rst_moneydt);

		if (strcmp(l_dl_dealrst_struct_h->h_ispart_," ")== 0 )
         strcpy(l_dl_dealrst_struct_h->h_ispart_, APL_NULL_STRING);

		
		if (*chr_p_action != 'M' && strcmp(l_dl_dealrst_struct_h->h_instrdate,chr_l_sysdt) && !strcmp(l_dl_deal_rstsst_struct_h->p_mod_hispos_ind,APL_NULL_STRING))
		{
			strcpy(l_dl_dealrst_struct_h->h_mod_hispos_ind,"Y");
			l_dl_dealrst_struct_i->i_mod_hispos_ind=0;
		}
		else
		{
			strcpy(l_dl_dealrst_struct_h->h_mod_hispos_ind,APL_NULL_STRING);
			l_dl_dealrst_struct_i->i_mod_hispos_ind=-1;
		}
		
 
		sqlca.sqlcode = 0;
      EXEC SQL INSERT INTO DL_DEALRST
            VALUES (:l_dl_dealrst_struct_h:l_dl_dealrst_struct_i);
      IS_ANY_ORA_ERROR
  		if(strstr(chr_l_msg_status,"Z")!=0)
      {
         strcpy(l_dl_dealrst_struct_h->h_msg_stat,"P");
         l_dl_dealrst_struct_i->i_msg_stat=0;
         strcpy(l_dl_dealrst_struct_h->h_mod_hispos_ind,APL_NULL_STRING);
			sqlca.sqlcode = 0;
         EXEC SQL INSERT INTO DL_DEALRST
            VALUES (:l_dl_dealrst_struct_h:l_dl_dealrst_struct_i);
         IS_ANY_ORA_ERROR
      }

	if (!strcmp(chr_l_mnewstatus,STATUS_CONF))
	{
    sqlca.sqlcode=0;
    EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'B') - 1) ||
               substr(MSG_STAT, instr(MSG_STAT,'B') + 1, length(MSG_STAT))
               WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
               AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
               AND INSTR(NVL(MSG_STAT,' '),'B') > 0
               AND (INSTRUMENT_DT IS NULL  OR :int_l_scr_flg = :int_l_one );


				  IS_ANY_ORA_ERROR

               EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'I') - 1) ||
               substr(MSG_STAT, instr(MSG_STAT,'I') + 1, length(MSG_STAT))
               WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
               AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
               AND INSTR(NVL(MSG_STAT,' '),'I') > 0
               AND (INSTRUMENT_DT IS NULL OR :int_l_scr_flg = :int_l_one);

					IS_ANY_ORA_ERROR

    EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'X') - 1) ||
               substr(MSG_STAT, instr(MSG_STAT,'X') + 1, length(MSG_STAT))
               WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
               AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
               AND INSTR(NVL(MSG_STAT,' '),'X') > 0
               AND (INSTRUMENT_DT IS NULL  OR :int_l_scr_flg = :int_l_one );


				  IS_ANY_ORA_ERROR

    EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'Z') - 1) ||
               substr(MSG_STAT, instr(MSG_STAT,'Z') + 1, length(MSG_STAT))
               WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
               AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
               AND INSTR(NVL(MSG_STAT,' '),'Z') > 0
               AND (INSTRUMENT_DT IS NULL  OR :int_l_scr_flg = :int_l_one );


				  IS_ANY_ORA_ERROR
		}
     }
      else
    	          	if(CO_InsertErr(l_debug_info_ptr,ERR_CANT_RESET_AGAIN,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
               APL_GOBACK_FAIL
    }
 
    int_pcexist = 0; 
 
	if(int_l_scr_flg == 0)
	{
   	 EXEC SQL SELECT NVL(COUNT(*),0) into :int_pcexist
      	   FROM DL_DEAL
         	WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
         	AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client
         	AND ((instr(nvl(MSG_STAT,' '),'A') > 0) OR  (instr(nvl(MSG_STAT,' '),'C') > 0)); 
			/*shailesh 28-03-2008 ISKB 997 ISSUE LOG 94*/

 	   IS_ANY_ORA_ERROR
   

 	   if (int_pcexist >0) 
   	{
        
         memset(chr_l_typoftrade,APL_NULL_CHAR,3);
         EXEC SQL SELECT DL_CLASS INTO :chr_l_typoftrade
                  FROM DL_DEAL
                  WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
                  AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client
                  AND ((instr(nvl(MSG_STAT,' '),'A') > 0) OR  (instr(nvl(MSG_STAT,' '),'C') > 0)); 
			/*shailesh 28-03-2008 ISKB 997 ISSUE LOG 94*/

         IS_ANY_ORA_ERROR
 
         if (!strcmp(chr_l_typoftrade,RTSPROCDEAL))
         {
            printf("New status_ind is :%s:",chr_l_mnewstatus);
            if (strcmp(chr_l_mnewstatus,"CC")==0)
            {
          memset(chr_l_prevseme,APL_NULL_CHAR,17);
          memset(chr_l_eventid,APL_NULL_CHAR,17);
          EXEC SQL SELECT SWIFT_MSGREFNO,EVENT_ID INTO :chr_l_prevseme:i_prevseme , :chr_l_eventid:i_eventid
                   FROM DEAL_EVNTIDLINK
                   WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
                   AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client
                   AND SWIFT_MSG_NO = '563N05'
                   AND ACCESS_STAMP = ( SELECT MAX(ACCESS_STAMP) FROM DEAL_EVNTIDLINK WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
                                        AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client AND SWIFT_MSG_NO = '563N05');

          IS_ANY_ORA_ERROR

          strcpy(chr_param_string,l_dl_deal_rstsst_struct_h->p_instr_code);    
          strcat(chr_param_string,";");
          strcat(chr_param_string,chr_l_eventid);   
          strcat(chr_param_string,";");
          strcat(chr_param_string,chr_l_prevseme);  
          strcat(chr_param_string,";");
          strcat(chr_param_string,"R");  
          strcat(chr_param_string,";");
          strcat(chr_param_string,chr_tmp_rst_instr_dt); 
          strcat(chr_param_string,";");
          strcat(chr_param_string,chr_tmp_rst_moneydt); 
          strcat(chr_param_string,";");


          if (APL_FAILURE == GBDbInsIMSGENT(  "563N05",
                                              l_dl_deal_rstsst_struct_h->p_indentity_no,
                                              l_dl_deal_rstsst_struct_h->p_client,
                                              'Y',
                                              chr_param_string,
                                              l_debug_info_ptr ))
               {
                  APL_GOBACK_FAIL
               }
             EXEC SQL UPDATE DL_DEAL
             SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'A') - 1) ||
             substr(MSG_STAT, instr(MSG_STAT,'A') + 1, length(MSG_STAT))
             WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
             AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
             AND INSTR(NVL(MSG_STAT,' '),'A') > 0
             AND INSTRUMENT_DT IS NULL;      
   
             IS_ANY_ORA_ERROR
         
             EXEC SQL UPDATE DL_DEAL
             SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'C') - 1) ||
             substr(MSG_STAT, instr(MSG_STAT,'C') + 1, length(MSG_STAT))
             WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
             AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
             AND INSTR(NVL(MSG_STAT,' '),'C') > 0
             AND INSTRUMENT_DT IS NULL;

             IS_ANY_ORA_ERROR
            }
        else 
            {
              EXEC SQL UPDATE DL_DEAL
              SET MSG_STAT = ltrim(rtrim(MSG_STAT))||'C'
              WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
              AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
              AND INSTR(NVL(MSG_STAT,' '),'C') = 0;

              IS_ANY_ORA_ERROR  
            }
         }
         else
         {
 	       strcpy(chr_param_string,chr_tmp_rst_instr_dt);  
   	    strcat(chr_param_string,";");
      	 strcat(chr_param_string," ");  
       	 strcat(chr_param_string,";");
       	 strcat(chr_param_string," ");  
       	 strcat(chr_param_string,";");
       	 strcat(chr_param_string,"R");  
       	 strcat(chr_param_string,";");


		if(*chr_p_action !='M')	/*shailesh 28-03-2008 ISKB 997 Issue log 94*/
		      {
   	                  if (APL_FAILURE == GBDbInsIMSGENT(  "53x",
      	                                    l_dl_deal_rstsst_struct_h->p_indentity_no,
         	                                 l_dl_deal_rstsst_struct_h->p_client,
            	                              'Y',
               	                           chr_param_string,
                  	                        l_debug_info_ptr ))
                                {
                                   APL_GOBACK_FAIL
                                 }
			}
          if (strcmp(chr_l_mnewstatus,"CC")==0)
             {
               EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'C') - 1) ||
               substr(MSG_STAT, instr(MSG_STAT,'C') + 1, length(MSG_STAT))
               WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
               AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
               AND INSTR(NVL(MSG_STAT,' '),'C') > 0
               AND INSTRUMENT_DT IS NULL;

               IS_ANY_ORA_ERROR
             }
          else
             {
               EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = ltrim(rtrim(MSG_STAT))||'C'
               WHERE CLIENT=RTRIM(:l_dl_deal_rstsst_struct_h->p_client)
               AND   IDENTIY_NO  =RTRIM(:l_dl_deal_rstsst_struct_h->p_indentity_no)
               AND INSTR(NVL(MSG_STAT,' '),'C') = 0;

               IS_ANY_ORA_ERROR
             }
   	   }
      }
	}





			if(int_l_scr_flg == 0)
			{
         if (APL_FAILURE==EI_Mod_MQData(l_dl_deal_rstsst_struct_h->p_client,
                                        l_dl_deal_rstsst_struct_h->p_indentity_no,
                                        NULL,
                                        NULL,
                                        "B",
                                        l_debug_info_ptr))
               APL_GOBACK_FAIL
			}

  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
     {APL_GOBACK_FAIL }

	
	if (int_l_scr_flg == 1)
	{
		int_p_mdtrstflg = APL_SUCCESS;
 printf("\n Calling DL_Proc_DLSetlTxnRst 3 ..\n");
   	DL_Proc_DLSetlTxnRst(l_dl_deal_rstsst_struct_h,
      	   &int_p_mdtrstflg,
         	chr_p_access_stamp,
         	int_p_smieligibility_flg,
         	p_intl_envdatastruct_h,
         	l_debug_info_ptr)  ;
				printf("\n checking l_debuglist 3 ..\n");
   			if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
         	{
					APL_GOBACK_FAIL 
				}
	}

  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
     {APL_GOBACK_FAIL }

  APL_GOBACK_SUCCESS
 
  RETURN_SUCCESS :
	{
	free(l_dl_dealaudit_struct_hd); 
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
	free(l_dl_dealaudit_struct_hd); 
	return(APL_FAILURE);
	}
}

int DL_Proc_DLSetlTxnRst(DL_DEAL_RSTSST_STRUCT_H *l_dl_deal_rstsst_struct_h,
		  int *p_flag,char *chr_p_access_stamp,
		  int	int_p_smieligibility_flg,
		  INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
		  DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 

  DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_hd;

  struct sqlca sqlca;

  char chr_sys_date_time[APL_DATE_LEN];
  char chr_p_msgno_a[6];
  char chr_p_compsts[3];
  char chr_l_rstinstr_dt[APL_DATE_LEN];
  char chr_l_rstmoneydt[APL_DATE_LEN];
  char chr_l_newstatus[RECORD_STAT_LEN];

  int int_p_safekrowid =0;

  short int_p_condexists = 0;
  short int_l_cond = 0;
  int int_p_setlqty =0;
  int int_error_flag = APL_SUCCESS;
  int int_p_enuf = APL_SUCCESS;

	 int int_l_SLBcount = 0;   /* Added By Vijay For SLB Deal Reset */

  short p_i_rowid =0;
  short p_i_sys_date_time =0;
  short p_i_userid =0;
  short p_i_account =0;
  short p_i_refno =0;
  short l_i_rstinstr_dt =0;
  short l_i_rstmoneydt =0;


	

  char chr_h_smi_origrefno[APL_TXNREFNO_LEN]   = APL_NULL_STRING;
  char chr_l_smi_childstat[RECORD_STAT_LEN]   = APL_NULL_STRING;
  char chr_param_string[50]= APL_NULL_STRING;
  int int_pcexist = 0;
  double  h_smi_quantity     = 0;
  double dbl_h_smi_amount   = 0;
  short i_smi_origrefno = 0;
  short i_smi_qty       = 0;
  short i_smi_amount    = 0;
  int int_l_smi_scr         = 0;

  EXEC SQL BEGIN DECLARE SECTION;
	
	EXEC SQL VAR chr_h_smi_origrefno IS STRING;

  EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
		 APL_SET_CONTEXT
		 EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  l_dl_dealaudit_struct_hd = (DL_DEALAUDIT_STRUCT_H *)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H));



  strcpy(chr_p_msgno_a,APL_NULL_STRING);
  strcpy(chr_p_compsts,STATUS_CONF);

APL_IF_DEBUG
	{
	CO_ProcMonitor(APL_OUT_FILE, 
				"Entered Function DL_Proc_DLSetlTxnRst. Going for mandatory checks\n",
				NULL,p_intl_envdatastruct_h);
	}



  	if (!strlen(chr_p_access_stamp)) {APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING);
  		int_error_flag = APL_FAILURE;}                 

  

  if (int_error_flag == APL_FAILURE)
	{
	APL_GOBACK_FAIL
	}
 




      int_p_condexists = 0;
      if (APL_SUCCESS == CO_Chk_CntryEnabled ("TRD_SETTLEMENT_RESET", 	
				      		"INSTR_DT_RST_CHG_QTY",
				      		&int_p_condexists,
			      			l_debug_info_ptr)) 
	{
        if(CO_RtvSysDtTime(chr_sys_date_time,l_debug_info_ptr) !=APL_SUCCESS)
	  {
	  APL_GOBACK_FAIL
	  }
	
	

	int_l_cond = 0;

	

	if (	(!strcmp(chr_p_access_stamp,l_dl_deal_rstsst_struct_h->p_cltstmp_cmp)) ||
			(	(strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0) &&
				(int_p_smieligibility_flg) ) )
	   {

		

		

		if ((strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0) && (int_p_smieligibility_flg) && (!strcmp(p_intl_envdatastruct_h->h_mode,CHLD_RST_SETL_MODE)))
		{
			
			int_l_smi_scr = 1;
		}	
		else
			int_l_smi_scr = 0;


	   if ((int_p_condexists == 0) && (*p_flag == APL_SUCCESS) && int_l_smi_scr == 0 )
		{
	     	

			if (l_dl_deal_rstsst_struct_h->p_mod_hispos_ind[0] =='Y')
		   {
				
			   	EXEC SQL UPDATE DL_DEAL
					SET INSTRUMENT_DT = NULL,
					MONEY_SETL_DT		= NULL,
					HOST_DATE		= NULL,
					STATUS	= NULL,	
					ALLOW_DROPDT	= NULL,	
					REPORT_AT_EOM_IND	= NULL,		
				   MAKER		= :p_intl_envdatastruct_h->usr:p_i_userid,
					MAKER_DT		= :chr_sys_date_time:p_i_sys_date_time,
					ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,
					MOD_HISPOS_IND = NULL,		
					MOD_HISPOS_DATE = NULL,
					DELTA_000	= 0,
					DELTA_001	= 0,
					DELTA_003	= 0,
					DL_COMPLETEQTY	= 0,
					REC_INT_000 =0,
					PEND_REG_QTY	= 0
					WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		
	
			   	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																		l_dl_deal_rstsst_struct_h->p_client,
																		l_dl_deal_rstsst_struct_h->p_indentity_no,
																		APL_NULL_STRING);
				
		   }

			else  
		   {	
			   	EXEC SQL UPDATE DL_DEAL
					SET INSTRUMENT_DT		= NULL,
					MONEY_SETL_DT		= NULL,
					HOST_DATE		= NULL,
					STATUS	= NULL,	
					ALLOW_DROPDT	= NULL,	
					REPORT_AT_EOM_IND	= NULL,		
				   MAKER		= :p_intl_envdatastruct_h->usr:p_i_userid,
					MAKER_DT		= :chr_sys_date_time:p_i_sys_date_time,
					ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,
					MOD_HISPOS_IND = NULL,		
					MOD_HISPOS_DATE = NULL,
					DELTA_000	= 0,
					DELTA_001	= 0,
					DELTA_003	= 0,
					DL_COMPLETEQTY	= 0,
					REC_INT_000 =0,
					PEND_REG_QTY	= 0
					WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		
	
			   	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																		l_dl_deal_rstsst_struct_h->p_client,
																		l_dl_deal_rstsst_struct_h->p_indentity_no,
																		APL_NULL_STRING);
				
		   }

		
		} 
	
		

	   if ((int_p_condexists == 0) && (*p_flag == APL_FAILURE)&& int_l_smi_scr == 0 )
		{
	     	

		if (l_dl_deal_rstsst_struct_h->p_mod_hispos_ind[0] =='Y')
		   {  
			   	EXEC SQL UPDATE DL_DEAL
					SET INSTRUMENT_DT = NULL,
					HOST_DATE	 = NULL,
					STATUS	= NULL,	
					ALLOW_DROPDT	= NULL,	
					REPORT_AT_EOM_IND	= NULL,		
					ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,  
					MOD_HISPOS_IND = NULL,		
					MOD_HISPOS_DATE = NULL,
					DELTA_000	= 0,
					DELTA_001	= 0,
					DELTA_003	= 0,
					DL_COMPLETEQTY	= 0,
					REC_INT_000 =0,
					PEND_REG_QTY	= 0
					WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		
	
			   	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																		l_dl_deal_rstsst_struct_h->p_client,
																		l_dl_deal_rstsst_struct_h->p_indentity_no,
																		APL_NULL_STRING);
				
		   }
	
			else
		   {  
			   	EXEC SQL UPDATE DL_DEAL
					SET INSTRUMENT_DT 		= NULL,
					HOST_DATE		= NULL,
					STATUS	= NULL,	
					ALLOW_DROPDT	= NULL,	
					REPORT_AT_EOM_IND	= NULL,		
					ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,  
					MOD_HISPOS_IND = NULL,		
					MOD_HISPOS_DATE = NULL,
					DELTA_000	= 0,
					DELTA_001	= 0,
					DELTA_003	= 0,
					DL_COMPLETEQTY	= 0,
					REC_INT_000 =0,
					PEND_REG_QTY	= 0
					WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		
	
			   	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																		l_dl_deal_rstsst_struct_h->p_client,
																		l_dl_deal_rstsst_struct_h->p_indentity_no,
																		APL_NULL_STRING);
				
		   }

		
		}

		

	    if ((int_p_condexists > 0) && (*p_flag == APL_SUCCESS) && int_l_smi_scr == 0) 
		{
		

		if (l_dl_deal_rstsst_struct_h->p_mod_hispos_ind[0] =='Y')
		   {	
		   EXEC SQL UPDATE DL_DEAL
			SET INSTRUMENT_DT = NULL,
				MONEY_SETL_DT		= NULL,
				STATUS	= NULL,	
				ALLOW_DROPDT	= NULL,	
				REPORT_AT_EOM_IND	= NULL,		
			   MAKER		= :p_intl_envdatastruct_h->usr:p_i_userid,
				MAKER_DT		= :chr_sys_date_time:p_i_sys_date_time,
				ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,
				MOD_HISPOS_IND = NULL,		
				MOD_HISPOS_DATE = NULL,
				HOST_DATE 		= NULL,		
				DELTA_000	= 0,
				DELTA_001	= 0,
				DELTA_003	= 0,
				PEND_REG_QTY	= 0,
				REC_INT_000	= 0,
				DL_COMPLETEQTY	= 0,
				TOT_QTY	= 0
			WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		

		   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																l_dl_deal_rstsst_struct_h->p_client,
																l_dl_deal_rstsst_struct_h->p_indentity_no,
																APL_NULL_STRING);
		   }

		else
		   {	
		   EXEC SQL UPDATE DL_DEAL
			SET INSTRUMENT_DT 		= NULL,
				MONEY_SETL_DT		= NULL,
				STATUS	= NULL,	
				ALLOW_DROPDT	= NULL,	
				REPORT_AT_EOM_IND	= NULL,		
			   MAKER		= :p_intl_envdatastruct_h->usr:p_i_userid,
				MAKER_DT		= :chr_sys_date_time:p_i_sys_date_time,
				ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,
				MOD_HISPOS_IND = NULL,		
				MOD_HISPOS_DATE = NULL,
				HOST_DATE      = NULL,     
				DELTA_000	= 0,
				DELTA_001	= 0,
				DELTA_003	= 0,
				PEND_REG_QTY	= 0,
				REC_INT_000	= 0,
				DL_COMPLETEQTY	= 0,
				TOT_QTY	= 0
			WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		

		   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																l_dl_deal_rstsst_struct_h->p_client,
																l_dl_deal_rstsst_struct_h->p_indentity_no,
																APL_NULL_STRING);
		   }
		
		} 

		

	    if ((int_p_condexists > 0) && (*p_flag== APL_FAILURE) && int_l_smi_scr == 0)
		
		{
		if (l_dl_deal_rstsst_struct_h->p_mod_hispos_ind[0] =='Y')
		   {	
		   EXEC SQL UPDATE DL_DEAL
			SET INSTRUMENT_DT = NULL,
				STATUS	= NULL,	
				ALLOW_DROPDT	= NULL,	
				HOST_DATE      = NULL,     
				REPORT_AT_EOM_IND	= NULL,		
				ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,  
				MOD_HISPOS_IND = NULL,		
				MOD_HISPOS_DATE = NULL,
				DELTA_000	= 0,
				DELTA_001	= 0,
				DELTA_003	= 0,
				PEND_REG_QTY	= 0,
				REC_INT_000	= 0,
				DL_COMPLETEQTY	= 0,
				TOT_QTY	= 0
			WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		

		   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																l_dl_deal_rstsst_struct_h->p_client,
																l_dl_deal_rstsst_struct_h->p_indentity_no,
																APL_NULL_STRING);
		   }

		else
		   {	
		   EXEC SQL UPDATE DL_DEAL
			SET INSTRUMENT_DT 		= NULL,
				STATUS	= NULL,	
				ALLOW_DROPDT	= NULL,	
				HOST_DATE      = NULL,     
				REPORT_AT_EOM_IND	= NULL,		
				ACCESS_STAMP= :chr_sys_date_time:p_i_sys_date_time,  
				MOD_HISPOS_IND = NULL,		
				MOD_HISPOS_DATE = NULL,
				DELTA_000	= 0,
				DELTA_001	= 0,
				DELTA_003	= 0,
				PEND_REG_QTY	= 0,
				REC_INT_000	= 0,
				DL_COMPLETEQTY	= 0,
				TOT_QTY	= 0
			WHERE ROWID =:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;		

		   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
																l_dl_deal_rstsst_struct_h->p_client,
																l_dl_deal_rstsst_struct_h->p_indentity_no,
																APL_NULL_STRING);
		   }

		
		} 
	   }
	else 
	   {
		if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 


   /** Added By Vijay For SLB Deal Reset **/
   EXEC SQL SELECT COUNT(*)
              INTO :int_l_SLBcount
            FROM DL_DEAL_REV
            WHERE CLIENT = :l_dl_deal_rstsst_struct_h->p_client
              AND IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no;

   IS_ANY_ORA_ERROR

   if(int_l_SLBcount > 0)
   {
      EXEC SQL DELETE FROM DL_DEAL_REV
               WHERE CLIENT = :l_dl_deal_rstsst_struct_h->p_client
                 AND IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no;

      IS_ANY_ORA_ERROR
   }
   else
   {
      printf("Not A SLB Deal.No Entry in DL_DEAL_REV \n");
   }

   /** SLB DEAL Reset --------Ends **/

	
       if (((!strlen(l_dl_deal_rstsst_struct_h->p_instrdate)) ||
	  	(!strlen(l_dl_deal_rstsst_struct_h->p_moneydate)))&& 
		((l_dl_deal_rstsst_struct_h->p_dealcd[0] == DEALCD_RF) 
	        || (l_dl_deal_rstsst_struct_h->p_dealcd[0] == DEALCD_RVP)))	
	{
 	  EXEC SQL DELETE FROM DL_REGPAR
			WHERE  CLIENT =:l_dl_deal_rstsst_struct_h->p_client:p_i_account
				AND IDENTIY_NO =:l_dl_deal_rstsst_struct_h->p_indentity_no:p_i_refno;

		IS_ANY_ORA_ERROR

 	  EXEC SQL DELETE FROM DL_REGDET 
			WHERE  CLIENT =:l_dl_deal_rstsst_struct_h->p_client:p_i_account
				AND IDENTIY_NO =:l_dl_deal_rstsst_struct_h->p_indentity_no:p_i_refno;

		IS_ANY_ORA_ERROR
	}


		


      if (APL_SUCCESS != DL_Proc_DLSetlPosRst(l_dl_deal_rstsst_struct_h,
					 p_flag,
					 chr_p_access_stamp,
					 p_intl_envdatastruct_h,
					 l_debug_info_ptr))
	 {
	 APL_GOBACK_FAIL		
	 }

	printf("\n done with DL_Proc_DLSetlPosRst ...\n");
		if(int_l_smi_scr > 0)
		{
			
         strcpy(chr_l_smi_childstat,STATUS_DEL_AUTH);
			EXEC SQL UPDATE DL_DEAL SET DEAL_STAT=:chr_l_smi_childstat,
										 INSTRUMENT_DT= NULL,MONEY_SETL_DT = NULL
							    WHERE ROWID=:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
                                              l_dl_deal_rstsst_struct_h->p_client,
                                              l_dl_deal_rstsst_struct_h->p_indentity_no,
                                              APL_NULL_STRING);

			
			EXEC SQL SELECT NVL(COUNT(*),0) into :int_pcexist
            FROM DL_DEAL
            WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
            AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client
            AND instr(nvl(MSG_STAT,' '),'A') > 0;

      IS_ANY_ORA_ERROR


      if (int_pcexist >0)
      {
         strcpy(chr_param_string,l_dl_deal_rstsst_struct_h->p_instrdate);  
         strcat(chr_param_string,";");
         strcat(chr_param_string," ");  
         strcat(chr_param_string,";");
         strcat(chr_param_string," ");  
         strcat(chr_param_string,";");
         strcat(chr_param_string,"R");  
         strcat(chr_param_string,";");


        if (APL_FAILURE == GBDbInsIMSGENT(  "53x",
                                          l_dl_deal_rstsst_struct_h->p_indentity_no,
                                          l_dl_deal_rstsst_struct_h->p_client,
                                          'Y',
                                          chr_param_string,
                                          l_debug_info_ptr ))
        {
          APL_GOBACK_FAIL
        }
      }
		

			if (APL_FAILURE==EI_Mod_MQData(l_dl_deal_rstsst_struct_h->p_client,
                                        l_dl_deal_rstsst_struct_h->p_indentity_no,
                                        NULL,
                                        NULL,
                                        "B",
                                        l_debug_info_ptr))
            APL_GOBACK_FAIL

			EXEC SQL SELECT ORIG_REFNO,AMOUNT,QTY 
						INTO :chr_h_smi_origrefno:i_smi_origrefno,
							  :dbl_h_smi_amount:i_smi_amount,
							  :h_smi_quantity:i_smi_qty
						FROM DL_DEAL WHERE 
						ROWID=:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
                                              l_dl_deal_rstsst_struct_h->p_client,
                                              l_dl_deal_rstsst_struct_h->p_indentity_no,
                                              APL_NULL_STRING);
			
			
			printf("Qty is %lf Amount is %lf",h_smi_quantity,dbl_h_smi_amount);

			EXEC SQL UPDATE DL_DEAL SET QTY=QTY+:h_smi_quantity,AMOUNT=AMOUNT+:dbl_h_smi_amount
						WHERE CLIENT=:l_dl_deal_rstsst_struct_h->p_client AND  IDENTIY_NO=:chr_h_smi_origrefno;
		
		  printf("\nCode is %d ",sqlca.sqlcode);

           IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
                                           l_dl_deal_rstsst_struct_h->p_client,
                                           chr_h_smi_origrefno,
                                           APL_NULL_STRING);

		

		 strcpy(l_dl_dealaudit_struct_hd->h_dl_client,l_dl_deal_rstsst_struct_h->p_client);
       strcpy(l_dl_dealaudit_struct_hd->h_indentity_no,l_dl_deal_rstsst_struct_h->p_indentity_no);
       strcpy(l_dl_dealaudit_struct_hd->h_trail_for,"T");
       strcpy(l_dl_dealaudit_struct_hd->h_processdetail,p_intl_envdatastruct_h->processtion);
       strcpy(l_dl_dealaudit_struct_hd->h_proc_usr,p_intl_envdatastruct_h->usr);
       strcpy(l_dl_dealaudit_struct_hd->h_fail_cd,l_dl_deal_rstsst_struct_h->p_failreas_cd);
       strcpy(l_dl_dealaudit_struct_hd->h_dlfromord,l_dl_deal_rstsst_struct_h->p_dlfromord);
		 l_dl_dealaudit_struct_hd->h_qty =l_dl_deal_rstsst_struct_h->p_quantity;

		 if (*p_flag == APL_FAILURE)
       {
         strcpy(l_dl_dealaudit_struct_hd->h_subprocess,SETTLE_SD);
       }
       if (*p_flag == APL_SUCCESS)
       {
         strcpy(l_dl_dealaudit_struct_hd->h_subprocess,SETTLE_SD_MD);
       }
       if(APL_SUCCESS != CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_hd,l_debug_info_ptr))
		 {
			APL_GOBACK_FAIL
		 }

		

		

		if(strcmp(l_dl_deal_rstsst_struct_h->p_indentity_no,chr_h_smi_origrefno))
		{
			strcpy(l_dl_dealaudit_struct_hd->h_indentity_no,chr_h_smi_origrefno);
			strcpy(l_dl_dealaudit_struct_hd->h_subprocess,APL_NULL_STRING);
		   if(APL_SUCCESS != CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_hd,l_debug_info_ptr))
         {
          APL_GOBACK_FAIL
         }
				
		if (APL_FAILURE ==  CR_Proc_MvToHisTrd(l_dl_deal_rstsst_struct_h->p_client,l_dl_deal_rstsst_struct_h->p_indentity_no,l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}
		else
			APL_GOBACK_SUCCESS

	 	}
	}
		
			if(int_l_smi_scr == 0 )
			{
	printf("\n Now smi scr = 0 copying data ...\n");
		  		strcpy(l_dl_dealaudit_struct_hd->h_dl_client,l_dl_deal_rstsst_struct_h->p_client);
		   	strcpy(l_dl_dealaudit_struct_hd->h_indentity_no,l_dl_deal_rstsst_struct_h->p_indentity_no);
		   	strcpy(l_dl_dealaudit_struct_hd->h_trail_for,"T");
		   	strcpy(l_dl_dealaudit_struct_hd->h_processdetail,p_intl_envdatastruct_h->processtion);
		   	strcpy(l_dl_dealaudit_struct_hd->h_proc_usr,p_intl_envdatastruct_h->usr);
		   	strcpy(l_dl_dealaudit_struct_hd->h_fail_cd,l_dl_deal_rstsst_struct_h->p_failreas_cd);
		   	strcpy(l_dl_dealaudit_struct_hd->h_dlfromord,l_dl_deal_rstsst_struct_h->p_dlfromord);
	printf("\n Now smi scr = 0  data copy done...\n");

  				if (l_mt_core_sys_params_struct_h.proc_reg_ind[0] == 'Y')
   			{
					if (l_dl_deal_rstsst_struct_h->p_mcomplquantity > 0)
	   			{
   	   			l_dl_dealaudit_struct_hd->h_qty =l_dl_deal_rstsst_struct_h->p_mcomplquantity;
		   			strcpy(l_dl_dealaudit_struct_hd->h_subprocess,SETTLE_C);

 			     	   if(APL_SUCCESS != CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_hd,l_debug_info_ptr))
      				{ APL_GOBACK_FAIL }
			
	   			}

					if (l_dl_deal_rstsst_struct_h->p_pendregquantity > 0)
	   			{
   	   			l_dl_dealaudit_struct_hd->h_qty =l_dl_deal_rstsst_struct_h->p_quantity;
		   			strcpy(l_dl_dealaudit_struct_hd->h_subprocess,SETTLE_PR);

 			     	   if(APL_SUCCESS != CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_hd,l_debug_info_ptr))
      				{ APL_GOBACK_FAIL }
			
	   			}
				}

 	   	   l_dl_dealaudit_struct_hd->h_qty =l_dl_deal_rstsst_struct_h->p_quantity;

		

		 }
	}
	
	printf("\n Now just checking l_debuglist list ...\n");
  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
     {APL_GOBACK_FAIL }

	printf("\n Final return  ...\n");
  APL_GOBACK_SUCCESS
 
  RETURN_SUCCESS :
	{
	free(l_dl_dealaudit_struct_hd); 
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
	free(l_dl_dealaudit_struct_hd); 
	return(APL_FAILURE);
	}
}

int DL_Proc_DLSetlPosRst(DL_DEAL_RSTSST_STRUCT_H *l_dl_deal_rstsst_struct_h,
		  int *p_flag,char *chr_p_access_stamp,
		  INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
		  DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 

  DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_hd;

  struct sqlca sqlca;

  char chr_p_prntconfdt[APL_DATE_LEN];
  char chr_p_processregflg =NULL;
  char     chr_l_stregno_a[APL_SRN_LEN]				  = APL_NULL_STRING; 
  char     chr_mainfuncarea[APL_MAINFUNCAREA_LEN]= APL_NULL_STRING;
  char     chr_l_condid[APL_CONDID_LEN]            = APL_NULL_STRING;
  int int_p_safekrowid =0;
  double l_rstquantity =0;
  double l_avquantity  = 0; 
  double h_qty    = 0;

  int int_p_condexists = 0;
  int int_p_setlqty =0;
  int int_error_flag = APL_SUCCESS;
  int int_p_enuf = APL_SUCCESS;

	
  short p_i_rowid =0;
  short p_i_userid =0;
  short p_i_processregflg =0;				
  
  /* int   int_l_condexists = 0; OPT:AIX */
  short   int_l_condexists = 0;
  short i_st_reg_no = 0;
  short i_qty = 0;
  short    int_l_rowexists = 0;  
  char     chr_h_accclass[2];  
  char     chr_h_field_val[40]; 
  char     chr_l_h_acc_class[3] = APL_NULL_STRING; 
  short 	  l_i_acc_class = 0; 
  /* Isolve 323:AmitB:120607	*/
  char     l_dl_ref_no[19]         = APL_NULL_STRING;
  short l_dp_passed                =  0;
  short int_l_move_from_dp_to_settled =0;
  char l_dl_blk_type [5] = APL_NULL_STRING;  // Added by Swapnil for CR_block ISKB_2189
  short i_l_dl_blk_type =0; // Added by Swapnil for CR_block ISKB_2189
	EXEC SQL VAR l_dl_blk_type  IS STRING;   // Added by Swapnil for CR_block ISKB_2189
	EXEC SQL VAR chr_l_h_acc_class IS STRING; 
	EXEC SQL VAR l_dl_ref_no IS STRING;



#ifdef APL_THREADS
		 APL_SET_CONTEXT
		 EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
  memset(chr_l_condid, APL_NULL_CHAR, APL_CONDID_LEN); 

  l_dl_dealaudit_struct_hd = (DL_DEALAUDIT_STRUCT_H *)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H));
	
	EXEC SQL VAR chr_l_stregno_a                   IS STRING; 



APL_IF_DEBUG
	{
	CO_ProcMonitor(APL_OUT_FILE, "Entered Function CDBRstSSSkFn\n",NULL,p_intl_envdatastruct_h);
	}



  	if (!strlen(chr_p_access_stamp)) {APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING);
  		int_error_flag = APL_FAILURE;}                 



  if (int_error_flag == APL_FAILURE)
	{
	APL_GOBACK_FAIL
	}
      	//Added by Swapnil for CR_Block ISKB_2189	Start

	EXEC SQL SELECT GL_CLIENT INTO :l_dl_blk_type:i_l_dl_blk_type FROM DL_DEAL WHERE IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no AND CLIENT = :l_dl_deal_rstsst_struct_h->p_client;
	printf("\nsqlca.sqlcode is ... for |%d|   \n",sqlca.sqlcode);
	  IS_ANY_ORA_ERROR
	  
	  printf("\n GL_CLIENT=%s ",l_dl_blk_type);
	  
	  if(i_l_dl_blk_type==-1)
	  {
		strcpy(l_dl_blk_type,"FREE");
	  }
 	  printf("\n GL_CLIENT1=%s ",l_dl_blk_type);
	//Added by Swapnil for CR_Block ISKB_2189	End  
	/*	Skip DP Bucket Movement 	Rohit	*/ 
	printf("Check for DP Bucket movement for Reset\n");
	IF_COND_EXISTS("TRD_SETTLEMENT","RESET_DP")
	{
		printf("Skip DP bucket movement\n");
		int_l_move_from_dp_to_settled = 0;
	}
	else
	{
/* Start ISolve 323:AmitB:Check for DP entry before reset */
	strcpy(l_dl_ref_no,"%");
	strcat(l_dl_ref_no,l_dl_deal_rstsst_struct_h->p_indentity_no);
	strcat(l_dl_ref_no,"%");
	l_dp_passed = 0;

	printf("\nSearching for Deal record presence in DP Instruction table ... for |%s|%s|\n",l_dl_ref_no,l_dl_deal_rstsst_struct_h->p_client);

/*(ISKB_9224) - Below query is not properly checking for deals in dp table. It fetches records for similar deals. - Changes by Mrinal Starts*/
	/*	EXEC SQL SELECT COUNT(*) into :l_dp_passed FROM DL_DPINSTRS WHERE DEAL_REF_NOS LIKE :l_dl_ref_no AND
	STATUS='P' AND CLIENT in (select cln_depo_map_client_id from mt_cli_depo_map where cln_code = :l_dl_deal_rstsst_struct_h->p_client);*/
	EXEC SQL SELECT COUNT(*) into :l_dp_passed FROM DL_DPINSTRS WHERE DEAL_REF_NOS LIKE :l_dl_ref_no AND
			STATUS='P' AND CLIENT in (select cln_depo_map_client_id from mt_cli_depo_map where cln_code = :l_dl_deal_rstsst_struct_h->p_client)
			AND	INSTR(','|| DECODE(INSTR(DEAL_REF_NOS, ','),0, DEAL_REF_NOS||',', DEAL_REF_NOS),','||:l_dl_deal_rstsst_struct_h->p_indentity_no||',') > 0 ;

/*(ISKB_9224) - Below query is not properly checking for deals in dp table. It fetches records for similar deals. - Changes by Mrinal Ends*/
	printf("\nsqlca.sqlcode is ... for |%d|\n",sqlca.sqlcode);
	fflush(stdout);
	printf("\nl_dp_passed is ... for |%d|\n",l_dp_passed);
	fflush(stdout);
	IS_ANY_ORA_ERROR
	
	if (l_dp_passed != 0)
		int_l_move_from_dp_to_settled = 1;
	else
		int_l_move_from_dp_to_settled = 0;
/* End ISolve 323:AmitB:Check for DP entry before reset.Two more ifs added below for Deliver and Receive Deals*/
	}
 //Added by Swapnil for CR_Block ISKB_2189	Start --Change block type from FREE to  l_dl_blk_type 
  	if((l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_DF) ||
		(l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_DVP) ||
		(l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_CD) ||
		(l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_DCD))
	{
		
		if(l_mt_core_sys_params_struct_h.proc_reg_ind[0] =='Y')
		{
			if((!strcmp(l_dl_deal_rstsst_struct_h->p_status_ind,"000")) ||
				(!strcmp(l_dl_deal_rstsst_struct_h->p_status_ind,"003")))
			{
     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			}

			if(!strcmp(l_dl_deal_rstsst_struct_h->p_status_ind,"001")) 
			{

			 if(l_dl_deal_rstsst_struct_h->p_delta_000 >0)
				{
     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					"000",
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_delta_000,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					"000",
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_delta_000,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
				}

		   if(l_dl_deal_rstsst_struct_h->p_delta_001 >0) 
				{
     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					"001",
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_delta_001,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					"001",
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_delta_001,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
				}

		 	if(l_dl_deal_rstsst_struct_h->p_delta_003 >0)
				{
     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					"003",
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_delta_003,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
				   "003",
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_delta_003,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
				}
			
			}
		}
		else
		{
		  if (int_l_move_from_dp_to_settled == 1)
			{
				if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      			{ APL_GOBACK_FAIL }
			
      			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'D',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      			{ APL_GOBACK_FAIL }
			
			}
			else
			{

     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
		  }
		}
	}

  	if((l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_RF) ||
		(l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_RVP) ||
		(l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_CR) ||
		(l_dl_deal_rstsst_struct_h->p_dealcd[0] ==DEALCD_RCR))
	{
		
		if(l_mt_core_sys_params_struct_h.proc_reg_ind[0] =='Y')
		{
		  l_rstquantity = l_dl_deal_rstsst_struct_h->p_pendregquantity +l_dl_deal_rstsst_struct_h->p_mcomplquantity;
			if((!strcmp(l_dl_deal_rstsst_struct_h->p_status_ind,"000")) ||
				(!strcmp(l_dl_deal_rstsst_struct_h->p_status_ind,"003")))
			{
     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'D',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			}

			if(!strcmp(l_dl_deal_rstsst_struct_h->p_status_ind,"001")) 
			{
			if(l_dl_deal_rstsst_struct_h->p_recinto000 >0)
				{
     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					"000",
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_recinto000,
					'D',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
				   "000",
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_recinto000,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
				}

     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					"001",
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_rstquantity,
					'D',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
  					"001",
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_rstquantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }

			}
		}
		else
		{
		  if (int_l_move_from_dp_to_settled == 1)
			{
				if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'D',l_dl_blk_type,
					l_debug_info_ptr))
      			{ APL_GOBACK_FAIL }

      			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'D',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      			{ APL_GOBACK_FAIL }
			
			}
			else
			{
     			if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'S',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'D',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
			
      		if (APL_SUCCESS != DL_Mod_Posn(l_dl_deal_rstsst_struct_h->p_client,
					l_dl_deal_rstsst_struct_h->p_instr_code,
					l_dl_deal_rstsst_struct_h->p_loccode,
					l_dl_deal_rstsst_struct_h->p_status_ind,
					'C',
  					l_dl_deal_rstsst_struct_h->p_dealcd[0],
					&l_dl_deal_rstsst_struct_h->p_quantity,
					'I',l_dl_blk_type,
					l_debug_info_ptr))
      		{ APL_GOBACK_FAIL }
		  }
		}
	}

 

	 

	strcpy(chr_mainfuncarea,"TRD_SST_CHK");
	strcpy(chr_l_condid,"RU_REG_CHK");
	int_l_condexists = 0;
	
	if ( APL_SUCCESS == CO_Chk_CntryEnabled(chr_mainfuncarea,
														chr_l_condid,
														&int_l_condexists,
														l_debug_info_ptr))
	{
		if (int_l_condexists > 0)
		{

				

				EXEC SQL Select CLN_CLAS
		      into :chr_l_h_acc_class:l_i_acc_class 
      		From MT_CLIENT
      		Where (CLN_CODE = :l_dl_deal_rstsst_struct_h->p_client);

 			     IS_ANY_ORA_ERROR;

				memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
      		memset(chr_l_condid, APL_NULL_CHAR, APL_CONDID_LEN);

 			     strcpy(chr_mainfuncarea, "TRADE_RRMM");
      		strcpy(chr_l_condid, "CLT_CLAS");
      		int_l_condexists = 0;

 		     if (APL_SUCCESS == CO_Chk_SplVal( chr_mainfuncarea,
                                       chr_l_condid,
                                       chr_l_h_acc_class,
                                       &int_l_condexists,
                                       l_debug_info_ptr))
      		if (int_l_condexists > 0)
     		   {

				
	  				
			   		EXEC SQL	DECLARE SrnCursor CURSOR FOR 
								SELECT ST_REG_NO,QTY FROM DL_RUDEAL
								WHERE CLIENT = :l_dl_deal_rstsst_struct_h->p_client  AND 
								IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no
								AND INSTRUMENT_DT IS NOT NULL;
						
						IS_ANY_ORA_ERROR					

				
						
						EXEC SQL OPEN SrnCursor;
						IS_ANY_ORA_ERROR					

					while(1)
					{ 
						EXEC SQL	FETCH SrnCursor INTO :chr_l_stregno_a:i_st_reg_no, :h_qty:i_qty;
						if (APL_ZERO_RESULT_SET)
						{
							break;
						}

						
							
					  if (APL_SUCCESS != CRUDBSafekLockFn(l_dl_deal_rstsst_struct_h->p_client,
																	  l_dl_deal_rstsst_struct_h->p_instr_code,
																	  l_dl_deal_rstsst_struct_h->p_loccode,
																	  APL_NULL_STRING,
																	  chr_l_stregno_a,
																	  l_debug_info_ptr))
						{
							APL_GOBACK_FAIL
						}
						
						if (APL_SUCCESS != CRUDBAvailPosnFn(l_dl_deal_rstsst_struct_h->p_client,
																			l_dl_deal_rstsst_struct_h->p_instr_code,
																			l_dl_deal_rstsst_struct_h->p_loccode,
																			'N',
																			&l_avquantity,
																			chr_l_stregno_a,
																			l_debug_info_ptr))
						{
							APL_GOBACK_FAIL
						}

							if ((VAL_RECDEAL(l_dl_deal_rstsst_struct_h->p_dealcd[0])) || l_dl_deal_rstsst_struct_h->p_dealcd[0]=='8')
							{
								if (((VAL_RECDEAL(l_dl_deal_rstsst_struct_h->p_dealcd[0])) || l_dl_deal_rstsst_struct_h->p_dealcd[0]=='8') && 
													  (l_avquantity <  h_qty))
								{
									EXEC SQL	CLOSE SrnCursor;
									CO_InsertErr(l_debug_info_ptr,
														ERR_DEAL_SRNNENUFPOSN,
													   l_dl_deal_rstsst_struct_h->p_client,
														l_dl_deal_rstsst_struct_h->p_indentity_no,
														chr_l_stregno_a,
														__LINE__,
														__FILE__);
   								APL_GOBACK_FAIL
								}
							}

							
							
							if (APL_SUCCESS != CRUDBUpdtPosnFn(l_dl_deal_rstsst_struct_h->p_client,
																		  l_dl_deal_rstsst_struct_h->p_instr_code,
																		  l_dl_deal_rstsst_struct_h->p_loccode,
																		  l_dl_deal_rstsst_struct_h->p_status_ind,
																		  'C',
																		  l_dl_deal_rstsst_struct_h->p_dealcd[0],
																		  &h_qty,
																		  'I',
																		  chr_l_stregno_a,
																		  l_debug_info_ptr))
							{
								APL_GOBACK_FAIL
							}
							
						   if ((l_dl_deal_rstsst_struct_h->p_dealcd[0] == DEALCD_RF) ||
								 (l_dl_deal_rstsst_struct_h->p_dealcd[0] == DEALCD_RVP) ||
									(l_dl_deal_rstsst_struct_h->p_dealcd[0] == DEALCD_CR) ||
									(l_dl_deal_rstsst_struct_h->p_dealcd[0] == DEALCD_RCR))
							{
								if (APL_SUCCESS != CRUDBUpdtPosnFn(l_dl_deal_rstsst_struct_h->p_client,
 																		   	l_dl_deal_rstsst_struct_h->p_instr_code,
 																				l_dl_deal_rstsst_struct_h->p_loccode,
																				l_dl_deal_rstsst_struct_h->p_status_ind,
																				'S',
																				l_dl_deal_rstsst_struct_h->p_dealcd[0],
																				&h_qty,
																				'D',
																				chr_l_stregno_a,
																				l_debug_info_ptr))
								{
									APL_GOBACK_FAIL
								}
							}
							else
							{
							  if (APL_SUCCESS != CRUDBUpdtPosnFn(l_dl_deal_rstsst_struct_h->p_client,
 																				l_dl_deal_rstsst_struct_h->p_instr_code,
 																				l_dl_deal_rstsst_struct_h->p_loccode,
																				l_dl_deal_rstsst_struct_h->p_status_ind,
																				'S',
  																				l_dl_deal_rstsst_struct_h->p_dealcd[0],
																				&h_qty,
  																				'I',
																				chr_l_stregno_a,
 																				l_debug_info_ptr))
								{
									APL_GOBACK_FAIL
								}
							}
						
						
							
						EXEC SQL 	UPDATE DL_RUDEAL SET INSTRUMENT_DT = NULL
										WHERE CLIENT = :l_dl_deal_rstsst_struct_h->p_client 
										AND IDENTIY_NO = :l_dl_deal_rstsst_struct_h->p_indentity_no;
						
						IS_ANY_ORA_ERROR

					}
					
						EXEC SQL CLOSE SrnCursor;	
			
				}  
			}
		}
  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
     {APL_GOBACK_FAIL }

  APL_GOBACK_SUCCESS
 
  RETURN_SUCCESS :
	{
	free(l_dl_dealaudit_struct_hd); 
   CO_PrnErr(*l_debug_info_ptr) ;
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
	free(l_dl_dealaudit_struct_hd); 
	CO_PrnErr(*l_debug_info_ptr) ;
	return(APL_FAILURE);
	}
}
int DL_Rtv_DLSetlRst(char *p_client,
		char *p_indentity_no,
		DL_DEAL_RSTSST_STRUCT_H *l_dl_deal_rstsst_struct_h,
		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  struct sqlca sqlca;

	

  char chr_l_sysdt[APL_DATE_LEN];
  char chr_l_hostdt[APL_DATE_LEN];

  short p_i_rowid =0;
  short p_i_instr_code =0;
  short p_i_locncode =0;
  short p_i_Account =0;
  short p_i_Refno =0;
  short p_i_maker =0;
  short p_i_accstmp_cmp =0;
  short p_i_status =0;
  short p_i_regstatus =0;
  short p_i_settledt =0;
  short p_i_instr_dt =0;
  short p_i_moneydt =0;
  short p_i_updhispos_dt =0;
  short p_i_trcode =0;
  short p_i_isspottrd =0;
  short p_i_issecconv =0;
  short p_i_repateom =0;
  short p_i_updhisposflg =0;
  short p_i_exarena =0;
  short p_i_failcode =0;
  short p_i_trdfromord =0;
  short p_i_qty =0;
  short p_i_recinto000 =0;
  short p_i_pendregqty =0;
  short p_i_mcomplqty =0;
  short p_i_complqty =0;
  short p_i_delfrm000 =0;
  short p_i_delfrm001 =0;
  short p_i_delfrm003 =0;

  short l_i_sysdt =0;
  short l_i_hostdt =0;
  short int_l_cond =0;



#ifdef APL_THREADS
		 APL_SET_CONTEXT
		 EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  sqlca.sqlcode =0;

APL_IF_DEBUG
	{
	CO_ProcMonitor(APL_OUT_FILE, "Entered Function DL_Rtv_DLPmtRst. Going for mandatory checks\n",NULL,NULL);
	}

	
	if (!strlen(p_client)) APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING);
  	if (!strlen(p_indentity_no)) APL_DATA_MISSING("Reference Number",APL_NULL_STRING,APL_NULL_STRING);
  
   if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}

  
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_instr_code IS STRING(9); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_loccode IS STRING(5); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_client IS STRING(11); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_indentity_no IS STRING(17); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_maker IS STRING(15); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_cltstmp_cmp IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_status_ind IS STRING(4); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_status_reg IS STRING(3); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_instrdate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_moneydate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_failreas_cd IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_dlfromord IS STRING(20); 
   EXEC SQL VAR chr_l_hostdt IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_setldt IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_updhispos_date IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_dealcd IS STRING(2); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_isspotdl IS STRING(2); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_instrconv_ind IS STRING(2); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_report_at_eom_ind IS STRING(2); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_mod_hispos_ind IS STRING(2); 
   EXEC SQL VAR l_dl_deal_rstsst_struct_h->p_ex_arena IS STRING(3); 

	p_i_repateom =0;

   EXEC SQL SELECT 	ROWID,
			INSTR_CODE,
			STATUS_POS,
			LOCATION_CD, 
			CLIENT,
			IDENTIY_NO,
			MAKER,
			ACCESS_STAMP,
			STATUS,
			SETL_DATE,
			INSTRUMENT_DT,
			MONEY_SETL_DT,
			MOD_HISPOS_DATE,
			DEAL_CD,
			SPOTTRD_IND,
			INSTRCONV_IND,
			REPORT_AT_EOM_IND,
			MOD_HISPOS_IND,
			EX_ARENA,
			FAILREASON_CD,
			DEAL_FRM_ORD,
			NVL(QTY,0),
			NVL(REC_INT_000,0),
			NVL(PEND_REG_QTY,0),
			NVL(DL_COMPLETEQTY,0),
			NVL(TOT_QTY,0),
			NVL(DELTA_000,0),
			NVL(DELTA_001,0),
			NVL(DELTA_003,0),
			HOST_DATE
	INTO 		:l_dl_deal_rstsst_struct_h->p_ora_rowid:p_i_rowid,
			:l_dl_deal_rstsst_struct_h->p_instr_code:p_i_instr_code,
			:l_dl_deal_rstsst_struct_h->p_status_ind:p_i_status,
			:l_dl_deal_rstsst_struct_h->p_loccode:p_i_locncode,
			:l_dl_deal_rstsst_struct_h->p_client:p_i_Account,
			:l_dl_deal_rstsst_struct_h->p_indentity_no:p_i_Refno,
			:l_dl_deal_rstsst_struct_h->p_maker:p_i_maker, 
			:l_dl_deal_rstsst_struct_h->p_cltstmp_cmp:p_i_accstmp_cmp,
			:l_dl_deal_rstsst_struct_h->p_status_reg:p_i_regstatus,
			:l_dl_deal_rstsst_struct_h->p_setldt:p_i_settledt,
			:l_dl_deal_rstsst_struct_h->p_instrdate:p_i_instr_dt,
			:l_dl_deal_rstsst_struct_h->p_moneydate:p_i_moneydt,
			:l_dl_deal_rstsst_struct_h->p_updhispos_date:p_i_updhispos_dt,
			:l_dl_deal_rstsst_struct_h->p_dealcd:p_i_trcode ,
			:l_dl_deal_rstsst_struct_h->p_isspotdl:p_i_isspottrd,
			:l_dl_deal_rstsst_struct_h->p_instrconv_ind:p_i_issecconv,
			:l_dl_deal_rstsst_struct_h->p_report_at_eom_ind:p_i_repateom,
			:l_dl_deal_rstsst_struct_h->p_mod_hispos_ind:p_i_updhisposflg,
			:l_dl_deal_rstsst_struct_h->p_ex_arena:p_i_exarena,
			:l_dl_deal_rstsst_struct_h->p_failreas_cd:p_i_failcode,
			:l_dl_deal_rstsst_struct_h->p_dlfromord:p_i_trdfromord,
			:l_dl_deal_rstsst_struct_h->p_quantity:p_i_qty,
			:l_dl_deal_rstsst_struct_h->p_recinto000:p_i_recinto000,
			:l_dl_deal_rstsst_struct_h->p_pendregquantity:p_i_pendregqty,
			:l_dl_deal_rstsst_struct_h->p_mcomplquantity:p_i_mcomplqty,
			:l_dl_deal_rstsst_struct_h->p_complquantity:p_i_complqty,
			:l_dl_deal_rstsst_struct_h->p_delta_000:p_i_delfrm000,
			:l_dl_deal_rstsst_struct_h->p_delta_001:p_i_delfrm001,
			:l_dl_deal_rstsst_struct_h->p_delta_003:p_i_delfrm003,
			:chr_l_hostdt:l_i_hostdt
        FROM DL_DEAL
   		WHERE CLIENT =:p_client AND 
	        	IDENTIY_NO =:p_indentity_no 
	FOR UPDATE OF INSTRUMENT_DT;
	
  	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,p_client,p_indentity_no,APL_NULL_STRING);

	

  		memset(chr_l_sysdt,APL_NULL_CHAR,APL_DATE_LEN);

 		EXEC SQL SELECT SYS_DATE INTO :chr_l_sysdt:l_i_sysdt FROM PRO_SYS_DATE;

 		IS_ANY_ORA_ERROR

		
		
		if (p_i_repateom != -1)
		{
         if(CO_InsertErr(
                 l_debug_info_ptr,
                 ERR_DEAL_REPATEOM_RST_NALLOW,
            		
                 APL_NULL_STRING,
                 APL_NULL_STRING,
                 APL_NULL_STRING,
                 __LINE__,
                 __FILE__
                 ) != APL_SUCCESS)
          APL_GOBACK_FAIL
		}
		
		

 if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}


  APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{
APL_IF_DEBUG
	{
	CO_ProcMonitor(APL_OUT_FILE, "Leaving Function CDBRstPmTFn. Successful\n",NULL,NULL);
	}

	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
APL_IF_DEBUG
	{
	CO_ProcMonitor(APL_OUT_FILE, "Leaving Function CDBRstPmTFn. Failed\n",NULL,NULL);
	}

	return(APL_FAILURE);
	}

}

int DL_Chk_MsgSnt(char *p_msg_no,
		char *chr_p_key,
		char *p_client,
		char *p_settledate,
		INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 char  chr_l_sysdate_b[APL_DATE_LEN];
 short l_i_Settledt =0;
 short l_i_Msg_No =0;
 short l_i_Key =0;
 short l_i_Account =0;
 short l_i_sysdate =0;
 int int_pcexist =0;

 

 short l_msg_53x=0;
 short l_msg_572=0;
 char  chr_l_msg_flg[2];



 int int_error_flag = APL_SUCCESS;

 struct sqlca sqlca;

#ifdef APL_THREADS
		 APL_SET_CONTEXT
		 EXEC SQL CONTEXT USE :my_ctx_local;
#endif

 

 if (!strlen(p_msg_no)) {APL_DATA_MISSING("Message Number",APL_NULL_STRING,APL_NULL_STRING);
 	int_error_flag = APL_FAILURE;}                 
 if (!strlen(chr_p_key)) {APL_DATA_MISSING("Key",APL_NULL_STRING,APL_NULL_STRING);
  	int_error_flag = APL_FAILURE;}                 
 if (!strlen(p_client)) {APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING);
  	int_error_flag = APL_FAILURE;}                 

 


  if (int_error_flag == APL_FAILURE)
     {APL_GOBACK_FAIL}

	memset(chr_l_sysdate_b,APL_NULL_CHAR,APL_DATE_LEN);
   
   memset(chr_l_msg_flg,APL_NULL_CHAR,2);
	if (APL_FAILURE == CO_RtvSysDt(chr_l_sysdate_b,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}

  sqlca.sqlcode =0;
  int_pcexist =0;  
  EXEC SQL SELECT NVL(COUNT(*),0) into :int_pcexist
  		FROM MS_MSGENT
			WHERE SWIFT_MSG_NO =:p_msg_no:l_i_Msg_No
		  		AND PROC_INIT =:chr_p_key:l_i_Key
		  		AND CLIENT =:p_client:l_i_Account 
				AND STATUS ='D';

  IS_ANY_ORA_ERROR

  if (int_pcexist >0)
		{
	   if(CO_InsertErr(
						l_debug_info_ptr,
						ERR_DEAL_MSGSNT_RST_NALLOW,
						
					   APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						) != APL_SUCCESS)
						APL_GOBACK_FAIL
		}

  sqlca.sqlcode =0;
  int_pcexist =0;  
  EXEC SQL SELECT NVL(COUNT(*),0) into :int_pcexist
  		FROM MS_MSGSTAT
			WHERE SWIFT_MSG_REP =:p_msg_no:l_i_Msg_No
		  		AND PROC_INIT =:chr_p_key:l_i_Key
		  		AND CLIENT =:p_client:l_i_Account 
				AND GENERATE_DT =:chr_l_sysdate_b;

  IS_ANY_ORA_ERROR

  if (int_pcexist >0)
		{
	   if(CO_InsertErr(
						l_debug_info_ptr,
						ERR_DEAL_MSGSNT_RST_NALLOW,
						
					   APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						) != APL_SUCCESS)
						APL_GOBACK_FAIL
		}
  
  

  sqlca.sqlcode =0;
  int_pcexist =0;
  l_msg_53x=0;
  l_msg_572=0;

  if(strncmp(p_msg_no,"53x",3)==0)
   {
      strcpy(chr_l_msg_flg,MSG_FLG_53X);
      l_msg_53x=1;
   }
  if(strncmp(p_msg_no,"572",3)==0)
   {
      strcpy(chr_l_msg_flg,MSG_FLG_572);
      l_msg_572=1;
   }

  if((l_msg_53x==1)||(l_msg_572==1))

  {
       EXEC SQL SELECT NVL(COUNT(*),0) into :int_pcexist
         FROM DL_DEAL
         WHERE  IDENTIY_NO =:chr_p_key:l_i_Key
            AND CLIENT =:p_client:l_i_Account
            AND instr(nvl(MSG_STAT,' '),:chr_l_msg_flg) != 0;
     IS_ANY_ORA_ERROR

       if (int_pcexist >0)
         {
            if(CO_InsertErr(
                              l_debug_info_ptr,
                              ERR_DEAL_MSGSNT_RST_NALLOW,
                              
                              APL_NULL_STRING,
                              APL_NULL_STRING,
                              APL_NULL_STRING,
                              __LINE__,
                              __FILE__
                              ) != APL_SUCCESS)
                     APL_GOBACK_FAIL
         }
   }
  

  if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
     {APL_GOBACK_FAIL }

  APL_GOBACK_SUCCESS
 
  RETURN_SUCCESS :
	{
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
	return(APL_FAILURE);
	}

}

int DL_Chk_DLRedom(	DL_DEAL_RSTSST_STRUCT_H *p_dl_deal_rstsst_struct_h,
								int *p_flg,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{
	int 	int_l_h_count = 0;
	short	l_i_count = 0;

	#ifdef APL_THREADS
		 APL_SET_CONTEXT
		 EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	

	EXEC SQL SELECT NVL(COUNT(*),0)
	INTO :int_l_h_count:l_i_count
	FROM CAEVENT a
	WHERE a.INSTR_CODE = RTRIM(:p_dl_deal_rstsst_struct_h->p_instr_code)
	AND	a.CA_EVENT = 'RN'
	AND	a.REC_DATE >= :p_dl_deal_rstsst_struct_h->p_instrdate
	AND	a.STATUS IN ('RP','CP');

	IS_ANY_ORA_ERROR

	if (int_l_h_count > 0)
	{
		*p_flg = 1;
	}
	else
	{
		*p_flg = 0;
	}

  APL_GOBACK_SUCCESS//AIX Warning Removal
  RETURN_SUCCESS : return(APL_SUCCESS);
  RETURN_FAILURE : return(APL_FAILURE);
}
  
int DL_Chk_DLSetlSCR(char *chr_p_client,char *chr_p_refno,
				           INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h,
                        DEBUG_INFO_STRUCT_H **l_debug_info_ptr )

{


char chr_h_smi_locncode[APL_LOCNCODE_LENGTH] = APL_NULL_STRING;
char chr_h_smi_trdt[APL_DATE_LEN]         = APL_NULL_STRING;
char chr_h_smi_typeoftrd[3]					  = APL_NULL_STRING;
char chr_h_smi_instrcode[APL_INSTRUMENTCODE_LEN]	  = APL_NULL_STRING;
char chr_h_smi_locnchgflg[APL_FLAG_LENGTH]	  = APL_NULL_STRING;
char chr_h_smi_origrefno[APL_TXNREFNO_LEN]= APL_NULL_STRING;
char chr_h_smi_parentstat[RECORD_STAT_LEN]  = APL_NULL_STRING;
char h_ora_rowid[APL_ROWID_LEN]         = APL_NULL_STRING;
		
short i_smi_locncode   = 0;
short i_smi_trdt       = 0;
short i_smi_typeoftrd  = 0;
short i_smi_instr_code     = 0;
short i_smi_locnchgflg = 0;
short i_smi_origrefno  = 0;
int int_p_smieligible      = 0; 
short i_ora_rowid  = 0;

EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL VAR chr_p_client        IS STRING;
EXEC SQL VAR chr_p_refno          IS STRING;
EXEC SQL VAR chr_h_smi_locncode   IS STRING;
EXEC SQL VAR chr_h_smi_parentstat IS STRING;
EXEC SQL VAR chr_h_smi_instrcode     IS STRING;
EXEC SQL VAR chr_h_smi_origrefno  IS STRING;
EXEC SQL VAR chr_h_smi_typeoftrd  IS STRING;
EXEC SQL VAR chr_h_smi_locnchgflg IS STRING;
EXEC SQL VAR h_ora_rowid	         IS STRING;
EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
       APL_SET_CONTEXT
       EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

   EXEC SQL SELECT LOCATION_CD,
                   DEAL_DATE,
                   DL_CLASS,
                   INSTR_CODE,
                   LOC_CHNG_IND,
                   ORIG_REFNO,
						 rowid
   INTO :chr_h_smi_locncode:i_smi_locncode,
        :chr_h_smi_trdt:i_smi_trdt,
        :chr_h_smi_typeoftrd:i_smi_typeoftrd,
        :chr_h_smi_instrcode:i_smi_instr_code,
        :chr_h_smi_locnchgflg:i_smi_locnchgflg,
        :chr_h_smi_origrefno:i_smi_origrefno,
		  :h_ora_rowid:i_ora_rowid
   FROM DL_DEAL
   WHERE CLIENT=:chr_p_client and
			IDENTIY_NO  =:chr_p_refno;

	IS_ANY_ORA_ERROR

   	if (EI_Chk_SMIElg(chr_h_smi_locncode,
											 chr_h_smi_trdt,
											 chr_h_smi_typeoftrd,
										    chr_h_smi_instrcode,		
                                  chr_h_smi_locnchgflg ,  
											 h_ora_rowid,
                                  &int_p_smieligible,
                                  p_intl_env_data_struct_h,
                                  l_debug_info_ptr
                                  ) == APL_FAILURE)
  		{ 
      	CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_env_data_struct_h);
      	APL_GOBACK_FAIL;
  		} 
	
		if(int_p_smieligible)
		{
			if(strcmp(chr_p_refno,chr_h_smi_origrefno))
			{
				EXEC SQL SELECT DEAL_STAT INTO :chr_h_smi_parentstat
													  FROM DL_DEAL WHERE 
													  CLIENT=:chr_p_client and 
													  IDENTIY_NO = :chr_h_smi_origrefno
									FOR UPDATE OF QTY,AMOUNT;

				IS_ANY_ORA_ERROR 
				printf("%d",sqlca.sqlcode);
				printf("Acount is l%sl Refno is l%sl",chr_p_client,chr_h_smi_origrefno);

				if(!strcmp(chr_h_smi_parentstat,STATUS_SETL))
				{
					if(CO_InsertErr(
         	            l_debug_info_ptr,
                        ERR_DEAL_PARENT_SETTL,
								chr_p_client,chr_h_smi_origrefno,APL_NULL_STRING,
                  	   __LINE__,
                     	__FILE__
                     	) != APL_SUCCESS)
             	 APL_GOBACK_FAIL	
				}
				else
					APL_GOBACK_SUCCESS
	
		  }
	  	else
			APL_GOBACK_SUCCESS
	 }
	 else
		APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting DL_Chk_DLSetlSCR with success\n",
			NULL,NULL);
		}
		return(APL_SUCCESS);
	RETURN_FAILURE:
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting DL_Chk_DLSetlSCR with failure\n",NULL,NULL);
		}
		return(APL_FAILURE);
 
}
