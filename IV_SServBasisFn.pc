




#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;



int IV_Rtv_IVSSRVBasis(long p_serv_code,char *p_charge_basis,char *p_fee_basis,
                      IV_SERV_BASIS_STRUCT *p_iv_serv_basis_struct,int *int_p_retstat,
		      DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{                      

EXEC SQL BEGIN DECLARE SECTION;
long int_h_serv_code;
char chr_h_charge_basis[IV_STRING_LEN],chr_h_fee_basis[IV_STRING_LEN];
double dbl_h_srv_exists=0;
short i_srv_exists=0;
IV_SERV_BASIS_STRUCT l_iv_serv_basis_struct;
I_IV_SERV_BASIS_STRUCT l_i_iv_serv_basis_struct; 
EXEC SQL VAR chr_h_charge_basis IS STRING;
EXEC SQL VAR chr_h_fee_basis IS STRING;
EXEC SQL VAR l_iv_serv_basis_struct.chrg_base IS STRING;
EXEC SQL VAR l_iv_serv_basis_struct.fees_base IS STRING;
EXEC SQL END DECLARE SECTION;

struct sqlca sqlca;

#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif


int_h_serv_code = p_serv_code;
strcpy(chr_h_charge_basis,p_charge_basis);
strcpy(chr_h_fee_basis,p_fee_basis);

if(strlen(p_charge_basis) != 0)
{


  EXEC SQL SELECT service_cd,fees_base,iv_cond,chrg_base,
                chrg_vl_clas,fees_val_class
	   INTO :l_iv_serv_basis_struct:l_i_iv_serv_basis_struct
         FROM IV_SERV_BASIS
         WHERE service_cd = :int_h_serv_code and
              chrg_base = :chr_h_charge_basis and
              fees_base = :chr_h_fee_basis;
  if(sqlca.sqlcode < 0)
         *int_p_retstat = IV_CRITCAL_ERROR_IND;

  IS_ANY_ORA_ERROR;

  if(sqlca.sqlcode == 1403)
  {
	*int_p_retstat = IV_NO_DATA_FOUND_ERR;
	APL_GOBACK_FAIL;
  }
  else
  {
	if(l_i_iv_serv_basis_struct.i_charge_value_class == -1)
	{
		l_iv_serv_basis_struct.chrg_vl_clas = ' ';
		*int_p_retstat = IV_COLUMN_NULL_ERR;
	}
	if(l_i_iv_serv_basis_struct.i_fee_value_class == -1)
	{
		l_iv_serv_basis_struct.fees_val_class = ' ';
		*int_p_retstat = IV_COLUMN_NULL_ERR;
	}
	if(l_i_iv_serv_basis_struct.i_chrg_base == -1)
	{
		strcpy(l_iv_serv_basis_struct.chrg_base," ");
		*int_p_retstat = IV_COLUMN_NULL_ERR;
	}
	if(l_i_iv_serv_basis_struct.i_fees_base == -1)
	{
		strcpy(l_iv_serv_basis_struct.fees_base," ");
		*int_p_retstat = IV_COLUMN_NULL_ERR;
	}

   }
   if(*int_p_retstat == IV_COLUMN_NULL_ERR)
   {
   	APL_GOBACK_FAIL;
   }
   *int_p_retstat = IV_SUCCESS;
   *p_iv_serv_basis_struct = l_iv_serv_basis_struct;
   APL_GOBACK_SUCCESS;
}
else
{
 EXEC SQL SELECT NVL(count(*),0)
          INTO :dbl_h_srv_exists:i_srv_exists
          FROM IV_SERV_BASIS
          WHERE service_cd = :int_h_serv_code; 
  if(sqlca.sqlcode < 0)
         *int_p_retstat = IV_CRITCAL_ERROR_IND;

  IS_ANY_ORA_ERROR;

  if(sqlca.sqlcode == 1403 || dbl_h_srv_exists == 0)
  {
        *int_p_retstat = IV_NO_DATA_FOUND_ERR;
        APL_GOBACK_FAIL;
  }
  if(dbl_h_srv_exists > 0)
  {
    *int_p_retstat = IV_SUCCESS;
    APL_GOBACK_SUCCESS;
  }

}

RETURN_SUCCESS:
         return APL_SUCCESS;

RETURN_FAILURE:
         return APL_FAILURE;

}
