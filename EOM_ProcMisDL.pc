


   
   
   
   
   
   
   
   
   
   
   
   




#include <CO_HostStructdef.h>

EXEC SQL INCLUDE sqlca;

#define FILENAME_LEN_A			80

//main(int argc,char **argv)
int main(int argc,char **argv)//Changes done for AIX Migration
{
	DEBUG_INFO_STRUCT_H			*l_debug_info_ptr = NULL;
	FILE						*l_ptr_ini_file = NULL;
	FILE						*l_ptr_log_file = NULL;
	INTL_ENV_DATA_STRUCT_H	l_intl_envdatastruct_h;
	char						chr_l_inifile[FILENAME_LEN_A]   = APL_NULL_STRING;
	char						chr_uname[APL_USERID_LEN]   = APL_NULL_STRING;
	char						chr_passwd[APL_PASSWD_LEN]  = APL_NULL_STRING;
	char						chr_custody_id_b[APL_USERID_LEN]  = APL_NULL_STRING;
	int						int_l_flg = 0;
	int						int_retval = 0;
	char						chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	struct sqlca			sqlca;

	memset(&l_intl_envdatastruct_h,NULL,sizeof(INTL_ENV_DATA_STRUCT_H));
	
	


	strcpy(l_intl_envdatastruct_h.usr, argv[3]);
	strcpy(l_intl_envdatastruct_h.h_mode, argv[4]);
	strcpy(l_intl_envdatastruct_h.processtion, argv[5]);
	strcpy(l_intl_envdatastruct_h.auth_req, argv[6]);
	strcpy(l_intl_envdatastruct_h.subprocess, argv[7]);
	strcpy(l_intl_envdatastruct_h.h_process, argv[8]);
	
	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		exit(-1);

	APL_FETCH_DB_LOGIN_DETAILS(l_ptr_ini_file,chr_custody_id_b,chr_uname,chr_passwd,APL_OUT_FILE,&l_debug_info_ptr)
	
	
	
	if (CO_DB_Connection_E(chr_uname,chr_passwd,&l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	

	

	int_retval = CO_Rtv_RptFileName("3K",APL_LOGFILE_DESC,100,argv[5],argv,&l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

	

	EXEC SQL COMMIT WORK;
	
	if (sqlca.sqlcode != 0)
	{
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

	CO_ProcMonitor(l_ptr_log_file,"EOM - Tax Hand-off",NULL,NULL);
	CO_ProcMonitor(l_ptr_log_file,"_______________________\n",NULL,NULL);
	
	CO_ProcMonitor(l_ptr_log_file,"Work Committed after chr_logfile creation \n",NULL,&l_intl_envdatastruct_h);

	

	if (CO_RtvSysParams(&l_debug_info_ptr) != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to get system parameters - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);
		
		EXEC SQL ROLLBACK WORK RELEASE;
		
		APL_GOBACK_FAIL	
	}

	
	 
	int_retval = CO_Proc_BtchLock(argv,l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to lock BATCH_IN_PROC record - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		EXEC SQL ROLLBACK WORK RELEASE;
		
		APL_GOBACK_FAIL
	}

	

	int_retval = EOM_Proc_EvtHoff(argv,l_ptr_ini_file,l_ptr_log_file,&l_intl_envdatastruct_h,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		int_l_flg = 1;

	   CO_Proc_Exit(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);
		
		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);
		}

		CO_ProcMonitor(l_ptr_log_file,"FAILURE from Tax Hand-off h_file generation program \n",NULL,&l_intl_envdatastruct_h);

		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		APL_GOBACK_FAIL	
	}
	else
	{
		int_l_flg = 0;

		CO_Proc_Exit(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);

		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);

		}

		CO_ProcMonitor(l_ptr_log_file,"SUCCESS from Tax Hand-off h_file generation program \n",NULL,&l_intl_envdatastruct_h);

		
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		APL_GOBACK_SUCCESS
	}

	RETURN_SUCCESS	: 
	{
		fclose(l_ptr_ini_file);
	   return(0);
	}

	RETURN_FAILURE	: 
	{
		fclose(l_ptr_ini_file);
  		return(-1);	
	}
}



int EOM_Proc_EvtHoff(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int						int_retval;
	char						**temp = NULL;
	int						int_num = 0;
	MT_EOM_TAX_STRUCT_H		l_mt_eom_tax_struct_h;
	char						chr_l_tx_handoff_dir[FILENAME_LEN_A] = APL_NULL_STRING;
	char						chr_l_cd_handoff_dir[FILENAME_LEN_A] = APL_NULL_STRING;
	char						chr_l_in_handoff_dir[FILENAME_LEN_A] = APL_NULL_STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Proc_EvtHoff \n",NULL,p_intl_env_data_struct_h_d);

	memset(&l_mt_eom_tax_struct_h,NULL,sizeof(MT_EOM_TAX_STRUCT_H));

	

	if (CO_SplitStr(argv[9],'|',&int_num,&temp) != APL_SUCCESS)
		APL_GOBACK_FAIL

	strcpy(l_mt_eom_tax_struct_h.h_tx_fromdate,temp[0]);
	strcpy(l_mt_eom_tax_struct_h.h_tx_todate,temp[1]);
	strcpy(l_mt_eom_tax_struct_h.h_livehist_ind,temp[2]);
	strcpy(l_mt_eom_tax_struct_h.h_code_fromdt,temp[3]);
	strcpy(l_mt_eom_tax_struct_h.h_code_todt,temp[4]);
	strcpy(l_mt_eom_tax_struct_h.h_in_fromdate,temp[5]);
	strcpy(l_mt_eom_tax_struct_h.h_in_todate,temp[6]);
	strcpy(l_mt_eom_tax_struct_h.h_tx_code_in_flg,temp[7]);

	if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_PATH",l_mt_eom_tax_struct_h.h_dlhf_dir,l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL
	
	if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_PATH",l_mt_eom_tax_struct_h.h_code_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL
	
	if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_PATH",l_mt_eom_tax_struct_h.h_hf_dir,l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	if (strlen(l_mt_eom_tax_struct_h.h_tx_code_in_flg) == 0)
		APL_DATA_MISSING("TX_CD_IN flg",APL_NULL_STRING,APL_NULL_STRING)

	if (strcmp(l_mt_eom_tax_struct_h.h_tx_code_in_flg,"T") == 0)
	{
		if (strlen(l_mt_eom_tax_struct_h.h_tx_fromdate) == 0)
			APL_DATA_MISSING("TX FROM DATE",APL_NULL_STRING,APL_NULL_STRING)
		if (strlen(l_mt_eom_tax_struct_h.h_tx_todate) == 0)
			APL_DATA_MISSING("TX TO DATE",APL_NULL_STRING,APL_NULL_STRING)
		
		if (strlen(l_mt_eom_tax_struct_h.h_livehist_ind) == 0)
			APL_DATA_MISSING("LIVE HIST FLG",APL_NULL_STRING,APL_NULL_STRING)
	}
	else if (strcmp(l_mt_eom_tax_struct_h.h_tx_code_in_flg,"C") == 0)
	{
		if (strlen(l_mt_eom_tax_struct_h.h_code_fromdt) == 0)
			APL_DATA_MISSING("CD FROM DATE",APL_NULL_STRING,APL_NULL_STRING)
		if (strlen(l_mt_eom_tax_struct_h.h_code_todt) == 0)
			APL_DATA_MISSING("CD TO DATE",APL_NULL_STRING,APL_NULL_STRING)
	}
	else if (strcmp(l_mt_eom_tax_struct_h.h_tx_code_in_flg,"I") == 0)
	{
		if (strlen(l_mt_eom_tax_struct_h.h_in_fromdate) == 0)
			APL_DATA_MISSING("IN FROM DATE",APL_NULL_STRING,APL_NULL_STRING)
		if (strlen(l_mt_eom_tax_struct_h.h_in_todate) == 0)
			APL_DATA_MISSING("IN TO DATE",APL_NULL_STRING,APL_NULL_STRING)
	}

	if (strlen(l_mt_eom_tax_struct_h.h_dlhf_dir) == 0)
		APL_DATA_MISSING("TX HANDOFF DIR",APL_NULL_STRING,APL_NULL_STRING)
	
	if (strlen(l_mt_eom_tax_struct_h.h_code_handoff_dir) == 0)
		APL_DATA_MISSING("CD HANDOFF DIR",APL_NULL_STRING,APL_NULL_STRING)
	
	if (strlen(l_mt_eom_tax_struct_h.h_hf_dir) == 0)
		APL_DATA_MISSING("IN HANDOFF DIR",APL_NULL_STRING,APL_NULL_STRING)
	
	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
		APL_GOBACK_FAIL
	
	

	if (strcmp(l_mt_eom_tax_struct_h.h_tx_code_in_flg,"T") == 0)
	{
		int_retval = EOM_Proc_TaxEvtHoff(l_mt_eom_tax_struct_h.h_tx_fromdate,l_mt_eom_tax_struct_h.h_tx_todate,l_mt_eom_tax_struct_h.h_livehist_ind,l_mt_eom_tax_struct_h.h_dlhf_dir,argv,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL
	}
	
	

	else if (strcmp(l_mt_eom_tax_struct_h.h_tx_code_in_flg,"C") == 0)
	{
		int_retval = EOM_Proc_CDEvtHoff(l_mt_eom_tax_struct_h.h_code_fromdt,l_mt_eom_tax_struct_h.h_code_todt,l_mt_eom_tax_struct_h.h_code_handoff_dir,argv,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL
	}
	
	

	else if (strcmp(l_mt_eom_tax_struct_h.h_tx_code_in_flg,"I") == 0)
	{
		int_retval = EOM_Proc_BIEvtHoff(l_mt_eom_tax_struct_h.h_in_fromdate,l_mt_eom_tax_struct_h.h_in_todate,l_mt_eom_tax_struct_h.h_hf_dir,argv,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_EvtHoff with SUCCESS \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_EvtHoff with FAILURE \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_FAILURE);
	}
}



int EOM_Proc_TaxEvtHoff(char *p_tx_fromdate,char *p_tx_todate,char *p_tx_livehist_flg,char *p_tx_handoff_dir,char **argv,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca  		sqlca;
	char					chr_l_tx_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
	char					chr_l_sfk_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
	FILE					*l_ptr_TX_handoff_file = NULL;
	FILE					*l_ptr_sfk_handoff_file = NULL;
	FILE					*l_TX_hoff_rpt_file = NULL;
	FILE					*l_sfk_hoff_rpt_file = NULL;
	int					int_retval;
	char					chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short					i_instr_code;
	char					chr_l_tx_fromdt[APL_DATE_LEN] = APL_NULL_STRING;
	char					chr_l_date[5];
	char					chr_l_typeoftrd[3] = APL_NULL_STRING;
	short					i_classofdl;
	char					chr_l_client_a[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	short					i_dl_client;
	char					chr_l_mothinstrflg[2] = APL_NULL_STRING;
	short					i_mother_sec_ind;
	char					chr_l_instr_parent[9] = APL_NULL_STRING;
	short					i_instr_parent;
	char					chr_l_domicile[2] = APL_NULL_STRING;
	short					i_domestic;
	char					int_l_txn_type[10] = APL_NULL_STRING;
	char					chr_l_ca_id[21] = APL_NULL_STRING;
	short					i_corp_id;
	char					chr_l_ce_typ[3] = APL_NULL_STRING;
	short					i_ca_event;
	char					chr_l_trade_refno[17] = APL_NULL_STRING;
	short					i_trade_refno;
	double				l_tot_safekeep_pos = 0.0;
	short					i_tot_safek;
	char					chr_l_newissue[2] = APL_NULL_STRING;
	short					i_new_issue;
	char					chr_l_cname[66] = APL_NULL_STRING;
	short					i_clnt_clr_name;
	char					chr_l_cname_buf[36] = APL_NULL_STRING;
	int					i,int_l_start;
	char					chr_l_instr_dt[9] = APL_NULL_STRING;
	short					i_instrdate;
	char					chr_l_instr_dt_h[7];
	char					chr_l_trcode_a[2] = APL_NULL_STRING;
	short					i_dealcd;
	char					chr_l_trcode_desc[4] = APL_NULL_STRING;
	char					int_l_domcpac[11] = APL_NULL_STRING;
	short					i_domcpclt_cd;
	double				dbl_l_amount_a=0.0;
	short					i_amt;
	double				l_quantity=0.0;
	short					i_qty;
	char					chr_l_domcpac_desc[66] = APL_NULL_STRING;
	short					i_domcpclt_cd_detail;
	char					chr_l_domcpac_desc_buf[41] = APL_NULL_STRING;
	char					chr_l_trdt_a[APL_DATE_LEN] = APL_NULL_STRING;
	short					i_dlt;
	char					chr_l_trdt_h[7];
	char					chr_l_amount_buf[20] = APL_NULL_STRING;
	char					chr_l_dec_buf[5] = APL_NULL_STRING;	
	char					*chr_l_ptr_decimal = NULL;
	char					chr_l_amount_buf1[19] = APL_NULL_STRING;
	char					chr_l_amount_buf_int[16] = APL_NULL_STRING;
	char					chr_l_qty_buf[27] = APL_NULL_STRING;
	char					chr_l_qty_buf1[25] = APL_NULL_STRING;
	char					chr_l_qty_buf_int[22] = APL_NULL_STRING;
	char					chr_l_tot_safek_buf[27] = APL_NULL_STRING;
	char					chr_l_tot_safek_buf_int[22] = APL_NULL_STRING;
	char					chr_l_tot_safek_buf1[25] = APL_NULL_STRING;
	INTL_REPT_STRUCT_H		*l_intl_rept_struct_ha	=NULL;
	char					chr_l_taxid[APL_CLIENT_LENGTH]=APL_NULL_STRING;
	short					i_tax_id=0;
	int					int_l_period_flg=0;	
	EXEC SQL VAR chr_l_client_a IS STRING;
	EXEC SQL VAR chr_l_instrcode_a IS STRING;
	EXEC SQL VAR chr_l_typeoftrd IS STRING;
	EXEC SQL VAR chr_l_instr_parent IS STRING;
	EXEC SQL VAR chr_l_ca_id IS STRING;
	EXEC SQL VAR chr_l_ce_typ IS STRING;
	EXEC SQL VAR chr_l_trade_refno IS STRING;
	EXEC SQL VAR chr_l_domicile IS STRING;
	EXEC SQL VAR chr_l_cname IS STRING;
	EXEC SQL VAR int_l_domcpac IS STRING;
	EXEC SQL VAR chr_l_domcpac_desc IS STRING;
	EXEC SQL VAR chr_l_taxid IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Proc_TaxEvtHoff \n",NULL,p_intl_env_data_struct_h_d);

	l_intl_rept_struct_ha	=(INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);

	sqlca.sqlcode = 0;
	
	int_retval = CO_Rtv_RptFileName("TH","Tax Handoff Report",80,p_intl_env_data_struct_h_d->processtion,NULL,&l_TX_hoff_rpt_file,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);

	

   int_retval = EOM_Prnt_TaxRptHdr(l_TX_hoff_rpt_file,p_tx_fromdate,p_tx_todate,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);

	sleep(2);

	int_retval = CO_Rtv_RptFileName("TH","Safekeeping Report",80,p_intl_env_data_struct_h_d->processtion,NULL,&l_sfk_hoff_rpt_file,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);

	

	int_retval = EOM_Prnt_InstrRptHdr(l_sfk_hoff_rpt_file,p_tx_fromdate,p_tx_todate,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);

	strcpy(chr_l_tx_fromdt,p_tx_fromdate);

	chr_l_date[0] = chr_l_tx_fromdt[8];
	chr_l_date[1] = chr_l_tx_fromdt[9];
	chr_l_date[2] = chr_l_tx_fromdt[3];
	chr_l_date[3] = chr_l_tx_fromdt[4];
	chr_l_date[4] = '\0';

	
	strcpy(chr_l_tx_handoff_file_name,p_tx_handoff_dir);
	strcat(chr_l_tx_handoff_file_name,"AAT");
	strcat(chr_l_tx_handoff_file_name,chr_l_date);
	strcat(chr_l_tx_handoff_file_name,".txt");

	if ((l_ptr_TX_handoff_file = fopen(chr_l_tx_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);

			  

			  strcpy(l_intl_rept_struct_ha->report_name, chr_l_tx_handoff_file_name+strlen(p_tx_handoff_dir));
			  strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
			  strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
			  l_intl_rept_struct_ha->report_width = 100;
			  strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
			  strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
			  strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);

			  

			  if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
			  {
				  APL_GOBACK_FAIL
			  }

	
	
	strcpy(chr_l_sfk_handoff_file_name,p_tx_handoff_dir);
	strcat(chr_l_sfk_handoff_file_name,"AAP");
	strcat(chr_l_sfk_handoff_file_name,chr_l_date);
	strcat(chr_l_sfk_handoff_file_name,".txt");

	if ((l_ptr_sfk_handoff_file = fopen(chr_l_sfk_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);

			  memset(l_intl_rept_struct_ha, NULL, sizeof(INTL_REPT_STRUCT_H));
			  

			  strcpy(l_intl_rept_struct_ha->report_name, chr_l_sfk_handoff_file_name+strlen(p_tx_handoff_dir));
			  strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
			  strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
			  l_intl_rept_struct_ha->report_width = 100;
			  strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
			  strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
			  strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);

			  

			  if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
			  {
				  APL_GOBACK_FAIL
			  }
	
   int_l_period_flg = 0;
   if ( CO_Chk_CcyConvDt("",&int_l_period_flg,l_debug_info_ptr) == APL_FAILURE )
   {
      APL_GOBACK_FAIL
   }
	

	if (strcmp(p_tx_livehist_flg,"L") == 0)
	{
		
			
		EXEC SQL DECLARE TradeRecs1 CURSOR FOR
			SELECT a.client,a.IDENTIY_NO,a.instr_code,a.dl_class,TO_CHAR(a.INSTRUMENT_DT,'DD/MM/YY'),NVL(a.AMOUNT,0),a.QTY,a.deal_cd,a.domestic_cpclt,TO_CHAR(a.deal_date,'DD/MM/YY')
			FROM  DL_DEAL a ,MT_CLIENT b
			WHERE a.INSTRUMENT_DT >= :p_tx_fromdate
			AND   a.INSTRUMENT_DT <= :p_tx_todate
			AND	a.client = b.cln_code
			AND 	b.CLN_ALLOW_REGIND = 'Y'
			AND 	IDENTIY_NO not like 'XD%'
			AND	IDENTIY_NO not like 'XR%' 	
			AND	IDENTIY_NO not like 'LOCCHG%' 	
			ORDER BY a.CLIENT,a.INSTR_CODE
			FOR UPDATE;

		EXEC SQL OPEN TradeRecs1;
	}
	else
	{
		
		
		
		EXEC SQL DECLARE TradeRecs2 CURSOR FOR
			SELECT a.client,a.IDENTIY_NO,a.instr_code,a.dl_class,TO_CHAR(a.INSTRUMENT_DT,'DD/MM/YY'),NVL(a.AMOUNT,0),a.QTY,a.deal_cd,a.domestic_cpclt,TO_CHAR(a.deal_date,'DD/MM/YY')
			FROM  DL_HISDEAL a,MT_CLIENT b
			WHERE INSTRUMENT_DT >= :p_tx_fromdate
			AND   INSTRUMENT_DT <= :p_tx_todate
			AND 	a.client = b.cln_code
			AND	b.CLN_ALLOW_REGIND = 'Y'
			AND 	IDENTIY_NO not like 'XD%'
			AND	IDENTIY_NO not like 'XR%' 	
			AND	IDENTIY_NO not like 'LOCCHG%' 	
			ORDER BY a.CLIENT,a.INSTR_CODE
			FOR UPDATE;

		EXEC SQL OPEN TradeRecs2;
	}

	IS_ANY_ORA_ERROR

	for(;;)
	{
		i = 0;
		int_l_start = 0;

		if (strcmp(p_tx_livehist_flg,"L") == 0)
			EXEC SQL FETCH TradeRecs1 INTO :chr_l_client_a:i_dl_client,:chr_l_trade_refno:i_trade_refno,:chr_l_instrcode_a:i_instr_code,:chr_l_typeoftrd:i_classofdl,:chr_l_instr_dt:i_instrdate,:dbl_l_amount_a:i_amt,:l_quantity:i_qty,:chr_l_trcode_a:i_dealcd,:int_l_domcpac:i_domcpclt_cd,:chr_l_trdt_a:i_dlt;
		else
			EXEC SQL FETCH TradeRecs2 INTO :chr_l_client_a:i_dl_client,:chr_l_trade_refno:i_trade_refno,:chr_l_instrcode_a:i_instr_code,:chr_l_typeoftrd:i_classofdl,:chr_l_instr_dt:i_instrdate,:dbl_l_amount_a:i_amt,:l_quantity:i_qty,:chr_l_trcode_a:i_dealcd,:int_l_domcpac:i_domcpclt_cd,:chr_l_trdt_a:i_dlt;
		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;
		
		
		memset(chr_l_taxid,APL_NULL_CHAR,	APL_CLIENT_LENGTH);
		i_tax_id=0;
		EXEC SQL SELECT CLN_DOMICILE,replace(cln_name,',',' '),CLN_TAX_ID
		INTO :chr_l_domicile:i_domestic,:chr_l_cname:i_clnt_clr_name,:chr_l_taxid:i_tax_id
		FROM MT_CLIENT
		WHERE cln_code = :chr_l_client_a;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if (strcmp(chr_l_domicile,"2") != 0)
			continue;
		
		EXEC SQL SELECT replace(cln_name,',',' ')
		INTO :chr_l_domcpac_desc:i_domcpclt_cd_detail
		FROM MT_CLIENT
		WHERE cln_code = :int_l_domcpac;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		EXEC SQL SELECT MOTHER_SEC_IND,INSTR_PARENT,NEW_ISSUE
		INTO :chr_l_mothinstrflg:i_mother_sec_ind,:chr_l_instr_parent:i_instr_parent,:chr_l_newissue:i_new_issue
		FROM MT_INSTRUMENT
		WHERE instr_code = :chr_l_instrcode_a;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
		
		if (strcmp(chr_l_mothinstrflg,"N") == 0)
			strcpy(chr_l_instrcode_a,chr_l_instr_parent);

		if (strcmp(chr_l_newissue,"N") == 0)
			strcpy(chr_l_newissue,"E");

		if (strcmp(chr_l_typeoftrd,"10") == 0)
			strcpy(int_l_txn_type,"CONV");
		else if (strcmp(chr_l_typeoftrd,"18") == 0)
			strcpy(int_l_txn_type,"RL");
		else if (strcmp(chr_l_typeoftrd,"19") == 0)
		{
			EXEC SQL SELECT corp_id
			INTO :chr_l_ca_id:i_corp_id
			FROM CACHEQUE
			WHERE DEAL_IDENTITY_NO = :chr_l_trade_refno;
			
			if (APL_ZERO_RESULT_SET)
			{
				strcpy(chr_l_ce_typ,"SP");
			}
			else
			{
				IS_ANY_ORA_ERROR

				EXEC SQL SELECT CA_EVENT
				INTO :chr_l_ce_typ:i_ca_event
				FROM CAEVENT
				WHERE corp_id = :chr_l_ca_id;
			
				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
			}

			if (strcmp(chr_l_ce_typ,"BO") == 0)
				strcpy(int_l_txn_type,"BO");
			else if (strcmp(chr_l_ce_typ,"SD") == 0)
				strcpy(int_l_txn_type,"SD");
			else if (strcmp(chr_l_ce_typ,"RT") == 0)
				strcpy(int_l_txn_type,"RT");
			else if (strcmp(chr_l_ce_typ,"RD") == 0)
				strcpy(int_l_txn_type,"RD");
			else if (strcmp(chr_l_ce_typ,"SP") == 0)
				strcpy(int_l_txn_type,"SP");
			else
				strcpy(int_l_txn_type,"    ");
		}
		else
			strcpy(int_l_txn_type,"    ");

		strncpy(chr_l_domcpac_desc_buf,chr_l_domcpac_desc,35);

		chr_l_domcpac_desc_buf[35] = APL_NULL_CHAR;
		
		strncpy(chr_l_cname_buf,chr_l_cname,35);

		chr_l_cname_buf[35] = APL_NULL_CHAR;

		if (strcmp(chr_l_trcode_a,APL_DEAL_DF) == 0)
			strcpy(chr_l_trcode_desc,"DF");
		else if (strcmp(chr_l_trcode_a,APL_DEAL_RF) == 0)
			strcpy(chr_l_trcode_desc,"RF");
		else if (strcmp(chr_l_trcode_a,APL_DEAL_DVP) == 0)
			strcpy(chr_l_trcode_desc,"DvP");
		else if (strcmp(chr_l_trcode_a,APL_DEAL_RVP) == 0)
			strcpy(chr_l_trcode_desc,"RvP");
		else if (strcmp(chr_l_trcode_a,APL_DEAL_CD) == 0)
			strcpy(chr_l_trcode_desc,"CD");
		else if (strcmp(chr_l_trcode_a,APL_DEAL_CR) == 0)
			strcpy(chr_l_trcode_desc,"CR");
		else if (strcmp(chr_l_trcode_a,APL_DEAL_DCD) == 0)
			strcpy(chr_l_trcode_desc,"DCD");
		else if (strcmp(chr_l_trcode_a,APL_DEAL_RCR) == 0)
			strcpy(chr_l_trcode_desc,"RCR");

		

		sprintf(chr_l_amount_buf,"%lf",dbl_l_amount_a);

		chr_l_ptr_decimal = strchr(chr_l_amount_buf,'.');
		
		if (chr_l_ptr_decimal != NULL)
			strncpy(chr_l_dec_buf,chr_l_ptr_decimal,3);
		else
			strcpy(chr_l_dec_buf,APL_NULL_STRING);

		chr_l_dec_buf[3] = APL_NULL_CHAR;

		while(chr_l_amount_buf[int_l_start] != '.')
			chr_l_amount_buf_int[i++] = chr_l_amount_buf[int_l_start++];

		chr_l_amount_buf_int[i] = APL_NULL_CHAR;

		strcpy(chr_l_amount_buf1,chr_l_amount_buf_int);
		strcat(chr_l_amount_buf1,chr_l_dec_buf);
		
		
		
		
		
		sprintf(chr_l_qty_buf,"%lf",l_quantity);

		chr_l_ptr_decimal = strchr(chr_l_qty_buf,'.');
		
		
		if (chr_l_ptr_decimal != NULL)
		{
			if(int_l_period_flg==1)
			{
				strncpy(chr_l_dec_buf,chr_l_ptr_decimal,4);
				chr_l_dec_buf[4] = APL_NULL_CHAR;
			}
			else
			{
				strncpy(chr_l_dec_buf,chr_l_ptr_decimal,3);
				chr_l_dec_buf[3] = APL_NULL_CHAR;
			}
		}
		else
			strcpy(chr_l_dec_buf,APL_NULL_STRING);

		int_l_start = 0;
		i = 0;

		while(chr_l_qty_buf[int_l_start] != '.')
			chr_l_qty_buf_int[i++] = chr_l_qty_buf[int_l_start++];

		chr_l_qty_buf_int[i] = APL_NULL_CHAR;

		strcpy(chr_l_qty_buf1,chr_l_qty_buf_int);
		strcat(chr_l_qty_buf1,chr_l_dec_buf);
		
		

		chr_l_instr_dt_h[0] = chr_l_instr_dt[0];
		chr_l_instr_dt_h[1] = chr_l_instr_dt[1];
		chr_l_instr_dt_h[2] = chr_l_instr_dt[3];
		chr_l_instr_dt_h[3] = chr_l_instr_dt[4];
		chr_l_instr_dt_h[4] = chr_l_instr_dt[6];
		chr_l_instr_dt_h[5] = chr_l_instr_dt[7];
		chr_l_instr_dt_h[6] = '\0';
		
		chr_l_trdt_h[0] = chr_l_trdt_a[0];
		chr_l_trdt_h[1] = chr_l_trdt_a[1];
		chr_l_trdt_h[2] = chr_l_trdt_a[3];
		chr_l_trdt_h[3] = chr_l_trdt_a[4];
		chr_l_trdt_h[4] = chr_l_trdt_a[6];
		chr_l_trdt_h[5] = chr_l_trdt_a[7];
		chr_l_trdt_h[6] = '\0';
		
		fprintf(l_ptr_TX_handoff_file,"%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s\n",chr_l_client_a,chr_l_instrcode_a,chr_l_instr_dt_h,chr_l_amount_buf1,chr_l_qty_buf1,chr_l_trcode_desc,chr_l_domcpac_desc_buf,chr_l_trade_refno,chr_l_newissue,int_l_txn_type,chr_l_trdt_h,chr_l_taxid);
		
		fprintf(l_TX_hoff_rpt_file,"%-12s%-38s%-14s%-22s%-22s%-28s%-12s%-44s%-18s%-12s%-12s%-22s%-10s\n\n",chr_l_client_a,chr_l_cname_buf,chr_l_instrcode_a,chr_l_instr_dt,chr_l_amount_buf1,chr_l_qty_buf1,chr_l_trcode_desc,chr_l_domcpac_desc_buf,chr_l_trade_refno,chr_l_newissue,int_l_txn_type,chr_l_trdt_a,chr_l_taxid);
	}

	if (strcmp(p_tx_livehist_flg,"L") == 0)
		EXEC SQL CLOSE TradeRecs1;
	else
		EXEC SQL CLOSE TradeRecs2;

	

	EXEC SQL LOCK TABLE DL_SAFEK IN EXCLUSIVE MODE NOWAIT;
	IS_ANY_ORA_ERROR

	 
	
	if (strcmp(p_tx_livehist_flg,"L") == 0)
	{
	EXEC SQL DECLARE SafekRecs1 CURSOR FOR
		SELECT a.client,a.instr_code,SUM(NVL(a.safekeep_pos,0))
		FROM  DL_SAFEK a,MT_CLIENT b
		WHERE a.client = b.cln_code
		AND	b.CLN_ALLOW_REGIND = 'Y'
		GROUP BY a.CLIENT,a.INSTR_CODE;

	EXEC SQL OPEN SafekRecs1;
	}
	else
	{
	
	EXEC SQL DECLARE SafekRecs2 CURSOR FOR
		SELECT a.client,a.instr_code,SUM(NVL(a.safekeep_pos,0))
		FROM  DL_HISSAFEK a,MT_CLIENT b
		WHERE a.client = b.cln_code
		AND	b.CLN_ALLOW_REGIND = 'Y'
		AND   a.POSIT_DATE=:p_tx_todate
		GROUP BY a.CLIENT,a.INSTR_CODE;

	EXEC SQL OPEN SafekRecs2;
	}

	IS_ANY_ORA_ERROR

	for(;;)
	{
		if (strcmp(p_tx_livehist_flg,"L") == 0)
		{
		EXEC SQL FETCH SafekRecs1 INTO :chr_l_client_a:i_dl_client,:chr_l_instrcode_a:i_instr_code,:l_tot_safekeep_pos:i_tot_safek;
		}
		else
		{
		EXEC SQL FETCH SafekRecs2 INTO :chr_l_client_a:i_dl_client,:chr_l_instrcode_a:i_instr_code,:l_tot_safekeep_pos:i_tot_safek;
		}

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;

		
		
		memset(chr_l_taxid,APL_NULL_CHAR,	APL_CLIENT_LENGTH);
		i_tax_id=0;
		EXEC SQL SELECT cln_domicile,replace(cln_name,',',' '),CLN_TAX_ID
		INTO :chr_l_domicile:i_domestic,:chr_l_cname:i_clnt_clr_name,:chr_l_taxid:i_tax_id
		FROM MT_CLIENT
		WHERE cln_code = :chr_l_client_a;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if (strcmp(chr_l_domicile,"2") != 0)
			continue;

		EXEC SQL SELECT MOTHER_SEC_IND,INSTR_PARENT,NEW_ISSUE
		INTO :chr_l_mothinstrflg:i_mother_sec_ind,:chr_l_instr_parent:i_instr_parent,:chr_l_newissue:i_new_issue
		FROM MT_INSTRUMENT
		WHERE instr_code = :chr_l_instrcode_a;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if (strcmp(chr_l_mothinstrflg,"N") == 0)
			strcpy(chr_l_instrcode_a,chr_l_instr_parent);

		if (strcmp(chr_l_newissue,"N") == 0)
			strcpy(chr_l_newissue,"E");

		strncpy(chr_l_cname_buf,chr_l_cname,35);

		chr_l_cname_buf[35] = APL_NULL_CHAR;

		

		i = 0;
		int_l_start = 0;
		
		sprintf(chr_l_tot_safek_buf,"%lf",l_tot_safekeep_pos);

		chr_l_ptr_decimal = strchr(chr_l_tot_safek_buf,'.');

		
		if (chr_l_ptr_decimal != NULL)
		{	
			if(int_l_period_flg==1)
			{
				strncpy(chr_l_dec_buf,chr_l_ptr_decimal,4);
				chr_l_dec_buf[4] = APL_NULL_CHAR;
			}
			else
			{
				strncpy(chr_l_dec_buf,chr_l_ptr_decimal,3);
				chr_l_dec_buf[3] = APL_NULL_CHAR;
			}
		}
		else
			strcpy(chr_l_dec_buf,APL_NULL_STRING);

		while(chr_l_tot_safek_buf[int_l_start] != '.')
			chr_l_tot_safek_buf_int[i++] = chr_l_tot_safek_buf[int_l_start++];

		chr_l_tot_safek_buf_int[i] = APL_NULL_CHAR;
	
		strcpy(chr_l_tot_safek_buf1,chr_l_tot_safek_buf_int);
		strcat(chr_l_tot_safek_buf1,chr_l_dec_buf);

		
		
		fprintf(l_ptr_sfk_handoff_file,"%s,%s,%s,%s,%s\n",chr_l_client_a,chr_l_instrcode_a,chr_l_newissue,chr_l_tot_safek_buf1,chr_l_taxid);
		
		fprintf(l_sfk_hoff_rpt_file,"%-12s%-45s%-14s%-16s%s%-10s\n\n",chr_l_client_a,chr_l_cname_buf,chr_l_instrcode_a,chr_l_newissue,chr_l_tot_safek_buf1,chr_l_taxid);
	} 
	
	if (strcmp(p_tx_livehist_flg,"L") == 0)
	{
		EXEC SQL CLOSE SafekRecs1;
	}
	else
	{
		EXEC SQL CLOSE SafekRecs2;
	}

	fprintf(l_sfk_hoff_rpt_file,"\n\n");

	for(i=0;i<135;i++)
		fprintf(l_sfk_hoff_rpt_file,"-");
	
	fprintf(l_TX_hoff_rpt_file,"\n\n");

	for(i=0;i<135;i++)
		fprintf(l_TX_hoff_rpt_file,"-");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
	   

		EXEC SQL COMMIT WORK;
		IS_ANY_ORA_ERROR

		

		int_retval = CO_Proc_BtchLock(argv,p_ptr_log_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

		fclose(l_ptr_TX_handoff_file);
		
		fclose(l_ptr_sfk_handoff_file);

		free(l_intl_rept_struct_ha);

		int_retval = CO_Proc_RptClose(l_TX_hoff_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);
		
		int_retval = CO_Proc_RptClose(l_sfk_hoff_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_TaxEvtHoff with SUCCESS \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		

		EXEC SQL ROLLBACK WORK;
		IS_ANY_ORA_ERROR

		

		int_retval = CO_Proc_BtchLock(argv,p_ptr_log_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL
			
		fclose(l_ptr_TX_handoff_file);
		
		fclose(l_ptr_sfk_handoff_file);

		free(l_intl_rept_struct_ha);	

		int_retval = CO_Proc_RptClose(l_TX_hoff_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);
		
		int_retval = CO_Proc_RptClose(l_sfk_hoff_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);

		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_TaxEvtHoff with FAILURE \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_FAILURE);
	}
 }



int EOM_Proc_CDEvtHoff(char *p_cd_fromdate,char *p_cd_todate,char *p_cd_handoff_dir,char **argv,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca  		sqlca;
	char					chr_l_client_a[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	short					i_dl_client;
	double				l_received_amt=0.0;
	short					i_amount_recd;
	char					chr_l_amt_recd_buf[20] = APL_NULL_STRING;
	char					*chr_l_ptr_decimal = NULL;
	char					chr_l_dec_buf[4] = APL_NULL_STRING;
	char					chr_l_amt_recd_buf1[19] = APL_NULL_STRING;
	char					chr_l_amt_recd_buf_int[16] = APL_NULL_STRING;
	char					chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short					i_instr_code;
	char					chr_l_ce_typ[3] = APL_NULL_STRING;
	short					i_ca_event;
	char					chr_l_ce_type[3] = APL_NULL_STRING;
	char					chr_l_newissue[2] = APL_NULL_STRING;
	short					i_new_issue;
	char					chr_l_cname[66] = APL_NULL_STRING;
	short					i_clnt_clr_name;
	char					chr_l_cname_buf[41] = APL_NULL_STRING;
	char					chr_l_stat_dt[APL_DATE_LEN] = APL_NULL_STRING;
	short					i_stat_date;
	char					chr_l_stat_dt_h[7];
	char					chr_l_cd_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
	FILE					*l_cash_dividend_rpt_file = NULL;
	FILE					*l_ptr_CD_handoff_file = NULL;
	char					chr_l_cd_fromdt[APL_DATE_LEN] = APL_NULL_STRING;
	char					chr_l_date[5];
	int					int_retval;
	int					int_l_start = 0;
	int					i = 0;
	INTL_REPT_STRUCT_H		*l_intl_rept_struct_ha	=NULL;
	char					chr_l_taxid[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	short					i_tax_id =0;
	int					int_l_period_flg	=	0;	

	EXEC SQL VAR chr_l_client_a IS STRING;
	EXEC SQL VAR chr_l_instrcode_a IS STRING;
	EXEC SQL VAR chr_l_cname IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Proc_CDEvtHoff \n",NULL,p_intl_env_data_struct_h_d);
	
	l_intl_rept_struct_ha	=(INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);

	sqlca.sqlcode = 0;
	
	int_retval = CO_Rtv_RptFileName("CD","Cash Dividend Extract Report",80,p_intl_env_data_struct_h_d->processtion,NULL,&l_cash_dividend_rpt_file,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);
	
	

	int_retval = EOM_Prnt_CDRptHdr(l_cash_dividend_rpt_file,p_cd_fromdate,p_cd_todate,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);

	strcpy(chr_l_cd_fromdt,p_cd_fromdate);

	chr_l_date[0] = chr_l_cd_fromdt[8];
	chr_l_date[1] = chr_l_cd_fromdt[9];
	chr_l_date[2] = chr_l_cd_fromdt[3];
	chr_l_date[3] = chr_l_cd_fromdt[4];
	chr_l_date[4] = APL_NULL_CHAR;

	
	strcpy(chr_l_cd_handoff_file_name,p_cd_handoff_dir);
	strcat(chr_l_cd_handoff_file_name,"AAC");
	strcat(chr_l_cd_handoff_file_name,chr_l_date);
	strcat(chr_l_cd_handoff_file_name,".txt");

	if ((l_ptr_CD_handoff_file = fopen(chr_l_cd_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);

			  

			  strcpy(l_intl_rept_struct_ha->report_name, chr_l_cd_handoff_file_name+strlen(p_cd_handoff_dir));
			  strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
			  strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
			  l_intl_rept_struct_ha->report_width = 100;
			  strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
			  strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
			  strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);

			  

			  if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
			  {
				  APL_GOBACK_FAIL
			  }
	
	
   int_l_period_flg = 0;
   if ( CO_Chk_CcyConvDt("",&int_l_period_flg,l_debug_info_ptr) == APL_FAILURE )
   {
      APL_GOBACK_FAIL
   }


	strcpy((char *)chr_l_ce_type, "CD");
	
	 
	
	EXEC SQL DECLARE CashDividendRecs CURSOR FOR
		SELECT A.CLIENT,NVL(A.RECEIVED_AMT,0),TO_CHAR(A.PROCESSED_DATE,'DD/MM/YY'),B.INSTR_CODE,B.CA_EVENT
		FROM CAENTITLEMENT A,CAEVENT B,MT_CLIENT C
		WHERE A.CORP_ID = B.CORP_ID
		AND 	A.CLIENT = C.cln_code
		AND	C.CLN_ALLOW_REGIND = 'Y'
		AND 	A.RECEIVED_AMT > 0
		AND 	A.PROCESSED_DATE >= :p_cd_fromdate
		AND 	A.PROCESSED_DATE <= :p_cd_todate
		AND 	B.CA_EVENT = :chr_l_ce_type
		ORDER BY A.CLIENT,B.INSTR_CODE
		FOR UPDATE;

	EXEC SQL OPEN CashDividendRecs;

	IS_ANY_ORA_ERROR

	for(;;)
	{
		EXEC SQL FETCH CashDividendRecs INTO :chr_l_client_a:i_dl_client,:l_received_amt:i_amount_recd,:chr_l_stat_dt:i_stat_date,:chr_l_instrcode_a:i_instr_code,:chr_l_ce_typ:i_ca_event;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;

		
		
		memset(chr_l_taxid,APL_NULL_CHAR,	APL_CLIENT_LENGTH);
		i_tax_id=0;
		EXEC SQL SELECT replace(cln_name,',',' '),CLN_TAX_ID
		INTO :chr_l_cname:i_clnt_clr_name,chr_l_taxid:i_tax_id
		FROM MT_CLIENT
		WHERE cln_code = :chr_l_client_a;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		if (i_instr_code == -1)
			strcpy(chr_l_newissue,"E");
		else
		{
			EXEC SQL SELECT NEW_ISSUE
			INTO :chr_l_newissue:i_new_issue
			FROM MT_INSTRUMENT
			WHERE instr_code = :chr_l_instrcode_a;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

			if (strcmp(chr_l_newissue,"N") == 0)
				strcpy(chr_l_newissue,"E");
		}

		

		i = 0;
		int_l_start = 0;

		sprintf(chr_l_amt_recd_buf,"%f",l_received_amt);

		chr_l_ptr_decimal = strchr(chr_l_amt_recd_buf,'.');

		if (chr_l_ptr_decimal != NULL)
		{
			strncpy(chr_l_dec_buf,(chr_l_ptr_decimal),3);
			chr_l_dec_buf[3] = APL_NULL_CHAR;
		}
		else
			strcpy(chr_l_dec_buf,APL_NULL_STRING);

		while(chr_l_amt_recd_buf[int_l_start] != '.')
			chr_l_amt_recd_buf_int[i++] = chr_l_amt_recd_buf[int_l_start++];

		chr_l_amt_recd_buf_int[i] = APL_NULL_CHAR;

		strcpy(chr_l_amt_recd_buf1,chr_l_amt_recd_buf_int);
		strcat(chr_l_amt_recd_buf1,chr_l_dec_buf);
		
		

		strncpy(chr_l_cname_buf,chr_l_cname,40);

		chr_l_cname_buf[40] = APL_NULL_CHAR;

		chr_l_stat_dt_h[0] = chr_l_stat_dt[0]; 
		chr_l_stat_dt_h[1] = chr_l_stat_dt[1]; 
		chr_l_stat_dt_h[2] = chr_l_stat_dt[3]; 
		chr_l_stat_dt_h[3] = chr_l_stat_dt[4]; 
		chr_l_stat_dt_h[4] = chr_l_stat_dt[6]; 
		chr_l_stat_dt_h[5] = chr_l_stat_dt[7]; 
		chr_l_stat_dt_h[6] = '\0'; 

		fprintf(l_ptr_CD_handoff_file,"%s,%s,%s,%s,%s,%s,%s,%s\n",chr_l_client_a,chr_l_instrcode_a,chr_l_newissue,chr_l_ce_typ,chr_l_stat_dt_h,chr_l_amt_recd_buf1,chr_l_cname_buf,chr_l_taxid);
		
		fprintf(l_cash_dividend_rpt_file,"%-12s%-16s%-14s%-8s%-22s%-20s%-40s%-10s\n\n",chr_l_client_a,chr_l_instrcode_a,chr_l_newissue,chr_l_ce_typ,chr_l_stat_dt,chr_l_amt_recd_buf1,chr_l_cname_buf,chr_l_taxid);
	}

	EXEC SQL CLOSE CashDividendRecs;

	fprintf(l_cash_dividend_rpt_file,"\n\n");

	for(i=0;i<135;i++)	
		fprintf(l_cash_dividend_rpt_file,"-");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		

		EXEC SQL COMMIT WORK;
		IS_ANY_ORA_ERROR

	  

		int_retval = CO_Proc_BtchLock(argv,p_ptr_log_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

		fclose(l_ptr_CD_handoff_file);

		free(l_intl_rept_struct_ha);
		int_retval = CO_Proc_RptClose(l_cash_dividend_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);	
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_CDEvtHoff with SUCCESS \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		

		EXEC SQL ROLLBACK WORK;
		IS_ANY_ORA_ERROR

	  

		int_retval = CO_Proc_BtchLock(argv,p_ptr_log_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

		fclose(l_ptr_CD_handoff_file);
		
		free(l_intl_rept_struct_ha);

		int_retval = CO_Proc_RptClose(l_cash_dividend_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);	
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_CDEvtHoff with FAILURE \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_FAILURE);
	}
}




int EOM_Proc_BIEvtHoff(char *p_in_fromdate,char *p_in_todate,char *p_in_handoff_dir,char **argv,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca  		sqlca;
	char					chr_l_in_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
	FILE					*l_ptr_IN_handoff_file = NULL;
	FILE					*l_bond_intrst_rpt_file = NULL;
	int					int_retval;
	char					chr_l_client_a[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	short					i_dl_client;
	char					chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short					i_instr_code;
	char					chr_l_ce_typ[3] = APL_NULL_STRING;
	char					chr_l_newissue[2] = APL_NULL_STRING;
	short					i_new_issue;
	double				chr_l_ent_pos = 0.0;
	short					i_entitl_pos;
	char					chr_l_ca_id[21] = APL_NULL_STRING;
	short					i_corp_id;
	char					chr_l_stat_dt[APL_DATE_LEN];
	short					i_stat_date;
	char					chr_l_stat_dt_h[7];
	double				l_WHT = 0.0;
	short					i_WHT;
	double				l_tot_curr_pymt = 0.0;
	short					i_tot_cur_pmt;
	char					chr_l_in_fromdt[APL_DATE_LEN] = APL_NULL_STRING;
	char					chr_l_date[5];
	int					i,int_l_start;
	char					*chr_l_ptr_decimal = NULL;
	char					chr_l_dec_buf[5] = APL_NULL_STRING;
	char					chr_l_ent_pos_buf[27] = APL_NULL_STRING;
	char					chr_l_ent_pos_buf_int[22] = APL_NULL_STRING;
	char					chr_l_ent_pos_buf1[25] = APL_NULL_STRING;
	char					chr_l_tot_cur_pmt_buf[20] = APL_NULL_STRING;
	char					chr_l_tot_cur_pmt_buf_int[16] = APL_NULL_STRING;
	char					chr_l_tot_cur_pmt_buf1[19] = APL_NULL_STRING;
	char					chr_l_wht_buf[50] = APL_NULL_STRING;
	char					chr_l_wht_buf_int[50] = APL_NULL_STRING;
	char					chr_l_wht_buf1[50] = APL_NULL_STRING;
	INTL_REPT_STRUCT_H		*l_intl_rept_struct_ha	=NULL;
	char					chr_l_taxid[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	short					i_tax_id = 0;
	int					int_l_period_flg	=	0;	

	EXEC SQL VAR chr_l_client_a IS STRING;
	EXEC SQL VAR chr_l_instrcode_a IS STRING;
	EXEC SQL VAR chr_l_ce_typ IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Proc_BIEvtHoff \n",NULL,p_intl_env_data_struct_h_d);
	
	sqlca.sqlcode = 0;
	l_intl_rept_struct_ha	=(INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);
	
	int_retval = CO_Rtv_RptFileName("BI","Bond Interest Report",80,p_intl_env_data_struct_h_d->processtion,NULL,&l_bond_intrst_rpt_file,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);
	
	

	int_retval = EOM_Prnt_BIRptHdr(l_bond_intrst_rpt_file,p_in_fromdate,p_in_todate,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		return(APL_FAILURE);

	strcpy(chr_l_in_fromdt,p_in_fromdate);

	chr_l_date[0] = chr_l_in_fromdt[8];
	chr_l_date[1] = chr_l_in_fromdt[9];
	chr_l_date[2] = chr_l_in_fromdt[3];
	chr_l_date[3] = chr_l_in_fromdt[4];
	chr_l_date[4] = '\0';

	
	strcpy(chr_l_in_handoff_file_name,p_in_handoff_dir);
	strcat(chr_l_in_handoff_file_name,"AAI");
	strcat(chr_l_in_handoff_file_name,chr_l_date);
	strcat(chr_l_in_handoff_file_name,".txt");

	if ((l_ptr_IN_handoff_file = fopen(chr_l_in_handoff_file_name,"w")) == NULL)
		return(APL_FAILURE);

			  

			  strcpy(l_intl_rept_struct_ha->report_name, chr_l_in_handoff_file_name+strlen(p_in_handoff_dir));
			  strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
			  strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
			  l_intl_rept_struct_ha->report_width = 100;
			  strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
			  strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
			  strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);

			  

			  if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
			  {
				  APL_GOBACK_FAIL
			  }

   int_l_period_flg = 0;
   if ( CO_Chk_CcyConvDt("",&int_l_period_flg,l_debug_info_ptr) == APL_FAILURE )
   {
      APL_GOBACK_FAIL
   }


	strcpy((char *)chr_l_ce_typ, "BI");

  

	EXEC SQL LOCK TABLE CAENTITLEMENT IN EXCLUSIVE MODE NOWAIT;
	IS_ANY_ORA_ERROR

	EXEC SQL LOCK TABLE CAEVENT IN EXCLUSIVE MODE NOWAIT;
	IS_ANY_ORA_ERROR

	EXEC SQL LOCK TABLE CACHEQUE IN EXCLUSIVE MODE NOWAIT;
	IS_ANY_ORA_ERROR
  
  
	
	 
	
	EXEC SQL DECLARE BondInterestRecs CURSOR FOR
		SELECT A.CORP_ID,A.CLIENT,TO_CHAR(A.PROCESSED_DATE,'DD/MM/YY'),B.INSTR_CODE,NVL(A.ELIG_ENTITL_POS,0),SUM(NVL(C.CURR_PYMT,0)),SUM((NVL(C.CURR_PYMT,0)*NVL(C.TAX_RATE,0))/100)
		FROM CAENTITLEMENT A,CAEVENT B,CACHEQUE C,MT_CLIENT D
		WHERE A.CORP_ID = B.CORP_ID
		AND   A.CORP_ID = C.CORP_ID
		AND	A.CLIENT = D.cln_code
		AND	D.CLN_ALLOW_REGIND = 'Y'
		AND   A.RECEIVED_AMT > 0
		AND   C.CURR_PYMT > 0
		AND   A.PROCESSED_DATE >= :p_in_fromdate
		AND   A.PROCESSED_DATE <= :p_in_todate
		AND   B.CA_EVENT = :chr_l_ce_typ
		GROUP BY A.CORP_ID,A.CLIENT,A.PROCESSED_DATE,B.INSTR_CODE,A.ELIG_ENTITL_POS;

	EXEC SQL OPEN BondInterestRecs;

	IS_ANY_ORA_ERROR

	for(;;)
	{
		memset(chr_l_ca_id,APL_NULL_CHAR,sizeof(chr_l_ca_id));
		memset(chr_l_client_a,APL_NULL_CHAR,sizeof(chr_l_client_a));
		memset(chr_l_instrcode_a,APL_NULL_CHAR,sizeof(chr_l_instrcode_a));
		memset(chr_l_stat_dt,APL_NULL_CHAR,sizeof(chr_l_stat_dt));
		chr_l_ent_pos = 0.0;
		l_tot_curr_pymt = 0.0;
		l_WHT = 0.0;

		EXEC SQL FETCH BondInterestRecs INTO :chr_l_ca_id:i_corp_id,:chr_l_client_a:i_dl_client,:chr_l_stat_dt:i_stat_date,:chr_l_instrcode_a:i_instr_code,:chr_l_ent_pos:i_entitl_pos,:l_tot_curr_pymt:i_tot_cur_pmt,:l_WHT:i_WHT;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;

		if (i_tot_cur_pmt == -1)
			l_tot_curr_pymt = 0.0;
		
		if (i_WHT == -1)
			l_WHT = 0.0;

		if (i_instr_code == -1)
			strcpy(chr_l_newissue,"E");
		else
		{
			EXEC SQL SELECT NEW_ISSUE
			INTO :chr_l_newissue:i_new_issue
			FROM MT_INSTRUMENT
			WHERE instr_code = :chr_l_instrcode_a;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

			if (strcmp(chr_l_newissue,"N") == 0)
				strcpy(chr_l_newissue,"E");
		}

		
		
		memset(chr_l_taxid,APL_NULL_CHAR,	APL_CLIENT_LENGTH);
		i_tax_id=0;
		EXEC SQL SELECT CLN_TAX_ID
		INTO chr_l_taxid:i_tax_id
		FROM MT_CLIENT
		WHERE cln_code = :chr_l_client_a;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		chr_l_stat_dt_h[0] = chr_l_stat_dt[0];
		chr_l_stat_dt_h[1] = chr_l_stat_dt[1];
		chr_l_stat_dt_h[2] = chr_l_stat_dt[3];
		chr_l_stat_dt_h[3] = chr_l_stat_dt[4];
		chr_l_stat_dt_h[4] = chr_l_stat_dt[6];
		chr_l_stat_dt_h[5] = chr_l_stat_dt[7];
		chr_l_stat_dt_h[6] = '\0';

		

		i = 0;
		int_l_start = 0;

		sprintf(chr_l_ent_pos_buf,"%f",chr_l_ent_pos);

		chr_l_ptr_decimal = strchr(chr_l_ent_pos_buf,'.');

		
		if (chr_l_ptr_decimal != NULL)
		{
			if(int_l_period_flg==1)
			{
				strncpy(chr_l_dec_buf,chr_l_ptr_decimal,4);
				chr_l_dec_buf[4] = APL_NULL_CHAR;
			}
			else
			{
				strncpy(chr_l_dec_buf,chr_l_ptr_decimal,3);
				chr_l_dec_buf[3] = APL_NULL_CHAR;
			}
		}
		else
			strcpy(chr_l_dec_buf,APL_NULL_STRING);	

		while(chr_l_ent_pos_buf[int_l_start] != '.')
			chr_l_ent_pos_buf_int[i++] = chr_l_ent_pos_buf[int_l_start++];

		chr_l_ent_pos_buf_int[i] = APL_NULL_CHAR;

		strcpy(chr_l_ent_pos_buf1,chr_l_ent_pos_buf_int);
		strcat(chr_l_ent_pos_buf1,chr_l_dec_buf);
		
		
		
		
		
		i = 0;
		int_l_start = 0;

		sprintf(chr_l_tot_cur_pmt_buf,"%f",l_tot_curr_pymt);

		chr_l_ptr_decimal = strchr(chr_l_tot_cur_pmt_buf,'.');

		if (chr_l_ptr_decimal != NULL)
		{
			strncpy(chr_l_dec_buf,chr_l_ptr_decimal,3);
			chr_l_dec_buf[3] = APL_NULL_CHAR;
		}
		else
			strcpy(chr_l_dec_buf,APL_NULL_STRING);	
	
		while(chr_l_tot_cur_pmt_buf[int_l_start] != '.')
			chr_l_tot_cur_pmt_buf_int[i++] = chr_l_tot_cur_pmt_buf[int_l_start++];

		chr_l_tot_cur_pmt_buf_int[i] = APL_NULL_CHAR;

		strcpy(chr_l_tot_cur_pmt_buf1,chr_l_tot_cur_pmt_buf_int);
		strcat(chr_l_tot_cur_pmt_buf1,chr_l_dec_buf);
		
		
		
		
		
		i = 0;
		int_l_start = 0;

		sprintf(chr_l_wht_buf,"%f",l_WHT);

		chr_l_ptr_decimal = strchr(chr_l_wht_buf,'.');

		if (chr_l_ptr_decimal != NULL)
		{
			strncpy(chr_l_dec_buf,chr_l_ptr_decimal,3);
			chr_l_dec_buf[3] = APL_NULL_CHAR;
		}
		else
			strcpy(chr_l_dec_buf,APL_NULL_STRING);

		while(chr_l_wht_buf[int_l_start] != '.')
			chr_l_wht_buf_int[i++] = chr_l_wht_buf[int_l_start++];

		chr_l_wht_buf_int[i] = APL_NULL_CHAR;

		strcpy(chr_l_wht_buf1,chr_l_wht_buf_int);
		strcat(chr_l_wht_buf1,chr_l_dec_buf);
		
		

		fprintf(l_ptr_IN_handoff_file,"%s,%s,%s,%s,%s,%s,%s,%s\n",chr_l_client_a,chr_l_instrcode_a,chr_l_newissue,chr_l_stat_dt_h,chr_l_ent_pos_buf1,chr_l_tot_cur_pmt_buf1,chr_l_wht_buf1,chr_l_taxid);

		fprintf(l_bond_intrst_rpt_file,"%-12s%-16s%-13s%-22s%-21s%-26s%-15s%-10s\n\n",chr_l_client_a,chr_l_instrcode_a,chr_l_newissue,chr_l_stat_dt,chr_l_ent_pos_buf1,chr_l_tot_cur_pmt_buf1,chr_l_wht_buf1,chr_l_taxid);
	}

	EXEC SQL CLOSE BondInterestRecs;

	fprintf(l_bond_intrst_rpt_file,"\n\n");

	for(i=0;i<135;i++)
		fprintf(l_bond_intrst_rpt_file,"-");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		

		EXEC SQL COMMIT WORK;
		IS_ANY_ORA_ERROR

	  

		int_retval = CO_Proc_BtchLock(argv,p_ptr_log_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

		fclose(l_ptr_IN_handoff_file);

		int_retval = CO_Proc_RptClose(l_bond_intrst_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);	
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_BIEvtHoff with SUCCESS \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		

		EXEC SQL ROLLBACK WORK;
		IS_ANY_ORA_ERROR

	  

		int_retval = CO_Proc_BtchLock(argv,p_ptr_log_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL
		
		fclose(l_ptr_IN_handoff_file);
		
		int_retval = CO_Proc_RptClose(l_bond_intrst_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			return(APL_FAILURE);	
		
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Proc_BIEvtHoff with FAILURE \n",NULL,p_intl_env_data_struct_h_d);
		
		return(APL_FAILURE);
	}
}



 
 int EOM_Prnt_CDRptHdr(FILE *p_cash_dividend_rpt_file,char *p_cd_fromdate,char *p_cd_todate,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca			sqlca;
	char						chr_l_sys_date[9];
	int						i;
	char						chr_l_corp_name[41];
	short						i_ca_clr_name;
	char						chr_l_cd_fromdt[APL_DATE_LEN] = APL_NULL_STRING;
	char						chr_l_cd_todt[APL_DATE_LEN] = APL_NULL_STRING;
	char						chr_l_cd_fromdt_h[9] = APL_NULL_STRING;
	char						chr_l_cd_todt_h[9] = APL_NULL_STRING;

	EXEC SQL VAR chr_l_sys_date IS STRING;
	EXEC SQL VAR chr_l_corp_name IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Prnt_CDRptHdr\n",NULL,p_intl_env_data_struct_h_d);

	sqlca.sqlcode = 0;

	EXEC SQL SELECT TO_CHAR(SYS_DATE,'DD/MM/YY')
	INTO :chr_l_sys_date
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	
	EXEC SQL SELECT replace(ca_identname,',',' ')
	INTO :chr_l_corp_name:i_ca_clr_name
	FROM MT_COMMON_SYS_PARAMS;
	
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	strcpy(chr_l_cd_fromdt,p_cd_fromdate);

	chr_l_cd_fromdt_h[0] = chr_l_cd_fromdt[0];
	chr_l_cd_fromdt_h[1] = chr_l_cd_fromdt[1];
	chr_l_cd_fromdt_h[2] = chr_l_cd_fromdt[2];
	chr_l_cd_fromdt_h[3] = chr_l_cd_fromdt[3];
	chr_l_cd_fromdt_h[4] = chr_l_cd_fromdt[4];
	chr_l_cd_fromdt_h[5] = chr_l_cd_fromdt[5];
	chr_l_cd_fromdt_h[6] = chr_l_cd_fromdt[8];
	chr_l_cd_fromdt_h[7] = chr_l_cd_fromdt[9];
	chr_l_cd_fromdt_h[8] = APL_NULL_CHAR;

	strcpy(chr_l_cd_todt,p_cd_todate);
	
	chr_l_cd_todt_h[0] = chr_l_cd_todt[0];
	chr_l_cd_todt_h[1] = chr_l_cd_todt[1];
	chr_l_cd_todt_h[2] = chr_l_cd_todt[2];
	chr_l_cd_todt_h[3] = chr_l_cd_todt[3];
	chr_l_cd_todt_h[4] = chr_l_cd_todt[4];
	chr_l_cd_todt_h[5] = chr_l_cd_todt[5];
	chr_l_cd_todt_h[6] = chr_l_cd_todt[8];
	chr_l_cd_todt_h[7] = chr_l_cd_todt[9];
	chr_l_cd_todt_h[8] = APL_NULL_CHAR;

	fprintf(p_cash_dividend_rpt_file,"\n");

	for(i=0;i<135;i++)
		fprintf(p_cash_dividend_rpt_file,"-");

	fprintf(p_cash_dividend_rpt_file,"\n%s           CASH DIVIDEND HANDOFF FILE REPORT         \n\n",chr_l_sys_date);
	
	fprintf(p_cash_dividend_rpt_file,"                         %s\n\n",chr_l_corp_name);
	for(i=0;i<135;i++)
		fprintf(p_cash_dividend_rpt_file,"-");

	fprintf(p_cash_dividend_rpt_file,"\n            List of Cash Dividend Entries Extracted \n\n");
	
	fprintf(p_cash_dividend_rpt_file,"             Date Range : %s   To   %s  \n\n",chr_l_cd_fromdt_h,chr_l_cd_todt_h);
	
	for(i=0;i<135;i++)
		fprintf(p_cash_dividend_rpt_file,"-");

	fprintf(p_cash_dividend_rpt_file,"\nAccount     Instrurity        Market Code   Event   Date                  Amount              Account Name                              TaxNo       \n\n");
	
	for(i=0;i<135;i++)
		fprintf(p_cash_dividend_rpt_file,"-");

	fprintf(p_cash_dividend_rpt_file,"\n");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_CDRptHdr with SUCCESS\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_CDRptHdr with FAILURE\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);

	}
}


 
 int EOM_Prnt_BIRptHdr(FILE *p_bond_int_rpt_file,char *p_in_fromdate,char *p_in_todate,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca			sqlca;
	char						chr_l_sys_date[9];
	int						i;
	char						chr_l_corp_name[41];
	short						i_ca_clr_name;
	char						chr_l_in_fromdt[APL_DATE_LEN] = APL_NULL_STRING;
	char						chr_l_in_todt[APL_DATE_LEN] = APL_NULL_STRING;
	char						chr_l_in_fromdt_h[9] = APL_NULL_STRING;
	char						chr_l_in_todt_h[9] = APL_NULL_STRING;

	EXEC SQL VAR chr_l_sys_date IS STRING;
	EXEC SQL VAR chr_l_corp_name IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Prnt_BIRptHdr\n",NULL,p_intl_env_data_struct_h_d);

	sqlca.sqlcode = 0;

	EXEC SQL SELECT TO_CHAR(SYS_DATE,'DD/MM/YY')
	INTO :chr_l_sys_date
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	EXEC SQL SELECT ca_identname
	INTO :chr_l_corp_name:i_ca_clr_name
	FROM MT_COMMON_SYS_PARAMS;
	
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	strcpy(chr_l_in_fromdt,p_in_fromdate);

	chr_l_in_fromdt_h[0] = chr_l_in_fromdt[0];
	chr_l_in_fromdt_h[1] = chr_l_in_fromdt[1];
	chr_l_in_fromdt_h[2] = chr_l_in_fromdt[2];
	chr_l_in_fromdt_h[3] = chr_l_in_fromdt[3];
	chr_l_in_fromdt_h[4] = chr_l_in_fromdt[4];
	chr_l_in_fromdt_h[5] = chr_l_in_fromdt[5];
	chr_l_in_fromdt_h[6] = chr_l_in_fromdt[8];
	chr_l_in_fromdt_h[7] = chr_l_in_fromdt[9];
	chr_l_in_fromdt_h[8] = APL_NULL_CHAR;
	
	strcpy(chr_l_in_todt,p_in_todate);

	chr_l_in_todt_h[0] = chr_l_in_todt[0];
	chr_l_in_todt_h[1] = chr_l_in_todt[1];
	chr_l_in_todt_h[2] = chr_l_in_todt[2];
	chr_l_in_todt_h[3] = chr_l_in_todt[3];
	chr_l_in_todt_h[4] = chr_l_in_todt[4];
	chr_l_in_todt_h[5] = chr_l_in_todt[5];
	chr_l_in_todt_h[6] = chr_l_in_todt[8];
	chr_l_in_todt_h[7] = chr_l_in_todt[9];
	chr_l_in_todt_h[8] = APL_NULL_CHAR;

	fprintf(p_bond_int_rpt_file,"\n");

	for(i=0;i<135;i++)
		fprintf(p_bond_int_rpt_file,"-");

	fprintf(p_bond_int_rpt_file,"\n%s       BOND INTEREST HANDOFF FILE REPORT         \n\n",chr_l_sys_date);
	
	fprintf(p_bond_int_rpt_file,"                     %s\n\n",chr_l_corp_name);
	for(i=0;i<135;i++)
		fprintf(p_bond_int_rpt_file,"-");

	fprintf(p_bond_int_rpt_file,"\n           List of Bond Interest Entries Extracted \n\n");
	
	fprintf(p_bond_int_rpt_file,"             Date Range : %s   To   %s  \n\n",chr_l_in_fromdt_h,chr_l_in_todt_h);
	
	for(i=0;i<135;i++)
		fprintf(p_bond_int_rpt_file,"-");

	fprintf(p_bond_int_rpt_file,"\nAccount     Instrurity        Market Code  Payment Date          Principal Amount     Interest Payment(Gross)   Withholding Tax  TaxNo       \n");
	
	for(i=0;i<135;i++)
		fprintf(p_bond_int_rpt_file,"-");

	fprintf(p_bond_int_rpt_file,"\n");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_BIRptHdr with SUCCESS\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_BIRptHdr with FAILURE \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);

	}
}


 
 int EOM_Prnt_TaxRptHdr(FILE *p_tx_hoff_rpt_file,char *p_tx_fromdate,char *p_tx_todate,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca			sqlca;
	char						chr_l_sys_date[9];
	int						i;
	char						chr_l_corp_name[41];
	short						i_ca_clr_name;
	char						chr_l_tx_fromdt[APL_DATE_LEN] = APL_NULL_STRING;
	char						chr_l_tx_todt[APL_DATE_LEN] = APL_NULL_STRING;
	char						chr_l_tx_fromdt_h[9] = APL_NULL_STRING;
	char						chr_l_tx_todt_h[9] = APL_NULL_STRING;

	EXEC SQL VAR chr_l_sys_date IS STRING;
	EXEC SQL VAR chr_l_corp_name IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Prnt_TaxRptHdr\n",NULL,p_intl_env_data_struct_h_d);

	sqlca.sqlcode = 0;

	EXEC SQL SELECT TO_CHAR(SYS_DATE,'DD/MM/YY')
	INTO :chr_l_sys_date
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	
	EXEC SQL SELECT replace(ca_identname,',',' ')
	INTO :chr_l_corp_name:i_ca_clr_name
	FROM MT_COMMON_SYS_PARAMS;
	
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	strcpy(chr_l_tx_fromdt,p_tx_fromdate);

	chr_l_tx_fromdt_h[0] = chr_l_tx_fromdt[0];
	chr_l_tx_fromdt_h[1] = chr_l_tx_fromdt[1];
	chr_l_tx_fromdt_h[2] = chr_l_tx_fromdt[2];
	chr_l_tx_fromdt_h[3] = chr_l_tx_fromdt[3];
	chr_l_tx_fromdt_h[4] = chr_l_tx_fromdt[4];
	chr_l_tx_fromdt_h[5] = chr_l_tx_fromdt[5];
	chr_l_tx_fromdt_h[6] = chr_l_tx_fromdt[8];
	chr_l_tx_fromdt_h[7] = chr_l_tx_fromdt[9];
	chr_l_tx_fromdt_h[8] = APL_NULL_CHAR;
	
	strcpy(chr_l_tx_todt,p_tx_todate);

	chr_l_tx_todt_h[0] = chr_l_tx_todt[0];
	chr_l_tx_todt_h[1] = chr_l_tx_todt[1];
	chr_l_tx_todt_h[2] = chr_l_tx_todt[2];
	chr_l_tx_todt_h[3] = chr_l_tx_todt[3];
	chr_l_tx_todt_h[4] = chr_l_tx_todt[4];
	chr_l_tx_todt_h[5] = chr_l_tx_todt[5];
	chr_l_tx_todt_h[6] = chr_l_tx_todt[8];
	chr_l_tx_todt_h[7] = chr_l_tx_todt[9];
	chr_l_tx_todt_h[8] = APL_NULL_CHAR;

	fprintf(p_tx_hoff_rpt_file,"\n");

	for(i=0;i<135;i++)
		fprintf(p_tx_hoff_rpt_file,"-");

	fprintf(p_tx_hoff_rpt_file,"\n%s           TAX HANDOFF FILE REPORT         \n\n",chr_l_sys_date);
	
	fprintf(p_tx_hoff_rpt_file,"                     %s\n\n",chr_l_corp_name);
	for(i=0;i<135;i++)
		fprintf(p_tx_hoff_rpt_file,"-");

	fprintf(p_tx_hoff_rpt_file,"\n                      Trades Handoff \n\n");
	
	fprintf(p_tx_hoff_rpt_file,"             Date Range : %s   To   %s  \n\n",chr_l_tx_fromdt_h,chr_l_tx_todt_h);
	
	for(i=0;i<135;i++)
		fprintf(p_tx_hoff_rpt_file,"-");

	fprintf(p_tx_hoff_rpt_file,"\nAccount     Customer Name                         Instrurity      ASD                   Amount                Quantity                    Txn Desc    Dom CP Desc                                 Ref No.           New Issue   Txn Type    Trade Date            TaxNo       \n");
	
	for(i=0;i<135;i++)
		fprintf(p_tx_hoff_rpt_file,"-");

	fprintf(p_tx_hoff_rpt_file,"\n");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_TaxRptHdr with SUCCESS \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_TaxRptHdr with FAILURE \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);

	}
}


 
 int EOM_Prnt_InstrRptHdr(FILE *p_sfk_hoff_rpt_file,char *p_tx_fromdate,char *p_tx_todate,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca			sqlca;
	char						chr_l_sys_date[9];
	int						i;
	char						chr_l_corp_name[41];
	short						i_ca_clr_name;

	EXEC SQL VAR chr_l_sys_date IS STRING;
	EXEC SQL VAR chr_l_corp_name IS STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion EOM_Prnt_InstrRptHdr\n",NULL,p_intl_env_data_struct_h_d);

	sqlca.sqlcode = 0;

	EXEC SQL SELECT TO_CHAR(SYS_DATE,'DD/MM/YY')
	INTO :chr_l_sys_date
	FROM PRO_SYS_DATE;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	
	EXEC SQL SELECT replace(ca_identname,',',' ')
	INTO :chr_l_corp_name:i_ca_clr_name
	FROM MT_COMMON_SYS_PARAMS;
	
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	fprintf(p_sfk_hoff_rpt_file,"\n");

	for(i=0;i<135;i++)
		fprintf(p_sfk_hoff_rpt_file,"-");

	fprintf(p_sfk_hoff_rpt_file,"\n%s             TAX HANDOFF FILE REPORT         \n\n",chr_l_sys_date);
	
	fprintf(p_sfk_hoff_rpt_file,"                        %s\n\n",chr_l_corp_name);
	fprintf(p_sfk_hoff_rpt_file,"                  Safekeeping Positions Handoff \n\n");
	
	for(i=0;i<135;i++)
		fprintf(p_sfk_hoff_rpt_file,"-");
	
	fprintf(p_sfk_hoff_rpt_file,"\nAccount     Customer Name                                Instrurity      Market Code     Current Position  TaxNo       \n\n");
	
	for(i=0;i<135;i++)
		fprintf(p_sfk_hoff_rpt_file,"-");

	fprintf(p_sfk_hoff_rpt_file,"\n");

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_InstrRptHdr with SUCCESS \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion EOM_Prnt_InstrRptHdr with FAILURE \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);

	}
}


 
 int CO_DB_Connection_E(char *p_username,char *p_passwd,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca    sqlca;

	CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CO_DB_Connection_E \n",NULL,NULL);
	sqlca.sqlcode = 0;

	EXEC SQL CONNECT :p_username IDENTIFIED BY :p_passwd;

	if (sqlca.sqlcode != 0)
		APL_GOBACK_FAIL

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_E with SUCCESS\n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_E with FAILURE\n",NULL,NULL);

		return(APL_FAILURE);

	}
}


 
 int CO_Proc_Exit(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,int p_flg)
 {
	struct sqlca    sqlca;
	char				 chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion CO_Proc_Exit \n",NULL,NULL);
	sqlca.sqlcode = 0;
	
	if (p_flg == 0)
	{
		

		if (CO_ChkErr(*l_debug_info_ptr) != APL_SUCCESS)
		{
			memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
			sprintf(chr_l_buf,"Finished EOM Tax Hand-off");

			EXEC SQL UPDATE SYS_BATCHPROC
			SET stat_det = :chr_l_buf,
		  	    status = 'completed'
			WHERE process_name = :argv[0]
			AND   proc_init = :argv[1]
			AND STARTDATE = :argv[2]
			AND status = 'started';

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		}

		EXEC SQL COMMIT WORK RELEASE;

		CO_ProcMonitor(p_ptr_log_file,"Work Committed \n",NULL,NULL);
	}
	else if (p_flg == 1)
	{
		EXEC SQL ROLLBACK WORK RELEASE;
		
		CO_ProcMonitor(p_ptr_log_file,"Rollback done \n",NULL,NULL);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_Exit with SUCCESS \n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_Exit with FAILURE \n",NULL,NULL);

		return(APL_FAILURE);

	}
}


 
 int CO_Proc_BtchLock(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca    sqlca;
	char l_tmp_status[51] =APL_NULL_STRING;
	CO_ProcMonitor(p_ptr_log_file,"Entered processtion CO_Proc_BtchLock \n",NULL,NULL);
	
	sqlca.sqlcode = 0;

	EXEC SQL SELECT processing_status INTO :l_tmp_status
	FROM SYS_BATCHPROC
	WHERE process_name = :argv[0]
	AND   proc_init = :argv[1]
	AND STARTDATE = :argv[2]
	AND status = 'started'
	FOR UPDATE OF processing_status,status;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_BtchLock with SUCCESS\n",NULL,NULL);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_BtchLock with FAILURE \n",NULL,NULL);
		return(APL_FAILURE);

	}
}
