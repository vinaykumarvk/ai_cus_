


 
 
 
 
 
 
 
 
 
 
 
 
#include "CO_HostStructdef.h" 
/* OPT:AIX */
#ifdef SETTLEMENT
#undef SETTLEMENT
#endif
#define SETTLEMENT 6



EXEC SQL INCLUDE SQLCA.H; 
 
 
int CR_Mod_MisTxnr(DL_MISDEAL_STRUCT_H *p_dl_misdeal_struct_h, char *p_mistxnident, 
		INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h, DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{ 
	DL_MISDEAL_STRUCT_I *l_dl_misdeal_struct_i; 
	struct sqlca sqlca; 
	char chr_acc_stamp_compare[APL_DATE_LEN]; 
	char chr_sys_access_stamp[APL_DATE_LEN]; 
	char checker[15], chr_p_h_mistrade_status[3]; 
	short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt,  
		p_i_access_stamp, p_i_access_stamp_compare, p_i_mistrade_status; 
	short int_error_flag = APL_SUCCESS;				 
   short l_grcondexists = 0;
	long l_gen_batch_no=0;
	int int_l_txn_type=0;    
	char chr_l_unique_ref_num[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING;    
#ifdef APL_THREADS 
	APL_SET_CONTEXT 
	EXEC SQL CONTEXT USE :my_ctx_local; 
#endif 
 
	EXEC SQL VAR p_dl_misdeal_struct_h->h_dl_client IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_indentity_no IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_domcpclt_cd IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_instr_code IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_checker IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_countcltnm IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_maker IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_countclt IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_info IS STRING;

	
	EXEC SQL VAR p_dl_misdeal_struct_h->h_place_of_deal IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_market_flag IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_description IS STRING;
	EXEC SQL VAR p_dl_misdeal_struct_h->h_clientofcode IS STRING; 
	EXEC SQL VAR p_dl_misdeal_struct_h->h_clientof IS STRING; 
	EXEC SQL VAR p_dl_misdeal_struct_h->h_instruct_person IS STRING; 
   EXEC SQL VAR p_dl_misdeal_struct_h->h_instruct_personnm IS STRING; 
   EXEC SQL VAR p_dl_misdeal_struct_h->h_deal_class IS STRING; 
   EXEC SQL VAR p_dl_misdeal_struct_h->h_trrf_ident IS STRING; 
   EXEC SQL VAR p_dl_misdeal_struct_h->h_comm_ident IS STRING; 
   EXEC SQL VAR p_dl_misdeal_struct_h->h_pool_ident IS STRING; 

	
	  
    EXEC SQL VAR p_dl_misdeal_struct_h->h_dealdt IS STRING;

	  
    EXEC SQL VAR p_dl_misdeal_struct_h->h_party_con IS STRING;
    EXEC SQL VAR p_dl_misdeal_struct_h->h_uniq_ident_no IS STRING;
    EXEC SQL VAR p_dl_misdeal_struct_h->h_nameof_file IS STRING;

	APL_IF_DEBUG 
		{ 
			CO_ProcMonitor(APL_OUT_FILE, "Entered Function  \
			CR_Mod_MisTxnr.\n", NULL, p_intl_envdatastruct_h); 
		} 
	l_dl_misdeal_struct_i=(DL_MISDEAL_STRUCT_I*)calloc(1,sizeof(DL_MISDEAL_STRUCT_I)); 
	APL_MALLOC_FAIL(l_dl_misdeal_struct_i); 
	p_i_maker =0; 
	p_i_makerdt =0; 
	p_i_checker =0; 
	p_i_checkerdt =0; 
	p_i_access_stamp =0; 
	p_i_access_stamp_compare =0; 
	printf("\n In fucntion MT_DbProcMisDL \n\n"); 
	 
	if (!strlen(p_dl_misdeal_struct_h->h_dl_client)) l_dl_misdeal_struct_i->i_dl_client=-1; 
		else l_dl_misdeal_struct_i->i_dl_client=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_indentity_no)) l_dl_misdeal_struct_i->i_indentity_no=-1; 
		else l_dl_misdeal_struct_i->i_indentity_no=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_domcpclt_cd)) l_dl_misdeal_struct_i->i_domcpclt_cd=-1; 
		else l_dl_misdeal_struct_i->i_domcpclt_cd=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_dsn_ident)) l_dl_misdeal_struct_i->i_dsn_ident=-1; 
		else l_dl_misdeal_struct_i->i_dsn_ident=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_dealcd)) l_dl_misdeal_struct_i->i_dealcd=-1; 
		else l_dl_misdeal_struct_i->i_dealcd=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_setldt)) l_dl_misdeal_struct_i->i_setldt=-1; 
		else l_dl_misdeal_struct_i->i_setldt=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_instr_code)) l_dl_misdeal_struct_i->i_instr_code=-1; 
		else l_dl_misdeal_struct_i->i_instr_code=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_newdt)) l_dl_misdeal_struct_i->i_newdt=-1; 
		else l_dl_misdeal_struct_i->i_newdt=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_maker_dt)) l_dl_misdeal_struct_i->i_maker_dt=-1; 
		else l_dl_misdeal_struct_i->i_maker_dt=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_checker)) l_dl_misdeal_struct_i->i_checker=-1; 
		else l_dl_misdeal_struct_i->i_checker=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_checker_dt)) l_dl_misdeal_struct_i->i_checker_dt=-1; 
		else l_dl_misdeal_struct_i->i_checker_dt=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_countcltnm)) l_dl_misdeal_struct_i->i_countcltnm=-1; 
		else l_dl_misdeal_struct_i->i_countcltnm=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_countclt)) l_dl_misdeal_struct_i->i_countclt=-1; 
		else l_dl_misdeal_struct_i->i_countclt=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_maker)) l_dl_misdeal_struct_i->i_maker=-1; 
		else l_dl_misdeal_struct_i->i_maker=0; 
 
	if (!strlen(p_dl_misdeal_struct_h->h_access_stamp)) l_dl_misdeal_struct_i->i_access_stamp=-1; 
		else l_dl_misdeal_struct_i->i_access_stamp=0;

	if (!strlen(p_dl_misdeal_struct_h->h_info)) l_dl_misdeal_struct_i->i_info=-1;
		else l_dl_misdeal_struct_i->i_info=0;

	if (!strlen(p_dl_misdeal_struct_h->h_trrf_ident)) l_dl_misdeal_struct_i->i_trrf_ident=-1; 
      else l_dl_misdeal_struct_i->i_trrf_ident=0;

	if (!strlen(p_dl_misdeal_struct_h->h_comm_ident)) l_dl_misdeal_struct_i->i_comm_ident=-1; 
      else l_dl_misdeal_struct_i->i_comm_ident=0;

   if (!strlen(p_dl_misdeal_struct_h->h_pool_ident)) l_dl_misdeal_struct_i->i_pool_ident=-1; 
      else l_dl_misdeal_struct_i->i_pool_ident=0;	
	
	
	if (!strlen(p_dl_misdeal_struct_h->h_place_of_deal)) l_dl_misdeal_struct_i->i_place_of_deal=-1;
	else l_dl_misdeal_struct_i->i_place_of_deal=0;

	if (!strlen(p_dl_misdeal_struct_h->h_market_flag)) l_dl_misdeal_struct_i->i_market_flag=-1;
	else l_dl_misdeal_struct_i->i_market_flag=0;

	if (!strlen(p_dl_misdeal_struct_h->h_description)) l_dl_misdeal_struct_i->i_description=-1;
	else l_dl_misdeal_struct_i->i_description=0;
	

	
   if (!strlen(p_dl_misdeal_struct_h->h_dealdt)) l_dl_misdeal_struct_i->i_dealdt=-1;
         else l_dl_misdeal_struct_i->i_dealdt=0;


   

	
   if (!strlen(p_dl_misdeal_struct_h->h_clientofcode)) l_dl_misdeal_struct_i->i_clientofcode=-1;
      else l_dl_misdeal_struct_i->i_clientofcode=0;

   if (!strlen(p_dl_misdeal_struct_h->h_clientof)) l_dl_misdeal_struct_i->i_clientof=-1;
      else l_dl_misdeal_struct_i->i_clientof=0;

   if (!strlen(p_dl_misdeal_struct_h->h_instruct_person)) l_dl_misdeal_struct_i->i_instruct_person=-1;
      else l_dl_misdeal_struct_i->i_instruct_person=0;

   if (!strlen(p_dl_misdeal_struct_h->h_instruct_personnm)) l_dl_misdeal_struct_i->i_instruct_personnm=-1;
      else l_dl_misdeal_struct_i->i_instruct_personnm=0;

   if (!strlen(p_dl_misdeal_struct_h->h_deal_class)) l_dl_misdeal_struct_i->i_deal_class=-1;
      else l_dl_misdeal_struct_i->i_deal_class=0;

	 
   if (!strlen(p_dl_misdeal_struct_h->h_party_con)) l_dl_misdeal_struct_i->i_party_con=-1;
      else l_dl_misdeal_struct_i->i_party_con=0;

	l_dl_misdeal_struct_i->i_send_msg_ind=0;
   if (p_dl_misdeal_struct_h->h_send_msg_ind != 'N' ) 
		{
			p_dl_misdeal_struct_h->h_send_msg_ind = 'Y';  
		}

	

	if (CO_RtvSysDtTime(chr_sys_access_stamp, l_debug_info_ptr) != APL_SUCCESS) 
		{ 
			APL_GOBACK_FAIL 
		} 
	 
	printf("\n\n 199 ********* \n"); 
	 

	
	if ( CO_Chk_CntryEnabled( "MIS_INSTXN", "GR_ON_EXCHANGE", &l_grcondexists, l_debug_info_ptr ) == APL_FAILURE )
		APL_GOBACK_FAIL

 
	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT)) 
	{ 
		APL_IF_DEBUG 
			{ 
				CO_ProcMonitor(APL_OUT_FILE, "Entered Input Mode of	processtion CDBupdMisFn.\n", 
					NULL, p_intl_envdatastruct_h); 
			} 
 
		strcpy(p_dl_misdeal_struct_h->h_misdeal_status,STATUS_UAUTH); 
		l_dl_misdeal_struct_i->i_misdeal_status = 0; 
		strcpy(p_dl_misdeal_struct_h->h_maker,p_intl_envdatastruct_h->usr); 
		l_dl_misdeal_struct_i->i_maker = 0; 
		strcpy(p_dl_misdeal_struct_h->h_maker_dt,chr_sys_access_stamp); 
		l_dl_misdeal_struct_i->i_maker_dt = 0; 
		strcpy(p_dl_misdeal_struct_h->h_newdt,chr_sys_access_stamp); 
		l_dl_misdeal_struct_i->i_newdt = 0; 
		strcpy(p_dl_misdeal_struct_h->h_access_stamp,chr_sys_access_stamp); 
		l_dl_misdeal_struct_i->i_access_stamp = 0; 
 
		if(CR_Rtv_MisTxnrRefNo(p_mistxnident, l_debug_info_ptr) != APL_SUCCESS)
		{
			APL_GOBACK_FAIL;	
		}
	
		strcpy(p_dl_misdeal_struct_h->h_indentity_no, p_mistxnident);
		l_dl_misdeal_struct_i->i_indentity_no=0;

		
		int_l_txn_type=SETTLEMENT;
      if (MS_Rtv_RefNo_A(int_l_txn_type,chr_l_unique_ref_num,l_debug_info_ptr) == APL_FAILURE)
         {
             CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, p_intl_envdatastruct_h);
             APL_GOBACK_FAIL;
         }
         strcpy(p_dl_misdeal_struct_h->h_uniq_ident_no,chr_l_unique_ref_num);

      

	   if(l_grcondexists)
		{
			 
			
			
			strcpy(p_dl_misdeal_struct_h->h_maker,"SYSTEM");
			strcpy(p_dl_misdeal_struct_h->h_checker,"");
		}
		else
		{
			 
			
		}

	if (p_dl_misdeal_struct_h->h_proc_num == NULL) l_dl_misdeal_struct_i->i_proc_num=-1; 
		else l_dl_misdeal_struct_i->i_proc_num=0; 

	if (!strlen(p_dl_misdeal_struct_h->h_nameof_file)) l_dl_misdeal_struct_i->i_nameof_file=-1; 
		else l_dl_misdeal_struct_i->i_nameof_file=0; 

		EXEC SQL INSERT INTO DL_MISDEAL VALUES  
			(:p_dl_misdeal_struct_h:l_dl_misdeal_struct_i); 
 
		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST, APL_NULL_STRING,
				APL_NULL_STRING, APL_NULL_STRING) 
 
	}		 
 
	 
	if (!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_MODIFY)) 
	{ 
		p_i_checker =-1; 
		p_i_checkerdt=-1; 
		strcpy(p_dl_misdeal_struct_h->h_checker, APL_NULL_STRING); 
		strcpy(p_dl_misdeal_struct_h->h_checker_dt, APL_NULL_STRING); 
 
		APL_IF_DEBUG 
			{ 
				CO_ProcMonitor(APL_OUT_FILE, "Entered modify Mode offunction CDBupdMisFn.\n", 
					NULL, p_intl_envdatastruct_h); 
			} 
		
		 
		EXEC SQL SELECT ACCESS_STAMP  
		INTO :chr_acc_stamp_compare:p_i_access_stamp_compare FROM DL_MISDEAL 
		WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND  
			IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no 
		FOR UPDATE OF CHECKER, CHECKER_DT; 
 
		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( 
				ERR_REC_NOTFND,  
				APL_NULL_STRING, 
				APL_NULL_STRING, 
				APL_NULL_STRING);

		if (!strcmp(p_dl_misdeal_struct_h->h_access_stamp, chr_acc_stamp_compare))
		{ 
		strcpy(p_dl_misdeal_struct_h->h_access_stamp,chr_sys_access_stamp); 
		l_dl_misdeal_struct_i->i_access_stamp =0; 
		strcpy(p_dl_misdeal_struct_h->h_misdeal_status,STATUS_UAUTH); 
		l_dl_misdeal_struct_i->i_misdeal_status =0; 

		 
		EXEC SQL UPDATE DL_MISDEAL SET 
			domestic_cpclt = :p_dl_misdeal_struct_h->h_domcpclt_cd:l_dl_misdeal_struct_i->i_domcpclt_cd, 
			deal_cd = :p_dl_misdeal_struct_h->h_dealcd:l_dl_misdeal_struct_i->i_dealcd, 
			setl_date = :p_dl_misdeal_struct_h->h_setldt:l_dl_misdeal_struct_i->i_setldt, 
			QTY     =:p_dl_misdeal_struct_h->h_qty:l_dl_misdeal_struct_i->i_qty, 
			instr_code	= :p_dl_misdeal_struct_h->h_instr_code:l_dl_misdeal_struct_i->i_instr_code, 
			AMOUNT	= :p_dl_misdeal_struct_h->h_amt:l_dl_misdeal_struct_i->i_amt, 
			COST	= :p_dl_misdeal_struct_h->h_pr:l_dl_misdeal_struct_i->i_pr, 
			maker	= :p_intl_envdatastruct_h->usr:p_i_maker, 
			maker_dt	= :chr_sys_access_stamp:p_i_makerdt, 
			checker = :p_dl_misdeal_struct_h->h_checker:p_i_checker, 
			checker_dt=:p_dl_misdeal_struct_h->h_checker_dt:p_i_checkerdt, 
			access_stamp=:p_dl_misdeal_struct_h->h_access_stamp:l_dl_misdeal_struct_i->i_access_stamp, 
			cp_clt= :p_dl_misdeal_struct_h->h_countclt:l_dl_misdeal_struct_i->i_countclt, 
			CP_CLTNAME= :p_dl_misdeal_struct_h->h_countcltnm:l_dl_misdeal_struct_i->i_countcltnm, 
			MIS_DL_STAT=:p_dl_misdeal_struct_h->h_misdeal_status:l_dl_misdeal_struct_i->i_misdeal_status,
			info= :p_dl_misdeal_struct_h->h_info:l_dl_misdeal_struct_i->i_info,
			
			
			PLACEOF_DEAL = :p_dl_misdeal_struct_h->h_place_of_deal:l_dl_misdeal_struct_i->i_place_of_deal,
			MRKT_IND = :p_dl_misdeal_struct_h->h_market_flag:l_dl_misdeal_struct_i->i_market_flag,
			NARRATIVE = :p_dl_misdeal_struct_h->h_description:l_dl_misdeal_struct_i->i_description,
			
		   
         
	 		DEALDT = :p_dl_misdeal_struct_h->h_dealdt:l_dl_misdeal_struct_i->i_dealdt,

			
			CLIENTOF_CD = :p_dl_misdeal_struct_h->h_clientofcode:l_dl_misdeal_struct_i->i_clientofcode,
			clientof = :p_dl_misdeal_struct_h->h_clientof:l_dl_misdeal_struct_i->i_clientof,
			INSTRUCT_PERSON = :p_dl_misdeal_struct_h->h_instruct_person:l_dl_misdeal_struct_i->i_instruct_person,
			INSTRUCT_PERSONNM = :p_dl_misdeal_struct_h->h_instruct_personnm:l_dl_misdeal_struct_i->i_instruct_personnm,
			DEAL_CLS = :p_dl_misdeal_struct_h->h_deal_class:l_dl_misdeal_struct_i->i_deal_class,
			
			
			DEAL_RF_IDENT = :p_dl_misdeal_struct_h->h_trrf_ident:l_dl_misdeal_struct_i->i_trrf_ident,
			COMMIDENT = :p_dl_misdeal_struct_h->h_comm_ident:l_dl_misdeal_struct_i->i_comm_ident,
			POOL_REF = :p_dl_misdeal_struct_h->h_pool_ident:l_dl_misdeal_struct_i->i_pool_ident,
			
	  		
			SEND_MSG_IND = :p_dl_misdeal_struct_h->h_send_msg_ind:l_dl_misdeal_struct_i->i_send_msg_ind,
			PARTY_CON = :p_dl_misdeal_struct_h->h_party_con:l_dl_misdeal_struct_i->i_party_con

		WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND  
			IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no ;

			IS_ANY_ORA_ERROR ;
			 
		} 
		else 
			{ 
				if(CO_InsertErr(l_debug_info_ptr, 
					ERR_ACCESSSTAMP_CHGD,  
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					__LINE__, 
					__FILE__ )\
					 != APL_SUCCESS) 
					APL_GOBACK_FAIL 
			} 
	} 
 
	 
	if (!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_AUTHORISE)) 
		{ 
		APL_IF_DEBUG 
			{ 
				CO_ProcMonitor(APL_OUT_FILE, "Entered authorise Mode of processtion CDBupdMisFn.\n", 
					NULL, p_intl_envdatastruct_h); 
			} 
 
		 
		EXEC SQL SELECT ACCESS_STAMP, MIS_DL_STAT  
		INTO :chr_acc_stamp_compare:p_i_access_stamp_compare,
				:chr_p_h_mistrade_status:p_i_mistrade_status
		FROM DL_MISDEAL 
		WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND  
			IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no 
		FOR UPDATE  OF CHECKER, CHECKER_DT; 
 
		IS_ANY_ORA_ERROR 
		strcpy(p_dl_misdeal_struct_h->h_misdeal_status, chr_p_h_mistrade_status);

		if( l_grcondexists )
			strcpy(p_dl_misdeal_struct_h->h_access_stamp,chr_acc_stamp_compare);
			
		if (!strcmp(p_dl_misdeal_struct_h->h_access_stamp,chr_acc_stamp_compare)) 
		{ 
				if( l_grcondexists )
				{
					strcpy(p_intl_envdatastruct_h->usr,"SYSTEM1");
				}

			if (CR_Proc_MisTxnrAuth(p_dl_misdeal_struct_h->h_dl_client, 
				    p_dl_misdeal_struct_h->h_indentity_no, 
				    p_intl_envdatastruct_h->usr, 
			            l_debug_info_ptr)== APL_SUCCESS) 
			{ 
				if(strcmp(chr_p_h_mistrade_status, STATUS_DEL_UAUTH)==0 || 
					strcmp(chr_p_h_mistrade_status, STATUS_CANC_REVUAUTH)==0  )
				{
					EXEC SQL DELETE FROM DL_MISDEAL
					WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client
						AND IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no;

					IS_ANY_ORA_ERROR;
					
					
					EXEC SQL DELETE FROM DL_MSGLINK
					WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client
						AND IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no;

					IS_ANY_ORA_ERROR;
					APL_GOBACK_SUCCESS;
				}
				else
				{
				strcpy(p_dl_misdeal_struct_h->h_access_stamp,chr_sys_access_stamp); 
				l_dl_misdeal_struct_i->i_access_stamp =0; 
				strcpy(p_dl_misdeal_struct_h->h_misdeal_status,STATUS_AUTH); 
				l_dl_misdeal_struct_i->i_misdeal_status =0; 
				strcpy(p_dl_misdeal_struct_h->h_checker,p_intl_envdatastruct_h->usr); 
				l_dl_misdeal_struct_i->i_checker =0; 
				strcpy(p_dl_misdeal_struct_h->h_checker_dt,chr_sys_access_stamp); 
				l_dl_misdeal_struct_i->i_checker_dt =0; 
			
				if( l_grcondexists )
				{ 
				strcpy(p_dl_misdeal_struct_h->h_maker,"SYSTEM"); 
				strcpy(p_dl_misdeal_struct_h->h_checker,"SYSTEM1"); 
				}

				EXEC SQL UPDATE DL_MISDEAL SET
					CHECKER=:p_dl_misdeal_struct_h->h_checker,
					CHECKER_DT=:p_dl_misdeal_struct_h->h_checker_dt,
					MIS_DL_STAT=:p_dl_misdeal_struct_h->h_misdeal_status,
					ACCESS_STAMP=:chr_sys_access_stamp:p_i_access_stamp
					WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND
							IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no;
				IS_ANY_ORA_ERROR;

				} 
			}
			else 
			{
				APL_GOBACK_FAIL ;
			} 
		}
		else 
		{ 
				if(CO_InsertErr(l_debug_info_ptr, 
					ERR_ACCESSSTAMP_CHGD,  
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					__LINE__, 
					__FILE__) \
					 != APL_SUCCESS) 
					APL_GOBACK_FAIL 
		} 
	} 
		 
		if(!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE)) 
		{ 
			APL_IF_DEBUG 
			{ 
				CO_ProcMonitor(APL_OUT_FILE, "Entered Function  \
				CR_Mod_MisTxnr in  Delete Mode.\n", NULL, p_intl_envdatastruct_h); 
			} 
			p_i_checker =0; 
			EXEC SQL VAR checker IS STRING; 
			
			strcpy(chr_p_h_mistrade_status,APL_NULL_STRING);
			EXEC SQL SELECT CHECKER, MIS_DL_STAT  
				INTO :checker:p_i_checker, :chr_p_h_mistrade_status:p_i_mistrade_status 
				FROM DL_MISDEAL 
				WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client 
				      AND IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no ;
 
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(
				ERR_REC_NOTFND,  
				APL_NULL_STRING, 
				APL_NULL_STRING, 
				APL_NULL_STRING); 
 
				 
				EXEC SQL SELECT ACCESS_STAMP  
					INTO :chr_acc_stamp_compare:p_i_access_stamp_compare FROM DL_MISDEAL 
					WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND  
					IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no 
					FOR UPDATE;
 
				IS_ANY_ORA_ERROR; 
				 
				if (!strcmp(p_dl_misdeal_struct_h->h_access_stamp,chr_acc_stamp_compare)) 
				{ 
			 
						strcpy(p_dl_misdeal_struct_h->h_access_stamp,chr_sys_access_stamp); 
						l_dl_misdeal_struct_i->i_access_stamp =0; 
						
						if(strcmp(chr_p_h_mistrade_status, STATUS_AUTH)==0)
							strcpy(p_dl_misdeal_struct_h->h_misdeal_status,STATUS_CANC_REVUAUTH); 
						else
							strcpy(p_dl_misdeal_struct_h->h_misdeal_status,STATUS_DEL_UAUTH); 
						l_dl_misdeal_struct_i->i_misdeal_status =0; 
						strcpy(p_dl_misdeal_struct_h->h_maker,p_intl_envdatastruct_h->usr); 
						l_dl_misdeal_struct_i->i_maker =0; 
						strcpy(p_dl_misdeal_struct_h->h_maker_dt,chr_sys_access_stamp); 
						l_dl_misdeal_struct_i->i_maker_dt =0; 
			 
						EXEC SQL UPDATE DL_MISDEAL SET
						MAKER=:p_dl_misdeal_struct_h->h_maker,
						MAKER_DT=:p_dl_misdeal_struct_h->h_maker_dt,
						MIS_DL_STAT=:p_dl_misdeal_struct_h->h_misdeal_status,
						ACCESS_STAMP=:chr_sys_access_stamp:p_i_access_stamp
						WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND
							IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no;
						IS_ANY_ORA_ERROR;

					APL_GOBACK_SUCCESS 
			
				}
				else 
				{ 
					if(CO_InsertErr(l_debug_info_ptr, 
						ERR_ACCESSSTAMP_CHGD,  
						APL_NULL_STRING, 
						APL_NULL_STRING, 
						APL_NULL_STRING, 
						__LINE__, 
						__FILE__) \
					 	!= APL_SUCCESS) 
						APL_GOBACK_FAIL; 
				} 

	} 
 
		 
		if (!strcmp(p_intl_envdatastruct_h->h_mode, MS_RSND_MODE)) 
		{ 
			APL_IF_DEBUG 
			{ 
				CO_ProcMonitor(APL_OUT_FILE, "Entered Function  \
				CR_Mod_MisTxnr in  Message Resend Mode.\n", NULL, p_intl_envdatastruct_h); 
			} 
			p_i_checker=0; 
			EXEC SQL SELECT CHECKER INTO :checker:p_i_checker 
		 				FROM DL_MISDEAL WHERE 
						CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND 
						IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no; 
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( \
						 ERR_DEAL_NF,  
						 p_dl_misdeal_struct_h->h_dl_client, 
						 p_dl_misdeal_struct_h->h_indentity_no, 
						 APL_NULL_STRING); 
			if(p_i_checker ==-1) 
			{ 
				if(CO_InsertErr(l_debug_info_ptr, 
										ERR_DEAL_UNAUTH,  
										p_dl_misdeal_struct_h->h_dl_client, 
										p_dl_misdeal_struct_h->h_indentity_no, 
										APL_NULL_STRING,
										__LINE__,
										__FILE__) != APL_SUCCESS) 
										APL_GOBACK_FAIL 
				 
			} 
			else 
				 
				EXEC SQL SELECT ACCESS_STAMP  
					INTO :chr_acc_stamp_compare:p_i_access_stamp_compare FROM DL_MISDEAL 
					WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client AND  
					IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no 
					FOR UPDATE;
 
				IS_ANY_ORA_ERROR 
				 
				if (!strcmp(p_dl_misdeal_struct_h->h_access_stamp,chr_acc_stamp_compare)) 
				{ 
					EXEC SQL UPDATE DL_MISDEAL
						SET ACCESS_STAMP=:chr_sys_access_stamp
						WHERE CLIENT=:p_dl_misdeal_struct_h->h_dl_client 
						AND IDENTIY_NO=:p_dl_misdeal_struct_h->h_indentity_no; 
					IS_ANY_ORA_ERROR;

					APL_GOBACK_SUCCESS; 
				} 
				else 
				{ 
					if(CO_InsertErr(l_debug_info_ptr, 
										ERR_ACCESSSTAMP_CHGD,  
										p_dl_misdeal_struct_h->h_dl_client, 
										p_dl_misdeal_struct_h->h_indentity_no, 
										APL_NULL_STRING,
										__LINE__,
										__FILE__) != APL_SUCCESS) 
										APL_GOBACK_FAIL 
				} 
	} 
		RETURN_SUCCESS: 
		{ 
			APL_IF_DEBUG 
			{ 
				CO_ProcMonitor(APL_OUT_FILE, "Exiting Function  \
				CR_Mod_MisTxnr Successfully.\n", NULL, p_intl_envdatastruct_h); 
			} 
			free(l_dl_misdeal_struct_i); 
			return(APL_SUCCESS); 
		} 
 
		RETURN_FAILURE: 
		{ 
			APL_IF_DEBUG 
			{ 
				CO_ProcMonitor(APL_OUT_FILE, "Exiting Function  \
				CR_Mod_MisTxnr. Failure.\n", NULL, p_intl_envdatastruct_h); 
			} 
			free(l_dl_misdeal_struct_i); 
			return(APL_FAILURE); 
		} 
} 
int CR_Proc_MisTxnrAuth(char *chr_p_client, char *chr_p_refno, char *p_user,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{ 
  struct sqlca sqlca; 
  char maker[15]; 
  short p_i_maker = 0; 
  int int_error_flag = APL_SUCCESS; 
 
#ifdef APL_THREADS 
    APL_SET_CONTEXT 
    EXEC SQL CONTEXT USE :my_ctx_local; 
#endif 
 
APL_IF_DEBUG 
 { 
  CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Proc_MisTxnrAuth\n", 
		NULL,NULL); 
 } 
  CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Proc_MisTxnrAuth\n", 
		NULL,NULL); 
   
   
  if (!strlen(chr_p_client)) 
	{ 
	APL_DATA_MISSING("Account ",APL_NULL_STRING,APL_NULL_STRING); 
   	int_error_flag = APL_FAILURE; 
	}  
 
  if (!strlen(chr_p_refno)) 
	{ 
	APL_DATA_MISSING("Reference No. ",APL_NULL_STRING,APL_NULL_STRING); 
   	int_error_flag = APL_FAILURE; 
	}  
 
  if (!strlen(p_user)) 
	{ 
	APL_DATA_MISSING("User",APL_NULL_STRING,APL_NULL_STRING); 
   	int_error_flag = APL_FAILURE; 
	} 
  
  if (int_error_flag == APL_FAILURE) 
	{ 
	APL_GOBACK_FAIL 
	} 
  EXEC SQL VAR maker IS STRING(15); 
  EXEC SQL SELECT MAKER  
		INTO :maker:p_i_maker 
		FROM DL_MISDEAL 
			WHERE CLIENT=:chr_p_client AND IDENTIY_NO=:chr_p_refno; 
 
	IS_ANY_ORA_ERROR	 

  if (!strcmp(p_user, maker))
	{ 
	 if (CO_InsertErr 
			(l_debug_info_ptr, 
			ERR_MAKER_CHECKER_SAME,  
			APL_NULL_STRING, 
			APL_NULL_STRING, 
			APL_NULL_STRING, 
			__LINE__, 
			__FILE__ 
			) != APL_SUCCESS) 
	APL_GOBACK_FAIL 
   	int_error_flag = APL_FAILURE; 
	} 
 
  if (int_error_flag == APL_FAILURE) 
	{ 
	APL_GOBACK_FAIL 
	} 
 
  APL_GOBACK_SUCCESS 
 
  RETURN_SUCCESS : 
	{ 
 
APL_IF_DEBUG 
 { 
  CO_ProcMonitor(APL_OUT_FILE, "CDBUsrAuthMisFn Successful\n", 
		NULL,NULL); 
 } 
	return(APL_SUCCESS); 
	} 
  RETURN_FAILURE : 
	{ 
 
APL_IF_DEBUG 
 { 
  CO_ProcMonitor(APL_OUT_FILE, "CDBUsrAuthMisFn unsuccessful\n", 
		NULL,NULL); 
 } 
 
	return(APL_FAILURE); 
	} 
} 

int CR_Rtv_MisTxnrRefNo(char *p_mistxnident, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	PRO_GSEQNUM_STRUCT_H *p_pro_gseqnum_struct_h;	
	char *chr_p_cseq_num;
	char chr_p_h_mistxnrefno[17];
	int int_p_iseqnum;

#ifdef APL_THREADS 
    APL_SET_CONTEXT 
    EXEC SQL CONTEXT USE :my_ctx_local; 
#endif 
 
	APL_IF_DEBUG 
 	{ 
  		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CR_Rtv_MisTxnrRefNo. \n", 
		NULL,NULL); 
 	} 

	chr_p_cseq_num=(char *)calloc(5, sizeof(char));
	APL_MALLOC_FAIL(chr_p_cseq_num);

	p_pro_gseqnum_struct_h=(PRO_GSEQNUM_STRUCT_H *)calloc(1, sizeof(PRO_GSEQNUM_STRUCT_H)); 

	APL_MALLOC_FAIL(p_pro_gseqnum_struct_h);

	EXEC SQL VAR chr_p_h_mistxnrefno IS STRING;
	EXEC SQL SELECT 'MIS'|| to_char(SYS_DATE, 'YYDDD') INTO
			:chr_p_h_mistxnrefno FROM PRO_SYS_DATE;
	IS_ANY_ORA_ERROR;

	strcpy(p_mistxnident,chr_p_h_mistxnrefno);
	strcpy(p_pro_gseqnum_struct_h->sequencename, "MISTXN");
	p_pro_gseqnum_struct_h->recycle_ind = RECYCLE_EOD;
	int_p_iseqnum=CO_RtvNxtSeqNum(p_pro_gseqnum_struct_h, l_debug_info_ptr);
	if(int_p_iseqnum == APL_FAILURE)
	{
		APL_GOBACK_FAIL;
	}
 	ltoa_r(int_p_iseqnum, chr_p_cseq_num, 5);
	printf("Reached here -- 1 Biju |%s|\n",chr_p_cseq_num);
	if(CO_PadString(chr_p_cseq_num, 'L', 4, "0", l_debug_info_ptr) == APL_FAILURE)
	{
			APL_GOBACK_FAIL;
	}
	printf("Reached here -- 2 Biju \n");
	strcat(p_mistxnident, chr_p_cseq_num);
	printf("Reached here -- 3 Biju \n");
	APL_GOBACK_SUCCESS;

  RETURN_SUCCESS : 
	{ 
 
	APL_IF_DEBUG 
 	{ 
  		CO_ProcMonitor(APL_OUT_FILE, "CDBGenMisRefFn Successful\n", 
		NULL,NULL); 
 	} 
	return(APL_SUCCESS); 
	} 
  RETURN_FAILURE : 
	{ 
 
	APL_IF_DEBUG 
 	{ 
  		CO_ProcMonitor(APL_OUT_FILE, "CDBGenMisRefFn unsuccessful\n", 
		NULL,NULL); 
 	} 
 
	return(APL_FAILURE); 
	} 
}

int CR_Chk_MsgAddr(char *p_h_client, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		char chr_p_client[11];
		short p_i_account;

#ifdef APL_THREADS 
    APL_SET_CONTEXT 
    EXEC SQL CONTEXT USE :my_ctx_local; 
#endif 
 
	APL_IF_DEBUG 
 	{ 
  		CO_ProcMonitor(APL_OUT_FILE, "Entered CR_Chk_MsgAddr processtion\n", 
		NULL,NULL); 
 	} 

		EXEC SQL VAR chr_p_client IS STRING;

		EXEC SQL SELECT CLN_CODE INTO :chr_p_client:p_i_account
		FROM 	MT_CLIENT a
		WHERE CLN_CODE=:p_h_client
		AND 	( EXISTS (	SELECT 1 FROM MT_MSGADDRESS b 
								WHERE		b.CLN_CODE = a.CLN_CODE
								AND b.MSG_IDENT_NO=(SELECT 	MAP_VAL FROM PRO_SGENSTAT 
												 WHERE 	MAP_TYPE='MSGNAME' 
												 AND MAP_DESC='NOTICE OF SETTLEMENT PROBLEM')
								AND b.PRIORITY_IND != '9' ) OR
				  EXISTS	(  SELECT 1 FROM MT_MSGADDRESS c
								WHERE	 c.CLN_CODE = a.CLN_MASTER
								AND c.MSG_IDENT_NO=(SELECT 	MAP_VAL FROM PRO_SGENSTAT 
												 WHERE 	MAP_TYPE='MSGNAME' 
												 AND MAP_DESC='NOTICE OF SETTLEMENT PROBLEM')
								AND c.PRIORITY_IND != '9' ) );

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(
					   ERR_ACCNOT_VALIDMSG_CATEGORY,  
						p_h_client,
						"MT534 Address absent",
						APL_NULL_STRING);

				APL_GOBACK_SUCCESS;

  RETURN_SUCCESS : 
	{ 
 
	APL_IF_DEBUG 
 	{ 
  		CO_ProcMonitor(APL_OUT_FILE, "CDBValMT534AddFn Successful\n", 
		NULL,NULL); 
 	} 
	return(APL_SUCCESS); 
	} 
  RETURN_FAILURE : 
	{ 
 
	APL_IF_DEBUG 
 	{ 
  		CO_ProcMonitor(APL_OUT_FILE, "CDBValMT534AddFn unsuccessful\n", 
		NULL,NULL); 
 	} 
 
	return(APL_FAILURE); 
	}
}
