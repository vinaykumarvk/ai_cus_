

	
   
   
   
   
   
   
   
   
   
   
   


#include "CR_Common.h"
#include "CA_Common.h"
#define	S_DATE_LENGTH	10
EXEC SQL INCLUDE SQLCA.H;




static	int 	CA_Mod_FootNoteNew( 	CA_CANOTE_STRUCT_H    *p_ca_canote_struct_h,
				                  	INTL_ENV_DATA_STRUCT_H  	 	*p_intlenv_data_struct_h,
											char							*chr_p_sys_date,
											char							*p_sys_date_time,
	      				         	DEBUG_INFO_STRUCT_H         	**l_debug_info_ptr );

static	int 	CA_Mod_ChgFootNote( CA_CANOTE_STRUCT_H    *p_ca_canote_struct_h,
				                 		INTL_ENV_DATA_STRUCT_H  	 	*p_intlenv_data_struct_h,
											char							*chr_p_sys_date,
											char							*p_sys_date_time,
  	      				         	DEBUG_INFO_STRUCT_H         	**l_debug_info_ptr );

static	int 	CA_Chk_FootNoteDel(  CA_CANOTE_STRUCT_H    *p_ca_canote_struct_h,
				         	      	 INTL_ENV_DATA_STRUCT_H   	 *p_intlenv_data_struct_h,
  	      				   	    	DEBUG_INFO_STRUCT_H        		 **l_debug_info_ptr );

static	int	CA_ChkManData( 		CA_CANOTE_STRUCT_H    	*p_footnote_struct,
 				                    	INTL_ENV_DATA_STRUCT_H  	 	*p_intlenv_data_struct_h,
            				         DEBUG_INFO_STRUCT_H        		**l_debug_info_ptr );
static int CA_Chk_FootNote(	char*				p_note_nbr,
									char*				p_mode,
									DEBUG_INFO_STRUCT_H	**l_debug_info_ptr);

void CA_FilterSWFChar( char* ); 

int CA_Mod_FootNote(  CA_CANOTE_STRUCT_H    *p_ca_canote_struct_h,
                     INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
                     DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  )
{	
	char 	pro_sys_date				[APL_DATE_LEN]=APL_NULL_STRING;
	char 	chr_sys_date_time		[APL_DATE_LEN]=APL_NULL_STRING;
	
	
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	EXEC SQL VAR p_ca_canote_struct_h->h_info_nbr IS STRING;
	EXEC SQL VAR p_ca_canote_struct_h->h_info_class IS STRING;	
	CO_ProcMonitor(APL_OUT_FILE,"Entered A_UpdFootNoteFn",NULL,p_intlenv_data_struct_h);
	if (	CO_RtvSysDt(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
		APL_GOBACK_FAIL
	if (	CO_RtvSysDtTime(chr_sys_date_time,l_debug_info_ptr) == APL_FAILURE )
		APL_GOBACK_FAIL

										
	if ((!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)))
	{
		#	ifdef	SYS_DEBUG	
			fprintf(APL_OUT_FILE,"\nMode is INPUT \n");
		#	endif
		if (	CA_Mod_FootNoteNew(	p_ca_canote_struct_h,
										p_intlenv_data_struct_h,
										pro_sys_date,
										chr_sys_date_time,
										l_debug_info_ptr ) == APL_FAILURE )
			APL_GOBACK_FAIL
		else
			APL_GOBACK_SUCCESS
	}

		
	if ((	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)))
	{
		#	ifdef	SYS_DEBUG	
			fprintf(APL_OUT_FILE,"\nMode is MODIFY \n");
		#	endif
		if (	CA_Mod_ChgFootNote(	p_ca_canote_struct_h,
										p_intlenv_data_struct_h,
										pro_sys_date,
										chr_sys_date_time,
										l_debug_info_ptr
									) == APL_FAILURE)
			APL_GOBACK_FAIL
		else
			APL_GOBACK_SUCCESS
	}
	
		
	
	if ((	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_GENERATE)))
	{
		#	ifdef	SYS_DEBUG	
			fprintf(APL_OUT_FILE,"\nMode is GENERATE \n");
		#	endif
		if (	CA_Mod_ChgFootNote(	p_ca_canote_struct_h,
										p_intlenv_data_struct_h,
										pro_sys_date,
										chr_sys_date_time,
										l_debug_info_ptr
									) == APL_FAILURE)
			APL_GOBACK_FAIL
		else
			APL_GOBACK_SUCCESS
	}
	
		
	if ((	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE)))
	{
		#	ifdef	SYS_DEBUG	
			fprintf(APL_OUT_FILE,"\nMode is DELETE \n");
		#	endif
		if (	CA_Chk_FootNoteDel(	p_ca_canote_struct_h,
										p_intlenv_data_struct_h,
										l_debug_info_ptr
									) == APL_FAILURE)
			APL_GOBACK_FAIL
		else
			APL_GOBACK_SUCCESS
	}
		
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_FootNote successfully",
															NULL,p_intlenv_data_struct_h);
		return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting A_UpdfootNote unsuccessfully",
																NULL,p_intlenv_data_struct_h);
		return (APL_FAILURE);
	}
}

		

static int CA_Mod_FootNoteNew(		CA_CANOTE_STRUCT_H		*p_ca_canote_struct_h,
											INTL_ENV_DATA_STRUCT_H		*p_intlenv_data_struct_h,
											char							*chr_p_sys_date,
											char							*p_sys_date_time,
											DEBUG_INFO_STRUCT_H				**l_debug_info_ptr			)
{	
	CA_CANOTE_STRUCT_I	*l_ca_canote_struct_i  ;
		
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	l_ca_canote_struct_i = (CA_CANOTE_STRUCT_I *)calloc(1,sizeof(CA_CANOTE_STRUCT_I));
	APL_MALLOC_FAIL(l_ca_canote_struct_i)
	
	if( CA_ChkManData(		p_ca_canote_struct_h,
								p_intlenv_data_struct_h,
								l_debug_info_ptr	)== APL_FAILURE)
		APL_GOBACK_FAIL

	

		
	strcpy(p_ca_canote_struct_h->h_maker,p_intlenv_data_struct_h->usr);
	strcpy(p_ca_canote_struct_h->h_maker_dt,chr_p_sys_date); 
	strcpy(p_ca_canote_struct_h->h_access_stamp,p_sys_date_time);

	if(	!strlen(p_ca_canote_struct_h->h_info_1)	)
		l_ca_canote_struct_i->i_info_1 = -1;
   else
      CA_FilterSWFChar(p_ca_canote_struct_h->h_info_1);
	if(	!strlen(p_ca_canote_struct_h->h_info_2)	)
		l_ca_canote_struct_i->i_info_2 = -1;
   else
      CA_FilterSWFChar(p_ca_canote_struct_h->h_info_2);
	if(	!strlen(p_ca_canote_struct_h->h_info_3)	)
		l_ca_canote_struct_i->i_info_3 = -1;
   else
      CA_FilterSWFChar(p_ca_canote_struct_h->h_info_3);
	if(	!strlen(p_ca_canote_struct_h->h_info_4)	)
		l_ca_canote_struct_i->i_info_4 = -1;
   else
      CA_FilterSWFChar(p_ca_canote_struct_h->h_info_4);
	
		

	EXEC SQL INSERT INTO CANOTE 
	VALUES (:p_ca_canote_struct_h:l_ca_canote_struct_i);
  
	IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_FOOTNOTE,
												 p_ca_canote_struct_h->h_info_nbr, 
												 APL_NULL_STRING,
												 APL_NULL_STRING) 

		
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
		
	{
		# ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nExiting S_InputFootnote successfully\n");
		# endif
		return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
		# ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nExiting S_InputFootnote unsuccessfully\n");
		# endif
		return (APL_FAILURE);
	}
}		
static int CA_Mod_ChgFootNote(		CA_CANOTE_STRUCT_H		*p_ca_canote_struct_h,
											INTL_ENV_DATA_STRUCT_H		*p_intlenv_data_struct_h,
											char							*chr_p_sys_date,
											char							*p_sys_date_time,
											DEBUG_INFO_STRUCT_H				**l_debug_info_ptr			)
{	
	char 	chr_acc_stamp_compare	[APL_DATE_LEN]=APL_NULL_STRING;
	short	i_acc_stamp_compare;
	CA_CANOTE_STRUCT_I	*l_ca_canote_struct_i  ;
	
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	l_ca_canote_struct_i = (CA_CANOTE_STRUCT_I *)calloc(1,sizeof(CA_CANOTE_STRUCT_I));		
	APL_MALLOC_FAIL(l_ca_canote_struct_i)
	
	if( CA_ChkManData(		p_ca_canote_struct_h,
								p_intlenv_data_struct_h,
								l_debug_info_ptr	)== APL_FAILURE)
		APL_GOBACK_FAIL

	


	 
	
	EXEC SQL SELECT ACCESS_STAMP  
	INTO :chr_acc_stamp_compare:i_acc_stamp_compare 
	FROM CANOTE 
	WHERE INFO_SEQ = :p_ca_canote_struct_h->h_info_nbr   
	FOR UPDATE OF MAKER; 

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_REC_NOTFND,  
														"Foot Note Number :",
														p_ca_canote_struct_h->h_info_nbr, 
														APL_NULL_STRING);

	if (!strcmp(p_ca_canote_struct_h->h_access_stamp, chr_acc_stamp_compare))
	{ 
		if(CA_Chk_FootNote(	p_ca_canote_struct_h->h_info_nbr,
								p_intlenv_data_struct_h->h_mode,
								l_debug_info_ptr)== APL_FAILURE)
			APL_GOBACK_FAIL
		
		if(CO_ChkErr(*l_debug_info_ptr)== APL_SUCCESS)
			APL_GOBACK_FAIL
		
		strcpy(p_ca_canote_struct_h->h_maker,p_intlenv_data_struct_h->usr);
		strcpy(p_ca_canote_struct_h->h_access_stamp,p_sys_date_time); 
		strcpy(p_ca_canote_struct_h->h_maker_dt,chr_p_sys_date); 
		
		if(	!strlen(p_ca_canote_struct_h->h_info_1)	)
			l_ca_canote_struct_i->i_info_1 = -1;
      else
         CA_FilterSWFChar(p_ca_canote_struct_h->h_info_1);
		if(	!strlen(p_ca_canote_struct_h->h_info_2)	)
			l_ca_canote_struct_i->i_info_2 = -1;
      else
         CA_FilterSWFChar(p_ca_canote_struct_h->h_info_2);
		if(	!strlen(p_ca_canote_struct_h->h_info_3)	)
			l_ca_canote_struct_i->i_info_3 = -1;
      else
         CA_FilterSWFChar(p_ca_canote_struct_h->h_info_3);
		if(	!strlen(p_ca_canote_struct_h->h_info_4)	)
			l_ca_canote_struct_i->i_info_4 = -1;
      else
         CA_FilterSWFChar(p_ca_canote_struct_h->h_info_4);
		 
		 
		EXEC SQL UPDATE CANOTE
		SET  TYPEOF_INFO = 	:p_ca_canote_struct_h->h_info_class,
		INFO_SEQ			= 	:p_ca_canote_struct_h->h_info_nbr,
		INFO_1			= 	:p_ca_canote_struct_h->h_info_1:l_ca_canote_struct_i->i_info_1,
		INFO_2			= 	:p_ca_canote_struct_h->h_info_2:l_ca_canote_struct_i->i_info_2, 
		INFO_3			= 	:p_ca_canote_struct_h->h_info_3:l_ca_canote_struct_i->i_info_3, 
		INFO_4			= 	:p_ca_canote_struct_h->h_info_4:l_ca_canote_struct_i->i_info_4, 
		maker				= 	:p_ca_canote_struct_h->h_maker, 
		MAKER_DT			= 	:p_ca_canote_struct_h->h_maker_dt, 
		access_stamp	= 	:p_ca_canote_struct_h->h_access_stamp 
		WHERE INFO_SEQ	=	:p_ca_canote_struct_h->h_info_nbr;

		
      	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
																"Foot Note Number :",
																p_ca_canote_struct_h->h_info_nbr,
																APL_NULL_STRING) 
		} 
		else 
		{ 
			if(CO_InsertErr(l_debug_info_ptr, 
				ERR_ACCESSSTAMP_CHGD, 
				APL_NULL_STRING, 
				APL_NULL_STRING, 
				APL_NULL_STRING, 
				__LINE__, 
				__FILE__ )\
				 == APL_FAILURE) 
				APL_GOBACK_FAIL 
		} 
		
		if(CO_ChkErr(*l_debug_info_ptr)== APL_SUCCESS)
			APL_GOBACK_FAIL

		

		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			# ifdef	SYS_DEBUG
				fprintf(APL_OUT_FILE,"\nExiting CA_Mod_ChgFootNote successfully\n");
			# endif
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			# ifdef	SYS_DEBUG
				fprintf(APL_OUT_FILE,"\nExiting CA_Mod_ChgFootNote unsuccessfully\n");
			# endif
			return (APL_FAILURE);
		}
}		



static int CA_Chk_FootNoteDel(		CA_CANOTE_STRUCT_H		*p_ca_canote_struct_h,
											INTL_ENV_DATA_STRUCT_H		*p_intlenv_data_struct_h,
											DEBUG_INFO_STRUCT_H				**l_debug_info_ptr			)
{	
	char 	chr_acc_stamp_compare	[APL_DATE_LEN]=APL_NULL_STRING;
	short	i_acc_stamp_compare;
	
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	if( CA_ChkManData(		p_ca_canote_struct_h,
								p_intlenv_data_struct_h,
								l_debug_info_ptr	)== APL_FAILURE)
		APL_GOBACK_FAIL
	

	EXEC SQL SELECT ACCESS_STAMP  
	INTO :chr_acc_stamp_compare:i_acc_stamp_compare 
	FROM CANOTE 
	WHERE INFO_SEQ = :p_ca_canote_struct_h->h_info_nbr   
	FOR UPDATE OF MAKER; 

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_REC_NOTFND,  
														"Foot Note Number :",		
														p_ca_canote_struct_h->h_info_nbr, 
														APL_NULL_STRING);

	if (!strcmp(p_ca_canote_struct_h->h_access_stamp, chr_acc_stamp_compare))
	{
		if(CA_Chk_FootNote(	p_ca_canote_struct_h->h_info_nbr,
								p_intlenv_data_struct_h->h_mode,
								l_debug_info_ptr)== APL_FAILURE)
			APL_GOBACK_FAIL
		
		if(CO_ChkErr(*l_debug_info_ptr)== APL_SUCCESS)
			APL_GOBACK_FAIL
		else
		{
			EXEC SQL DELETE FROM CANOTE
			WHERE INFO_SEQ	=	rtrim(:p_ca_canote_struct_h->h_info_nbr);
			IS_ANY_ORA_ERROR
		}
	}	
	else
	{
		if(CO_InsertErr(l_debug_info_ptr, 
			ERR_ACCESSSTAMP_CHGD, 
			APL_NULL_STRING, 
			APL_NULL_STRING, 
			APL_NULL_STRING, 
			__LINE__, 
			__FILE__ )\
			 == APL_FAILURE) 
			APL_GOBACK_FAIL 
	
	}
	
	if(CO_ChkErr(*l_debug_info_ptr)== APL_SUCCESS)
		APL_GOBACK_FAIL
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			# ifdef	SYS_DEBUG
				fprintf(APL_OUT_FILE,"\nExiting CA_Chk_FootNoteDel successfully\n");
			# endif
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			# ifdef	SYS_DEBUG
				fprintf(APL_OUT_FILE,"\nExiting CA_Chk_FootNoteDel unsuccessfully\n");
			# endif
			return (APL_FAILURE);
		}
}		


static	int	CA_ChkManData( 		CA_CANOTE_STRUCT_H    	*p_footnote_struct,
 				                    	INTL_ENV_DATA_STRUCT_H  	 	*p_intlenv_data_struct_h,
            				         DEBUG_INFO_STRUCT_H        		**l_debug_info_ptr )
{		
		
	int	int_p_error_flg = APL_SUCCESS;
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	if (	strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)	)
	{	
		if(	!strlen(p_footnote_struct->h_access_stamp)	)
		{	
			APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
			int_p_error_flg = APL_FAILURE;
		}
	}
	if(!strlen(p_footnote_struct->h_info_nbr))
	{	
		APL_DATA_MISSING("Note Number",APL_NULL_STRING,APL_NULL_STRING)
		int_p_error_flg = APL_FAILURE;
	}
	if(!strlen(p_footnote_struct->h_info_class))	
	{
		APL_DATA_MISSING("Note Type",APL_NULL_STRING,APL_NULL_STRING)
		int_p_error_flg = APL_FAILURE;
	}
	if(strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE))
	{
		if((!strlen(p_footnote_struct->h_info_1)) 	&& 
			(!strlen(p_footnote_struct->h_info_2))	&&
			(!strlen(p_footnote_struct->h_info_3))	&&
			(!strlen(p_footnote_struct->h_info_4)))	
		{	
			APL_DATA_MISSING("Note",APL_NULL_STRING,APL_NULL_STRING)
			int_p_error_flg = APL_FAILURE;
		}
	}
	
	if (int_p_error_flg == APL_FAILURE)
		APL_GOBACK_FAIL
	else
		APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
	{
		return (APL_SUCCESS);
	}
	RETURN_FAILURE:
	{
		return (APL_FAILURE);
	}
}

static int CA_Chk_FootNote(	char*				p_note_nbr,
									char*				p_mode,
									DEBUG_INFO_STRUCT_H	**l_debug_info_ptr)
{  int 	int_h_eventcount = 0;
	int	int_h_rightscount = 0;
	short	i_evntcount,i_rightscount;
	
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	if(!strcmp(p_mode,APL_FUNC_MODIFY) ||
		(!strcmp(p_mode,APL_FUNC_DELETE)))
	{
		EXEC SQL SELECT count(*) into:int_h_eventcount
		FROM 	CAEVENT 
		WHERE (INFO_SEQ 	= 	RTRIM(:p_note_nbr)
		OR		entitl_infono	= 	RTRIM(:p_note_nbr)
		OR		NSER_E_INFO	= 	RTRIM(:p_note_nbr)
		OR		NSER_B_INFO	= 	RTRIM(:p_note_nbr)
		OR		INCO_INFO_A	= 	RTRIM(:p_note_nbr)
		OR		COMP_INFO_A	= 	RTRIM(:p_note_nbr))
		AND	status  in ('PP')
		AND	rownum	=	1;
		IS_ANY_ORA_ERROR
		
		if(int_h_eventcount > 0)
		{	
			if(!strcmp(p_mode,APL_FUNC_MODIFY))	
			{		
				if(CO_InsertWarning(l_debug_info_ptr, 
						W_UNREV_UNCLOSED_EVNT_EXIST, 
						APL_NULL_STRING, 
						APL_NULL_STRING, 
						APL_NULL_STRING, 
						__LINE__, 
						__FILE__ )== APL_FAILURE)
							APL_GOBACK_FAIL
			}
			else 
			{
			
				if(CO_InsertErr(l_debug_info_ptr, 
					ERR_UNREV_UNCLOSED_EVNT_EXIST, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					__LINE__, 
					__FILE__ )== APL_FAILURE)
						APL_GOBACK_FAIL
			}
		}

		EXEC SQL SELECT count(*) into:int_h_rightscount
		FROM 	CARTSPROC 
		WHERE INFO_SEQ 	= 	RTRIM(:p_note_nbr)
		AND	status not  in ('AA')
		AND	rownum	=	1;
		IS_ANY_ORA_ERROR
		if(int_h_rightscount > 0)
		{	
			if(!strcmp(p_mode,APL_FUNC_MODIFY))	
			{	
				if	(CO_InsertWarning(l_debug_info_ptr, 
					W_UNAUTH_RTS_EXIST, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					__LINE__, 
					__FILE__ )== APL_FAILURE)
				
						APL_GOBACK_FAIL
			}
			else
			{
			
				if	(CO_InsertErr(l_debug_info_ptr, 
					ERR_UNAUTH_RTS_EXIST, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					APL_NULL_STRING, 
					__LINE__, 
					__FILE__ )== APL_FAILURE)
						APL_GOBACK_FAIL
			}
		}
		
	}
	
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
	{
		return (APL_SUCCESS);
	}
	RETURN_FAILURE:
	{
		return (APL_FAILURE);
	}
}

void CA_FilterSWFChar(char *chrptr)
{

const char InValSwfChr[] = "${}[]+-:;^()\~_=`";
int i= 0;
int j =0;

while (i <= strlen(chrptr))
{
        j=0;
        while (InValSwfChr[j] != NULL)
        {  if (InValSwfChr[j] == chrptr[i] )
           {  chrptr[i]= ' ';
              break; }
           j++;
        }
        i++;
}
return;
}
