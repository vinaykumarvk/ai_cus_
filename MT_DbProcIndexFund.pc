
/************************************************************************************
 *    COPYRIGHT NOTICE                                                              *
 *                                                                                  *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.              *
 *                                                                                  *
 *   These materials are confidential and proprietary to                            *
 *    Polaris Software Lab Limited and no part of these materials should            *
 *    be reproduced, published, transmitted or distributed in any form or           *
 *    by any means, electronic, mechanical, photocopying, recording or              *
 *    otherwise, or stored in any information storage or retrieval system           *
 *    of any nature nor should the materials be disclosed to third parties          *
 *    or used in any other manner for which this is not authorized, without         *
 *    the prior express written authorization of Polaris Software Lab Limited.      *
 */
/************************************************************************************
 *
 * Module Name         :        Master Maintenance
 *
 * File Name           :        MT_DbProcIndexFund.pc
 *
 * Description         :        This file contains functions for master and
 *                              child tables' records insertion and updation
 *                              in all modes business validations check functions.
 *
 *
 *                      Version Control Block
 *
 * Date        Version     Author               Description											RFS NO
 * ---------   --------  ---------------  ---------------------------------------------	----------
 * 26-12-2005   1.0       S Pradeep       New file to validate Master and child tables		HDFCMT_017
 *************************************************************************************/


#include "CO_HostStructdef.h"
#include "Intellect_Error.h"

EXEC SQL INCLUDE SQLCA.H;

int MT_ModDBIndexFund(MT_INDEX_FUND_STRUCT_H *p_mt_index_fund_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/* Variable Decleration */
	MT_INDEX_FUND_STRUCT_I *l_mt_index_fund_struct_i;

	struct sqlca sqlca;

	char chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
	char chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
	char chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
	short p_i_access_stamp_compare;
	short p_i_status = 0;
	int int_error_flag = APL_SUCCESS;
	int int_l_rowexists = 0;
	char  *l_key_codes[5];
	char  *l_key_values[5];
	char  chr_l_table_name[50] = APL_NULL_STRING;
	char	*l_link_table_names[2];
	char  chr_l_field_val[40] = APL_NULL_STRING;
	char	p_status[APL_STATUS_LEN];

	int   int_retval = APL_SUCCESS;
#ifdef APL_THREADS
	APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	APL_FUNCTION_ENTER(APL_OUT_FILE)

		l_mt_index_fund_struct_i = (MT_INDEX_FUND_STRUCT_I *)calloc(1,sizeof(MT_INDEX_FUND_STRUCT_I));
	APL_MALLOC_FAIL(l_mt_index_fund_struct_i);

	p_i_maker =0;
	p_i_makerdt =0;
	p_i_checker =0;
	p_i_checkerdt =0;
	p_i_access_stamp =0;
	p_i_access_stamp_compare =0;

	if (!strlen(p_mt_index_fund_struct_h->h_index_fund_num)) l_mt_index_fund_struct_i->i_index_fund_num = -1;
	l_mt_index_fund_struct_i->i_index_fund_num = 0;
	if (!strlen(p_mt_index_fund_struct_h->h_index_fund_name)) l_mt_index_fund_struct_i->i_index_fund_name = -1;
	l_mt_index_fund_struct_i->i_index_fund_name = 0;
	if (!strlen(p_mt_index_fund_struct_h->h_maker)) l_mt_index_fund_struct_i->i_maker = -1;
	l_mt_index_fund_struct_i->i_maker = 0;
	if (!strlen(p_mt_index_fund_struct_h->h_maker_dt)) l_mt_index_fund_struct_i->i_maker_dt = -1;
	l_mt_index_fund_struct_i->i_maker_dt = 0;
	if (!strlen(p_mt_index_fund_struct_h->h_access_stamp)) l_mt_index_fund_struct_i->i_access_stamp = -1;
	l_mt_index_fund_struct_i->i_access_stamp = 0;
	if (!strlen(p_mt_index_fund_struct_h->h_status)) l_mt_index_fund_struct_i->i_status = -1;
	l_mt_index_fund_struct_i->i_status = 0;

	if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}

	if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_INPUT))
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Input h_mode of Function MT_ModDbIndexFund\n",NULL,p_intl_env_data_struct_h);
		}

		strcpy(p_mt_index_fund_struct_h->h_status,STATUS_UAUTH);
		l_mt_index_fund_struct_i->i_status =0;
		strcpy(p_mt_index_fund_struct_h->h_maker,p_intl_env_data_struct_h->usr);
		l_mt_index_fund_struct_i->i_maker =0;
		strcpy(p_mt_index_fund_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_mt_index_fund_struct_i->i_maker_dt =0;
		strcpy(p_mt_index_fund_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_mt_index_fund_struct_i->i_access_stamp =0;
		strcpy(p_mt_index_fund_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_index_fund_struct_h->h_checker_dt,APL_NULL_STRING);

		EXEC SQL INSERT INTO MT_INDEX_FUND VALUES (:p_mt_index_fund_struct_h:l_mt_index_fund_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	}
	else
	{
		l_key_codes[0]="INDEX_FUND_NUM";
		l_key_codes[1]=APL_NULL_STRING;

		l_key_values[0]=p_mt_index_fund_struct_h->h_index_fund_num;
		l_key_values[1]=APL_NULL_STRING;

		strcpy(chr_l_table_name,"MT_INDEX_FUND");

		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
				l_key_values,
				chr_l_table_name,
				"ACCESS_STAMP",
				chr_l_field_val,
				l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

				strcpy(chr_acc_stamp_compare,chr_l_field_val);

		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
				l_key_values,
				chr_l_table_name,
				"STATUS",
				chr_l_field_val,
				l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

				strcpy(chr_status_compare,chr_l_field_val);
	}	

	if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_MODIFY))
	{
		p_i_checker =-1;
		p_i_checkerdt =-1;

		strcpy(p_mt_index_fund_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_index_fund_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Modify h_mode of Function MT_ModDbIndexFund\n",NULL,p_intl_env_data_struct_h);
		}
		if (!strcmp(p_mt_index_fund_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			strcpy(p_mt_index_fund_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_index_fund_struct_i->i_access_stamp =0;
			strcpy(p_mt_index_fund_struct_h->h_status,STATUS_UAUTH);
			l_mt_index_fund_struct_i->i_status =0;

			EXEC SQL UPDATE MT_INDEX_FUND SET
				INDEX_FUND_NAME =:p_mt_index_fund_struct_h->h_index_fund_name:l_mt_index_fund_struct_i->i_index_fund_name,
				MAKER =:p_intl_env_data_struct_h->usr:p_i_maker,
				MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
				CHECKER =:p_mt_index_fund_struct_h->h_checker:l_mt_index_fund_struct_i->i_checker,
				CHECKER_DT =:p_mt_index_fund_struct_h->h_checker_dt:l_mt_index_fund_struct_i->i_checker_dt,
				ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
					WHERE 
					INDEX_FUND_NUM =:p_mt_index_fund_struct_h->h_index_fund_num;

			 /* Status Updation based on child table status */

			l_key_codes[0]="INDEX_FUND_NUM";
			l_key_codes[1]=APL_NULL_STRING;

			l_key_values[0]=p_mt_index_fund_struct_h->h_index_fund_num;
			l_key_values[1]=APL_NULL_STRING;

			strcpy(chr_l_table_name,"MT_INDEX_FUND");

			l_link_table_names[0]="MT_INDEX_FUNDDET";
			l_link_table_names[1]=APL_NULL_STRING;

			int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
					l_key_values,
					chr_l_table_name,
					l_link_table_names,
					APL_MASTER_IND,
					p_status,
					chr_sys_access_stamp,
					p_intl_env_data_struct_h,
					l_debug_info_ptr);

			APL_IF_DEBUG
			{
				printf("Returned Status Value = |%s|\n",p_status);
			}


			if (int_retval != APL_SUCCESS)
				APL_GOBACK_FAIL

					APL_GOBACK_SUCCESS

			//IS_ANY_ORA_ERROR Commented for AIX migration Chnages
		}
		else
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
				APL_GOBACK_FAIL
					int_error_flag = APL_FAILURE;
		} 
	}
	else if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_AUTHORISE))
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Authorize h_mode of Function MT_ModDbIndexFund\n",NULL,p_intl_env_data_struct_h);
		}
		if (!strcmp(p_mt_index_fund_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			if (strcmp(p_mt_index_fund_struct_h->h_status,STATUS_DEL_UAUTH))
			{
				strcpy(p_mt_index_fund_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_mt_index_fund_struct_i->i_access_stamp = 0;
				strcpy(p_mt_index_fund_struct_h->h_checker,p_intl_env_data_struct_h->usr);
				l_mt_index_fund_struct_i->i_checker = 0;
				strcpy(p_mt_index_fund_struct_h->h_checker_dt,chr_sys_access_stamp);
				l_mt_index_fund_struct_i->i_checker_dt = 0;
				strcpy(p_mt_index_fund_struct_h->h_status,STATUS_AUTH);
				l_mt_index_fund_struct_i->i_status = 0;

				EXEC SQL UPDATE MT_INDEX_FUND SET
					CHECKER =:p_intl_env_data_struct_h->usr:p_i_checker,
					CHECKER_DT =:chr_sys_access_stamp:p_i_checkerdt,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
					/* STATUS =:p_mt_index_fund_struct_h->h_statusa*/
						WHERE INDEX_FUND_NUM =:p_mt_index_fund_struct_h->h_index_fund_num;

				/* Status Updation based on child table status */

				l_key_codes[0]="INDEX_FUND_NUM";
				l_key_codes[1]=APL_NULL_STRING;

				l_key_values[0]=p_mt_index_fund_struct_h->h_index_fund_num;
				l_key_values[1]=APL_NULL_STRING;

				strcpy(chr_l_table_name,"MT_INDEX_FUND");

				l_link_table_names[0]="MT_INDEX_FUNDDET";
				l_link_table_names[1]=APL_NULL_STRING;

				int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
						l_key_values,
						chr_l_table_name,
						l_link_table_names,
						APL_MASTER_IND,
						p_status,
						chr_sys_access_stamp,
						p_intl_env_data_struct_h,
						l_debug_info_ptr);

				APL_IF_DEBUG
				{
					printf("Returned Status Value = |%s|\n",p_status);
				}


				if (int_retval != APL_SUCCESS)
					APL_GOBACK_FAIL

						APL_GOBACK_SUCCESS

					//	IS_ANY_ORA_ERROR Commented for AIX migration Chnages
			}
			else
			{
				EXEC SQL DELETE MT_INDEX_FUND
					WHERE INDEX_FUND_NUM =:p_mt_index_fund_struct_h->h_index_fund_num;

				IS_ANY_ORA_ERROR
			}
		}
		else if(CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,
					__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
				int_error_flag = APL_FAILURE;
	}
	else if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_RESET))
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Entered reset h_mode of MT_ModDbIndexFund\n",NULL,p_intl_env_data_struct_h);
		}
		if (!strcmp(p_mt_index_fund_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			if (!strcmp(p_mt_index_fund_struct_h->h_status,STATUS_DEL_UAUTH))
			{
				strcpy(p_mt_index_fund_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_mt_index_fund_struct_i->i_access_stamp = 0;
				strcpy(p_mt_index_fund_struct_h->h_checker,p_intl_env_data_struct_h->usr);
				l_mt_index_fund_struct_i->i_checker = 0;
				strcpy(p_mt_index_fund_struct_h->h_checker_dt,chr_sys_access_stamp);
				l_mt_index_fund_struct_i->i_checker_dt = 0;
				strcpy(p_mt_index_fund_struct_h->h_status,STATUS_AUTH);
				l_mt_index_fund_struct_i->i_status = 0;

				EXEC SQL UPDATE MT_INDEX_FUND SET
					CHECKER =:p_intl_env_data_struct_h->usr:p_i_checker,
							  CHECKER_DT =:chr_sys_access_stamp:p_i_checkerdt,
							  ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
							 /*  STATUS =:p_mt_index_fund_struct_h->h_status */
								  WHERE INDEX_FUND_NUM =:p_mt_index_fund_struct_h->h_index_fund_num;
				
				/* Status Updation based on child table status */

				l_key_codes[0]="INDEX_FUND_NUM";
				l_key_codes[1]=APL_NULL_STRING;

				l_key_values[0]=p_mt_index_fund_struct_h->h_index_fund_num;
				l_key_values[1]=APL_NULL_STRING;

				strcpy(chr_l_table_name,"MT_INDEX_FUND");

				l_link_table_names[0]="MT_INDEX_FUNDDET";
				l_link_table_names[1]=APL_NULL_STRING;

				int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
						l_key_values,
						chr_l_table_name,
						l_link_table_names,
						APL_MASTER_IND,
						p_status,
						chr_sys_access_stamp,
						p_intl_env_data_struct_h,
						l_debug_info_ptr);

				APL_IF_DEBUG
				{
					printf("Returned Status Value = |%s|\n",p_status);
				}


				if (int_retval != APL_SUCCESS)
					APL_GOBACK_FAIL

						APL_GOBACK_SUCCESS

						//IS_ANY_ORA_ERROR Commented for AIX migration Chnages
			}
			else
			{
				if (CO_InsertErr(l_debug_info_ptr,ERR_CANT_RESET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
					APL_GOBACK_FAIL
						int_error_flag = APL_FAILURE;
			}
		}
		else if (CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
				int_error_flag = APL_FAILURE;
	}
	else if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_DELETE))
	{
		p_i_checker =-1;
		p_i_checkerdt =-1;	
		strcpy(p_mt_index_fund_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_index_fund_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Entered delete h_mode of MT_ModDbIndexFund\n",NULL,p_intl_env_data_struct_h);
		}	
		if (!strcmp(p_mt_index_fund_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			strcpy(p_mt_index_fund_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_index_fund_struct_i->i_access_stamp = 0;
			strcpy(p_mt_index_fund_struct_h->h_status,STATUS_DEL_UAUTH);
			l_mt_index_fund_struct_i->i_status = 0;

			EXEC SQL UPDATE MT_INDEX_FUND SET
				MAKER =:p_intl_env_data_struct_h->usr:p_i_maker,
						MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
						CHECKER =:p_mt_index_fund_struct_h->h_checker:l_mt_index_fund_struct_i->i_checker,
						CHECKER_DT =:p_mt_index_fund_struct_h->h_checker_dt:l_mt_index_fund_struct_i->i_checker_dt,
						ACCESS_STAMP =:p_mt_index_fund_struct_h->h_access_stamp:p_i_access_stamp,
						STATUS =:p_mt_index_fund_struct_h->h_status:l_mt_index_fund_struct_i->i_status
							WHERE INDEX_FUND_NUM =:p_mt_index_fund_struct_h->h_index_fund_num;

			IS_ANY_ORA_ERROR
		}
		else
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
				APL_GOBACK_FAIL
					int_error_flag = APL_FAILURE;
		}
	}
	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}	
	APL_GOBACK_SUCCESS

		RETURN_SUCCESS :
		{

				APL_FREE(l_mt_index_fund_struct_i);//AIX - Warnings Removal
			APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
				APL_FREE(l_mt_index_fund_struct_i);
			return(APL_SUCCESS);
		}
		RETURN_FAILURE :
		{

			APL_FREE(l_mt_index_fund_struct_i);//AIX - Warnings Removal
			APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
			APL_FREE(l_mt_index_fund_struct_i);
			return(APL_FAILURE);
		}

}

int MT_ModDBIndexFundDet(MT_INDEX_FUNDDET_STRUCT_H *p_mt_index_funddet_struct_h,
		INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h,
		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/* Variable Decleration */
	MT_INDEX_FUNDDET_STRUCT_I *l_mt_index_funddet_struct_i;

	struct sqlca sqlca;
	char chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
	char chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
	char chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
	short p_i_access_stamp_compare;
	short p_i_status = 0;
	int int_error_flag = APL_SUCCESS;
	int int_retval = APL_SUCCESS;
	int int_l_rowexists = 0;
	char  *l_key_codes[5];
	char  *l_key_values[5];
	char  chr_l_table_name[50] = APL_NULL_STRING;
	char  *l_link_table_names[2];
	char  chr_l_field_val[40] = APL_NULL_STRING;
	char	p_status[APL_STATUS_LEN];
	int	p_next_seq_num = 0;
	char	p_field_name[25]="INDEX_SEQ_NUM";

#ifdef APL_THREADS
	APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	APL_FUNCTION_ENTER(APL_OUT_FILE)

		l_mt_index_funddet_struct_i = (MT_INDEX_FUNDDET_STRUCT_I *)calloc(1,sizeof(MT_INDEX_FUNDDET_STRUCT_I));

	APL_MALLOC_FAIL(l_mt_index_funddet_struct_i);

	p_i_maker =0;
	p_i_makerdt =0;
	p_i_checker =0;
	p_i_checkerdt =0;
	p_i_access_stamp =0;
	p_i_access_stamp_compare =0;

	if(!strlen(p_mt_index_funddet_struct_h->h_index_fund_num)) l_mt_index_funddet_struct_i->i_index_fund_num = -1;
	l_mt_index_funddet_struct_i->i_index_fund_num = 0;
	if(!strlen(p_mt_index_funddet_struct_h->h_instr_code)) l_mt_index_funddet_struct_i->i_instr_code = -1;
	l_mt_index_funddet_struct_i->i_instr_code = 0;
	if (!strlen(p_mt_index_funddet_struct_h->h_maker)) l_mt_index_funddet_struct_i->i_maker = -1;
	l_mt_index_funddet_struct_i->i_maker = 0;
	if (!strlen(p_mt_index_funddet_struct_h->h_maker_dt)) l_mt_index_funddet_struct_i->i_maker_dt = -1;
	l_mt_index_funddet_struct_i->i_maker_dt = 0;
	if (!strlen(p_mt_index_funddet_struct_h->h_access_stamp)) l_mt_index_funddet_struct_i->i_access_stamp = -1;
	l_mt_index_funddet_struct_i->i_access_stamp = 0;
	if (!strlen(p_mt_index_funddet_struct_h->h_status)) l_mt_index_funddet_struct_i->i_status = -1;
	l_mt_index_funddet_struct_i->i_status = 0;

	if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}

	if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_INPUT))
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Input h_mode of Function MT_ModDbIndexFundDet\n",NULL,p_intl_env_data_struct_h);
		}

		l_key_codes[0]="INDEX_FUND_NUM";
		l_key_codes[1]=APL_NULL_STRING;

		l_key_values[0]=p_mt_index_funddet_struct_h->h_index_fund_num;
		l_key_values[1]=APL_NULL_STRING;

		l_link_table_names[0]="MT_INDEX_FUNDDET";
		l_link_table_names[1]=APL_NULL_STRING;

		int_retval = CO_RtvChldNxtSeqNum(l_key_codes,
				l_key_values,
				l_link_table_names[0],
				p_field_name,
				&p_next_seq_num,
				l_debug_info_ptr);
		if (int_retval != APL_FAILURE)
			p_mt_index_funddet_struct_h->h_index_seq_num = p_next_seq_num;
		else
			APL_GOBACK_FAIL

				APL_IF_DEBUG
				{
					printf("Sequence number returned = |%d|\n",p_next_seq_num);
					printf("Sequence number generated = |%d|\n",p_mt_index_funddet_struct_h->h_index_seq_num);
				}
		p_next_seq_num = 0;

		if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
		{
			APL_GOBACK_FAIL
		}

		strcpy(p_mt_index_funddet_struct_h->h_status,STATUS_UAUTH);
		l_mt_index_funddet_struct_i->i_status =0;
		strcpy(p_mt_index_funddet_struct_h->h_maker,p_intl_env_data_struct_h->usr);
		l_mt_index_funddet_struct_i->i_maker =0;
		strcpy(p_mt_index_funddet_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_mt_index_funddet_struct_i->i_maker_dt =0;
		strcpy(p_mt_index_funddet_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_mt_index_funddet_struct_i->i_access_stamp =0;
		strcpy(p_mt_index_funddet_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_index_funddet_struct_h->h_checker_dt,APL_NULL_STRING);

		EXEC SQL INSERT INTO MT_INDEX_FUNDDET VALUES (:p_mt_index_funddet_struct_h:l_mt_index_funddet_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		/* Status Updation of master table based on child table status */

		l_key_codes[0]="INDEX_FUND_NUM";
		l_key_codes[1]=APL_NULL_STRING;

		l_key_values[0]=p_mt_index_funddet_struct_h->h_index_fund_num;
		l_key_values[1]=APL_NULL_STRING;

		strcpy(chr_l_table_name,"MT_INDEX_FUND");


		int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
				l_key_values,
				chr_l_table_name,
				l_link_table_names,
				APL_CHILD_IND,
				p_status,
				chr_sys_access_stamp,
				p_intl_env_data_struct_h,
				l_debug_info_ptr);

		APL_IF_DEBUG
		{
			printf("Returned Status Value = |%s|\n",p_status);
		}


		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

				APL_GOBACK_SUCCESS

				//IS_ANY_ORA_ERROR Commented for AIX migration Chnages

	}
	else
	{
		l_key_codes[0]="INDEX_SEQ_NUM";
		l_key_codes[1]="INDEX_FUND_NUM";
		l_key_codes[2]=APL_NULL_STRING;

		l_key_values[0]=ltoa(p_mt_index_funddet_struct_h->h_index_seq_num);
		l_key_values[1]=p_mt_index_funddet_struct_h->h_index_fund_num;
		l_key_values[2]=APL_NULL_STRING;

		strcpy(chr_l_table_name,"MT_INDEX_FUNDDET");

		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
				l_key_values,
				chr_l_table_name,
				"ACCESS_STAMP",
				chr_l_field_val,
				l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

				strcpy(chr_acc_stamp_compare,chr_l_field_val);

		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
				l_key_values,
				chr_l_table_name,
				"STATUS",
				chr_l_field_val,
				l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

				strcpy(chr_status_compare,chr_l_field_val);
	}

	if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_MODIFY))
	{

		if (CO_InsertErr(l_debug_info_ptr,ERR_MOD_NOT_ALWD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
				int_retval = APL_FAILURE;
	/*	p_i_checker =0;
		p_i_checkerdt =0;

		strcpy(p_mt_index_funddet_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_index_funddet_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Modify h_mode of Function MT_ModDbIndexFundDet\n",NULL,p_intl_env_data_struct_h);
		}
		if (!strcmp(p_mt_index_funddet_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			strcpy(p_mt_index_funddet_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_index_funddet_struct_i->i_access_stamp =0;
			strcpy(p_mt_index_funddet_struct_h->h_status,STATUS_UAUTH);
			l_mt_index_funddet_struct_i->i_status =0;

			EXEC SQL UPDATE MT_INDEX_FUND SET
				MAKER =:p_intl_env_data_struct_h->usr:p_i_maker,
				MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
				CHECKER =:p_mt_index_funddet_struct_h->h_checker:l_mt_index_funddet_struct_i->i_checker,
				CHECKER_DT =:p_mt_index_funddet_struct_h->h_checker_dt:l_mt_index_funddet_struct_i->i_checker_dt,
				ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
				STATUS =:p_mt_index_funddet_struct_h->h_status:l_mt_index_funddet_struct_i->i_status 
					WHERE
					INDEX_FUND_NUM =:p_mt_index_funddet_struct_h->h_index_fund_num AND
					INDEX_SEQ_NUM =:p_mt_index_funddet_struct_h->h_index_seq_num;

			 Status Updation of master table based on child table status 

			l_key_codes[0]="INDEX_FUND_NUM";
			l_key_codes[1]=APL_NULL_STRING;

			l_key_values[0]=p_mt_index_funddet_struct_h->h_index_fund_num;
			l_key_values[1]=APL_NULL_STRING;

			strcpy(chr_l_table_name,"MT_INDEX_FUND");

			l_link_table_names[0]="MT_INDEX_FUNDDET";
			l_link_table_names[1]=APL_NULL_STRING;

			int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
					l_key_values,
					chr_l_table_name,
					l_link_table_names,
					APL_CHILD_IND,
					p_status,
					chr_sys_access_stamp,
					p_intl_env_data_struct_h,
					l_debug_info_ptr);

			APL_IF_DEBUG
			{
				printf("Returned Status Value = |%s|\n",p_status);
			}


			if (int_retval != APL_SUCCESS)
				APL_GOBACK_FAIL

					APL_GOBACK_SUCCESS

					IS_ANY_ORA_ERROR
		}	
		else
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
				int_error_flag=APL_FAILURE;
		} */
	}

	else if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_AUTHORISE))
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Authorize h_mode of Function MT_ModDbIndexFundiDet\n",NULL,p_intl_env_data_struct_h);
		}
		if (!strcmp(p_mt_index_funddet_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			if (strcmp(p_mt_index_funddet_struct_h->h_status,STATUS_DEL_UAUTH))
			{
				strcpy(p_mt_index_funddet_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_mt_index_funddet_struct_i->i_access_stamp = 0;
				strcpy(p_mt_index_funddet_struct_h->h_checker,p_intl_env_data_struct_h->usr);
				l_mt_index_funddet_struct_i->i_checker = 0;
				strcpy(p_mt_index_funddet_struct_h->h_checker_dt,chr_sys_access_stamp);
				l_mt_index_funddet_struct_i->i_checker_dt = 0;
				strcpy(p_mt_index_funddet_struct_h->h_status,STATUS_AUTH);
				l_mt_index_funddet_struct_i->i_status = 0;

				EXEC SQL UPDATE MT_INDEX_FUNDDET SET
					CHECKER =:p_intl_env_data_struct_h->usr:p_i_checker,
					CHECKER_DT =:chr_sys_access_stamp:p_i_checkerdt,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
					STATUS =:p_mt_index_funddet_struct_h->h_status
					WHERE INDEX_FUND_NUM =:p_mt_index_funddet_struct_h->h_index_fund_num AND
							INDEX_SEQ_NUM =:p_mt_index_funddet_struct_h->h_index_seq_num;

				/* Status Updation of master table based on child table status */

				l_key_codes[0]="INDEX_FUND_NUM";
				l_key_codes[1]=APL_NULL_STRING;

				l_key_values[0]=p_mt_index_funddet_struct_h->h_index_fund_num;
				l_key_values[1]=APL_NULL_STRING;

				strcpy(chr_l_table_name,"MT_INDEX_FUND");

				l_link_table_names[0]="MT_INDEX_FUNDDET";
				l_link_table_names[1]=APL_NULL_STRING;

				int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
						l_key_values,
						chr_l_table_name,
						l_link_table_names,
						APL_CHILD_IND,
						p_status,
						chr_sys_access_stamp,
						p_intl_env_data_struct_h,
						l_debug_info_ptr);

				APL_IF_DEBUG
				{
					printf("Returned Status Value = |%s|\n",p_status);
				}

				if (int_retval != APL_SUCCESS)
					APL_GOBACK_FAIL

						APL_GOBACK_SUCCESS

						//IS_ANY_ORA_ERROR Commented for AIX migration Chnages
			}
			else
			{
				EXEC SQL DELETE MT_INDEX_FUNDDET 
					WHERE INDEX_FUND_NUM =:p_mt_index_funddet_struct_h->h_index_fund_num AND
							INDEX_SEQ_NUM =:p_mt_index_funddet_struct_h->h_index_seq_num;

				IS_ANY_ORA_ERROR
			}
		}
			
		else if (CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
				int_error_flag=APL_FAILURE;
		}

	if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_RESET))
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Entered reset h_mode of MT_ModDbIndexFundDet\n",NULL,p_intl_env_data_struct_h);
		}
		if (!strcmp(p_mt_index_funddet_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			if (!strcmp(p_mt_index_funddet_struct_h->h_status,STATUS_DEL_UAUTH))
			{
				strcpy(p_mt_index_funddet_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_mt_index_funddet_struct_i->i_access_stamp = 0;
				strcpy(p_mt_index_funddet_struct_h->h_checker,p_intl_env_data_struct_h->usr);
				l_mt_index_funddet_struct_i->i_checker = 0;
				strcpy(p_mt_index_funddet_struct_h->h_checker_dt,chr_sys_access_stamp);
				l_mt_index_funddet_struct_i->i_checker_dt = 0;
				strcpy(p_mt_index_funddet_struct_h->h_status,STATUS_AUTH);
				l_mt_index_funddet_struct_i->i_status = 0;

				EXEC SQL UPDATE MT_INDEX_FUNDDET SET
					CHECKER =:p_intl_env_data_struct_h->usr:p_i_checker,
					CHECKER_DT =:chr_sys_access_stamp:p_i_checkerdt,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
					STATUS =:p_mt_index_funddet_struct_h->h_status 
						WHERE INDEX_FUND_NUM =:p_mt_index_funddet_struct_h->h_index_fund_num AND
								INDEX_SEQ_NUM =:p_mt_index_funddet_struct_h->h_index_seq_num;

				/* Status Updation of master table based on child table status */

				l_key_codes[0]="INDEX_FUND_NUM";
				l_key_codes[1]=APL_NULL_STRING;

				l_key_values[0]=p_mt_index_funddet_struct_h->h_index_fund_num;
				l_key_values[1]=APL_NULL_STRING;

				strcpy(chr_l_table_name,"MT_INDEX_FUND");

				l_link_table_names[0]="MT_INDEX_FUNDDET";
				l_link_table_names[1]=APL_NULL_STRING;

				int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
						l_key_values,
						chr_l_table_name,
						l_link_table_names,
						APL_CHILD_IND,
						p_status,
						chr_sys_access_stamp,
						p_intl_env_data_struct_h,
						l_debug_info_ptr);

				APL_IF_DEBUG
				{
					printf("Returned Status Value = |%s|\n",p_status);
				}

				if (int_retval != APL_SUCCESS)
					APL_GOBACK_FAIL

						APL_GOBACK_SUCCESS

						//IS_ANY_ORA_ERROR Commented for AIX migration Chnages
			}
			else
			{
				if (CO_InsertErr(l_debug_info_ptr,ERR_CANT_RESET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__)!= APL_SUCCESS)
					APL_GOBACK_FAIL
						int_error_flag = APL_FAILURE;
			}
		}
		else if (CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
			APL_GOBACK_FAIL
				int_error_flag = APL_FAILURE;
	}
	if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_DELETE))
	{
		p_i_checker =-1;
		p_i_checkerdt =-1;
		strcpy(p_mt_index_funddet_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_index_funddet_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Entered delete h_mode of MT_ModDbIndexFundDet\n",NULL,p_intl_env_data_struct_h);
		}
		if (!strcmp(p_mt_index_funddet_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			strcpy(p_mt_index_funddet_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_index_funddet_struct_i->i_access_stamp = 0;
			strcpy(p_mt_index_funddet_struct_h->h_status,STATUS_DEL_UAUTH);
			l_mt_index_funddet_struct_i->i_status = 0;

			EXEC SQL UPDATE MT_INDEX_FUNDDET SET
				MAKER =:p_intl_env_data_struct_h->usr:p_i_maker,
				MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
				CHECKER =:p_mt_index_funddet_struct_h->h_checker:l_mt_index_funddet_struct_i->i_checker,
				CHECKER_DT =:p_mt_index_funddet_struct_h->h_checker_dt:l_mt_index_funddet_struct_i->i_checker_dt,
				ACCESS_STAMP =:p_mt_index_funddet_struct_h->h_access_stamp:p_i_access_stamp,
				STATUS =:p_mt_index_funddet_struct_h->h_status:l_mt_index_funddet_struct_i->i_status
					WHERE INDEX_FUND_NUM =:p_mt_index_funddet_struct_h->h_index_fund_num AND
							INDEX_SEQ_NUM =:p_mt_index_funddet_struct_h->h_index_seq_num;

			/* Status Updation of master table based on child table status */

			l_key_codes[0]="INDEX_FUND_NUM";
			l_key_codes[1]=APL_NULL_STRING;

			l_key_values[0]=p_mt_index_funddet_struct_h->h_index_fund_num;
			l_key_values[1]=APL_NULL_STRING;

			strcpy(chr_l_table_name,"MT_INDEX_FUND");

			l_link_table_names[0]="MT_INDEX_FUNDDET";
			l_link_table_names[1]=APL_NULL_STRING;

			int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
					l_key_values,
					chr_l_table_name,
					l_link_table_names,
					APL_CHILD_IND,
					p_status,
					chr_sys_access_stamp,
					p_intl_env_data_struct_h,
					l_debug_info_ptr);

			APL_IF_DEBUG
			{
				printf("Returned Status Value = |%s|\n",p_status);
			}

			if (int_retval != APL_SUCCESS)
				APL_GOBACK_FAIL

					APL_GOBACK_SUCCESS

					// IS_ANY_ORA_ERROR Commented for AIX migration Chnages
		}
		else
		{
			if (CO_InsertErr(l_debug_info_ptr,ERR_ACCESSSTAMP_CHGD,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__) != APL_SUCCESS)
				APL_GOBACK_FAIL
					int_error_flag = APL_FAILURE;
		}
	}
	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	APL_GOBACK_SUCCESS

		RETURN_SUCCESS :
		{
                      //AIX - Warnings Removal

				APL_FREE(l_mt_index_funddet_struct_i);
			APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		}
		RETURN_FAILURE :
		{

				APL_FREE(l_mt_index_funddet_struct_i);
			APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
						}
}
