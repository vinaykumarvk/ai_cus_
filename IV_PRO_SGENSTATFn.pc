




#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA; 
int  BBDbSelCSGENSTAT(char *p_codetyp,
			char *p_codeval,
			char *p_countrycode,
			PRO_SGENSTAT_STRUCT *p_pro_sgenstat_struct ,
			int * int_p_retstat,
			DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
EXEC SQL BEGIN DECLARE SECTION;
char chr_h_code_typ[APL_CLIENT_LENGTH];
char chr_h_code_val[5];
char h_nation_code[3];
PRO_SGENSTAT_STRUCT l_pro_sgenstat_struct;
struct{
	short i_code_typ;
	short i_nation_code;
	short i_code_val;
	short i_code_desc;
	}i_csgenstat_struct;

EXEC SQL VAR chr_h_code_typ IS STRING;
EXEC SQL VAR chr_h_code_val IS STRING;
EXEC SQL VAR h_nation_code IS STRING;
EXEC SQL VAR l_pro_sgenstat_struct.map_type IS STRING;
EXEC SQL VAR l_pro_sgenstat_struct.map_val IS STRING;
EXEC SQL VAR l_pro_sgenstat_struct.map_desc IS STRING;
EXEC SQL VAR l_pro_sgenstat_struct.nation_code IS STRING;
EXEC SQL END DECLARE SECTION; 

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif

struct sqlca sqlca;
strcpy(chr_h_code_typ,p_codetyp);
strcpy(chr_h_code_val,p_codeval);
strcpy(h_nation_code,p_countrycode);

EXEC SQL SELECT MAP_TYPE, NATION_CODE, MAP_VAL, MAP_DESC
INTO :l_pro_sgenstat_struct
FROM PRO_SGENSTAT
WHERE MAP_TYPE = :p_codetyp AND MAP_VAL = :p_codeval AND NATION_CODE = :p_countrycode;

if (sqlca.sqlcode == 1403)
{
	
	EXEC SQL SELECT MAP_TYPE,MAP_VAL,NATION_CODE,MAP_DESC
	INTO :l_pro_sgenstat_struct
	FROM PRO_SGENSTAT
	WHERE MAP_TYPE = :p_codetyp AND MAP_VAL = :p_codeval
	AND NATION_CODE = 'XX';
}

if (sqlca.sqlcode < 0)
{
	*int_p_retstat = IV_CRITCAL_ERROR_IND;
	return APL_FAILURE;
}
if (sqlca.sqlcode == 1403)
{
	*int_p_retstat = IV_NO_DATA_FOUND_ERR;
	return APL_FAILURE;
}
else
{
	if (i_csgenstat_struct.i_code_typ == -1)
	{
		strcpy(l_pro_sgenstat_struct.map_type,APL_NULL_STRING);
		*int_p_retstat = IV_COLUMN_NULL_ERR;
	}
	if (i_csgenstat_struct.i_code_val == -1)
	{		
		strcpy(l_pro_sgenstat_struct.map_val,APL_NULL_STRING);
		*int_p_retstat = IV_COLUMN_NULL_ERR;

	}
	if (i_csgenstat_struct.i_nation_code == -1)
	{
		strcpy(l_pro_sgenstat_struct.nation_code,APL_NULL_STRING);
		*int_p_retstat = IV_COLUMN_NULL_ERR;
	
	}
	if (i_csgenstat_struct.i_code_desc == -1)
	{
		strcpy(l_pro_sgenstat_struct.nation_code,APL_NULL_STRING);
		*int_p_retstat = IV_COLUMN_NULL_ERR;
	}	
}

	if (*int_p_retstat == IV_CRITCAL_ERROR_IND)
	{
		CO_InsertErr(l_debug_info_ptr,DB_ERR_NO,APL_NULL_STRING,
							APL_NULL_STRING,APL_NULL_STRING,
							__LINE__,__FILE__);
		APL_GOBACK_FAIL
	}

*int_p_retstat = IV_SUCCESS;
*p_pro_sgenstat_struct = l_pro_sgenstat_struct;
APL_GOBACK_SUCCESS;



RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of BBDbSelCSGENSTAT\n",NULL,NULL);

	}
	return APL_SUCCESS;

RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of BBDbSelCSGENSTAT\n",NULL,NULL);

	}
	return APL_FAILURE;
}

