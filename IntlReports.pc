/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to 
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or 
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*******************************************************************************
 *
 * Module Name         :         Intellect Reports	
 *
 * File Name           :         GenReport.pc
 *
 * Description         :         This file contains all functions for Reports.
 *
 *            Version Control Block
 *
 * Date        Version		Author              Description		RFS No.
 * ---------   --------	 ---------------  ----------------------------------
 * 23/02/2006   1.0        Sonali					New File	     HDFC_Reports1

 * *****************************************************************************/


#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "CO_IndStructdef.h"

#define 	STRSEP '|'
#define	PARAMSEP       '' 
#define	FIELDVALSEP		''
/*#define  APL_IF_DEBUG if(1)*/
/*FILE* g_logfile = APL_OUT_FILE;*/
extern FILE* g_logfile ;

EXEC SQL INCLUDE SQLCA.H;

int GenReportFn(char *p_chr_repid,char *p_chr_repname,char *p_chr_repformat,char *p_chr_runparamstr,char *chr_p_start_date,char *chr_p_user, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	char	l_chr_rep_id[5]				=	APL_NULL_STRING;
	char	l_chr_rep_format[3]			=	APL_NULL_STRING;
	char	l_chr_rep_name[100]			=	APL_NULL_STRING;
	char	l_chr_client[11]				=	APL_NULL_STRING;
	char  l_chr_fieldval[4000]			=	APL_NULL_STRING;
	char  l_chr_run_paramstr[2000]   =  APL_NULL_STRING;
	char  **chr_fldval_list				=	NULL;
	char	l_chr_paramsep[3]				=  APL_NULL_STRING;
	int 	l_int_no_fldvalelm 			=  0;
	int	l_int_cnt = 0;
	char *l_chr_ptr_param=NULL;

	EXEC SQL BEGIN DECLARE SECTION;
		EXEC SQL VAR l_chr_client IS STRING;
	EXEC SQL END DECLARE SECTION;
	

	
	printf("\n Entered Generate Report Function\n");
	printf("Report name is |%s|\n",p_chr_repname);
	printf("Run Param str is |%s|\n",p_chr_runparamstr);

	strcpy(l_chr_rep_id,p_chr_repid);
	strcpy(l_chr_rep_name,p_chr_repname);
	strcpy(l_chr_rep_format,p_chr_repformat);
	strcpy(l_chr_run_paramstr,p_chr_runparamstr);
	sprintf(l_chr_paramsep,"%c",PARAMSEP);

	switch 	(atoi(l_chr_rep_id))
	{

		case	310 :
		case	583 :
		case	598 :
		case	605 :
		case	574 :
		case	576 :
		case	578 :
		case	575 :
		case	614 :
		case  592 :
		case	364 :
		case	590 :
		case	375 :
		case	377 :
		case	591 :
		case	610 :
		case	394 :
		case	397 :
		case	609 :
		case	581 :
		case	580 :
		case	577 :
		case  585 :
		case  440 :
		case  346 :
		case  613 :
		case  594 :
		case  602 :
		case  418 :
		case  424 :
		case  426 :
		case  430 :
		case  447 :
		case  482 :
		case  450 :
		case  451 :
		case  456 :
		case  315 :
		case  474 :
		case  477 :
		case  453 :
		case  454 :
		case  491 :
		case  497 :
		case  321 :
		case  600 :
		case  416 :
		case  586 :
		case  543 :
		case  369 :
		case  606 :
		case  500 :
		case  484 :
		case  434 :
		case  588 :
		case  373 :
		case  372 :
		case  414 :
		case  584 :
		case	612 :	
		case	617 :	
		case	618 :	
		case	641 :	

			l_chr_ptr_param=strstr(l_chr_run_paramstr,l_chr_paramsep);
			printf("l_chr_ptr_param is |%s|******************\n",l_chr_ptr_param);
			//printf("l_chr_ptr_param is |%d|******************\n",strlen(l_chr_ptr_param));Changes done for AIX Migration
			printf("l_chr_ptr_param is |%d|******************\n",(int)strlen(l_chr_ptr_param));

			if (  CO_SplitStr(l_chr_run_paramstr,FIELDVALSEP,&l_int_no_fldvalelm,&chr_fldval_list) == APL_FAILURE)
			{
				          CO_ProcMonitor(g_logfile, "Failure from StrSplitFn", NULL, NULL);
								APL_GOBACK_FAIL
			}

			if(l_int_no_fldvalelm!=0)
			{

				for(l_int_cnt=0;l_int_cnt<l_int_no_fldvalelm;l_int_cnt++)
				{

					strcpy(l_chr_fieldval,chr_fldval_list[l_int_cnt]);
					strcat(l_chr_fieldval,l_chr_ptr_param);

					if(   CO_CreateReport(l_chr_rep_id,l_chr_rep_format,l_chr_rep_name,l_chr_fieldval,chr_p_start_date,chr_p_user,l_debug_info_ptr) == APL_FAILURE)
					{
						CO_ProcMonitor(g_logfile, "Failure from createReportFn", NULL, NULL);
						APL_GOBACK_FAIL
					}
				}


			}
			else
			{
				EXEC SQL DECLARE clientcur CURSOR FOR SELECT CLN_CODE FROM MT_CLIENT WHERE STATUS ='AA';
				EXEC SQL OPEN clientcur;
				for(;;)
				{
					EXEC SQL FETCH clientcur INTO :l_chr_client;

					if(APL_ZERO_RESULT_SET)
						break;

					IS_ANY_ORA_ERROR

						strcpy(l_chr_fieldval,l_chr_client);
					strcat(l_chr_fieldval,l_chr_run_paramstr);
					if(   CO_CreateReport(l_chr_rep_id,l_chr_rep_format,l_chr_rep_name,l_chr_fieldval,chr_p_start_date,chr_p_user,l_debug_info_ptr) == APL_FAILURE)
					{
						CO_ProcMonitor(g_logfile, "Failure from createReportFn", NULL, NULL);
						APL_GOBACK_FAIL
					}
				}
				EXEC SQL CLOSE clientcur;
			}
			break;


			case 411:
			case 593:
			case 423:
		case  551 :
		case  556 :

			/*l_chr_ptr_param=strstr(l_chr_run_paramstr,l_chr_paramsep);
			l_chr_ptr_param++;*/

			//printf("length is %d\n",strlen(p_chr_runparamstr));Changes done for AIX Migration
			printf("length is %d\n",(int)strlen(p_chr_runparamstr));

			if(   CO_CreateReport(l_chr_rep_id,l_chr_rep_format,l_chr_rep_name,p_chr_runparamstr,chr_p_start_date,chr_p_user,l_debug_info_ptr) == APL_FAILURE)
			{
				CO_ProcMonitor(g_logfile, "Failure from createReportFn", NULL, NULL);
				APL_GOBACK_FAIL
			}
			break;


			default:
			CO_ProcMonitor(g_logfile, "No case found", NULL, NULL);
			APL_GOBACK_FAIL
    }//AIX Warnings Removal
	APL_GOBACK_SUCCESS

		RETURN_SUCCESS:
		{
			CO_ProcMonitor(g_logfile,"Success inside GenReportFN",NULL,NULL);
			return(APL_SUCCESS);
		}


	RETURN_FAILURE    :
	{
		CO_ProcMonitor(g_logfile,"Failed inside GenReportFN",l_debug_info_ptr,NULL);
		return(APL_FAILURE);
	}
/*}Commented for AIX Migration*/
}
