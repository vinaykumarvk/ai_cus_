













 
#include "IV_Control_A.h"
#include "CR_Common.h"

EXEC SQL INCLUDE SQLCA.H;





int main (int argc,char **argv) //AIX - Warnings Removal
{
	

	struct					sqlca sqlca;

	DEBUG_INFO_STRUCT_H			*l_debug_info_struct 				= NULL;
	DEBUG_INFO_STRUCT_H			**l_debug_info_ptr					= NULL;
	INTL_ENV_DATA_STRUCT_H	*p_intlenv_data_struct_h 			= (INTL_ENV_DATA_STRUCT_H *) NULL;
	int 						int_retval							= 0;
	int 						i									= 0;
	FILE   					*fl_techlog 					= (FILE *) NULL;
	FILE						*fl_userlog 					= (FILE *) NULL;
	FILE						*chr_finifile 						= (FILE *) NULL;
	char						chr_inifile[PATH_LENGTH]	 		= APL_NULL_STRING;
	char						chr_l_sys_date[APL_DATE_LEN]	= APL_NULL_STRING;
	char						chr_l_techlog[PATH_LENGTH]		= APL_NULL_STRING;
	char						chr_l_userlog[PATH_LENGTH]	   = APL_NULL_STRING;
	char  					chr_logfile[PATH_LENGTH]			= APL_NULL_STRING;
	char						chr_custody_id_b[APL_USERID_LEN]		= APL_NULL_STRING;
	char						chr_uname[APL_USERID_LEN];
	char						chr_passwd[APL_PASSWD_LEN];
	char						chr_rep_st[3]						= APL_NULL_STRING;
	char						chr_rep_st1[3]						= APL_NULL_STRING;
	char						chr_comstr[50]						= APL_NULL_STRING;
	int						int_num								= 0;
	char						**temp;

	char     				h_batch_dt[APL_DATE_LEN] = APL_NULL_STRING;
   char     				chr_h_passflg[2]               = APL_NULL_STRING;
   char     				chr_h_modident[2]              = APL_NULL_STRING;
   char    					h_proc_num[6]              = APL_NULL_STRING;
	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR chr_uname IS STRING;
	EXEC SQL VAR chr_passwd IS STRING;

	EXEC SQL END DECLARE SECTION;


	

	p_intlenv_data_struct_h   =  (INTL_ENV_DATA_STRUCT_H*)calloc(1,sizeof(INTL_ENV_DATA_STRUCT_H));
   APL_MALLOC_FAIL(p_intlenv_data_struct_h);

	l_debug_info_ptr	= &l_debug_info_struct; 

	

	strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_inifile,"/intl_sun.cfg");

	if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL )
		exit(-1);

	APL_FETCH_DB_LOGIN_DETAILS(chr_finifile, chr_custody_id_b, chr_uname, chr_passwd , APL_OUT_FILE , l_debug_info_ptr)
	EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;
	IS_ANY_ORA_ERROR	

	
	
	strcpy(chr_comstr, argv[9]);
	
	if (APL_FAILURE == CO_SplitStr( chr_comstr, 
                                    ',',
                                    &int_num,
                                    &temp) )
   {
      exit(-1);
   }

   if (int_num ==0 )
   {
      APL_GOBACK_FAIL
   }

   strcpy(chr_h_passflg,temp[0]);
   strcpy(chr_h_modident,temp[1]);
   strcpy(h_proc_num,temp[2]);
   strcpy(h_batch_dt,temp[3]);


	if (!strcmp(chr_h_modident, "P") )
	{
		strcpy(chr_rep_st,"1G" );
	}
	if (!strcmp(chr_h_modident, "B") )
	{
		strcpy(chr_rep_st,"1H");
	}
	if (!strcmp(chr_h_modident, "C") )
	{
		strcpy(chr_rep_st,"3A");
	}
	if (!strcmp(chr_h_modident, "T") )
	{
		strcpy(chr_rep_st,"3d");
	}
	if (!strcmp(chr_h_modident, "A") )
	{
		strcpy(chr_rep_st, "2A");
	}	


	if (!strcmp(chr_h_modident, "P") )
	{
		strcpy(chr_rep_st1,"1g" );
	}
	if (!strcmp(chr_h_modident, "B") )
	{
		strcpy(chr_rep_st1,"1h");
	}
	if (!strcmp(chr_h_modident, "C") )
	{
		strcpy(chr_rep_st1,"3a");
	}
	if (!strcmp(chr_h_modident, "T") )
	{
		strcpy(chr_rep_st1,"3e");
	}
	if (!strcmp(chr_h_modident, "A") )
	{
		strcpy(chr_rep_st1, "2a");
	}	


	if (APL_FAILURE == CO_Rtv_RptFileName( chr_rep_st,
                                       APL_LOGFILE_DESC,
                                       100,
                                       argv[5], 
                                       argv,
                                       &fl_userlog,
                                       l_debug_info_ptr) )
   {
     exit(-1); 
   }

   if (APL_FAILURE == CO_Rtv_RptFileName( chr_rep_st1,
                                       APL_LOGFILE_DESC,
                                       100,
                                      	argv[5], 
                                       argv,
                                       &fl_techlog,
                                       l_debug_info_ptr) )
   {
     exit(-1); 
   }
   EXEC SQL COMMIT ;
   IS_ANY_ORA_ERROR	


	

	strcpy(p_intlenv_data_struct_h->usr, argv[3]);
	strcpy(p_intlenv_data_struct_h->h_mode,	argv[4]); 	

	
	if (APL_FAILURE == CO_RtvSysParams(l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Failed To Get System Parameters\n");
		APL_GOBACK_FAIL
	}


	fprintf(fl_userlog,"Calling The Payment Passing Accounting Entries processtion\n");

	if (	APL_FAILURE == IV_Proc_PassPayAccEnt( argv,
														fl_techlog,
														fl_userlog,
														p_intlenv_data_struct_h,
														l_debug_info_ptr)
		)

	{
			fprintf(fl_userlog,"The Payment Passing Accounting Entries returned  failure \n");
			CO_ProcMonitor(fl_techlog,
						"Errors In Passing Pymnt Acc Ent",
						l_debug_info_ptr,
						p_intlenv_data_struct_h);
			CO_FreeErrLst(l_debug_info_ptr);
			EXEC SQL ROLLBACK WORK RELEASE;
			IS_ANY_ORA_ERROR
			APL_GOBACK_FAIL
	}
	else
	{
			EXEC SQL COMMIT WORK RELEASE;
			IS_ANY_ORA_ERROR
			fprintf(fl_userlog,"The Payment Passing Accounting Entries returned success\n");
			APL_GOBACK_SUCCESS
	}
			
		
	APL_GOBACK_SUCCESS

	

	RETURN_SUCCESS:
	CO_Proc_RptClose(fl_techlog,l_debug_info_ptr);
   CO_Proc_RptClose(fl_userlog,l_debug_info_ptr);
	exit(0); 

	RETURN_FAILURE:
	CO_Proc_RptClose(fl_techlog,l_debug_info_ptr);
   CO_Proc_RptClose(fl_userlog,l_debug_info_ptr);
	exit(1); 
}
