













 
#include "CO_HostStructdef.h"
#include "SMI_Common.h"

EXEC SQL INCLUDE sqlca.h;

#define DEALCD_LEN 			2
#define LOC_CD_LEN_B 		5
#define SEC_CD_LEN_A 			9
#define POS_STAT_LEN 	4
#define DL_SMI_CUSTREQDDELFLG     2
#define DEAL_DATE_LEN_A					20
#define  TYPEOF_DEAL_LEN_B       	3
#define  LOC_CHNG_IND_LEN    	2

int EI_Chk_SMICanModStat(char     						*chr_p_client,
						 	char								*chr_p_refno,
						 	char								*p_clt_rej_flag,
						 	char								*p_amd_can_flag,
						 	INTL_ENV_DATA_STRUCT_H     		*p_intlenv_data_struct_h,
                   	DEBUG_INFO_STRUCT_H         		**l_debug_info_ptr )
{
	struct sqlca sqlca ;
	char chr_l_h_newtrcode[DEALCD_LEN]				=	APL_NULL_STRING;
	char chr_l_h_oldtrcode[DEALCD_LEN]				=	APL_NULL_STRING;
	double l_h_newquantity											= 	0.0 ;
	double l_h_oldquantity											= 	0.0 ;
	char chr_l_h_newlocncode[LOC_CD_LEN_B]			=	APL_NULL_STRING;
	char chr_l_h_oldlocncode[LOC_CD_LEN_B]			=	APL_NULL_STRING;
	char chr_l_h_newinstrcode[SEC_CD_LEN_A]				=  APL_NULL_STRING;
	char chr_l_h_oldinstrcode[SEC_CD_LEN_A]				=  APL_NULL_STRING;
	char chr_l_h_newposn_status[POS_STAT_LEN]	=	APL_NULL_STRING;
	char chr_l_h_oldposn_status[POS_STAT_LEN]	=	APL_NULL_STRING;
	
	char  int_l_h_failcode[3]		= APL_NULL_STRING;
	short l_i_failcode 			= 0;
	int   int_l_h_subfailcode 		= 0;
	short l_i_subfailcode 		= 0;
	char  chr_l_h_trdfromord[2]		= APL_NULL_STRING;
	short l_i_trdfromord 		= 0;
   char  chr_l_h_custreqddelflg[DL_SMI_CUSTREQDDELFLG] = APL_NULL_STRING;
	char  chr_l_h_msg_status[51]         =  APL_NULL_STRING;
		short l_i_msg_status			= 0;
		short l_i_custreqddelflg   = 0;

   char  chr_l_h_trdt_a[DEAL_DATE_LEN_A]                     = APL_NULL_STRING;
   char  chr_l_h_typeoftrd[TYPEOF_DEAL_LEN_B]           = APL_NULL_STRING;
   char  chr_l_h_locnchng_flg[LOC_CHNG_IND_LEN]     = APL_NULL_STRING;

   short l_i_trdt             = 0;
   short l_i_typeoftrd        = 0;
   short l_i_locnchng_flg     = 0;
   int   int_p_smieligibility_flg = 0;
	char h_ora_rowid[APL_ROWID_LEN];
	short i_ora_rowid =	0;
	char l_block_type[5]	=	APL_NULL_STRING;

	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_ha = NULL;
	

	EXEC SQL VAR chr_l_h_newtrcode 			IS STRING ;
	EXEC SQL VAR chr_l_h_oldtrcode 			IS STRING ;
	EXEC SQL VAR chr_l_h_newlocncode 			IS STRING ;
	EXEC SQL VAR chr_l_h_oldlocncode 			IS STRING ;
	EXEC SQL VAR chr_l_h_newinstrcode 			IS STRING ;
	EXEC SQL VAR chr_l_h_oldinstrcode 			IS STRING ;
	EXEC SQL VAR chr_l_h_newposn_status 		IS STRING ;
	EXEC SQL VAR chr_l_h_oldposn_status 		IS STRING ;
	EXEC SQL VAR chr_l_h_custreqddelflg     IS STRING ;
   EXEC SQL VAR chr_l_h_trdt_a               IS STRING ;
   EXEC SQL VAR chr_l_h_typeoftrd          IS STRING ;
   EXEC SQL VAR chr_l_h_locnchng_flg       IS STRING ;


	
	EXEC SQL VAR int_l_h_failcode IS STRING;
	EXEC SQL VAR chr_l_h_trdfromord IS STRING;
	

	short l_i_newtrcode = 0 ;
	short l_i_oldtrcode = 0 ;
	short l_i_newlocncode = 0 ;
	short l_i_oldlocncode = 0 ;
	short l_i_newinstr_code = 0 ;
	short l_i_oldinstr_code = 0 ; 
	short l_i_newposn_status = 0 ;
	short l_i_oldposn_status = 0 ; 
	short l_i_newqty = 0 ;
	short l_i_oldqty = 0 ;

	#ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif
	
	memset(chr_l_h_newtrcode,		APL_NULL_CHAR,	DEALCD_LEN);
	memset(chr_l_h_oldtrcode,		APL_NULL_CHAR,	DEALCD_LEN);
	memset(chr_l_h_newlocncode,		APL_NULL_CHAR,	LOC_CD_LEN_B);
	memset(chr_l_h_oldlocncode,		APL_NULL_CHAR,	LOC_CD_LEN_B);
	memset(chr_l_h_newinstrcode,		APL_NULL_CHAR,	SEC_CD_LEN_A);
	memset(chr_l_h_oldinstrcode,		APL_NULL_CHAR,	SEC_CD_LEN_A);
	memset(chr_l_h_newposn_status,	APL_NULL_CHAR,	POS_STAT_LEN);
	memset(chr_l_h_oldposn_status,	APL_NULL_CHAR,	POS_STAT_LEN);
   memset(chr_l_h_custreqddelflg, APL_NULL_CHAR, DL_SMI_CUSTREQDDELFLG);


   memset(chr_l_h_trdt_a,           APL_NULL_CHAR, DEAL_DATE_LEN_A);
   memset(chr_l_h_typeoftrd,      APL_NULL_CHAR, TYPEOF_DEAL_LEN_B);
   memset(chr_l_h_locnchng_flg,   APL_NULL_CHAR, LOC_CHNG_IND_LEN);
	memset(h_ora_rowid, APL_NULL_CHAR, APL_ROWID_LEN);

	
	l_dl_dealaudit_struct_ha = (DL_DEALAUDIT_STRUCT_H*)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_dealaudit_struct_ha);
	

	
	
	EXEC SQL SELECT DEAL_CD,QTY,LOCATION_CD,INSTR_CODE,STATUS_POS,
	FAILREASON_CD, DEAL_FRM_ORD, SUB_FAIL_CD,CLT_REQDEL_IND , DEAL_DATE , DL_CLASS , LOC_CHNG_IND, ROWID  INTO 
	:chr_l_h_newtrcode:l_i_newtrcode,:l_h_newquantity:l_i_newqty,:chr_l_h_newlocncode:l_i_newlocncode,
	:chr_l_h_newinstrcode:l_i_newinstr_code ,:chr_l_h_oldposn_status:l_i_oldposn_status, 
	:int_l_h_failcode:l_i_failcode,:chr_l_h_trdfromord:l_i_trdfromord,:int_l_h_subfailcode:l_i_subfailcode,
	:chr_l_h_custreqddelflg:l_i_custreqddelflg , :chr_l_h_trdt_a:l_i_trdt , :chr_l_h_typeoftrd:l_i_typeoftrd ,
	:chr_l_h_locnchng_flg:l_i_locnchng_flg,
	:h_ora_rowid:i_ora_rowid
	FROM DL_DEAL WHERE client = :chr_p_client and IDENTIY_NO = :chr_p_refno ;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
														chr_p_client,
														chr_p_refno,
														APL_NULL_STRING);
  
	if (strcmp(p_amd_can_flag,"A") == 0)
	{

	EXEC SQL SELECT DEAL_CD,QTY,LOCATION_CD,INSTR_CODE,STATUS_POS INTO 
	:chr_l_h_oldtrcode:l_i_oldtrcode,:l_h_oldquantity:l_i_oldqty,:chr_l_h_oldlocncode:l_i_oldlocncode
	,:chr_l_h_oldinstrcode:l_i_oldinstr_code,:chr_l_h_oldposn_status:l_i_oldposn_status FROM
	DL_SMI_TMP_TRADE WHERE client = :chr_p_client and IDENTIY_NO = :chr_p_refno ;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
														chr_p_client,
														chr_p_refno,
														APL_NULL_STRING);
   }

	
	strcpy(l_dl_dealaudit_struct_ha->h_dl_client, chr_p_client);
	strcpy(l_dl_dealaudit_struct_ha->h_indentity_no, chr_p_refno);
	strcpy(l_dl_dealaudit_struct_ha->h_trail_for, "T");
	strcpy(l_dl_dealaudit_struct_ha->h_processdetail, p_intlenv_data_struct_h->processtion);
	strcpy(l_dl_dealaudit_struct_ha->h_proc_usr, p_intlenv_data_struct_h->usr);
	strcpy(l_dl_dealaudit_struct_ha->h_logdate, APL_NULL_STRING);
	strcpy(l_dl_dealaudit_struct_ha->h_fail_cd, int_l_h_failcode);
	if(l_i_subfailcode != -1)
		l_dl_dealaudit_struct_ha->h_subfailreas_cd = int_l_h_subfailcode;
	l_dl_dealaudit_struct_ha->h_qty = l_h_newquantity;
	strcpy(l_dl_dealaudit_struct_ha->h_dlfromord, chr_l_h_trdfromord);
	strcpy(l_dl_dealaudit_struct_ha->h_subprocess, p_intlenv_data_struct_h->subprocess);

	

   if( (strcmp(p_clt_rej_flag,"A") != 0 ) && ( strcmp(p_clt_rej_flag,"R") !=0 ))
   {
      CO_ProcMonitor(   APL_OUT_FILE,
                  "Incorrect Parameter Passed For p_clt_rej_flag\n",
                   NULL,
                   NULL);
      APL_GOBACK_FAIL
   }

   if( (strcmp(p_amd_can_flag,"A") != 0 ) && ( strcmp(p_amd_can_flag,"C") !=0 ))
   {
      CO_ProcMonitor(   APL_OUT_FILE,
                  "Incorrect Parameter Passed For p_amd_can_flag\n",
                   NULL,
                   NULL);
      APL_GOBACK_FAIL
   }

	if (EI_Chk_SMIElg(chr_l_h_newlocncode,
                               chr_l_h_trdt_a,
                               chr_l_h_typeoftrd,
                               chr_l_h_newinstrcode,
                               chr_l_h_locnchng_flg,
										 h_ora_rowid,
                               &int_p_smieligibility_flg,
                               p_intlenv_data_struct_h,
                               l_debug_info_ptr
                              ) == APL_FAILURE)
	{
       CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intlenv_data_struct_h);
       APL_GOBACK_FAIL;
   }

	if(!int_p_smieligibility_flg)       
	{
         CO_InsertErr(   l_debug_info_ptr,
                           ERR_DEAL_NF,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__ );
         APL_GOBACK_FAIL
   }

	if(CA_Rtv_Block_Type(  chr_p_refno,
				chr_l_h_typeoftrd,
				chr_l_h_newtrcode,
				l_block_type,
				l_debug_info_ptr) == APL_FAILURE)
	{
			APL_GOBACK_FAIL
	}


	if (strcmp(p_clt_rej_flag,"A") == 0)
	{
		if (strcmp(p_amd_can_flag,"A") == 0)
		{
			EXEC SQL UPDATE DL_DEAL
			SET		DEAL_STAT 	= 'AA'
			WHERE 	client  		= :chr_p_client
			AND	 	IDENTIY_NO 			= :chr_p_refno
			AND      DEAL_STAT   = 'SA';

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);

			EXEC SQL DELETE DL_SMI_TMP_TRADE
			WHERE 	client  		= :chr_p_client
			AND	 	IDENTIY_NO 			= :chr_p_refno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);

			
	
         if (  DL_Mod_CCSPendDL(chr_p_client,
                              chr_p_refno,
                              MS_CCS_T4,
                              APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                              l_debug_info_ptr) == APL_FAILURE  )
         {
             CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intlenv_data_struct_h);
             APL_GOBACK_FAIL;
         }
			
			
			
			if(APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_ha, l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
		}
		else if (strcmp(p_amd_can_flag,"C") == 0)
		{
		

       if( !strcmp(chr_l_h_custreqddelflg,"Y") )
       {
         if (APL_FAILURE == GBDbInsIMSGENT("596P",
                                            chr_p_refno,
                                            chr_p_client,
                                            'Y',
                                            APL_NULL_STRING,
                                            l_debug_info_ptr) )
         {
               CO_ProcMonitor(APL_OUT_FILE, "Failed To Insert into IMSGENT table\n",NULL,NULL);
               APL_GOBACK_FAIL
         }

         CO_ProcMonitor(APL_OUT_FILE, "Sending a 596P Message\n",NULL,NULL);
       }

			EXEC SQL UPDATE DL_DEAL 
			SET 		DEAL_STAT 	= 'DD'
			WHERE 	client  		= :chr_p_client
			AND	 	IDENTIY_NO 			= :chr_p_refno
			AND      DEAL_STAT   = 'DA';

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);

			
			EXEC SQL SELECT MSG_STAT INTO :chr_l_h_msg_status:l_i_msg_status
				FROM DL_DEAL WHERE client        = :chr_p_client
         					AND   IDENTIY_NO          = :chr_p_refno;
			IS_ANY_ORA_ERROR
				
			if ((g_mt_commonsys_params_struct_h.ccs_ind[0] != 'Y') && (strstr(chr_l_h_msg_status,"O")>0))
			{
	
         	if (  DL_Mod_CCSPendDL(chr_p_client,
                              chr_p_refno,
                              MS_CCS_XD,
                              APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                              l_debug_info_ptr) == APL_FAILURE  )
         	{
             	CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intlenv_data_struct_h);
             	APL_GOBACK_FAIL;
         	}
			}
			else
	
			{
         	if (  DL_Mod_CCSPendDL(chr_p_client,
                              chr_p_refno,
                              MS_CCS_CN,
                              APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                              l_debug_info_ptr) == APL_FAILURE  )
         	{
             	CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intlenv_data_struct_h);
             	APL_GOBACK_FAIL;
				}
			}
			
			if(APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_ha, l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
			

        if (APL_FAILURE == CR_Proc_MvToHisTrd ( chr_p_client,
                                            chr_p_refno,
                                            l_debug_info_ptr ))
           {
             APL_GOBACK_FAIL
           }                                          
		}
	}
	else if (strcmp(p_clt_rej_flag,"R") == 0)
	{
		if (strcmp(p_amd_can_flag,"A") == 0)
		{
		

		 if ( APL_FAILURE == DL_Mod_Posn(  chr_p_client,
														 chr_l_h_oldinstrcode,
														 chr_l_h_oldlocncode,
														 chr_l_h_oldposn_status,
														 'U',
														 chr_l_h_oldtrcode[0],
														 &l_h_oldquantity,
														 'I',l_block_type,
														 l_debug_info_ptr ) )
		 {
			APL_GOBACK_FAIL
		 }	


		 if ( APL_FAILURE == DL_Mod_Posn(  chr_p_client,
														 chr_l_h_newinstrcode,
														 chr_l_h_newlocncode,
														 chr_l_h_newposn_status,
														 'U',
														 chr_l_h_newtrcode[0],
														 &l_h_newquantity,
														 'D',l_block_type,
														 l_debug_info_ptr ) )
		 {
			APL_GOBACK_FAIL
		 }	


			EXEC SQL DELETE FROM DL_DEAL
			WHERE 	client  		= :chr_p_client
			AND	 	IDENTIY_NO 			= :chr_p_refno
			AND      DEAL_STAT   = 'SA';

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);

			EXEC SQL INSERT INTO DL_DEAL
				(SELECT 	*
				FROM 		DL_SMI_TMP_TRADE
				WHERE		client        = :chr_p_client
				AND      IDENTIY_NO         	= :chr_p_refno);	

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);
			EXEC SQL UPDATE DL_DEAL
			SET		DEAL_STAT = 'AA'
			WHERE 	client  		= :chr_p_client
			AND	 	IDENTIY_NO 			= :chr_p_refno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);
			EXEC SQL DELETE DL_SMI_TMP_TRADE
			WHERE 	client  		= :chr_p_client
			AND	 	IDENTIY_NO 			= :chr_p_refno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);
		}
		else if (strcmp(p_amd_can_flag,"C") == 0)
		{

			EXEC SQL UPDATE DL_DEAL
			SET		DEAL_STAT 	= 'AA'
			WHERE 	client  		= :chr_p_client
			AND	 	IDENTIY_NO 			= :chr_p_refno
			AND      DEAL_STAT   = 'DA';

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																chr_p_client,
																chr_p_refno,
																APL_NULL_STRING);
       if ( APL_FAILURE == DL_Mod_Posn(  chr_p_client,
                                           chr_l_h_newinstrcode,
                                           chr_l_h_newlocncode,
                                           chr_l_h_newposn_status,
                                           'U',
                                           chr_l_h_newtrcode[0],
                                           &l_h_newquantity,
                                           'I',l_block_type,
                                           l_debug_info_ptr ) )
       {
         APL_GOBACK_FAIL
       }

		}
			
			if(APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_ha, l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
			
	}

	APL_GOBACK_SUCCESS;

   RETURN_SUCCESS :
      CO_ProcMonitor(   APL_OUT_FILE,
                  "Exiting EI_Chk_SMICanModStat with success\n",
                   NULL,
                   NULL);
      return(APL_SUCCESS);

   RETURN_FAILURE :
      CO_ProcMonitor(   APL_OUT_FILE,
                  "Exiting EI_Chk_SMICanModStat with errors\n",
                   NULL,
                   NULL);
      if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
      {
           CO_ProcMonitor(APL_OUT_FILE, "Got Errors :", l_debug_info_ptr, p_intlenv_data_struct_h);
      }

      return(APL_FAILURE);
}
