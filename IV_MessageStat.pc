













 
#include "stdio_64.h"
#include "MS_Swift.h"
#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;

int MS_Mod_MsgStat(MS_MSGSTAT_STRUCT p_ms_msgstat_struct,int *int_p_retstat,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

EXEC SQL BEGIN DECLARE SECTION;
MS_MSGSTAT_STRUCT l_ms_msgstat_struct;
EXEC SQL VAR l_ms_msgstat_struct.client IS STRING;
EXEC SQL VAR l_ms_msgstat_struct.proc_init IS STRING;
EXEC SQL VAR l_ms_msgstat_struct.swift_msg_rep IS STRING;
EXEC SQL VAR l_ms_msgstat_struct.generate_dt IS STRING;
EXEC SQL END DECLARE SECTION;
struct sqlca sqlca;

#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif
l_ms_msgstat_struct = p_ms_msgstat_struct;

printf("\n Before inserting into ms_msgstat values are \n");
printf("\nproc_init=|%s|",l_ms_msgstat_struct.proc_init);
printf("\nswift_msg_rep=|%s|",l_ms_msgstat_struct.swift_msg_rep);
printf("\nclient=|%s|",l_ms_msgstat_struct.client);
printf("\ngenerate_dt=|%s|",l_ms_msgstat_struct.generate_dt);

	EXEC SQL INSERT INTO MS_MSGSTAT  VALUES(:l_ms_msgstat_struct);

printf("\nsqlca.sqlcode after insert is =|%d|",sqlca.sqlcode);

        if(sqlca.sqlcode < 0)
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

        IS_ANY_ORA_ERROR;

        APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of InsIMSGSTAT\n",NULL,NULL);

        }
        return APL_SUCCESS;

RETURN_FAILURE:
        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of InsIMSGSTAT\n",NULL,NULL);
        }
        return APL_FAILURE;



}
