

 

#include "CR_Common.h"
#include "Intellect_Interface.h"
#include "Intellect_Common.h"
#include "CO_HostStructdef.h"
#include "CO_Commdef.h"  
#include "MS_Swift.h"
#include "DL_Interface.h" 
#include "IV_Control_A.h"
#include "SMP_InterFace.h"

#include <dirent.h>
#include <unistd.h>

EXEC SQL INCLUDE SQLCA;

#define  SEME_QUALIFIER       ":SEME"
#define  SETT_QUALIFIER       ":SETT"
#define  MSG_QUAL_ESTT       ":ESTT"
#define  SAFE_QUALIFIER			":SAFE"
#define  MS_CASH_QUAL			":CASH"
#define  REAG_QUALIFIER			":REAG"
#define  MSG_DEAG_QUAL			":DEAG"
#define	TRAD_MESSAGE_QUALIFIER			":TRAD"
#define  SELL_QUALIFIER       ":SELL"
#define  MSG_BUYR_QUAL       ":BUYR" 
#define  MSG_DEL1_QUAL			":DEI1"
#define  REI1_QUALIFIER			":REI1"
#define  MS_CODE_SHSBON				"//UNIT/"
#define	MS_CODE_FMT					"//FAMT/"
#define	MS_CODE_AMOR				"//AMOR/"
#define	NEWM_QUALIFIER			"NEWM"
#define  NEWM1_QUALIFIER       "NEWM/"
#define  MS_CANCEL_QUAL_1       "CANC/"
#define  PREA1_QUALIFIER       "PREA/"
#define	MS_CANCEL_QUAL			"CANC"
#define  PREA_QUALIFIER			"PREA"
#define  SETR_QUALIFIER			":SETR" 	
#define  FXCX_QUALIFIER			":FXCX"  
#define  I_IND_TRD_98			"TRAD"
#define  I_IND_REAL				"REAL"
#define  I_IND_CEDE				"CEDE"
#define  I_IND_ECLR				"ECLR"
#define	I_IND_TURN_98			"TURN"
#define 	I_IND_OWNI_98			"OWNI"	
#define  I_IND_OWNERR_98        "OWNE" 
#define  I_IND_RPTO_98        "RPTO"
#define  I_IND_SECL           "SECL"
#define  I_IND_SECB           "SECB" 
#define  I_BICCODE  	   		"95P"
#define  I_MESS_IDEN				"23G"
#define  I_REF_NO_98          "20C"
#define  I_CLIENTA_98	      "97A"
#define  I_CLIENTB_98	      "97B"
#define  I_INSTRU_DET_98		   "35B"
#define  I_QTY_98	            "36B"
#define  I_INSTRU_DEAL_DTA_98     "98A"
#define  I_INSTRU_DEAL_DTC_98		"98C"
#define  I_INSTRU_DEAL_DTB_98     "98B"
#define  I_AMOUNT_CCY_98 		"19A"
#define  I_DOMCPACCP_98       "95P"
#define 	I_DOMCPACCR_98			"95R"
#define 	I_DOMCPACCQ_98			"95Q"
#define 	I_DOMCPACCS_98			"95S"	
#define 	I_INDICATOR_98			"22F"
#define	I_PLACERR_CODERR_98		"94B" 
#define I_SAFERR_CODERR_98		"94F"  
#define I_CNTRY_CODERR_98       "94C" 
#define  I_NUMBER_IDENT_98		"13A"
#define I_PREV_QUALIFIER_98	":PREV"
#define I_RELA_QUALIFIER_98   ":RELA"
#define MSG_QUAL_GENL			"GENL"
#define LINK_QUALIFIER			"LINK"
#define TRADDET_MESSAGE_QUALIFIER		"TRADD"
#define MSG_QUAL_FIA			"FIA"
#define REPO_QUALIFIER			"REPO"
#define SETDET_QUALIFIER		"SETDE"
#define SETPRTY_QUALIFIER		"SETPR"
#define MS_CASH_PARTY_QUAL		"CSHPR"
#define MSG_AMT_TAG			"AMOUNT"
#define OTHPRTY_QUALIFIER		"OTHPR"
#define  MSG_QUAL_FIAC       "FIAC"
#define  MSG_BEGIN_TAG            "16R"
#define  END_TAG              "16S"
#define	MS_CODE_EXCH				"EXCHG" 
#define	OTCO_CODE				"OTCO"
#define	MS_CODE_PRIM				"PRIM"
#define	MS_CODE_SECM				"SECM"
#define  PSET_QUALIFIER			":PSET"
#define 	I_DOMCPACCC_98			"95C"
#define  TRCA_MESSAGE_QUALIFIER			":TRCA"
#define	I_IND_SPRI_98			"SPRI"
#define I_POOL_QUALIFIER_98   ":POOL"
#define I_TRRF_QUALIFIER_98   ":TRRF"
#define I_COMM_QUALIFIER_98   ":COMM"

#define LINK_TYP_IND_98   		":LINK"
#define SETTLEMENT 				6
 	
#define  NARR_TAG					"70E"
#define  NARR_SETPRTY			"70"
#define  STCO_QUALIFIER       ":STCO"
#define  I_CCYCODERR_98         "11A"
#define  FXIB_QUALIFIER       ":FXIB"
#define  FXIS_QUALIFIER       ":FXIS"
#define  REGT_QUALIFIER       ":REGT"
#define  MSG_BENE_QUAL       ":BENE"
#define	LOCO_QUALIFIER			":LOCO"
#define	OCMT_QUALIFIER			":OCMT"
#define  RECU_QUALIFIER       ":RECU"
#define  MSG_DECU_QUAL       ":DECU"
#define  SPRO_QUALIFIER       ":SPRO"
#define  FXIN_QUALIFIER       ":FXIN"
#define  NOFX_QUALIFIER			"NOFX"
#define  I_NPAR_98         	"NPAR"
#define  I_PART_98            "PART"
#define  DUPL_CODE            "DUPL"
#define  COPY_CODE            "COPY"
#define  CODU_CODE            "CODU"
#define	MORE_THAN_ONE_ROW			-2112
#define  TOSE_MESSAGE_QUALIFIER       ":TOSE" 	
#define  NUMBER_COUNT			"99B"  	
#define  MSG_BEFO_QUAL				"BEFO"	
#define	MSG_AFTE_TAG				"AFTE"	

#define MSG_DEAG_SAFE_QUAL     "DGSFE"
#define MSG_BUYSELL_QUAL   "BSSFE"
#define SELLBU_SAFE_QUALIFIER   "SESFE"
#define MSG_DECU_SAFE_QUAL     "DCSFE"
#define INSTRCT_QUALIFIER       "INSTR"
#define DRI_SAFE_QUAL    "DEREI"
#define I_BICCODERR_REMOTE       "XATHGRA1"  

#define  PSTA_QUALIFIER       ":PSTA"
#define  I_IND_REDE           ":REDE"
#define  I_IND_PAYM           ":PAYM"
#define  I_INDICATORH_98      "22H"
#define  TRAN_MESSAGE_QUALIFIER       "TRAN"




#define  I_IND_STAT      "25D"
#define  I_IND_REAS      "24B"
#define  I_IND_REASNOTE  "70D"
#define  I_CODERR_REAS     ":REAS"
#define  I_CODERR_SETTRAN  "SETTRAN"
#define  I_CODERR_STAT     "STAT"


#define  ON_EXCHANGE_DEAL		"51"

extern char chr_g_isin[]; 
extern char chr_g_isin1[]; 
extern char chr_g_seme_prev[];
extern char chr_g_secb_flg[]; 
extern char chr_g_trad_val[]; 
extern char chr_g_safe_val[]; 
extern char chr_g_setr_val[]; 
extern char chr_g_msg_sts[];

extern char chr_g_rej_reas[];

extern char chr_g_new_msg_no[];
extern char chr_g_addinfo[];
extern int  int_g_seq_num ;
extern char  chr_g_str_client[] ;        
extern char chr_g_msg_no[]; 
extern char chr_g_settle_dt[]; 
extern char chr_g_sfe_refno[];
extern char chr_g_unique_ref_num[];
extern int  int_l_count_rep_flg ;
extern char chr_l_tmplogfilename5[]  ;
extern char chr_l_tmplogfilename2[] ;
extern char chr_l_tmplogfilename3[] ;
extern char chr_l_tmplogfilename4[] ;
extern char chr_g_stco_array[3][5];  

#ifdef EMU_PROCESSING
 extern int int_g_emutransperiod;
#endif

int int_amt_qualifiers_supported = 3;



int int_stco_qualifiers_supported = 3;

	


int   MS_Proc_IncMsg54xParse (FILE 					 *fl_incmsg,
							char               *p_msg_no,
							MS_54X_STRUCT_H       *p_ms_54x_struct_h,
							MS_REP_STRUCT_H   **p_ms_rep_struct_h,  
							MS_INC_LINKINFO_STRUCT_H	 **p_ms_inc_linkinfo_struct_h,	
							double             *p_tot_qty,
							FILE               *fl_userlog,
							FILE               *p_fl_userlog,
							int                *int_p_retstat,
							MS_GEN_STRUCT_H		 *p_ms_gen_struct_h,	
							INTL_ENV_DATA_STRUCT_H *p_intlenv_data_struct_h,
							DEBUG_INFO_STRUCT_H       **l_debug_info_ptr)									 
{
		extern int MT_Chk_CashAcc(const char *p_client,const char *p_cashclient,const char *p_ccycode_a,int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

		char  			chr_mainfuncarea[APL_MAINFUNCAREA_LEN]	= APL_NULL_STRING;	
		char  			chr_l_condident[APL_CONDID_LEN]         	= APL_NULL_STRING;
		char  			chr_l_substr_client[APL_CLIENT_LENGTH]  		= APL_NULL_STRING;
		char  			chr_l_new_client[APL_CLIENT_LENGTH]   		= APL_NULL_STRING;
		char  			*b													= NULL;
		short 			int_l_exist_a                          		= 0;
      char  			chr_l_str[ISO_FILERR_LINERR_LENGTH]        					= APL_NULL_STRING;
      char  			chr_l_str1[ISO_FILERR_LINERR_LENGTH]        				= APL_NULL_STRING;
      char  			chr_l_str2[ISO_FILERR_LINERR_LENGTH]        				= APL_NULL_STRING;
      char 	 			chr_l_str3[ISO_FILERR_LINERR_LENGTH]        				= APL_NULL_STRING;
      char  			chr_l_str4[ISO_FILERR_LINERR_LENGTH]        				= APL_NULL_STRING;
		char				chr_l_typeofinstr[4]									= APL_NULL_STRING;
		char				chr_l_typeofinstr[TYPEOF_INSTR_LEN]					= APL_NULL_STRING;
		double			l_nominal_value											= 0.0; 
		double			l_finquantity											= 0.0;
		char  			chr_h_value[ISO_LINERR_LENGTH]         				= APL_NULL_STRING;
		char  			chr_h_qualifier[ISO_LINERR_LENGTH]					= APL_NULL_STRING; 
      char  			h_code[ISO_LINERR_LENGTH]							= APL_NULL_STRING;	
      char  			h_msg_tag[4]                   				= APL_NULL_STRING;
      char  			chr_h_rej_str[20]              				= APL_NULL_STRING;
      char  			chr_l_53x_cor_msg[2]           				= APL_NULL_STRING;
      char  			chr_h_type_of_msg[2]           				= APL_NULL_STRING;
      char  			chr_h_instr_txn_qty[26]          				= APL_NULL_STRING;
      char  			h_setl_dt[APL_DATE_LEN]              = APL_NULL_STRING;
      char  			chr_h_temp_settle_dt[9]        				= APL_NULL_STRING;
		char  			chr_h_temp_trade_dt[9]							= APL_NULL_STRING;		
      char  			h_instr_code[33]             				= APL_NULL_STRING;
		char				chr_l_tr_dt[7]										= APL_NULL_STRING;
		char				chr_h_tr_dt[APL_DATE_LEN]						= APL_NULL_STRING;
		char				chr_l_instr_name[ISO_LINERR_LENGTH]						= APL_NULL_STRING;
		char				chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]					= APL_NULL_STRING;
		char				h_instr_code[APL_INSTRUMENTCODE_LEN]					= APL_NULL_STRING;
		char				chr_l_isin[13]										= APL_NULL_STRING;
		char				chr_l_inst_client[APL_CLIENT_LENGTH]			= APL_NULL_STRING;
		char				chr_l_inst_cname[66]								= APL_NULL_STRING;
		char				chr_l_client_a[APL_CLIENT_LENGTH]					= APL_NULL_STRING;
		char				chr_l_cname[66]										= APL_NULL_STRING;
		char				h_qty[16]										= APL_NULL_STRING;
		char				chr_h_new_qty[16]									= APL_NULL_STRING;
		char				l_quantity[16]										= APL_NULL_STRING;
		char				chr_l_trd_qty[16]									= APL_NULL_STRING;	
		char				chr_l_bic_code[13]									= APL_NULL_STRING;
		char				h_clnt_clr_name[66]										= APL_NULL_STRING;
		char				int_l_domcpac[APL_CLIENT_LENGTH]					= APL_NULL_STRING;
		char				int_l_countacc[APL_COUNTACC_LEN]				= APL_NULL_STRING; 
		char				chr_l_countacc_cname[66]							= APL_NULL_STRING;
		char 				chr_l_short_name[36] 								= APL_NULL_STRING;
		char				chr_l_clientof[36]								= APL_NULL_STRING;
		char				chr_l_clientof_cname[66]						= APL_NULL_STRING; 
		char				dbl_l_amount_a[16]									= APL_NULL_STRING;
		char				chr_l_new_amount[16]								= APL_NULL_STRING;
		char				chr_h_correct_msg[2]								= APL_NULL_STRING;
		char				h_info[266]										= APL_NULL_STRING;
		char				chr_h_note_temp[266]										= APL_NULL_STRING;
		char  			chr_l_clscode_a[9]                     		= APL_NULL_STRING; 
		MS_54X_STRUCT_H 	l_ms_54x_struct_h;
		MS_GEN_STRUCT_H 	l_ms_gen_struct_h;
		int				int_h_no_of_trd										= 0;
	   int   			a                          				= 0;
      int   			i                          				= 0;
      int   			int_ret                        				= 0;
      int   			int_retstat                      				= 0;
		int   			n 													= 0;
		int				int_len												= 0;
		int 				int_l_find_count_acc_flag						= 0;
		int   			int_l_read_del_inst_prty_flag              = 0;
		int 				int_l_bogcode 										= 0;
		int 				int_ref_length										= 0;
		int 				int_l_count											= 0;
		char 				chr_l_found_ref[2]									= APL_NULL_STRING;
		char 				chr_l_found_client[2]							= APL_NULL_STRING;
		char 				chr_l_cust_def[2]									= APL_NULL_STRING;
      char           chr_l_cust_not_def[2]                      = APL_NULL_STRING;
		char 				chr_h_temp[ISO_LINERR_LENGTH]							= APL_NULL_STRING;
		char 				chr_l_rep_seq[2]									= APL_NULL_STRING;
		int 				int_l_biccode										= 0;
		int 				int_l_deag_reag										= 0;
		int 				int_l_flg_newm										= 0;
		int 				int_l_flg_canc										= 0;
		double			h_trd_quantity										= 0.0;
		char 				chr_l_read_line  									= 'F';
		char				h_clt_brk_all[APL_FLAG_LENGTH]							= APL_NULL_STRING;
		char				chr_h_bic_cname[66]								= APL_NULL_STRING;
		char  			chr_l_cash_acc[APL_IBANACC_LEN]				= APL_NULL_STRING; 
		char  			chr_l_iban_cash_acc[APL_CLIENT_LENGTH]			= APL_NULL_STRING; 
      short          l_iban_cashacc                         = 0;
		short				i_clt_brk_all											= 0;
		short				i_87_cname										= 0;
      short 			i_nominal_value                         		= 0;
		short 			int_l_jocondexists                   		= 0;
		short 			l_stld_check	                   		= 0;

		int				int_l_genl_start									= 0;
		int				int_l_link_start									= 0;
		int				int_l_traddet_start								= 0;
		int				int_l_fia_start										= 0;
		int				int_l_repo_start									= 0;
		int				int_l_setdet_start									= 0;
		int				int_l_setprty_start								= 0;
		int				int_l_cshprty_start								= 0;
		int				int_l_amt_start										= 0;
		int				int_l_othprty_start								= 0;
		int 				int_l_fiac_start									= 0;

		int 				int_l_genl_occur									= 0;
		int				int_l_link_occur									= 0;
		int				int_l_traddet_occur								= 0;
		int				int_l_fia_occur										= 0;
		int				int_l_repo_occur									= 0;
		int				int_l_setdet_occur									= 0;
		int				int_l_cshprty_occur								= 0;
		int				int_l_amt_occur										= 0;
		int				int_l_othprty_occur								= 0;
		int 				int_l_fiac_occur									= 0;
		int 				int_l_npar_flg										= 0; 	
		char 				chr_cust_partial_flg[2] 							= APL_NULL_STRING;
		char           chr_cust_client[APL_CLIENT_LENGTH]          = APL_NULL_STRING;
		char 				chr_enter_char[3]									= APL_NULL_STRING;
		int 				int_l_owni_found									= 0;	
		char           chr_l_domcpac_cname[66]                   	= APL_NULL_STRING;
		int				int_l_valid_countacc							   = 0;
 
      char           chr_l_countacc_value[ISO_LINERR_LENGTH]           = APL_NULL_STRING;
      char           chr_l_countacc_tag[4]                       = APL_NULL_STRING;
      char           chr_l_countacc_qualifier[ISO_LINERR_LENGTH]       = APL_NULL_STRING;
		int            int_l_countacc_flg 								= 	0 ;				
		int 				int_l_read_countacc								=  0;		
		int            l_read_97A								= 	0;
		int 				count										=  0;
      char           chr_l_decu_recu_value[ISO_LINERR_LENGTH]           = APL_NULL_STRING;
      char           chr_l_decu_recu_tag[4]                       		= APL_NULL_STRING;
      char           chr_l_decu_recu_qualifier[ISO_LINERR_LENGTH]       = APL_NULL_STRING;
		int				l_invalid_97a											=0;
		int				l_invalid_97a_decu_recu								=0;
		
		int				int_l_new_is_citi_domcpac						= 0;

		int				int_l_propremotetrd								 = 0 ;
		char				chr_l_number_ident[4]								 = APL_NULL_STRING;					
		char				chr_l_link_typ_ind[15]								 = APL_NULL_STRING;	
		int				int_l_link_count									 = 0;
		int 				int_l_link_typ_length								 = 0 ;

		

      char  			chr_l_str5[ISO_FILERR_LINERR_LENGTH]        		   = APL_NULL_STRING;
		char				chr_l_mstacc_a[APL_CLIENT_LENGTH]				   = APL_NULL_STRING;
		char				temp[2]										   = APL_NULL_STRING;
		int            int_l_slash_count                          = 0;
		int            int_h_cur_count                          	= 0; 
		short          l_repo_check             					= 0;
		int 				int_no_of_blanks									= 0;
		char				chr_l_str6[ISO_FILERR_LINERR_LENGTH]						= APL_NULL_STRING;
		char				chr_l_str7[ISO_FILERR_LINERR_LENGTH]										= APL_NULL_STRING;
      char  			chr_countacc_line[ISO_FILERR_LINERR_LENGTH]      	= APL_NULL_STRING;
      char  			chr_countacc_next_str[ISO_FILERR_LINERR_LENGTH]		= APL_NULL_STRING;
      char  			chr_decu_recu_line[ISO_FILERR_LINERR_LENGTH]      	= APL_NULL_STRING;
		char           chr_decu_recu_desc[66]         = APL_NULL_STRING; 
      char  			chr_decu_recu_next_str[ISO_FILERR_LINERR_LENGTH]		= APL_NULL_STRING;
		char 				chr_l_ref_no[APL_TXNREFNO_LEN]					= APL_NULL_STRING;
		char           chr_l_related_ref_no[21]             = APL_NULL_STRING; 

		int				int_i_amt_qual_count								= 0;
		int				int_i_read_ocmt_qual								= 0;
		
                int                             int_i_stco_qual_count                       = 0;
                char                            chr_l_str_stco_qual[ISO_LINERR_LENGTH]        = APL_NULL_STRING;
		

		char				chr_l_str_amt_qual[ISO_LINERR_LENGTH]			= APL_NULL_STRING;
		char				chr_l_str_ocmt_qual[ISO_LINERR_LENGTH]			= APL_NULL_STRING;
		char				chr_l_prev_amt_qual[ISO_LINERR_LENGTH]			= APL_NULL_STRING;
		char				chr_h_prev_value[ISO_LINERR_LENGTH]				= APL_NULL_STRING;
		
      DEBUG_INFO_STRUCT_H         **l_debuginfo     = NULL;
      DEBUG_INFO_STRUCT_H         *l_debuginfostruct_h     = NULL;
      int           int_l_inval_countacc                          = 0;
      int           int_l_inval_clientof                         = 0;

      
		

      
      char           chr_h_code_desc[41]                        = APL_NULL_STRING;
      char           chr_h_narr[31]                             = APL_NULL_STRING;
      short          l_exchcheck                               = 0;
      
      int          int_l_nofx_found                               = 0; 
		int			 int_period_flg = 0;										

		#ifdef EMU_PROCESSING
         int 			int_l_ccy_flg                       			= 0;
      #endif

		      
		     	short           l_SAFE_exist                    = 0;
		    	short           l_dereag_safe_exist             = 0;
		   	short           l_decurecusafe_exist            = 0;
		  	short           l_sellbuyrsafe_exist            = 0;
		 	short           l_buyrsellsafe_exist            = 0;
			short 		l_dereiexist			= 0;
			short           l_read_safe                     = 0;
		        short           l_read_97a_countacc             = 0;
   	 	        short           l_read_97a_decu_recu            = 0;
		     

		
		short l_remtrd_22F95P_exist   =  0;
		int   int_l_setr_trad             =  0;
		int   int_l_setr_turn             =  0;
		int   int_l_trca_spri             =  0;
		int	int_l_nonprop_remtrd			=	0;
		int   int_l_afte_befo_flg         =  0;				
		

	   
		char	chr_l_decurecu_multimstacc[2] = APL_NULL_STRING;
		char	chr_l_buyrsell_multimstacc[2] = APL_NULL_STRING;
	   
		char chr_l_place_code[50]= APL_NULL_STRING;	
		char chr_l_fxcx_ind[ISO_LINERR_LENGTH] = APL_NULL_STRING;
      
      int   int_l_len_locrefno =0;
      char  chr_l_euro_locrefno[17]=APL_NULL_STRING;
      short l_gr_flg       =0;
      char chr_l_hdat_process[2]= APL_NULL_STRING;
      short i_hdat_process=0;
      short          l_euromts                              = 0;
      short          l_hdattrd                              = 0;
		short          l_locrefno_found                       = 0;
      char           chr_h_part1[ISO_LINERR_LENGTH]                     = APL_NULL_STRING;
      char           chr_h_part2[ISO_LINERR_LENGTH]                     = APL_NULL_STRING;
      char           chr_h_part3[ISO_LINERR_LENGTH]                     = APL_NULL_STRING;
      char           chr_h_euro_domcpac[21]                     = APL_NULL_STRING;
      

      char           chr_h_default_acc[21]                     = APL_NULL_STRING;
      short           l_ext_trd_check                     = 0;
      short           l_micex_trades                      = 0;
      short           l_ru_micex		                      = 0;
		int				int_l_countacc_found							 =	0;
		int 				int_l_clientof_found 						 = 0;

		
		char				chr_l_typeoftrd[3]								=	APL_NULL_STRING;
		short				l_proc_on_exch								=	0;
		
		char 				chr_l_temp_narr[31]							= APL_NULL_STRING; 
		char 				chr_l_in_narr[31]								= APL_NULL_STRING;
		char           chr_l_linkdet_narr[ISO_LINERR_LENGTH]     = APL_NULL_STRING; 
		EXEC SQL BEGIN DECLARE SECTION;
		EXEC SQL VAR chr_l_client_a IS STRING;
		EXEC SQL VAR chr_cust_client IS STRING;
		EXEC SQL VAR chr_l_mstacc_a IS STRING;
		EXEC SQL VAR chr_l_ref_no  IS STRING;
		EXEC SQL VAR chr_l_related_ref_no  IS STRING;
		EXEC SQL VAR chr_l_clscode_a IS STRING; 
		EXEC SQL VAR chr_l_hdat_process IS STRING; 
		EXEC SQL VAR chr_h_euro_domcpac IS STRING; 
		EXEC SQL VAR chr_l_iban_cash_acc IS STRING; 
		EXEC SQL VAR chr_l_typeoftrd IS STRING; 
		EXEC SQL END DECLARE SECTION;

      memset(&l_ms_54x_struct_h,NULL,sizeof(MS_54X_STRUCT_H) );
		memset(&l_ms_gen_struct_h,NULL,sizeof(MS_GEN_STRUCT_H) );
		memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
		memset(chr_l_condident, APL_NULL_CHAR, APL_CONDID_LEN);

		memset(chr_g_secb_flg,NULL,2); 		
		memset(chr_g_trad_val,NULL,38);	
      memset(chr_g_safe_val,NULL,47);	
		memset(chr_g_setr_val,NULL,5);    
		memset(chr_g_stco_array,APL_NULL_CHAR,15);   
		strcpy(chr_l_found_ref,"F");
		strcpy(chr_l_cust_def,"F");
		strcpy(chr_l_cust_not_def,"F");
		strcpy(chr_l_rep_seq,"F");
		strcpy(chr_l_found_client,"F");

		b = (char *)calloc(ISO_FILERR_LINERR_LENGTH,sizeof(char));
		APL_MALLOC_FAIL(b);
		l_debuginfo= &l_debuginfostruct_h;

		if ( !strcmp(p_msg_no,I_MSGNO_540) )
		{
			l_ms_54x_struct_h.h_deal_code[0] = DEALCD_RF;
		}
		if ( !strcmp(p_msg_no,I_MSGNO_541) )
		{
			l_ms_54x_struct_h.h_deal_code[0] = DEALCD_RVP;
		}
		if ( !strcmp(p_msg_no,I_MSGNO_542) )
		{
			l_ms_54x_struct_h.h_deal_code[0] = DEALCD_DF;
		}
		if ( !strcmp(p_msg_no,I_MSGNO_543) )
		{
			l_ms_54x_struct_h.h_deal_code[0] = DEALCD_DVP;
		}
		l_ms_54x_struct_h.h_deal_code[1]		= '\0';

		strcpy(l_ms_54x_struct_h.swift_msg_no, p_msg_no);

		memset(l_ms_54x_struct_h.fx_adv_ind,NULL,2);


      l_ms_54x_struct_h.partial_ind_a[0]='N';
      l_ms_54x_struct_h.partial_ind_a[1]='\0';
		memset(h_info, APL_NULL_CHAR , 266);
		memset(chr_h_note_temp, APL_NULL_CHAR , 266);
		chr_enter_char[0]=putchar(13);
		chr_enter_char[1]=putchar(10);
		chr_enter_char[2]='\0';
		memset(chr_l_decurecu_multimstacc, APL_NULL_CHAR, 2);
		memset(chr_l_buyrsell_multimstacc, APL_NULL_CHAR, 2);
		chr_l_buyrsell_multimstacc[0]='N';
		chr_l_buyrsell_multimstacc[1]=APL_NULL_CHAR;

		

		APL_FREE(*p_ms_inc_linkinfo_struct_h);

	 
	
		
      if(APL_FAILURE == CO_Chk_CntryEnabled("TRADE_MAINT",
                                            "NTRD_NODLT",
                                             &int_l_jocondexists,
                                             l_debug_info_ptr))
    	{	 
         APL_GOBACK_FAIL
      }

		                
		if ( APL_FAILURE == CO_Chk_CntryEnabled("INCOMING_MSG", "STLD_SECL" , &l_stld_check, l_debug_info_ptr) )
      {
            APL_GOBACK_FAIL
      }

            
            memset(chr_l_cash_acc, APL_NULL_CHAR , APL_IBANACC_LEN);
            

		
		memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN );
		memset(chr_l_condident, APL_NULL_CHAR, APL_CONDID_LEN);
		l_remtrd_22F95P_exist = 0;
    
		strcpy(chr_mainfuncarea, "REMOTE_TRD");
		strcpy(chr_l_condident, "22F95P_LIEU_SPRI");
		if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, chr_l_condident, &l_remtrd_22F95P_exist, l_debug_info_ptr) )
		{
			fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
			APL_GOBACK_FAIL   
		}
     	
		
		

			memset(chr_h_euro_domcpac,APL_NULL_CHAR,21);
         EXEC SQL SELECT FIELD_VAL
         INTO  :chr_h_euro_domcpac
         FROM PRO_GSSPLVAL
         WHERE MAIN_FUN='TRADE_MAINT'
         AND   SUB_PROCESS='RTGS_DOMCPAC'
         AND NATION=:g_mt_commonsys_params_struct_h.nation_code;

			IS_ANY_ORA_ERROR
			fprintf(fl_userlog,"EURO DOMCPAC is %s\n",chr_h_euro_domcpac);

		



		while (!feof(fl_incmsg))
		{
				if (chr_l_read_line == 'F')
				{
					memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
					
               fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
               chr_l_str4[strlen(chr_l_str4)-1]='\0';
               printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
				
				}
				if (chr_l_str4[0] == '-')
				{
					fprintf(fl_userlog,"Encounterd End of  54x Message\n");
					break;
				}
				if (chr_l_str4[0] != ':') 
				{
					continue;		
				}	
				memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
				memset(h_msg_tag, APL_NULL_CHAR , 4);
				memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
				memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
				memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
				if (APL_FAILURE == MS_Proc_SplitStr ( 	chr_l_str4,
                                      	   	   h_msg_tag ,
                                         	   	chr_h_value ,
                                            		l_debug_info_ptr ))
           		{
              		fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
						strcpy(chr_g_msg_sts, "RJT");		
 						if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                         				 "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                            			 (DEBUG_INFO_STRUCT_H **)NULL))
                  	{
                      	CO_ProcMonitor(APL_OUT_FILE,
                         	      "Failed to insert into IINMSGRP.\n",
                           	    NULL, NULL);
                  	}
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
             		APL_GOBACK_FAIL
   	         }

					APL_IF_DEBUG
					{
 	 	    			printf("the h_msg_tag is %s\n",h_msg_tag);
			     		printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
					}

					chr_l_read_line = 'F';

           		if (!strcmp(h_msg_tag,APL_NULL_STRING) )
  	        		{
						fprintf(fl_userlog,"MESSAGE NOT IN PROPER FORMAT. MESSAGE REJECTED\n");
     	        		fprintf(fl_userlog,"Found End of Message\n");

						strcpy(chr_g_msg_sts, "RJT");		

						if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, "MESSAGE CONTAINS EMPTY LINE",chr_g_str_client, (DEBUG_INFO_STRUCT_H **)NULL) )
						{
							CO_ProcMonitor(APL_OUT_FILE, 
										"Failed to insert into IINMSGRP.\n", NULL, NULL);
							*int_p_retstat = IV_CRITCAL_ERROR_IND;
							APL_GOBACK_FAIL
						}
            	}

					strncpy(chr_h_qualifier,chr_h_value,5);
					if((!strcmp(h_msg_tag,MSG_BEGIN_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
					{
						 int_l_setprty_start=1;
					    fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
            		 chr_l_str4[strlen(chr_l_str4)-1]='\0';
            		 memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
            		 memset(h_msg_tag, APL_NULL_CHAR , 4);
            		 memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            		 memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            		 memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            		 if (APL_FAILURE == MS_Proc_SplitStr (   chr_l_str4,
                   				                            h_msg_tag ,
                              				                chr_h_value ,
                                          			       l_debug_info_ptr ))
               	{
                  	fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                  	strcpy(chr_g_msg_sts, "RJT");     
                  	if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                     	                               "MESSAGE LINE NOT IN PROPER FORMAT",
																		 chr_g_str_client,
                                                    	(DEBUG_INFO_STRUCT_H **)NULL))
                     {
                        CO_ProcMonitor(APL_OUT_FILE,
                                 "Failed to insert into IINMSGRP.\n",
                                  NULL, NULL);
                     }
                  	*int_p_retstat = IV_CRITCAL_ERROR_IND;
                  	APL_GOBACK_FAIL
               	}

 		            APL_IF_DEBUG
      	         {
         	         printf("the h_msg_tag is %s\n",h_msg_tag);
            	      printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
               	}
						strncpy(chr_h_qualifier,chr_h_value,5);
						if((!strcmp(h_msg_tag,I_DOMCPACCQ_98)) &&(strcmp(chr_h_qualifier,PSET_QUALIFIER)))
						{
							memset(chr_l_str6,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
							memset(chr_l_str7,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
							strcpy(chr_l_str6,chr_h_value+7);
							int_no_of_blanks=35-(strlen(chr_l_str6));
							sprintf(chr_l_str7,"%s",chr_l_str6);
							for(i=0;i<int_no_of_blanks;i++)
								strcat(chr_l_str7," ");
							int_l_count=0;
                      while(1)
                      {
                        memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
							   
							   fgets(chr_l_str,ISO_FILERR_LINERR_LENGTH,fl_incmsg);	
                        if ((chr_l_str[0] != ':') && (int_l_count==0))
                        {
									strncat(chr_l_str7,chr_l_str,35);
                        	chr_l_str7[strlen(chr_l_str7)-1]='\0';
                           int_l_count=int_l_count+1;
									i=0;
									while(chr_l_str7[i]!='\0')
									{
										if(chr_l_str7[i]=='\t')
										chr_l_str7[i]=' ';
										i=i+1;
									}
                           continue;
                        }
                        if (chr_l_str[0]==':')
                        {
                           chr_l_read_line='F';
                           chr_l_str[strlen(chr_l_str)-1]='\0';
                           strcpy(chr_l_str5,chr_l_str);
					
                           break;
                        }
							   if((chr_l_str[0] != ':') && (int_l_count!=0))
							   {
								    continue;
							   }
                      }
						}
					}
					printf("l_str is %s\n",chr_l_str);
					printf("l_str7 is %s\n",chr_l_str7);
					printf("l_str4 is %s\n",chr_l_str4);
					printf("l_str5 is %s\n",chr_l_str5);

					if (!strcmp(h_msg_tag,MSG_BEGIN_TAG))
					{
						if (!strcmp(chr_h_qualifier,MSG_QUAL_GENL))
						{	
								int_l_genl_start =1;
								int_l_genl_occur++;
						}
						else if (!strcmp(chr_h_qualifier,LINK_QUALIFIER))
						{
								int_l_link_start=1;
								int_l_link_occur++;
						}
					 	else if (!strcmp(chr_h_qualifier,TRADDET_MESSAGE_QUALIFIER))
						{
						   int_l_traddet_start=1;
							int_l_traddet_occur++;
						}
						else if (!strcmp(chr_h_qualifier,MSG_QUAL_FIA))
						{
							int_l_fia_start=1;
							int_l_fia_occur++;

						}
						else if (!strcmp(chr_h_qualifier,REPO_QUALIFIER))
					 	{
							 int_l_repo_start=1;
							 int_l_repo_occur++;
						}
					   else if (!strcmp(chr_h_qualifier,SETDET_QUALIFIER))
						{
							int_l_setdet_start=1;
							int_l_setdet_occur++;
						}
 						else if (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER))
					   {
							int_l_setprty_start=1;
					   }
					   else if (!strcmp(chr_h_qualifier,MS_CASH_PARTY_QUAL))
					   {
							int_l_cshprty_start=1;
							int_l_cshprty_occur++;
					   }
						else if (!strcmp(chr_h_qualifier,MSG_AMT_TAG))
						{
							int_l_amt_start=1;
							int_l_amt_occur++;
					   }
						else if (!strcmp(chr_h_qualifier,OTHPRTY_QUALIFIER))
						{
							int_l_othprty_start=1;
							int_l_othprty_occur++;
						}
						else if (!strcmp(chr_h_qualifier,MSG_QUAL_FIAC))
						{
							int_l_fiac_start=1;
							int_l_fiac_occur++;
						}
					}


					if (!strcmp(h_msg_tag,END_TAG))
					{
						if (!strcmp(chr_h_qualifier,MSG_QUAL_GENL))
						{
								int_l_genl_start =0;
						}
						else if (!strcmp(chr_h_qualifier,LINK_QUALIFIER))
						{
								int_l_link_start=0;
						}
					 	else if (!strcmp(chr_h_qualifier,TRADDET_MESSAGE_QUALIFIER))
						{
						   int_l_traddet_start=0;
						}
						else if (!strcmp(chr_h_qualifier,MSG_QUAL_FIA))
						{
							int_l_fia_start=0;
						}
						else if (!strcmp(chr_h_qualifier,REPO_QUALIFIER))
					 	{
							 int_l_repo_start=0;
						}
					   else if (!strcmp(chr_h_qualifier,SETDET_QUALIFIER))
						{
							int_l_setdet_start=0;
						}
 						else if (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER))
					   {
							int_l_setprty_start=0;
					   }
					   else if (!strcmp(chr_h_qualifier,MS_CASH_PARTY_QUAL))
					   {
							int_l_cshprty_start=0;
					   }
						else if (!strcmp(chr_h_qualifier,MSG_AMT_TAG))
						{
							int_l_amt_start=0;
					   }
						else if (!strcmp(chr_h_qualifier,OTHPRTY_QUALIFIER))
						{
							int_l_othprty_start=0;
						}
						else if (!strcmp(chr_h_qualifier,MSG_QUAL_FIAC))
						{
							int_l_fiac_start=0;
						}
						continue;

					}






		
			
				if ((int_l_traddet_start==1)&& (int_l_traddet_occur==1))
				{
					if (( !strcmp(h_msg_tag,I_INSTRU_DEAL_DTA_98)
							|| (!strcmp(h_msg_tag,I_INSTRU_DEAL_DTC_98))	
							||(!strcmp(h_msg_tag,I_INSTRU_DEAL_DTB_98)) ) 
							&& ((!strcmp(chr_h_qualifier,SETT_QUALIFIER))
							|| (!strcmp(chr_h_qualifier,TRAD_MESSAGE_QUALIFIER))))
					{
						if ((!strcmp(h_msg_tag,I_INSTRU_DEAL_DTA_98)) ||(!strcmp(h_msg_tag,I_INSTRU_DEAL_DTC_98)) )
						{
 	          			strcpy(chr_h_value,chr_h_value+7);	
							if(!strcmp(chr_h_qualifier,SETT_QUALIFIER))
							{	
									printf("\n Got SETT qualifier ...\n");	
   	            		memset(chr_h_temp_settle_dt,NULL,9);				
										printf("\n 1.1...\n");	
								
                        memset(h_setl_dt,APL_NULL_CHAR,APL_DATE_LEN);
										printf("\n 1.2...\n");	
								strncpy(chr_h_temp_settle_dt,chr_h_value,8);	
										printf("\n 1.3...\n");	
     	   	      		chr_h_temp_settle_dt[8] ='\0';				
										printf("\n 1.4...\n");	

   		            	if (APL_FAILURE == MS_Proc_DataFmtChg(chr_h_temp_settle_dt , 
							 												 h_setl_dt ,
               		   		                            l_debug_info_ptr ) )
              				{	
              					fprintf(fl_userlog,"Failed To Decode Settle Date.\n");
									*int_p_retstat = IV_CRITCAL_ERROR_IND;
                 				APL_GOBACK_FAIL
              				}

										printf("\n 1.5...\n");	
								memset(l_ms_54x_struct_h.setl_dt,NULL, APL_DATE_LEN);	
										printf("\n 1.6...\n");	
							   strcpy(l_ms_54x_struct_h.setl_dt,h_setl_dt);
										printf("\n 1.7...\n");	
								strcpy(chr_g_settle_dt,h_setl_dt); 
										printf("\n 1.8...\n");	
							} 	
							else
							{
								if(!strcmp(chr_h_qualifier,TRAD_MESSAGE_QUALIFIER))
								{	
									printf("\n Got TRAD qualifier ...\n");	
									{
   	            				memset(chr_h_temp_trade_dt,NULL,9);			
										printf("\n 1...\n");	
										strncpy(chr_h_temp_trade_dt ,chr_h_value,8);
										printf("\n 2...\n");	
     	   	      				chr_h_temp_trade_dt[8] = APL_NULL_CHAR;			
	
   		 			           	if (APL_FAILURE == MS_Proc_DataFmtChg(chr_h_temp_trade_dt , 
									 												 chr_h_tr_dt ,
         		         				                            l_debug_info_ptr ) )
            		  				{	
              							fprintf(fl_userlog,"Failed To Decode trade Date.\n");
											*int_p_retstat = IV_CRITCAL_ERROR_IND;
                 						APL_GOBACK_FAIL
              						}
										memset(l_ms_54x_struct_h.dl_dt,NULL,APL_DATE_LEN);	
								      strcpy(l_ms_54x_struct_h.dl_dt,chr_h_tr_dt);
									}	
								} 	
				   		}
						}
						else
						{
							if (!strcmp(h_msg_tag,I_INSTRU_DEAL_DTB_98))
							{
								strcpy(chr_g_msg_sts,"RPR");
							 	if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "DATE FORMAT 98B NOT SUPPORTED",chr_g_str_client, NULL) )
							 	{
									 CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
									 continue;
								 }
						   }
						}
					  continue;	
				}
			}


		

				if((int_l_genl_start==1) && (int_l_genl_occur ==1))
				{
					if (  (!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,SEME_QUALIFIER)))
					{
           				strcpy(chr_h_value,chr_h_value+7);	
							memset(l_ms_54x_struct_h.indentity_no, NULL, 17); 
							strncpy(l_ms_54x_struct_h.indentity_no,chr_h_value,16);
							strcpy(chr_l_found_ref,"T");
							memset(chr_l_ref_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
							EXEC SQL SELECT UPPER(:l_ms_54x_struct_h.indentity_no) into :chr_l_ref_no from dual;
							IS_ANY_ORA_ERROR
							memset(l_ms_54x_struct_h.indentity_no,APL_NULL_CHAR,17);
							strcpy(l_ms_54x_struct_h.indentity_no,chr_l_ref_no);
							memset(chr_g_seme_prev,APL_NULL_CHAR,17);
							strcpy(chr_g_seme_prev,chr_l_ref_no);
							continue;
				   }
				}

	  
				
			if((int_l_traddet_start==1) && (int_l_traddet_occur ==1))	
			{
				if (!strcmp(h_msg_tag,I_INSTRU_DET_98)	)
				{
					memset(chr_l_instr_name, APL_NULL_CHAR, ISO_LINERR_LENGTH);
					strcpy(chr_l_instr_name,chr_h_value);	
					
					memset(chr_l_instrcode_a,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
					memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
					strncpy(chr_l_instrcode_a,chr_l_instr_name,4);
					chr_l_instrcode_a[4] = APL_NULL_CHAR;
					
					
					if ( strncmp(chr_h_value,"INSTR_ISIN",4) != 0 )
					{
								strcpy(chr_g_msg_sts,"RPR");
						 		if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "NON ISIN FIELD",chr_g_str_client, NULL) )
						 		{
									 CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
							 	}
								fprintf(fl_userlog,"NON ISIN FIELD \n");
								 CO_InsertErr(l_debug_info_ptr, ERR_REC_NOTFND,"INSTR_ISIN",chr_l_isin,APL_NULL_STRING,__LINE__,__FILE__);
							h_instr_code[0]='\0';
					}
					else
					{
						memset(chr_l_isin,APL_NULL_CHAR,13);
						for ( i = 0; i< 12 ; i ++ )
							chr_l_isin[i] = chr_l_instr_name[ i + 5 ];

                     
                  memset(chr_g_isin,APL_NULL_CHAR,13);
                  strcpy(chr_g_isin,chr_l_isin);
                  memset(chr_g_isin1,APL_NULL_CHAR,13);
                  strcpy(chr_g_isin1,chr_g_isin);
                  

						APL_IF_DEBUG
						{
							printf("the chr_l_isin is (%s) \n",chr_l_isin);
						}
						if (APL_FAILURE == IV_Rtv_InstrFromISIN(chr_l_isin, h_instr_code, &int_retstat, l_debug_info_ptr)	)
						{
							if (int_retstat == IV_CRITCAL_ERROR_IND)
							{
								fprintf(fl_userlog,"Fatal Error Encountered in INSTRUMENT TABLE \n");
								*int_p_retstat = IV_CRITCAL_ERROR_IND;
								APL_GOBACK_FAIL
							}
							
							if (int_retstat == IV_NO_DATA_FOUND_ERR)
							{
								strcpy(chr_g_msg_sts,"RPR");
						 		if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "ISIN NOT FOUND",chr_g_str_client, NULL) )
						 		{
									 CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
							 	}
								fprintf(fl_userlog,"Instrode does not exist in MT_INSTRUMENT table for specified ISIN \n");
								 CO_InsertErr(l_debug_info_ptr, ERR_REC_NOTFND,"INSTR_ISIN",chr_l_isin,APL_NULL_STRING,__LINE__,__FILE__);
							}
							h_instr_code[0]='\0';
						 }
					 }
						strcpy(l_ms_54x_struct_h.instr_code,h_instr_code);
	
						
                 
					  if (int_l_jocondexists)
                 {
							if ((strcmp(p_msg_no,I_MSGNO_542) == 0 )  || (strcmp(p_msg_no,I_MSGNO_543) == 0 ))
							{
                     	if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_54x_struct_h.instr_code, "clscode", chr_l_clscode_a, l_debug_info_ptr) )
                     	{

	                       
      	                  strcpy(chr_l_clscode_a,APL_NULL_STRING);
         	            }
            	         if (strcmp(chr_l_clscode_a,"NTRD") == 0)
               	      {
                              CO_InsertErr(l_debug_info_ptr, ERR_DLVTRDS_NOTALLOWED, l_ms_54x_struct_h.instr_code,APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
                              strcpy(chr_g_msg_sts, "RPR");
										if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "Deliver Trades NOT ALLOWED FOR NTRD INSTR_CODES",l_ms_54x_struct_h.instr_code, NULL) )
                        		{
                            		CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                        		}
                        		fprintf(fl_userlog,"Deliver Trades not allowed for NTRD Type of Instrodes \n");
                  	   }
							}
                  }	
						while(1)		
						{
							memset(chr_l_str4, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
							
							fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
							chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
						
							if (chr_l_str4[0] == ':') 
							{
								chr_l_read_line = 'T';
								break;
							}
							else if (chr_l_str4[0] == '-')
							{
								chr_l_read_line = 'T';
								break;
							}
							else
							{
								continue;	
							}

						}	
						continue;
				} 		
			}	
	
 		
			if((int_l_fiac_start==1) && (int_l_fiac_occur==1) )
			{
				if (( !strcmp(h_msg_tag,I_QTY_98)) && (!strcmp(chr_h_qualifier,SETT_QUALIFIER)))
				{
					
					memset(l_quantity,APL_NULL_CHAR,16);
					memset(chr_l_trd_qty,APL_NULL_CHAR,16);
					memset(h_qty,APL_NULL_CHAR,16);
					memset(chr_h_new_qty,APL_NULL_CHAR,16);
					memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
					l_finquantity=0.0;
					strncpy(h_code,chr_h_value+5,7);	
					strcpy(h_qty, chr_h_value+12);		
					
					
					if (APL_FAILURE == CO_Proc_RemoveDot(h_qty,chr_h_new_qty,l_debug_info_ptr) )
					{
						fprintf(fl_userlog,"Failed To Remove The Decimal From The Quantity\n");
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
						APL_GOBACK_FAIL
					}
					
					if (APL_FAILURE == CO_Proc_ReplaceComma(	chr_h_new_qty,chr_l_trd_qty,l_debug_info_ptr) )
					{
						fprintf(fl_userlog,"Failed to Replace The Commas in Quantity\n");
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
						APL_GOBACK_FAIL
					}
					n = (	strlen(chr_l_trd_qty) - 1	);
					if (	chr_l_trd_qty[n] == '.')
						strcat(chr_l_trd_qty,"00");

               if ( !strcmp(h_code,MS_CODE_FMT ) )
               {
						if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_54x_struct_h.instr_code, "typeofinstr",chr_l_typeofinstr, l_debug_info_ptr) )
						{
							*int_p_retstat = IV_CRITCAL_ERROR_IND;
						}
								
                  if ((!strcmp(chr_l_typeofinstr, TYPEOFINSTR_BOND)) || (!strcmp(chr_l_typeofinstr,TYPEOFINSTR_FMT)))	
                  {
							if ( APL_FAILURE == CR_Rtv_InstrNumVal(l_ms_54x_struct_h.instr_code, "nomval",&l_nominal_value, l_debug_info_ptr) )
							{
								*int_p_retstat = IV_CRITCAL_ERROR_IND;
								APL_GOBACK_FAIL
							}
							sscanf(chr_l_trd_qty, "%lf", &l_finquantity);
							l_finquantity /= l_nominal_value;
							sprintf(chr_l_trd_qty, "%lf", l_finquantity);
                  }
						else  
						{
								strcpy(chr_g_msg_sts,"RPR");
								if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "TYPEOFINSTR IN MESSAGE IS INCORRECT",chr_g_str_client,NULL) )
									CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                           
								   fprintf(fl_userlog,"TYPEOFINSTR %s IN MESSAGE IS INCORRECT\n",chr_l_typeofinstr);
                           CO_InsertErr(l_debug_info_ptr,ERR_TIPOINSTRU_NOTFND,NULL,NULL,APL_NULL_STRING,__LINE__,__FILE__);

						}
                }
					 if (!strcmp(h_code,MS_CODE_SHSBON))
					 {
						if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_54x_struct_h.instr_code, "typeofinstr",chr_l_typeofinstr, l_debug_info_ptr)
						 )
							 {
								 *int_p_retstat = IV_CRITCAL_ERROR_IND;
							 }
						if  (!strcmp(chr_l_typeofinstr,TYPEOFINSTR_FMT)) 
							{
								strcpy(chr_g_msg_sts,"RPR");
								if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "TYPEOFINSTR IN MESSAGE IS INCORRECT",chr_g_str_client,NULL) )
									CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                           
                           fprintf(fl_userlog,"TYPEOFINSTR %s IN MESSAGE IS INCORRECT\n",chr_l_typeofinstr);
                           CO_InsertErr(l_debug_info_ptr,ERR_TIPOINSTRU_NOTFND,NULL,NULL,APL_NULL_STRING,__LINE__,__FILE__);

							}

					 }
					 if ((!strcmp(h_code,MS_CODE_FMT)) || (!strcmp(h_code,MS_CODE_SHSBON)))
					 {
						if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_54x_struct_h.instr_code, "typeofinstr",chr_l_typeofinstr, l_debug_info_ptr))
					   {
					 		*int_p_retstat = IV_CRITCAL_ERROR_IND;
					  	}
						
					 }

					  if (!strcmp(h_code,MS_CODE_AMOR))
                {
                     strcpy(chr_g_msg_sts,"RPR");
                     if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", " TYPEOFINSTR NOT AN FMT/SHS/BON TYPE",chr_g_str_client, NULL) )
                     {
                         CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
                                  NULL, NULL);
								APL_GOBACK_FAIL
                     }
                           
                           fprintf(fl_userlog,"TYPEOFINSTR %s IN MESSAGE IS INCORRECT\n",chr_l_typeofinstr);
                         CO_InsertErr(l_debug_info_ptr,ERR_TIPOINSTRU_NOTFND,NULL,NULL,APL_NULL_STRING,__LINE__,__FILE__);

                }
						strcpy(l_ms_gen_struct_h.h_instr_typeval,chr_l_typeofinstr);
						strcat(l_ms_gen_struct_h.h_instr_typeval,chr_l_trd_qty);

						(*p_ms_rep_struct_h) = (MS_REP_STRUCT_H *)realloc(*p_ms_rep_struct_h,(sizeof(MS_REP_STRUCT_H) * (int_h_no_of_trd + 1)));
						memset((*p_ms_rep_struct_h + int_h_no_of_trd)->client , APL_NULL_CHAR , APL_CLIENT_LENGTH);
						memset((*p_ms_rep_struct_h + int_h_no_of_trd)->clnt_name , APL_NULL_CHAR , 66);
						(*p_ms_rep_struct_h + int_h_no_of_trd)->quantity 	 = 0.0;
						(*p_ms_rep_struct_h + int_h_no_of_trd)->quantity 	 = atof(chr_l_trd_qty);
						*p_tot_qty = (*p_tot_qty) + atof(chr_l_trd_qty);

						continue;
				}
			}
				
			
					if((int_l_fiac_start==1) && (int_l_fiac_occur==1))
					{
						if (((!strcmp(h_msg_tag,I_CLIENTA_98)) || (!strcmp(h_msg_tag,I_CLIENTB_98))) && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))  
						{
							
						memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );	
						memset(chr_l_cname,APL_NULL_CHAR, 66 );
						memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
						memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
						memset(chr_cust_client,APL_NULL_CHAR, APL_CLIENT_LENGTH );
						int_l_slash_count=0;
						a=0;	
                  for(i=0;i<strlen(chr_h_value);i++)
                  {
                    
                    if (((chr_h_value[i]=='/') 
								&& (int_l_slash_count<2)
								&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     	|| ((chr_h_value[i]=='/') 
									&& (int_l_slash_count<3)
									&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
                  }
						strncpy(chr_l_client_a,chr_h_value+a+1,10);	
											
							


							chr_l_client_a[10] = APL_NULL_CHAR;
						  
							
							strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
							strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
							if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, chr_l_condident, &int_l_exist_a, l_debug_info_ptr) ) 
							{
								 APL_GOBACK_FAIL			
							}
							
						 	if ( int_l_exist_a )
							{
							  if ( strlen( chr_l_client_a ) == 9 )       
								{
									for ( i = 0; i < 6 ; i++ )
									{
										chr_l_new_client[i] = chr_l_client_a[i];
									}
									strcat(chr_l_new_client,"-");
									chr_l_substr_client[0] = chr_l_client_a[6] ;
									chr_l_substr_client[1] = chr_l_client_a[7] ;
									chr_l_substr_client[2] = chr_l_client_a[8] ;
									chr_l_substr_client[3] = APL_NULL_CHAR ; 
									strcat(chr_l_new_client,chr_l_substr_client);
									
									strcpy( chr_l_client_a, chr_l_new_client);
								}
								if ( ( strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ') )
                        {
                           for ( i = 0; i < 6 ; i++ )
                           {
                              chr_l_new_client[i] = chr_l_client_a[i];
                           }
                           strcat(chr_l_new_client,"-");
                           chr_l_substr_client[0] = chr_l_client_a[7] ;
                           chr_l_substr_client[1] = chr_l_client_a[8] ;
                           chr_l_substr_client[2] = chr_l_client_a[9] ;
                           chr_l_substr_client[3] = APL_NULL_CHAR ;
                           strcat(chr_l_new_client,chr_l_substr_client);
                           strcpy( chr_l_client_a, chr_l_new_client);
                        }
							}
							

							
							printf("\nAvi ONS : B4 IV_Rtv_CNameAcc :clnt_name  :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
						
							if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
							{
                    
                        if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                        {
                           fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                           *int_p_retstat = IV_CRITCAL_ERROR_IND;
                           continue;
                        }
                        else if (int_retstat == IV_CRITCAL_ERROR_IND)
								{
									CO_InsertErr(l_debug_info_ptr, DB_ERR_NO,"CACCOUNT",APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
									*int_p_retstat = IV_CRITCAL_ERROR_IND;
									continue;
								}
								if (int_retstat == IV_NO_DATA_FOUND_ERR)
								{
									fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
									
									CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND,chr_l_client_a,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
								}
								if (!strcmp(chr_l_cust_not_def,"F"))
									strcpy(chr_l_cust_not_def,"T"); 
							}
							if (!strcmp(chr_l_cust_def,"F"))
							{
							strcpy(chr_l_cust_def,"T");
							}
                  if(strlen(chr_l_cash_acc)!=0)
                  {
                     if ( APL_FAILURE == MT_Chk_CashAcc(chr_l_client_a, chr_l_cash_acc, (char *)NULL, &int_retstat, l_debug_info_ptr) )
                     {
                        if ( int_retstat == IV_CRITCAL_ERROR_IND )
                        {
                           *int_p_retstat = int_retstat;

                           APL_GOBACK_FAIL
                        }
                        else if ( int_retstat == IV_NO_DATA_FOUND_ERR )
                        {
                           fprintf(fl_userlog,"Failed To Select The Cash Account from CCASHACC table as Account Not Found in system %s\n",chr_l_cash_acc);

                           CO_InsertErr(l_debug_info_ptr, ERR_ACCNOT_FND, chr_l_cash_acc, APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
                        }
                     }
							else
							{
							   if (APL_FAILURE == CO_Chk_CntryEnabled(  "INCOMING_MSG",
                                                               "VAL_IBAN_CASHACC",
                                                               &l_iban_cashacc,
                                                               l_debug_info_ptr ));
					  

					 			if((strlen(chr_l_cash_acc) > 10) && (l_iban_cashacc > 0))
					 			{
					      		memset(chr_l_iban_cash_acc, APL_NULL_CHAR , APL_IBANACC_LEN);

 		                    EXEC SQL SELECT * into :chr_l_iban_cash_acc FROM
                                   (SELECT GL_ACCOUNT 
        			                     FROM DL_CASHCLT
                   		            WHERE (CLIENT = :chr_l_client_a AND
    	                                     IBAN_CLT = :chr_l_cash_acc AND
                                           DEFAULT_CCY in ('Y','N')) 
                                    ORDER BY DEFAULT_CCY DESC)
                                    WHERE ROWNUM < 2;

									IS_ANY_ORA_ERROR

						      strcpy(l_ms_54x_struct_h.gl_client, chr_l_iban_cash_acc);
   		              }
					     	  else
					        {
					      		strncpy(l_ms_54x_struct_h.gl_client, chr_l_cash_acc,10);
									l_ms_54x_struct_h.gl_client[10] = APL_NULL_CHAR;
							  }
							}
                  } 

                  printf("\nAvi ONS : After IV_Rtv_CNameAcc :clnt_name  :%s: client :%s: \n", chr_l_cname,chr_l_client_a);


						strcpy((*p_ms_rep_struct_h + int_h_no_of_trd)->client,chr_l_client_a);
						strcpy(chr_g_str_client,(*p_ms_rep_struct_h + int_h_no_of_trd)->client);     
						strcpy(chr_cust_client,chr_l_client_a);
						chr_l_cname[65] = APL_NULL_CHAR;
						strcpy((*p_ms_rep_struct_h + int_h_no_of_trd)->clnt_name,chr_l_cname);
						fprintf(fl_userlog,"The client is %s\n", (*p_ms_rep_struct_h + int_h_no_of_trd)->client);
                  fprintf(fl_userlog,"The CName is %s\n", (*p_ms_rep_struct_h + int_h_no_of_trd)->clnt_name);
                  fprintf(fl_userlog,"The quantity. is %lf\n", (*p_ms_rep_struct_h + int_h_no_of_trd)->quantity);
						strcpy(chr_l_found_client,"T");
						int_h_no_of_trd++;
						continue;
					}
				}
				
          if((int_l_fiac_start==1)&&(int_l_fiac_occur==1))
                                {
                                  if(((strcmp(h_msg_tag,I_PLACERR_CODERR_98)==0)||(strcmp(h_msg_tag,I_SAFERR_CODERR_98)==0)||(strcmp(h_msg_tag,I_CNTRY_CODERR_98)==0))&&((strcmp(chr_h_qualifier,SAFE_QUALIFIER)==0)))
											 {
                                     memset(chr_l_place_code,APL_NULL_CHAR,50);
                                     strcpy(chr_l_place_code,chr_h_value);
                                     strcat(chr_l_place_code,APL_NULL_STRING);
												
												
												memset(chr_g_safe_val,NULL,47);
                                    strcpy(chr_g_safe_val,":");
                                    strcat(chr_g_safe_val,h_msg_tag);
                                    strcat(chr_g_safe_val,":");
                                    strcat(chr_g_safe_val,chr_l_place_code);	
                                  }
                                }	

 		

	



if(l_locrefno_found ==0)
{
   if(int_l_setprty_start==1)
   {
      if (((!strcmp(h_msg_tag,I_DOMCPACCR_98))
				||(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
				||(!strcmp(h_msg_tag,I_DOMCPACCS_98))
				|| (!strcmp(h_msg_tag,I_DOMCPACCP_98))) 
		&& ((!strcmp(chr_h_qualifier,MSG_DEAG_QUAL))
				||(!strcmp(chr_h_qualifier,REAG_QUALIFIER))))
      {
      

      	
                   (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                   memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                   memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                   memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                   memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                   strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                   if (!strcmp(chr_h_qualifier,MSG_DEAG_QUAL))
                   {
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DEAG_QUAL);
                    }
                   else
                   {
                      strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,REAG_QUALIFIER);
                    }
                               if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                               {
                       strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_str7,50);
                               }
                               else
                               {
                       strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                               }
                    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                    int_l_link_count++;
                       
	 	l_dereag_safe_exist = 0;          
	 
		if ((((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RF)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RVP)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CR)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RCR)) && (!strcmp(chr_h_qualifier,MSG_DEAG_QUAL)))|| (((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DF)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DVP)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CD)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DCD)) &&(!strcmp(chr_h_qualifier,REAG_QUALIFIER))))
         {
	    	memset(l_ms_54x_struct_h.domestic_cpclt, APL_NULL_CHAR , APL_CLIENT_LENGTH);
           memset(l_ms_54x_struct_h.domcpclt_cd_cname, APL_NULL_CHAR , 66 );
printf("**************h_msg_tag is :%s: \n", h_msg_tag);
           if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
           {
				  int_l_slash_count=0;	
              a=0;
              for(i=0;i<strlen(chr_h_value);i++)
              {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
              }
              memset(int_l_domcpac,APL_NULL_CHAR,APL_CLIENT_LENGTH);
              memset(chr_l_domcpac_cname,APL_NULL_CHAR,66);
              strncpy(int_l_domcpac,chr_h_value+a+1,10);
              int_l_domcpac[10] = APL_NULL_CHAR;
              		if(APL_FAILURE==IV_Rtv_CNameAcc(int_l_domcpac,
																	  chr_l_domcpac_cname,
																	  &int_retstat,l_debug_info_ptr))
              {
							strcpy(l_ms_54x_struct_h.domcpclt_cd_cname,int_l_domcpac);
              
               if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                  {
                     fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", int_l_domcpac);
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                     APL_GOBACK_FAIL
                  }
               else if (int_retstat == IV_CRITCAL_ERROR_IND)
                {
                  	CO_InsertErr(l_debug_info_ptr,
												DB_ERR_NO,
												"CACCOUNT",
												APL_NULL_STRING,
												APL_NULL_STRING,
												__LINE__,__FILE__);
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                      APL_GOBACK_FAIL
                 }
                 if (int_retstat == IV_NO_DATA_FOUND_ERR)
                 {
						 while(1)
						 {
               		memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
              	   	
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);


            			if (chr_l_str4[0] != ':')
            			{
								strcpy(l_ms_54x_struct_h.domcpclt_cd_cname,int_l_domcpac);
               			continue;      
            			}
						   l_dereag_safe_exist = 0; 
            			memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
            			memset(h_msg_tag, APL_NULL_CHAR , 4);
            			memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            			memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            			memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            			if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                       					                     h_msg_tag ,
                                      					      chr_h_value ,
                                            					l_debug_info_ptr ))
               		{
                  		fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                 			strcpy(chr_g_msg_sts, "RJT");     
                 			if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                         				                      "MESSAGE LINE NOT IN PROPER FORMAT",
																			  chr_g_str_client,
                                      				          (DEBUG_INFO_STRUCT_H **)NULL))
                 			{
                    			CO_ProcMonitor(APL_OUT_FILE,
                             			"Failed to insert into IINMSGRP.\n",
                             			NULL, NULL);
                 			}
                 			*int_p_retstat = IV_CRITCAL_ERROR_IND;
                 			APL_GOBACK_FAIL
               		}
							memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
			            strncpy(chr_h_qualifier,chr_h_value,5);

							if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
							{
                       	strcpy(chr_g_msg_sts,"RPR");
                       	if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", 
																			  "DOMESTIC COUNTER PARTY NOT FOUND",
																				chr_g_str_client,NULL) )
                       	{
                          	CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                       	}
 	   	               fprintf(fl_userlog,"Failed To Select Domestic Counterparty Name From ACCOUNT Table\n");
   	                  CO_InsertErr(l_debug_info_ptr,
													ERR_ACCNOT_FND,
													int_l_domcpac,
													APL_NULL_STRING,
													APL_NULL_STRING,
													__LINE__,__FILE__);
								int_l_setprty_start=0;
								break;
						 	}
							else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
										|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
									  && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))	
							{
						      l_dereag_safe_exist = 1; 
                    		memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                 			memset(chr_l_cname,APL_NULL_CHAR, 66 );
                  		memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                  		memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
								int_l_slash_count=0;
                  		a=0;
                  		for(i=0;i<strlen(chr_h_value);i++)
                  		{
                    			
                    			if (((chr_h_value[i]=='/') 
											&& (int_l_slash_count<2)
											&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     		|| ((chr_h_value[i]=='/') 
										&& (int_l_slash_count<3)
										&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    			{
                        		a=i;
                         		int_l_slash_count=int_l_slash_count+1;
                    			}
                  		}
                  		strncpy(chr_l_client_a,chr_h_value+a+1,10);
                 			chr_l_client_a[10] = APL_NULL_CHAR;
                 				
                  		strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                  		strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                  		if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, 
																				  chr_l_condident, 
																				  &int_l_exist_a, l_debug_info_ptr) )
                  		{	
									fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                    			APL_GOBACK_FAIL      
                  		}
                  		if ( int_l_exist_a )
                  		{
                   			if ( strlen( chr_l_client_a ) == 9 )
                   			{
                    				for ( i = 0; i < 6 ; i++ )
                    			 	{
                    					chr_l_new_client[i] = chr_l_client_a[i];
                    				}
                    				strcat(chr_l_new_client,"-");
                    				chr_l_substr_client[0] = chr_l_client_a[6] ;
                    				chr_l_substr_client[1] = chr_l_client_a[7] ;
                    				chr_l_substr_client[2] = chr_l_client_a[8] ;
                    				chr_l_substr_client[3] = APL_NULL_CHAR ;
                    				strcat(chr_l_new_client,chr_l_substr_client);
                    				strcpy( chr_l_client_a, chr_l_new_client);
                    			}
									if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                   			{
                      			for ( i = 0; i < 6 ; i++ )
                      			{
                         			chr_l_new_client[i] = chr_l_client_a[i];
                      			}
                      			strcat(chr_l_new_client,"-");
                      			chr_l_substr_client[0] = chr_l_client_a[7] ;
                      			chr_l_substr_client[1] = chr_l_client_a[8] ;
                      			chr_l_substr_client[2] = chr_l_client_a[9] ;
                      			chr_l_substr_client[3] = APL_NULL_CHAR ;
                      			strcat(chr_l_new_client,chr_l_substr_client);
                      			strcpy( chr_l_client_a, chr_l_new_client);
                    			}
                  		}
								printf("\nAvi ONS : B4 IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
                  		if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
								{
                        
                           if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                           {
                              fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", int_l_domcpac);
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
                          else if (int_retstat == IV_CRITCAL_ERROR_IND)
            		        {
                  				CO_InsertErr(l_debug_info_ptr, 
															DB_ERR_NO,
															"CACCOUNT",
															APL_NULL_STRING,
															APL_NULL_STRING,
															__LINE__,__FILE__);
                    				*int_p_retstat = IV_CRITCAL_ERROR_IND;
										APL_GOBACK_FAIL
                    		  }
                     	  if (int_retstat == IV_NO_DATA_FOUND_ERR)
								  {
       		                strcpy(chr_g_msg_sts,"RPR");
            		          if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", 
																					"DOMESTIC COUNTER PARTY NOT FOUND",
																					chr_g_str_client,NULL) )
                            {
                            	CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                            }
 		                      fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
                            CO_InsertErr(l_debug_info_ptr,
														 ERR_ACCNOT_FND,
													    chr_l_client_a,
														 APL_NULL_STRING,
														 APL_NULL_STRING,
														 __LINE__,__FILE__);
								  }
							  }
							  else 
							  {
                        	strcpy(l_ms_54x_struct_h.domestic_cpclt,chr_l_client_a);
                       		strcpy(l_ms_54x_struct_h.domcpclt_cd_cname,chr_l_cname);
							  }
								printf("\nAvi ONS : After b4 break IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
							  break;
						}
						else 
								continue;	
						}
					}
				}
				else
				{
				  l_read_safe=1; 
               strcpy(l_ms_54x_struct_h.domestic_cpclt,int_l_domcpac);
               strcpy(l_ms_54x_struct_h.domcpclt_cd_cname,chr_l_domcpac_cname);
				}
			}
			else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
         {
             strncpy(l_ms_54x_struct_h.domcpclt_cd_cname,chr_l_str7,66);
				 l_ms_54x_struct_h.domcpclt_cd_cname[65]=APL_NULL_CHAR;
				 printf("****1****");
				 printf("Domcpacname is :****%s\n",l_ms_54x_struct_h.domcpclt_cd_cname);
             int_retstat = IV_SUCCESS;
             if (APL_FAILURE == MS_Rtv_CNameAcc(l_ms_54x_struct_h.domcpclt_cd_cname,
                                                      l_ms_54x_struct_h.domestic_cpclt,
                                                      &int_retstat,
                                                      l_debug_info_ptr) )
            {
            	if ((int_retstat == IV_NO_DATA_FOUND_ERR)	|| (int_retstat == MORE_THAN_ONE_ROW))
               {
	     		printf("****2***"); 
							memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
							strcpy(chr_l_str4,chr_l_str5);
							while(1)
							{
                           memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           memset(h_msg_tag, APL_NULL_CHAR , 4);
                           memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                           if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                               h_msg_tag ,
                                                               chr_h_value ,
                                                               l_debug_info_ptr ))
                           {
                              fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                              strcpy(chr_g_msg_sts, "RJT");     
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                "MESSAGE LINE NOT IN PROPER FORMAT",
																				    chr_g_str_client,
                                                                (DEBUG_INFO_STRUCT_H **)NULL))
                              {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                          "Failed to insert into IINMSGRP.\n",
                                          NULL, NULL);
                              }
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
 					            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            					strncpy(chr_h_qualifier,chr_h_value,5);

                           if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                           {
                              strcpy(chr_g_msg_sts,"RPR");
                              if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", 
																					  "DOMESTIC COUNTER PARTY NOT FOUND",
																					  chr_g_str_client,NULL) )
                              {
                                 CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                              }

                              fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
                              CO_InsertErr(l_debug_info_ptr,
															ERR_ACCNOT_FND,
															chr_l_domcpac_cname,
															APL_NULL_STRING,
															APL_NULL_STRING,
															__LINE__,__FILE__);
										int_l_setprty_start=0;
										break;
                           }
                           else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
												|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
												&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                           {
										l_dereag_safe_exist = 1; 
									   memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                              memset(chr_l_cname,APL_NULL_CHAR, 66 );
                              memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                              memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
                    					
                    					if (((chr_h_value[i]=='/') 
												&& (int_l_slash_count<2)
												&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     				|| ((chr_h_value[i]=='/') 
												&& (int_l_slash_count<3)
												&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                              }
                              strncpy(chr_l_client_a,chr_h_value+a+1,10);
                              chr_l_client_a[10] = APL_NULL_CHAR;
                              
                              strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                              strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                              if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condident,&int_l_exist_a,l_debug_info_ptr))
                              {
                                 fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                                 APL_GOBACK_FAIL
                              }
                              if ( int_l_exist_a )
                              {
                                 if ( strlen( chr_l_client_a ) == 9 )
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[6] ;
                                    chr_l_substr_client[1] = chr_l_client_a[7] ;
                                    chr_l_substr_client[2] = chr_l_client_a[8] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 }
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                   					{
                      					for ( i = 0; i < 6 ; i++ )
                      					{
                         					chr_l_new_client[i] = chr_l_client_a[i];
                      					}
                      					strcat(chr_l_new_client,"-");
                      					chr_l_substr_client[0] = chr_l_client_a[7] ;
                      					chr_l_substr_client[1] = chr_l_client_a[8] ;
                      					chr_l_substr_client[2] = chr_l_client_a[9] ;
                      					chr_l_substr_client[3] = APL_NULL_CHAR ;
                      					strcat(chr_l_new_client,chr_l_substr_client);
                      					strcpy( chr_l_client_a, chr_l_new_client);
                    					}
                              }
								printf("\nAvi ONS : B4 IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
                              if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
                              {
                              
                                 if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                                 {
                                    fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                    APL_GOBACK_FAIL
                                 }
                                else if (int_retstat == IV_CRITCAL_ERROR_IND)
                                 {
                                    CO_InsertErr(l_debug_info_ptr, 
																	DB_ERR_NO,
																	"CACCOUNT",
																	APL_NULL_STRING,
																	APL_NULL_STRING,__LINE__,__FILE__);
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;

                                    APL_GOBACK_FAIL

                                 }
                                 if (int_retstat == IV_NO_DATA_FOUND_ERR)
                                 {
                                   strcpy(chr_g_msg_sts,"RPR");
                                   if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", 
																							 "DOMESTIC COUNTER PARTY NOT FOUND",
																							  chr_g_str_client,NULL) )
                                   {
                                       CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                                   }

                                   fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
                                   CO_InsertErr(l_debug_info_ptr,
															     ERR_ACCNOT_FND,
																  chr_l_client_a,
																  APL_NULL_STRING,
																  APL_NULL_STRING,__LINE__,__FILE__);
                                 }
                              }
                              else
                              {
                                 strcpy(l_ms_54x_struct_h.domestic_cpclt,chr_l_client_a);
                                 strcpy(l_ms_54x_struct_h.domcpclt_cd_cname,chr_l_cname);
                              }
						printf("\nAvi ONS : After b4 break IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
										break;
                           }
                           else
									{
									   memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                           	
										fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
										chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
										continue;

									}
							}
               }
				}
				
             else
             {
		printf("****3***");
                              l_read_safe=1;
              }
					
			}	
			else if (!strcmp(h_msg_tag,I_DOMCPACCP_98))	
			{
                     a=0;
                     for(i=0;i<strlen(chr_h_value);i++)
                     {
                        if (chr_h_value[i]=='/')
                        {
                           a=i;
                        }
                     }
                     memset(chr_l_bic_code, APL_NULL_CHAR, 13);
                     strncpy(chr_l_bic_code,chr_h_value+a+1,12);
                     chr_l_bic_code[12] = APL_NULL_CHAR;

				
				if(l_remtrd_22F95P_exist)
				{
					if((strncmp(chr_l_bic_code, I_BICCODERR_REMOTE, 8) == 0) && (strlen(chr_l_bic_code) == 8 ) )
					{
						if(int_l_trca_spri)
						{
							int_l_propremotetrd = 1;
							int_l_owni_found = 0;
							int_l_nonprop_remtrd = 0;
							strcpy(l_ms_54x_struct_h.dl_class, PROPREMOTEDEAL);
						}
						else if((int_l_setr_trad) || (int_l_setr_turn))
						{
							int_l_nonprop_remtrd = 1;
							int_l_owni_found = 0;
							int_l_propremotetrd = 0;
							strcpy(l_ms_54x_struct_h.dl_class, NONPROPREMOTEDEAL);
						}
					}
					else
					{
						int_l_nonprop_remtrd = 0;
						int_l_propremotetrd = 0;
						if(int_l_setr_trad)
						{
							strcpy(l_ms_54x_struct_h.dl_class, NORMALDEAL);
						}
						else if(int_l_setr_turn)
						{
							
							
							
							strcpy(l_ms_54x_struct_h.dl_class, NORMALDEAL);
							
							
						}
					}
				}
				

                     int_l_bogcode = 0;
							
                     
							printf("\n The TR Inc l_debuglist was due to Failure in the CO_Chk_SplVal Fn : chr_l_bic_code :%s: domestic_cpclt : %s: domestic_cpclt nam : %s:\n", chr_l_bic_code, l_ms_54x_struct_h.domestic_cpclt, l_ms_54x_struct_h.domcpclt_cd_cname );
                     sqlca.sqlcode = 0L;

                    if ( APL_FAILURE == CO_Chk_SplVal("INCOMING_MSG", 
																	  "BIC_CODE_87A", 
																	   chr_l_bic_code, 
																		&int_l_bogcode, 
																		l_debug_info_ptr) )
                     {
							
                        sqlca.sqlcode = 0L;	
                        *int_p_retstat = IV_CRITCAL_ERROR_IND;
                        APL_GOBACK_FAIL
                     }
							
                     sqlca.sqlcode = 0L;

                     if ( int_l_bogcode )
                     {
                        strcpy(l_ms_54x_struct_h.dl_class, EXTERNALDEAL);
                     }

                     int_retstat = IV_SUCCESS;
                      if (APL_FAILURE == IV_Rtv_BICCDAccNew( chr_l_bic_code,
                                                           l_ms_54x_struct_h.domestic_cpclt,
                                                         l_ms_54x_struct_h.domcpclt_cd_cname,
                                                         &int_retstat, l_debug_info_ptr) )	
							 {
							
                        if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW_FOUND)||(int_retstat==MST_CLI_SAME))
								{
									strcpy(l_ms_54x_struct_h.domcpclt_cd_cname,chr_l_bic_code);
								 while(1)
								 {
                     		memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                     		
                     		fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     		chr_l_str4[strlen(chr_l_str4)-1]='\0';
									printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);

 		                     if (chr_l_str4[0] != ':')
                     		{
                        		continue;      
                     		}
                     		memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                     		memset(h_msg_tag, APL_NULL_CHAR , 4);
                     		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     		memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     		if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                           		                              h_msg_tag ,
                                 		                        chr_h_value ,
                                             		            l_debug_info_ptr ))
                     		{
                        		fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                        		strcpy(chr_g_msg_sts, "RJT");     
                        		if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                              		                            "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                    		                      (DEBUG_INFO_STRUCT_H **)NULL))
                        		{
                           		CO_ProcMonitor(APL_OUT_FILE,
                                 		   "Failed to insert into IINMSGRP.\n",
                                    		NULL, NULL);
                        		}
                        		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                        		APL_GOBACK_FAIL
                     		}
 						         memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            					strncpy(chr_h_qualifier,chr_h_value,5);

                     		if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                     		{
                        		strcpy(chr_g_msg_sts,"RPR");
                        		if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", 
																					  "DOMESTIC COUNTER PARTY NOT FOUND",
																					  chr_g_str_client,NULL))
                        		{
                           		CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                        		}
 		                        fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
       		                  CO_InsertErr(l_debug_info_ptr,
             		                           ERR_ACCNOT_FND,
                   		                     int_l_domcpac,
                         		               APL_NULL_STRING,
                               		         APL_NULL_STRING,
                                     		   __LINE__,__FILE__);
										int_l_setprty_start=0;
										break;
                     		}
                     		else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
												|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
												&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                     		{
										l_dereag_safe_exist = 1; 
                        		memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                        		memset(chr_l_cname,APL_NULL_CHAR, 66 );
                        		memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                        		memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                        		a=0;
                        		for(i=0;i<strlen(chr_h_value);i++)
                        		{
                    				
                    					if (((chr_h_value[i]=='/') 
													&& (int_l_slash_count<2)
													&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     				|| ((chr_h_value[i]=='/') 
												&& (int_l_slash_count<3)
												&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                        		}
                        		strncpy(chr_l_client_a,chr_h_value+a+1,10);
                        		chr_l_client_a[10] = APL_NULL_CHAR;
                        		
                        		strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                        		strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                        		if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, chr_l_condident, &int_l_exist_a, l_debug_info_ptr) )
                        		{
                           		fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                           		APL_GOBACK_FAIL
                        		}
                        		if ( int_l_exist_a )
                        		{
                           		if ( strlen( chr_l_client_a ) == 9 )
                           		{
                              		for ( i = 0; i < 6 ; i++ )
                              		{
                                 		chr_l_new_client[i] = chr_l_client_a[i];
                              		}
                              		strcat(chr_l_new_client,"-");
                              		chr_l_substr_client[0] = chr_l_client_a[6] ;
                              		chr_l_substr_client[1] = chr_l_client_a[7] ;
                              		chr_l_substr_client[2] = chr_l_client_a[8] ;
                              		chr_l_substr_client[3] = APL_NULL_CHAR ;
                              		strcat(chr_l_new_client,chr_l_substr_client);
                              		strcpy( chr_l_client_a, chr_l_new_client);
                           		}
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                   					{
                      					for ( i = 0; i < 6 ; i++ )
                      					{
                         					chr_l_new_client[i] = chr_l_client_a[i];
                      					}
                      					strcat(chr_l_new_client,"-");
                      					chr_l_substr_client[0] = chr_l_client_a[7] ;
                      					chr_l_substr_client[1] = chr_l_client_a[8] ;
                      					chr_l_substr_client[2] = chr_l_client_a[9] ;
                      					chr_l_substr_client[3] = APL_NULL_CHAR ;
                      					strcat(chr_l_new_client,chr_l_substr_client);
                      					strcpy( chr_l_client_a, chr_l_new_client);
                    					}
                        		}
							printf("\nAvi ONS : B4 IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
                        		if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
                        		{
                              
                                 if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                                 {
                                    fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                    APL_GOBACK_FAIL
                                 }
                          			if (int_retstat == IV_CRITCAL_ERROR_IND)
                          			{
                              		CO_InsertErr(l_debug_info_ptr,
                                    		         DB_ERR_NO,
                                          		   "CACCOUNT",
                                            			APL_NULL_STRING,
                                             		APL_NULL_STRING,
                                             		__LINE__,__FILE__);
                              		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                              		APL_GOBACK_FAIL
                          			}
                          			if (int_retstat == IV_NO_DATA_FOUND_ERR)
                          			{
                            			strcpy(chr_g_msg_sts,"RPR");
                            			if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR",
                                    			                           "DOMESTIC COUNTER PARTY NOT FOUND",
                                             			                   chr_g_str_client,NULL) )
                            			{
                              			CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                            			}
 			                           fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
         			                  CO_InsertErr(l_debug_info_ptr,
                                    			       ERR_ACCNOT_FND,
                                           			chr_l_client_a,
                                           			APL_NULL_STRING,
                                           			APL_NULL_STRING,
                                           			__LINE__,__FILE__);
                          			}
                       			}
                       			else
                       			{
                           		strcpy(l_ms_54x_struct_h.domestic_cpclt,chr_l_client_a);
                           		strcpy(l_ms_54x_struct_h.domcpclt_cd_cname,chr_l_cname);
                       			}
						printf("\nAvi ONS : After b4 break IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
										break;
                  		}
                  		else
                        	continue;
							  }
               		}
						}
            
				 else
				{
					l_read_safe=1; 
				}
				
			}	
			else if (!strcmp(h_msg_tag,I_DOMCPACCS_98))
			{
				fprintf(fl_userlog,"PARTY msg_tag-95S NOT SUPPORTED FOR DEAG/REAG\n");
				CO_ProcMonitor(APL_OUT_FILE, "PARTY msg_tag-95S NOT SUPPORTED FOR DEAG/REAG\n", NULL, NULL);
				
			}
                       
                       if(l_read_safe==1)
                       {
                               if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                               {
                                       strcpy(chr_l_str4,chr_l_str5);
                               }
                               else
                               {
                            memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);
                            fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4);
                               }

                          while(1)
                          {

                            if (chr_l_str4[0] != ':')
                            {
                               memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);
                               fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4); 
                               continue;      
                            }
			    printf("****printing chr_l_str4:%s\n",chr_l_str4);
                            memset(chr_l_str, APL_NULL_CHAR , ISO_LINERR_LENGTH);
                            memset(h_msg_tag, APL_NULL_CHAR , 4);
                            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                            memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                            memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                            if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                                h_msg_tag ,
                                                                chr_h_value ,
                                                                l_debug_info_ptr ))
                            {
                               fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                               strcpy(chr_g_msg_sts, "RJT");     
                               if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                 "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                                                 (DEBUG_INFO_STRUCT_H **)NULL))
                               {
                                  CO_ProcMonitor(APL_OUT_FILE,
                                           "Failed to insert into IINMSGRP.\n",
                                           NULL, NULL);
                               }
                               *int_p_retstat = IV_CRITCAL_ERROR_IND;
                               APL_GOBACK_FAIL
                            }
                            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                            strncpy(chr_h_qualifier,chr_h_value,5);
                                                                       if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))

                            {
                               fprintf(fl_userlog,"97a msg_tag not int_found in DEAG/REAG block\n");
                               break;
                            }
                            else if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                                     || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                                     && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                            {
                                                       l_dereag_safe_exist = 1; 
                                                                               break;
                                                                       }
                                                                       else
                                                                       {
                               memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);
                               fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4);
                                                                       }
                                                       }
                               }

                       
                       if(l_dereag_safe_exist == 1)
                       {
                       (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                          memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                          memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                          memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                          memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                          strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                          strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DEAG_SAFE_QUAL);
                          strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                          strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                          int_l_link_count++;
                       }
                       

                               int_l_deag_reag =0;
		 }
		 
		else
		{
                   	
                   	if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                   	{
                       		strcpy(chr_l_str4,chr_l_str5);
                    	}
                    	else
                    	{
                        	memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);
                        	fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4);
                         }

                          while(1)
                          {

                            if (chr_l_str4[0] != ':')
                            {
                               continue;      
                            }
			    printf("****printing chr_l_str4:%s\n",chr_l_str4);
                            memset(chr_l_str, APL_NULL_CHAR , ISO_LINERR_LENGTH);
                            memset(h_msg_tag, APL_NULL_CHAR , 4);
                            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                            memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                            memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                            if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                                h_msg_tag ,
                                                                chr_h_value ,
                                                                l_debug_info_ptr ))
                            {
                               fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                               strcpy(chr_g_msg_sts, "RJT");     
                               if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                 "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                                                 (DEBUG_INFO_STRUCT_H **)NULL))
                               {
                                  CO_ProcMonitor(APL_OUT_FILE,
                                           "Failed to insert into IINMSGRP.\n",
                                           NULL, NULL);
                               }
                               *int_p_retstat = IV_CRITCAL_ERROR_IND;
                               APL_GOBACK_FAIL
                            }
                            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                            strncpy(chr_h_qualifier,chr_h_value,5);
                            if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                            {
                               fprintf(fl_userlog,"97a msg_tag not int_found in DEAG/REAG block\n");
                               break;
                            }
                            else if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                                     || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                                     && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                            {
                                      l_dereag_safe_exist = 1; 
                                      break;
                             }
                             else
                             {
                               memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);
                               fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4);
                              }
                             }
                               

                       		
                       		if(l_dereag_safe_exist == 1)
                       		{
                       			(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                          		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                          		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                          		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                          		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                          		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                          		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DEAG_SAFE_QUAL);
                          		strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                          		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                          		int_l_link_count++;
                       		}

		}
		 continue;	
	  }
	}
}
else
{
   strncpy(l_ms_54x_struct_h.domestic_cpclt,chr_h_euro_domcpac,10);
	l_ms_54x_struct_h.domestic_cpclt[10]=APL_NULL_CHAR;
}

 	




	if (int_l_setprty_start==1) 
  	{
  		if (((!strcmp(h_msg_tag,I_DOMCPACCR_98))
				||(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
				||(!strcmp(h_msg_tag,I_DOMCPACCS_98))
				|| (!strcmp(h_msg_tag,I_DOMCPACCP_98))) 
		&& ((!strcmp(chr_h_qualifier,SELL_QUALIFIER))
				||(!strcmp(chr_h_qualifier,MSG_BUYR_QUAL))))
 		{
        	if ( ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RF)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RVP) 
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CR)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RCR))
					&& (!strcmp(chr_h_qualifier,SELL_QUALIFIER)) ) 
				|| ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DF)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DVP) 
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CD)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DCD))
					&& (!strcmp(chr_h_qualifier,MSG_BUYR_QUAL))) )
				{
					if(!strcmp(h_msg_tag,I_DOMCPACCS_98))
					{
						strcpy(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING);
						strcpy(l_ms_54x_struct_h.countclt_cname,APL_NULL_STRING);
						fprintf(fl_userlog,"Tag 95S int_found for Counter-party\n");
						CO_ProcMonitor(APL_OUT_FILE, "Tag 95S int_found for Counter-party\n", NULL, NULL);
					}
					else if(strcmp(h_msg_tag,I_DOMCPACCQ_98))
					{
						strcpy(chr_countacc_line,chr_l_str4);
				      memset(chr_l_countacc_tag, APL_NULL_CHAR , 4);
          		   memset(chr_l_countacc_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            		memset(chr_l_countacc_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            		strcpy(chr_l_countacc_tag,h_msg_tag);
            		strcpy(chr_l_countacc_qualifier,chr_h_qualifier);
            		strcpy(chr_l_countacc_value,chr_h_value);			
						while(1)
						{	
  	         	   	memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
               		
							fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
							chr_l_str4[strlen(chr_l_str4)-1]='\0';
							printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
 		           		memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
   		         	memset(h_msg_tag, APL_NULL_CHAR , 4);
      		      	memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
         		   	memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            			memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            			if (APL_FAILURE == MS_Proc_SplitStr (   chr_l_str4,
               			                                 h_msg_tag ,
                  			                              chr_h_value ,
                     			                           l_debug_info_ptr ))
              			{
                 				 fprintf(fl_userlog,
												"Failed to Split the Message Line %s\n",
												chr_l_str4);
                  			 strcpy(chr_g_msg_sts, "RJT");     
                  	 		if	( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                        	                       				"MESSAGE LINE NOT IN PROPER FORMAT",
																				 chr_g_str_client,
                              	                      		(DEBUG_INFO_STRUCT_H **)NULL))
                     		{
                        		CO_ProcMonitor(APL_OUT_FILE,
                           		      "Failed to insert into IINMSGRP.\n",
                              		    NULL, NULL);
                     		}
                  			*int_p_retstat = IV_CRITCAL_ERROR_IND;
                  			APL_GOBACK_FAIL
              			}

 		            	APL_IF_DEBUG
   		         	{
      		         	 printf("the h_msg_tag is %s\n",h_msg_tag);
         		       	 printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
               		}
							memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
							strncpy(chr_h_qualifier,chr_h_value,5);
							if((((!strcmp(h_msg_tag,I_CLIENTA_98)) || (!strcmp(h_msg_tag,I_CLIENTB_98))) && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER))) )
							{
								strcpy(chr_countacc_next_str,chr_l_str4);
								break;
							}
							else if((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
							{ 
								strcpy(chr_countacc_next_str,chr_l_str4);
								int_l_setprty_start=0;
								break;
							}
							else 
								continue;
						}
					}
					else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
					{
						strcpy(chr_countacc_line,chr_l_str7);  
						
						 strcpy(chr_l_str4,chr_l_str5);
                  memset(chr_l_countacc_tag, APL_NULL_CHAR , 4);
                  memset(chr_l_countacc_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  memset(chr_l_countacc_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  strcpy(chr_l_countacc_tag,h_msg_tag);
                  strcpy(chr_l_countacc_qualifier,chr_h_qualifier);
                  strcpy(chr_l_countacc_value,chr_h_value);
                  while(1)
                  {
                     memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                     memset(h_msg_tag, APL_NULL_CHAR , 4);
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     if (APL_FAILURE == MS_Proc_SplitStr (   chr_l_str4,
                                                         h_msg_tag ,
                                                         chr_h_value ,
                                                         l_debug_info_ptr ))
                     {
                            fprintf(fl_userlog,
                                    "Failed to Split the Message Line %s\n",
                                    chr_l_str4);
                            strcpy(chr_g_msg_sts, "RJT");     
                           if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                            "MESSAGE LINE NOT IN PROPER FORMAT",
                                                             chr_g_str_client,
                                                            (DEBUG_INFO_STRUCT_H **)NULL))
                           {
                              CO_ProcMonitor(APL_OUT_FILE,
                                       "Failed to insert into IINMSGRP.\n",
                                        NULL, NULL);
                           }
                           *int_p_retstat = IV_CRITCAL_ERROR_IND;
                           APL_GOBACK_FAIL
                     }

                     APL_IF_DEBUG
                     {
                         printf("the h_msg_tag is %s\n",h_msg_tag);
                         printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
                     }
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     strncpy(chr_h_qualifier,chr_h_value,5);
                     if((((!strcmp(h_msg_tag,I_CLIENTA_98)) || (!strcmp(h_msg_tag,I_CLIENTB_98))) && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER))) )
                     {
                        strcpy(chr_countacc_next_str,chr_l_str4);
                        break;
                     }
                     else if((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                     {
                        strcpy(chr_countacc_next_str,chr_l_str4);
                        int_l_setprty_start=0;
                        break;
                     }
                     else
		    				{
                        memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                     	
								fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
								chr_l_str4[strlen(chr_l_str4)-1]='\0';
								printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
                        continue;
		      			}
                  }
					}	
				}
		}
	}
			













 

   if(int_l_setprty_start==1)
   {
      if (((!strcmp(h_msg_tag,I_DOMCPACCR_98))
         ||(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
         ||(!strcmp(h_msg_tag,I_DOMCPACCS_98))
         || (!strcmp(h_msg_tag,I_DOMCPACCP_98)))
      && ((!strcmp(chr_h_qualifier,MSG_BUYR_QUAL))
         ||(!strcmp(chr_h_qualifier,SELL_QUALIFIER))))
      {
            if ( ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RF)
                     ||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RVP)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CR)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RCR))
                  && (!strcmp(chr_h_qualifier,MSG_BUYR_QUAL)))
               || ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DF)
                     ||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DVP)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CD)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DCD))
                  && (!strcmp(chr_h_qualifier,SELL_QUALIFIER))) )
            {
               memset(chr_l_inst_client,APL_NULL_CHAR,36);
               memset(chr_l_inst_cname,APL_NULL_CHAR,66);
               
		(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,INSTRCT_QUALIFIER);
	        strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
		int_l_link_count++;

               if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
               {
                  int_l_slash_count=0;
                  a=0;
                  for(i=0;i<strlen(chr_h_value);i++)
                  {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
                  }
                  strncpy( l_ms_54x_struct_h.inst_clnt_clr_name,chr_h_value+a+1,35); 
                  chr_l_inst_client[35]=APL_NULL_CHAR;
               }
               else if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
                  strncpy(l_ms_54x_struct_h.inst_clnt_clr_name,chr_l_str7,65);
                  l_ms_54x_struct_h.inst_clnt_clr_name[65]=APL_NULL_CHAR;
               }
               else if(!strcmp(h_msg_tag,I_DOMCPACCP_98))
               {
                     a=0;
                     for(i=0;i<strlen(chr_h_value);i++)
                     {
                        if (chr_h_value[i]=='/')
                        {
                           a=i;
                        }
                     }
                     strncpy( l_ms_54x_struct_h.inst_clnt_clr_name,chr_h_value+a+1,35);   
                     strcat(l_ms_54x_struct_h.inst_clnt_clr_name,APL_NULL_STRING);
               }

               if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
                  strcpy(chr_l_str4,chr_l_str5);
               }
               else
               {
                  memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                  fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                  chr_l_str4[strlen(chr_l_str4)-1]='\0';
                  printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
               }
               while(1)
               {
                     memset(h_msg_tag, APL_NULL_CHAR , 4);
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     if (APL_FAILURE == MS_Proc_SplitStr (chr_l_str4,
                                                         h_msg_tag ,
                                                         chr_h_value ,
                                                         l_debug_info_ptr ))
                     {
                        fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                        strcpy(chr_g_msg_sts, "RJT");
                        if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                          "MESSAGE LINE NOT IN PROPER FORMAT",
                                                           chr_g_str_client,
                                                          (DEBUG_INFO_STRUCT_H **)NULL))
                        {
                           CO_ProcMonitor(APL_OUT_FILE,
                                    "Failed to insert into IINMSGRP.\n",
                                    NULL, NULL);
                        }
                        *int_p_retstat = IV_CRITCAL_ERROR_IND;
                        APL_GOBACK_FAIL
                     }

                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     strncpy(chr_h_qualifier,chr_h_value,5);
                     if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                           || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                        && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                     {
			l_buyrsellsafe_exist = 1;  
                        memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                        memset(chr_l_cname,APL_NULL_CHAR, 66 );
                        int_l_slash_count=0;
                        a=0;
                        for(i=0;i<strlen(chr_h_value);i++)
                        {
                           if (((chr_h_value[i]=='/')
                                 && (int_l_slash_count<2)
                                 && (!strcmp(h_msg_tag,I_CLIENTA_98)))
                              || ((chr_h_value[i]=='/')
                                 && (int_l_slash_count<3)
                                 && (!strcmp(h_msg_tag,I_CLIENTB_98))))
                           {
                              a=i;
                              int_l_slash_count=int_l_slash_count+1;
                           }
                        }
                       	strncpy(l_ms_54x_struct_h.inst_client,chr_h_value+a+1,35); 
								strcat(l_ms_54x_struct_h.inst_client,APL_NULL_STRING);
                       	break;
                     }
                     else if ((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                     {
                       memset(l_ms_54x_struct_h.inst_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                       int_l_setprty_start=0;
                       break;
                     }
                     else
							{
                        memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);
               			fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
               			chr_l_str4[strlen(chr_l_str4)-1]='\0';
               			printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
                        continue;
							}
               }
            }
              
	     if(l_buyrsellsafe_exist == 1)
	     {
		    (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
		     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
		     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
		     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
		     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
	             strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
	             strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_BUYSELL_QUAL);
		     strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
		     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
		    int_l_link_count++;
	     }
         }
      }




   if(int_l_setprty_start==1)
   {
      if (((!strcmp(h_msg_tag,I_DOMCPACCR_98))
         ||(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
         ||(!strcmp(h_msg_tag,I_DOMCPACCS_98))
         || (!strcmp(h_msg_tag,I_DOMCPACCP_98)))
      && ((!strcmp(chr_h_qualifier,MSG_DEL1_QUAL))
         ||(!strcmp(chr_h_qualifier,REI1_QUALIFIER))))
      {
            if ( ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RF)
                     ||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RVP)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CR)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RCR))
                  && (!strcmp(chr_h_qualifier,MSG_DEL1_QUAL)))
               || ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DF)
                     ||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DVP)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CD)
							||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DCD))
                  && (!strcmp(chr_h_qualifier,REI1_QUALIFIER))) )
            {


		
		(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
		if (!strcmp(chr_h_qualifier,MSG_DEL1_QUAL))
		{
		  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DEL1_QUAL);
		}
		else
		{
	       	   strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,REI1_QUALIFIER);
		}
		strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
        	int_l_link_count++;
	        

               if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
               {
                  int_l_slash_count=0;
                  a=0;
                  for(i=0;i<strlen(chr_h_value);i++)
                  {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
                  }
                  strncpy( l_ms_54x_struct_h.interprtynm,chr_h_value+a+1,35);
                  l_ms_54x_struct_h.interprtynm[35]=APL_NULL_CHAR;
               }
               else if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
                  strncpy(l_ms_54x_struct_h.interprtynm,chr_l_str7,65);
                  l_ms_54x_struct_h.interprtynm[65]=APL_NULL_CHAR;
               }
               else if(!strcmp(h_msg_tag,I_DOMCPACCP_98))
               {
                     a=0;
                     for(i=0;i<strlen(chr_h_value);i++)
                     {
                        if (chr_h_value[i]=='/')
                        {
                           a=i;
                        }
                     }
                     strcpy( l_ms_54x_struct_h.interprtynm,chr_h_value+a+1);
                     strcat(l_ms_54x_struct_h.interprtynm,APL_NULL_STRING);
               }

					if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
						strcpy(chr_l_str4,chr_l_str5);
					}
					else
					{
                     memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
                     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
					}

               while(1)
               {
                     memset(h_msg_tag, APL_NULL_CHAR , 4);
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     if (APL_FAILURE == MS_Proc_SplitStr (chr_l_str4,
                                                         h_msg_tag ,
                                                         chr_h_value ,
                                                         l_debug_info_ptr ))
                     {
                        fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                        strcpy(chr_g_msg_sts, "RJT");
                        if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                          "MESSAGE LINE NOT IN PROPER FORMAT",
                                                           chr_g_str_client,
                                                          (DEBUG_INFO_STRUCT_H **)NULL))
                        {
                           CO_ProcMonitor(APL_OUT_FILE,
                                    "Failed to insert into IINMSGRP.\n",
                                    NULL, NULL);
                        }
                        *int_p_retstat = IV_CRITCAL_ERROR_IND;
                        APL_GOBACK_FAIL
                     }

                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     strncpy(chr_h_qualifier,chr_h_value,5);
                     if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                           || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                        && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                     {
			l_dereiexist = 1;  
                        int_l_slash_count=0;
                        a=0;
                        for(i=0;i<strlen(chr_h_value);i++)
                        {
                           if (((chr_h_value[i]=='/')
                                 && (int_l_slash_count<2)
                                 && (!strcmp(h_msg_tag,I_CLIENTA_98)))
                              || ((chr_h_value[i]=='/')
                                 && (int_l_slash_count<3)
                                 && (!strcmp(h_msg_tag,I_CLIENTB_98))))
                           {
                              a=i;
                              int_l_slash_count=int_l_slash_count+1;
                           }
                        }
                        strcpy(l_ms_54x_struct_h.interprty,chr_h_value+a+1);
								break;
                     }
                     else if ((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                     {
                       memset(l_ms_54x_struct_h.interprty,APL_NULL_CHAR,36);
                       int_l_setprty_start=0;
                       break;
                     }
                     else
							{
                     	memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                     	fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     	chr_l_str4[strlen(chr_l_str4)-1]='\0';
                     	printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
                         continue;
							}
               }
            }

                if(l_dereiexist == 1)
		{
  			 (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
			 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
			 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,DRI_SAFE_QUAL);
			 strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
			 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
			 int_l_link_count++;
         	   }
	    
         }
      }



   if (int_l_setprty_start==1)
   {
      if (((!strcmp(h_msg_tag,I_DOMCPACCR_98))
            ||(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
            ||(!strcmp(h_msg_tag,I_DOMCPACCS_98))
            || (!strcmp(h_msg_tag,I_DOMCPACCP_98)))
      && ((!strcmp(chr_h_qualifier,MSG_DECU_QUAL))
            ||(!strcmp(chr_h_qualifier,RECU_QUALIFIER))))
      {
         if ( ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RF)
                  ||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RVP)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CR)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RCR))
               && (!strcmp(chr_h_qualifier,MSG_DECU_QUAL)) )
            || ( ((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DF)
                  ||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DVP)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CD)
						||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DCD))
               && (!strcmp(chr_h_qualifier,RECU_QUALIFIER))) )
            {
					if(!strcmp(h_msg_tag,I_DOMCPACCS_98))
					{
						strcpy(l_ms_54x_struct_h.clientof,APL_NULL_STRING);
						strcpy(l_ms_54x_struct_h.clientof_cname,APL_NULL_STRING);
						fprintf(fl_userlog,"Tag 95S int_found for Custodian\n");
						CO_ProcMonitor(APL_OUT_FILE, "Tag 95S int_found for Custodian\n", NULL, NULL);
					}
               else if(strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
						printf("l_str4 is %s\n",chr_l_str4);
						printf("DECU_RECU_LINE is %s\n",chr_decu_recu_line);
                  strcpy(chr_decu_recu_line,chr_l_str4);
                  memset(chr_l_decu_recu_tag, APL_NULL_CHAR , 4);
                  memset(chr_l_decu_recu_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  memset(chr_l_decu_recu_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  strcpy(chr_l_decu_recu_tag,h_msg_tag);
                  strcpy(chr_l_decu_recu_qualifier,chr_h_qualifier);
                  strcpy(chr_l_decu_recu_value,chr_h_value);
                  while(1)
                  {
                     if (chr_l_read_line == 'F')
                     {
                        memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                        fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4);
                     }
                     memset(h_msg_tag, APL_NULL_CHAR , 4);
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     if (APL_FAILURE == MS_Proc_SplitStr (   chr_l_str4,
                                                         h_msg_tag ,
                                                         chr_h_value ,
                                                         l_debug_info_ptr ))
                     {
                            fprintf(fl_userlog,
                                    "Failed to Split the Message Line %s\n",
                                    chr_l_str4);
                            strcpy(chr_g_msg_sts, "RJT");     
                           if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                     "MESSAGE LINE NOT IN PROPER FORMAT",
                                                             chr_g_str_client,
                                                            (DEBUG_INFO_STRUCT_H **)NULL))
                           {
                              CO_ProcMonitor(APL_OUT_FILE,
                                       "Failed to insert into IINMSGRP.\n",
                                        NULL, NULL);
                           }
                           *int_p_retstat = IV_CRITCAL_ERROR_IND;
                           APL_GOBACK_FAIL
                     }

                     APL_IF_DEBUG
                     {
                         printf("the h_msg_tag is %s\n",h_msg_tag);
                         printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
                     }
						printf("l_str4 is %s\n",chr_l_str4);
						printf("DECU_RECU_LINE is %s\n",chr_decu_recu_line);
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     strncpy(chr_h_qualifier,chr_h_value,5);
                     if((((!strcmp(h_msg_tag,I_CLIENTA_98)) || (!strcmp(h_msg_tag,I_CLIENTB_98))) && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER))) )
                     {
                        strcpy(chr_decu_recu_next_str,chr_l_str4);
                        break;
                     }
                     else if((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                     {
                        strcpy(chr_decu_recu_next_str,chr_l_str4);
                        int_l_setprty_start=0;
                        break;
                     }
                     else if (!strncmp(h_msg_tag,NARR_SETPRTY,3))
                     {

                        while(1)
                        {
                           memset(chr_l_str4, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4);
                           if (chr_l_str4[0] == ':')
                           {
                              chr_l_read_line = 'T';
                              break;
                           }
                           else
                           {
                              continue;
                           }
                        }
                     }
                     else
                        continue;
                  }
               }
               else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
                  strcpy(chr_decu_recu_line,chr_l_str7);
                  strcpy(chr_l_str4,chr_l_str5);
                  memset(chr_l_decu_recu_tag, APL_NULL_CHAR , 4);
                  memset(chr_l_decu_recu_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  memset(chr_l_decu_recu_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  strcpy(chr_l_decu_recu_tag,h_msg_tag);
                  strcpy(chr_l_decu_recu_qualifier,chr_h_qualifier);
                  strcpy(chr_l_decu_recu_value,chr_h_value);
                  while(1)
                  {
                     memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                     memset(h_msg_tag, APL_NULL_CHAR , 4);
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     if (APL_FAILURE == MS_Proc_SplitStr (   chr_l_str4,
                                                         h_msg_tag ,
                                                         chr_h_value ,
                                                         l_debug_info_ptr ))
                     {
                            fprintf(fl_userlog,
                                    "Failed to Split the Message Line %s\n",
                                    chr_l_str4);
                            strcpy(chr_g_msg_sts, "RJT");
                           if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                      "MESSAGE LINE NOT IN PROPER FORMAT",
                                                             chr_g_str_client,
                                                            (DEBUG_INFO_STRUCT_H **)NULL))
                           {
                              CO_ProcMonitor(APL_OUT_FILE,
                                       "Failed to insert into IINMSGRP.\n",
                                        NULL, NULL);
                           }
                           *int_p_retstat = IV_CRITCAL_ERROR_IND;
                           APL_GOBACK_FAIL
                     }

                     APL_IF_DEBUG
                     {
                         printf("the h_msg_tag is %s\n",h_msg_tag);
                         printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
                     }
                     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     strncpy(chr_h_qualifier,chr_h_value,5);
                     if((((!strcmp(h_msg_tag,I_CLIENTA_98)) || (!strcmp(h_msg_tag,I_CLIENTB_98))) && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER))) )
                     {
                        strcpy(chr_decu_recu_next_str,chr_l_str4);
                        break;
                     }
                     else if((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                     {
                        strcpy(chr_decu_recu_next_str,chr_l_str4);
                        int_l_setprty_start=0;
                        break;
                     }
                     else
                     {
                        memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                        fscanf(fl_incmsg, "%[^\n]\n",chr_l_str4);
                        continue;
                     }
                  }
               }
            }
      }
   }





		
			if((int_l_amt_start==1)&&((l_ms_54x_struct_h.h_deal_code[0] == DEALCD_RVP) || (l_ms_54x_struct_h.h_deal_code[0] == DEALCD_DVP) || (l_ms_54x_struct_h.h_deal_code[0] == DEALCD_CR) || (l_ms_54x_struct_h.h_deal_code[0] == DEALCD_CD) || (l_ms_54x_struct_h.h_deal_code[0] == DEALCD_DCD) || (l_ms_54x_struct_h.h_deal_code[0] == DEALCD_RCR)))
			{
            while(1)
            {
               memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
               
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
               memset(h_msg_tag, APL_NULL_CHAR , 4);
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
               if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                   h_msg_tag ,
                                                   chr_h_value ,
                                                   l_debug_info_ptr ))

                  {
                     fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                     strcpy(chr_g_msg_sts, "RJT");     
                     if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                       "MESSAGE LINE NOT IN PROPER FORMAT",
																			chr_g_str_client,
                                                       (DEBUG_INFO_STRUCT_H **)NULL))
                        {
                           CO_ProcMonitor(APL_OUT_FILE,
                                    "Failed to insert into IINMSGRP.\n",
                                     NULL, NULL);
                        }
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                     APL_GOBACK_FAIL
                  }

                  APL_IF_DEBUG
                  {
                     printf("the h_msg_tag is %s\n",h_msg_tag);
                     printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
                  }
                  strncpy(chr_h_qualifier,chr_h_value,5);
                  if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,MSG_AMT_TAG)))
                  {
							break;

						}

				if ((!strcmp(h_msg_tag,I_AMOUNT_CCY_98) ) && (!strcmp(chr_h_qualifier,SETT_QUALIFIER)))
				{
						strcpy(chr_h_value,chr_h_value+7);

               	
               	l_proc_on_exch = 0;
               	if ( APL_FAILURE == CO_Chk_CntryEnabled("TRADE_PROCESSING" ,"PROC_ON_EXCHANGE",
                                                     &l_proc_on_exch, l_debug_info_ptr) )
               	{
                  	fprintf( fl_userlog, "Failed in CO_Chk_CntryEnabled for MICEX_TRADES\n");
                  	APL_GOBACK_FAIL
               	}

                  if ((l_proc_on_exch > 0) && ((strcmp(p_msg_no,I_MSGNO_541)==0) || (strcmp(p_msg_no,I_MSGNO_543)==0)))
                  {
                     if ((strcmp(p_msg_no,I_MSGNO_541)==0) && (*p_tot_qty==0)) 
                        l_ms_54x_struct_h.h_deal_code[0] = DEALCD_CD;
                     else if  ((strcmp(p_msg_no,I_MSGNO_543)==0)  && (*p_tot_qty==0)) 
                        l_ms_54x_struct_h.h_deal_code[0] = DEALCD_CR;

                     if (
                        (chr_h_value[3]!='0') &&
                        (chr_h_value[3]!='1') &&
                        (chr_h_value[3]!='2') &&
                        (chr_h_value[3]!='3') &&
                        (chr_h_value[3]!='4') &&
                        (chr_h_value[3]!='5') &&
                        (chr_h_value[3]!='6') &&
                        (chr_h_value[3]!='7') &&
                        (chr_h_value[3]!='8') &&
                        (chr_h_value[3]!='9')
                        )
                     {
                        strcpy(chr_h_value,chr_h_value+1);
                        if (*p_tot_qty > 0)
                           if (strcmp(p_msg_no,I_MSGNO_541)==0)
                              l_ms_54x_struct_h.h_deal_code[0] = DEALCD_RCR;
                           else
                              l_ms_54x_struct_h.h_deal_code[0] = DEALCD_DCD;
                     }
                  }

						memset(dbl_l_amount_a,APL_NULL_CHAR,16);
						memset(chr_l_new_amount,APL_NULL_CHAR,16);
					
					for ( i = 0; i< 3 ; i++)
					{
						l_ms_54x_struct_h.currency_code[i]  = chr_h_value[i];
				
					}
					l_ms_54x_struct_h.currency_code[3] = APL_NULL_CHAR;

					for ( i = 0; i < 15 ; i++)
					{
						dbl_l_amount_a[i]	= chr_h_value[ i + 3 ];
					}
					dbl_l_amount_a[15] = APL_NULL_CHAR;

					

					if (APL_FAILURE == CO_Proc_RemoveDot(dbl_l_amount_a, chr_l_new_amount, l_debug_info_ptr) )
					{
						fprintf(fl_userlog,"Failed To Remove The Decimal From The Amount\n");
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
						APL_GOBACK_FAIL
					}

					

					if (APL_FAILURE == CO_Proc_ReplaceComma(	chr_l_new_amount, dbl_l_amount_a, l_debug_info_ptr) )
					{
						fprintf(fl_userlog,"Failed to Replace The Commas in Amount\n");
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
						APL_GOBACK_FAIL
					}
					l_ms_54x_struct_h.amount = atof(dbl_l_amount_a);
					strcpy(l_ms_gen_struct_h.paramcurrency,l_ms_54x_struct_h.currency_code);
					strcat(l_ms_gen_struct_h.paramcurrency,dbl_l_amount_a);



   				int_period_flg = 0;


				   if ( CO_Chk_CcyConvDt("",&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
   				{
				      APL_GOBACK_FAIL
				   }

				   if ((int_period_flg == 1) && strcmp(l_ms_54x_struct_h.currency_code,"TRL")==0)
   				{
								strcpy(chr_g_msg_sts,"RPR");
							 	if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "TRL currency not supported",chr_g_str_client, NULL) )
							 	{
									 CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
								 }
								fprintf(fl_userlog,"Currency is TRL \n");
								 CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND ,"Currency is TRL",chr_l_isin,APL_NULL_STRING,__LINE__,__FILE__);
   				}






					strcpy(chr_l_prev_amt_qual,"SETT");
					while(1)
					{
               memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
               
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
               memset(h_msg_tag, APL_NULL_CHAR , 4);
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
               if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                   h_msg_tag ,
                                                   chr_h_value ,
                                                   l_debug_info_ptr ))

                  {
                     fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                     strcpy(chr_g_msg_sts, "RJT");     
                     if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                   "MESSAGE LINE NOT IN PROPER FORMAT", chr_g_str_client,
                                                       (DEBUG_INFO_STRUCT_H **)NULL))
                        {
                           CO_ProcMonitor(APL_OUT_FILE,
                                    "Failed to insert into IINMSGRP.\n",
                                     NULL, NULL);
                        }
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                     APL_GOBACK_FAIL
                  }

                  APL_IF_DEBUG
                  {
                     printf("the h_msg_tag is %s\n",h_msg_tag);
                     printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
                  }
                  strncpy(chr_h_qualifier,chr_h_value,5);
                  if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,MSG_AMT_TAG)))
                  {
                     break;

                  }
       				if ((!strcmp(h_msg_tag,I_AMOUNT_CCY_98) ) && (!strcmp(chr_h_qualifier,OCMT_QUALIFIER)))
            		{
               		if ((int_i_read_ocmt_qual == 1) || (strcmp(chr_l_prev_amt_qual,APL_NULL_STRING)!=0))
               		{

 	                 if (!strcmp(chr_l_prev_amt_qual,"SETT"))
   	                  strcpy(chr_l_str_ocmt_qual,"OC_ST");
      	           (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
 	                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,MSG_AMT_TAG);
   	               strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_l_str_ocmt_qual);
      	            strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
         	         strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":19A:");
            	      int_l_link_count++;

                  	int_i_read_ocmt_qual = 0;
                  	strcpy(chr_l_prev_amt_qual,APL_NULL_STRING);
					}
					break;
				}
				}
					break;
				}
				else if ((!strcmp(h_msg_tag,I_AMOUNT_CCY_98) ) && (!strcmp(chr_h_qualifier,LOCO_QUALIFIER)))
				{
					strcpy(chr_h_prev_value,chr_h_value);
					strcpy(chr_h_value,chr_h_value+7);
					memset(dbl_l_amount_a,APL_NULL_CHAR,16);
					memset(chr_l_new_amount,APL_NULL_CHAR,16);
					for ( i = 0; i < 15 ; i++)
					{
						dbl_l_amount_a[i] = chr_h_value[ i + 3 ];
					}
					dbl_l_amount_a[15] = APL_NULL_CHAR;

					

				   if (APL_FAILURE == CO_Proc_RemoveDot(dbl_l_amount_a, chr_l_new_amount, l_debug_info_ptr) )
					{
						fprintf(fl_userlog,"Failed To Remove The Decimal From The Amount\n");
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
					   APL_GOBACK_FAIL
					}

				  

				  if (APL_FAILURE == CO_Proc_ReplaceComma( chr_l_new_amount, dbl_l_amount_a, l_debug_info_ptr) )
				  {
					  fprintf(fl_userlog,"Failed to Replace The Commas in Amount\n");
				     *int_p_retstat = IV_CRITCAL_ERROR_IND;
					  APL_GOBACK_FAIL
					}
					l_ms_54x_struct_h.brokercomm =0.0;
					l_ms_54x_struct_h.brokercomm = atof(dbl_l_amount_a);

					strcpy(chr_l_prev_amt_qual,"LOCO");

                  (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);

                  sprintf(chr_l_str_amt_qual,"QL_LO",int_i_amt_qual_count);

                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,MSG_AMT_TAG);
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_l_str_amt_qual);
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_prev_value);
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":19A:");
                  int_l_link_count++;

					while(1)
					{
               memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
               
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
               memset(h_msg_tag, APL_NULL_CHAR , 4);
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
               if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                   h_msg_tag ,
                                                   chr_h_value ,
                                                   l_debug_info_ptr ))

                  {
                     fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                     strcpy(chr_g_msg_sts, "RJT");     
                     if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                       "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                                       (DEBUG_INFO_STRUCT_H **)NULL))
                        {
                           CO_ProcMonitor(APL_OUT_FILE,
                                    "Failed to insert into IINMSGRP.\n",
                                     NULL, NULL);
                        }
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                     APL_GOBACK_FAIL
                  }

                  APL_IF_DEBUG
                  {
                     printf("the h_msg_tag is %s\n",h_msg_tag);
                     printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
                  }
                  strncpy(chr_h_qualifier,chr_h_value,5);
                  if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,MSG_AMT_TAG)))
                  {
							break;
						}
       			if ((!strcmp(h_msg_tag,I_AMOUNT_CCY_98) ) && (!strcmp(chr_h_qualifier,OCMT_QUALIFIER)))
            	{
               	if ((int_i_read_ocmt_qual == 1) || (strcmp(chr_l_prev_amt_qual,APL_NULL_STRING)!=0))
               	{

 	                 if (!strcmp(chr_l_prev_amt_qual,"LOCO"))
                     	strcpy(chr_l_str_ocmt_qual,"OC_LO");
                 	(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                  	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);

 	                 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,MSG_AMT_TAG);
   	               strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_l_str_ocmt_qual);
      	            strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
         	         strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":19A:");
            	      int_l_link_count++;
	
   	               int_i_read_ocmt_qual = 0;
      	            strcpy(chr_l_prev_amt_qual,APL_NULL_STRING);
			}
			break;
	}
		}
			break;
				}
				
		 
				else if (!strcmp(h_msg_tag,I_AMOUNT_CCY_98) )
				{
					if (int_amt_qualifiers_supported > int_i_amt_qual_count)
					{
						int_i_amt_qual_count++;
						int_i_read_ocmt_qual = 1;

                  (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
						memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);

                  sprintf(chr_l_str_amt_qual,"QL_%d",int_i_amt_qual_count);

						strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,MSG_AMT_TAG);
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_l_str_amt_qual);
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":19A:");
                  int_l_link_count++;

					strcpy(chr_l_prev_amt_qual,APL_NULL_STRING);
					while(1)
					{
               memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
               
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
               memset(h_msg_tag, APL_NULL_CHAR , 4);
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
               if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                   h_msg_tag ,
                                                   chr_h_value ,
                                                   l_debug_info_ptr ))

                  {
                     fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                     strcpy(chr_g_msg_sts, "RJT");     
                     if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                       "MESSAGE LINE NOT IN PROPER FORMAT",
																			chr_g_str_client,
                                                       (DEBUG_INFO_STRUCT_H **)NULL))
                        {
                           CO_ProcMonitor(APL_OUT_FILE,
                                    "Failed to insert into IINMSGRP.\n",
                                     NULL, NULL);
                        }
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                     APL_GOBACK_FAIL
                  }

                  APL_IF_DEBUG
                  {
                     printf("the h_msg_tag is %s\n",h_msg_tag);
                     printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
                  }
                  strncpy(chr_h_qualifier,chr_h_value,5);
                  if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,MSG_AMT_TAG)))
                  {
							break;
						}
       			if ((!strcmp(h_msg_tag,I_AMOUNT_CCY_98) ) && (!strcmp(chr_h_qualifier,OCMT_QUALIFIER)))
            	{
               	if ((int_i_read_ocmt_qual == 1) || (strcmp(chr_l_prev_amt_qual,APL_NULL_STRING)!=0))
               	{

							if (!strcmp(chr_l_prev_amt_qual,APL_NULL_STRING))
      	               sprintf(chr_l_str_ocmt_qual,"OC_%d",int_i_amt_qual_count);
	
   	              (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
      	            memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
         	         memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
            	      memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );	
   	               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);

                  	strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,MSG_AMT_TAG);
                  	strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_l_str_ocmt_qual);
                  	strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
                  	strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":19A:");
                  	int_l_link_count++;

 	                 int_i_read_ocmt_qual = 0;
   	               strcpy(chr_l_prev_amt_qual,APL_NULL_STRING);
					}
					break;
				}
			}
			}
				break;
				}
				
			}
		}

  
			if((int_l_fiac_start==1) && (int_l_fiac_occur==1))
			{
				if (((!strcmp(h_msg_tag,I_CLIENTA_98))|| (!strcmp(h_msg_tag,I_CLIENTB_98))) && (!strcmp(chr_h_qualifier,MS_CASH_QUAL))  )
				{
					memset(chr_l_cash_acc, APL_NULL_CHAR , APL_IBANACC_LEN);
					
					int_l_slash_count=0;
					a=0;
               for(i=0;i<strlen(chr_h_value);i++)
               {
                    
                    if (((chr_h_value[i]=='/') 
								&& (int_l_slash_count<2)
								&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     || ((chr_h_value[i]=='/') 
								&& (int_l_slash_count<3)
								&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
               }

					strncpy(chr_l_cash_acc, chr_h_value+a+1,APL_IBANACC_LEN-5);
					chr_l_cash_acc[26] =APL_NULL_CHAR;

					#ifdef EMU_PROCESSING
						if ( int_g_emutransperiod == 1 )
								continue;
						#endif

					if ( strlen(chr_l_cash_acc) < 10) 
					{
				

                  if (APL_FAILURE == CO_PadString(chr_l_cash_acc, 'L', 10, "0", l_debug_info_ptr) )
						{
							*int_p_retstat = IV_CRITCAL_ERROR_IND;
							APL_GOBACK_FAIL
						}
					}
					int_retstat = IV_SUCCESS;

               
               if(strlen(chr_l_client_a)!=0)
               {
						if ( APL_FAILURE == MT_Chk_CashAcc(chr_l_client_a, chr_l_cash_acc, (char *)NULL, &int_retstat, l_debug_info_ptr) )
						{
							if ( int_retstat == IV_CRITCAL_ERROR_IND )
							{
								*int_p_retstat = int_retstat;

								APL_GOBACK_FAIL
							}
							else if ( int_retstat == IV_NO_DATA_FOUND_ERR )
							{
								fprintf(fl_userlog,"Failed To Select The Cash Account from CCASHACC table as Account Not Found in system %s\n",chr_l_cash_acc);

								CO_InsertErr(l_debug_info_ptr, ERR_ACCNOT_FND, chr_l_cash_acc, APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
							}
						}
						else
						{
							   if (APL_FAILURE == CO_Chk_CntryEnabled(  "INCOMING_MSG",
                                                               "VAL_IBAN_CASHACC",
                                                               &l_iban_cashacc,
                                                               l_debug_info_ptr ));
					 		 

					 		if((strlen(chr_l_cash_acc) > 10) && (l_iban_cashacc > 0))
					 		{
					      	memset(chr_l_iban_cash_acc, APL_NULL_CHAR , APL_IBANACC_LEN);

 	                     EXEC SQL SELECT * into :chr_l_iban_cash_acc FROM 
                                 (SELECT GL_ACCOUNT 
                                 FROM DL_CASHCLT
        		                     WHERE (CLIENT = :chr_l_client_a AND
               		                   IBAN_CLT = :chr_l_cash_acc AND
                                        DEFAULT_CCY in ('Y','N'))
                                 ORDER BY DEFAULT_CCY DESC)
                                 WHERE ROWNUM < 2;

								IS_ANY_ORA_ERROR

								printf("Inside Daemon IBBSACCOUNT of IBAN = %s\n",chr_l_iban_cash_acc);
		
						      strcpy(l_ms_54x_struct_h.gl_client, chr_l_iban_cash_acc);
         		      }
							else
							{
					      	strncpy(l_ms_54x_struct_h.gl_client, chr_l_cash_acc,10);
								l_ms_54x_struct_h.gl_client[10] = APL_NULL_CHAR;
								printf("Inside Daemon IBBSACCOUNT = %s\n",l_ms_54x_struct_h.gl_client);
							}
						}
                }

                
					continue;
				}
			}



 
		if((int_l_genl_start==1) && (int_l_genl_occur==1))
		{
			 if (	(!strcmp(h_msg_tag,I_MESS_IDEN)) 
				&&	( (!strcmp(chr_h_qualifier,NEWM_QUALIFIER))||(!strcmp(chr_h_qualifier,MS_CANCEL_QUAL)) || (!strcmp(chr_h_qualifier,PREA_QUALIFIER))|| (!strcmp(chr_h_qualifier,NEWM1_QUALIFIER)) || (!strcmp(chr_h_qualifier,MS_CANCEL_QUAL_1)) || (!strcmp(chr_h_qualifier,PREA1_QUALIFIER))))
				{
				if (!strcmp(chr_h_qualifier,NEWM_QUALIFIER))
				{
					int_l_flg_newm=1;
					strcpy(chr_g_msg_no,"54N");
				}
				else if ( (!strcmp(chr_h_qualifier,NEWM1_QUALIFIER)) || (!strcmp(chr_h_qualifier,MS_CANCEL_QUAL_1)) || (!strcmp(chr_h_qualifier,PREA1_QUALIFIER)) )
				{
					fprintf(fl_userlog,"FUNCTION DUPL/CODU/COPY ENCOUNTERED WITH NEWM IN MESSAGE\n");
                  strcpy(chr_g_msg_sts, "RJT");     
                  if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, "FUNCTION DUPL/CODU/COPY ENCOUNTERED",chr_g_str_client, (DEBUG_INFO_STRUCT_H **)NULL))
                     {
                        CO_ProcMonitor(APL_OUT_FILE,
                                 "Failed to insert into IINMSGRP.\n",
                                  NULL, NULL);
                     }
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
                  APL_GOBACK_FAIL
				}
				else if (!strcmp(chr_h_qualifier,MS_CANCEL_QUAL))
				{
					int_l_flg_canc=1;
					strcpy(chr_g_msg_no,"54C");
				}
				else if (!strcmp(chr_h_qualifier,PREA_QUALIFIER))
				{
					
               int_l_flg_newm=1;
               strcpy(chr_g_msg_no,"54N");
               fprintf(fl_userlog,"Function PREA encountered with msg_tag 23G\n");
               strcpy(chr_g_msg_sts, "RPR");

               CO_InsertErr(l_debug_info_ptr,
                                           ERR_MSG_PREA_NOTSUPPORTED,
                                           APL_NULL_STRING,
                                           APL_NULL_STRING,
                                           APL_NULL_STRING,
                                           __LINE__, __FILE__);

				}
				continue;
			 }
		}	

 	
				
				if ( (!strcmp(h_msg_tag,MSG_BEGIN_TAG)) &&(!strcmp(chr_h_qualifier,MSG_QUAL_FIAC)) ) 
				{
					if (int_l_fiac_occur == 2)
					{
					  strcpy(chr_l_rep_seq,"T");

						
					strcpy(chr_g_msg_sts, "RJT");     
        			fprintf(fl_userlog,"MULTIPLE FIAC BLOCK ENCOUNTERED\n");
          		if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,"MULTIPLE FIAC BLOCK ENCOUNTERED",chr_g_str_client,(DEBUG_INFO_STRUCT_H **)NULL))
          		{
             		CO_ProcMonitor(APL_OUT_FILE,"Failed to insert into IINMSGRP.\n",NULL, NULL);
          		}
         		*int_p_retstat = IV_CRITCAL_ERROR_IND;
         	 	APL_GOBACK_FAIL
					
					}
					continue;
				}
				


	
	if((int_l_setdet_start==1) && (int_l_setdet_occur==1))
	{

		if ( (!strcmp(h_msg_tag,I_INDICATOR_98)) && (!strcmp(chr_h_qualifier,SETR_QUALIFIER)) )	
		{

			
			strcpy(chr_h_value,chr_h_value+5);
			memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
			strncpy(h_code,chr_h_value+1,4);
			memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);	
			
           for(i=0;i<strlen(chr_h_value);i++)
           {
             if(chr_h_value[i]=='/')
             {
               a=i;
             }
           }        
			strcpy(chr_h_temp,chr_h_value+a+1);
				
			if (!strcmp(chr_h_temp,I_IND_TRD_98))
			{
				
				if(l_remtrd_22F95P_exist)
				{
					int_l_setr_trad = 1;
					int_l_setr_turn = 0;
					int_l_trca_spri = 0;
				}
				else
				{
					int_l_setr_trad = 0;
					strcpy(l_ms_54x_struct_h.dl_class,NORMALDEAL);
				}
				
			}
         else if (!strcmp(chr_h_temp,I_IND_SECL))
         {

			 if( l_stld_check > 0 )
		    {
				
            	l_ms_54x_struct_h.h_stld_loc=1;


            if (strlen(h_info) ==0)
            {
              strcpy(h_info,"/STOCK LENDING/");
              strcat(h_info,chr_enter_char);
              strcat(h_info,chr_enter_char);
              strcat(h_info,chr_enter_char);
            }
            else
            {
              strcpy(chr_h_note_temp,"/STOCK LENDING/");
              strcat(chr_h_note_temp,chr_enter_char);
              strncat(chr_h_note_temp,h_info,255);
              memset(h_info,APL_NULL_CHAR,266);
              strcpy(h_info,chr_h_note_temp);
              h_info[strlen(h_info)]=APL_NULL_CHAR;

            }
			 }

         }
			else if (!strcmp(chr_h_temp,I_IND_OWNI_98)) 
			{
				int_l_owni_found=1;
				strcpy(l_ms_54x_struct_h.dl_class,DL_BOOKTRF_IND);
			}
			else if (!strcmp(chr_h_temp,I_IND_TURN_98))
			{
				
				if(l_remtrd_22F95P_exist)
				{
					int_l_setr_turn = 1;
					int_l_setr_trad = 0;
					int_l_trca_spri = 0;
				}
				else
				{
					int_l_setr_turn = 0;
					strcpy(l_ms_54x_struct_h.dl_class,TURNAROUNDTRD);
				}
				

				
				
            if (strlen(h_info) ==0)
            {
              strcpy(h_info,"/TURNAROUND/");
              strcat(h_info,chr_enter_char);
              strcat(h_info,chr_enter_char);
              strcat(h_info,chr_enter_char);
            }
            else
            {
              strcpy(chr_h_note_temp,"/TURNAROUND/");
              strcat(chr_h_note_temp,chr_enter_char);
              strncat(chr_h_note_temp,h_info,255);
              memset(h_info,APL_NULL_CHAR,266);
              strcpy(h_info,chr_h_note_temp);
              h_info[strlen(h_info)]=APL_NULL_CHAR;

            }
				
			}
         else if (!strcmp(chr_h_temp,I_IND_OWNERR_98))
         {
             strcpy(l_ms_54x_struct_h.dl_class,EXTERNALTRFDEAL);
         }
			else if (!strcmp(chr_h_temp,I_IND_RPTO_98))
			{
			fprintf(fl_userlog,"TRANSACTION IS FOR REPORTING PURPOSES ONLY\n");
			strcpy(chr_g_msg_sts, "RJT");     
			if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,"TRANSACTION IS FOR REPORTING PURPOSE ONLY",chr_g_str_client,(DEBUG_INFO_STRUCT_H **)NULL))
			{
				CO_ProcMonitor(APL_OUT_FILE,"Failed to insert into IINMSGRP.\n",NULL, NULL);
			}
			*int_p_retstat = IV_CRITCAL_ERROR_IND;
			APL_GOBACK_FAIL
			}
		   else if((!strcmp(h_code,I_IND_CEDE)) || (!strcmp(h_code,I_IND_ECLR)))
				{

	            	(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
            		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
            		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
            		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
   		         memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
         		   strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,"SETD");
            		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_h_qualifier);
      		      strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
            		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
          		  int_l_link_count++;
				}	
			
			else if(!strcmp(chr_h_temp,I_IND_SECB))
         {
         	memset(chr_g_secb_flg,NULL,2);
         	strcpy(chr_g_secb_flg,"Y");
         }	
			
			else
			{
				memset(chr_g_setr_val,NULL,5);
				strcpy(chr_g_setr_val,chr_h_temp);
				strcat(chr_g_setr_val,APL_NULL_STRING);
			}
                        
			(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
			strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,"SETD");
			strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"SETR");
			strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
			strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
			int_l_link_count++;
                        
			continue;
		}
		else if ((!strcmp(h_msg_tag,I_INDICATOR_98)) && ((!strcmp(chr_h_qualifier,REGT_QUALIFIER))||(!strcmp(chr_h_qualifier,MSG_BENE_QUAL))  ) )
	   {
			if (strlen(h_info)==0)
		   {
			   strcpy(h_info,chr_enter_char);
				strcat(h_info,chr_enter_char);
				strcat(h_info,chr_enter_char);
				strcat(h_info,chr_h_value+1);
				strcat(h_info,chr_enter_char);
			}
			else
			{
				 strcat(h_info,chr_h_value+1);
		  		 strcat(h_info,chr_enter_char); 
			}
			 (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
			 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
			 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,"SETD");
			 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_h_qualifier+1);
			 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
			 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
			int_l_link_count++;
			continue;
		 }
		else if ((!strcmp(h_msg_tag,I_INDICATOR_98)) && ((!strcmp(chr_h_qualifier,FXCX_QUALIFIER))) && (int_l_flg_canc==1))
		{
			
				memset(chr_l_fxcx_ind,APL_NULL_CHAR,ISO_LINERR_LENGTH);
		  		strcpy(chr_l_fxcx_ind,chr_h_value+1); 
		}
		 else if ((!strcmp(h_msg_tag,I_INDICATOR_98)) && (!strcmp(chr_h_qualifier,TRCA_MESSAGE_QUALIFIER)))
		 {
         
	 
         strcpy(chr_h_value,chr_h_value+5);
         memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);

           for(i=0;i<strlen(chr_h_value);i++)
           {
             if(chr_h_value[i]=='/')
             {
               a=i;
             }
           }
         strcpy(chr_h_temp,chr_h_value+a+1);

         if (!strcmp(chr_h_temp,I_IND_SPRI_98))
         {
				
				if(l_remtrd_22F95P_exist)
				{
					int_l_trca_spri = 1;
				}
				else
				{
					int_l_trca_spri = 0;
					int_l_owni_found = 0 ;
					int_l_propremotetrd = 1;
					strcpy(l_ms_54x_struct_h.dl_class,PROPREMOTEDEAL);
				}
				
            if (strlen(h_info) ==0)
            {
              strcpy(h_info,"/CUSTODY/");
              strcat(h_info,chr_enter_char);
              strcat(h_info,chr_enter_char);
              strcat(h_info,chr_enter_char);
            }
            else
            {
              strcpy(chr_h_note_temp,"/CUSTODY/");
              strcat(chr_h_note_temp,chr_enter_char);
              strncat(chr_h_note_temp,h_info,255);
              memset(h_info,APL_NULL_CHAR,266);
              strcpy(h_info,chr_h_note_temp);
              h_info[strlen(h_info)]=APL_NULL_CHAR;

            }

         }


                
		(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,"SETD");
	        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"TRCA");
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
		int_l_link_count++;
		 }	
		}

 


 
		 if((int_l_traddet_start==1) && (int_l_traddet_occur==1))
		 {

			if((!strcmp(h_msg_tag,I_CCYCODERR_98)) && ((!strcmp(chr_h_qualifier,FXIB_QUALIFIER)) || (!strcmp(chr_h_qualifier,FXIS_QUALIFIER)) ))
			 { 
				memset(l_ms_54x_struct_h.fx_adv_ind,NULL,2);
				if ( (((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RVP) || (l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CD) || (l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DCD)) && (!strcmp(chr_h_qualifier,FXIS_QUALIFIER))) ||(((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DVP) || (l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CR) || (l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RCR)) && (!strcmp(chr_h_qualifier,FXIB_QUALIFIER))))
				{
				  l_ms_54x_struct_h.fx_adv_ind[0]='Y';
				  l_ms_54x_struct_h.fx_adv_ind[1]='\0';
				
				  
					strncpy(l_ms_54x_struct_h.fxccy,chr_h_value+7,3);
					int_h_cur_count=0;
			      EXEC SQL SELECT 1
                    INTO :int_h_cur_count
                    FROM PRO_SGENSTAT
                    WHERE ((MAP_VAL = :l_ms_54x_struct_h.fxccy) AND
                           (MAP_TYPE = 'ISOCURRENCY') AND
                           (NATION_CODE = 'XX'));

						  IS_ANY_ORA_ERROR

					if(int_h_cur_count != 1)
					{
						fprintf(fl_userlog,"Invalid Fx Currency Encountered\n");
						memset(l_ms_54x_struct_h.fxccy,APL_NULL_CHAR,4);	
					}
				  
				}
				else if ((((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RVP)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CD)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DCD)) && (!strcmp(chr_h_qualifier,FXIB_QUALIFIER)) ) || (((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DVP)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_CR)||(l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RCR)) && (!strcmp(chr_h_qualifier,FXIS_QUALIFIER)) ))
			   {
					memset(l_ms_54x_struct_h.fxccy,APL_NULL_CHAR,4);	
					strcpy(chr_g_msg_sts,"RPR");
               if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "MISMATCH OF FX INST AND TYPE OF TRADE",chr_g_str_client, NULL) )
               {
                  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
               }
					CO_InsertErr(l_debug_info_ptr, ERR_FXTRDTYPE_MISMATCH, APL_NULL_STRING, APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
				}
				else if (((l_ms_54x_struct_h.h_deal_code[0]==DEALCD_DF) || (l_ms_54x_struct_h.h_deal_code[0]==DEALCD_RF)) &&  ((!strcmp(chr_h_qualifier,FXIB_QUALIFIER)) || (!strcmp(chr_h_qualifier,FXIS_QUALIFIER))))
				{
					memset(l_ms_54x_struct_h.fxccy,APL_NULL_CHAR,4);	
               strcpy(chr_g_msg_sts,"RPR");
               if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "FXIB/S USED FOR FREE TRADE",chr_g_str_client, NULL) )
               {
                  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
               }
					CO_InsertErr(l_debug_info_ptr, ERR_FXTRDTYPE_MISMATCH, APL_NULL_STRING, APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
            }	

				 if (strlen(h_info)==0)
				 { 
					strcpy(h_info,chr_enter_char);
					strcat(h_info,chr_enter_char);
					strcat(h_info,chr_enter_char);
				   strcat(h_info,chr_h_value+1);
					strcat(h_info,chr_enter_char);
			    }
				 else
				 {
				   strcat(h_info,chr_h_value+1);
				 	strcat(h_info,chr_enter_char);
				 }
			}
	 }



		if((int_l_traddet_start==1) && (int_l_traddet_occur==1))
      {
			 a=0;
			 memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
			for(i=0;i<strlen(chr_h_value);i++)
		   {
			  if(chr_h_value[i]=='/')
			  {
				  a=i;
			  }
		   }
			strcpy(chr_h_temp,chr_h_value+a+1);
			if ((!strcmp(h_msg_tag,NARR_TAG)) && (!strcmp(chr_h_qualifier,SPRO_QUALIFIER)) )
			{
           
            strcpy(chr_mainfuncarea, "INCOMING_MSG");
            strcpy(chr_l_condident, "EUROMTS_TRD");
            if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                                 chr_l_condident, &l_euromts, l_debug_info_ptr))
            {
                  fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for EUROMTS\n");
                  APL_GOBACK_FAIL
            }

            if(l_euromts!=0)
            {
               strcpy(chr_h_temp,chr_h_value+7);
               chr_h_temp[strlen(chr_h_temp)] = APL_NULL_CHAR;
               if (strstr(chr_h_temp,"/") != NULL)
						strcpy(chr_h_part1,strstr(chr_h_temp,"/")); 
               else
						strcpy(chr_h_part1,APL_NULL_STRING);
					if (strstr(chr_h_temp,"0014-") != NULL)
						strcpy(chr_h_part2,strstr(chr_h_temp,"0014-"));
              	else
						strcpy(chr_h_part2,APL_NULL_STRING);
					if (strstr(chr_h_value,"//") != NULL)	 
						strcpy(chr_h_part3,strstr(chr_h_value,"//")+2);
               else
						strcpy(chr_h_part3,APL_NULL_STRING);
					int_l_len_locrefno=strlen(chr_h_part2+5)-strlen(chr_h_part1);
               strncpy(chr_l_euro_locrefno,chr_h_part2+5,int_l_len_locrefno);
               printf("*********************H_PART1 is %s**********\n",chr_h_part1);
               printf("*********************H_PART2 is %s***********\n",chr_h_part2);
               strcpy(l_ms_54x_struct_h.lcl_identno,chr_l_euro_locrefno);
					if (strlen(chr_l_euro_locrefno)!=0)
               l_locrefno_found=1;
            }
				int_l_count=0;
				while(1)
            {
                 memset(chr_l_str4, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                 
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
                 if (chr_l_str4[0] != ':') 

                 {
                      int_l_count=int_l_count+1;
                       continue;
                  }
                  if (chr_l_str4[0]==':')
                  {
         	          chr_l_read_line='T';
            	        break;
                  }
           }
				
            if(l_euromts!=0)
                strcpy(chr_h_temp,chr_h_part3); 
            else
                strcpy(chr_h_temp,chr_h_value+a+1);

				if (strlen(h_info)==0)
				{
					if (int_l_count==0)		
              	{ 
						strcpy(h_info,chr_enter_char);
               	strcat(h_info,chr_enter_char);
               	strcat(h_info,chr_enter_char);
               	strcat(h_info,chr_h_temp);
               	strcat(h_info,chr_enter_char);
            	}
      	     	else
           	 	{
               	strcpy(h_info,chr_enter_char);
               	strcat(h_info,chr_enter_char);
               	strcat(h_info,chr_enter_char);
               	strcat(h_info,"REFER TO CUSTOMER NARRATIVE");
               	strcat(h_info,chr_enter_char);
				 	}
				}
				else
				{
					if(int_l_count==0)
					{	 
            		strcat(h_info,chr_h_temp);
               	strcat(h_info,chr_enter_char);
         		}
					else
					{
              		strcat(h_info,"REFER TO CUSTOMER NARRATIVE");
              		strcat(h_info,chr_enter_char);
         		}

				}
			}
			else if ((!strcmp(h_msg_tag,NARR_TAG)) && (!strcmp(chr_h_qualifier,FXIN_QUALIFIER)) && (!strcmp(chr_h_temp,NOFX_QUALIFIER)))	
		   {
				int_l_nofx_found=1;
							
				if (strlen(h_info)==0)
            {
               strcpy(h_info,chr_enter_char);
               strcat(h_info,chr_enter_char);
               strcat(h_info,chr_enter_char);
               strcat(h_info,chr_h_value+1);
               strcat(h_info,chr_enter_char);
            }
            else
            {
               strcat(h_info,chr_h_value+1);
               strcat(h_info,chr_enter_char);
            }
			}
		}	
				

      
      memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
                memset(chr_l_condident, APL_NULL_CHAR, APL_CONDID_LEN);
      strcpy(chr_mainfuncarea, "INCMSG");
                strcpy(chr_l_condident, "REPO_NOT_REQD");
                if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, chr_l_condident, &l_repo_check, l_debug_info_ptr) )
                 {
                     APL_GOBACK_FAIL
                 }

		if ((!strcmp(h_msg_tag,MSG_BEGIN_TAG)) && (!strcmp(chr_h_qualifier,REPO_QUALIFIER)) && (int_l_repo_occur==1) && (l_repo_check==0))
		{
		
			strcpy(chr_g_msg_sts, "RJT");     
         fprintf(fl_userlog,"REPO BLOCK ENCOUNTERED\n");
          if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,"REPO BLOCK ENCOUNTERED",chr_g_str_client,(DEBUG_INFO_STRUCT_H **)NULL))
          {
             CO_ProcMonitor(APL_OUT_FILE,"Failed to insert into IINMSGRP.\n",NULL, NULL);
          }
         *int_p_retstat = IV_CRITCAL_ERROR_IND;
          APL_GOBACK_FAIL
		}

		if((int_l_setdet_start==1) && (int_l_setdet_occur==1))
	   {

 	     if ( (!strcmp(h_msg_tag,I_INDICATOR_98)) && (!strcmp(chr_h_qualifier,STCO_QUALIFIER)) )
   	  {

	
				a=0;
				memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
				for(i=0;i<strlen(chr_h_value);i++)
            			{
               				if(chr_h_value[i]=='/')
               				{	
                  				a=i;
               				}
             			}

            		strcpy(chr_h_temp,chr_h_value+a+1);
				if (!strcmp(chr_h_temp,I_NPAR_98))
        		{
					int_l_npar_flg =1;	
				}

	
				if( (!strcmp(chr_h_temp,I_PART_98)) && (l_mt_core_sys_params_struct_h.part_confirm[0]=='Y') )
				{
					l_ms_54x_struct_h.partial_ind_a[0]='Y';
					l_ms_54x_struct_h.partial_ind_a[1]='\0';

				}
	
				
	    	
            
	    		strcpy(chr_h_value,chr_h_value+5);
	    		if (int_stco_qualifiers_supported > int_i_stco_qual_count)
	    		{
		    		int_i_stco_qual_count++;
		    		(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
	            memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
		    		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
		    		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
		    		memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
		    		sprintf(chr_l_str_stco_qual,"STCO%d",int_i_stco_qual_count);
		    		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,"SETD");
		    		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_l_str_stco_qual);
		    		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value);
		    		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
		    		int_l_link_count++;
				
				strncpy(chr_g_stco_array[int_i_stco_qual_count - 1], chr_h_value+2, 4 );
				strcat(chr_g_stco_array[int_i_stco_qual_count - 1], APL_NULL_STRING );
	    		}
            
			}
		}


      if(int_l_link_start ==1)
      {
            while(1)
            {
               memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
               
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
               memset(h_msg_tag, APL_NULL_CHAR , 4);
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
               if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                   h_msg_tag ,
                                                   chr_h_value ,
                                                   l_debug_info_ptr ))

                  {
                     fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                     strcpy(chr_g_msg_sts, "RJT");     
                     if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                       "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                                       (DEBUG_INFO_STRUCT_H **)NULL))
                        {
                           CO_ProcMonitor(APL_OUT_FILE,
                                    "Failed to insert into IINMSGRP.\n",
                                     NULL, NULL);
                        }
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                     APL_GOBACK_FAIL
                  }

                  APL_IF_DEBUG
                  {
                     printf("the h_msg_tag is %s\n",h_msg_tag);
                     printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
                  }
                  strncpy(chr_h_qualifier,chr_h_value,5);
                  if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,LINK_QUALIFIER)))
                  {
                     chr_l_read_line ='F';
                     int_l_link_start =0;
							memset(chr_l_number_ident,APL_NULL_CHAR,4);
							memset(chr_l_link_typ_ind,APL_NULL_CHAR,15);
                     break;
                  }
                  else if ((!strcmp(h_msg_tag,I_INDICATOR_98)) && (!strcmp(chr_h_qualifier,LINK_TYP_IND_98)) )
						{
									int_l_link_typ_length =0 ;
									int_l_link_typ_length =strlen(chr_h_value+5);	
                           strncpy(chr_l_link_typ_ind,chr_h_value+5,int_l_link_typ_length);
                           chr_l_link_typ_ind[int_l_link_typ_length+1]=APL_NULL_CHAR;
				               a=0;
            				   for(i=0;i<strlen(chr_h_value);i++)
              					{
                					if (chr_h_value[i]=='/')
                					{
                  					a=i;
                					}
              					}
									strcpy(chr_h_value,chr_h_value+a+1);
									if((!strcmp(chr_h_value,MSG_BEFO_QUAL)) || (!strcmp(chr_h_value,MSG_AFTE_TAG)))
									{
       								
										 
										 
										 if (l_remtrd_22F95P_exist  != 1)
										 {
        								 CO_InsertErr(l_debug_info_ptr, 
															 ERR_BEFOAFTE_ENCNTRD_INLINKBLK,
															 APL_NULL_STRING,
															 APL_NULL_STRING,
															 APL_NULL_STRING, 
															 __LINE__, __FILE__);
										}
										int_l_afte_befo_flg = 1;
									}
									continue;
						}		
                  else if ((!strcmp(h_msg_tag,I_NUMBER_IDENT_98)) && (!strcmp(chr_h_qualifier,LINK_TYP_IND_98)) )
                  {
                     	int_l_slash_count=0;
                     	a=0;
                     	for(i=0;i<strlen(chr_h_value);i++)
                     	{
                        	if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                        	{
                           	a=i;
                           	int_l_slash_count=int_l_slash_count+1;
                        	}
                     	}
									
                         strncpy(chr_l_number_ident,chr_h_value+a+1,3);
                         chr_l_number_ident[3]=APL_NULL_CHAR;
								 continue;
						}
        				else if((!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,I_PREV_QUALIFIER_98)) )
         			{
            			strncpy(l_ms_54x_struct_h.addindentity_no,chr_h_value+7,16);
            			l_ms_54x_struct_h.addindentity_no[16] = APL_NULL_CHAR;
                     memset(chr_l_ref_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);  
                     EXEC SQL SELECT UPPER(:l_ms_54x_struct_h.addindentity_no)
                              INTO :chr_l_ref_no FROM DUAL;
                     IS_ANY_ORA_ERROR
                     memset(l_ms_54x_struct_h.addindentity_no,APL_NULL_CHAR,17);
                     printf("Canc Refno is %s",chr_l_ref_no);
                     strcpy(l_ms_54x_struct_h.addindentity_no,chr_l_ref_no);
							(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
							strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"PREV");
							strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,l_ms_54x_struct_h.addindentity_no);
							strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":20C:");
							int_l_link_count++;

							if(strlen(chr_l_link_typ_ind) != 0)
							{
                     	(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                     	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                     	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                     	memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                     	strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"PREV");
                     	strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_link_typ_ind);
                     	strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
                     	int_l_link_count++;
							}

                     if(strlen(chr_l_number_ident) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"PREV");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_number_ident);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":13A:");
                        int_l_link_count++;
                     }
							
            			continue;
         			}
         			else if((!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,I_POOL_QUALIFIER_98)) )
         			{
                     (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"POOL");
                     strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value+7,16);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":20C:");
                     int_l_link_count++;

                     if(strlen(chr_l_link_typ_ind) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"POOL");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_link_typ_ind);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
                        int_l_link_count++;
                     }

                     if(strlen(chr_l_number_ident) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"POOL");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_number_ident);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":13A:");
                        int_l_link_count++;
                     }
            			continue;
         			}
         			else if((!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,I_RELA_QUALIFIER_98)) )
         			{
                     (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"RELA");
                     strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value+7,16);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":20C:");
                     int_l_link_count++;

							
							memset(l_ms_54x_struct_h.h_related_indentity_no, NULL, 31);
							strncpy(l_ms_54x_struct_h.h_related_indentity_no,chr_h_value+7,16);
							memset(chr_l_related_ref_no,APL_NULL_CHAR,31);
							EXEC SQL SELECT UPPER(:l_ms_54x_struct_h.h_related_indentity_no) into :chr_l_related_ref_no from dual;
							IS_ANY_ORA_ERROR
							memset(l_ms_54x_struct_h.h_related_indentity_no,APL_NULL_CHAR,31);
							strcpy(l_ms_54x_struct_h.h_related_indentity_no,chr_l_related_ref_no);
							fprintf(fl_userlog,"l_related_ref_no=(%s)\n",chr_l_related_ref_no);
							

                     if(strlen(chr_l_link_typ_ind) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"RELA");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_link_typ_ind);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
                        int_l_link_count++;
                     }

                     if(strlen(chr_l_number_ident) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"RELA");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_number_ident);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":13A:");
                        int_l_link_count++;
                     }
            			continue;
         			}
         			else if((!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,I_TRRF_QUALIFIER_98)) )
         			{
                     (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"TRRF");
                     strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value+7,16);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":20C:");
                     int_l_link_count++;

                     if(strlen(chr_l_link_typ_ind) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"TRRF");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_link_typ_ind);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
                        int_l_link_count++;
                     }

                     if(strlen(chr_l_number_ident) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"TRRF");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_number_ident);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":13A:");
                        int_l_link_count++;
                     }
            			continue;
         			}
         			else if((!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,I_COMM_QUALIFIER_98)) )
         			{
                     (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
							memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"COMM");
                     strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value+7,16);
                     strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":20C:");
                     int_l_link_count++;

                     if(strlen(chr_l_link_typ_ind) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"COMM");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_link_typ_ind);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":22F:");
                        int_l_link_count++;
                     }

                     if(strlen(chr_l_number_ident) != 0)
                     {
                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
								memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"COMM");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_number_ident);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":13A:");
                        int_l_link_count++;
                     }
            			continue;
         			}
				}
				l_ms_54x_struct_h.count = int_l_link_count;

			}



	 if ((int_l_traddet_start==1)&& (int_l_traddet_occur==1))
    {
		if((!strcmp(h_msg_tag,I_PLACERR_CODERR_98)) && (!strcmp(chr_h_qualifier,TRAD_MESSAGE_QUALIFIER)) )
		{
	

				
					memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
					strncpy(h_code,chr_h_value+7,4);
					h_code[5]=APL_NULL_CHAR; 

					memset(chr_l_temp_narr,APL_NULL_CHAR,31);
					memset(chr_l_in_narr,APL_NULL_CHAR,31);
					strcpy(chr_l_in_narr,chr_h_value+12);
					chr_l_in_narr[strlen(chr_l_in_narr)]=APL_NULL_CHAR;	
					if( APL_FAILURE == MS_Chk_IncMsg54xNarr(chr_l_in_narr,
										  	 chr_l_temp_narr,
										 	 l_debug_info_ptr)) 
					{
                     fprintf(fl_userlog,"Failed To Validate Narrative part.\n");
                     APL_GOBACK_FAIL
					}
					strcpy(chr_h_narr,chr_l_temp_narr); 

					memset(chr_l_linkdet_narr,APL_NULL_CHAR,ISO_LINERR_LENGTH);
					strncat(chr_l_linkdet_narr,chr_h_value+5,6); 
					chr_l_linkdet_narr[7]=APL_NULL_CHAR;     
					strcat(chr_l_linkdet_narr,chr_h_narr);	  			

				

            if ( ( !strcmp(h_code,MS_CODE_EXCH) )  || ( !strcmp(h_code,OTCO_CODE) ))
            {
               printf("THE H_CODE IS %s\n",h_code);
               printf("THE H_NARR IS %s\n",chr_h_narr);
               EXEC SQL SELECT MAP_DESC
                        INTO :chr_h_code_desc
                        FROM PRO_SGENSTAT
                        WHERE ((MAP_VAL = :chr_h_narr) AND
                               (MAP_TYPE = 'PLACE_OF_TRADE') AND
                               (NATION_CODE = :g_mt_commonsys_params_struct_h.nation_code));

               IS_ANY_ORA_ERROR;
               if(sqlca.sqlcode==0)
               {
                  strcpy(l_ms_54x_struct_h.place_cd,chr_h_narr);
                  strcpy(l_ms_54x_struct_h.description,chr_h_code_desc);
                  strcat(l_ms_54x_struct_h.description,APL_NULL_STRING);
               }
               else if (sqlca.sqlcode==1403)
               {
                  strcpy(l_ms_54x_struct_h.description,chr_h_narr);
                  strcat(l_ms_54x_struct_h.description,APL_NULL_STRING);
               }
					if((strcmp(g_mt_commonsys_params_struct_h.nation_code,"GR")==0) 
						&& (strcmp(chr_h_narr,"BTEC")==0))
					{
						if (strlen(h_info) ==0)
						{
						strcpy(h_info,"/BROKERTEC/");
						strcat(h_info,chr_enter_char);
						strcat(h_info,chr_enter_char);
						strcat(h_info,chr_enter_char);
						}
						else
						{
						strcpy(chr_h_note_temp,"/BROKERTEC/");
						strcat(chr_h_note_temp,chr_enter_char);
						strncat(chr_h_note_temp,h_info,255);
						memset(h_info,APL_NULL_CHAR,266);
						strcpy(h_info,chr_h_note_temp);
						h_info[strlen(h_info)]=APL_NULL_CHAR;
							
						}
					}

               strcpy(chr_mainfuncarea, "INCOMING_MSG");
               strcpy(chr_l_condident, "NO_EXARENA_CHECK");
               if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                                     chr_l_condident,
                                                     &l_exchcheck,
                                                      l_debug_info_ptr) )
               {
                   APL_GOBACK_FAIL
               }

               if(l_exchcheck==0)
               {
                  if ( !strcmp(h_code,MS_CODE_EXCH) )
                  {
                     memset(l_ms_54x_struct_h.ex_arena,APL_NULL_CHAR,2);
                     strcpy(l_ms_54x_struct_h.ex_arena,"1");
                  }
                  else if( !strcmp(h_code,OTCO_CODE) )
                  {
                     memset(l_ms_54x_struct_h.ex_arena,APL_NULL_CHAR,2);
                     strcpy(l_ms_54x_struct_h.ex_arena,"2");
                  }
               }

               
					l_proc_on_exch = 0;
               if ( APL_FAILURE == CO_Chk_CntryEnabled("TRADE_PROCESSING" ,"PROC_ON_EXCHANGE",
                                                     &l_proc_on_exch, l_debug_info_ptr) )
               {
                  fprintf( fl_userlog, "Failed in CO_Chk_CntryEnabled for MICEX_TRADES\n");
                  APL_GOBACK_FAIL
               }

               if( l_proc_on_exch  )
               {
						memset(chr_l_typeoftrd,APL_NULL_CHAR,3);
						EXEC SQL SELECT FIELD_VAL
						INTO  :chr_l_typeoftrd
						FROM PRO_GSSPLVAL
						WHERE MAIN_FUN='ON_EXCH_TYPEOFTRD'
						AND   SUB_PROCESS=:chr_h_narr
						AND NATION=:g_mt_commonsys_params_struct_h.nation_code;

						IS_ANY_ORA_ERROR

						if (sqlca.sqlcode != 1403)
                  	strcpy(l_ms_54x_struct_h.dl_class,chr_l_typeoftrd);
               }

            }
            else if (( !strcmp(h_code,MS_CODE_PRIM) ) ||  ( !strcmp(h_code,MS_CODE_SECM) ))
            {
               memset(l_ms_54x_struct_h.ex_arena,APL_NULL_CHAR,2);
               memset(l_ms_54x_struct_h.description,APL_NULL_CHAR,41);
               memset(l_ms_54x_struct_h.place_cd,APL_NULL_CHAR,5);
            }
            



							

							
							(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,"TRADD");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"TRAD");
                     
								strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_linkdet_narr);	
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":94B:");
                        int_l_link_count++;

								
							memset(chr_g_trad_val,NULL,38);
                   
						  strcpy(chr_g_trad_val,chr_l_linkdet_narr);	
				}
		}

if (int_l_setprty_start==1)	
{
	if (( (!strcmp(h_msg_tag,I_DOMCPACCR_98)) || (!strcmp(h_msg_tag,I_DOMCPACCP_98)) || (!strcmp(h_msg_tag,I_DOMCPACCQ_98)) || (!strcmp(h_msg_tag,I_DOMCPACCS_98))|| (!strcmp(h_msg_tag,I_DOMCPACCC_98))) && ((!strcmp(chr_h_qualifier,PSET_QUALIFIER))))
		{
			strcpy(l_ms_54x_struct_h.psetparty,chr_l_str4);
         while(1)
         {
            memset(chr_l_str4, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
            
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
            if (chr_l_str4[0] == ':')
            {
                chr_l_read_line = 'T';
                break;
            }
            else if (chr_l_str4[0] == '-')
            {
                chr_l_read_line = 'T';
                break;
            }
            else
            {
					strcat(l_ms_54x_struct_h.psetparty,"|");
					strcat(l_ms_54x_struct_h.psetparty,chr_l_str4);
               continue;
            }

         }
		}						
	}

	if((int_l_genl_start==1) && (int_l_genl_occur ==1))
	{
		if (( !strcmp(h_msg_tag,NUMBER_COUNT)) && ((!strcmp(chr_h_qualifier,SETT_QUALIFIER))	|| (!strcmp(chr_h_qualifier,TOSE_MESSAGE_QUALIFIER)) ) )
		{
		    (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
			  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,chr_h_qualifier);
           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value+7); 
           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,":99B:");	
			  int_l_link_count++;

		}	
	}
	if((int_l_fiac_start==1)&&(int_l_fiac_occur==1))  
        {
        if(strlen(chr_l_place_code)!=0)
                {
                   (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51);
                  memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                      strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,"FIAC");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,"SAFE");
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_l_place_code);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                        int_l_link_count++;
								memset(chr_l_place_code,APL_NULL_CHAR,50);
                }
        }
	
		 
		}
		
		printf("DECU_RECU_NEXT_STR is %s\n",chr_decu_recu_next_str);
		printf("DECU_RECU_LINE is %s\n",chr_decu_recu_line);

		
		printf("h_54x_struct.count is %d\n",l_ms_54x_struct_h.count);
       printf("(*p_ms_rep_struct_h + 0)->client is %s",(*p_ms_rep_struct_h + 0)->client);
       printf("g_str_account is %s\n",chr_g_str_client);
       printf("cust_account is %s\n",chr_cust_client);
       strcpy(chr_cust_client,(*p_ms_rep_struct_h + 0)->client);
		 printf("h_54x_struct.count is %d\n",l_ms_54x_struct_h.count);
		 			if ( APL_FAILURE == MT_Rtv_AccFldVal(chr_cust_client, "partialflg",
                                          chr_cust_partial_flg, l_debug_info_ptr) )
      {
         fprintf(fl_userlog," Account %s  not int_found in Account Table\n",chr_cust_client);
      }

      if ((l_mt_core_sys_params_struct_h.part_confirm[0]=='Y') && (chr_cust_partial_flg[0] =='Y') && (int_l_npar_flg ==0))
      {
         l_ms_54x_struct_h.partial_ind_a[0]='Y';
         l_ms_54x_struct_h.partial_ind_a[1]='\0';
      }
		if (!strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd))
      {
			int_l_owni_found =1;	
         strcpy(l_ms_54x_struct_h.dl_class,DL_BOOKTRF_IND);
      }
		
      if(int_l_propremotetrd == 1)
	   {
			 int_l_owni_found =0;	
          strcpy(l_ms_54x_struct_h.dl_class,PROPREMOTEDEAL);
	   }

		
      if(int_l_nonprop_remtrd)
	   {
			 int_l_owni_found =0;	
          strcpy(l_ms_54x_struct_h.dl_class, NONPROPREMOTEDEAL);
	   }
		

		if (int_l_owni_found==1) 
		{

			if(strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd))
			{
				strcpy(chr_g_msg_sts,"RPR");
         	if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "INVALID BOOK TRANSFER TRADE",chr_g_str_client, NULL) )
         	{
           	 	CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
            	APL_GOBACK_FAIL
         	}
         	CO_InsertErr(l_debug_info_ptr,ERR_STATUS_TRDTYP_INVALID, APL_NULL_STRING, APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);	
			}
			
		}
	
		if ((strlen(l_ms_54x_struct_h.addindentity_no)==0) && (int_l_flg_canc==1))
		{
				fprintf(fl_userlog,"QUALIFIER PREV NOT FOUND IN LINK BLOCK OF CANCELLATION MESSAGE\n");
            strcpy(chr_g_msg_sts, "RJT");
            if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,"Qualifier PREV Not Found in LINK block",chr_g_str_client,(DEBUG_INFO_STRUCT_H **)NULL))
            {
               CO_ProcMonitor(APL_OUT_FILE,"Failed to insert into IINMSGRP.\n",NULL, NULL);
            }
            *int_p_retstat = IV_CRITCAL_ERROR_IND;
            APL_GOBACK_FAIL	
		}
      

		if(l_ru_micex) 
		{
          strcpy(l_ms_54x_struct_h.dl_class,ON_EXCHANGE_DEAL);
		}

		if(int_l_flg_canc==1)    
		{
				  if (!strcmp(chr_l_cust_def,"F") )
				  {
					  l_ms_gen_struct_h.h_failreason_cd  = 2;
				  }

				  if (!strcmp(chr_l_rep_seq,"T") )
				  {
					  l_ms_gen_struct_h.h_failreason_cd	 = 3;
				  }
				  if ((!strcmp(chr_l_found_ref,"F")) ||(!strcmp(chr_l_found_client,"F")) )
				  {
					  l_ms_gen_struct_h.h_failreason_cd =12;
				  }
				  if (!strcmp(chr_l_cust_not_def,"T") )
						  l_ms_gen_struct_h.h_failreason_cd   = 16;
		}

		printf("COUNTACC_LINE is %s\n",chr_countacc_line);
		printf("COUNTACC_NEXT_STR is %s\n",chr_countacc_next_str);
         
      memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN );
      memset(chr_l_condident, APL_NULL_CHAR, APL_CONDID_LEN);
      l_ext_trd_check = 0;

      strcpy(chr_mainfuncarea, "TRD_MAINT");
      strcpy(chr_l_condident, "EXT_TRD_CNTAC_ALWD");
      if ( APL_FAILURE == CO_Chk_CntryEnabled( chr_mainfuncarea,
                                             chr_l_condident,
                                             &l_ext_trd_check,
                                             l_debug_info_ptr) )
      {
          fprintf( fl_userlog,
                   "Failed in CO_Chk_CntryEnabled for EXT_TRD_CNTAC_ALWD\n");
                    APL_GOBACK_FAIL
      }

			if((strlen(chr_countacc_line)!=0) 
				&& (strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd)))
			{


                     
                     if(l_ext_trd_check!=0)
                     {

                        memset(h_msg_tag, APL_NULL_CHAR , 4);
                        memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                        memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                        strcpy(h_msg_tag,chr_l_countacc_tag);
                        strcpy(chr_h_qualifier,chr_l_countacc_qualifier);
                        strcpy(chr_h_value,chr_l_countacc_value);

                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) *(int_l_link_count + 1)));
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                        memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                        if (!strcmp(chr_h_qualifier,MSG_BUYR_QUAL))
                        {
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_BUYR_QUAL);
                        }
                        else
                        {
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,SELL_QUALIFIER);
                        }
                        if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                        {
                           strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_countacc_line,50);
                        }
                        else
                        {
                           strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                        }
                        strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                        int_l_link_count++;

                        if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
                        {
                           int_l_slash_count=0;
                           a=0;
                           for(i=0;i<strlen(chr_h_value);i++)
                           {
                              if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                              {
                                 a=i;
                                 int_l_slash_count=int_l_slash_count+1;
                              }
                           }
                           strcpy(l_ms_54x_struct_h.countclt_cname,chr_h_value+a+1);
                        }
                        else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                        {
                           strncpy(l_ms_54x_struct_h.countclt_cname,chr_countacc_line,66);
                           l_ms_54x_struct_h.countclt_cname[65]=APL_NULL_CHAR;
                        }
                        else if (!strcmp(h_msg_tag,I_DOMCPACCP_98))
                        {
                           a=0;
                           for(i=0;i<strlen(chr_h_value);i++)
                           {
                              if (chr_h_value[i]=='/')
                              {
                                 a=i;
                              }
                           }
                           strcpy(l_ms_54x_struct_h.countclt_cname,chr_h_value+a+1);
                        }
                        else if (!strcmp(h_msg_tag,I_DOMCPACCS_98))
                        {
                           strcpy(l_ms_54x_struct_h.countclt_cname,APL_NULL_STRING);
                        }


			memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                        memset(h_msg_tag, APL_NULL_CHAR , 4);
                        memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                        memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                        memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);

                        if (APL_FAILURE == MS_Proc_SplitStr (    chr_countacc_next_str,
                                                                h_msg_tag ,
                                                                chr_h_value ,
                                                                l_debug_info_ptr ))
                        {
                           fprintf( fl_userlog,
                                    "Failed to Split the Message Line %s\n",
                                    chr_countacc_next_str);
                           strcpy(chr_g_msg_sts, "RJT");     
                           if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                              "MESSAGE LINE NOT IN PROPER FORMAT",
                                                               chr_g_str_client,
                                                               (DEBUG_INFO_STRUCT_H **)NULL))
                           {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                         "Failed to insert into IINMSGRP.\n",
                                         NULL, NULL);
                           }
                           *int_p_retstat = IV_CRITCAL_ERROR_IND;
                           APL_GOBACK_FAIL
                        }
                        memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                        strncpy(chr_h_qualifier,chr_h_value,5);
                        if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                            || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                            && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                        {

									int_l_countacc_found=1;
                           (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,APL_NULL_CHAR,6);
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,APL_NULL_CHAR,6);
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,APL_NULL_CHAR,51 );
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,APL_NULL_CHAR,6);
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,SELLBU_SAFE_QUALIFIER);
                           strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);

                           int_l_link_count++;

                              int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
                                  if (((chr_h_value[i]=='/')
                                       && (int_l_slash_count<2)
                                       && (!strcmp(h_msg_tag,I_CLIENTA_98)))
                                    || ((chr_h_value[i]=='/')
                                       && (int_l_slash_count<3)
                                       && (!strcmp(h_msg_tag,I_CLIENTB_98))))
                                 {
                                    a=i;
                                    int_l_slash_count=int_l_slash_count+1;
                                 }
                              }
                          
                        memset(l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
                        strncpy(l_ms_54x_struct_h.cp_clt,chr_h_value+a+1,15);
                      }
                     else if((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                      {
									int_l_countacc_found=0;
                      } 

                     }
							else
							{
                        
			    				memset(int_l_countacc, APL_NULL_CHAR , APL_COUNTACC_LEN);
             				memset(chr_l_countacc_cname, APL_NULL_CHAR , 66);
             				memset(h_msg_tag, APL_NULL_CHAR , 4);
             				memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
             				memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
             				strcpy(h_msg_tag,chr_l_countacc_tag);
             				strcpy(chr_h_qualifier,chr_l_countacc_qualifier);
             				strcpy(chr_h_value,chr_l_countacc_value);

              
              (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) *(int_l_link_count + 1)));
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
               strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
               if (!strcmp(chr_h_qualifier,MSG_BUYR_QUAL))
               {
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_BUYR_QUAL);
                }
                else
                {
                   strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,SELL_QUALIFIER);
                }
               if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
                 strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_countacc_line,50);
                }
                else
                {
                   strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                 }
                 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                 int_l_link_count++;
                 


             if (!strcmp(h_msg_tag,I_DOMCPACCR_98))	
				 {
					  int_l_slash_count=0;	
                 a=0;
                 for(i=0;i<strlen(chr_h_value);i++)
                 {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }  
                 }

                  
                 strncpy(int_l_countacc,chr_h_value+a+1,15);
                 int_l_countacc[15] = APL_NULL_CHAR;
                 	
                 	strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                 	strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                 	if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                                   		chr_l_condident, &int_l_exist_a, l_debug_info_ptr))
                 	{
                 		fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                     APL_GOBACK_FAIL
                 	}
						
                  memset(chr_l_new_client, APL_NULL_CHAR, APL_CLIENT_LENGTH);
                  if ( int_l_exist_a )
                  {
							memset (chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                      memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                  	if ( strlen( int_l_countacc ) == 9 )
                   	{
                     	for ( i = 0; i < 6 ; i++ )
                     	{
                     		chr_l_new_client[i] = int_l_countacc[i];
                    		}
                     	strcat(chr_l_new_client,"-");
                     	chr_l_substr_client[0] = int_l_countacc[6] ;
                     	chr_l_substr_client[1] = int_l_countacc[7] ;
                     	chr_l_substr_client[2] = int_l_countacc[8] ;
                     	chr_l_substr_client[3] = APL_NULL_CHAR ;
                     	strcat(chr_l_new_client,chr_l_substr_client);
                     	strcpy( int_l_countacc, chr_l_new_client);
                 		}
							if ( (strlen( int_l_countacc ) == 10 ) && ( int_l_countacc[6] == ' ' ) ) 
                     {
                     	for ( i = 0; i < 6 ; i++ )
                        {
                        	chr_l_new_client[i] = int_l_countacc[i];
                        }
                        strcat(chr_l_new_client,"-");
                        chr_l_substr_client[0] = int_l_countacc[7] ;
                        chr_l_substr_client[1] = int_l_countacc[8] ;
                        chr_l_substr_client[2] = int_l_countacc[9] ;
                        chr_l_substr_client[3] = APL_NULL_CHAR ;
                        strcat(chr_l_new_client,chr_l_substr_client);
                        strcpy( int_l_countacc, chr_l_new_client);
                   	}
                	}
               if(!strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd))
                  {
                     
					  if (APL_FAILURE == IV_Rtv_CNameAccNew(int_l_countacc,
										  chr_l_countacc_cname,
										  &int_retstat,l_debug_info_ptr))	
					  {
                		if (int_retstat == IV_CRITCAL_ERROR_IND)
                		{
                     	CO_InsertErr(l_debug_info_ptr,
                        	            DB_ERR_NO,
                           	         "CACCOUNT",
                              	      APL_NULL_STRING,
                                 	   APL_NULL_STRING,
                                    	__LINE__,__FILE__);
                     	*int_p_retstat = IV_CRITCAL_ERROR_IND;
                      	APL_GOBACK_FAIL
                 		}
                     if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW_FOUND) ||(int_retstat==MST_CLI_SAME))
							{
            	         memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
               	      memset(h_msg_tag, APL_NULL_CHAR , 4);
                  	   memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     	memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     	memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     	if (APL_FAILURE == MS_Proc_SplitStr ( chr_countacc_next_str,
                        	                                 h_msg_tag ,
                           	                              chr_h_value ,
                                 	                        l_debug_info_ptr ))
                     	{
                        	fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                        	strcpy(chr_g_msg_sts, "RJT");     
                        	if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                           	                  "MESSAGE LINE NOT IN PROPER FORMAT",
																 chr_g_str_client,
                              	               (DEBUG_INFO_STRUCT_H **)NULL))
                        	{
                           	CO_ProcMonitor(APL_OUT_FILE,
                              	      "Failed to insert into IINMSGRP.\n",
                                 	   NULL, NULL);
                        	}
                        	*int_p_retstat = IV_CRITCAL_ERROR_IND;
                        	APL_GOBACK_FAIL
                     	}
 				            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            				strncpy(chr_h_qualifier,chr_h_value,5);

                     	if (!strcmp(h_msg_tag,END_TAG))
                     	{
									strcpy(l_ms_54x_struct_h.countclt_cname,int_l_countacc);
									fprintf(fl_userlog,"Counter Party Account Tag 97A not Found\n");
								}
                     	else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
												|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
											&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
								{
                        	memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                        	memset(chr_l_cname,APL_NULL_CHAR, 66 );
                        	memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                        	memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
									int_l_slash_count=0;
                        	a=0;
                        	for(i=0;i<strlen(chr_h_value);i++)
                        	{
			                      if (((chr_h_value[i]=='/') 
												&& (int_l_slash_count<2)
												&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     				|| ((chr_h_value[i]=='/') 
												&& (int_l_slash_count<3)
												&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    				{
                        			a=i;
                         			int_l_slash_count=int_l_slash_count+1;
                    				}
                        	}
                        	strncpy(chr_l_client_a,chr_h_value+a+1,10);
                        	chr_l_client_a[10] = APL_NULL_CHAR;
                        	
                        	strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                        	strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                        	if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, 
																					  chr_l_condident, 
																					  &int_l_exist_a, l_debug_info_ptr))
                        	{
                          		fprintf(fl_userlog,
												"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                          		APL_GOBACK_FAIL
                        	}
                        	if ( int_l_exist_a )
                        	{
                          		if ( strlen( chr_l_client_a ) == 9 )
                          		{
                             		for ( i = 0; i < 6 ; i++ )
                             		{
                                		chr_l_new_client[i] = chr_l_client_a[i];
                             		}
                             		strcat(chr_l_new_client,"-");
                             		chr_l_substr_client[0] = chr_l_client_a[6] ;
                             		chr_l_substr_client[1] = chr_l_client_a[7] ;
                             		chr_l_substr_client[2] = chr_l_client_a[8] ;
                             		chr_l_substr_client[3] = APL_NULL_CHAR ;
                             		strcat(chr_l_new_client,chr_l_substr_client);
                             		strcpy( chr_l_client_a, chr_l_new_client);
                          		}
										if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                   				{
                      				for ( i = 0; i < 6 ; i++ )
                      				{
                         				chr_l_new_client[i] = chr_l_client_a[i];
                      				}
                      				strcat(chr_l_new_client,"-");
                      				chr_l_substr_client[0] = chr_l_client_a[7] ;
                      				chr_l_substr_client[1] = chr_l_client_a[8] ;
                      				chr_l_substr_client[2] = chr_l_client_a[9] ;
                      				chr_l_substr_client[3] = APL_NULL_CHAR ;
                      				strcat(chr_l_new_client,chr_l_substr_client);
                      				strcpy( chr_l_client_a, chr_l_new_client);
                    				}
                        	}
                        	if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
									{
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                          		{
                             		CO_InsertErr(l_debug_info_ptr,
                                   		         DB_ERR_NO,
                                         		   "CACCOUNT",
                                            		APL_NULL_STRING,
                                            		APL_NULL_STRING,
                                            		__LINE__,__FILE__);
                             		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                             		APL_GOBACK_FAIL
                          		}
	                         	if (int_retstat == IV_NO_DATA_FOUND_ERR)
										{
											strcpy(l_ms_54x_struct_h.countclt_cname,int_l_countacc);
											fprintf(fl_userlog,"Failed To Select Counterparty Name From ACCOUNT Table\n");
										}
									}
									else
									{
										if(!strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd) && (int_l_propremotetrd!=1))
										{
                          			strcpy(l_ms_54x_struct_h.cp_clt,chr_l_client_a);
                          			strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_cname);											
										}
										else
											strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_client_a);
									}
								}
								else
								{
							   	strcpy(l_ms_54x_struct_h.countclt_cname,int_l_countacc);
								}
                    	}
						}
						else
						{
						     
                      chr_l_countacc_cname[65] = APL_NULL_CHAR;
                  		strcpy(l_ms_54x_struct_h.countclt_cname,int_l_countacc);
						}
               }
               else
               {
                  
                      
                     memset (l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
                     strcpy(l_ms_54x_struct_h.countclt_cname,int_l_countacc);
               }
				 }
         	 else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
				 {
             	strncpy(l_ms_54x_struct_h.countclt_cname,chr_countacc_line,66);
					l_ms_54x_struct_h.countclt_cname[65]=APL_NULL_CHAR;
             	int_retstat = IV_SUCCESS;
               if(!strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd))
                  {
                   
             	if (APL_FAILURE == MS_Rtv_CNameAcc(l_ms_54x_struct_h.countclt_cname,
               	                                       l_ms_54x_struct_h.cp_clt,
                  	                                    &int_retstat,
                     	                                 l_debug_info_ptr) )
					{
						 if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW))
						 {
                           memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           memset(h_msg_tag, APL_NULL_CHAR , 4);
                           memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                           if (APL_FAILURE == MS_Proc_SplitStr ( chr_countacc_next_str,
                                                               h_msg_tag ,
                                                               chr_h_value ,
                                                               l_debug_info_ptr ))
                           {
                              fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                              strcpy(chr_g_msg_sts, "RJT");     
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                                                (DEBUG_INFO_STRUCT_H **)NULL))
                              {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                          "Failed to insert into IINMSGRP.\n",
                                          NULL, NULL);
                              }
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
 					            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            					strncpy(chr_h_qualifier,chr_h_value,5);

                           if (!strcmp(h_msg_tag,END_TAG))
                           {
                                  
											memset (l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
											
                              fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
                           }
                           else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
													|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
											  && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
									{
                              memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                              memset(chr_l_cname,APL_NULL_CHAR, 66 );
                              memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                              memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
						               if (((chr_h_value[i]=='/') 
													&& (int_l_slash_count<2)
													&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     					|| ((chr_h_value[i]=='/') 
													&& (int_l_slash_count<3)
													&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                              }
                              strncpy(chr_l_client_a,chr_h_value+a+1,10);
                              chr_l_client_a[10] = APL_NULL_CHAR;
                              
                              strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                              strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                              if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
																						  chr_l_condident,
																						  &int_l_exist_a,
																							l_debug_info_ptr))
                              {
                                 fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                                 APL_GOBACK_FAIL
                              }
                              if ( int_l_exist_a )
                              {
                                 if ( strlen( chr_l_client_a ) == 9 )
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[6] ;
                                    chr_l_substr_client[1] = chr_l_client_a[7] ;
                                    chr_l_substr_client[2] = chr_l_client_a[8] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 }
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                              	{
                                 	for ( i = 0; i < 6 ; i++ )
                                 	{
                                    	chr_l_new_client[i] = chr_l_client_a[i];
                                 	}
                                 	strcat(chr_l_new_client,"-");
                                 	chr_l_substr_client[0] = chr_l_client_a[7] ;
                                 	chr_l_substr_client[1] = chr_l_client_a[8] ;
                                 	chr_l_substr_client[2] = chr_l_client_a[9] ;
                                 	chr_l_substr_client[3] = APL_NULL_CHAR ;
                                 	strcat(chr_l_new_client,chr_l_substr_client);
                                 	strcpy(chr_l_client_a, chr_l_new_client);
                              	}
                              }
										if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,
																								chr_l_cname,
																							   &int_retstat,
																								l_debug_info_ptr))
										{
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                                 {
                                    CO_InsertErr(l_debug_info_ptr,
                                                   DB_ERR_NO,
                                                   "CACCOUNT",
                                                   APL_NULL_STRING,
                                                   APL_NULL_STRING,__LINE__,__FILE__);
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;

                                    APL_GOBACK_FAIL

                                 }
                                 if (int_retstat == IV_NO_DATA_FOUND_ERR)
                                 {
		                                 fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
                                 }
										}
										else
										{
												strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_client_a);
										}
									}
						 }
									
					}
					else
					{
						 
						if(strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd) && (int_l_propremotetrd!=1))
						{
						
                      
							memset (l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
						}
					}
               }
              else
               {
                     
                     
                     memset (l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
               }
				 }
				 else if (!strcmp(h_msg_tag,I_DOMCPACCP_98))
				 {
                     a=0;
                     for(i=0;i<strlen(chr_h_value);i++)
                     {
                        if (chr_h_value[i]=='/')
                        {
                           a=i;
                        }
                     }
                     memset(chr_l_bic_code, APL_NULL_CHAR, 13);
                     strncpy(chr_l_bic_code,chr_h_value+a+1,12);
                     chr_l_bic_code[12] = APL_NULL_CHAR;

                     int_l_bogcode = 0;

                    if ( APL_FAILURE == CO_Chk_SplVal("INCOMING_MSG",
                                                     "BIC_CODE_87A",
                                                      chr_l_bic_code,
                                                      &int_l_bogcode,
                                                      l_debug_info_ptr) )
                     {
                        *int_p_retstat = IV_CRITCAL_ERROR_IND;
                        APL_GOBACK_FAIL
                     }

                     if ( int_l_bogcode )
                     {
                        strcpy(l_ms_54x_struct_h.dl_class, EXTERNALDEAL);
                     }
                     int_retstat = IV_SUCCESS;
                  if(!strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd))
                     {
                        
                     if (APL_FAILURE == IV_Rtv_BICCDAccNew( chr_l_bic_code,
                     		                                       l_ms_54x_struct_h.cp_clt,
                            		                                 l_ms_54x_struct_h.countclt_cname,
                                     			                     &int_retstat, l_debug_info_ptr))
							{
                        if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW_FOUND) ||(int_retstat==MST_CLI_SAME))
                        {
                           memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           memset(h_msg_tag, APL_NULL_CHAR , 4);
                           memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                           if (APL_FAILURE == MS_Proc_SplitStr (chr_countacc_next_str,
                                                               h_msg_tag ,
                                                               chr_h_value ,
                                                               l_debug_info_ptr ))
                           {
                              fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                              strcpy(chr_g_msg_sts, "RJT");     
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                                                (DEBUG_INFO_STRUCT_H **)NULL))
                              {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                          "Failed to insert into IINMSGRP.\n",
                                          NULL, NULL);
                              }
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
   					         memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
 	           					strncpy(chr_h_qualifier,chr_h_value,5);

                           if (!strcmp(h_msg_tag,END_TAG))
                           {
											strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_bic_code);	
                              	fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
                           }
                           else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
												|| (!strcmp(h_msg_tag,I_CLIENTB_98)))
											  && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
									{
                              memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                              memset(chr_l_cname,APL_NULL_CHAR, 66 );
                              memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                              memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
                    					
				                    	if (((chr_h_value[i]=='/') 
													&& (int_l_slash_count<2)
													&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     					|| ((chr_h_value[i]=='/') 
													&& (int_l_slash_count<3)
													&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                              }
                              strncpy(chr_l_client_a,chr_h_value+a+1,10);
                              chr_l_client_a[10] = APL_NULL_CHAR;
                              
                              strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                              strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                              if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, 
																						  chr_l_condident, 
																					  &int_l_exist_a, l_debug_info_ptr))
                              {
                                 fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                                 APL_GOBACK_FAIL
                              }
                              if ( int_l_exist_a )
                              {
                                 if ( strlen( chr_l_client_a ) == 9 )
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[6] ;
                                    chr_l_substr_client[1] = chr_l_client_a[7] ;
                                    chr_l_substr_client[2] = chr_l_client_a[8] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 } 
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                              	{
                                 	for ( i = 0; i < 6 ; i++ )
                                 	{
                                    	chr_l_new_client[i] = chr_l_client_a[i];
                                 	}
                                 	strcat(chr_l_new_client,"-");
                                 	chr_l_substr_client[0] = chr_l_client_a[7] ;
                                 	chr_l_substr_client[1] = chr_l_client_a[8] ;
                                 	chr_l_substr_client[2] = chr_l_client_a[9] ;
                                 	chr_l_substr_client[3] = APL_NULL_CHAR ;
                                 	strcat(chr_l_new_client,chr_l_substr_client);
                                 	strcpy( chr_l_client_a, chr_l_new_client);
                              	}
                              }
                              if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,
																								chr_l_cname,
																								&int_retstat,
																								l_debug_info_ptr))
										{
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                                 {
                                    CO_InsertErr(l_debug_info_ptr,
                                                   DB_ERR_NO,
                                                   "CACCOUNT",
                                                   APL_NULL_STRING,
                                                   APL_NULL_STRING,
                                                   __LINE__,__FILE__);
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                    APL_GOBACK_FAIL
                                 }
										strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_bic_code);
                                    fprintf(fl_userlog,"Failed To Select The customer Name from ACCOUNT table\n");
										}
										else
										{
                                     
												memset(l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
												strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_client_a);
												memset(chr_l_client_a,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										}
									}
									else
									{
										strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_bic_code);
                               
										memset(l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
									}
								}
								else
								{
									strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_bic_code);
								}

							}
							else
							{
								 
								if(strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd) && (int_l_propremotetrd!=1))	
								{
									strcpy(l_ms_54x_struct_h.countclt_cname,l_ms_54x_struct_h.cp_clt);
                            
									memset(l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
								}
								
							}									
                  }
                  else
                   {
                       
                     
                     memset (l_ms_54x_struct_h.cp_clt,APL_NULL_CHAR,APL_COUNTACC_LEN);
                     strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_bic_code);
                   }
				    }

           
                       
              if (APL_FAILURE == MS_Proc_SplitStr ( chr_countacc_next_str,
                                                   h_msg_tag ,
                                                   chr_h_value ,
                                                   l_debug_info_ptr ))
              {
                  fprintf(fl_userlog,
                         "Failed to Split the Message Line %s\n",
                          chr_countacc_next_str);
                   strcpy(chr_g_msg_sts, "RJT");     
                   if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                   "MESSAGE LINE NOT IN PROPER FORMAT",
                                                    chr_g_str_client,
                                                    (DEBUG_INFO_STRUCT_H **)NULL))
                   {
                        CO_ProcMonitor(APL_OUT_FILE,
                                 "Failed to insert into IINMSGRP.\n",
                                 NULL, NULL);
                   }
                   *int_p_retstat = IV_CRITCAL_ERROR_IND;
                    APL_GOBACK_FAIL
              }
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               strncpy(chr_h_qualifier,chr_h_value,5);

               if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                  || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                  && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
               {
		  l_sellbuyrsafe_exist=1; 
               }
           
           if(l_sellbuyrsafe_exist == 1)
           {
                       (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,SELLBU_SAFE_QUALIFIER);
                       strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                       int_l_link_count++;
             }
       


			 }
		   }

      printf("COUNTACC_LINE is %s\n",chr_countacc_line);
      printf("COUNTACC_NEXT_STR is %s\n",chr_countacc_next_str);
         if((strlen(chr_countacc_line)!=0)
				&& (!strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd)))
         {
               
              memset(int_l_countacc, APL_NULL_CHAR ,APL_COUNTACC_LEN);
	      memset(chr_l_countacc_cname, APL_NULL_CHAR , 66);
	      memset(h_msg_tag, APL_NULL_CHAR , 4);
       	      memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
	      memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
	      strcpy(h_msg_tag,chr_l_countacc_tag);
              strcpy(chr_h_qualifier,chr_l_countacc_qualifier);
	      strcpy(chr_h_value,chr_l_countacc_value);
	    
		  (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) *(int_l_link_count + 1)));
		 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
		 memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
	         memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
	         memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
	         strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
	         if (!strcmp(chr_h_qualifier,MSG_BUYR_QUAL))
	         {
		    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_BUYR_QUAL);
	         }
	         else
	         {
		    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,SELL_QUALIFIER);
		 }
			   
	         if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
	         {
	            strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_countacc_line,50);
	          }
	         else
	         {
		    strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
	   	 }
		    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
		     int_l_link_count++;
	      

				
            memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
            memset(h_msg_tag, APL_NULL_CHAR , 4);
            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            if (APL_FAILURE == MS_Proc_SplitStr (   chr_countacc_next_str,
                                                   h_msg_tag ,
                                                   chr_h_value ,
                                                   l_debug_info_ptr ))
            {
               fprintf(fl_userlog,
                       "Failed to Split the Message Line %s\n",
                        chr_countacc_next_str);
               strcpy(chr_g_msg_sts, "RJT");     
               if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                    "MESSAGE LINE NOT IN PROPER FORMAT",
                                    chr_g_str_client,
                                    (DEBUG_INFO_STRUCT_H **)NULL))
               {
                  CO_ProcMonitor(APL_OUT_FILE,
                           "Failed to insert into IINMSGRP.\n",
                           NULL, NULL);
               }
               *int_p_retstat = IV_CRITCAL_ERROR_IND;
               APL_GOBACK_FAIL
            }
            APL_IF_DEBUG
            {
               printf("the h_msg_tag is %s\n",h_msg_tag);
               printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
            }
            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            strncpy(chr_h_qualifier,chr_h_value,5);
            if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
            {
                memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                memset(chr_l_cname,APL_NULL_CHAR, 66 );
                memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                int_l_slash_count=0;
                a=0;
                for(i=0;i<strlen(chr_h_value);i++)
                {
                   if (((chr_h_value[i]=='/')
                       && (int_l_slash_count<2)
                       && (!strcmp(h_msg_tag,I_CLIENTA_98)))
                    || ((chr_h_value[i]=='/')
                       && (int_l_slash_count<3)
                       && (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    {
                       a=i;
                       int_l_slash_count=int_l_slash_count+1;
                    }
                 }
                 strncpy(chr_l_client_a,chr_h_value+a+1,10);
                 chr_l_client_a[10] = APL_NULL_CHAR;
                 
                 strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                 strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                 if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                                       chr_l_condident,
                                                       &int_l_exist_a, l_debug_info_ptr))
                 {
                    fprintf(fl_userlog,
                           "Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                    APL_GOBACK_FAIL
                 }
                 if ( int_l_exist_a )
                 {
                    if ( strlen( chr_l_client_a ) == 9 )
                    {
                       for ( i = 0; i < 6 ; i++ )
                       {
                          chr_l_new_client[i] = chr_l_client_a[i];
                       }
                       strcat(chr_l_new_client,"-");
                       chr_l_substr_client[0] = chr_l_client_a[6] ;
                       chr_l_substr_client[1] = chr_l_client_a[7] ;
                       chr_l_substr_client[2] = chr_l_client_a[8] ;
                       chr_l_substr_client[3] = APL_NULL_CHAR ;
                       strcat(chr_l_new_client,chr_l_substr_client);
                       strcpy( chr_l_client_a, chr_l_new_client);
                     }
                     if ((strlen(chr_l_client_a) == 10) && (chr_l_client_a[6] == ' '))
                     {
                        for ( i = 0; i < 6 ; i++ )
                        {
                           chr_l_new_client[i] = chr_l_client_a[i];
                        }
                        strcat(chr_l_new_client,"-");
                        chr_l_substr_client[0] = chr_l_client_a[7] ;
                        chr_l_substr_client[1] = chr_l_client_a[8] ;
                        chr_l_substr_client[2] = chr_l_client_a[9] ;
                        chr_l_substr_client[3] = APL_NULL_CHAR ;
                        strcat(chr_l_new_client,chr_l_substr_client);
                        strcpy( chr_l_client_a, chr_l_new_client);
                     }
                  }
               
              (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                      memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                      memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                      memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                      memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                      strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                      strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,SELLBU_SAFE_QUALIFIER);
                      strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                       int_l_link_count++;
               

                  if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,
                                                            chr_l_cname,
                                                            &int_retstat,l_debug_info_ptr))
                  {
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                      {
                           CO_InsertErr(l_debug_info_ptr,
                                       DB_ERR_NO,
                                       "CACCOUNT",
                                       APL_NULL_STRING,
                                       APL_NULL_STRING,
                                       __LINE__,__FILE__);
                           *int_p_retstat = IV_CRITCAL_ERROR_IND;
                           APL_GOBACK_FAIL
                       }
                       if (int_retstat == IV_NO_DATA_FOUND_ERR)
                       {
								l_invalid_97a=1;
							  }
						}
						else
						{
							if(!strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd) 
								&& (int_l_propremotetrd!=1))
                       {
                          strcpy(l_ms_54x_struct_h.cp_clt,chr_l_client_a);
                          strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_cname);
                       }
							
							 chr_l_buyrsell_multimstacc[0] = 'N'; 
             		}
					}
					if (!strcmp(h_msg_tag,END_TAG) || (l_invalid_97a==1))
					{
                   
            		memset(int_l_countacc, APL_NULL_CHAR ,APL_COUNTACC_LEN);
            		memset(chr_l_countacc_cname, APL_NULL_CHAR , 66);
            		memset(h_msg_tag, APL_NULL_CHAR , 4);
            		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            		strcpy(h_msg_tag,chr_l_countacc_tag);
            		strcpy(chr_h_qualifier,chr_l_countacc_qualifier);
            		strcpy(chr_h_value,chr_l_countacc_value);
			
                    
		    
                 
            		if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
            		{
               		int_l_slash_count=0;
               		a=0;
               		for(i=0;i<strlen(chr_h_value);i++)
               		{
                  		if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                  		{
                     		a=i;
                     		int_l_slash_count=int_l_slash_count+1;
                  		}
               		}
                      
               		strncpy(int_l_countacc,chr_h_value+a+1,15);
               		int_l_countacc[15] = APL_NULL_CHAR;
               		
               		strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
               		strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
               		if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                     		                                chr_l_condident,
                           		                          &int_l_exist_a,
                                 		                    l_debug_info_ptr))
               		{
                  		fprintf(fl_userlog,
                  		"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                  		APL_GOBACK_FAIL
               		}
               		memset(chr_l_new_client, APL_NULL_CHAR, APL_CLIENT_LENGTH);
               		if ( int_l_exist_a )
               		{
                  		if ( strlen( int_l_countacc ) == 9 )
                  		{
                     		for ( i = 0; i < 6 ; i++ )
                     		{
                        		chr_l_new_client[i] = int_l_countacc[i];
                     		}
                     		strcat(chr_l_new_client,"-");
                     		chr_l_substr_client[0] = int_l_countacc[6] ;
                     		chr_l_substr_client[1] = int_l_countacc[7] ;
                     		chr_l_substr_client[2] = int_l_countacc[8] ;
                     		chr_l_substr_client[3] = APL_NULL_CHAR ;
                     		strcat(chr_l_new_client,chr_l_substr_client);
                     		strcpy( int_l_countacc, chr_l_new_client);
                  		}
                  		if ((strlen(int_l_countacc)==10) && (int_l_countacc[6]==' '))
                  		{
                     		for ( i = 0; i < 6 ; i++ )
                     		{
                        		chr_l_new_client[i] = int_l_countacc[i];
                     		}
                     		strcat(chr_l_new_client,"-");
                     		chr_l_substr_client[0] = int_l_countacc[7] ;
                     		chr_l_substr_client[1] = int_l_countacc[8] ;
                     		chr_l_substr_client[2] = int_l_countacc[9] ;
                     		chr_l_substr_client[3] = APL_NULL_CHAR ;
                     		strcat(chr_l_new_client,chr_l_substr_client);
                     		strcpy( int_l_countacc, chr_l_new_client);
                  		}
               		}
               		if (APL_FAILURE == IV_Rtv_CNameAccNew(int_l_countacc,
                     		               chr_l_countacc_cname,
                           		         &int_retstat,l_debug_info_ptr))
               		{
                  		if (int_retstat == IV_CRITCAL_ERROR_IND)
                  		{
                     		CO_InsertErr(l_debug_info_ptr,
                          		          	DB_ERR_NO,
                                    		"CACCOUNT",
                                    		APL_NULL_STRING,
                                    		APL_NULL_STRING,
                                    		__LINE__,__FILE__);
                     		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                     		APL_GOBACK_FAIL
                  		}
                  		if ((int_retstat == IV_NO_DATA_FOUND_ERR)
                  		|| (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                  		||(int_retstat==MST_CLI_SAME))
                  		{
                        		strcpy(l_ms_54x_struct_h.countclt_cname,int_l_countacc);
                     		}
                  		}
								else
								{
                        	strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_countacc_cname);
                        	strcpy(l_ms_54x_struct_h.cp_clt,int_l_countacc);
								}
            		}
						else if (!strcmp(h_msg_tag,I_DOMCPACCP_98))
            		{
               		a=0;
               		for(i=0;i<strlen(chr_h_value);i++)
               		{
                  		if (chr_h_value[i]=='/')
                  		{
                     		a=i;
                  		}
               		}
               		memset(chr_l_bic_code, APL_NULL_CHAR, 13);
               		strncpy(chr_l_bic_code,chr_h_value+a+1,12);
               		chr_l_bic_code[12] = APL_NULL_CHAR;
               		int_l_bogcode = 0;

		               if ( APL_FAILURE == CO_Chk_SplVal("INCOMING_MSG",
      		         	                             "BIC_CODE_87A",
            			   	                           chr_l_bic_code,
                           				               &int_l_bogcode,
                                       				   l_debug_info_ptr) )
               		{
                  		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                  		APL_GOBACK_FAIL
               		}
               		if ( int_l_bogcode )
               		{
                  		strcpy(l_ms_54x_struct_h.dl_class, EXTERNALDEAL);
               		}
               		int_retstat = IV_SUCCESS;
							
               		if(APL_FAILURE==IV_Rtv_MultBicCdAcc(chr_l_bic_code, l_ms_54x_struct_h.domestic_cpclt,
                     			                         l_ms_54x_struct_h.cp_clt,
                              			                l_ms_54x_struct_h.countclt_cname,
																		 chr_l_buyrsell_multimstacc,
                                       			       &int_retstat, l_debug_info_ptr))
               		{
                  		if ((int_retstat == IV_NO_DATA_FOUND_ERR))
                  		{
               				if(!strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd)
										&&(int_l_propremotetrd!=1))
               				{
                  				strcpy(l_ms_54x_struct_h.countclt_cname,chr_l_bic_code);
                  				fprintf(fl_userlog,
										"Failed To Select The customer Name from ACCOUNT table\n");
                  			}
            				}
							}
					}
					else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
					{
						strncpy(l_ms_54x_struct_h.countclt_cname,chr_countacc_line,66);
               	l_ms_54x_struct_h.countclt_cname[65]=APL_NULL_CHAR;
               	int_retstat = IV_SUCCESS;
               	if (APL_FAILURE == MS_Rtv_CNameAcc(l_ms_54x_struct_h.countclt_cname,
                  	                                       l_ms_54x_struct_h.cp_clt,
                     	                                    &int_retstat,
                        	                                 l_debug_info_ptr) )
               	{
                   	if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW))
                   	{
								printf("Counterparty client not int_found in 95Q %s\n",l_ms_54x_struct_h.countclt_cname);
						 	}
						}
					}
				}
			}

				if((strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd))
					 &&(strlen(chr_decu_recu_line)!=0))
      		{
							 
							if(l_ext_trd_check!=0)
							{

                  		memset(chr_l_clientof, APL_NULL_CHAR , 36);
                  		memset(chr_l_clientof_cname, APL_NULL_CHAR , 66);
                  		memset(h_msg_tag, APL_NULL_CHAR , 4);
                  		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  		strcpy(h_msg_tag,chr_l_decu_recu_tag);
                  		strcpy(chr_h_qualifier,chr_l_decu_recu_qualifier);
                  		strcpy(chr_h_value,chr_l_decu_recu_value);

	       					(*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) *(int_l_link_count + 1)));
               			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
               			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
               			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
               			memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
               			strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
               			if (!strcmp(chr_h_qualifier,MSG_DECU_QUAL))
               			{
                       		strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DECU_QUAL);
                			}
                			else
                			{
                  			strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,RECU_QUALIFIER);
                			}
                			if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                			{
                    			strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_decu_recu_line,50);
                 			}
                 			else
                 			{
                     		strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                 			}
                 			strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                 			int_l_link_count++;

               			if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
               			{
                  			int_l_slash_count=0;
                  			a=0;
                  			for(i=0;i<strlen(chr_h_value);i++)
                  			{
                    				if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    				{
                        			a=i;
                         			int_l_slash_count=int_l_slash_count+1;
                    				}
                  			}
									strcpy(l_ms_54x_struct_h.clientof_cname,chr_h_value+a+1);
								}
               			else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
								{
									strncpy(l_ms_54x_struct_h.clientof_cname,chr_decu_recu_line,66);	
								}
               			else if (!strcmp(h_msg_tag,I_DOMCPACCP_98))
								{
                     		a=0;
                     		for(i=0;i<strlen(chr_h_value);i++)
                     		{
                        		if (chr_h_value[i]=='/')
                        		{
                           		a=i;
                        		}
                     		}
									strcpy(l_ms_54x_struct_h.clientof_cname,chr_h_value+a+1);
								}
               			else if (!strcmp(h_msg_tag,I_DOMCPACCS_98))
								{
									strcpy(l_ms_54x_struct_h.clientof_cname,APL_NULL_STRING);
								}
								
								memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                        memset(h_msg_tag, APL_NULL_CHAR , 4);
                        memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                        memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                        memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);

                   		if (APL_FAILURE == MS_Proc_SplitStr (    chr_decu_recu_next_str,
                        	                                     h_msg_tag ,
                           	                                  chr_h_value ,
                              	                               l_debug_info_ptr ))
                   		{
                       		fprintf(	fl_userlog,
                           	     	"Failed to Split the Message Line %s\n",
                                		chr_decu_recu_next_str);
                       		strcpy(chr_g_msg_sts, "RJT");     
                       		if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                           		                             "MESSAGE LINE NOT IN PROPER FORMAT",
                                 		                        chr_g_str_client,
                                       		                  (DEBUG_INFO_STRUCT_H **)NULL))
                       		{
                             		CO_ProcMonitor(APL_OUT_FILE,
                                 	     "Failed to insert into IINMSGRP.\n",
                                    	  NULL, NULL);
                       		}
                       		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                        	APL_GOBACK_FAIL
                    		}
                    		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                    		strncpy(chr_h_qualifier,chr_h_value,5);

	                     if (((!strcmp(h_msg_tag,I_CLIENTA_98))
    	                      || (!strcmp(h_msg_tag,I_CLIENTB_98)))
      	                   && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                    		{
									int_l_clientof_found=1;
                           (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,APL_NULL_CHAR,6);
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,APL_NULL_CHAR,6);
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,APL_NULL_CHAR,51 );
                           memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,APL_NULL_CHAR,6);
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DECU_SAFE_QUAL);
                           strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                           strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);                                       
			      				int_l_link_count++;

                              int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
                                  if (((chr_h_value[i]=='/')
                                       && (int_l_slash_count<2)
                                       && (!strcmp(h_msg_tag,I_CLIENTA_98)))
                                    || ((chr_h_value[i]=='/')
                                       && (int_l_slash_count<3)
                                       && (!strcmp(h_msg_tag,I_CLIENTB_98))))
                                 {
                                    a=i;
                                    int_l_slash_count=int_l_slash_count+1;
                                 }
                              }
                    		memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
                    		strncpy(l_ms_54x_struct_h.clientof,chr_h_value+a+1,10);
                    	 }
                    	else if((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                    	 {
									int_l_clientof_found=0;
         	          }

							}
							else
							{
                  		memset(chr_l_clientof, APL_NULL_CHAR , 36);
                  		memset(chr_l_clientof_cname, APL_NULL_CHAR , 66);
                  		memset(h_msg_tag, APL_NULL_CHAR , 4);
                  		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  		strcpy(h_msg_tag,chr_l_decu_recu_tag);
                  		strcpy(chr_h_qualifier,chr_l_decu_recu_qualifier);
                  		strcpy(chr_h_value,chr_l_decu_recu_value);
								printf("h_value is DECU_RECU FOR 'R' block is %s\n",chr_h_value);
            	
            	APL_IF_DEBUG
            	{
               	printf("the h_msg_tag is %s\n",h_msg_tag);
               	printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
            	}
            	

               memset(chr_l_clientof,APL_NULL_CHAR,36);
               memset(chr_l_clientof_cname,APL_NULL_CHAR,66);

               
               (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) *(int_l_link_count + 1)));
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
               memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
               strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
               if (!strcmp(chr_h_qualifier,MSG_DECU_QUAL))
               {
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DECU_QUAL);
                }
                else
                {
                  strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,RECU_QUALIFIER);
                }
                if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                {
                    strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_decu_recu_line,50);
                 }
                 else
                 {
                     strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                 }
                 strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                 int_l_link_count++;
                 
               if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
               {
						int_l_slash_count=0;
                  a=0;
                  for(i=0;i<strlen(chr_h_value);i++)
                  {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
                  }
                  strncpy( l_ms_54x_struct_h.clientof,chr_h_value+a+1,10);
                  chr_l_clientof[10]=APL_NULL_CHAR;
						memset(chr_decu_recu_desc,APL_NULL_CHAR,66); 
                  strcpy(chr_decu_recu_desc,l_ms_54x_struct_h.clientof); 
                  if (APL_FAILURE == IV_Rtv_CNameAccNew(l_ms_54x_struct_h.clientof,
                                                           l_ms_54x_struct_h.clientof_cname,
                                                           &int_retstat,l_debug_info_ptr))
                  {
                     if (int_retstat == IV_CRITCAL_ERROR_IND)
                     {
                        CO_InsertErr(l_debug_info_ptr,
                                       DB_ERR_NO,
                                       "CACCOUNT",
                                       APL_NULL_STRING,
                                       APL_NULL_STRING,
                                       __LINE__,__FILE__);
                        *int_p_retstat = IV_CRITCAL_ERROR_IND;
                        APL_GOBACK_FAIL
                     }
							if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW_FOUND) || (int_retstat==MST_CLI_SAME))
                     {
                           memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           memset(h_msg_tag, APL_NULL_CHAR , 4);
                           memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                           if (APL_FAILURE == MS_Proc_SplitStr (    chr_decu_recu_next_str,
                                                               h_msg_tag ,
                                                               chr_h_value ,
                                                               l_debug_info_ptr ))
                           {
                              fprintf(fl_userlog,
													"Failed to Split the Message Line %s\n",
													chr_decu_recu_next_str);
                              strcpy(chr_g_msg_sts, "RJT");     
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                         "MESSAGE LINE NOT IN PROPER FORMAT",
                                                                 chr_g_str_client,
                                                                (DEBUG_INFO_STRUCT_H **)NULL))
                              {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                          "Failed to insert into IINMSGRP.\n",
                                          NULL, NULL);
                              }
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
 					            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            				   strncpy(chr_h_qualifier,chr_h_value,5);

                           if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
											|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
										&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                           {
                              memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                              memset(chr_l_cname,APL_NULL_CHAR, 66 );
                              memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                              memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
			                   		 if (((chr_h_value[i]=='/') 
													&& (int_l_slash_count<2)
													&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     					|| ((chr_h_value[i]=='/') 
													&& (int_l_slash_count<3)
													&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                              }
                              strncpy(chr_l_client_a,chr_h_value+a+1,10);
                              chr_l_client_a[10] = APL_NULL_CHAR;
                            
                              strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                              strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                              if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                                           chr_l_condident, &int_l_exist_a, l_debug_info_ptr) )
                              {
                                 fprintf(fl_userlog,
													"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                                 APL_GOBACK_FAIL
                              }
                           if ( int_l_exist_a )
                           {
                              if ( strlen( chr_l_client_a ) == 9 )
                              {
                                 for ( i = 0; i < 6 ; i++ )
                                 {
                                    chr_l_new_client[i] = chr_l_client_a[i];
                                 }
                                 strcat(chr_l_new_client,"-");
                                 chr_l_substr_client[0] = chr_l_client_a[6] ;
                                 chr_l_substr_client[1] = chr_l_client_a[7] ;
                                 chr_l_substr_client[2] = chr_l_client_a[8] ;
                                 chr_l_substr_client[3] = APL_NULL_CHAR ;
                                 strcat(chr_l_new_client,chr_l_substr_client);
                                 strcpy( chr_l_client_a, chr_l_new_client);
                              }
										if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                              {
                              	for ( i = 0; i < 6 ; i++ )
                                 {
                                 	chr_l_new_client[i] = chr_l_client_a[i];
                                 }
                                 strcat(chr_l_new_client,"-");
                                 chr_l_substr_client[0] = chr_l_client_a[7] ;
                                 chr_l_substr_client[1] = chr_l_client_a[8] ;
                                 chr_l_substr_client[2] = chr_l_client_a[9] ;
                                 chr_l_substr_client[3] = APL_NULL_CHAR ;
                                 strcat(chr_l_new_client,chr_l_substr_client);
                                 strcpy( chr_l_client_a, chr_l_new_client);
                            	}
                           }

                           if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,
                                                                chr_l_cname,&int_retstat,l_debug_info_ptr))
                           {
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                              {
                                 CO_InsertErr(l_debug_info_ptr,
                                                DB_ERR_NO,
                                                "CACCOUNT",
                                                APL_NULL_STRING,
                                                APL_NULL_STRING,
                                                __LINE__,__FILE__);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                                 strcpy(l_ms_54x_struct_h.clientof_cname,l_ms_54x_struct_h.clientof);
                                 memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
                           }
                           else
                           {
                              strcpy(l_ms_54x_struct_h.clientof,chr_l_client_a);
                              strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_cname);
                           }
								 }
								 else if((!strcmp(h_msg_tag,END_TAG)) 
										&&(!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
								 {
									strcpy(l_ms_54x_struct_h.clientof_cname,l_ms_54x_struct_h.clientof);
									memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
								 }
                        }
								else
								{
									 
									strcpy(l_ms_54x_struct_h.clientof_cname,l_ms_54x_struct_h.clientof);
									memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
								}

                  }
						
                  else
                  {
                    
                   }
						
         
               }
               else if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
               {
                  strncpy(l_ms_54x_struct_h.clientof_cname,chr_decu_recu_line,66);
						memset(chr_decu_recu_desc,APL_NULL_CHAR,66); 
                  strcpy(chr_decu_recu_desc,l_ms_54x_struct_h.clientof_cname); 
						l_ms_54x_struct_h.clientof_cname[65]=APL_NULL_CHAR;
                  int_retstat = IV_SUCCESS;
                  if (APL_FAILURE == MS_Rtv_CNameAcc(l_ms_54x_struct_h.clientof_cname,
                                                            l_ms_54x_struct_h.clientof,
                                                            &int_retstat,
                                                            l_debug_info_ptr) )
                  {
                   if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW))
                   {	
                           memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                           memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           memset(h_msg_tag, APL_NULL_CHAR , 4);
                           memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                           if (APL_FAILURE == MS_Proc_SplitStr (chr_decu_recu_next_str,
                                                               h_msg_tag ,
                                                               chr_h_value ,
                                                               l_debug_info_ptr ))
                           {
                              fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
                              strcpy(chr_g_msg_sts, "RJT");     
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                 "MESSAGE LINE NOT IN PROPER FORMAT",
                                                                  chr_g_str_client,
                                                                  (DEBUG_INFO_STRUCT_H **)NULL))
                              {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                          "Failed to insert into IINMSGRP.\n",
                                          NULL, NULL);
                              }
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
 					            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            					strncpy(chr_h_qualifier,chr_h_value,5);

                           if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
											|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
									    && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                           {
                              memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                              memset(chr_l_cname,APL_NULL_CHAR, 66 );
                              memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                              memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
			                    		if (((chr_h_value[i]=='/') 
													&& (int_l_slash_count<2)
													&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     					|| ((chr_h_value[i]=='/') 
													&& (int_l_slash_count<3)
													&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                              }
                              strncpy(chr_l_client_a,chr_h_value+a+1,10);
                              chr_l_client_a[10] = APL_NULL_CHAR;
                              
                              strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                              strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                              if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                                                     chr_l_condident,
                                                                     &int_l_exist_a,l_debug_info_ptr))
                              {
                                 fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                                 APL_GOBACK_FAIL
                              }
                              if ( int_l_exist_a )
                              {
                                 if ( strlen( chr_l_client_a ) == 9 )
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[6] ;
                                    chr_l_substr_client[1] = chr_l_client_a[7] ;
                                    chr_l_substr_client[2] = chr_l_client_a[8] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 }
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[7] ;
                                    chr_l_substr_client[1] = chr_l_client_a[8] ;
                                    chr_l_substr_client[2] = chr_l_client_a[9] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 }
                              }
                              if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,
                                                                        chr_l_cname,
                                                                        &int_retstat,l_debug_info_ptr))
                              {
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                                 {
                                    CO_InsertErr(l_debug_info_ptr,
                                                   DB_ERR_NO,
                                                   "CACCOUNT",
                                                   APL_NULL_STRING,
                                                   APL_NULL_STRING,__LINE__,__FILE__);
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;

                                    APL_GOBACK_FAIL
                                 
                                 }
                              }
                              else
                              {
                                 strcpy(l_ms_54x_struct_h.clientof,chr_l_client_a);
                                 strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_cname);

                              }
                           }
                           else if((!strcmp(h_msg_tag,END_TAG))&& (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
									{
                           	memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
									}
                     }
                  }
						
                     else
                     {
                       
                     }
						
         

               }
               else if(!strcmp(h_msg_tag,I_DOMCPACCP_98))
               {
                     a=0;
                     for(i=0;i<strlen(chr_h_value);i++)
                     {
                        if (chr_h_value[i]=='/')
                        {
                           a=i;
                        }
                     }
                     memset(chr_l_bic_code, APL_NULL_CHAR, 13);
                     strncpy(chr_l_bic_code,chr_h_value+a+1,12);
                     chr_l_bic_code[12] = APL_NULL_CHAR;
							memset(chr_decu_recu_desc,APL_NULL_CHAR,66);
                     strcpy(chr_decu_recu_desc,chr_l_bic_code); 
                     int_l_bogcode = 0;

                    if ( APL_FAILURE == CO_Chk_SplVal("INCOMING_MSG",
                                                     "BIC_CODE_87A",
                                                      chr_l_bic_code,
                                                      &int_l_bogcode,
                                                      l_debug_info_ptr) )
                     {
                        *int_p_retstat = IV_CRITCAL_ERROR_IND;
                        APL_GOBACK_FAIL
                     }

                     if ( int_l_bogcode )
                     {
                        strcpy(l_ms_54x_struct_h.dl_class, EXTERNALDEAL);
                     }
                     int_retstat = IV_SUCCESS;
                      if (APL_FAILURE == IV_Rtv_BICCDAccNew( chr_l_bic_code,
                                                                   l_ms_54x_struct_h.clientof,
                                                                   l_ms_54x_struct_h.clientof_cname,
                                                                   &int_retstat, l_debug_info_ptr))
                     {

                        if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW_FOUND) || (int_retstat==MST_CLI_SAME))
                        {
                           memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           memset(h_msg_tag, APL_NULL_CHAR , 4);
                           memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                           if (APL_FAILURE == MS_Proc_SplitStr (chr_decu_recu_next_str,
                                                               h_msg_tag ,
                                                               chr_h_value ,
                                                               l_debug_info_ptr ))
                           {
                              fprintf(fl_userlog,"Failed to Split the Message Line %s\n",
													chr_decu_recu_next_str);
                              strcpy(chr_g_msg_sts, "RJT");     
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                "MESSAGE LINE NOT IN PROPER FORMAT",
                                                                chr_g_str_client,
                                                                (DEBUG_INFO_STRUCT_H **)NULL))
                              {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                          "Failed to insert into IINMSGRP.\n",
                                          NULL, NULL);
                              }
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
 					            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            					strncpy(chr_h_qualifier,chr_h_value,5);

                           if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
											|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
										&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                           {
                              memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                              memset(chr_l_cname,APL_NULL_CHAR, 66 );
                              memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                              memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
				                    if (((chr_h_value[i]=='/') 
												&& (int_l_slash_count<2)
												&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     				|| ((chr_h_value[i]=='/') 
												&& (int_l_slash_count<3)
												&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                              }
                              strncpy(chr_l_client_a,chr_h_value+a+1,10);
                              chr_l_client_a[10] = APL_NULL_CHAR;
                              
                              strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                              strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                              if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                                           chr_l_condident, &int_l_exist_a, l_debug_info_ptr))
                              {
                                 fprintf(fl_userlog,
													"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                                 APL_GOBACK_FAIL
                              }
                              if ( int_l_exist_a )
                              {
                                 if ( strlen( chr_l_client_a ) == 9 )
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[6] ;
                                    chr_l_substr_client[1] = chr_l_client_a[7] ;
                                    chr_l_substr_client[2] = chr_l_client_a[8] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 }
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[7] ;
                                    chr_l_substr_client[1] = chr_l_client_a[8] ;
                                    chr_l_substr_client[2] = chr_l_client_a[9] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 }
                              }
                              if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
                              {
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                                 {
                                    CO_InsertErr(l_debug_info_ptr,
                                                   DB_ERR_NO,
                                                   "CACCOUNT",
                                                   APL_NULL_STRING,
                                                   APL_NULL_STRING,
                                                   __LINE__,__FILE__);
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                    APL_GOBACK_FAIL
                                 }
                                 if (int_retstat == IV_NO_DATA_FOUND_ERR)
                                 {
												memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);	
                                    strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_bic_code);
                                 }
                              }
                              else
                                 {
                                    strcpy(l_ms_54x_struct_h.clientof,chr_l_client_a);
                                    strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_cname);
                                 }
                            }
									 else if((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
									 {
										memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
										strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_bic_code);
									 }
                            else
									 {
										memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
										strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_bic_code);
									 }
                           }
									else
									{
										  
										memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
										strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_bic_code);	
									}
                     }
               
                
                 else
                 {
                     
                 }
               
             }

                               

             

                   if (APL_FAILURE == MS_Proc_SplitStr (    chr_decu_recu_next_str,
                                                             h_msg_tag ,
                                                             chr_h_value ,
                                                             l_debug_info_ptr ))
                   {
                       fprintf(fl_userlog,
                               "Failed to Split the Message Line %s\n",
                                chr_decu_recu_next_str);
                       strcpy(chr_g_msg_sts, "RJT");     
                       if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                        "MESSAGE LINE NOT IN PROPER FORMAT",
                                                         chr_g_str_client,
                                                         (DEBUG_INFO_STRUCT_H **)NULL))
                       {
                             CO_ProcMonitor(APL_OUT_FILE,
                                      "Failed to insert into IINMSGRP.\n",
                                      NULL, NULL);
                       }
                       *int_p_retstat = IV_CRITCAL_ERROR_IND;
                        APL_GOBACK_FAIL
                    }
                    memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                    strncpy(chr_h_qualifier,chr_h_value,5);

                    if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                         || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                         && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                    {
                       l_decurecusafe_exist=1;
                     }
                   

                   if(l_decurecusafe_exist == 1)
                   {
                                        (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count + 1)));
                                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                                       memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DECU_SAFE_QUAL);
                                       strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                                       int_l_link_count++;
                     }
              
					}
				}


           if((!strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd))
                &&(strlen(chr_decu_recu_line)!=0))
            {
	                   
                  		memset(chr_l_clientof, APL_NULL_CHAR , 36);
                  		memset(chr_l_clientof_cname, APL_NULL_CHAR , 66);
                  		memset(h_msg_tag, APL_NULL_CHAR , 4);
                  		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  		strcpy(h_msg_tag,chr_l_decu_recu_tag);
                  		strcpy(chr_h_qualifier,chr_l_decu_recu_qualifier);
                  		strcpy(chr_h_value,chr_l_decu_recu_value);
								printf("h_value is DECU_RECU FOR 'R' block is %s\n",chr_h_value);
            	
            	APL_IF_DEBUG
            	{
               	printf("the h_msg_tag is %s\n",h_msg_tag);
               	printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
            	}
                     (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count +
1)));
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                   memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                     memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                    if (!strcmp(chr_h_qualifier,MSG_DECU_QUAL))
                    {
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DECU_QUAL);
                     }
                    else
                    {
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,RECU_QUALIFIER);
                     }
                     if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
                     {
                       strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_decu_recu_line,50);
                     }
                     else
                     {
                        strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                      }
                       strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                    int_l_link_count++;
                     	

				
               memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
               memset(h_msg_tag, APL_NULL_CHAR , 4);
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
               if (APL_FAILURE == MS_Proc_SplitStr (chr_decu_recu_next_str,
                                                      h_msg_tag ,
                                                      chr_h_value ,
                                                      l_debug_info_ptr ))
               {
                  fprintf(fl_userlog,
                          "Failed to Split the Message Line %s\n",
                           chr_decu_recu_line);
                  strcpy(chr_g_msg_sts, "RJT");     
                  if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                       "MESSAGE LINE NOT IN PROPER FORMAT",
                                       chr_g_str_client,
                                       (DEBUG_INFO_STRUCT_H **)NULL))
                  {
                     CO_ProcMonitor(APL_OUT_FILE,
                              "Failed to insert into IINMSGRP.\n",
                              NULL, NULL);
                  }
                  *int_p_retstat = IV_CRITCAL_ERROR_IND;
                  APL_GOBACK_FAIL
               }
               APL_IF_DEBUG
               {
                  printf("the h_msg_tag is %s\n",h_msg_tag);
                  printf("the chr_value of chr_h_value after the processtion call is %s\n",chr_h_value);
               }
               memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
               strncpy(chr_h_qualifier,chr_h_value,5);
               memset(chr_l_clientof,APL_NULL_CHAR,36);
               memset(chr_l_clientof_cname,APL_NULL_CHAR,66);

               if (((!strcmp(h_msg_tag,I_CLIENTA_98))
                  || (!strcmp(h_msg_tag,I_CLIENTB_98)))
                  && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
               {
                   memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                   memset(chr_l_cname,APL_NULL_CHAR, 66 );
                   memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                   memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                   int_l_slash_count=0;
                   a=0;
                   for(i=0;i<strlen(chr_h_value);i++)
                   {
                      if (((chr_h_value[i]=='/')
            	              && (int_l_slash_count<2)
               	           && (!strcmp(h_msg_tag,I_CLIENTA_98)))
                          || ((chr_h_value[i]=='/')
                             && (int_l_slash_count<3)
                             && (!strcmp(h_msg_tag,I_CLIENTB_98))))
                      {
                          a=i;
                          int_l_slash_count=int_l_slash_count+1;
                      }
                    }
                    strncpy(chr_l_client_a,chr_h_value+a+1,10);
                    chr_l_client_a[10] = APL_NULL_CHAR;
                    
                    strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
                    strcpy(chr_l_condident, "ACCT_LEN_PROCESS");
                    if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                   chr_l_condident, &int_l_exist_a, l_debug_info_ptr) )
                    {
                        fprintf(fl_userlog,
                              "Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                        APL_GOBACK_FAIL
                    }
                    if ( int_l_exist_a )
                    {
                       if ( strlen( chr_l_client_a ) == 9 )
                       {
                         for ( i = 0; i < 6 ; i++ )
                         {
                           chr_l_new_client[i] = chr_l_client_a[i];
                         }
                         strcat(chr_l_new_client,"-");
                         chr_l_substr_client[0] = chr_l_client_a[6] ;
                         chr_l_substr_client[1] = chr_l_client_a[7] ;
                         chr_l_substr_client[2] = chr_l_client_a[8] ;
                         chr_l_substr_client[3] = APL_NULL_CHAR ;
                         strcat(chr_l_new_client,chr_l_substr_client);
                         strcpy( chr_l_client_a, chr_l_new_client);
                     	}
                        if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                        {
                           for ( i = 0; i < 6 ; i++ )
                           {
                              chr_l_new_client[i] = chr_l_client_a[i];
                           }
                           strcat(chr_l_new_client,"-");
                           chr_l_substr_client[0] = chr_l_client_a[7] ;
                           chr_l_substr_client[1] = chr_l_client_a[8] ;
                           chr_l_substr_client[2] = chr_l_client_a[9] ;
                           chr_l_substr_client[3] = APL_NULL_CHAR ;
                           strcat(chr_l_new_client,chr_l_substr_client);
                           strcpy( chr_l_client_a, chr_l_new_client);
                         }
                       }
                        
                   (*p_ms_inc_linkinfo_struct_h) = (MS_INC_LINKINFO_STRUCT_H *)realloc(*p_ms_inc_linkinfo_struct_h,(sizeof(MS_INC_LINKINFO_STRUCT_H) * (int_l_link_count +
1)));
                    memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name , APL_NULL_CHAR ,6);
                    memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val , APL_NULL_CHAR ,6);
                    memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag , APL_NULL_CHAR ,51 );
                    memset((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag , APL_NULL_CHAR , 6);
                    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->sequence_name,SETPRTY_QUALIFIER);
                    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_val,MSG_DECU_SAFE_QUAL); 
                    strncpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->link_tag,chr_h_value,50);
                    strcpy((*p_ms_inc_linkinfo_struct_h + int_l_link_count)->msg_tag,h_msg_tag);
                    int_l_link_count++;
                     
                       if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,
                                                         chr_l_cname,&int_retstat,l_debug_info_ptr))
                       {
                        
                              if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                              {
                                 fprintf(fl_userlog,"Too many records for A/c :%s: for customer Name from ACCOUNT table\n", chr_l_client_a);
                                 *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                 APL_GOBACK_FAIL
                              }
                              else if (int_retstat == IV_CRITCAL_ERROR_IND)
                          {
                             CO_InsertErr(l_debug_info_ptr,
                                            DB_ERR_NO,
                                            "CACCOUNT",
                                            APL_NULL_STRING,
                                            APL_NULL_STRING,
                                            __LINE__,__FILE__);
                             *int_p_retstat = IV_CRITCAL_ERROR_IND;
                             APL_GOBACK_FAIL
                           }
                      		if (int_retstat == IV_NO_DATA_FOUND_ERR)
                       		{
                        		l_invalid_97a_decu_recu=1;
                       		}
                        }
                        else
                        {
                          strcpy(l_ms_54x_struct_h.clientof,chr_l_client_a);
                          strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_cname);
                        }
                      }
                      if(((!strcmp(h_msg_tag,END_TAG))&&(!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER))) || (l_invalid_97a_decu_recu==1))
                      {
                  		memset(chr_l_clientof, APL_NULL_CHAR , 36);
                  		memset(chr_l_clientof_cname, APL_NULL_CHAR , 66);
                  		memset(h_msg_tag, APL_NULL_CHAR , 4);
                  		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  		strcpy(h_msg_tag,chr_l_decu_recu_tag);
                  		strcpy(chr_h_qualifier,chr_l_decu_recu_qualifier);
                  		strcpy(chr_h_value,chr_l_decu_recu_value);
								printf("h_value is DECU_RECU FOR 'R' block is %s\n",chr_h_value);
			
	                   
			
                     	
						if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
								{
                  			int_l_slash_count=0;
                  			a=0;
                  			for(i=0;i<strlen(chr_h_value);i++)
                  			{
                    				if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    				{
                        			a=i;
                         			int_l_slash_count=int_l_slash_count+1;
                    				}
                  			}
                  			strncpy( l_ms_54x_struct_h.clientof,chr_h_value+a+1,10);
                  			chr_l_clientof[10]=APL_NULL_CHAR;
                  			if (APL_FAILURE == IV_Rtv_CNameAccNew(l_ms_54x_struct_h.clientof,
                           		                                l_ms_54x_struct_h.clientof_cname,
                                 		                          &int_retstat,l_debug_info_ptr))
                  			{
                     			if (int_retstat == IV_CRITCAL_ERROR_IND)
                     			{
                        			CO_InsertErr(l_debug_info_ptr,
                                 	   	   DB_ERR_NO,
                                    	   	"CACCOUNT",
                                       		APL_NULL_STRING,
                                       		APL_NULL_STRING,
                                       		__LINE__,__FILE__);
                        			*int_p_retstat = IV_CRITCAL_ERROR_IND;
                        			APL_GOBACK_FAIL
                     			}
										if ((int_retstat == IV_NO_DATA_FOUND_ERR) 
											|| (int_retstat == MORE_THAN_ONE_ROW_FOUND) 
											|| (int_retstat==MST_CLI_SAME))
                     			{
											strcpy(l_ms_54x_struct_h.clientof_cname,l_ms_54x_struct_h.clientof);
                           		memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
										}
									}
								}
								else if(!strcmp(h_msg_tag,I_DOMCPACCQ_98))
								{
                  			memset(chr_l_decu_recu_tag, APL_NULL_CHAR , 4);
                  			memset(chr_l_decu_recu_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                  			memset(chr_l_decu_recu_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                  			strcpy(chr_l_decu_recu_tag,h_msg_tag);
                  			strcpy(chr_l_decu_recu_qualifier,chr_h_qualifier);
                  			strcpy(chr_l_decu_recu_value,chr_h_value);
									printf("l_decu_recu_tag %s\n",chr_l_decu_recu_tag);
									printf("l_decu_recu_qualifier %s\n",chr_l_decu_recu_qualifier);
									printf("l_decu_recu_value %s\n",chr_l_decu_recu_value);
									
                  			strncpy(l_ms_54x_struct_h.clientof_cname,chr_decu_recu_line,66);
                  			l_ms_54x_struct_h.clientof_cname[65]=APL_NULL_CHAR;
                  			int_retstat = IV_SUCCESS;
                  			if (APL_FAILURE == MS_Rtv_CNameAcc(l_ms_54x_struct_h.clientof_cname,
                           			                                 l_ms_54x_struct_h.clientof,
                                    			                        &int_retstat,
                                             			               l_debug_info_ptr) )
                  			{
                   				if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW))
                   				{
                                 memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
						 				}
									}
								}
								else if(!strcmp(h_msg_tag,I_DOMCPACCP_98))
								{
                     		a=0;
                     		for(i=0;i<strlen(chr_h_value);i++)
                     		{
                        		if (chr_h_value[i]=='/')
                        		{
                           		a=i;
                        		}
                     		}
                     		memset(chr_l_bic_code, APL_NULL_CHAR, 13);
                     		strncpy(chr_l_bic_code,chr_h_value+a+1,12);
                     		chr_l_bic_code[12] = APL_NULL_CHAR;

		                     int_l_bogcode = 0;
	
   			               if ( APL_FAILURE == CO_Chk_SplVal("INCOMING_MSG",
                           		                          "BIC_CODE_87A",
                                 		                     chr_l_bic_code,
                                       		               &int_l_bogcode,
                                             		         l_debug_info_ptr) )
                     		{
                        		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                        		APL_GOBACK_FAIL
                     		}

                     		if ( int_l_bogcode )
                     		{
                        		strcpy(l_ms_54x_struct_h.dl_class, EXTERNALDEAL);
                     		}
                     		int_retstat = IV_SUCCESS;
									
                      		if (APL_FAILURE == IV_Rtv_MultBicCdAcc( chr_l_bic_code,l_ms_54x_struct_h.domestic_cpclt,
                           		                                        l_ms_54x_struct_h.clientof,
                                 		                              l_ms_54x_struct_h.clientof_cname,
																							chr_l_decurecu_multimstacc,
                                       		                            &int_retstat, l_debug_info_ptr))
                     		{

 			                       if ((int_retstat == IV_NO_DATA_FOUND_ERR) )
                        			{
                                 	strcpy(l_ms_54x_struct_h.clientof_cname,chr_l_bic_code);
                                 	memset(l_ms_54x_struct_h.clientof,APL_NULL_CHAR,36);
											}
									}
								}
							}
					}

		if((int_l_flg_newm==1) && (l_ext_trd_check!=0))
		{
			if(strcmp(l_ms_54x_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd)!=0)
			{
				if((int_l_countacc_found==0) && (int_l_clientof_found==0)  && (l_ms_54x_struct_h.h_deal_code[0] == DEALCD_DF) ) 
				{
					  strcpy(l_ms_54x_struct_h.addindentity_no,"IEXE");	 
				     
				}
			}
		}

     
	 
     
   
      l_gr_flg = 0;
      if(APL_FAILURE == CO_Chk_CntryEnabled("INCOMING_MSG",
                                            "ACC_COUNTACC_NO_CHK",
                                             &l_gr_flg,
                                             l_debug_info_ptr))
      {
         APL_GOBACK_FAIL
      }

	if((!strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd))
		&& (int_l_propremotetrd!=1))
	{
	 	if(l_gr_flg==0)
      {
			if (strcmp(chr_g_str_client,l_ms_54x_struct_h.clientof)==0)
			{
				fprintf(fl_userlog,"CUSTODIAN ACCOUNT SAME AS ACCOUNT\n");
				CO_ProcMonitor(APL_OUT_FILE, "CUSTODIAN ACCOUNT SAME AS ACCOUNT\n", NULL, NULL);
         	
         	strcpy(chr_g_msg_sts,"RPR");
         	if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "CUSTODIAN ACCOUNT SAME AS ACCOUNT",
            	                                 chr_g_str_client, NULL) )
         	{
            	CO_ProcMonitor(APL_OUT_FILE,
               	      "Could not insert into IINMSGRP\n",
                  	   NULL, NULL);
            	APL_GOBACK_FAIL
         	}
         	
   			CO_InsertErr(l_debug_info_ptr,
									ERR_DEAL_DECU_CANTSAME_CLI,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,__FILE__);
			}
			if (strcmp(chr_g_str_client,l_ms_54x_struct_h.cp_clt)==0)
			{
				fprintf(fl_userlog,"COUNTER-PARTY SAME AS ACCOUNT\n");
				CO_ProcMonitor(APL_OUT_FILE, "COUNTER-PARTY SAME AS ACCOUNT\n", NULL, NULL);
         	
         	strcpy(chr_g_msg_sts,"RPR");
         	if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "COUNTER-PARTY SAME AS ACCOUNT",
            	                                 chr_g_str_client, NULL) )
         	{
            	CO_ProcMonitor(APL_OUT_FILE,
               	      "Could not insert into IINMSGRP\n",
                  	   NULL, NULL);
            	APL_GOBACK_FAIL
         	}
         	
   			CO_InsertErr(l_debug_info_ptr,
									ERR_DEAL_CP_CANTSAME_CLI,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,__FILE__);
			}
		}

			if((!strcmp(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING)) && (!strcmp(l_ms_54x_struct_h.clientof,APL_NULL_STRING)))
			{
   		strcpy(chr_g_msg_sts,"RPR");
   		if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "COUNTER PARTY ACCOUNT NOT FOUND",
															chr_g_str_client, NULL) )
   		{
       		CO_ProcMonitor(APL_OUT_FILE, 
	   					"Could not insert into IINMSGRP\n", 
							NULL, NULL);
       		APL_GOBACK_FAIL
   		}

   		CO_InsertErr(l_debug_info_ptr,
								ERR_ACCNOT_FND,
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,__FILE__);

		}
	}

if(l_ext_trd_check==0)   
{
 if ((strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd)!=0) &&
         (strcmp(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING)!=0))
   {
      strcpy(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING);
   }
}




if(l_ext_trd_check==0)
{
  if (strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd)!=0)
  {
		strcpy(l_ms_54x_struct_h.clientof_cname,chr_decu_recu_desc);
  }
}
if((strcmp(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING)!=0) && (strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd)==0))
{
      if ( APL_FAILURE == CO_Chk_AccValid(l_ms_54x_struct_h.cp_clt,'Y','C','C',APL_NULL_CHAR,'Y','N','N','N',l_debuginfo))
      {
              int_l_inval_countacc = 1 ;
              strcpy(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING);
				  
				  chr_l_buyrsell_multimstacc[0]=APL_NULL_CHAR;
      }
}
if((strcmp(l_ms_54x_struct_h.clientof,APL_NULL_STRING)!=0)&& (strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd)==0))
{
     if ( APL_FAILURE == CO_Chk_AccValid(l_ms_54x_struct_h.clientof,'Y','C','C',APL_NULL_CHAR,'Y','N','N','N',l_debuginfo))
     {
              int_l_inval_clientof = 1;
              strcpy(l_ms_54x_struct_h.clientof,APL_NULL_STRING);
              if (strlen(chr_decu_recu_desc) > 0 )
                    strcpy(l_ms_54x_struct_h.clientof_cname,chr_decu_recu_desc);
				  
				  chr_l_decurecu_multimstacc[0]=APL_NULL_CHAR;
     }
}
if ((((int_l_inval_countacc == 1) && (int_l_inval_clientof == 1))|| ((strcmp(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING)==0) && (int_l_inval_clientof == 1)) || ((int_l_inval_countacc == 1) && (strcmp(l_ms_54x_struct_h.clientof,APL_NULL_STRING)==0))||((strcmp(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING)==0) && (strcmp(l_ms_54x_struct_h.clientof,APL_NULL_STRING)==0)))&&(strcmp(l_ms_54x_struct_h.domestic_cpclt,l_mt_core_sys_params_struct_h.custody_clt_cd)==0))
{
    strcpy(chr_g_msg_sts,"RPR");
    if ( APL_FAILURE == MS_Mod_IncMsgSts("RPR", "COUNTER PARTY-CUSTODIAN BOTH NOT VALID",
                                          chr_g_str_client, NULL) )
    {
            CO_ProcMonitor(APL_OUT_FILE,
                     "Could not insert into IINMSGRP\n",
                     NULL, NULL);
            APL_GOBACK_FAIL
    }
    while ( l_debuginfostruct_h != NULL)
    {
      if  (l_debuginfostruct_h->h_code == ERR_ACCNOT_CUSTOMER)
      {
                  CO_InsertErr(l_debug_info_ptr,
                        ERR_ACCNOT_CUSTOMER,
                        l_debuginfostruct_h->h_key1,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,__FILE__);

      }
      else if (l_debuginfostruct_h->h_code == ERR_ACCNOT_CUSTODYCLIENT)
      {
                  CO_InsertErr(l_debug_info_ptr,
                        ERR_ACCNOT_CUSTODYCLIENT,
                        l_debuginfostruct_h->h_key1,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,__FILE__);

      }
      l_debuginfostruct_h  =  l_debuginfostruct_h->h_next;
   }
    CO_InsertErr(l_debug_info_ptr,
                     ERR_ACCNOT_FND,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,__FILE__);

    CO_FreeErrLst(l_debuginfo);
}



		
		if(int_l_nofx_found==1)
		{
			strcpy( l_ms_54x_struct_h.fx_adv_ind,"N");
			memset(l_ms_54x_struct_h.fxccy,APL_NULL_CHAR,4);
		}
		
		
      if ( (l_remtrd_22F95P_exist)  && ( int_l_afte_befo_flg ) && (int_l_setr_turn != 1) )
      {
        CO_InsertErr(l_debug_info_ptr,
                       ERR_BEFOAFTE_ENCNTRD_INLINKBLK,
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       __LINE__, __FILE__);
      }
		
		
		

		printf("\n**********************************************\n The buyr sell flg :%c: Decu recu flg :%c: \n", chr_l_buyrsell_multimstacc[0], chr_l_decurecu_multimstacc[0]);
		printf("\n The locnchng flg previous as :%c: \n", l_ms_54x_struct_h.loc_chng_ind[0]);
		
		if((strlen(chr_countacc_line)==0) || (strcmp(l_ms_54x_struct_h.cp_clt,APL_NULL_STRING)==0))
		{
			chr_l_buyrsell_multimstacc[0] =APL_NULL_CHAR;
		}

		if( (chr_l_buyrsell_multimstacc[0] =='M') 
			 || (chr_l_decurecu_multimstacc[0]=='M' && chr_l_buyrsell_multimstacc[0]==APL_NULL_CHAR ))
			 {
				l_ms_54x_struct_h.loc_chng_ind[0]='M';
			 }
		else 
			 {
				l_ms_54x_struct_h.loc_chng_ind[0]='N';
			 }
		l_ms_54x_struct_h.loc_chng_ind[1]=APL_NULL_CHAR;
		printf("\n The buyr sell flg :%c: Decu recu flg :%c: \n", chr_l_buyrsell_multimstacc[0], chr_l_decurecu_multimstacc[0]);
		printf("\n The locnchng flg has been set as :%c:\n*************************** \n", l_ms_54x_struct_h.loc_chng_ind[0]);
		

   
   strcpy(chr_mainfuncarea, "INCOMING_MSG");
   strcpy(chr_l_condident, "HDAT_TRD");
	l_hdattrd=0;
   if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                         chr_l_condident, &l_hdattrd, l_debug_info_ptr))
   {
      fprintf(fl_userlog,"Failed in CO_Chk_CntryEnabled for HDAT\n");
      APL_GOBACK_FAIL
   }
   if(l_hdattrd!=0)
   {
      if((l_locrefno_found==0)
         &&  (strcmp(l_ms_54x_struct_h.domestic_cpclt,chr_h_euro_domcpac)==0)
         && ((strcmp(l_ms_54x_struct_h.h_deal_code,"4")==0)
              || (strcmp(l_ms_54x_struct_h.h_deal_code,"3")==0)
					|| (strcmp(l_ms_54x_struct_h.h_deal_code,"5")==0)
					|| (strcmp(l_ms_54x_struct_h.h_deal_code,"6")==0)
					|| (strcmp(l_ms_54x_struct_h.h_deal_code,"7")==0)
					|| (strcmp(l_ms_54x_struct_h.h_deal_code,"8")==0)))
      {

         EXEC SQL SELECT CLN_REG_BCL_IND INTO :chr_l_hdat_process:i_hdat_process
                  FROM MT_CLIENT
                  WHERE CLN_CODE=:chr_g_str_client;
         IS_ANY_ORA_ERROR

         if(strcmp(chr_l_hdat_process,"N") ==0)
         {
            

            CO_InsertErr(l_debug_info_ptr,
                          ERR_DUPLICATE_INSTR,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           __LINE__,__FILE__);
         }

      }
   }
   

		
   	printf("h_54x_struct.domestic_cpclt is %s\n",l_ms_54x_struct_h.domestic_cpclt);
   	printf("h_54x_struct.domcpclt_cd_cname is %s\n",l_ms_54x_struct_h.domcpclt_cd_cname);
   	printf("h_54x_struct.cp_clt is %s\n",l_ms_54x_struct_h.cp_clt);
   	printf("h_54x_struct.countclt_cname is %s\n",l_ms_54x_struct_h.countclt_cname);
   	printf("h_54x_struct.instparty is %s\n",l_ms_54x_struct_h.inst_client);
   	printf("h_54x_struct.instparty_cname is %s\n",l_ms_54x_struct_h.inst_clnt_clr_name);
   	printf("h_54x_struct.clientof is %s\n",l_ms_54x_struct_h.clientof);
   	printf("h_54x_struct.clientof_cname  is %s\n",l_ms_54x_struct_h.clientof_cname);
       
      l_ms_54x_struct_h.count = int_l_link_count;
		strcpy(l_ms_54x_struct_h.info,h_info);
		l_ms_gen_struct_h.new_ind =int_l_flg_newm;
		l_ms_gen_struct_h.canc_ind=int_l_flg_canc;
		l_ms_gen_struct_h.no_of_dl=int_h_no_of_trd;
		if(l_ms_gen_struct_h.canc_ind==1)
		{
			memset(l_ms_54x_struct_h.info,APL_NULL_CHAR,266);
			strcpy(l_ms_54x_struct_h.info,chr_l_fxcx_ind);
		}
		*p_ms_54x_struct_h = l_ms_54x_struct_h;
		*p_ms_gen_struct_h =l_ms_gen_struct_h;

		*int_p_retstat = IV_SUCCESS;

		APL_GOBACK_SUCCESS

		
      RETURN_SUCCESS:
		{
				  APL_IF_DEBUG
				  {
					  CO_ProcMonitor(p_fl_userlog,"Exiting out of I_54x_parsefn sucessfully\n", NULL, NULL);
				  }
				  return (APL_SUCCESS);
		}

      RETURN_FAILURE:
		{
				  APL_IF_DEBUG
				  {
					  CO_ProcMonitor(p_fl_userlog,"Exiting out of I_54x_parsefn unsucessfully\n", NULL, NULL);
				  }
				  return (APL_FAILURE);
		}
}






	

int MS_Proc_IncMsg54xOrd(FILE							*fl_incmsg,
							char							*p_msg_no,
							FILE							*fl_userlog,
							FILE							*p_fl_userlog,
							char							*chr_fl_name,
							MS_INC_MSG_STRUCT_H			*p_ms_inc_msg_struct_h,
							MS_REP_STRUCT_H        **p_ms_rep_struct_h,
							MS_INC_LINKINFO_STRUCT_H		**p_ms_inc_linkinfo_struct_h,	
							FILE							*fl_repairrpt,	
							char							*p_mesg_body,
							INTL_ENV_DATA_STRUCT_H		*p_intlenv_data_struct_h,
							DEBUG_INFO_STRUCT_H				**l_debug_info_ptr)
{
	char		chr_l_trdfromorder_found 					= NULL;
	char		chr_mainfuncarea[APL_MAINFUNCAREA_LEN]= APL_NULL_STRING;
	char		chr_l_condident[APL_CONDID_LEN]			= APL_NULL_STRING;
	char		chr_l_trcode_a[2]									= APL_NULL_STRING;
	char 		h_indentity_no[APL_TXNREFNO_LEN]				= APL_NULL_STRING;
	char 		chr_l_rowid_A[APL_ROWID_LEN]				= APL_NULL_STRING;
	int		int_h_no_of_trd									= 1;
	int		int_retstat										= 0;
	int      int_l_stat_flg                          = 0;
	char     chr_l_temp_errmsg[40]                   = APL_NULL_STRING;
	char     chr_l_exarena[3]                        = APL_NULL_STRING;
	char  chr_l_typeofinstr[TYPEOF_INSTR_LEN]               = APL_NULL_STRING;
	char     chr_l_temp_trdsts[3]                    = APL_NULL_STRING;
	int		int_l_rpr_seq_num								= 0;
	double	h_tot_quantity									= 0;
	double	h_qty											= 0;
	double	h_amt                            = 0;
	char		h_dl_client[APL_CLIENT_LENGTH]				= APL_NULL_STRING;
	char  	chr_h_system_date[APL_DATE_LEN];
	char     chr_h_system_date_t[APL_DATE_LEN];
	char  	chr_h_system_datetime[APL_DATE_LEN];
	char     chr_l_verwith[26]								= APL_NULL_STRING;
	char		chr_l_locrefno[APL_TXNREFNO_LEN]			= APL_NULL_STRING;
	char		chr_l_failcode_A[3]								= APL_NULL_STRING;
	char		chr_l_ourtheir[2]								= APL_NULL_STRING;
	char		chr_l_trd_locn[APL_LOCNCODE_LENGTH]			= APL_NULL_STRING;
	short int l_process_540_542						= 0;
	short int int_l_trdfromorder_nf_ok 					= 0;
	short int int_l_condexists_A                       = 0;
	char chr_l_typeofacc[2]                          = APL_NULL_STRING; 

	
      int int_l_txn_type=0;
      char chr_l_unique_ref_num[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING;
	

	MS_GEN_STRUCT_H					l_ms_gen_struct_h;
	DEAL_DET_STRUCT_H				l_deal_frmord_struct_h;
	DEAL_DET_STRUCT_H				l_deal_bttord_struct_h;
	DL_DEAL_PMTDET_STRUCT_H		l_dl_deal_pmtdet_struct_ha;
	MS_INC_MSG_STRUCT_H				l_ms_inc_msg_struct_h;
	MS_REP_STRUCT_H				*h_rep_seq_struct = (MS_REP_STRUCT_H  *)NULL;
	MS_INC_LINKINFO_STRUCT_H         *h_inc_linkage_info = (MS_INC_LINKINFO_STRUCT_H *)NULL; 
	DL_DEALREPAIR_STRUCT_H		l_dl_dealrepair_struct_h;
	PRO_GSEQNUM_STRUCT_H			*l_progseqnum_struct_h = NULL;
	DL_MSGLINK_STRUCT_H				l_dl_msglink_struct_h;
	DL_DEAL_FAIL_STRUCT_H       l_dl_deal_fail_struct_ha_a; 
	int int_h_count          = 0;
      int int_h_count1         = 0;
      short i_dl_client      = 0;
      short i_indentity_no        = 0;
		char  h_fx_sell_flag[2]            = APL_NULL_STRING;
		char  h_fx_buy_flag[2]            = APL_NULL_STRING;
char  chr_l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;  
char  chr_l_only_sysdate[11]       = APL_NULL_STRING;  
	int int_l_chk_rpr  = 0;

	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL VAR h_fx_sell_flag  IS STRING;
	EXEC SQL VAR h_fx_buy_flag  IS STRING;
	
	EXEC SQL VAR h_dl_client IS STRING;
	EXEC SQL VAR h_indentity_no IS STRING;
	EXEC SQL VAR chr_l_only_sysdate IS STRING;
   EXEC SQL VAR chr_l_sys_date     IS STRING;
	EXEC SQL VAR chr_l_typeofacc    IS STRING; 

	struct sqlca sqlca;

	EXEC SQL END   DECLARE SECTION;

	sqlca.sqlcode = 0;
	memset(chr_h_system_date, APL_NULL_CHAR ,APL_DATE_LEN);
	memset(chr_h_system_date_t, APL_NULL_CHAR ,APL_DATE_LEN);
	memset(chr_h_system_datetime, APL_NULL_CHAR ,APL_DATE_LEN);
	memset(&l_ms_inc_msg_struct_h, NULL ,sizeof(MS_INC_MSG_STRUCT_H) );
	memset(&l_dl_deal_pmtdet_struct_ha, NULL, sizeof(DL_DEAL_PMTDET_STRUCT_H));
	memset(&l_deal_frmord_struct_h, NULL, sizeof(DEAL_DET_STRUCT_H));
	memset(&l_deal_bttord_struct_h, NULL, sizeof(DEAL_DET_STRUCT_H));
	memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
	memset(chr_l_condident, APL_NULL_CHAR, APL_CONDID_LEN);
	memset(&l_dl_dealrepair_struct_h, NULL, sizeof(DL_DEALREPAIR_STRUCT_H));
	memset(&l_ms_gen_struct_h,NULL,sizeof(MS_GEN_STRUCT_H)); 
	memset (&l_dl_msglink_struct_h,NULL,sizeof(DL_MSGLINK_STRUCT_H));
	memset(chr_l_typeofacc,APL_NULL_CHAR,2); 
	int_retstat = IV_SUCCESS;
	l_ms_inc_msg_struct_h = *p_ms_inc_msg_struct_h;
	h_rep_seq_struct = *p_ms_rep_struct_h;
	h_inc_linkage_info = *p_ms_inc_linkinfo_struct_h;	
	

	if (APL_FAILURE == CO_RtvMachDtTime(chr_h_system_date, l_debug_info_ptr) )
	{
		fprintf(fl_userlog,"failed To get System Date\n");
		APL_GOBACK_FAIL
	}
   if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) ) 
      {
        int_l_chk_rpr = 1;
      }


	
	

	strcpy(h_dl_client,h_rep_seq_struct->client); 
	strcpy(h_indentity_no,l_ms_inc_msg_struct_h.indentity_no); 
	h_qty=h_rep_seq_struct->quantity;
	h_amt = l_ms_inc_msg_struct_h.amount;


	if ( APL_FAILURE == CO_Chk_AccValid(h_dl_client, 'Y', NULL, NULL, NULL, NULL, NULL, NULL, NULL, l_debug_info_ptr) )
	{
		fprintf(fl_userlog, "Message rejected as client was not int_found in customer database.\n");

		fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
		fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
		fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
		fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
		fprintf(fl_repairrpt, "%9sAccount %s not int_found.\n", " ", h_dl_client);
		fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
		fprintf(fl_repairrpt, "\n");
		fflush(fl_repairrpt);

		strcpy(chr_g_msg_sts, "RJT");

		APL_GOBACK_FAIL
	}

	if (APL_FAILURE == CO_RtvSysDtTime(chr_h_system_datetime, l_debug_info_ptr) )
	{
		fprintf(fl_userlog,"Failure in CO_RtvSysDtTime().\n");
		APL_GOBACK_FAIL
	}
	strcpy(chr_h_system_date_t,chr_h_system_datetime);
	sscanf(chr_h_system_datetime, "%[^ ]", chr_h_system_date);
	strcat(chr_h_system_date, APL_NULL_TIME);

	strcpy(chr_l_verwith, DEALFRMORD_VERWITH_NEW);
	strcpy(chr_l_failcode_A, DEALFRMORD_FAILCODE);

	 
   EXEC SQL SELECT NVL(CLN_CLASS,'1')
              INTO :chr_l_typeofacc
              FROM MT_CLIENT
             WHERE CLN_CODE = :h_dl_client;

   IS_ANY_ORA_ERROR

	
	
	

	if ( !strcmp(p_msg_no, I_MSGNO_541) || !strcmp(p_msg_no, I_MSGNO_543) )
	{
		if ( APL_FAILURE == MS_Chk_DLFromOrd(&l_ms_inc_msg_struct_h, h_dl_client, h_qty, chr_l_rowid_A, 
												&l_deal_frmord_struct_h, l_debug_info_ptr) )
		{


			chr_l_trdfromorder_found = 'N';
		}
		else
		{
			chr_l_trdfromorder_found = 'Y';
		}



		if ( chr_l_trdfromorder_found == 'Y' )
		{
			

			if ( !strcmp(l_deal_frmord_struct_h.h_deal_status, STATUS_CONF) )
			{
				

				strcpy(l_deal_frmord_struct_h.h_verfied_with, chr_l_verwith);
				strcpy(l_deal_frmord_struct_h.h_locindentity_no, h_indentity_no);

            
            CO_FreeErrLst(l_debug_info_ptr);     
            

				if ( APL_FAILURE == DL_Mod_BTTDL(chr_l_rowid_A, &l_deal_frmord_struct_h, 
																chr_l_failcode_A, p_intlenv_data_struct_h, 
																l_debug_info_ptr) )
				{
					strcpy(chr_g_msg_sts, "RJO");

					EXEC SQL ROLLBACK WORK; 
					IS_ANY_ORA_ERROR

					fprintf(fl_userlog, "Message rejected as underlying trade from order not int_found.\n");
					fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt, "\n");
					fflush(fl_repairrpt);

					APL_GOBACK_FAIL
				}

				strcpy(chr_g_msg_sts, "STO");

				
            strcpy(chr_g_rej_reas,REJREAS_CONFDEAL_MOD);
            

				fprintf(fl_repairrpt, "%9sTRADE STO REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "%9sMessage Processed Successfully.\n", " ");
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "\n");
				fflush(fl_repairrpt);

				APL_GOBACK_SUCCESS
			}
			else if ( !strcmp(l_deal_frmord_struct_h.h_deal_status, STATUS_AUTH) )
			{
           
               strcpy(l_deal_frmord_struct_h.h_verfied_with, chr_l_verwith);
               strcpy(l_deal_frmord_struct_h.h_locindentity_no, h_indentity_no);
               memset(chr_l_failcode_A, APL_NULL_CHAR, 26);
               CO_FreeErrLst(l_debug_info_ptr);
               if ( APL_FAILURE == DL_Mod_BTTDL(chr_l_rowid_A, &l_deal_frmord_struct_h,
                                                   chr_l_failcode_A, p_intlenv_data_struct_h,
                                                   l_debug_info_ptr) )
               {
                  strcpy(chr_g_msg_sts, "RJO");

                  EXEC SQL ROLLBACK WORK;  
                  IS_ANY_ORA_ERROR

                  fprintf(fl_userlog, "Message rejected as underlying trade from order not int_found.\n");
                  fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
                  fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
                  fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
                  fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
                  fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
                  fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
                  fprintf(fl_repairrpt, "\n");
                  fflush(fl_repairrpt);

                  APL_GOBACK_FAIL
               }
				strcpy(l_dl_deal_pmtdet_struct_ha.h_dl_client, l_deal_frmord_struct_h.h_dl_client);
				strcpy(l_dl_deal_pmtdet_struct_ha.h_indentity_no, l_deal_frmord_struct_h.h_indentity_no);
				strcpy(l_dl_deal_pmtdet_struct_ha.h_verfied_with, l_deal_frmord_struct_h.h_verfied_with);
				strcpy(l_dl_deal_pmtdet_struct_ha.h_info1, l_deal_frmord_struct_h.h_info1);
				strcpy(l_dl_deal_pmtdet_struct_ha.h_access_stamp, 
						 l_deal_frmord_struct_h.h_access_stamp);
				strcpy(l_dl_deal_pmtdet_struct_ha.h_brkrno, 
						 l_deal_frmord_struct_h.h_brkrno);
				l_dl_deal_pmtdet_struct_ha.h_diffamount = l_deal_frmord_struct_h.h_diffamount;

				strcpy(l_dl_deal_pmtdet_struct_ha.h_confdate,chr_h_system_date);
				strcpy(l_dl_deal_pmtdet_struct_ha.h_ispart_,"N");
				l_dl_deal_pmtdet_struct_ha.h_newquantity = 0;
				l_dl_deal_pmtdet_struct_ha.h_newamount = 0;
				strcpy(l_dl_deal_pmtdet_struct_ha.h_newindentity_no, APL_NULL_STRING);
				strcpy(l_dl_deal_pmtdet_struct_ha.h_newlocindentity_no, APL_NULL_STRING);
				l_dl_deal_pmtdet_struct_ha.h_grossamount = 0;
				CO_FreeErrLst(l_debug_info_ptr); 
				if ( APL_FAILURE == DL_Mod_DLPmt(&l_dl_deal_pmtdet_struct_ha, 
															  p_intlenv_data_struct_h, l_debug_info_ptr) )
				{	
				   	int_l_stat_flg = 1; 
					 CO_ProcMonitor(fl_userlog, "Returned with failure from DL_Mod_DLPmt().\n",NULL, p_intlenv_data_struct_h);
					 fprintf(fl_userlog,"Message Found With Discrepancy.\n");

					fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt, "%9sTrade Found With Discrepancy.\n", " ");
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt, "\n");
					fflush(fl_repairrpt);

					strcpy(chr_g_msg_sts, "RJO");

					EXEC SQL ROLLBACK WORK;  
					IS_ANY_ORA_ERROR

					if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "TRADE FOUND WITH DISCREPANCY",chr_g_str_client, NULL) )
					{
						CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
					}
				  if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "TRADE COULDN'T BE PREMATCHED",chr_g_str_client, NULL) )
				  {
					  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
					  APL_GOBACK_FAIL
				  }
				  strncpy(chr_l_temp_errmsg,(**l_debug_info_ptr).msg,39);
				  if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", chr_l_temp_errmsg ,chr_g_str_client, NULL) )
				  {
					  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
				  }
					 
               if ( strcmp(chr_l_typeofacc, "N") == 0 )
                  {
                   if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, APL_NULL_STRING, chr_g_str_client, l_debug_info_ptr) )
                      {
                       CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
                       APL_GOBACK_FAIL
                      }
                   CO_FreeErrLst(l_debug_info_ptr);
                   strcpy(l_deal_frmord_struct_h.h_verfied_with, chr_l_verwith);
                   strcpy(l_deal_frmord_struct_h.h_locindentity_no, h_indentity_no);
                   memset(chr_l_failcode_A, APL_NULL_CHAR, 26);
                   if ( APL_FAILURE == DL_Mod_BTTDL(chr_l_rowid_A, &l_deal_frmord_struct_h,
                                                    chr_l_failcode_A, p_intlenv_data_struct_h,
                                                    l_debug_info_ptr) )
                   {
                     strcpy(chr_g_msg_sts, "RJO");

                     EXEC SQL ROLLBACK WORK;  
                     IS_ANY_ORA_ERROR

                     fprintf(fl_userlog, "Message rejected as underlying trade from order not int_found.\n");
                     fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
                     fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
                     fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
							fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
                     fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
                     fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
                     fprintf(fl_repairrpt, "\n");
                     fflush(fl_repairrpt);

                     APL_GOBACK_FAIL
                  }
                   CO_FreeErrLst(l_debug_info_ptr);
                   memset(&l_dl_deal_fail_struct_ha_a, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
                   strcpy(l_dl_deal_fail_struct_ha_a.h_dl_client,l_dl_deal_pmtdet_struct_ha.h_dl_client);
                   strcpy(l_dl_deal_fail_struct_ha_a.h_indentity_no,l_dl_deal_pmtdet_struct_ha.h_indentity_no);
                   strcpy(l_dl_deal_fail_struct_ha_a.h_fail_cd,"15");
                   strcpy(l_dl_deal_fail_struct_ha_a.h_failinfo, APL_NULL_STRING);
                   strcpy(l_dl_deal_fail_struct_ha_a.h_custinfo, APL_NULL_STRING);
                   strcpy(l_dl_deal_fail_struct_ha_a.h_access_stamp, l_dl_deal_pmtdet_struct_ha.h_access_stamp);
                   strcpy(p_intlenv_data_struct_h->h_mode, UFL_MODE);
                   if (APL_FAILURE == DL_Mod_DLFailReas( &l_dl_deal_fail_struct_ha_a,p_intlenv_data_struct_h,l_debug_info_ptr ))
                      {
                        IS_ANY_ERROR_FATAL
                      }
                  }
				
				}
					
					
					
            if (int_l_stat_flg == 1)
				{
					 

					if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "MSG REJ. BUT TRD DETAILS UPDATED",chr_g_str_client, NULL) )
					{
						CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
						APL_GOBACK_FAIL
					}
				 APL_GOBACK_SUCCESS
				 }
				 if (int_l_stat_flg == 0)
				 {
					fprintf(fl_repairrpt, "%9sTRADE STO REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt, "%9sMessage Processed Successfully.\n", " ");
					fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
					fprintf(fl_repairrpt, "\n");
					fflush(fl_repairrpt);

					strcpy(chr_g_msg_sts,"STO");
					
               strcpy(chr_g_rej_reas,DEAL_PREMATCHED);
               
					APL_GOBACK_SUCCESS 
				 }
			} 
		}
		else 
		{
			strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
			strcpy(chr_l_condident, "TRDFROMORD_NF_OK");
			int_l_trdfromorder_nf_ok = 0;

			if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, chr_l_condident, 
														&int_l_trdfromorder_nf_ok, l_debug_info_ptr) )
			{
				fprintf(fl_userlog, "Failed to check the iv_cond for processing MT541/MT543 messages in the \n");
				fprintf(fl_userlog, "event of trade from order not int_found from CNTRY_SYS_PARAMS table.\n");

				fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "\n");
				fflush(fl_repairrpt);

				strcpy(chr_g_msg_sts, "RJO");

				APL_GOBACK_FAIL
			}

			if (!int_l_trdfromorder_nf_ok) 
			{
				

				fprintf(fl_userlog, "Message rejected as underlying trade from order not int_found.\n");
				fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "\n");
				fflush(fl_repairrpt);

				strcpy(chr_g_msg_sts, "RJO");

				if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "TRADE FROM ORDER EXEC. NOT FOUND",chr_g_str_client, NULL) )
				{
					CO_ProcMonitor(APL_OUT_FILE, "Could not insert into MS_INMSGRP\n", NULL, NULL);
					APL_GOBACK_FAIL
				}
          strncpy(chr_l_temp_errmsg,(**l_debug_info_ptr).msg,39);
				if( APL_FAILURE == MS_Mod_IncMsgSts("RJO",chr_l_temp_errmsg,chr_g_str_client, NULL) )
				{
					 CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
				}

				APL_GOBACK_FAIL
			}

		} 
	}
	else if ( !strcmp(p_msg_no, I_MSGNO_540) || !strcmp(p_msg_no, I_MSGNO_542) )
	{
		

		strcpy(chr_mainfuncarea, "ORDERPROC_INCMSG");
		strcpy(chr_l_condident, "PROCESS_520_522");
		l_process_540_542 = 0;

		if ( APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea, chr_l_condident, 
														 &l_process_540_542, l_debug_info_ptr) )
		{
			fprintf(fl_userlog, "Failed to check the iv_cond for processing MT540/MT542 messages from CNTRY_SYS_PARAMS table.\n");

			fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "\n");
			fflush(fl_repairrpt);

			strcpy(chr_g_msg_sts, "RJT");

			APL_GOBACK_FAIL
		}

		if ( !l_process_540_542 ) 
		{
			

			fprintf(fl_userlog, "MT540/MT542 msg encountered. Therefore, rejected.\n");
			fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9s Rejecting incoming msg of type MT540/542.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "\n");
			fflush(fl_repairrpt);

			strcpy(chr_g_msg_sts, "RJT");

			if ( APL_FAILURE == 
						MS_Mod_IncMsgSts("RJT", "MESSAGE TYPE MT540/MT542",chr_g_str_client, NULL) )
			{
				CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
			}

			APL_GOBACK_SUCCESS
		}

	} 

	if ( int_l_trdfromorder_nf_ok || l_process_540_542 )
	{
		if ( APL_FAILURE == MT_Rtv_AccFldVal(h_dl_client, "ourtheir", 
														chr_l_ourtheir, l_debug_info_ptr) )
		{
			fprintf(fl_userlog, "Message rejected as underlying trade from order not int_found.\n");
			fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "\n");
			fflush(fl_repairrpt);

			strcpy(chr_g_msg_sts, "RJO");

			APL_GOBACK_FAIL
		}
		
		strcpy(chr_mainfuncarea, "POLAND_INCMSG");
		strcpy(chr_l_condident, "NO_SPL_CHK_BON");
		int_l_condexists_A = 0;

		if ( APL_FAILURE == CO_Chk_CntryEnabled( chr_mainfuncarea, chr_l_condident,
															&int_l_condexists_A, l_debug_info_ptr) )
		{
			APL_GOBACK_FAIL
		}

		if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_inc_msg_struct_h.instr_code, "typeofinstr",
														chr_l_typeofinstr, l_debug_info_ptr) )
		{
			strcpy(chr_l_typeofinstr,APL_NULL_STRING);
		}

		if ( (!strcmp(chr_l_ourtheir, "O") &&
			  (!strcmp(p_msg_no, I_MSGNO_542) || !strcmp(p_msg_no, I_MSGNO_543)))
		   || ((!strcmp(chr_l_ourtheir, "T")) &&
			  (!strcmp(p_msg_no, I_MSGNO_540) || !strcmp(p_msg_no, I_MSGNO_541)))
			  || ((!strcmp(chr_l_typeofinstr,TYPEOFINSTR_BOND)) && (int_l_condexists_A > 0))
			  || ( strcmp(chr_l_typeofacc, "N") == 0) ) 
		{
			

	

			     
         memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
         memset(h_indentity_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
			strcpy(h_dl_client,h_rep_seq_struct->client);
			strcpy(h_indentity_no,l_ms_inc_msg_struct_h.indentity_no);

			
			i_dl_client=0;
			i_indentity_no=0;
        	EXEC SQL SELECT COUNT(*)
         		INTO     :int_h_count
               FROM DL_DEAL
            	WHERE CLIENT     = :h_dl_client:i_dl_client
               AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

			IS_ANY_ORA_ERROR

	

			strcpy(h_dl_client,h_rep_seq_struct->client);
			strcpy(h_indentity_no,l_ms_inc_msg_struct_h.indentity_no);

			i_dl_client=0;
			i_indentity_no=0;
   		EXEC SQL SELECT COUNT(*)
               INTO     :int_h_count1
        			FROM DL_DEALREPAIR
            	WHERE CLIENT     = :h_dl_client:i_dl_client
               AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

			IS_ANY_ORA_ERROR

   		if ((int_h_count != 0) || (int_h_count1 != 0))
   		{
            fprintf(fl_userlog,"Trade for the Account Refno  already exists.\n");
            strcpy(chr_g_msg_sts, "RJT");

            if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", "TRADE ALREADY EXISTS",chr_g_str_client, NULL) )
            {
               CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
                         NULL, NULL);
            }

            APL_GOBACK_FAIL
   		}
      if ( int_l_chk_rpr )  
      {

      l_progseqnum_struct_h = (PRO_GSEQNUM_STRUCT_H *)calloc(1,sizeof(PRO_GSEQNUM_STRUCT_H));
      APL_MALLOC_FAIL(l_progseqnum_struct_h);
      memset(l_progseqnum_struct_h,NULL,sizeof(PRO_GSEQNUM_STRUCT_H));

      strcpy(l_progseqnum_struct_h->sequencename ,DEAL_REPAIR_SEQNAME);
      int_l_rpr_seq_num = CO_RtvNxtSeqNum(l_progseqnum_struct_h ,
                                       l_debug_info_ptr);
      if (APL_FAILURE == int_l_rpr_seq_num )
      {
         fprintf(fl_userlog,"Failed To Get The Next Sequence Number For repair sequence number\n");
         APL_GOBACK_FAIL
      }

      memset(&l_dl_dealrepair_struct_h, NULL ,sizeof(DL_DEALREPAIR_STRUCT_H) );

      l_dl_dealrepair_struct_h.h_dlrep_sequencenum = int_l_rpr_seq_num;
      strcpy(l_dl_dealrepair_struct_h.h_dl_client, h_rep_seq_struct->client);
      strcpy(l_dl_dealrepair_struct_h.h_indentity_no , l_ms_inc_msg_struct_h.indentity_no);
      strcpy(l_dl_dealrepair_struct_h.h_dealcd,l_ms_inc_msg_struct_h.h_deal_code);
      strcpy(l_dl_dealrepair_struct_h.h_dlt,l_ms_inc_msg_struct_h.dl_dt);
      strcpy(l_dl_dealrepair_struct_h.h_setldt,l_ms_inc_msg_struct_h.setl_dt);
      strcpy(l_dl_dealrepair_struct_h.h_instr_code,l_ms_inc_msg_struct_h.instr_code);
		if(strcmp(l_ms_inc_msg_struct_h.manual_ind_dl_flg,"Y")==0)
     		strcpy(l_dl_dealrepair_struct_h.h_entry ,"M");
		else
			strcpy(l_dl_dealrepair_struct_h.h_entry ,"S");
      strcpy(l_dl_dealrepair_struct_h.h_currencycode,l_ms_inc_msg_struct_h.currency_code);
      strcpy(l_dl_dealrepair_struct_h.h_domcpclt_cd,l_ms_inc_msg_struct_h.domestic_cpclt);
      strcpy(l_dl_dealrepair_struct_h.h_maker, "SYSTEM");
      strcpy(l_dl_dealrepair_struct_h.h_maker_dt, chr_h_system_date_t);
      strcpy(l_dl_dealrepair_struct_h.h_newdt , chr_h_system_date_t);
      strcpy(l_dl_dealrepair_struct_h.h_access_stamp, chr_h_system_date_t);
      l_dl_dealrepair_struct_h.h_amt = l_ms_inc_msg_struct_h.amount;
      strcpy(l_dl_dealrepair_struct_h.h_countclt,l_ms_inc_msg_struct_h.cp_clt);
      strcpy(l_dl_dealrepair_struct_h.h_countcltnm,l_ms_inc_msg_struct_h.countclt_cname);
      strcpy(l_dl_dealrepair_struct_h.h_clientof,l_ms_inc_msg_struct_h.clientof);
      strcpy(l_dl_dealrepair_struct_h.h_info1, l_ms_inc_msg_struct_h.info);
      strcpy(l_dl_dealrepair_struct_h.h_instr_name,l_ms_inc_msg_struct_h.instr_name);
   memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
   memset(h_fx_sell_flag,APL_NULL_CHAR,2);
   memset(h_fx_buy_flag,APL_NULL_CHAR,2);
   strcpy(h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
      EXEC SQL SELECT CLN_FX_SELL_IND,
                CLN_FX_BUY_IND
                INTO :h_fx_sell_flag,
                     :h_fx_buy_flag
                FROM MT_CLIENT
                WHERE CLN_CODE = :h_dl_client;

IS_ANY_ORA_ERROR
      if(l_ms_inc_msg_struct_h.fx_adv_ind[0]=='\0')
      {
         if (!strcmp(l_mt_message_sys_params_struct_h.gen_fx_adv_ind,"Y"))
         {
            if (  l_dl_dealrepair_struct_h.h_dealcd[0] == DEALCD_DVP  )
               strcpy(l_dl_dealrepair_struct_h.h_fx_reqd,h_fx_sell_flag);
            else if (   l_dl_dealrepair_struct_h.h_dealcd[0] ==  DEALCD_RVP )
               strcpy(l_dl_dealrepair_struct_h.h_fx_reqd,h_fx_buy_flag);
             else
               strcpy(l_dl_dealrepair_struct_h.h_fx_reqd, "N");

         }
         else
         {
            strcpy(l_dl_dealrepair_struct_h.h_fx_reqd,"N");
         }
     }
     else
     {
      strcpy(l_dl_dealrepair_struct_h.h_fx_reqd, l_ms_inc_msg_struct_h.fx_adv_ind);
     }
     l_dl_dealrepair_struct_h.h_brokercomm = l_ms_inc_msg_struct_h.brokercomm;
      strcpy(l_dl_dealrepair_struct_h.h_allow_part_s,l_ms_inc_msg_struct_h.partial_ind_a);
      strcpy(l_dl_dealrepair_struct_h.h_domesticcp_clr_name,l_ms_inc_msg_struct_h.domcpclt_cd_cname);
      strcpy(l_dl_dealrepair_struct_h.h_deal_status ,STATUS_UAUTH);
		strcpy(l_dl_dealrepair_struct_h.h_delrecdate,APL_NULL_STRING); 
      h_tot_quantity = (*p_ms_rep_struct_h)->quantity;
      l_dl_dealrepair_struct_h.h_qty = h_tot_quantity;


      if ( !strlen(l_ms_inc_msg_struct_h.dl_class) )
      {
         strcpy(l_dl_dealrepair_struct_h.h_classofdl, NORMALDEAL);
      }
      else
      {
         strcpy(l_dl_dealrepair_struct_h.h_classofdl, l_ms_inc_msg_struct_h.dl_class);
      }

      if(l_ms_inc_msg_struct_h.h_stld_loc   != 1)
      {
     		if (strlen(l_ms_inc_msg_struct_h.instr_code))
     		{
      		memset(chr_l_trd_locn, APL_NULL_CHAR, APL_LOCNCODE_LENGTH);

      		if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_inc_msg_struct_h.instr_code, "locncode",
            		                             chr_l_trd_locn, l_debug_info_ptr) )
      		{
         		memset(chr_l_trd_locn, APL_NULL_CHAR, APL_LOCNCODE_LENGTH);
      		}

      		strcpy(l_dl_dealrepair_struct_h.h_loccode ,chr_l_trd_locn);
			}
      }
	   else
      {
         EXEC SQL SELECT FIELD_VAL INTO :chr_l_trd_locn
                  FROM PRO_GSSPLVAL
                  WHERE MAIN_FUN= 'TRADE_MAINT'
                  AND SUB_PROCESS ='STOCK_LEND_LOCN'
                  AND NATION='GR';
         IS_ANY_ORA_ERROR

         strcpy(l_dl_dealrepair_struct_h.h_loccode ,chr_l_trd_locn);
       }	
      strcpy(l_dl_dealrepair_struct_h.h_cltname,l_ms_inc_msg_struct_h.inst_clnt_clr_name);
      strcpy(l_dl_dealrepair_struct_h.h_clientof,l_ms_inc_msg_struct_h.clientof_cname);
      strcpy(l_dl_dealrepair_struct_h.h_clientofcode,l_ms_inc_msg_struct_h.clientof);
      strcpy(l_dl_dealrepair_struct_h.h_instruct_person,l_ms_inc_msg_struct_h.inst_client);
      strcpy(l_dl_dealrepair_struct_h.h_inter_med_person,l_ms_inc_msg_struct_h.interprty);
      strcpy(l_dl_dealrepair_struct_h.h_inter_med_personnm,l_ms_inc_msg_struct_h.interprtynm);
      strcpy(l_dl_dealrepair_struct_h.h_ex_arena,l_ms_inc_msg_struct_h.ex_arena);
      strcpy(l_dl_dealrepair_struct_h.h_fxccy,l_ms_inc_msg_struct_h.fxccy);
		strcpy(l_dl_dealrepair_struct_h.h_locindentity_no,l_ms_inc_msg_struct_h.lcl_identno);

         memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
         memset(h_indentity_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
         strcpy(h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
         strcpy(h_indentity_no,l_dl_dealrepair_struct_h.h_indentity_no);
      i_dl_client=0;
      i_indentity_no=0;
        EXEC SQL SELECT COUNT(*)
                  INTO     :int_h_count
                  FROM DL_DEAL
            WHERE CLIENT     = :h_dl_client:i_dl_client
                  AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

   IS_ANY_ORA_ERROR

      strcpy(h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
      strcpy(h_indentity_no,l_dl_dealrepair_struct_h.h_indentity_no);
      i_dl_client=0;
      i_indentity_no=0;
   EXEC SQL SELECT COUNT(*)
                  INTO     :int_h_count1
                  FROM DL_DEALREPAIR
            WHERE CLIENT     = :h_dl_client:i_dl_client
                  AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

   IS_ANY_ORA_ERROR

   if ((int_h_count != 0) || (int_h_count1 != 0))
   {
            fprintf(fl_userlog,"Trade for the actual client already exists.\n");
            strcpy(chr_g_msg_sts, "RJT");

            if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", "TRADE ALREADY EXISTS",chr_g_str_client, NULL) )
            {
               CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
                         NULL, NULL);
            }

            APL_GOBACK_FAIL
   }
   else
   {
   	
		printf("\n***************************\n manual_ind_dl_flg = :%s: loc_chng_ind = :%s: \n", l_ms_inc_msg_struct_h.manual_ind_dl_flg, l_ms_inc_msg_struct_h.loc_chng_ind );
   	if (strcmp(l_ms_inc_msg_struct_h.manual_ind_dl_flg,"Y")==0 && strcmp(l_ms_inc_msg_struct_h.loc_chng_ind, "M")==0)
   	{
      	strcpy(l_dl_dealrepair_struct_h.h_entry,"Y");   
   	}
   	else if (strcmp(l_ms_inc_msg_struct_h.manual_ind_dl_flg,"Y")==0 && strcmp(l_ms_inc_msg_struct_h.loc_chng_ind, "N")==0)
   	{
      	strcpy(l_dl_dealrepair_struct_h.h_entry,"M");   
   	}
   	else if (strcmp(l_ms_inc_msg_struct_h.loc_chng_ind, "M")==0)
   	{
    	  strcpy(l_dl_dealrepair_struct_h.h_entry,"Z");   
   	}
   	else
      	strcpy(l_dl_dealrepair_struct_h.h_entry,"S");   

		printf("\n manual_ind_dl_flg = :%s: loc_chng_ind = :%s: and hence h_entry = :%s: \n", l_ms_inc_msg_struct_h.manual_ind_dl_flg, l_ms_inc_msg_struct_h.loc_chng_ind, l_dl_dealrepair_struct_h.h_entry );
      fprintf(fl_userlog,"Inserting Message Into TRADE REPAIR\n");

      int_retstat = IV_SUCCESS;
      

      int_l_txn_type=SETTLEMENT;

		
		memset(chr_l_unique_ref_num,APL_NULL_CHAR,APL_UNIQUE_REF_NUM_LEN);
		memset(chr_g_unique_ref_num,APL_NULL_CHAR,APL_UNIQUE_REF_NUM_LEN);

      if (MS_Rtv_RefNo_A(int_l_txn_type,chr_l_unique_ref_num,l_debug_info_ptr) == APL_FAILURE)
      {
          CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, p_intlenv_data_struct_h);
          APL_GOBACK_FAIL;
      }
      strcpy(l_dl_dealrepair_struct_h.h_uniq_ident_no,chr_l_unique_ref_num);
		strcpy(chr_g_unique_ref_num,chr_l_unique_ref_num);

      if (APL_FAILURE == DL_Mod_TrdRprNew(l_dl_dealrepair_struct_h, &int_retstat, fl_userlog, l_debug_info_ptr) )
      {
         CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, "CTRADEREPAIR", APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
         fprintf(fl_userlog,"Fatal Error In CTRADEREPAIR.\n");

         APL_GOBACK_FAIL
      }
      else
      {
         strcpy(chr_g_msg_sts, "RPR");

          strcpy(l_dl_msglink_struct_h.h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
          strcpy(l_dl_msglink_struct_h.h_indentity_no,l_dl_dealrepair_struct_h.h_indentity_no);
          strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"I");
          strcpy(l_dl_msglink_struct_h.h_swift_msg_no,chr_g_new_msg_no);
          if (APL_FAILURE == CO_RtvMachDtTime( l_dl_msglink_struct_h.h_new_dt, l_debug_info_ptr ))
          {
                APL_GOBACK_FAIL
          }
          strcpy(l_dl_msglink_struct_h.h_information,chr_g_addinfo);
          l_dl_msglink_struct_h.h_sequence_num=int_g_seq_num;
          l_dl_msglink_struct_h.h_dlrep_sequencenum=int_l_rpr_seq_num;
          strncpy(l_dl_msglink_struct_h.h_message_det_a,p_mesg_body,2000);
          l_dl_msglink_struct_h.h_message_det_a[2000]=APL_NULL_CHAR;
          if (strlen(p_mesg_body) >2000)
          {
             strncpy(l_dl_msglink_struct_h.h_message_det_b,p_mesg_body+2000,2000);
             l_dl_msglink_struct_h.h_message_det_b[2000]=APL_NULL_CHAR;
          }
          if (strlen(p_mesg_body) >4000)
          {
             strncpy(l_dl_msglink_struct_h.h_message_det_c,p_mesg_body+4000,2000);
             l_dl_msglink_struct_h.h_message_det_c[2000]=APL_NULL_CHAR;
          }
          if (strlen(p_mesg_body) >6000)
          {
             strncpy(l_dl_msglink_struct_h.h_message_det_d,p_mesg_body+6000,2000);
             l_dl_msglink_struct_h.h_message_det_d[2000]=APL_NULL_CHAR;
          }
          if (strlen(p_mesg_body) >8000)
          {
             strncpy(l_dl_msglink_struct_h.h_message_det_e,p_mesg_body+8000,2000);
             l_dl_msglink_struct_h.h_message_det_e[2000]=APL_NULL_CHAR;
          }
          strcpy(l_dl_msglink_struct_h.h_place_cd,l_ms_inc_msg_struct_h.place_cd);
          strcpy(l_dl_msglink_struct_h.h_description,l_ms_inc_msg_struct_h.description);
          strcpy(l_dl_msglink_struct_h.h_psetparty,l_ms_inc_msg_struct_h.psetparty);


           if(APL_FAILURE==DL_Mod_DLLinkNew(&l_dl_msglink_struct_h,l_debug_info_ptr))
          {
            fprintf(fl_userlog,"Failed To Insert into CMSGLINK Table\n");
          }

         if(APL_FAILURE == DL_Mod_DLLinkInfoNew(&h_inc_linkage_info,
                                          int_g_seq_num,
                                          l_ms_inc_msg_struct_h.count,
                                          l_debug_info_ptr))
         {
            fprintf(fl_userlog,"Failed To Insert into CMSGLINKDET Table\n");
         }


       }
      }
      APL_GOBACK_FAIL
      } 

		if (APL_FAILURE == MS_Proc_SWFDLAdd( int_h_no_of_trd,
													  &l_ms_inc_msg_struct_h,
													  &h_rep_seq_struct,
													  &h_inc_linkage_info,	
													  h_tot_quantity,
													  fl_userlog,
													  p_fl_userlog,
													  chr_fl_name,
													  fl_repairrpt,
													  p_mesg_body,
													  p_intlenv_data_struct_h,
													  l_debug_info_ptr))
			{
				fprintf(fl_userlog,"Failed to create trade in the system.\n");

				APL_GOBACK_FAIL
			}

			fprintf(fl_userlog,"Trade created successfully.\n");

			
          if((!strcmp(chr_g_msg_sts,"STP"))||(!strcmp(chr_g_msg_sts,"STO")))
            {
               strcpy(chr_g_rej_reas,DEAL_GENERATED);
            }
			
			fprintf(fl_repairrpt,"%9sTRADE chr_stp REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9sMessage Processed Successfully.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "\n");
			fflush(fl_repairrpt);

			if( !strcmp( l_ms_inc_msg_struct_h.domestic_cpclt, l_mt_core_sys_params_struct_h.custody_clt_cd ) )
			{
				strcpy( chr_l_exarena, EXARENA );
				EXEC SQL UPDATE DL_DEAL 
				SET EX_ARENA = :chr_l_exarena 
				WHERE CLIENT = :h_dl_client
				AND IDENTIY_NO = :h_indentity_no;

				IS_ANY_ORA_ERROR
			}

			APL_GOBACK_SUCCESS
		}

		

		memset(chr_l_rowid_A, APL_NULL_CHAR, APL_ROWID_LEN);

		if ( APL_FAILURE == MS_Chk_BTTOrd(&l_ms_inc_msg_struct_h, h_dl_client, h_qty, 
														 chr_l_rowid_A, &l_deal_bttord_struct_h, 
														 l_debug_info_ptr) )
		{
			strcpy(chr_g_msg_sts, "RJO");

			

			fprintf(fl_userlog,"Message Rejected as Books Transfer Trade for order was not int_found.\n");

			fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9sBooks Transfer Trade not int_found.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "\n");
			fflush(fl_repairrpt);

			if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "BOOKS TRANSFER TRADE FOR ORDER NOT FOUND",chr_g_str_client, NULL) )
			{
				CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
			}
		 strncpy(chr_l_temp_errmsg,(**l_debug_info_ptr).msg,39);
			if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO",chr_l_temp_errmsg,chr_g_str_client, NULL) )
			{
		 		CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
			}

			APL_GOBACK_FAIL

		} 

		memset(chr_l_trcode_a, APL_NULL_CHAR, 2);
		
		if ( !strcmp(p_msg_no, I_MSGNO_540) )
		{
			chr_l_trcode_a[0] =  DEALCD_RF;
		}
		if ( !strcmp(p_msg_no, I_MSGNO_541) )
		{
			chr_l_trcode_a[0] =  DEALCD_RVP;
		}
		if ( !strcmp(p_msg_no, I_MSGNO_542) )
		{
			chr_l_trcode_a[0] =  DEALCD_DF;
		}
		if ( !strcmp(p_msg_no, I_MSGNO_543) )
		{
			chr_l_trcode_a[0] =  DEALCD_DVP;
		}  

		memset(&l_dl_deal_pmtdet_struct_ha, NULL, sizeof(DL_DEAL_PMTDET_STRUCT_H));

		strcpy(l_dl_deal_pmtdet_struct_ha.h_dl_client, h_dl_client);
		strcpy(l_dl_deal_pmtdet_struct_ha.h_indentity_no, l_deal_bttord_struct_h.h_indentity_no);
		strcpy(l_dl_deal_pmtdet_struct_ha.h_verfied_with, l_deal_bttord_struct_h.h_verfied_with);
		strcpy(l_dl_deal_pmtdet_struct_ha.h_info1, l_deal_bttord_struct_h.h_info1);
		strcpy(l_dl_deal_pmtdet_struct_ha.h_access_stamp, 
				 l_deal_bttord_struct_h.h_access_stamp);
		strcpy(l_dl_deal_pmtdet_struct_ha.h_brkrno, 
				 l_deal_bttord_struct_h.h_brkrno);
		l_dl_deal_pmtdet_struct_ha.h_diffamount = l_deal_bttord_struct_h.h_diffamount;

		strcpy(l_dl_deal_pmtdet_struct_ha.h_confdate,chr_h_system_date);
		strcpy(l_dl_deal_pmtdet_struct_ha.h_ispart_,"N");
		l_dl_deal_pmtdet_struct_ha.h_newquantity = 0;
		l_dl_deal_pmtdet_struct_ha.h_newamount = 0;
		strcpy(l_dl_deal_pmtdet_struct_ha.h_newindentity_no,APL_NULL_STRING);
		strcpy(l_dl_deal_pmtdet_struct_ha.h_newlocindentity_no,APL_NULL_STRING);
		l_dl_deal_pmtdet_struct_ha.h_grossamount = 0;
		int_l_stat_flg = 0;
      
      CO_FreeErrLst(l_debug_info_ptr);
      
		if ( APL_FAILURE == DL_Mod_DLPmt(&l_dl_deal_pmtdet_struct_ha, 
													  p_intlenv_data_struct_h, l_debug_info_ptr) )
		{
        int_l_stat_flg = 1; 
		  CO_ProcMonitor(fl_userlog, "Errors Encountered in DL_Mod_DLPmt,: ", l_debug_info_ptr, NULL);
		  CO_ProcMonitor(p_fl_userlog, "Errors Encountered in DL_Mod_DLPmt,: ", l_debug_info_ptr, NULL);

			 CO_ProcMonitor(fl_userlog, "Returned with failure from DL_Mod_DLPmt().\n",NULL, p_intlenv_data_struct_h);
			 fprintf(fl_userlog,"Message Found With Discrepancy.\n");

			fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9sTrade Found With Discrepancy.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "\n");
			fflush(fl_repairrpt);

			strcpy(chr_g_msg_sts, "RJO");

			if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "TRADE FOUND WITH DISCREPANCY",chr_g_str_client, NULL) )
			{
				CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
			}
			if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "TRADE COULDN'T BE PREMATCHED",chr_g_str_client, NULL) )
			{
			  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
			 APL_GOBACK_FAIL
			}
		  strncpy( chr_l_temp_errmsg,(**l_debug_info_ptr).msg,39);
			if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", chr_l_temp_errmsg ,chr_g_str_client, NULL) )
		 	{
				  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
			}

		}
			strcpy( chr_l_temp_trdsts, l_deal_bttord_struct_h.h_deal_status); 
			memset(&l_deal_bttord_struct_h, NULL, sizeof(DEAL_DET_STRUCT_H));
			strcpy(l_deal_bttord_struct_h.h_deal_status,chr_l_temp_trdsts); 
			strcpy(l_deal_bttord_struct_h.h_verfied_with, chr_l_verwith);
			strcpy(l_deal_bttord_struct_h.h_locindentity_no, h_indentity_no);
			l_deal_bttord_struct_h.h_amt = h_amt;

			if ( APL_FAILURE == DL_Mod_BTTOrd(chr_l_rowid_A, &l_deal_bttord_struct_h, 
															 chr_l_trcode_a, l_debug_info_ptr) )
			{
				strcpy(chr_g_msg_sts, "RJO");

				EXEC SQL ROLLBACK WORK;  
				IS_ANY_ORA_ERROR

				fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "%9s Message Rejected as Executed Trade Not Found in the System.\n", " ");
				fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
				fprintf(fl_repairrpt, "\n");
				fflush(fl_repairrpt);

				APL_GOBACK_FAIL
			}
        if (int_l_stat_flg == 1)
		  {
		   

			  if ( APL_FAILURE == MS_Mod_IncMsgSts("RJO", "MSG REJ. BUT TRD DETAILS MODIFIED ",chr_g_str_client, NULL) )
			  {
				  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n", NULL, NULL);
				  APL_GOBACK_FAIL
			  }
			  APL_GOBACK_SUCCESS
		  }
		  if (int_l_stat_flg == 0)
		  {
			fprintf(fl_repairrpt, "%9sTRADE chr_stp REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9sMessage Processed Successfully.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "\n");
			fflush(fl_repairrpt);

			strcpy(chr_g_msg_sts, "STO");

			
         strcpy(chr_g_rej_reas,DEAL_PREMATCHED);
         
			APL_GOBACK_SUCCESS
		}
	}

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(p_fl_userlog,"Exiting out of MS_Proc_IncMsg54xOrd sucessfully\n",
					NULL, NULL);
	}
	EXEC SQL COMMIT;
	
	return APL_SUCCESS;

	RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(p_fl_userlog, "Exiting out of MS_Proc_IncMsg54xOrd unsucessfully\n",
					NULL, NULL);
	}
	
	return APL_FAILURE;
}





	


int MS_Proc_DataFmtChg(char   *p_dt,
				  	char  *p_ret_date,
				   DEBUG_INFO_STRUCT_H   **l_debug_info_ptr)


{
	
    char  chr_h_date[APL_DATE_LEN]          = APL_NULL_STRING;
	 char  chr_h_ret_date[APL_DATE_LEN]      = APL_NULL_STRING;

			 
	 EXEC SQL BEGIN DECLARE SECTION;

	 EXEC SQL VAR chr_h_ret_date IS STRING;
	 EXEC SQL VAR chr_h_date IS STRING;
	 EXEC SQL END DECLARE SECTION;

	 #ifdef APL_THREADS
			 APL_SET_CONTEXT
      	 EXEC SQL CONTEXT USE :my_ctx_local;
	 #endif
	printf("\n Inside MS_Proc_DataFmtChg ... p_dt=|%s|,p_ret_date=|%s|\n",p_dt,p_ret_date);
	 memset(chr_h_ret_date,APL_NULL_CHAR , APL_DATE_LEN);
 printf("\n Inside processtion 1 \n");
	
    memset(chr_h_date,APL_NULL_CHAR , APL_DATE_LEN);
 printf("\n Inside processtion 2 \n");

	printf("the p_dt coming in is actually :%s: sqlca :%d: \n",p_dt,sqlca.sqlcode);
	strncpy(chr_h_date,p_dt,8); 
	chr_h_date[8]=APL_NULL_CHAR;
   
    sqlca.sqlcode = 0L;


    EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_h_date,'YYYYMMDD'),'DD/MM/YYYY')
	    		 INTO  :chr_h_ret_date
				 FROM DUAL;

 IS_ANY_ORA_ERROR
	printf("the chr_h_ret_date is :%s: The sqlca.sqlcode = :%d:\n",chr_h_ret_date, sqlca.sqlcode);
	strcat(chr_h_ret_date," 12:00:00");
	printf("the chr_h_ret_date is %s\n",chr_h_ret_date);
	strcpy(p_ret_date , chr_h_ret_date);
	 sqlca.sqlcode = 0L;
	APL_GOBACK_SUCCESS;

  
	RETURN_FAILURE:
		APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,  
								"Exiting out of MS_Proc_DataFmtChg unsuccessfully\n",
				  				NULL,
								NULL);
			   }
		return (APL_FAILURE);


	RETURN_SUCCESS:
    	APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,
								"Exiting out of MS_Proc_DataFmtChg successfully\n",
                        NULL,
				            NULL);
				}
		return (APL_SUCCESS);


}





	
	int MS_Proc_IncMsg54x( FILE							*fl_incmsg,
							char							*p_msg_no,
							FILE							*fl_userlog,
							FILE							*p_fl_userlog,
							char							*chr_fl_name,
							MS_INC_MSG_STRUCT_H			*p_ms_inc_msg_struct_h,
							MS_REP_STRUCT_H   		**p_ms_rep_struct_h,
							MS_INC_LINKINFO_STRUCT_H		**p_ms_inc_linkinfo_struct_h,
							FILE							*fl_repairrpt,	
							char							*p_mesg_body,
							int							*p_no_of_deal,
							INTL_ENV_DATA_STRUCT_H		*p_intlenv_data_struct_h,
							DEBUG_INFO_STRUCT_H				**l_debug_info_ptr)
	{
		

		int 		int_l_dummy;
	   int 		int_retstat = 0;	
		char 		chr_h_client1[APL_CLIENT_LENGTH],chr_h_dummy_acc[APL_CLIENT_LENGTH];
		char 		h_indentity_no[APL_TXNREFNO_LEN];
		char 		h_ora_rowid[APL_ROWID_LEN];
		char 		h_fail_cd[3];
		char		chr_h_correct_msg[2]							= APL_NULL_STRING;
		char		chr_l_trdfordummyinrpr 						= 'N';
		int		int_h_no_of_trd									= 0;
		double	h_tot_quantity									= 0;
		char		h_dl_client[APL_CLIENT_LENGTH]				= APL_NULL_STRING;
		char  	chr_h_system_date[APL_DATE_LEN];
		char     chr_l_trd_locn[APL_LOCNCODE_LENGTH] 			= APL_NULL_STRING;
		char     chr_l_h_trd_locn[APL_LOCNCODE_LENGTH]      = APL_NULL_STRING;
		int 		int_l_rpr_seq_num = 0;


		
    	int int_l_txn_type=0;
    	char chr_l_unique_ref_num[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING;
		

		
		int int_h_count          = 0;
      int int_h_count1         = 0;
      short i_dl_client      = 0;
      short i_indentity_no        = 0;
		char  h_fx_sell_flag[2]            = APL_NULL_STRING;
      char  h_fx_buy_flag[2]            = APL_NULL_STRING;

		char  chr_l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;  
		char  chr_l_only_sysdate[11]       = APL_NULL_STRING;  
	
		EXEC SQL BEGIN DECLARE SECTION;
		short int i_failreas_cd = 0; 
		short int int_i_dummy_acc = 0;
		short l_i_trd_locn = 0;
		EXEC SQL VAR chr_l_h_trd_locn IS STRING;
		struct sqlca sqlca; 
		EXEC SQL VAR h_dl_client IS STRING;
		EXEC SQL VAR chr_h_dummy_acc IS STRING;
		EXEC SQL VAR h_fx_sell_flag  IS STRING;
		EXEC SQL VAR h_fx_buy_flag  IS STRING;
		
		EXEC SQL VAR h_indentity_no IS STRING;
		EXEC SQL VAR chr_l_only_sysdate IS STRING;
   	EXEC SQL VAR chr_l_sys_date     IS STRING;
		EXEC SQL END DECLARE SECTION;

		DL_DEALREPAIR_STRUCT_H      l_dl_dealrepair_struct_h;
		DL_DEAL_OTH_STRUCT_H       	l_dl_deal_oth_struct_h;
		MS_INC_MSG_STRUCT_H				l_ms_inc_msg_struct_h;
		MS_REP_STRUCT_H				*h_rep_seq_struct = (MS_REP_STRUCT_H  *)NULL;
		MS_INC_LINKINFO_STRUCT_H         *h_inc_linkage_info = (MS_INC_LINKINFO_STRUCT_H *)NULL; 
		PRO_GSEQNUM_STRUCT_H      	*l_progseqnum_struct_h     = NULL;
		DL_MSGLINK_STRUCT_H			l_dl_msglink_struct_h;	

		memset(chr_h_system_date,NULL ,APL_DATE_LEN);
		memset (&l_ms_inc_msg_struct_h,NULL,sizeof(MS_INC_MSG_STRUCT_H));
		memset(&l_dl_msglink_struct_h,NULL,sizeof(DL_MSGLINK_STRUCT_H));
		memset(&l_dl_dealrepair_struct_h,NULL,sizeof(DL_DEALREPAIR_STRUCT_H));
		sqlca.sqlcode = 0;
		int_h_no_of_trd =*p_no_of_deal;
		l_ms_inc_msg_struct_h=*p_ms_inc_msg_struct_h;
		h_rep_seq_struct = *p_ms_rep_struct_h;
		h_inc_linkage_info = *p_ms_inc_linkinfo_struct_h;	
		

		if (APL_FAILURE == CO_RtvMachDtTime(chr_h_system_date, l_debug_info_ptr) )
		{
			fprintf(fl_userlog,"failed To get System Date\n");
			APL_GOBACK_FAIL
		}
	

			     
         memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
         memset(h_indentity_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
         strcpy(h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
         strcpy(h_indentity_no,l_dl_dealrepair_struct_h.h_indentity_no);
			
			i_dl_client=0;
			i_indentity_no=0;
        EXEC SQL SELECT COUNT(*)
                  INTO     :int_h_count
                  FROM DL_DEAL
            WHERE CLIENT     = :h_dl_client:i_dl_client
                  AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

   IS_ANY_ORA_ERROR

	
      strcpy(h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
      strcpy(h_indentity_no,l_dl_dealrepair_struct_h.h_indentity_no);
		i_dl_client=0;
		i_indentity_no=0;
   EXEC SQL SELECT COUNT(*)
                  INTO     :int_h_count1
                  FROM DL_DEALREPAIR
            WHERE CLIENT     = :h_dl_client:i_dl_client
                  AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

   IS_ANY_ORA_ERROR

   if ((int_h_count != 0) || (int_h_count1 != 0))
   {
            fprintf(fl_userlog,"Trade for the actual client already exists.\n");
            strcpy(chr_g_msg_sts, "RJT");

            if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", "TRADE ALREADY EXISTS",chr_g_str_client, NULL) )
            {
               CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
                         NULL, NULL);
            }

            APL_GOBACK_FAIL
   }
		if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) )
		{
			fprintf(fl_repairrpt,"%9sTRADE REJECTION REPORT FOR MESSAGE FILE %s\n", " ", chr_fl_name);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt,"%s\n\n", p_mesg_body);
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fprintf(fl_repairrpt, "%9sErrors int_found while parsing the msg. Please identify to the chr_log h_file for details.\n", " ");
			fprintf(fl_repairrpt,"%9s---------------------------------------------------------------------------\n"," ");
			fflush(fl_repairrpt);

		  

			l_progseqnum_struct_h = (PRO_GSEQNUM_STRUCT_H *)calloc(1,sizeof(PRO_GSEQNUM_STRUCT_H));
			APL_MALLOC_FAIL(l_progseqnum_struct_h);
			memset(l_progseqnum_struct_h,NULL,sizeof(PRO_GSEQNUM_STRUCT_H));

			strcpy(l_progseqnum_struct_h->sequencename ,DEAL_REPAIR_SEQNAME);
			int_l_rpr_seq_num = CO_RtvNxtSeqNum(l_progseqnum_struct_h ,
														l_debug_info_ptr);
			if (APL_FAILURE == int_l_rpr_seq_num )
			{
				fprintf(fl_userlog,"Failed To Get The Next Sequence Number For repair sequence number\n");
				APL_GOBACK_FAIL
			}

			memset(&l_dl_dealrepair_struct_h, NULL ,sizeof(DL_DEALREPAIR_STRUCT_H) );

			l_dl_dealrepair_struct_h.h_dlrep_sequencenum = int_l_rpr_seq_num;
			strcpy(l_dl_dealrepair_struct_h.h_dl_client, h_rep_seq_struct->client);
			strcpy(l_dl_dealrepair_struct_h.h_indentity_no , l_ms_inc_msg_struct_h.indentity_no);
			strcpy(l_dl_dealrepair_struct_h.h_dealcd,l_ms_inc_msg_struct_h.h_deal_code);
			strcpy(l_dl_dealrepair_struct_h.h_dlt,l_ms_inc_msg_struct_h.dl_dt);
			strcpy(l_dl_dealrepair_struct_h.h_setldt,l_ms_inc_msg_struct_h.setl_dt);		
			strcpy(l_dl_dealrepair_struct_h.h_instr_code,l_ms_inc_msg_struct_h.instr_code);
			if(strcmp(l_ms_inc_msg_struct_h.manual_ind_dl_flg,"Y")==0)
         strcpy(l_dl_dealrepair_struct_h.h_entry ,"M");
         else
			strcpy(l_dl_dealrepair_struct_h.h_entry ,"S");
			strcpy(l_dl_dealrepair_struct_h.h_currencycode,l_ms_inc_msg_struct_h.currency_code);
			strcpy(l_dl_dealrepair_struct_h.h_domcpclt_cd,l_ms_inc_msg_struct_h.domestic_cpclt);

			if ( !strlen(l_ms_inc_msg_struct_h.dl_class) ) 
				strcpy(l_dl_dealrepair_struct_h.h_classofdl, NORMALDEAL);
			else
				strcpy(l_dl_dealrepair_struct_h.h_classofdl, l_ms_inc_msg_struct_h.dl_class);

			strcpy(l_dl_dealrepair_struct_h.h_maker, "SYSTEM");
			strcpy(l_dl_dealrepair_struct_h.h_maker_dt, chr_h_system_date);
			strcpy(l_dl_dealrepair_struct_h.h_newdt , chr_h_system_date);
			strcpy(l_dl_dealrepair_struct_h.h_access_stamp, chr_h_system_date);
			l_dl_dealrepair_struct_h.h_amt = l_ms_inc_msg_struct_h.amount;
			strcpy(l_dl_dealrepair_struct_h.h_countclt,l_ms_inc_msg_struct_h.cp_clt);
			strcpy(l_dl_dealrepair_struct_h.h_countcltnm,l_ms_inc_msg_struct_h.countclt_cname);
			strcpy(l_dl_dealrepair_struct_h.h_clientof,l_ms_inc_msg_struct_h.clientof);
			strcpy(l_dl_dealrepair_struct_h.h_info1,l_ms_inc_msg_struct_h.info);
			strcpy(l_dl_dealrepair_struct_h.h_instr_name,l_ms_inc_msg_struct_h.instr_name);
			strcpy(l_dl_dealrepair_struct_h.h_cltname,l_ms_inc_msg_struct_h.inst_clnt_clr_name);
			strcpy(l_dl_dealrepair_struct_h.h_domesticcp_clr_name,l_ms_inc_msg_struct_h.domcpclt_cd_cname);


			 memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
   		memset(h_fx_sell_flag,APL_NULL_CHAR,2);
   		memset(h_fx_buy_flag,APL_NULL_CHAR,2);
   		strcpy(h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
      		EXEC SQL SELECT CLN_FX_SELL_IND,
                CLN_FX_BUY_IND
                INTO :h_fx_sell_flag,
                     :h_fx_buy_flag
                FROM MT_CLIENT
                WHERE CLN_CODE = :h_dl_client;

			IS_ANY_ORA_ERROR
      	if(l_ms_inc_msg_struct_h.fx_adv_ind[0]=='\0')
      	{
         	if (!strcmp(l_mt_message_sys_params_struct_h.gen_fx_adv_ind,"Y"))
         	{
            	if (  l_dl_dealrepair_struct_h.h_dealcd[0] == DEALCD_DVP  )
              	 strcpy(l_dl_dealrepair_struct_h.h_fx_reqd,h_fx_sell_flag);
            	else if (   l_dl_dealrepair_struct_h.h_dealcd[0] ==  DEALCD_RVP )
               	strcpy(l_dl_dealrepair_struct_h.h_fx_reqd,h_fx_buy_flag);
             	else
               	strcpy(l_dl_dealrepair_struct_h.h_fx_reqd, "N");

  		       }
      	   else
         	{
            	strcpy(l_dl_dealrepair_struct_h.h_fx_reqd,"N");
         	}
     	}
     	else
     	{
      	strcpy(l_dl_dealrepair_struct_h.h_fx_reqd, l_ms_inc_msg_struct_h.fx_adv_ind);
     	}
		l_dl_dealrepair_struct_h.h_brokercomm = l_ms_inc_msg_struct_h.brokercomm;
         strcpy(l_dl_dealrepair_struct_h.h_allow_part_s,l_ms_inc_msg_struct_h.partial_ind_a);

			strcpy(l_dl_dealrepair_struct_h.h_deal_status ,STATUS_UAUTH);
			strcpy(l_dl_dealrepair_struct_h.h_delrecdate,APL_NULL_STRING); 


			h_tot_quantity = (*p_ms_rep_struct_h)->quantity;
			l_dl_dealrepair_struct_h.h_qty = h_tot_quantity;

      strcpy(l_dl_dealrepair_struct_h.h_cltname,l_ms_inc_msg_struct_h.inst_clnt_clr_name);
      strcpy(l_dl_dealrepair_struct_h.h_clientof,l_ms_inc_msg_struct_h.clientof_cname);
      strcpy(l_dl_dealrepair_struct_h.h_clientofcode,l_ms_inc_msg_struct_h.clientof);
      strcpy(l_dl_dealrepair_struct_h.h_instruct_person,l_ms_inc_msg_struct_h.inst_client);
		
		strcpy(l_dl_dealrepair_struct_h.h_inter_med_person,l_ms_inc_msg_struct_h.interprty);
		strcpy(l_dl_dealrepair_struct_h.h_inter_med_personnm,l_ms_inc_msg_struct_h.interprtynm);
		
		strcpy(l_dl_dealrepair_struct_h.h_ex_arena,l_ms_inc_msg_struct_h.ex_arena);
		
		
		strcpy(l_dl_dealrepair_struct_h.h_fxccy,l_ms_inc_msg_struct_h.fxccy); 
		strcpy(l_dl_dealrepair_struct_h.h_locindentity_no,l_ms_inc_msg_struct_h.lcl_identno);

      if(l_ms_inc_msg_struct_h.h_stld_loc   != 1)
      {
		  if (strlen(l_ms_inc_msg_struct_h.instr_code))
		  {
			memset(chr_l_trd_locn, APL_NULL_CHAR, APL_LOCNCODE_LENGTH);

			if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_inc_msg_struct_h.instr_code, "locncode", 
														  chr_l_trd_locn, l_debug_info_ptr) )
			{
				memset(chr_l_trd_locn, APL_NULL_CHAR, APL_LOCNCODE_LENGTH);
			}

			strcpy(l_dl_dealrepair_struct_h.h_loccode ,chr_l_trd_locn);
		  }
		}
      else
      {
         EXEC SQL SELECT FIELD_VAL INTO :chr_l_trd_locn
                  FROM PRO_GSSPLVAL
                  WHERE MAIN_FUN= 'TRADE_MAINT'
                  AND SUB_PROCESS ='STOCK_LEND_LOCN'
                  AND NATION='GR';
         IS_ANY_ORA_ERROR

         strcpy(l_dl_dealrepair_struct_h.h_loccode ,chr_l_trd_locn);
      }
		
		   
  			memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 			memset(h_indentity_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
  			strcpy(h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
  			strcpy(h_indentity_no,l_dl_dealrepair_struct_h.h_indentity_no);
 			EXEC SQL SELECT COUNT(*)
   		INTO   :int_h_count
   		FROM DL_DEAL
     			WHERE CLIENT= :h_dl_client:i_dl_client
   			AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

 		   IS_ANY_ORA_ERROR

   		EXEC SQL SELECT COUNT(*)
   		INTO   :int_h_count1
                  FROM DL_DEALREPAIR
         		   WHERE CLIENT     = :h_dl_client:i_dl_client
                  AND IDENTIY_NO   = :h_indentity_no:i_indentity_no;

   		IS_ANY_ORA_ERROR

   		if ((int_h_count != 0) || (int_h_count1 != 0))
   		{
            fprintf(fl_userlog,"Trade for the actual client already exists.\n");
            strcpy(chr_g_msg_sts, "RJT");

            if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", "TRADE ALREADY EXISTS",chr_g_str_client, NULL) )
            {
               CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
                         NULL, NULL);
            }

            APL_GOBACK_FAIL
   		}
   		else

   		{

   	
		printf("\n***************************\n manual_ind_dl_flg = :%s: loc_chng_ind = :%s: \n", l_ms_inc_msg_struct_h.manual_ind_dl_flg, l_ms_inc_msg_struct_h.loc_chng_ind );
   	if (strcmp(l_ms_inc_msg_struct_h.manual_ind_dl_flg,"Y")==0 && strcmp(l_ms_inc_msg_struct_h.loc_chng_ind, "M")==0)
   	{
      	strcpy(l_dl_dealrepair_struct_h.h_entry,"Y");   
   	}
   	else if (strcmp(l_ms_inc_msg_struct_h.manual_ind_dl_flg,"Y")==0 && strcmp(l_ms_inc_msg_struct_h.loc_chng_ind, "N")==0)
   	{
      	strcpy(l_dl_dealrepair_struct_h.h_entry,"M");   
   	}
		else if (strcmp(l_ms_inc_msg_struct_h.loc_chng_ind, "M")==0)
   	{
      	strcpy(l_dl_dealrepair_struct_h.h_entry,"Z");   
   	}
   	else
      	strcpy(l_dl_dealrepair_struct_h.h_entry,"S");   

			printf("\n manual_ind_dl_flg = :%s: loc_chng_ind = :%s: and hence h_entry = :%s: \n", l_ms_inc_msg_struct_h.manual_ind_dl_flg, l_ms_inc_msg_struct_h.loc_chng_ind, l_dl_dealrepair_struct_h.h_entry );
			fprintf(fl_userlog,"Inserting Message Into TRADE REPAIR\n");
			
			int_retstat = IV_SUCCESS;
         

         int_l_txn_type=SETTLEMENT;
			memset(chr_l_unique_ref_num,APL_NULL_CHAR,APL_UNIQUE_REF_NUM_LEN);
			memset(chr_g_unique_ref_num,APL_NULL_CHAR,APL_UNIQUE_REF_NUM_LEN);
         if (MS_Rtv_RefNo_A(int_l_txn_type,chr_l_unique_ref_num,l_debug_info_ptr) == APL_FAILURE)
         {
             CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, p_intlenv_data_struct_h);
             APL_GOBACK_FAIL;
         }
         strcpy(l_dl_dealrepair_struct_h.h_uniq_ident_no,chr_l_unique_ref_num);
			strcpy(chr_g_unique_ref_num,chr_l_unique_ref_num);

			if (APL_FAILURE == DL_Mod_TrdRprNew(l_dl_dealrepair_struct_h,
															&int_retstat,
															fl_userlog,
															l_debug_info_ptr) )
			{
				CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, "CTRADEREPAIR",
									APL_NULL_STRING, APL_NULL_STRING, 
									__LINE__, __FILE__);

				fprintf(fl_userlog,"Fatal Error In CTRADEREPAIR.\n");

				APL_GOBACK_FAIL
			}
			else
			{
				strcpy(chr_g_msg_sts, "RPR");
			
				
			strcpy(l_dl_msglink_struct_h.h_dl_client,l_dl_dealrepair_struct_h.h_dl_client);
			strcpy(l_dl_msglink_struct_h.h_indentity_no,l_dl_dealrepair_struct_h.h_indentity_no);
			strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"I");
			strcpy(l_dl_msglink_struct_h.h_swift_msg_no,chr_g_new_msg_no);
			if (APL_FAILURE == CO_RtvMachDtTime( l_dl_msglink_struct_h.h_new_dt, l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}
			strcpy(l_dl_msglink_struct_h.h_information,chr_g_addinfo);
			l_dl_msglink_struct_h.h_sequence_num=int_g_seq_num;
		   l_dl_msglink_struct_h.h_dlrep_sequencenum=int_l_rpr_seq_num;


			strncpy(l_dl_msglink_struct_h.h_message_det_a,p_mesg_body,2000); 
         l_dl_msglink_struct_h.h_message_det_a[2000]=APL_NULL_CHAR;
         if (strlen(p_mesg_body) >2000)
         {
            strncpy(l_dl_msglink_struct_h.h_message_det_b,p_mesg_body+2000,2000);
             l_dl_msglink_struct_h.h_message_det_b[2000]=APL_NULL_CHAR;
          }
          if (strlen(p_mesg_body) >4000)
          {
            strncpy(l_dl_msglink_struct_h.h_message_det_c,p_mesg_body+4000,2000);
            l_dl_msglink_struct_h.h_message_det_c[2000]=APL_NULL_CHAR;
          }
          if (strlen(p_mesg_body) >6000)
          {
             strncpy(l_dl_msglink_struct_h.h_message_det_d,p_mesg_body+6000,2000);
             l_dl_msglink_struct_h.h_message_det_d[2000]=APL_NULL_CHAR;
          }
          if (strlen(p_mesg_body) >8000)
          {
             strncpy(l_dl_msglink_struct_h.h_message_det_e,p_mesg_body+8000,2000);
             l_dl_msglink_struct_h.h_message_det_e[2000]=APL_NULL_CHAR;
          }
			 

          strcpy(l_dl_msglink_struct_h.h_place_cd,l_ms_inc_msg_struct_h.place_cd);
          strcpy(l_dl_msglink_struct_h.h_description,l_ms_inc_msg_struct_h.description);
          strcpy(l_dl_msglink_struct_h.h_psetparty,l_ms_inc_msg_struct_h.psetparty);


				if(APL_FAILURE==DL_Mod_DLLinkNew(&l_dl_msglink_struct_h,l_debug_info_ptr))
				{
					fprintf(fl_userlog,"Failed To Insert into CMSGLINK Table\n");
				}
         if(APL_FAILURE == DL_Mod_DLLinkInfoNew(&h_inc_linkage_info,
                                          int_g_seq_num,
                                          l_ms_inc_msg_struct_h.count,
                                          l_debug_info_ptr))
         {
            fprintf(fl_userlog,"Failed To Insert into CMSGLINKDET Table\n");
         }


			}
		}
			APL_GOBACK_FAIL
		}

	
		memset(chr_h_client1, APL_NULL_CHAR, APL_CLIENT_LENGTH);
		memset(h_indentity_no, APL_NULL_CHAR, APL_TXNREFNO_LEN);

		strcpy(chr_h_client1,h_rep_seq_struct->client);
		strcpy(h_indentity_no,l_ms_inc_msg_struct_h.indentity_no);    
		strcpy(l_dl_deal_oth_struct_h.h_dl_client,"991566");
		strcpy(l_dl_deal_oth_struct_h.h_indentity_no,h_indentity_no);
		strcpy(l_dl_deal_oth_struct_h.h_locindentity_no,"xxxxxx");
		strcpy(l_dl_deal_oth_struct_h.h_brkrno,"xxxxxx");
		strcpy(l_dl_deal_oth_struct_h.h_clt_reqdel_flag,"Y");
		int_l_dummy=0;
		memset(chr_h_dummy_acc, APL_NULL_CHAR, APL_CLIENT_LENGTH);
		strcpy(chr_h_dummy_acc,H_EURO_DUMMY_CLI);

		if (APL_FAILURE == CO_Chk_SplVal("EUROCLEAR", "ACT_ACC", chr_h_client1, 
													&int_l_dummy, l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_dummy!=0)
		{

		

		

			if (APL_FAILURE == MS_Chk_SWFTMsg(l_ms_inc_msg_struct_h, int_h_no_of_trd, chr_h_dummy_acc, chr_h_correct_msg, l_debug_info_ptr))
			{
				if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) )
				{
					APL_GOBACK_FAIL
				}
				else
				{
					chr_l_trdfordummyinrpr = 'Y';
				}
			}
			if (!strcmp(chr_h_correct_msg,"T"))
			{
				if (APL_FAILURE == MS_Chk_SWFTMsg(l_ms_inc_msg_struct_h, int_h_no_of_trd, chr_h_client1, chr_h_correct_msg, l_debug_info_ptr)) 
				{
					if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) ) 
					{
						APL_GOBACK_FAIL
					}
				}

				if ( !strcmp(chr_h_correct_msg,"F") )
				{
					fprintf(fl_userlog,"Trade for the actual client already exists.\n");
					strcpy(chr_g_msg_sts, "RJT");

					if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", "TRADE FOR ACTUAL A/C ALREADY EXISTS",chr_g_str_client, NULL) )
					{
						CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
									NULL, NULL);
					}

					APL_GOBACK_FAIL
				}

      
               

               if (APL_FAILURE == MS_Proc_SWFDLAdd( int_h_no_of_trd,
                                                 &l_ms_inc_msg_struct_h,
                                                 &h_rep_seq_struct,
                                                 &h_inc_linkage_info,
                                                 h_tot_quantity,
                                                 fl_userlog,
                                                 p_fl_userlog,
                                                 chr_fl_name,
                                                 fl_repairrpt,
                                                 p_mesg_body,
                                                 p_intlenv_data_struct_h,
                                                 l_debug_info_ptr ))
               {
                  fprintf(fl_userlog,"Failed to add the chr_new trade to the system \n");
                  APL_GOBACK_FAIL
               }

               if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, APL_NULL_STRING,chr_g_str_client, l_debug_info_ptr) )
               {
                  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
                           NULL, NULL);

                  

                  

                  IS_ANY_ORA_ERROR

                  APL_GOBACK_FAIL
               }

               CO_ProcMonitor(fl_userlog, "Errors after AddSwfTrdFn().\n", l_debug_info_ptr, NULL);
               CO_FreeErrLst(l_debug_info_ptr);
               *l_debug_info_ptr = NULL;
					

            APL_GOBACK_SUCCESS
			}
			else if (!strcmp(chr_h_correct_msg,"F")) 
			{
				if (APL_FAILURE == MS_Chk_SWFTMsg(l_ms_inc_msg_struct_h,
															  int_h_no_of_trd,
															  chr_h_client1, 
															  chr_h_correct_msg,
															  l_debug_info_ptr))
				{
					if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) )
					{
						APL_GOBACK_FAIL
					}
				}

				if (!strcmp(chr_h_correct_msg,"F"))
				{
					fprintf(fl_userlog,"Trade for the actual client already exists.\n");
					strcpy(chr_g_msg_sts, "RJT");

					if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", "TRADE FOR ACTUAL A/C ALREADY EXISTS",chr_g_str_client, NULL) )
					{
						CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
									NULL, NULL);
					}

					APL_GOBACK_FAIL
				}

				if ( chr_l_trdfordummyinrpr == 'Y' )
				{
					
               if (APL_FAILURE == MS_Proc_SWFDLAdd( int_h_no_of_trd,
                                                 &l_ms_inc_msg_struct_h,
                                                 &h_rep_seq_struct,
                                                 &h_inc_linkage_info,
                                                 h_tot_quantity,
                                                 fl_userlog,
                                                 p_fl_userlog,
                                                 chr_fl_name,
                                                 fl_repairrpt,
                                                 p_mesg_body,
                                                 p_intlenv_data_struct_h,
                                                 l_debug_info_ptr ))
               {
                  fprintf(fl_userlog,"Failed to add the chr_new trade to the system \n");
                  APL_GOBACK_FAIL
               }


               if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, APL_NULL_STRING,chr_g_str_client, l_debug_info_ptr) )
               {
                  CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
                           NULL, NULL);

                  

                  EXEC SQL ROLLBACK;

                  IS_ANY_ORA_ERROR

                  APL_GOBACK_FAIL
               }

               CO_ProcMonitor(fl_userlog, "Errors after AddSwfTrdFn().\n", l_debug_info_ptr, NULL);
               CO_FreeErrLst(l_debug_info_ptr);
               *l_debug_info_ptr = NULL;

               APL_GOBACK_SUCCESS
				}
				else
				{
					

					if (APL_FAILURE == MS_Proc_SWFDLAdd( int_h_no_of_trd,
																 &l_ms_inc_msg_struct_h,
																 &h_rep_seq_struct,
																 &h_inc_linkage_info,	
																 h_tot_quantity,
																 fl_userlog,
																 p_fl_userlog,
																 chr_fl_name,
																 fl_repairrpt,
																 p_mesg_body,
																 p_intlenv_data_struct_h,
																 l_debug_info_ptr ))
					{
						fprintf(fl_userlog,"Failed to add the chr_new trade to the system \n");
						APL_GOBACK_FAIL
					}


					if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, APL_NULL_STRING,chr_g_str_client, l_debug_info_ptr) )
					{
						CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
									NULL, NULL);

						

						EXEC SQL ROLLBACK;

						IS_ANY_ORA_ERROR

						APL_GOBACK_FAIL
					}

					CO_ProcMonitor(fl_userlog, "Errors after AddSwfTrdFn().\n", l_debug_info_ptr, NULL);
					CO_FreeErrLst(l_debug_info_ptr);
					*l_debug_info_ptr = NULL;

					if (APL_FAILURE == DL_Rtv_TrdChrVal(l_dl_deal_oth_struct_h.h_dl_client,
															l_dl_deal_oth_struct_h.h_indentity_no,
															"access_stamp",
															l_dl_deal_oth_struct_h.h_access_stamp,
															l_debug_info_ptr))		
					{
						

						EXEC SQL ROLLBACK;

						IS_ANY_ORA_ERROR

						APL_GOBACK_FAIL
					}

					strcpy(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE);
					if (APL_FAILURE == DL_Proc_TrdOth(&l_dl_deal_oth_struct_h,
													 p_intlenv_data_struct_h,
													 l_debug_info_ptr) )
					{
						fprintf(fl_userlog,"Failed to delete the trade for the dummy client.\n");
						

						EXEC SQL ROLLBACK;

						IS_ANY_ORA_ERROR

						APL_GOBACK_FAIL
					}
					if (APL_FAILURE == DL_Rtv_TrdChrVal(l_dl_deal_oth_struct_h.h_dl_client,
															l_dl_deal_oth_struct_h.h_indentity_no,
															"access_stamp",
															l_dl_deal_oth_struct_h.h_access_stamp,
															l_debug_info_ptr))		
					{
						

						EXEC SQL ROLLBACK;

						IS_ANY_ORA_ERROR

						APL_GOBACK_FAIL
					}
					strcpy(p_intlenv_data_struct_h->usr,"SYSTEM1");
					strcpy(l_dl_deal_oth_struct_h.h_clt_reqdel_flag,"N");
					strcpy(p_intlenv_data_struct_h->h_mode,APL_FUNC_AUTHORISE);
					if (APL_FAILURE == DL_Proc_TrdOth(&l_dl_deal_oth_struct_h,
																 p_intlenv_data_struct_h,
																 l_debug_info_ptr) )
					{
						fprintf(fl_userlog,"Failed to authorise the deletion of the dummy client.\n");
						

						EXEC SQL ROLLBACK;

						IS_ANY_ORA_ERROR

						APL_GOBACK_FAIL
					}
				}
		}
	} 
	else 
	{
		

		if (int_h_no_of_trd == 1)
		{
			

			strcpy(h_dl_client,(h_rep_seq_struct  +  0)->client); 
		}
		else
		{
			strcpy(h_dl_client, APL_NULL_STRING);
		}
		if (APL_FAILURE == MS_Chk_SWFTMsg(l_ms_inc_msg_struct_h,
														int_h_no_of_trd,
														h_dl_client,
														 chr_h_correct_msg,
														 l_debug_info_ptr) )
		{
			if ( APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr) )
			{
				fprintf(fl_userlog,"InValid Swift Message. Trade Already exists in the System.\n");
				APL_GOBACK_FAIL
			}
		}

		

		if (!strcmp(chr_h_correct_msg,"T"))
		{
			if (APL_FAILURE == MS_Proc_SWFDLAdd( int_h_no_of_trd,
													  &l_ms_inc_msg_struct_h,
													  &h_rep_seq_struct,
													  &h_inc_linkage_info,	
													  h_tot_quantity,
													  fl_userlog,
													  p_fl_userlog,
													  chr_fl_name,
													  fl_repairrpt,
													  p_mesg_body,
													  p_intlenv_data_struct_h,
													  l_debug_info_ptr
														) )
			{
				fprintf(fl_userlog,"Failed to Add Trade To the system\n");
				APL_GOBACK_FAIL		
			}	
		}
		else
		{
			fprintf(fl_userlog,"Message Rejected as Trade already present in table\n");
			strcpy(chr_g_msg_sts, "RJT"); 
			if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", "TRADE ALREADY EXISTS",chr_g_str_client, NULL) )
			{
				CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",
							NULL, NULL);
			}

			APL_GOBACK_FAIL
		}

	}
		APL_GOBACK_SUCCESS

		
     		RETURN_SUCCESS:
			APL_IF_DEBUG
			{
				CO_ProcMonitor(p_fl_userlog,"Exiting out of MS_Proc_IncMsg54x sucessfully\n",
							NULL, NULL);
	
			}
			EXEC SQL COMMIT;

			APL_FREE(l_progseqnum_struct_h);
			
      	return (APL_SUCCESS);

      	RETURN_FAILURE:
			APL_IF_DEBUG
			{
				CO_ProcMonitor(p_fl_userlog,
							"Exiting out of MS_Proc_IncMsg54x unsucessfully\n",
							NULL, NULL);
			}
			APL_FREE(l_progseqnum_struct_h);
			
      	return (APL_FAILURE);
}

int MS_Proc_IncMsg54xCanc( FILE							*fl_incmsg,
						char							*chr_fl_name,
						char							*p_msg_no,
						FILE							*fl_cancelrpt,
						FILE							*fl_rejectrpt,
						FILE							*fl_userlog,
						FILE							*p_fl_userlog,
						MS_59X_STRUCT_H				*p_ms_59x_struct_h,
						char							*p_details,
						MS_GEN_STRUCT_H            *p_ms_gen_struct_h,
						char							*p_mesg_body,
						INTL_ENV_DATA_STRUCT_H		*p_intlenv_data_struct_h,
						DEBUG_INFO_STRUCT_H				**l_debug_info_ptr)
{
char	chr_h_correct_msg[2]		= APL_NULL_STRING;
int	int_h_no_of_trd				= 0;
int	int_h_fail_reason			= 0;
DL_DEAL_OTH_STRUCT_H			l_dl_deal_oth_struct_h;
MS_59X_STRUCT_H					h_59x_struct;

	char                 chr_rep_str1[3]                    = APL_NULL_STRING;
   char                 chr_rep1_desc1[41]                 = APL_NULL_STRING;
   char                 chr_funcdesc1[61]                  = APL_NULL_STRING;
	char                 chr_rep_str2[3]                    = APL_NULL_STRING;
   char                 chr_rep1_desc2[41]                 = APL_NULL_STRING;
   char                 chr_funcdesc2[61]                  = APL_NULL_STRING;
	char						chr_h_upd_rep[2]						 = APL_NULL_STRING;	
	char						h_instr_code[APL_INSTRUMENTCODE_LEN]		 = APL_NULL_STRING;
	char						chr_h_tr_dt[APL_DATE_LEN]			 = APL_NULL_STRING;
	double					h_origamount = 0.0;
	double					h_origquantity = 0.0;	
	char						h_loccode[5]						 = APL_NULL_STRING;	
	char						chr_h_param_str[PARAM_STR_LEN]		 = APL_NULL_STRING;
	char						h_ora_rowid[APL_ROWID_LEN]			 = APL_NULL_STRING;
	char 						chr_fail_reason[3]						 = APL_NULL_STRING;	
	char 						h_info[APL_NOTE_LEN]				 = APL_NULL_STRING;
	char 						h_dl_client[APL_CLIENT_LENGTH]		 = APL_NULL_STRING;
	char 						h_indentity_no[APL_TXNREFNO_LEN]		 = APL_NULL_STRING;
	char 						chr_l_note_ctrade[APL_NOTE_LEN]	 = APL_NULL_STRING;
	short i_note_ctrade = 0;
	char chr_l_ent_char[3] = APL_NULL_STRING;

	memset(&l_dl_deal_oth_struct_h , NULL , sizeof(DL_DEAL_OTH_STRUCT_H) );
	memset(&h_59x_struct, NULL , sizeof(MS_59X_STRUCT_H) );
	memset(chr_h_param_str, APL_NULL_CHAR ,PARAM_STR_LEN);
	strcpy(chr_h_param_str,p_ms_gen_struct_h->h_596no1_data);
   EXEC SQL BEGIN DECLARE SECTION;
      EXEC SQL VAR h_info IS STRING;
      EXEC SQL VAR chr_l_note_ctrade IS STRING;
		EXEC SQL VAR h_dl_client IS STRING;
		EXEC SQL VAR h_indentity_no IS STRING;
   EXEC SQL END DECLARE SECTION;
	strncpy(h_info,p_details,261);

	   chr_l_ent_char[0]=putchar(13);
      chr_l_ent_char[1]=putchar(10);
      chr_l_ent_char[2]='\0';

   
           CO_FreeErrLst(l_debug_info_ptr);
              *l_debug_info_ptr = NULL;

		
		int_h_fail_reason = p_ms_gen_struct_h->h_failreason_cd;		
		h_59x_struct = *p_ms_59x_struct_h;
		if (int_h_fail_reason == 0)
		{
			if (APL_FAILURE == MS_Chk_IncMsgCancMsg(&h_59x_struct, &int_h_fail_reason, &l_dl_deal_oth_struct_h, h_ora_rowid, chr_h_upd_rep, &h_origquantity, &h_origamount,
													 chr_h_tr_dt, h_loccode, h_instr_code,	 fl_userlog, p_fl_userlog, p_intlenv_data_struct_h, l_debug_info_ptr) )			
			{
				fprintf(fl_userlog,"Failed to Validate Message\n");
				APL_GOBACK_FAIL
			}

		}
		
		

		if (	(int_h_fail_reason  == 0 ) 
			 ||(int_h_fail_reason  == 7 ) )
		{
			if (strcmp(chr_h_upd_rep	,"T")) 
			{
				fprintf(fl_userlog,"Trade With Reference Number :%s To Be Marked For Deletion\n",h_59x_struct.txn_indentity_no);

				strcpy(p_intlenv_data_struct_h->h_mode, APL_FUNC_DELETE);
				strcpy(p_intlenv_data_struct_h->usr,"SYSTEM");
				strcpy(p_intlenv_data_struct_h->subprocess, CUST_DEL_IND);
				strcpy(p_intlenv_data_struct_h->processtion, "Trade Cancel");
				strcpy(p_intlenv_data_struct_h->auth_req,"Y");
				strcpy(l_dl_deal_oth_struct_h.h_custinfo,h_59x_struct.can_swift_msg_no);

				

				
				if (APL_FAILURE == DL_Proc_TrdOth(&l_dl_deal_oth_struct_h, p_intlenv_data_struct_h, l_debug_info_ptr) )
				{
					
					if (APL_FAILURE == CO_ProcMonitor(fl_rejectrpt, "ERRORS WHILE DELETING TRADE", l_debug_info_ptr, NULL) )
					{
						fprintf(fl_userlog,"Failed To Write The Errors Returned While Generating Trade To Rejction report\n");
						APL_GOBACK_FAIL	
					}
					fprintf(fl_userlog,"Failed To Update The Trade\n");
					APL_GOBACK_FAIL
				}
			

					memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
					memset(h_indentity_no,APL_NULL_CHAR,APL_TXNREFNO_LEN);
					strcpy(h_dl_client,h_59x_struct.txn_clt);
					strcpy(h_indentity_no,h_59x_struct.txn_indentity_no);

					EXEC SQL SELECT rtrim(INFO1) into :chr_l_note_ctrade:i_note_ctrade
					FROM DL_DEAL
					WHERE CLIENT=:h_dl_client AND IDENTIY_NO=:h_indentity_no;

					IS_ANY_ORA_ERROR
					
					if (strlen(chr_l_note_ctrade) == 0)
					{
					strcpy(chr_l_note_ctrade,chr_l_ent_char);
					strcat(chr_l_note_ctrade,chr_l_ent_char);
					strcat(chr_l_note_ctrade,chr_l_ent_char);
					strcat(chr_l_note_ctrade,h_info);
					strcat(chr_l_note_ctrade,chr_l_ent_char);
					}
					else
					{
					strcat(chr_l_note_ctrade,h_info);
					strcat(chr_l_note_ctrade,chr_l_ent_char);
					}
					
 
					EXEC SQL UPDATE DL_DEAL 
					SET INFO1=:chr_l_note_ctrade
					WHERE CLIENT=:h_dl_client AND IDENTIY_NO=:h_indentity_no;

					IS_ANY_ORA_ERROR
			}	
			
			if (APL_FAILURE == MS_Proc_IncMsgTrdCancRpt( fl_cancelrpt, chr_fl_name,	h_59x_struct.txn_clt,	h_59x_struct.txn_indentity_no,	&h_origquantity, &h_origamount,
															  chr_h_tr_dt, h_instr_code, h_loccode, p_mesg_body, l_debug_info_ptr	) )
			{
				fprintf(fl_userlog,"Failed To Print The Trade cancellation Report\n");
				APL_GOBACK_FAIL	
			}					
			fprintf(fl_userlog,"Printed the Trade Cancellation Report \n");
			
         strcpy(chr_g_msg_sts,"STP");
         

			if ( APL_FAILURE == MS_Mod_IncMsgSts("STP", APL_NULL_STRING,chr_g_str_client, l_debug_info_ptr) )
			{
				CO_ProcMonitor(APL_OUT_FILE, "Failed to insert into IINMSGRP.\n", NULL, NULL);

				APL_GOBACK_FAIL
			}
		}
		else if (	(int_h_fail_reason ==	4 )
			 		|| (int_h_fail_reason == 6)
			 		|| (int_h_fail_reason == 8)
			 		|| (int_h_fail_reason == 9) 
			 		|| (int_h_fail_reason == 10) 
					|| (int_h_fail_reason == 20) )
		{
			
			
					
			
			fprintf(fl_userlog,"The Transaction Was not Found in Trade And  Repair \n");
			fprintf(fl_userlog,"About to Send a Minus 596 Message\n");

			

			if (int_h_fail_reason == 4)	
			{
				 sprintf(chr_fail_reason,"%d",int_h_fail_reason);
				 strcat(chr_h_param_str,chr_fail_reason);
				 strcat(chr_h_param_str,";");
				 strcat(chr_h_param_str,h_59x_struct.can_swift_msg_no);
				 strcat(chr_h_param_str,";");
				if (APL_FAILURE == GBDbInsIMSGENT("596N01", h_59x_struct.txn_indentity_no, h_59x_struct.txn_clt, 'Y', chr_h_param_str, l_debug_info_ptr) )
				{
					fprintf(fl_userlog,"Failed To Insert into IMSGENT table\n");
					APL_GOBACK_FAIL
				}
				fprintf(fl_userlog,"Sending a 596NO1 Message\n");
			}
			else
			{
				
				memset(chr_h_param_str, APL_NULL_CHAR ,PARAM_STR_LEN);
				fprintf(fl_userlog,"The Transaction Was Found in Trade or Repair\n");
				
				strcpy(chr_h_param_str,h_59x_struct.deal_cd);
				strcat(chr_h_param_str,";");
				sprintf(chr_fail_reason,"%d",int_h_fail_reason);
				strcat(chr_h_param_str,chr_fail_reason);
			   strcat(chr_h_param_str,";");
				strcat(chr_h_param_str,h_59x_struct.can_swift_msg_no);
				strcat(chr_h_param_str,";");
				if (APL_FAILURE == GBDbInsIMSGENT("596N02", h_59x_struct.txn_indentity_no, h_59x_struct.txn_clt, 'Y', chr_h_param_str, l_debug_info_ptr) )
				{
					fprintf(fl_userlog,"Failed To Insert into IMSGENT table\n");
					APL_GOBACK_FAIL
				}
				fprintf(fl_userlog,"Sending a Outgoing 596NO2 Message\n");
			}

			
			if (APL_FAILURE == MS_Proc_IncMsgRejRpt( fl_rejectrpt, chr_fl_name,	h_59x_struct.can_swift_msg_no, int_h_fail_reason, p_mesg_body, l_debug_info_ptr) )
			{
				fprintf(fl_userlog,"Failed To Print The REJECTION OF TRANSACTION REPORT \n");
				APL_GOBACK_FAIL
			}
			fprintf(fl_userlog,"Printed The Trade Rejection Report\n");

		}
		else if ( 	(int_h_fail_reason == 1 )
				  ||  (int_h_fail_reason == 2 )
				  ||	(int_h_fail_reason == 3)
				  ||	(int_h_fail_reason == 5)
				  ||	(int_h_fail_reason == 13)
				  ||  (int_h_fail_reason == 11)
				  ||	(int_h_fail_reason == 12)
				  ||	(int_h_fail_reason == 14)
				  ||	(int_h_fail_reason == 15)   
				  ||	(int_h_fail_reason == 16)  
				  ||	(int_h_fail_reason == 17)	  
				  || (int_h_fail_reason == 30)  )
		{
			

			fprintf(fl_userlog,"Message Rejected. See the Rejection Report for Reasons of Rejection.\n"); 

			if (APL_FAILURE == MS_Proc_IncMsgRejRpt( fl_rejectrpt, chr_fl_name,	h_59x_struct.can_swift_msg_no, int_h_fail_reason, p_mesg_body, l_debug_info_ptr) )
			{
				fprintf(fl_userlog,"Failed To Print The REJECTION OF TRANSACTION REPORT \n");
				APL_GOBACK_FAIL
			}
		}

		APL_GOBACK_SUCCESS

      RETURN_SUCCESS:
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting out of MS_Proc_IncMsg59x sucessfully\n",
						NULL, NULL);

		}
      return (APL_SUCCESS);
      RETURN_FAILURE:
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting out of MS_Proc_IncMsg59x unsucessfully\n",
						NULL, NULL);
		}
      return (APL_FAILURE);
}




int   MS_Rtv_CNameAcc(  char          *p_client_cname,
                              char          *chr_p_client,
                              int           *int_p_retstat,
                              DEBUG_INFO_STRUCT_H  **l_debug_info_ptr)
{
   

   EXEC SQL BEGIN DECLARE SECTION;
   char  chr_h_client_cname[70]=APL_NULL_STRING;
   char  chr_h_client_cname_1[70]=APL_NULL_STRING;
   char  h_dl_client[APL_CLIENT_LENGTH]=APL_NULL_STRING;
   short i_dl_client      = 0;



   EXEC SQL VAR chr_h_client_cname IS STRING;
   EXEC SQL VAR h_dl_client     IS STRING;
   EXEC SQL VAR chr_h_client_cname_1 IS STRING;

   struct   sqlca sqlca;

   EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      SQL CONTEXT USE :my_ctx_local;
   #endif
   memset(chr_h_client_cname, APL_NULL_CHAR, 70);
   memset(h_dl_client, APL_NULL_CHAR,APL_CLIENT_LENGTH );
   memset(chr_h_client_cname_1, APL_NULL_CHAR, 70);

        
   strncpy(chr_h_client_cname, p_client_cname,35);

   APL_IF_DEBUG
   {
   printf("the chr_h_client_cname is (%s)\n", chr_h_client_cname);
   }

if(CO_Trim(chr_h_client_cname,' ','R',chr_h_client_cname_1,l_debug_info_ptr)
                                             == APL_FAILURE)
         {
               APL_GOBACK_FAIL
         }


   EXEC SQL SELECT CLN_CODE
            INTO  :h_dl_client:i_dl_client
   FROM MT_CLIENT
	WHERE substr(CLN_NAME,1,35) =:chr_h_client_cname_1 and STATUS= 'AA';  

	

   

   if (APL_ZERO_RESULT_SET)
   {
      *int_p_retstat = IV_NO_DATA_FOUND_ERR;
      APL_GOBACK_FAIL
   }
	else if (sqlca.sqlcode == MORE_THAN_ONE_ROW)
   {
      *int_p_retstat = MORE_THAN_ONE_ROW;
      APL_GOBACK_FAIL
   }
   else if (sqlca.sqlcode < 0)
   {
      char chr_l_buffer[KEY_LENGTH];
      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);
      ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);
      *int_p_retstat = IV_CRITCAL_ERROR_IND;
      
		
		
	CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
			     APL_NULL_STRING, APL_NULL_STRING, __LINE__, __FILE__);
      APL_GOBACK_FAIL
   }
   strcpy(chr_p_client,h_dl_client);

   APL_GOBACK_SUCCESS

   
   RETURN_SUCCESS:
   APL_IF_DEBUG
   {
       CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of MS_Rtv_CNameAcc successfully\n",
                NULL, NULL);
   }
   return APL_SUCCESS;

   RETURN_FAILURE:
   APL_IF_DEBUG
   {
     CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of MS_Rtv_CNameAcc unsuccessfully\n",
             NULL, NULL);
   }
   return APL_FAILURE;
}




int   MS_Proc_SplitStr( char  *chr_p_str,
                   char *p_tag,
                   char *p_value,
                   DEBUG_INFO_STRUCT_H  **l_debug_info_ptr)
{


char  chr_h_str[ISO_FILERR_LINERR_LENGTH]     = APL_NULL_STRING;
char  h_msg_tag[4]                   = APL_NULL_STRING;
char  chr_h_value[ISO_LINERR_LENGTH]   = APL_NULL_STRING;
char  chr_h_temp[ISO_FILERR_LINERR_LENGTH]    = APL_NULL_STRING;
char  *a;
int int_num                          = 0;
int int_len                          = 0;
char  **temp;

a = (char *)calloc(ISO_FILERR_LINERR_LENGTH,sizeof(char));

memset(chr_h_str, APL_NULL_CHAR, ISO_FILERR_LINERR_LENGTH);
memset(h_msg_tag, APL_NULL_CHAR, 4 );
memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH );

strcpy(chr_h_str,chr_p_str);
APL_IF_DEBUG
{
   printf("the chr_h_str is %s\n",chr_h_str);
}

   if ( (chr_h_str[3] != ':') && (chr_h_str[4] != ':') )
   {
      APL_GOBACK_FAIL
   }

strcpy(h_msg_tag, strtok_r(chr_h_str, ":", &a));
strcpy(p_tag,h_msg_tag);
strcpy(chr_h_value, strtok_r(NULL, "\\", &a));
strcpy(chr_h_temp, chr_h_value);
APL_IF_DEBUG
{
   printf("the int_len is %d\n",strlen(chr_h_temp) );
}
int_len = strlen(chr_h_temp);
chr_h_temp[int_len - 1] = '\0';

APL_IF_DEBUG
{
   printf("The h_msg_tag is %s\n",h_msg_tag);
   printf("the chr_h_value is %s\n",chr_h_value);
}
strcpy(p_value,chr_h_value);

APL_GOBACK_SUCCESS;


      APL_GOBACK_SUCCESS
      RETURN_SUCCESS:

      return (APL_SUCCESS);

      RETURN_FAILURE:
      return (APL_FAILURE);
}









int   MS_Proc_IncMsg54SParse ( FILE                *fl_incmsg,
                      char                *chr_fl_name,
                      char                *p_msg_no,
                      char                *p_mesg_body,
                      MS_53X_STRUCT_H        *p_ms_54x_struct_h_a,
                      FILE                *fl_rejectrpt,
                      FILE                *fl_userlog,
                      FILE                *p_fl_userlog_a,
                      INTL_ENV_DATA_STRUCT_H  *p_intlenv_data_struct_h,
                      DEBUG_INFO_STRUCT_H        **l_debug_info_ptr)
{
extern int MS_Proc_IncMsg53xRejRpt(char                   *chr_p_client,
                      char                   *chr_p_refno,
                      char                   *p_instr_code,
                      double                 p_quantity,
                      char                   *p_rej_str,
                      char                   *chr_fl_name,
                      char                   *p_mesg_body,
                      FILE                   *fl_rejectrpt,
                      DEBUG_INFO_STRUCT_H           **l_debug_info_ptr);


      char           chr_h_value[ISO_LINERR_LENGTH]              = APL_NULL_STRING;
      char           chr_h_qualifier[ISO_LINERR_LENGTH]          = APL_NULL_STRING;
      char           h_code[ISO_LINERR_LENGTH]               = APL_NULL_STRING;
      char           h_msg_tag[4]                              = APL_NULL_STRING;
      char           chr_l_str4[ISO_LINERR_LENGTH]               = APL_NULL_STRING;
      char           chr_h_temp[ISO_LINERR_LENGTH]               = APL_NULL_STRING;
      int            int_l_link_start                          = 0;
      int            int_l_link_occur                          = 0;
      MS_53X_STRUCT_H   l_ms_53x_struct_ha;
   	short 			l_russia_flg                          =  0;
      char           chr_l_read_line                           = 'F';
		char           chr_l_str[ISO_LINERR_LENGTH]                = APL_NULL_STRING;

      int            int_l_genl_start                           = 0;
      int            int_l_traddet_start                        = 0;
      int            int_l_setdet_start                        = 0;
      int            int_l_fiac_start                           = 0;

      int            int_l_genl_occur                           = 0;
      int            int_l_traddet_occur                        = 0;
      int            int_l_setdet_occur                        = 0;
      int            int_l_fiac_occur                           = 0;
      char           chr_h_temp_settle_dt[9]                    = APL_NULL_STRING;
      char           chr_h_temp_trdt[9] 		                  = APL_NULL_STRING;
		char           h_setl_dt[APL_DATE_LEN]              = APL_NULL_STRING;
		char           h_dlt[APL_DATE_LEN]              = APL_NULL_STRING;
		char           chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]               = APL_NULL_STRING;
		char           h_instr_code[APL_INSTRUMENTCODE_LEN]               = APL_NULL_STRING;
		char           chr_l_isin[13]                             = APL_NULL_STRING;
		char  			chr_l_instr_name[ISO_LINERR_LENGTH]           		= APL_NULL_STRING;	
		int   			int_retstat                    				= 0;
      char  			h_qty[16]                           	= APL_NULL_STRING;
      char  			chr_h_new_qty[16]                    		= APL_NULL_STRING;
      char  			l_quantity[16]                           	= APL_NULL_STRING;
      char  			chr_l_trd_qty[16]                    		= APL_NULL_STRING;
      char           chr_l_typeofinstr[TYPEOF_INSTR_LEN]               = APL_NULL_STRING;
      double         l_nominal_value                               = 0.0;
      double         l_finquantity                               = 0.0;
      char           chr_l_substr_client[APL_CLIENT_LENGTH]      = APL_NULL_STRING;
      char           chr_l_new_client[APL_CLIENT_LENGTH]         = APL_NULL_STRING;
      char           chr_l_client_a[APL_CLIENT_LENGTH]             = APL_NULL_STRING;
		int 				i													= 0;
		int				j													= 0;
		int				int_lflag												= 0;
		int				int_l_flg_qty_found 								= 0;
      int 			   int_l_flg_rej 										= 0;
		int            int_l_slash_count                          = 0;
		int 				n													= 0;
		int 				a													= 0;
		int 				b													= 0; 
		int 				int_l_flg_newm										= 0;
		char  			chr_l_rej_str[100]                      	= APL_NULL_STRING;
		
		memset(&l_ms_53x_struct_ha, NULL ,sizeof(MS_53X_STRUCT_H) );
		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
		memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
		memset(chr_l_rej_str,APL_NULL_CHAR,100);
		memset(chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
		memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
		memset(chr_l_instr_name,APL_NULL_CHAR,ISO_LINERR_LENGTH);
		memset(chr_l_isin,APL_NULL_CHAR,13);
		memset(h_qty,APL_NULL_CHAR,16);
		memset(chr_h_new_qty,APL_NULL_CHAR,16);
		memset(chr_l_typeofinstr,APL_NULL_CHAR,TYPEOF_INSTR_LEN);
		memset(chr_l_new_client,APL_NULL_CHAR, APL_CLIENT_LENGTH );
		memset(l_quantity,APL_NULL_CHAR,16);
		memset(chr_l_trd_qty,APL_NULL_CHAR,16);
		memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);	
		memset(chr_h_temp,APL_NULL_CHAR,ISO_LINERR_LENGTH);	
		memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);	
		memset(chr_h_value,APL_NULL_CHAR,ISO_LINERR_LENGTH);	
		memset(chr_h_qualifier,APL_NULL_CHAR,ISO_LINERR_LENGTH);	
		memset(h_msg_tag,APL_NULL_CHAR,4);	
    
		strcpy(l_ms_53x_struct_ha.swift_msg_no, p_msg_no);
      while (!feof(fl_incmsg))
      {
       	if (chr_l_read_line == 'F')
         {
            memset(chr_l_str4,APL_NULL_CHAR,ISO_LINERR_LENGTH);
            
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
         }
         if (chr_l_str4[0] == '-')
         {
            fprintf(fl_userlog,"Encounterd End of  54x Message\n");
            break;
         }
         if (chr_l_str4[0] != ':')
         {
            continue;      
         }
         memset(chr_l_str, APL_NULL_CHAR , ISO_LINERR_LENGTH);
         memset(h_msg_tag, APL_NULL_CHAR , 4);
         memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
         memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
         memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
         if (APL_FAILURE == MS_Proc_SplitStr (chr_l_str4,
                                             h_msg_tag ,
                                             chr_h_value ,
                                             l_debug_info_ptr ))
         {
             fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
             strcpy(chr_g_msg_sts, "RJT");     
             if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                "MESSAGE LINE NOT IN PROPER FORMAT",
			   												  chr_g_str_client,
                                                (DEBUG_INFO_STRUCT_H **)NULL))
             {
                 CO_ProcMonitor(APL_OUT_FILE,
                          "Failed to insert into IINMSGRP.\n",
                           NULL, NULL);
             }
             APL_GOBACK_FAIL
         }

         APL_IF_DEBUG
         {
            printf("the h_msg_tag is %s\n",h_msg_tag);
            printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
         }

         chr_l_read_line = 'F';
         if (!strcmp(h_msg_tag,APL_NULL_STRING) )
         {
				fprintf(fl_userlog,"MESSAGE NOT IN PROPER FORMAT. MESSAGE REJECTED\n");
           	fprintf(fl_userlog,"Found End of Message\n");

           	strcpy(chr_g_msg_sts, "RJT");     

				if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, 
																  "MESSAGE CONTAINS EMPTY LINE",
																	chr_g_str_client, 
																	(DEBUG_INFO_STRUCT_H **)NULL) )
           	{
            	   CO_ProcMonitor(APL_OUT_FILE,
               	         "Failed to insert into IINMSGRP.\n", NULL, NULL);
               	APL_GOBACK_FAIL
           	}
          }

          strncpy(chr_h_qualifier,chr_h_value,5);
          if (!strcmp(h_msg_tag,MSG_BEGIN_TAG))
          {
				if (!strcmp(chr_h_qualifier,LINK_QUALIFIER))
            {
                    int_l_link_start=1;
                    int_l_link_occur++;
            }
				else if (!strcmp(chr_h_qualifier,MSG_QUAL_GENL))
            {
                     int_l_genl_start =1;
                     int_l_genl_occur++;
            }
            else if (!strcmp(chr_h_qualifier,TRADDET_MESSAGE_QUALIFIER))
            {
               int_l_traddet_start=1;
               int_l_traddet_occur++;
            }
            else if (!strcmp(chr_h_qualifier,MSG_QUAL_FIAC))
            {
               int_l_fiac_start=1;
               int_l_fiac_occur++;
            }
            else if (!strcmp(chr_h_qualifier,SETDET_QUALIFIER))
            {
               int_l_setdet_start=1;
               int_l_setdet_occur++;
            }
				continue;
			}
         if (!strcmp(h_msg_tag,END_TAG))
         {
				if (!strcmp(chr_h_qualifier,LINK_QUALIFIER))
            {
               int_l_link_start=0;
            }
            else if (!strcmp(chr_h_qualifier,MSG_QUAL_GENL))
            {
                int_l_genl_start =0;
            }
            else if (!strcmp(chr_h_qualifier,TRADDET_MESSAGE_QUALIFIER))
            {
               int_l_traddet_start=0;
            }
            else if (!strcmp(chr_h_qualifier,MSG_QUAL_FIAC))
            {
               int_l_fiac_start=0;
            }
            else if (!strcmp(chr_h_qualifier,SETDET_QUALIFIER))
            {
               int_l_setdet_start=0;
            }
				continue;
			}
			if((int_l_genl_start==1) && (int_l_genl_occur==1))
      	{
            if (!strcmp(chr_h_qualifier,NEWM_QUALIFIER))
            {
               int_l_flg_newm=1;
               strcpy(chr_g_msg_no,"54S");
            }
      	}


      	if((int_l_link_start ==1) && (int_l_link_occur==1))
			{
		  		if((!strcmp(h_msg_tag,I_REF_NO_98)) 
					&& (!strcmp(chr_h_qualifier,I_RELA_QUALIFIER_98)))
				{
                strcpy(chr_h_value,chr_h_value+7);
                memset(l_ms_53x_struct_ha.indentity_no, NULL, 17);
                strncpy(l_ms_53x_struct_ha.indentity_no,chr_h_value,16);
                continue;	
				}
			}

         if ((int_l_traddet_start==1)&& (int_l_traddet_occur==1))
         {
				
  				if (((!strcmp(h_msg_tag,I_INSTRU_DEAL_DTA_98))
               || (!strcmp(h_msg_tag,I_INSTRU_DEAL_DTC_98)))
               && (!strcmp(chr_h_qualifier,TRAD_MESSAGE_QUALIFIER)))
				{
                  strcpy(chr_h_value,chr_h_value+7);
                  memset(chr_h_temp_trdt,NULL,9);
						
                  memset(h_dlt,APL_NULL_CHAR,APL_DATE_LEN);
                  strncpy(chr_h_temp_trdt,chr_h_value,8);
                  chr_h_temp_trdt[8] ='\0';

                  if (APL_FAILURE == MS_Proc_DataFmtChg(chr_h_temp_trdt ,
                                                  h_dlt ,
                                                  l_debug_info_ptr ) )
                  {
                     fprintf(fl_userlog,"Failed To Decode Trade Date.\n");
                     APL_GOBACK_FAIL
                  }

                  memset(l_ms_53x_struct_ha.deal_date,NULL, APL_DATE_LEN); 
                  strcpy(l_ms_53x_struct_ha.deal_date,h_dlt);
						continue;
				}

  				if (((!strcmp(h_msg_tag,I_INSTRU_DEAL_DTA_98))
               || (!strcmp(h_msg_tag,I_INSTRU_DEAL_DTC_98)))
               && (!strcmp(chr_h_qualifier,SETT_QUALIFIER)))
				{
                  strcpy(chr_h_value,chr_h_value+7);
                  memset(chr_h_temp_settle_dt,NULL,9);
						
                  memset(h_setl_dt,APL_NULL_CHAR,APL_DATE_LEN);
                  strncpy(chr_h_temp_settle_dt,chr_h_value,8);
                  chr_h_temp_settle_dt[8] ='\0';

                  if (APL_FAILURE == MS_Proc_DataFmtChg(chr_h_temp_settle_dt ,
                                                  h_setl_dt ,
                                                  l_debug_info_ptr ) )
                  {
                     fprintf(fl_userlog,"Failed To Decode Settle Date.\n");
                     APL_GOBACK_FAIL
                  }

                  memset(l_ms_53x_struct_ha.setl_date,NULL, APL_DATE_LEN); 
                  strcpy(l_ms_53x_struct_ha.setl_date,h_setl_dt);
						continue;
				}

			}


         if((int_l_traddet_start==1) && (int_l_traddet_occur ==1))
         {
            if (!strcmp(h_msg_tag,I_INSTRU_DET_98)  )
            {
               memset(chr_l_instr_name, APL_NULL_CHAR, ISO_LINERR_LENGTH);
               strcpy(chr_l_instr_name,chr_h_value);
               
               memset(chr_l_instrcode_a,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
               memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
               strncpy(chr_l_instrcode_a,chr_l_instr_name,4);
               chr_l_instrcode_a[4] = APL_NULL_CHAR;
               if ( strncmp(chr_h_value,"INSTR_ISIN",4) != 0 )
               {
                   strcpy(chr_g_msg_sts,"RJT");
                   if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT", 
																		"NON ISIN FIELD",
																		chr_g_str_client, NULL) )
                   {
                      CO_ProcMonitor(APL_OUT_FILE, 
										 "Could not insert into IINMSGRP\n",
										  NULL, NULL);
                   }
                     memset(h_instr_code,APL_NULL_CHAR,13);
               }
               else
               {
                  memset(chr_l_isin,APL_NULL_CHAR,13);
                  for ( i = 0; i< 12 ; i ++ )
                     chr_l_isin[i] = chr_l_instr_name[ i + 5 ];

                  APL_IF_DEBUG
                  {
                     printf("the chr_l_isin is (%s) \n",chr_l_isin);
                  }
                  if (APL_FAILURE == IV_Rtv_InstrFromISIN(chr_l_isin, 
																				h_instr_code, 
																				&int_retstat, l_debug_info_ptr)   )
                  {
                     if (int_retstat == IV_CRITCAL_ERROR_IND)
                     {
                        fprintf(fl_userlog,
										  "Fatal Error Encountered in INSTRUMENT TABLE \n");
                     }
                     if (int_retstat == IV_NO_DATA_FOUND_ERR)
                     {
                        fprintf(fl_userlog,
										"Instrode does not exist in MT_INSTRUMENT table for specified ISIN \n");
                  	}
                   	strcpy(chr_g_msg_sts,"RJT");
                   	if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT",
                     	                                 "INSTRUMENT NOT FOUND",
                        	                              chr_g_str_client, NULL) )
                   	{
                     	 CO_ProcMonitor(APL_OUT_FILE,
                        	       "Could not insert into IINMSGRP\n",
                           	     NULL, NULL);
                   	}
                     memset(h_instr_code,APL_NULL_CHAR,13);
                }
					}
                  strcpy(l_ms_53x_struct_ha.instr_code,h_instr_code);
                  while(1)
                  {
                     memset(chr_l_str4, APL_NULL_CHAR , ISO_LINERR_LENGTH);
                     
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
                     if (chr_l_str4[0] == ':')
                     {
                        chr_l_read_line = 'T';
                        break;
                     }
                     else if (chr_l_str4[0] == '-')
                     {
                        chr_l_read_line = 'T';
                        break;
                     }
                     else
                     {
								chr_l_str4[34]=APL_NULL_CHAR;
								strcpy(l_ms_53x_struct_ha.instr_name ,chr_l_str4);
                        continue;
                     }

                  }

                  continue;
            } 
         }


         if((int_l_genl_start==1) && (int_l_genl_occur ==1))
         {
           if (  (!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,SEME_QUALIFIER)))
           {
                strcpy(chr_h_value,chr_h_value+7);
                memset(l_ms_53x_struct_ha.rel_indentity_no, NULL, 17);
                strncpy(l_ms_53x_struct_ha.rel_indentity_no,chr_h_value,16);
                continue;
           }
         }


         if((int_l_fiac_start==1) && (int_l_fiac_occur==1) )
         {
             
		
            if (( !strcmp(h_msg_tag,I_QTY_98)) && (!strcmp(chr_h_qualifier,MSG_QUAL_ESTT)))
            {
               
               memset(l_quantity,APL_NULL_CHAR,16);
               memset(chr_l_trd_qty,APL_NULL_CHAR,16);
               memset(h_qty,APL_NULL_CHAR,16);
               memset(chr_h_new_qty,APL_NULL_CHAR,16);
               memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
               l_finquantity=0.0;
               strncpy(h_code,chr_h_value+5,7);
               strcpy(h_qty, chr_h_value+12);

               
               if (APL_FAILURE == CO_Proc_RemoveDot(h_qty,chr_h_new_qty,l_debug_info_ptr) )
               {
                  fprintf(fl_userlog,"Failed To Remove The Decimal From The Quantity\n");
						strcpy(chr_g_msg_sts,"RJT");
                  APL_GOBACK_FAIL
               }
               
               fflush(stdout);
               if (APL_FAILURE == CO_Proc_ReplaceComma( chr_h_new_qty,chr_l_trd_qty,l_debug_info_ptr) )
               {
                  fprintf(fl_userlog,"Failed to Replace The Commas in Quantity\n");
						strcpy(chr_g_msg_sts,"RJT");
                  APL_GOBACK_FAIL
               }
               n = ( strlen(chr_l_trd_qty) - 1   );
               if (  chr_l_trd_qty[n] == '.')
                  strcat(chr_l_trd_qty,"00");
               fflush(stdout);

               if ( !strcmp(h_code,MS_CODE_FMT ) )
               {
                  if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_53x_struct_ha.instr_code, 
																	  "typeofinstr",
																		chr_l_typeofinstr, 
																		l_debug_info_ptr) )
                  {
                     printf("failed in CR_Rtv_InstrChrVal 12820 \n");
               fflush(stdout);
                     memset(chr_l_trd_qty,APL_NULL_CHAR,16);
							strcpy(chr_g_msg_sts,"RJT");
                  }
                  if ((!strcmp(chr_l_typeofinstr, TYPEOFINSTR_BOND)) || (!strcmp(chr_l_typeofinstr,TYPEOFINSTR_FMT)))
                  {
                     if ( APL_FAILURE == CR_Rtv_InstrNumVal(l_ms_53x_struct_ha.instr_code, 
																		  "nomval",
																		  &l_nominal_value, 
																		  l_debug_info_ptr) )
                     {
								strcpy(chr_g_msg_sts,"RJT");
                     }
                     sscanf(chr_l_trd_qty, "%lf", &l_finquantity);
                     l_finquantity /= l_nominal_value;
                     sprintf(chr_l_trd_qty, "%lf", l_finquantity);
							printf("l_finqty=(%lf)\n",l_finquantity);
                  }
						else if (!strcmp(chr_l_typeofinstr, TYPOF_INSTR_SHS))
						{
							memset(chr_l_trd_qty,APL_NULL_CHAR,16);
							strcpy(chr_g_msg_sts,"RJT");
						}
						
						
                }
                if (!strcmp(h_code,MS_CODE_SHSBON))
                {
                  if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_53x_struct_ha.instr_code, 
																	  "typeofinstr",
																		chr_l_typeofinstr, 
																		l_debug_info_ptr))
                  {
                     printf("failed in CR_Rtv_InstrChrVal 12854 \n");
               fflush(stdout);
                       memset(chr_l_trd_qty,APL_NULL_CHAR,16);
                  }
                  if  (!strcmp(chr_l_typeofinstr,TYPEOFINSTR_FMT))
                  {
                     printf("failed in CR_Rtv_InstrChrVal 12859 \n");
               fflush(stdout);
							memset(chr_l_trd_qty,APL_NULL_CHAR,16);
                  }
                }
                if ((!strcmp(h_code,MS_CODE_FMT)) || (!strcmp(h_code,MS_CODE_SHSBON)))
                {
                  if ( APL_FAILURE == CR_Rtv_InstrChrVal(l_ms_53x_struct_ha.instr_code, 
																		"typeofinstr",
																		chr_l_typeofinstr, 
																		l_debug_info_ptr))
                  {
                     printf("failed in CR_Rtv_InstrChrVal 12870 \n");
               fflush(stdout);
                     memset(chr_l_trd_qty,APL_NULL_CHAR,16);
                  }
						
                }
						if(strcmp(chr_l_trd_qty,APL_NULL_STRING)==0)
						{
							int_l_flg_qty_found = 0;
						}
						else
						{
                  	l_ms_53x_struct_ha.quantity=atof(chr_l_trd_qty);
							int_l_flg_qty_found = 1;
						}
                  continue;
            }
         }

         if((int_l_fiac_start==1) && (int_l_fiac_occur==1))
         {
            if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
						|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
					&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
            {
                memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                int_l_slash_count=0;
                a=0;
					 for(i=0;i<strlen(chr_h_value);i++)
                {
						
						

						 if (chr_h_value[i]=='/') 
						 {
							int_l_slash_count=int_l_slash_count+1;
							if( int_l_slash_count==1 )
								a=i;
							else if( int_l_slash_count==3 )
								b=i;
						 }
					 }
                 if (APL_FAILURE == CO_Chk_CntryEnabled(  "INCOMING_MSG",
                                                        "REMOVE_ZERO_VTBACC",
                                                        &l_russia_flg,
                                                          l_debug_info_ptr ))
                 {
                           APL_GOBACK_FAIL
                 }
                  if ((l_russia_flg) && (chr_h_value[a+2]=='0'))					
						{
                        j =0;
                        int_lflag =0;
                         
                        for ( i = a+2; i < b-1 ; i++ )
                        {
                           if ( chr_h_value[i+1] != '0' || int_lflag )
                              {
                                chr_l_client_a[j] = chr_h_value[i+1];
                                int_lflag = 1;
                                j++;
                              }
                        }
								chr_l_client_a[i] = APL_NULL_CHAR;
						}
						else
						{
							 
							strncpy(chr_l_client_a,chr_h_value+a+2,(b-a)-2 );
							chr_l_client_a[b-a-2] = APL_NULL_CHAR;
						}
						strcpy(l_ms_53x_struct_ha.vtb_client,chr_l_client_a);	
						continue; 
					}	
         }
			
         if((int_l_setdet_start==1) && (int_l_setdet_occur==1))
         {
      	  if (((!strcmp(h_msg_tag,I_DOMCPACCR_98)) ||(!strcmp(h_msg_tag,I_DOMCPACCQ_98)) ||(!strcmp(h_msg_tag,I_DOMCPACCS_98))
                || (!strcmp(h_msg_tag,I_DOMCPACCP_98))) && ((!strcmp(chr_h_qualifier,MSG_DEAG_QUAL))
                ||(!strcmp(chr_h_qualifier,REAG_QUALIFIER))))
			  {
	  			memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
				fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
				chr_l_str4[strlen(chr_l_str4)-1]='\0';
			   printf("l_str4=(%s)\n",chr_l_str4);
         	if (chr_l_str4[0] == '-')
         	{
            	fprintf(fl_userlog,"Encounterd End of  54x Message\n");
            	break;
         	}
         	if (chr_l_str4[0] != ':')
         	{
            	continue;      
         	}
         	memset(chr_l_str, APL_NULL_CHAR , ISO_LINERR_LENGTH);
         	memset(h_msg_tag, APL_NULL_CHAR , 4);
         	memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
         	memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
         	memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
         	if (APL_FAILURE == MS_Proc_SplitStr (chr_l_str4,
                                             	h_msg_tag ,
                                             	chr_h_value ,
                                             	l_debug_info_ptr ))
         	{
             	fprintf(fl_userlog,"Failed to Split the Message Line %s\n",chr_l_str4);
             	strcpy(chr_g_msg_sts, "RJT");     
             	if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                	"MESSAGE LINE NOT IN PROPER FORMAT",
			   												  	chr_g_str_client,
                                                	(DEBUG_INFO_STRUCT_H **)NULL))
             	{
                 	CO_ProcMonitor(APL_OUT_FILE,
                          "Failed to insert into IINMSGRP.\n",
                          	NULL, NULL);
             	}
             	APL_GOBACK_FAIL
         	}
			
					strncpy(chr_h_qualifier,chr_h_value,5);
						
            if (((!strcmp(h_msg_tag,I_CLIENTA_98)) || (!strcmp(h_msg_tag,I_CLIENTB_98))) && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
            {
                memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                int_l_slash_count=0;
                a=0;
					 for(i=0;i<strlen(chr_h_value);i++)
                {
						
						

						 if (chr_h_value[i]=='/') 
						 {
							int_l_slash_count=int_l_slash_count+1;
							if( int_l_slash_count==1 )
								a=i;
							else if( int_l_slash_count==3 )
								b=i;
						 }
					 }
                 if (APL_FAILURE == CO_Chk_CntryEnabled(  "INCOMING_MSG",
                                                        "REMOVE_ZERO_VTBACC",
                                                        &l_russia_flg,
                                                          l_debug_info_ptr ))
                 {
                           APL_GOBACK_FAIL
                 }
                  if ((l_russia_flg) && (chr_h_value[a+2]=='0'))					
						{
                        j =0;
                        int_lflag =0;
                         
                        for ( i = a+2; i < b-1 ; i++ )
                        {
                           if ( chr_h_value[i+1] != '0' || int_lflag )
                              {
                                chr_l_client_a[j] = chr_h_value[i+1];
                                int_lflag = 1;
                                j++;
                              }
                        }
								chr_l_client_a[i] = APL_NULL_CHAR;
						}
						else
						{
							 
							strncpy(chr_l_client_a,chr_h_value+a+2,(b-a)-2 );
							chr_l_client_a[b-a-2] = APL_NULL_CHAR;
						}
						strcpy(l_ms_53x_struct_ha.cp_clt,chr_l_client_a);	
						continue; 
					}	
					}	
         }
		}
      if (!strcmp(l_ms_53x_struct_ha.vtb_client,APL_NULL_STRING) )
      {
         strcpy(chr_l_rej_str,"CUSTOMER VTB ACCOUNT NOT FOUND IN MESSAGE");
         int_l_flg_rej = 1;
      }
      else if (!strcmp(l_ms_53x_struct_ha.indentity_no,APL_NULL_STRING) )
      {
         strcpy(chr_l_rej_str,"TRANSACTION REF NO. NOT FOUND IN MESSAGE");
         int_l_flg_rej = 1;
      }
      
      else if (int_l_flg_qty_found == 0 )
      {
         strcpy(chr_l_rej_str,"QUANTITY NOT FOUND IN THE MESSAGE");
         int_l_flg_rej = 1;
      }
		else if(int_l_flg_newm == 0)
		{
         strcpy(chr_l_rej_str,"FUNCTION OF MESSAGE IS INCORRECT");
         int_l_flg_rej = 1;
		}
      if (int_l_flg_rej == 1) 
      {
         fprintf(fl_userlog,chr_l_rej_str);
         fprintf(fl_userlog,"\n");
         fprintf(fl_userlog,"MESSAGE REJECTED\n");

      	   strcpy(chr_g_msg_sts, "RJT");
		
				
			strcat(chr_l_rej_str,APL_NULL_STRING);
			
         if (APL_FAILURE == MS_Proc_IncMsg53xRejRpt(NULL,
                                              NULL,
                                              NULL,
                                              NULL,
                                              chr_l_rej_str,
                                              chr_fl_name,
                                              p_mesg_body,
                                              fl_rejectrpt,
                                              l_debug_info_ptr) )
         {
            fprintf(fl_userlog,"Failed to Write to 54S Reject Report\n");
            APL_GOBACK_FAIL
         }


         APL_GOBACK_FAIL
      }
		*p_ms_54x_struct_h_a = l_ms_53x_struct_ha;
		      APL_GOBACK_SUCCESS

      RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE,
						"Exiting out of MS_Proc_IncMsg54SParse successfully\n",NULL,NULL);

      }
      return (APL_SUCCESS);

      RETURN_FAILURE:
      APL_IF_DEBUG
      {
        CO_ProcMonitor(APL_OUT_FILE,
						"Exiting out of MS_Proc_IncMsg54SParse unsucessfully\n",NULL,NULL);
      }
      return (APL_FAILURE);
}



int   MS_Proc_IncMsg536 ( FILE                *fl_incmsg,
                      char                *chr_fl_name,
                      char                *p_msg_no,
                      char                *p_mesg_body,
							 MS_536_STRUCT_H			*p_ms_536_struct_h,
                      FILE                *p_fl_536log,
							 int                *int_p_retstat,
                      INTL_ENV_DATA_STRUCT_H  *p_intlenv_data_struct_h,
                      DEBUG_INFO_STRUCT_H        **l_debug_info_ptr)
{
	char           chr_l_str4[ISO_FILERR_LINERR_LENGTH]          = APL_NULL_STRING;
	char           chr_l_str[ISO_FILERR_LINERR_LENGTH]           = APL_NULL_STRING;
	char           h_msg_tag[4]                              = APL_NULL_STRING;
   char           chr_h_value[ISO_LINERR_LENGTH]              = APL_NULL_STRING;
   char           chr_h_qualifier[ISO_LINERR_LENGTH]          = APL_NULL_STRING;
   char           chr_h_temp[ISO_LINERR_LENGTH]               = APL_NULL_STRING;
	char           chr_l_instr_name[ISO_FILERR_LINERR_LENGTH]       = APL_NULL_STRING;
	char           chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]              = APL_NULL_STRING;
	char           h_instr_code[APL_INSTRUMENTCODE_LEN]              = APL_NULL_STRING;
	char           chr_l_isin[13]                            = APL_NULL_STRING;
   char           chr_l_read_line_536                       = 'F';
   int 				i												  =  0	;
   int 				n												  =  0	;
   int 				a												  =  0	;
	int            int_retstat                                = 0;
	MS_536_STRUCT_H	l_ms_536_struct_h;
	char				chr_l_trrf_refno[17]								= APL_NULL_STRING;
	char				chr_l_trrf_refno_final[17]						= APL_NULL_STRING;
	int				int_l_trrf_len										= 0;
   char           l_quantity[16]                              = APL_NULL_STRING;
   char           chr_l_trd_qty[16]                          = APL_NULL_STRING;
   char           chr_h_new_qty[16]                          = APL_NULL_STRING;
   char           h_code[ISO_LINERR_LENGTH]               = APL_NULL_STRING;
   double         l_finquantity                               = 0.0;
   char           dbl_l_amount_a[16]                           = APL_NULL_STRING;
   char           chr_l_new_amount[16]                       = APL_NULL_STRING;
   char           l_nominal_value[16]                           = APL_NULL_STRING;
   char           chr_l_new_nomval[16]                       = APL_NULL_STRING;
   char  			h_qty[16]                           	= APL_NULL_STRING;
	char				h_dl_client[11]									= APL_NULL_STRING;
	char				chr_l_ccycode[4]									= APL_NULL_STRING;
	char				chr_h_paym[5]										= APL_NULL_STRING;
	char				chr_h_rede[5]										= APL_NULL_STRING;
	int 				int_l_slash_count									= 0;
	int				int_l_error_flg										= 0;
	char				chr_l_rej_str[151]									= APL_NULL_STRING;
	int				int_l_no_of_zeros									= 0;
	int				int_l_addr_found									= 0;
	int				int_l_tran_count									= 0;

	char				chr_l_mt536addr[21]								= APL_NULL_STRING;

	EXEC SQL VAR chr_l_mt536addr IS STRING;
	EXEC SQL VAR chr_l_trrf_refno IS STRING;
	EXEC SQL VAR chr_l_trrf_refno_final IS STRING;

	memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
	memset(chr_l_str,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
	memset(h_msg_tag,APL_NULL_CHAR,4);
	memset(chr_h_value,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_h_qualifier,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_h_temp,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_l_instr_name,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_l_instrcode_a,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
	memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
	memset(chr_l_isin,APL_NULL_CHAR,13);
   memset(&l_ms_536_struct_h,NULL,sizeof(MS_536_STRUCT_H) );
	memset(chr_l_trrf_refno,APL_NULL_CHAR,17);
	memset(l_quantity,APL_NULL_CHAR,16);
	memset(chr_l_trd_qty,APL_NULL_CHAR,16);
	memset(chr_h_new_qty,APL_NULL_CHAR,16);
	memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(h_qty,APL_NULL_CHAR,16);
	memset(h_dl_client,APL_NULL_CHAR,11);
	memset(chr_l_ccycode,APL_NULL_CHAR,4);
	memset(chr_l_rej_str,APL_NULL_CHAR,151);
	memset(chr_h_paym,APL_NULL_CHAR,5);
	memset(chr_h_rede,APL_NULL_CHAR,5);
	memset(chr_l_mt536addr,APL_NULL_CHAR,21);

         EXEC SQL SELECT FIELD_VAL
         INTO  :chr_l_mt536addr
         FROM PRO_GSSPLVAL
         WHERE MAIN_FUN='INCOMING_MSG'
         AND   SUB_PROCESS='MT536_ADDR'
         AND NATION=:g_mt_commonsys_params_struct_h.nation_code;	

   fprintf(p_fl_536log,"Inside MS_Proc_IncMsg536\n");

	while (!feof(fl_incmsg))
	{
	  if(chr_l_read_line_536=='F')
	  {
	  		memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
     		fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
     		chr_l_str4[strlen(chr_l_str4)-1]='\0';
    	 	printf("********chr_l_str4 is |%s|******\n",chr_l_str4);
     		if (chr_l_str4[0] != ':')
     		{
				if(strstr(chr_l_str4,chr_l_mt536addr)!=0)
					int_l_addr_found=1;
     			continue;      
     		}
			if(chr_l_str4[0]==':')
			{
				if(int_l_addr_found==0)
				{
       			if ( APL_FAILURE == MS_Prnt_Msg563SetlRpt(&l_ms_536_struct_h,
               			                            APL_NULL_STRING,
                        			                   APL_NULL_STRING,
                                 			          "DPE",
                                          			"ADDRESS BNGRGRAASSS NOT FOUND IN HEADER",
																  	1,
                                           			int_retstat,
                                          			(DEBUG_INFO_STRUCT_H **)NULL))
        			{
            		CO_ProcMonitor(APL_OUT_FILE,
                  		   "Failed to insert into ISETLRPT.\n",
                     		NULL, NULL);
        			}
        			*int_p_retstat = IV_CRITCAL_ERROR_IND;
        			APL_GOBACK_FAIL

				}
			}
	   }
	  chr_l_read_line_536='F';
     memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
     memset(h_msg_tag, APL_NULL_CHAR , 4);
     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
     memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
     memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
     if (APL_FAILURE == MS_Proc_SplitStr (chr_l_str4,
                                         h_msg_tag ,
                                         chr_h_value ,
                                         l_debug_info_ptr ))
     {
        fprintf(p_fl_536log,"Failed to Split the Message Line %s\n",chr_l_str4);
        strcpy(chr_g_msg_sts, "RJT");     
        if ( APL_FAILURE == MS_Prnt_Msg563SetlRpt(&l_ms_536_struct_h,
														 APL_NULL_STRING,
														 APL_NULL_STRING,
														 "DPE",
                                           "MESSAGE LINE NOT IN PROPER FORMAT",
													    int_l_tran_count,
														 int_retstat,
                                          (DEBUG_INFO_STRUCT_H **)NULL))
        {
            CO_ProcMonitor(APL_OUT_FILE,
                     "Failed to insert into ISETLRPT.\n",
                     NULL, NULL);
        }
        *int_p_retstat = IV_CRITCAL_ERROR_IND;
        APL_GOBACK_FAIL
     }

     APL_IF_DEBUG
     {
        printf("the h_msg_tag is %s\n",h_msg_tag);
        printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
     }
	
	  strncpy(chr_h_qualifier,chr_h_value,5);

         if (  (!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,I_TRRF_QUALIFIER_98)))
         {
             strcpy(chr_h_value,chr_h_value+7);
             memset(l_ms_536_struct_h.deal_rf_ident_no, APL_NULL_CHAR, 17);
             strncpy(l_ms_536_struct_h.deal_rf_ident_no,chr_h_value,16);
				 int_l_trrf_len=strlen(l_ms_536_struct_h.deal_rf_ident_no);
				 if(int_l_trrf_len<6)
				 {
					int_l_no_of_zeros= 6-int_l_trrf_len;
             	memset(chr_l_trrf_refno_final,APL_NULL_CHAR,17);
					while(int_l_no_of_zeros!=0)
					{
						if(strcmp(chr_l_trrf_refno_final,APL_NULL_STRING)==0)
							strcpy(chr_l_trrf_refno_final,"0");
						else
							strcat(chr_l_trrf_refno_final,"0");
						int_l_no_of_zeros--;
					}
					strcat(chr_l_trrf_refno_final,l_ms_536_struct_h.deal_rf_ident_no);
				   l_ms_536_struct_h.deal_rf_ident_no[6]=APL_NULL_CHAR;	
				 }
				 else
				 {
					strcpy(chr_l_trrf_refno_final,l_ms_536_struct_h.deal_rf_ident_no);
				 }
             memset(chr_l_trrf_refno,APL_NULL_CHAR,17);
             EXEC SQL SELECT UPPER(:chr_l_trrf_refno_final) into :chr_l_trrf_refno from dual;
             IS_ANY_ORA_ERROR
             memset(l_ms_536_struct_h.deal_rf_ident_no,APL_NULL_CHAR,17);
             strcpy(l_ms_536_struct_h.deal_rf_ident_no,chr_l_trrf_refno);
             continue;
         }
			else if ((!strcmp(h_msg_tag,I_QTY_98)) && (!strcmp(chr_h_qualifier,PSTA_QUALIFIER)))
			{
              
              memset(l_quantity,APL_NULL_CHAR,16);
              memset(chr_l_trd_qty,APL_NULL_CHAR,16);
              memset(h_qty,APL_NULL_CHAR,16);
              memset(chr_h_new_qty,APL_NULL_CHAR,16);
              memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
              l_finquantity=0.0;
              strncpy(h_code,chr_h_value+5,7);
              strcpy(h_qty, chr_h_value+12);

              
              if (APL_FAILURE == CO_Proc_RemoveDot(h_qty,chr_h_new_qty,l_debug_info_ptr) )
              {
                 fprintf(p_fl_536log,"Failed To Remove The Decimal From The Quantity\n");
					  l_ms_536_struct_h.quantity=0.0;
					  continue;
              }
              
              if (APL_FAILURE == CO_Proc_ReplaceComma( chr_h_new_qty,chr_l_trd_qty,l_debug_info_ptr) )
              {
                 fprintf(p_fl_536log,"Failed to Replace The Commas in Quantity\n");
					  l_ms_536_struct_h.quantity=0.0;
					  continue;
              }
              n = ( strlen(chr_l_trd_qty) - 1   );
              if (  chr_l_trd_qty[n] == '.')
                 strcat(chr_l_trd_qty,"00");
				  l_ms_536_struct_h.quantity=atof(chr_l_trd_qty);
              continue;
         }
			else if ((!strcmp(h_msg_tag,I_AMOUNT_CCY_98)) && (!strcmp(chr_h_qualifier,PSTA_QUALIFIER)))
			{
               strcpy(chr_h_value,chr_h_value+7);
               memset(dbl_l_amount_a,APL_NULL_CHAR,16);
               memset(chr_l_new_amount,APL_NULL_CHAR,16);
               memset(chr_l_ccycode,APL_NULL_CHAR,4);
						
               

					strncpy(chr_l_ccycode,chr_h_value,3);
					chr_l_ccycode[3]=APL_NULL_CHAR;

               for ( i = 0; i < 15 ; i++)
               {
                  dbl_l_amount_a[i] = chr_h_value[ i + 3 ];
               }
               dbl_l_amount_a[15] = APL_NULL_CHAR;

               

               if (APL_FAILURE == CO_Proc_RemoveDot(dbl_l_amount_a, chr_l_new_amount, l_debug_info_ptr) )
               {
                  fprintf(p_fl_536log,"Failed To Remove The Decimal From The Amount\n");
						l_ms_536_struct_h.amount = 0.0;
						continue;
               }

               

               if (APL_FAILURE == CO_Proc_ReplaceComma( chr_l_new_amount, dbl_l_amount_a, l_debug_info_ptr) )
               {
                  fprintf(p_fl_536log,"Failed to Replace The Commas in Amount\n");
						l_ms_536_struct_h.amount = 0.0;
						continue;
               }               
					l_ms_536_struct_h.amount = atof(dbl_l_amount_a);
					strcpy(l_ms_536_struct_h.currency_cd,chr_l_ccycode);
			}
	  		else if(strcmp(h_msg_tag,I_INSTRU_DET_98)==0)
	  		{	 
         	memset(chr_l_instr_name, APL_NULL_CHAR, ISO_LINERR_LENGTH);
         	strcpy(chr_l_instr_name,chr_h_value);
         	memset(chr_l_instrcode_a,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
         	memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
         	strncpy(chr_l_instrcode_a,chr_l_instr_name,4);
         	chr_l_instrcode_a[4] = APL_NULL_CHAR;

	         if ( strncmp(chr_h_value,"INSTR_ISIN",4) != 0 )
   	      {
                  fprintf(p_fl_536log,"NON ISIN FIELD \n");
         			memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
         	}
         	else
         	{
            	memset(chr_l_isin,APL_NULL_CHAR,13);
            	for ( i = 0; i< 12 ; i ++ )
               	chr_l_isin[i] = chr_l_instr_name[ i + 5 ];

	            APL_IF_DEBUG
   	         {
      	         printf("the chr_l_isin is (%s) \n",chr_l_isin);
         	   }
            	if (APL_FAILURE == IV_Rtv_InstrFromISIN(chr_l_isin, 
																			h_instr_code, 
																			&int_retstat, 
																			l_debug_info_ptr))
            	{
               	if (int_retstat == IV_CRITCAL_ERROR_IND)
               	{
                  	fprintf(p_fl_536log,"Fatal Error Encountered in INSTRUMENT TABLE \n");
                  	*int_p_retstat = IV_CRITCAL_ERROR_IND;
                  	APL_GOBACK_FAIL
               	}
               	if (int_retstat == IV_NO_DATA_FOUND_ERR)
               	{
                  	fprintf(p_fl_536log,"Instrode does not exist in MT_INSTRUMENT table for specified ISIN \n");
               	}
         			memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
             	}
					strcpy(l_ms_536_struct_h.instr_code,h_instr_code);
          	}

          continue;
       }     
		 else if(((!strcmp(h_msg_tag,I_INDICATORH_98)) || (!strcmp(h_msg_tag,I_INDICATOR_98))) && ((!strcmp(chr_h_qualifier,I_IND_REDE)) || (!strcmp(chr_h_qualifier,I_IND_PAYM))))
		 {
					if(strcmp(h_msg_tag,I_INDICATOR_98)==0)
					{
                  int_l_slash_count=0;
                  a=0;
                  for(i=0;i<strlen(chr_h_value);i++)
                  {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
                  }
     					memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
						strncpy(chr_h_temp,chr_h_value+a+1,4);
						chr_h_temp[4] = APL_NULL_CHAR;

					}
					if(strcmp(chr_h_qualifier,I_IND_REDE)==0)
					{
						if (strcmp(h_msg_tag,I_INDICATOR_98)==0)		
						strcpy(chr_h_rede,chr_h_temp);
					else
						strncpy(chr_h_rede,chr_h_value+7,4);
					}
					
					if(strcmp(chr_h_qualifier,I_IND_PAYM)==0)
					{
						if (strcmp(h_msg_tag,I_INDICATOR_98)==0)		
						strcpy(chr_h_paym,chr_h_temp);
					else
						strncpy(chr_h_paym,chr_h_value+7,4);
					}
			 continue;
		 }
		 else if((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,TRAN_MESSAGE_QUALIFIER)))
		 {
				int_l_tran_count++;
				int_l_error_flg=0;
				if((strcmp(chr_h_rede,"RECE")==0) && (strcmp(chr_h_paym,"FREE")==0))
					strcpy(l_ms_536_struct_h.deal_cd,"2");
				else if((strcmp(chr_h_rede,"RECE")==0) && (strcmp(chr_h_paym,"APMT")==0))
					strcpy(l_ms_536_struct_h.deal_cd,"4");
				else if((strcmp(chr_h_rede,"DELI")==0) && (strcmp(chr_h_paym,"FREE")==0))
					strcpy(l_ms_536_struct_h.deal_cd,"1");
				else if((strcmp(chr_h_rede,"DELI")==0) && (strcmp(chr_h_paym,"APMT")==0))
					strcpy(l_ms_536_struct_h.deal_cd,"3");
				else
					strcpy(l_ms_536_struct_h.deal_cd,APL_NULL_STRING);

			 	memset(chr_h_paym,APL_NULL_CHAR,5);
			 	memset(chr_h_rede,APL_NULL_CHAR,5);

            if(strcmp(l_ms_536_struct_h.deal_rf_ident_no,APL_NULL_STRING)==0)
            {
               if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               {
                  strcpy(chr_l_rej_str,"Bog Refno(TRRF) ");
               }
               else
               {
                  strcat(chr_l_rej_str,", Bog Refno(TRRF) ");
               }
               int_l_error_flg=1;
            }

            if(strcmp(l_ms_536_struct_h.instr_code,APL_NULL_STRING)==0)
            {
               if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               {
                  strcpy(chr_l_rej_str,"ISIN ");
               }
               else
               {
                  strcat(chr_l_rej_str,", ISIN ");
               }
               int_l_error_flg=1;
            }
            if(strcmp(l_ms_536_struct_h.deal_cd,APL_NULL_STRING)==0)
            {
              if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               {
                  strcpy(chr_l_rej_str,"TRCODE ");
               }
               else
               {
                  strcat(chr_l_rej_str,", TRCODE ");
               }
               int_l_error_flg=1;
            }
            if((l_ms_536_struct_h.deal_cd[0]=='3') || (l_ms_536_struct_h.deal_cd[0]=='4'))
            {
               if (l_ms_536_struct_h.amount==0)
               {
                 	if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
                 	{
                  	  strcpy(chr_l_rej_str,"AMOUNT ");
                 	}
                 	else
                 	{
                  	  strcat(chr_l_rej_str,", AMOUNT ");
                 	}
               	int_l_error_flg=1;
               }
               if(strcmp(l_ms_536_struct_h.currency_cd,APL_NULL_STRING)==0)
               {
               	if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               	{
                  	strcpy(chr_l_rej_str,"CURRENCY ");
               	}
               	else
               	{
                  	strcat(chr_l_rej_str,", CURRENCY ");
               	}
               	int_l_error_flg=1;
               }
            }
            if(l_ms_536_struct_h.quantity==0)
            {
               if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               {
                  strcpy(chr_l_rej_str,"QTY ");
               }
               else
               {
                   strcat(chr_l_rej_str,", QTY ");
               }
               int_l_error_flg=1;
            }
            if(int_l_error_flg==0)
            {

              if ( APL_FAILURE == MS_Prnt_Msg563SetlRpt(&l_ms_536_struct_h,
                                                  APL_NULL_STRING,
                                                  APL_NULL_STRING,
                                                  "STL",
                                                  "READY FOR SETTLEMENT",
																  int_l_tran_count,
                                                  int_retstat,
                                                  (DEBUG_INFO_STRUCT_H **)NULL))
               {
                  CO_ProcMonitor(APL_OUT_FILE,
                           "Failed to insert into ISETLRPT.\n",
                           NULL, NULL);
               	*int_p_retstat = IV_CRITCAL_ERROR_IND;
               	APL_GOBACK_FAIL
               }

            }
            if(int_l_error_flg==1)
            {

			     if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
              {
                  strcpy(chr_l_rej_str,"Error in Message Values ");
              }
              else
              {
                  strcat(chr_l_rej_str," Not Found ");
              }	
              if ( APL_FAILURE == MS_Prnt_Msg563SetlRpt(&l_ms_536_struct_h,
                                                  APL_NULL_STRING,
                                                  APL_NULL_STRING,
                                                  "DPE",
                                                  chr_l_rej_str,
																  int_l_tran_count,
                                                  int_retstat,
                                                  (DEBUG_INFO_STRUCT_H **)NULL))
               {
                  CO_ProcMonitor(APL_OUT_FILE,
                           "Failed to insert into ISETLRPT.\n",
                           NULL, NULL);
               	*int_p_retstat = IV_CRITCAL_ERROR_IND;
               	APL_GOBACK_FAIL
               }

            }
   				memset(&l_ms_536_struct_h,NULL,sizeof(MS_536_STRUCT_H) );
					strcpy(l_ms_536_struct_h.instr_code,h_instr_code);
					memset(chr_l_rej_str,APL_NULL_CHAR,151);
		 }
		 else
			continue;
    }
		
   
   RETURN_SUCCESS:
   {
          APL_IF_DEBUG
          {
            CO_ProcMonitor(p_fl_536log,"Exiting out of MS_Proc_IncMsg536 successfully\n", 
											 NULL, 
											 NULL);
          }
          return (APL_SUCCESS);
   }

   RETURN_FAILURE:
   {
          APL_IF_DEBUG
          {
           CO_ProcMonitor(p_fl_536log,"Exiting out of MS_Proc_IncMsg536 unsuccessfully\n", 
											NULL, 
											NULL);
          }
          return (APL_FAILURE);
   }
}



int   MS_Proc_IncMsg537 ( FILE                *fl_incmsg,
                      char                *chr_fl_name,
                      char                *p_msg_no,
                      char                *p_mesg_body,
							 MS_537_STRUCT_H			*p_ms_537_struct_h,
                      FILE                *p_fl_536log,
							 int                *int_p_retstat,
                      INTL_ENV_DATA_STRUCT_H  *p_intlenv_data_struct_h,
                      DEBUG_INFO_STRUCT_H        **l_debug_info_ptr)
{
	char           chr_l_str4[ISO_FILERR_LINERR_LENGTH]          = APL_NULL_STRING;
	char           chr_l_str5[ISO_FILERR_LINERR_LENGTH]          = APL_NULL_STRING;
	char           chr_l_str6[ISO_FILERR_LINERR_LENGTH]          = APL_NULL_STRING;
	char           chr_l_str7[ISO_FILERR_LINERR_LENGTH]          = APL_NULL_STRING;
	char           chr_l_str[ISO_FILERR_LINERR_LENGTH]           = APL_NULL_STRING;
	char           h_msg_tag[4]                              = APL_NULL_STRING;
   char           chr_h_value[ISO_LINERR_LENGTH]              = APL_NULL_STRING;
   char           chr_h_qualifier[ISO_LINERR_LENGTH]          = APL_NULL_STRING;
   char           chr_h_temp[ISO_LINERR_LENGTH]               = APL_NULL_STRING;
	char           chr_l_instr_name[ISO_FILERR_LINERR_LENGTH]       = APL_NULL_STRING;
	char           chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]              = APL_NULL_STRING;
	char           h_instr_code[APL_INSTRUMENTCODE_LEN]              = APL_NULL_STRING;
   char           chr_h_temp_settle_dt[9]                   = APL_NULL_STRING;
   char           h_setl_dt[APL_DATE_LEN]             = APL_NULL_STRING;
	char           chr_h_temp_trade_dt[9]                    = APL_NULL_STRING;
	char           chr_h_tr_dt[APL_DATE_LEN]                 = APL_NULL_STRING;
	char           chr_l_isin[13]                            = APL_NULL_STRING;
   char           chr_l_read_line_537                       = 'F';
   int 				i												  =  0	;
   int 				n												  =  0	;
   int 				a												  =  0	;
	int				b													= 0;
	int				j													= 0;
	short				l_russia_flg									= 0;
	int				int_lflag											= 0;
	int            int_retstat                                = 0;
	MS_537_STRUCT_H	l_ms_537_struct_h;
	char				chr_l_trrf_refno[17]								= APL_NULL_STRING;
	char				chr_l_trrf_refno_final[17]						= APL_NULL_STRING;
   char           l_quantity[16]                              = APL_NULL_STRING;
   char           chr_l_trd_qty[16]                          = APL_NULL_STRING;
   char           chr_h_new_qty[16]                          = APL_NULL_STRING;
   char           h_code[ISO_LINERR_LENGTH]               = APL_NULL_STRING;
   double         l_finquantity                               = 0.0;
   char           dbl_l_amount_a[16]                           = APL_NULL_STRING;
   char           chr_l_new_amount[16]                       = APL_NULL_STRING;
   char           l_nominal_value[16]                           = APL_NULL_STRING;
   char           chr_l_new_nomval[16]                       = APL_NULL_STRING;
   char  			h_qty[16]                           	= APL_NULL_STRING;
	char				h_dl_client[11]									= APL_NULL_STRING;
	char				chr_l_ccycode[4]									= APL_NULL_STRING;
	char				chr_h_paym[5]										= APL_NULL_STRING;
	char				chr_h_rede[5]										= APL_NULL_STRING;
	int 				int_l_slash_count									= 0;
	int				int_l_error_flg										= 0;
	char				chr_l_rej_str[151]									= APL_NULL_STRING;
	int				int_l_no_of_zeros									= 0;
	int				int_l_addr_found									= 0;
	int				int_l_tran_count									= 0;

	char				chr_h_depolocation[5]								= APL_NULL_STRING;
	char				chr_h_unique_refcheck[2]							= APL_NULL_STRING;
	char				chr_h_proc_537[2]									= APL_NULL_STRING;
	char				chr_h_proc_548[2]									= APL_NULL_STRING;

	char				chr_h_statusqual[5]								= APL_NULL_STRING;
	char				chr_h_statuscode[5]								= APL_NULL_STRING;

	char				chr_h_statusqual1[5]								= APL_NULL_STRING;
	char				chr_h_statuscode1[5]								= APL_NULL_STRING;
	char				chr_h_reascode1[5]									= APL_NULL_STRING;
	char				chr_h_reasnote1[36]								= APL_NULL_STRING;

	char				chr_h_statusqual2[5]								= APL_NULL_STRING;
	char				chr_h_statuscode2[5]								= APL_NULL_STRING;
	char				chr_h_reascode2[5]									= APL_NULL_STRING;
	char				chr_h_reasnote2[36]								= APL_NULL_STRING;

	char				chr_h_statusqual3[5]								= APL_NULL_STRING;
	char				chr_h_statuscode3[5]								= APL_NULL_STRING;
	char				chr_h_reascode3[5]									= APL_NULL_STRING;
	char				chr_h_reasnote3[36]								= APL_NULL_STRING;

	int				int_h_count_fail									=0;

	char				int_l_domcpac[APL_CLIENT_LENGTH]					= APL_NULL_STRING;
	char				chr_l_domcpac_cname[66]							= APL_NULL_STRING;
	char				chr_l_client_a[APL_CLIENT_LENGTH]					= APL_NULL_STRING;
	char				chr_l_new_client[APL_CLIENT_LENGTH]			= APL_NULL_STRING;
	char				chr_l_substr_client[APL_CLIENT_LENGTH]		= APL_NULL_STRING;
	char				chr_l_cname[66]										= APL_NULL_STRING;
	char				chr_l_bic_code[13]									= APL_NULL_STRING;
	int				int_no_of_blanks									=0;
	int				int_l_count											=0;
	short				int_l_exist_a											=0;
	short				l_exists_trddet								=0;

	EXEC SQL VAR chr_l_trrf_refno IS STRING;
	EXEC SQL VAR chr_l_trrf_refno_final IS STRING;
	EXEC SQL VAR l_ms_537_struct_h.val_unique_identity IS STRING;
	EXEC SQL VAR chr_h_unique_refcheck IS STRING;
	
	memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
	memset(chr_l_str5,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
	memset(chr_l_str6,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
	memset(chr_l_str7,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
	memset(chr_l_str,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
	memset(h_msg_tag,APL_NULL_CHAR,4);
	memset(chr_h_value,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_h_qualifier,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_h_temp,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_l_instr_name,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(chr_l_instrcode_a,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
	memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
	memset(chr_l_isin,APL_NULL_CHAR,13);
   memset(&l_ms_537_struct_h,NULL,sizeof(MS_537_STRUCT_H) );
	memset(chr_l_trrf_refno,APL_NULL_CHAR,17);
	memset(l_quantity,APL_NULL_CHAR,16);
	memset(chr_l_trd_qty,APL_NULL_CHAR,16);
	memset(chr_h_new_qty,APL_NULL_CHAR,16);
	memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
	memset(h_qty,APL_NULL_CHAR,16);
	memset(h_dl_client,APL_NULL_CHAR,11);
	memset(chr_l_ccycode,APL_NULL_CHAR,4);
	memset(chr_l_rej_str,APL_NULL_CHAR,151);
	memset(chr_h_paym,APL_NULL_CHAR,5);
	memset(chr_h_rede,APL_NULL_CHAR,5);
	memset(chr_h_depolocation,APL_NULL_CHAR,5);
	memset(chr_h_proc_537,APL_NULL_CHAR,2);
	memset(chr_h_proc_548,APL_NULL_CHAR,2);
	memset(chr_h_unique_refcheck,APL_NULL_CHAR,2);

	memset(int_l_domcpac,APL_NULL_CHAR,11);
	memset(chr_l_domcpac_cname,APL_NULL_CHAR,66);
	memset(chr_l_client_a,APL_NULL_CHAR,11);
	memset(chr_l_new_client,APL_NULL_CHAR,11);
	memset(chr_l_substr_client,APL_NULL_CHAR,11);
	memset(chr_l_cname,APL_NULL_CHAR,66);

	memset(chr_h_statusqual1,APL_NULL_CHAR,5);
	memset(chr_h_statuscode1,APL_NULL_CHAR,5);
	memset(chr_h_reascode1,APL_NULL_CHAR,5);
	memset(chr_h_reasnote1,APL_NULL_CHAR,36);
	memset(chr_h_statusqual2,APL_NULL_CHAR,5);
	memset(chr_h_statuscode2,APL_NULL_CHAR,5);
	memset(chr_h_reascode2,APL_NULL_CHAR,5);
	memset(chr_h_reasnote2,APL_NULL_CHAR,36);
	memset(chr_h_statusqual3,APL_NULL_CHAR,5);
	memset(chr_h_statuscode3,APL_NULL_CHAR,5);
	memset(chr_h_reascode3,APL_NULL_CHAR,5);
	memset(chr_h_reasnote3,APL_NULL_CHAR,36);

   fprintf(p_fl_536log,"Inside MS_Proc_IncMsg537\n");

	while (!feof(fl_incmsg))
	{
	  memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
     chr_l_str4[strlen(chr_l_str4)-1]='\0';
    	printf("********chr_l_str4 is |%s|******\n",chr_l_str4);
		
	  if(chr_l_read_line_537=='F')
	  {

			
	  			memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
     			fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
	  			memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
     			fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
	  			memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
     			fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
			if (chr_l_str4 != NULL)
			{
     			chr_l_str4[strlen(chr_l_str4)-1]='\0';
    	 		printf("********chr_l_str4 is |%s|******\n",chr_l_str4);
     			if (chr_l_str4[0] != ':')
     			{
					EXEC SQL SELECT SUB_PROCESS into :chr_h_depolocation FROM PRO_GSSPLVAL 
							WHERE MAIN_FUN = 'DEPO_PROCESSING' AND
									NATION = :g_mt_commonsys_params_struct_h.nation_code AND
									INSTR(:chr_l_str4,FIELD_VAL) > 0;
					IS_ANY_ORA_ERROR

					if (sqlca.sqlcode != 1403)
					{
						int_l_addr_found=1;
					
							fprintf(p_fl_536log,"just before select from cdepoprocessing for |%s|\n",chr_h_depolocation);
							fflush(p_fl_536log);
						EXEC SQL SELECT NVL(VAL_UNIQUE_IDENTITY,' '),DEAL_537IND,DEAL_548IND 
										INTO :chr_h_unique_refcheck,:chr_h_proc_537,:chr_h_proc_548
										FROM DL_DEPOPROCESSING	 WHERE DEPO_LOC = trim(:chr_h_depolocation);

							fprintf(p_fl_536log,"just after select from cdepoprocessing |%ld|\n",sqlca.sqlcode);
							fflush(p_fl_536log);
						IS_ANY_ORA_ERROR
						if (sqlca.sqlcode==1403)
						{
							fprintf(p_fl_536log,"just before insincmsgstst\n");
							fflush(p_fl_536log);
           				if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT","DEPOSITORY RECORD NOT FOUND IN MASTER",
																	APL_NULL_STRING,(DEBUG_INFO_STRUCT_H **)NULL))
           				{
              					CO_ProcMonitor(APL_OUT_FILE,"Failed to select from cdepolocation.\n",NULL, NULL);
							}
							fprintf(p_fl_536log,"Fail to select DEPOSITORY record from cdepolocation\n");
							fflush(p_fl_536log);
        					*int_p_retstat = IV_CRITCAL_ERROR_IND;
        					APL_GOBACK_FAIL
						}

						if ( ((strcmp(p_msg_no,"537")==0) && (strcmp(chr_h_proc_537,"N")==0)) ||
							  ((strcmp(p_msg_no,"548")==0) && (strcmp(chr_h_proc_548,"N")==0)) )
						{
							strcpy(chr_l_rej_str,"DEPOSITORY SET-UP DISABLED FOR ");
							strcat(chr_l_rej_str,p_msg_no);
							strcat(chr_l_rej_str," MESSAGES");
           				if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT",chr_l_rej_str,
																	APL_NULL_STRING,(DEBUG_INFO_STRUCT_H **)NULL))
           				{
              					CO_ProcMonitor(APL_OUT_FILE,chr_l_rej_str,NULL, NULL);
							}
							fprintf(p_fl_536log,"DEPOSITORY doesnot support %s messages\n",p_msg_no);
							fflush(p_fl_536log);
        					*int_p_retstat = IV_CRITCAL_ERROR_IND;
        					APL_GOBACK_FAIL
						}
						strcpy(l_ms_537_struct_h.depo_loc,chr_h_depolocation);
						strcpy(l_ms_537_struct_h.val_unique_identity,chr_h_unique_refcheck);
					}
     			}
			}

					
			if(int_l_addr_found==0)
			{
           if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT","DEPOSITORY ADDRESS NOT FOUND IN HEADER",
																	APL_NULL_STRING,(DEBUG_INFO_STRUCT_H **)NULL))
           {
              	CO_ProcMonitor(APL_OUT_FILE,"Failed to insert into IINMSGRP.\n",NULL, NULL);
				}
				fprintf(p_fl_536log,"DEPOSITORY ADDRESS NOT FOUND IN HEADER\n");
				fflush(p_fl_536log);
        		*int_p_retstat = IV_CRITCAL_ERROR_IND;
        		APL_GOBACK_FAIL
			}
	  		chr_l_read_line_537='T';
			continue;
	   }

   	if (APL_FAILURE == CO_Chk_CntryEnabled("INCOMING_MSG_DEPO", "CHECK_TRD_DETAILS",
                                        &l_exists_trddet, l_debug_info_ptr))
   	{
      	APL_GOBACK_FAIL
   	}

		if (chr_l_str4[0] != ':')
			continue;

     memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
     memset(h_msg_tag, APL_NULL_CHAR , 4);
     memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
     memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
     memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
     if (APL_FAILURE == MS_Proc_SplitStr (chr_l_str4,
                                         h_msg_tag ,
                                         chr_h_value ,
                                         l_debug_info_ptr ))
     {
        fprintf(p_fl_536log,"Failed to Split the Message Line %s\n",chr_l_str4);
        strcpy(chr_g_msg_sts, "RJT");     
        {
           if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT","Failed to Split the Message Line",
																	APL_NULL_STRING,(DEBUG_INFO_STRUCT_H **)NULL))
            CO_ProcMonitor(APL_OUT_FILE,
                     "Failed to insert into ISETLRPT.\n",
                     NULL, NULL);
        }
        *int_p_retstat = IV_CRITCAL_ERROR_IND;
        APL_GOBACK_FAIL
     }

	  strncpy(chr_h_qualifier,chr_h_value,5);

     APL_IF_DEBUG
     {
        printf("the h_msg_tag is %s\n",h_msg_tag);
        printf("the chr_h_qualifier is %s\n",chr_h_qualifier);
        printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
     }
	

     if ((strcmp(l_ms_537_struct_h.client,APL_NULL_STRING)==0) && ((!strcmp(h_msg_tag,I_CLIENTA_98))
            || (!strcmp(h_msg_tag,I_CLIENTB_98)))
            && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
     {
     		memset(h_dl_client,APL_NULL_CHAR, APL_CLIENT_LENGTH );
			if (strcmp(chr_h_depolocation,"VTB")==0)
			{
         	int_l_slash_count=0;
         	a=0;
         	for(i=0;i<strlen(chr_h_value);i++)
         	{
         		if (chr_h_value[i]=='/')
            	{
                	int_l_slash_count=int_l_slash_count+1;
                	if( int_l_slash_count==1 )
                    a=i;
                	else if( int_l_slash_count==3 )
                    b=i;
            	}
         	}
         	if (APL_FAILURE == CO_Chk_CntryEnabled(  "INCOMING_MSG",
                                                "REMOVE_ZERO_VTBACC",
                                                &l_russia_flg,
                                                l_debug_info_ptr ))
         	{
             	APL_GOBACK_FAIL
         	}
         	if ((l_russia_flg) && (chr_h_value[a+2]=='0'))
         	{
              j =0;
              int_lflag =0;
              for ( i = a+2; i < b-1 ; i++ )
              {
                  if ( chr_h_value[i+1] != '0' || int_lflag )
                  {
                       h_dl_client[j] = chr_h_value[i+1];
                       int_lflag = 1;
                       j++;
                  }
              }
              h_dl_client[i] = APL_NULL_CHAR;
         	}
         	else
         	{
               strncpy(h_dl_client,chr_h_value+a+2,(b-a)-2 );
               h_dl_client[b-a-2] = APL_NULL_CHAR;
         	}

				EXEC SQL SELECT RTRIM(CLN_CODE) INTO :h_dl_client 
							FROM MT_CLIENT WHERE CLN_VTB_CLIENT = :h_dl_client;

				IS_ANY_ORA_ERROR

				if (sqlca.sqlcode==1403)
				{
           		if ( APL_FAILURE == MS_Mod_IncMsgSts("RJT","VTB ACCOUNT NOT FOUND",
																	APL_NULL_STRING,(DEBUG_INFO_STRUCT_H **)NULL))
            		CO_ProcMonitor(APL_OUT_FILE,
                     "Failed to insert into ISETLRPT.\n",
                     NULL, NULL);
					
					fprintf(p_fl_536log,"VTB ACCOUNT NOT FOUND \n");
					fflush(p_fl_536log);
        			*int_p_retstat = IV_CRITCAL_ERROR_IND;
        			APL_GOBACK_FAIL
				}
			}
			else
			{
				strcpy(h_dl_client,chr_h_value+7);
			}
         strcpy(l_ms_537_struct_h.client,h_dl_client);
         continue;  
      }
			if((!strcmp(h_msg_tag,MSG_BEGIN_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
			{
					    fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
            		 chr_l_str4[strlen(chr_l_str4)-1]='\0';
            		 memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
            		 memset(h_msg_tag, APL_NULL_CHAR , 4);
            		 memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            		 memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            		 if (APL_FAILURE == MS_Proc_SplitStr (   chr_l_str4,
                   				                            h_msg_tag ,
                              				                chr_h_value ,
                                          			       l_debug_info_ptr ))
               	{
                  	fprintf(p_fl_536log,"Failed to Split the Message Line %s\n",chr_l_str4);
                  	strcpy(chr_g_msg_sts, "RJT");     
                  	if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                     	                               "MESSAGE LINE NOT IN PROPER FORMAT",
																		 chr_g_str_client,
                                                    	(DEBUG_INFO_STRUCT_H **)NULL))
                     {
                        CO_ProcMonitor(APL_OUT_FILE,
                                 "Failed to insert into IINMSGRP.\n",
                                  NULL, NULL);
                     }
                  	*int_p_retstat = IV_CRITCAL_ERROR_IND;
                  	APL_GOBACK_FAIL
               	}

 		            APL_IF_DEBUG
      	         {
         	         printf("the h_msg_tag is %s\n",h_msg_tag);
            	      printf("the chr_value of chr_h_value after the call to processtion is %s\n",chr_h_value);
               	}
						strncpy(chr_h_qualifier,chr_h_value,5);
						if((!strcmp(h_msg_tag,I_DOMCPACCQ_98)) &&(strcmp(chr_h_qualifier,PSET_QUALIFIER)))
						{
							memset(chr_l_str6,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
							memset(chr_l_str7,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
							strcpy(chr_l_str6,chr_h_value+7);
							int_no_of_blanks=35-(strlen(chr_l_str6));
							sprintf(chr_l_str7,"%s",chr_l_str6);
							for(i=0;i<int_no_of_blanks;i++)
								strcat(chr_l_str7," ");
							int_l_count=0;
                      while(1)
                      {
                        memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
							   
							   fgets(chr_l_str,ISO_FILERR_LINERR_LENGTH,fl_incmsg);	
                        if ((chr_l_str[0] != ':') && (int_l_count==0))
                        {
									strncat(chr_l_str7,chr_l_str,35);
                        	chr_l_str7[strlen(chr_l_str7)-1]='\0';
                           int_l_count=int_l_count+1;
									i=0;
									while(chr_l_str7[i]!='\0')
									{
										if(chr_l_str7[i]=='\t')
										chr_l_str7[i]=' ';
										i=i+1;
									}
                           continue;
                        }
                        if (chr_l_str[0]==':')
                        {
                           
                           chr_l_str[strlen(chr_l_str)-1]='\0';
                           strcpy(chr_l_str5,chr_l_str);
					
                           break;
                        }
							   if((chr_l_str[0] != ':') && (int_l_count!=0))
							   {
								    continue;
							   }
                      }
						}
			}
         if (  (!strcmp(h_msg_tag,I_REF_NO_98)) && (!strcmp(chr_h_qualifier,I_RELA_QUALIFIER_98)))
         {
             strcpy(chr_h_value,chr_h_value+7);
             memset(l_ms_537_struct_h.deal_rf_ident_no, APL_NULL_CHAR, 17);
             strncpy(l_ms_537_struct_h.deal_rf_ident_no,chr_h_value,16);
             continue;
         }
         else if (!strcmp(h_msg_tag,I_IND_STAT))
         {
             strcpy(chr_h_value,chr_h_value+7);
				 
             if ((strcmp(chr_h_value,"MACH")==0) && (strcmp(chr_h_qualifier+1,"MTCH")==0))
             {
               if (int_h_count_fail == 0)
               {
                  strcpy(chr_h_reascode1,APL_NULL_STRING);
                  strcpy(chr_h_statusqual1,chr_h_qualifier+1);
                  strcpy(chr_h_statuscode1,chr_h_value);
                  int_h_count_fail++;
               }
               else if (int_h_count_fail == 1)
               {
                  strcpy(chr_h_reascode2,APL_NULL_STRING);
                  strcpy(chr_h_statusqual2,chr_h_qualifier+1);
                  strcpy(chr_h_statuscode2,chr_h_value);
                  int_h_count_fail++;
               }
               else if (int_h_count_fail == 2)
               {
                  strcpy(chr_h_reascode3,APL_NULL_STRING);
                  strcpy(chr_h_statusqual3,chr_h_qualifier+1);
                  strcpy(chr_h_statuscode3,chr_h_value);
                  int_h_count_fail++;
               }
             }
             else
             {
             	memset(chr_h_statusqual, APL_NULL_CHAR, 5);
             	memset(chr_h_statuscode, APL_NULL_CHAR, 5);
				 	strcpy(chr_h_statusqual,chr_h_qualifier+1);
				 	strcpy(chr_h_statuscode,chr_h_value);
				 }
	
				 fprintf(p_fl_536log,"sq = |%s|, sc = |%s|\n\n",chr_h_statusqual,chr_h_statuscode);
				 fflush(p_fl_536log);
             continue;
			}
         else if (!strcmp(h_msg_tag,I_IND_REAS))
         {
             strcpy(chr_h_value,chr_h_value+7);
				  
				 if (int_h_count_fail == 0)
				 {
						strcpy(chr_h_reascode1,chr_h_value);
						strcpy(chr_h_statusqual1,chr_h_statusqual);
						strcpy(chr_h_statuscode1,chr_h_statuscode);
				 		fprintf(p_fl_536log,"sq1 = |%s|, sc1 = |%s| reascode1 = |%s|\n\n",chr_h_statusqual1,chr_h_statuscode1,chr_h_reascode1);
				 		fflush(p_fl_536log);
				 		int_h_count_fail++;
				 }
				 else if (int_h_count_fail == 1)
				 {
						strcpy(chr_h_reascode2,chr_h_value);
						strcpy(chr_h_statusqual2,chr_h_statusqual);
						strcpy(chr_h_statuscode2,chr_h_statuscode);
				 		fprintf(p_fl_536log,"sq2 = |%s|, sc2 = |%s| reascode2 = |%s|\n\n",chr_h_statusqual2,chr_h_statuscode2,chr_h_reascode2);
				 		fflush(p_fl_536log);
				 		int_h_count_fail++;
				 }
				 else if (int_h_count_fail == 2)
				 {
						strcpy(chr_h_reascode3,chr_h_value);
						strcpy(chr_h_statusqual3,chr_h_statusqual);
						strcpy(chr_h_statuscode3,chr_h_statuscode);
				 		fprintf(p_fl_536log,"sq3 = |%s|, sc3 = |%s| reascode3 = |%s|\n\n",chr_h_statusqual3,chr_h_statuscode3,chr_h_reascode3);
				 		fflush(p_fl_536log);
				 		int_h_count_fail++;
				 }

             continue;
			}
         else if ((!strcmp(h_msg_tag,I_IND_REASNOTE)) && (!strcmp(chr_h_qualifier,I_CODERR_REAS))) 
         {
             strcpy(chr_h_value,chr_h_value+7);
				 
				 if (int_h_count_fail == 1)
				 {
						strcpy(chr_h_reasnote1,chr_h_value);
				 }
				 else if (int_h_count_fail == 2)
				 {
						strcpy(chr_h_reasnote2,chr_h_value);
				 }
				 else if (int_h_count_fail == 3)
				 {
						strcpy(chr_h_reasnote3,chr_h_value);
				 }

             continue;
			}
			else if ((l_exists_trddet) && (!strcmp(h_msg_tag,I_QTY_98)) && 
						(((!strcmp(p_msg_no,"537")) &&	(!strcmp(chr_h_qualifier,PSTA_QUALIFIER))) ||
						((!strcmp(p_msg_no,"548")) &&   (!strcmp(chr_h_qualifier,SETT_QUALIFIER)))))
			{
              
              memset(l_quantity,APL_NULL_CHAR,16);
              memset(chr_l_trd_qty,APL_NULL_CHAR,16);
              memset(h_qty,APL_NULL_CHAR,16);
              memset(chr_h_new_qty,APL_NULL_CHAR,16);
              memset(h_code,APL_NULL_CHAR,ISO_LINERR_LENGTH);
              l_finquantity=0.0;
              strncpy(h_code,chr_h_value+5,7);
              strcpy(h_qty, chr_h_value+12);

              
              if (APL_FAILURE == CO_Proc_RemoveDot(h_qty,chr_h_new_qty,l_debug_info_ptr) )
              {
                 fprintf(p_fl_536log,"Failed To Remove The Decimal From The Quantity\n");
					  l_ms_537_struct_h.quantity=0.0;
					  continue;
              }
              
              if (APL_FAILURE == CO_Proc_ReplaceComma( chr_h_new_qty,chr_l_trd_qty,l_debug_info_ptr) )
              {
                 fprintf(p_fl_536log,"Failed to Replace The Commas in Quantity\n");
					  l_ms_537_struct_h.quantity=0.0;
					  continue;
              }
              n = ( strlen(chr_l_trd_qty) - 1   );
              if (  chr_l_trd_qty[n] == '.')
                 strcat(chr_l_trd_qty,"00");
				  l_ms_537_struct_h.quantity=atof(chr_l_trd_qty);
              continue;
         }
			else if ((l_exists_trddet) && (!strcmp(h_msg_tag,I_AMOUNT_CCY_98)) && 
						(((!strcmp(p_msg_no,"537")) &&	(!strcmp(chr_h_qualifier,PSTA_QUALIFIER))) ||
						((!strcmp(p_msg_no,"548")) &&   (!strcmp(chr_h_qualifier,SETT_QUALIFIER)))))
						
			{
               strcpy(chr_h_value,chr_h_value+7);
               memset(dbl_l_amount_a,APL_NULL_CHAR,16);
               memset(chr_l_new_amount,APL_NULL_CHAR,16);
               memset(chr_l_ccycode,APL_NULL_CHAR,4);
						
               

					strncpy(chr_l_ccycode,chr_h_value,3);
					chr_l_ccycode[3]=APL_NULL_CHAR;

               for ( i = 0; i < 15 ; i++)
               {
                  dbl_l_amount_a[i] = chr_h_value[ i + 3 ];
               }
               dbl_l_amount_a[15] = APL_NULL_CHAR;

               

               if (APL_FAILURE == CO_Proc_RemoveDot(dbl_l_amount_a, chr_l_new_amount, l_debug_info_ptr) )
               {
                  fprintf(p_fl_536log,"Failed To Remove The Decimal From The Amount\n");
						l_ms_537_struct_h.amount = 0.0;
						continue;
               }

               

               if (APL_FAILURE == CO_Proc_ReplaceComma( chr_l_new_amount, dbl_l_amount_a, l_debug_info_ptr) )
               {
                  fprintf(p_fl_536log,"Failed to Replace The Commas in Amount\n");
						l_ms_537_struct_h.amount = 0.0;
						continue;
               }               
					l_ms_537_struct_h.amount = atof(dbl_l_amount_a);
					strcpy(l_ms_537_struct_h.currency_cd,chr_l_ccycode);
			}
	  		else if(strcmp(h_msg_tag,I_INSTRU_DET_98)==0)
	  		{	 
         	memset(chr_l_instr_name, APL_NULL_CHAR, ISO_LINERR_LENGTH);
         	strcpy(chr_l_instr_name,chr_h_value);
         	memset(chr_l_instrcode_a,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
         	memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
         	strncpy(chr_l_instrcode_a,chr_l_instr_name,4);
         	chr_l_instrcode_a[4] = APL_NULL_CHAR;

	         if ( strncmp(chr_h_value,"INSTR_ISIN",4) != 0 )
   	      {
                  fprintf(p_fl_536log,"NON ISIN FIELD \n");
         			memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
         	}
         	else
         	{
            	memset(chr_l_isin,APL_NULL_CHAR,13);
            	for ( i = 0; i< 12 ; i ++ )
               	chr_l_isin[i] = chr_l_instr_name[ i + 5 ];

	            APL_IF_DEBUG
   	         {
      	         printf("the chr_l_isin is (%s) \n",chr_l_isin);
         	   }
            	if (APL_FAILURE == IV_Rtv_InstrFromISIN(chr_l_isin, 
																			h_instr_code, 
																			&int_retstat, 
																			l_debug_info_ptr))
            	{
               	if (int_retstat == IV_CRITCAL_ERROR_IND)
               	{
                  	fprintf(p_fl_536log,"Fatal Error Encountered in INSTRUMENT TABLE \n");
                  	*int_p_retstat = IV_CRITCAL_ERROR_IND;
                  	APL_GOBACK_FAIL
               	}
               	if (int_retstat == IV_NO_DATA_FOUND_ERR)
               	{
                  	fprintf(p_fl_536log,"Instrode does not exist in MT_INSTRUMENT table for specified ISIN \n");
               	}
         			memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
             	}
					strcpy(l_ms_537_struct_h.instr_code,h_instr_code);
          	}

           continue;
       }     
		else if ((l_exists_trddet) && ((!strcmp(h_msg_tag,I_INSTRU_DEAL_DTA_98)) ||(!strcmp(h_msg_tag,I_INSTRU_DEAL_DTC_98)) ))
		{
 	       strcpy(chr_h_value,chr_h_value+7);	
			 if(!strcmp(chr_h_qualifier,SETT_QUALIFIER))
				{	
   	      	memset(chr_h_temp_settle_dt,NULL,9);				
               memset(h_setl_dt,APL_NULL_CHAR,APL_DATE_LEN);
					strncpy(chr_h_temp_settle_dt,chr_h_value,8);	
     	   	   chr_h_temp_settle_dt[8] ='\0';				

   		      if (APL_FAILURE == MS_Proc_DataFmtChg(chr_h_temp_settle_dt , 
							 												 h_setl_dt ,
               		   		                            l_debug_info_ptr ) )
              	{	
              		fprintf(p_fl_536log,"Failed To Decode Settle Date.\n");
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
                 	APL_GOBACK_FAIL
              	}

					memset(l_ms_537_struct_h.setl_date,NULL, APL_DATE_LEN);	
					strcpy(l_ms_537_struct_h.setl_date,h_setl_dt);
				} 	
				else
				{
					if(!strcmp(chr_h_qualifier,TRAD_MESSAGE_QUALIFIER))
					{	
   	            	memset(chr_h_temp_trade_dt,NULL,9);			
							strncpy(chr_h_temp_trade_dt ,chr_h_value,8);
     	   	      	chr_h_temp_trade_dt[8] = APL_NULL_CHAR;			
	
   		 			   if (APL_FAILURE == MS_Proc_DataFmtChg(chr_h_temp_trade_dt , 
									 												 chr_h_tr_dt ,
         		         				                            l_debug_info_ptr ) )
            		  	{	
              				fprintf(p_fl_536log,"Failed To Decode trade Date.\n");
								*int_p_retstat = IV_CRITCAL_ERROR_IND;
                 			APL_GOBACK_FAIL
              			}
							memset(l_ms_537_struct_h.deal_date,NULL,APL_DATE_LEN);	
							strcpy(l_ms_537_struct_h.deal_date,chr_h_tr_dt);
					} 	
				 }
			}
		 else if(((!strcmp(h_msg_tag,I_INDICATORH_98)) || (!strcmp(h_msg_tag,I_INDICATOR_98))) && ((!strcmp(chr_h_qualifier,I_IND_REDE)) || (!strcmp(chr_h_qualifier,I_IND_PAYM))))
		 {
					if(strcmp(h_msg_tag,I_INDICATOR_98)==0)
					{
                  int_l_slash_count=0;
                  a=0;
                  for(i=0;i<strlen(chr_h_value);i++)
                  {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
                  }
     					memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
						strncpy(chr_h_temp,chr_h_value+a+1,4);
						chr_h_temp[4] = APL_NULL_CHAR;

					}
					if(strcmp(chr_h_qualifier,I_IND_REDE)==0)
					{
						if (strcmp(h_msg_tag,I_INDICATOR_98)==0)		
						strcpy(chr_h_rede,chr_h_temp);
					else
						strncpy(chr_h_rede,chr_h_value+7,4);
					}
					
					if(strcmp(chr_h_qualifier,I_IND_PAYM)==0)
					{
						if (strcmp(h_msg_tag,I_INDICATOR_98)==0)		
						strcpy(chr_h_paym,chr_h_temp);
					else
						strncpy(chr_h_paym,chr_h_value+7,4);
					}
			 continue;
		 }

		if ((l_exists_trddet) && ((!strcmp(chr_h_qualifier,MSG_DEAG_QUAL))|| (!strcmp(chr_h_qualifier,REAG_QUALIFIER))))
		{
           if (!strcmp(h_msg_tag,I_DOMCPACCR_98))
           {
				  int_l_slash_count=0;	
              a=0;
              for(i=0;i<strlen(chr_h_value);i++)
              {
                    if ((chr_h_value[i]=='/') && (int_l_slash_count<2))
                    {
                        a=i;
                         int_l_slash_count=int_l_slash_count+1;
                    }
              }
              memset(int_l_domcpac,APL_NULL_CHAR,APL_CLIENT_LENGTH);
              memset(chr_l_domcpac_cname,APL_NULL_CHAR,66);
              strncpy(int_l_domcpac,chr_h_value+a+1,10);
              int_l_domcpac[10] = APL_NULL_CHAR;
              if(APL_FAILURE==IV_Rtv_CNameAcc(int_l_domcpac,
																	  chr_l_domcpac_cname,
																	  &int_retstat,l_debug_info_ptr))
              {
						strcpy(l_ms_537_struct_h.domcpclt_cd_cname,int_l_domcpac);
               	if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                  {
                     fprintf(p_fl_536log,"Too many records for A/c :%s: for CName from MT_CLIENT\n", int_l_domcpac);
							int_l_error_flg=1;
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                     APL_GOBACK_FAIL
                  }
               	else if (int_retstat == IV_CRITCAL_ERROR_IND)
                	{
                  	
                     fprintf(p_fl_536log,"Fatal l_debuglist for A/c :%s: for CName from MT_CLIENT\n", int_l_domcpac);
							int_l_error_flg=1;
                     *int_p_retstat = IV_CRITCAL_ERROR_IND;
                      APL_GOBACK_FAIL
                 	}
                 if (int_retstat == IV_NO_DATA_FOUND_ERR)
                 {
						 while(1)
						 {
               		memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                     fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     				printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);

            			if (chr_l_str4[0] != ':')
            			{
								strcpy(l_ms_537_struct_h.domcpclt_cd_cname,int_l_domcpac);
               			continue;      
            			}
						   
            			memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
            			memset(h_msg_tag, APL_NULL_CHAR , 4);
            			memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            			memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            			memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
            			if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                       					                     h_msg_tag ,
                                      					      chr_h_value ,
                                            					l_debug_info_ptr ))
               		{
                  		fprintf(p_fl_536log,"Failed to Split the Message Line %s\n",chr_l_str4);
                 			strcpy(chr_g_msg_sts, "RJT");     
                 			if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                         				                      "MESSAGE LINE NOT IN PROPER FORMAT",
																			  chr_g_str_client,
                                      				          (DEBUG_INFO_STRUCT_H **)NULL))
                 			{
                    			CO_ProcMonitor(APL_OUT_FILE,
                             			"Failed to insert into IINMSGRP.\n",
                             			NULL, NULL);
                 			}
                 			*int_p_retstat = IV_CRITCAL_ERROR_IND;
                 			APL_GOBACK_FAIL
               		}
							memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
			            strncpy(chr_h_qualifier,chr_h_value,5);

							if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
							{
								int_l_error_flg=1;
                       	strcpy(chr_g_msg_sts,"RJT");
                       	if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, 
																			  "DOMESTIC COUNTER PARTY NOT FOUND",
																				chr_g_str_client,NULL) )
                       	{
                          	CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                       	}
 	   	               fprintf(p_fl_536log,"Failed To Select Domestic Counterparty Name From ACCOUNT Table\n");
   	                  
								APL_GOBACK_FAIL
								break;
						 	}
							else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
										|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
									  && (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))	
							{
						      
                    		memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                 			memset(chr_l_cname,APL_NULL_CHAR, 66 );
                  		memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                  		memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
								int_l_slash_count=0;
                  		a=0;
                  		for(i=0;i<strlen(chr_h_value);i++)
                  		{
                    			if (((chr_h_value[i]=='/') 
											&& (int_l_slash_count<2)
											&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     		|| ((chr_h_value[i]=='/') 
										&& (int_l_slash_count<3)
										&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    			{
                        		a=i;
                         		int_l_slash_count=int_l_slash_count+1;
                    			}
                  		}
                  		strncpy(chr_l_client_a,chr_h_value+a+1,10);
                 			chr_l_client_a[10] = APL_NULL_CHAR;
                 				
                  		if ( APL_FAILURE == CO_Chk_CntryEnabled("ORDERPROC_INCMSG", 
																				  "ACCT_LEN_PROCESS", 
																				  &int_l_exist_a, l_debug_info_ptr) )
                  		{	
									fprintf(p_fl_536log,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                    			APL_GOBACK_FAIL      
                  		}
                  		if ( int_l_exist_a )
                  		{
                   			if ( strlen( chr_l_client_a ) == 9 )
                   			{
                    				for ( i = 0; i < 6 ; i++ )
                    			 	{
                    					chr_l_new_client[i] = chr_l_client_a[i];
                    				}
                    				strcat(chr_l_new_client,"-");
                    				chr_l_substr_client[0] = chr_l_client_a[6] ;
                    				chr_l_substr_client[1] = chr_l_client_a[7] ;
                    				chr_l_substr_client[2] = chr_l_client_a[8] ;
                    				chr_l_substr_client[3] = APL_NULL_CHAR ;
                    				strcat(chr_l_new_client,chr_l_substr_client);
                    				strcpy( chr_l_client_a, chr_l_new_client);
                    			}
									if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                   			{
                      			for ( i = 0; i < 6 ; i++ )
                      			{
                         			chr_l_new_client[i] = chr_l_client_a[i];
                      			}
                      			strcat(chr_l_new_client,"-");
                      			chr_l_substr_client[0] = chr_l_client_a[7] ;
                      			chr_l_substr_client[1] = chr_l_client_a[8] ;
                      			chr_l_substr_client[2] = chr_l_client_a[9] ;
                      			chr_l_substr_client[3] = APL_NULL_CHAR ;
                      			strcat(chr_l_new_client,chr_l_substr_client);
                      			strcpy( chr_l_client_a, chr_l_new_client);
                    			}
                  		}
								printf("\nB4 IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
                  		if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
								{
                           if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                           {
                              fprintf(p_fl_536log,"Too many recs for a/c:%s: for cName from MT_CLIENT\n", int_l_domcpac);
										int_l_error_flg=1;
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
                          else if (int_retstat == IV_CRITCAL_ERROR_IND)
            		        {
                  				
                              fprintf(p_fl_536log,"Fatal l_debuglist for A/c :%s: for cName from MT_CLIENT\n", int_l_domcpac);
										int_l_error_flg=1;
                    				*int_p_retstat = IV_CRITCAL_ERROR_IND;
										APL_GOBACK_FAIL
                    		  }
                     	  if (int_retstat == IV_NO_DATA_FOUND_ERR)
								  {
									 int_l_error_flg=1;
       		                strcpy(chr_g_msg_sts,"RJT");
            		          if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, 
																					"DOMESTIC COUNTER PARTY NOT FOUND",
																					chr_g_str_client,NULL) )
                            {
                            	CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                            }
 		                      fprintf(p_fl_536log,"Failed To Select The customer Name from ACCOUNT table\n");
                            
									 APL_GOBACK_FAIL
								  }
							  }
							  else 
							  {
                        	strcpy(l_ms_537_struct_h.domestic_cpclt,chr_l_client_a);
                       		strcpy(l_ms_537_struct_h.domcpclt_cd_cname,chr_l_cname);
							  }
								printf("\nAfter b4 break IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
							  break;
							}
						else 
							continue;	
						}
					}
				}
				else
				{
               strcpy(l_ms_537_struct_h.domestic_cpclt,int_l_domcpac);
               strcpy(l_ms_537_struct_h.domcpclt_cd_cname,chr_l_domcpac_cname);
				}
			}
			else if (!strcmp(h_msg_tag,I_DOMCPACCQ_98))
         {
             strncpy(l_ms_537_struct_h.domcpclt_cd_cname,chr_l_str7,66);
				 l_ms_537_struct_h.domcpclt_cd_cname[65]=APL_NULL_CHAR;
				 printf("****1****");
				 printf("Domcpacname is :****%s\n",l_ms_537_struct_h.domcpclt_cd_cname);
             int_retstat = IV_SUCCESS;
             if (APL_FAILURE == MS_Rtv_CNameAcc(l_ms_537_struct_h.domcpclt_cd_cname,
                                                      l_ms_537_struct_h.domestic_cpclt,
                                                      &int_retstat,
                                                      l_debug_info_ptr) )
            {
            	if ((int_retstat == IV_NO_DATA_FOUND_ERR)	|| (int_retstat == MORE_THAN_ONE_ROW))
               {
	     				printf("****2***"); 
							memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
							strcpy(chr_l_str4,chr_l_str5);
							while(1)
							{
                           memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                           memset(h_msg_tag, APL_NULL_CHAR , 4);
                           memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                           memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                           if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                                                               h_msg_tag ,
                                                               chr_h_value ,
                                                               l_debug_info_ptr ))
                           {
                              fprintf(p_fl_536log,"Failed to Split the Message Line %s\n",chr_l_str4);
                              strcpy(chr_g_msg_sts, "RJT");     
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                                                "MESSAGE LINE NOT IN PROPER FORMAT",
																				    chr_g_str_client,
                                                                (DEBUG_INFO_STRUCT_H **)NULL))
                              {
                                 CO_ProcMonitor(APL_OUT_FILE,
                                          "Failed to insert into IINMSGRP.\n",
                                          NULL, NULL);
                              }
                              *int_p_retstat = IV_CRITCAL_ERROR_IND;
                              APL_GOBACK_FAIL
                           }
 					            memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            					strncpy(chr_h_qualifier,chr_h_value,5);

                           if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                           {
                              strcpy(chr_g_msg_sts,"RJT");
                              if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, 
																					  "DOMESTIC COUNTER PARTY NOT FOUND",
																					  chr_g_str_client,NULL) )
                              {
                                 CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                              }

                              fprintf(p_fl_536log,"Failed To Select The customer Name from ACCOUNT table\n");
                              
									 	int_l_error_flg=1;
										APL_GOBACK_FAIL
                           }
                           else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
												|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
												&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                           {
										
									   memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                              memset(chr_l_cname,APL_NULL_CHAR, 66 );
                              memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                              memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                              a=0;
                              for(i=0;i<strlen(chr_h_value);i++)
                              {
                    					if (((chr_h_value[i]=='/') 
												&& (int_l_slash_count<2)
												&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     				|| ((chr_h_value[i]=='/') 
												&& (int_l_slash_count<3)
												&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                              }
                              strncpy(chr_l_client_a,chr_h_value+a+1,10);
                              chr_l_client_a[10] = APL_NULL_CHAR;
                              
                              if ( APL_FAILURE == CO_Chk_CntryEnabled("ORDERPROC_INCMSG","ACCT_LEN_PROCESS",&int_l_exist_a,l_debug_info_ptr))
                              {
                                 fprintf(p_fl_536log,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                                 APL_GOBACK_FAIL
                              }
                              if ( int_l_exist_a )
                              {
                                 if ( strlen( chr_l_client_a ) == 9 )
                                 {
                                    for ( i = 0; i < 6 ; i++ )
                                    {
                                       chr_l_new_client[i] = chr_l_client_a[i];
                                    }
                                    strcat(chr_l_new_client,"-");
                                    chr_l_substr_client[0] = chr_l_client_a[6] ;
                                    chr_l_substr_client[1] = chr_l_client_a[7] ;
                                    chr_l_substr_client[2] = chr_l_client_a[8] ;
                                    chr_l_substr_client[3] = APL_NULL_CHAR ;
                                    strcat(chr_l_new_client,chr_l_substr_client);
                                    strcpy( chr_l_client_a, chr_l_new_client);
                                 }
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                   					{
                      					for ( i = 0; i < 6 ; i++ )
                      					{
                         					chr_l_new_client[i] = chr_l_client_a[i];
                      					}
                      					strcat(chr_l_new_client,"-");
                      					chr_l_substr_client[0] = chr_l_client_a[7] ;
                      					chr_l_substr_client[1] = chr_l_client_a[8] ;
                      					chr_l_substr_client[2] = chr_l_client_a[9] ;
                      					chr_l_substr_client[3] = APL_NULL_CHAR ;
                      					strcat(chr_l_new_client,chr_l_substr_client);
                      					strcpy( chr_l_client_a, chr_l_new_client);
                    					}
                              }
								printf("\nB4 IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
                              if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
                              {
                                 if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                                 {
                                    fprintf(p_fl_536log,"Too many records for A/c :%s: for cName from cACCOUNT\n", chr_l_client_a);
												int_l_error_flg=1;
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                    APL_GOBACK_FAIL
                                 }
                                else if (int_retstat == IV_CRITCAL_ERROR_IND)
                                 {
                                    
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                    fprintf(p_fl_536log,"Fatal l_debuglist for A/c:%s: for cName from cACCOUNT\n", chr_l_client_a);
									 			int_l_error_flg=1;
                                    APL_GOBACK_FAIL
                                 }
                                 if (int_retstat == IV_NO_DATA_FOUND_ERR)
                                 {
											  int_l_error_flg=1;
                                   strcpy(chr_g_msg_sts,"RJT");
                                   if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, 
																							 "DOMESTIC COUNTER PARTY NOT FOUND",
																							  chr_g_str_client,NULL) )
                                   {
                                       CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                                   }

                                   fprintf(p_fl_536log,"Failed To Select The customer Name from ACCOUNT table\n");
                                   
									 			int_l_error_flg=1;
												APL_GOBACK_FAIL
                                 }
                              }
                              else
                              {
                                 strcpy(l_ms_537_struct_h.domestic_cpclt,chr_l_client_a);
                                 strcpy(l_ms_537_struct_h.domcpclt_cd_cname,chr_l_cname);
                              }
						printf("\nAfter b4 break IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
										break;
                           }
                           else
									{
									   memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
										fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
										chr_l_str4[strlen(chr_l_str4)-1]='\0';
		     							printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);
										continue;

									}
							}
               }
				}
			}	
			else if (!strcmp(h_msg_tag,I_DOMCPACCP_98))	
			{
             a=0;
             for(i=0;i<strlen(chr_h_value);i++)
             {
                if (chr_h_value[i]=='/')
                {
                   a=i;
                }
             }
             memset(chr_l_bic_code, APL_NULL_CHAR, 13);
             strncpy(chr_l_bic_code,chr_h_value+a+1,12);
             chr_l_bic_code[12] = APL_NULL_CHAR;

                     int_retstat = IV_SUCCESS;
                      if (APL_FAILURE == IV_Rtv_BICCDAccNew( chr_l_bic_code,
                                                           l_ms_537_struct_h.domestic_cpclt,
                                                         l_ms_537_struct_h.domcpclt_cd_cname,
                                                         &int_retstat, l_debug_info_ptr) )	
							 {
							
                        if ((int_retstat == IV_NO_DATA_FOUND_ERR) || (int_retstat == MORE_THAN_ONE_ROW_FOUND)||(int_retstat==MST_CLI_SAME))
								{
									strcpy(l_ms_537_struct_h.domcpclt_cd_cname,chr_l_bic_code);
								 while(1)
								 {
                     		memset(chr_l_str4,APL_NULL_CHAR,ISO_FILERR_LINERR_LENGTH);
                     		fgets(chr_l_str4,ISO_FILERR_LINERR_LENGTH,fl_incmsg);
                     		chr_l_str4[strlen(chr_l_str4)-1]='\0';
									printf("\n ******** chr_l_str4 is |%s| ****** \n",chr_l_str4);

 		                     if (chr_l_str4[0] != ':')
                     		{
                        		continue;      
                     		}
                     		memset(chr_l_str, APL_NULL_CHAR , ISO_FILERR_LINERR_LENGTH);
                     		memset(h_msg_tag, APL_NULL_CHAR , 4);
                     		memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     		memset(chr_h_temp, APL_NULL_CHAR,ISO_LINERR_LENGTH);
                     		memset(chr_h_value, APL_NULL_CHAR, ISO_LINERR_LENGTH);
                     		if (APL_FAILURE == MS_Proc_SplitStr (    chr_l_str4,
                           		                              h_msg_tag ,
                                 		                        chr_h_value ,
                                             		            l_debug_info_ptr ))
                     		{
                        		fprintf(p_fl_536log,"Failed to Split the Message Line %s\n",chr_l_str4);
                        		strcpy(chr_g_msg_sts, "RJT");     
                        		if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                              		                            "MESSAGE LINE NOT IN PROPER FORMAT",chr_g_str_client,
                                    		                      (DEBUG_INFO_STRUCT_H **)NULL))
                        		{
                           		CO_ProcMonitor(APL_OUT_FILE,
                                 		   "Failed to insert into IINMSGRP.\n",
                                    		NULL, NULL);
                        		}
                        		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                        		APL_GOBACK_FAIL
                     		}
 						         memset(chr_h_qualifier, APL_NULL_CHAR,ISO_LINERR_LENGTH);
            					strncpy(chr_h_qualifier,chr_h_value,5);

                     		if ((!strcmp(h_msg_tag,END_TAG)) && (!strcmp(chr_h_qualifier,SETPRTY_QUALIFIER)))
                     		{
										int_l_error_flg=1;
                        		strcpy(chr_g_msg_sts,"RJT");
                        		if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts, 
																					  "DOMESTIC COUNTER PARTY NOT FOUND",
																					  chr_g_str_client,NULL))
                        		{
                           		CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                        		}
 		                        fprintf(p_fl_536log,"Failed To Select The customer Name from ACCOUNT table\n");
       		                  
										APL_GOBACK_FAIL
                     		}
                     		else if (((!strcmp(h_msg_tag,I_CLIENTA_98)) 
												|| (!strcmp(h_msg_tag,I_CLIENTB_98))) 
												&& (!strcmp(chr_h_qualifier,SAFE_QUALIFIER)))
                     		{
										
                        		memset(chr_l_client_a,APL_NULL_CHAR, APL_CLIENT_LENGTH );
                        		memset(chr_l_cname,APL_NULL_CHAR, 66 );
                        		memset (chr_l_new_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                        		memset(chr_l_substr_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
										int_l_slash_count=0;
                        		a=0;
                        		for(i=0;i<strlen(chr_h_value);i++)
                        		{
                    					if (((chr_h_value[i]=='/') 
													&& (int_l_slash_count<2)
													&& (!strcmp(h_msg_tag,I_CLIENTA_98)))
                     				|| ((chr_h_value[i]=='/') 
												&& (int_l_slash_count<3)
												&& (!strcmp(h_msg_tag,I_CLIENTB_98))))
                    					{
                        				a=i;
                         				int_l_slash_count=int_l_slash_count+1;
                    					}
                        		}
                        		strncpy(chr_l_client_a,chr_h_value+a+1,10);
                        		chr_l_client_a[10] = APL_NULL_CHAR;
                        		
                        		if ( APL_FAILURE == CO_Chk_CntryEnabled("ORDERPROC_INCMSG", "ACCT_LEN_PROCESS", &int_l_exist_a, l_debug_info_ptr) )
                        		{
                           		fprintf(p_fl_536log,"Failed in CO_Chk_CntryEnabled for ACCT_LEN_PROCESS\n");
                           		APL_GOBACK_FAIL
                        		}
                        		if ( int_l_exist_a )
                        		{
                           		if ( strlen( chr_l_client_a ) == 9 )
                           		{
                              		for ( i = 0; i < 6 ; i++ )
                              		{
                                 		chr_l_new_client[i] = chr_l_client_a[i];
                              		}
                              		strcat(chr_l_new_client,"-");
                              		chr_l_substr_client[0] = chr_l_client_a[6] ;
                              		chr_l_substr_client[1] = chr_l_client_a[7] ;
                              		chr_l_substr_client[2] = chr_l_client_a[8] ;
                              		chr_l_substr_client[3] = APL_NULL_CHAR ;
                              		strcat(chr_l_new_client,chr_l_substr_client);
                              		strcpy( chr_l_client_a, chr_l_new_client);
                           		}
											if ( (strlen( chr_l_client_a ) == 10 ) && ( chr_l_client_a[6] == ' ' ) ) 
                   					{
                      					for ( i = 0; i < 6 ; i++ )
                      					{
                         					chr_l_new_client[i] = chr_l_client_a[i];
                      					}
                      					strcat(chr_l_new_client,"-");
                      					chr_l_substr_client[0] = chr_l_client_a[7] ;
                      					chr_l_substr_client[1] = chr_l_client_a[8] ;
                      					chr_l_substr_client[2] = chr_l_client_a[9] ;
                      					chr_l_substr_client[3] = APL_NULL_CHAR ;
                      					strcat(chr_l_new_client,chr_l_substr_client);
                      					strcpy( chr_l_client_a, chr_l_new_client);
                    					}
                        		}
							printf("\nB4 IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
                        		if (APL_FAILURE == IV_Rtv_CNameAcc(chr_l_client_a,chr_l_cname,&int_retstat,l_debug_info_ptr))
                        		{
                                 if (int_retstat == MORE_THAN_ONE_ROW_FOUND)
                                 {
                                    fprintf(p_fl_536log,"Too many records for A/c :%s: for cName from cACCOUNT\n", chr_l_client_a);
												int_l_error_flg=1;
                                    *int_p_retstat = IV_CRITCAL_ERROR_IND;
                                    APL_GOBACK_FAIL
                                 }
                          			if (int_retstat == IV_CRITCAL_ERROR_IND)
                          			{
												int_l_error_flg=1;
                                    fprintf(p_fl_536log,"Fatal l_debuglist for A/c :%s: for cName from cACCOUNT\n", chr_l_client_a);
                              		
                              		*int_p_retstat = IV_CRITCAL_ERROR_IND;
                              		APL_GOBACK_FAIL
                          			}
                          			if (int_retstat == IV_NO_DATA_FOUND_ERR)
                          			{
												int_l_error_flg=1;
                            			strcpy(chr_g_msg_sts,"RJT");
                            			if ( APL_FAILURE == MS_Mod_IncMsgSts(chr_g_msg_sts,
                                    			                           "DOMESTIC COUNTER PARTY NOT FOUND",
                                             			                   chr_g_str_client,NULL) )
                            			{
                              			CO_ProcMonitor(APL_OUT_FILE, "Could not insert into IINMSGRP\n",NULL, NULL);
                            			}
 			                           fprintf(p_fl_536log,"Failed To Select The customer Name from ACCOUNT table\n");
         			                  
												APL_GOBACK_FAIL
                          			}
                       			}
                       			else
                       			{
                           		strcpy(l_ms_537_struct_h.domestic_cpclt,chr_l_client_a);
                           		strcpy(l_ms_537_struct_h.domcpclt_cd_cname,chr_l_cname);
                       			}
						printf("\nAfter b4 break IV_Rtv_CNameAcc :clnt_name is :%s: client :%s: \n", chr_l_cname,chr_l_client_a);
										break;
                  		}
                  		else
                        	continue;
							  }
               		}
						}
			}	
			else if (!strcmp(h_msg_tag,I_DOMCPACCS_98))
			{
				fprintf(p_fl_536log,"PARTY msg_tag-95S NOT SUPPORTED FOR DEAG/REAG\n");
				CO_ProcMonitor(APL_OUT_FILE, "PARTY msg_tag-95S NOT SUPPORTED FOR DEAG/REAG\n", NULL, NULL);
			}
		}

		 else if((!strcmp(h_msg_tag,END_TAG)) && 
				((!strcmp(p_msg_no,"537") && (!strcmp(chr_h_qualifier,TRAN_MESSAGE_QUALIFIER))) || 
				(!strcmp(p_msg_no,"548") && (!strcmp(chr_h_value,I_CODERR_SETTRAN)))))
		 {
				int_l_tran_count++;
				int_l_error_flg=0;
				if((strcmp(chr_h_rede,"RECE")==0) && (strcmp(chr_h_paym,"FREE")==0))
					strcpy(l_ms_537_struct_h.deal_cd,"2");
				else if((strcmp(chr_h_rede,"RECE")==0) && (strcmp(chr_h_paym,"APMT")==0))
					strcpy(l_ms_537_struct_h.deal_cd,"4");
				else if((strcmp(chr_h_rede,"DELI")==0) && (strcmp(chr_h_paym,"FREE")==0))
					strcpy(l_ms_537_struct_h.deal_cd,"1");
				else if((strcmp(chr_h_rede,"DELI")==0) && (strcmp(chr_h_paym,"APMT")==0))
					strcpy(l_ms_537_struct_h.deal_cd,"3");
				else
					strcpy(l_ms_537_struct_h.deal_cd,APL_NULL_STRING);

			 	memset(chr_h_paym,APL_NULL_CHAR,5);
			 	memset(chr_h_rede,APL_NULL_CHAR,5);

            if(strcmp(l_ms_537_struct_h.deal_rf_ident_no,APL_NULL_STRING)==0)
            {
               if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               {
                  strcpy(chr_l_rej_str,"Refno(TRRF) ");
               }
               else
               {
                  strcat(chr_l_rej_str,", Refno(TRRF) ");
               }
               int_l_error_flg=1;
            }

            if(strcmp(l_ms_537_struct_h.instr_code,APL_NULL_STRING)==0)
            {
               if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               {
                  strcpy(chr_l_rej_str,"ISIN ");
               }
               else
               {
                  strcat(chr_l_rej_str,", ISIN ");
               }
               int_l_error_flg=1;
            }
            if(strcmp(l_ms_537_struct_h.deal_cd,APL_NULL_STRING)==0)
            {
              if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               {
                  strcpy(chr_l_rej_str,"TRCODE ");
               }
               else
               {
                  strcat(chr_l_rej_str,", TRCODE ");
               }
               int_l_error_flg=1;
            }
				if (l_exists_trddet)
				{
            	if((l_ms_537_struct_h.deal_cd[0]=='3') || (l_ms_537_struct_h.deal_cd[0]=='4'))
            	{
               	if (l_ms_537_struct_h.amount==0)
               	{
                 		if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
                 		{
                  	  strcpy(chr_l_rej_str,"AMOUNT ");
                 		}
                 		else
                 		{
                  	  strcat(chr_l_rej_str,", AMOUNT ");
                 		}
               		int_l_error_flg=1;
               	}
               	if(strcmp(l_ms_537_struct_h.currency_cd,APL_NULL_STRING)==0)
               	{
               		if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               		{
                  		strcpy(chr_l_rej_str,"CURRENCY ");
               		}
               		else
               		{
                  		strcat(chr_l_rej_str,", CURRENCY ");
               		}
               		int_l_error_flg=1;
               	}
            	}
            	if(l_ms_537_struct_h.quantity==0)
            	{
               	if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
               	{
                  	strcpy(chr_l_rej_str,"QTY ");
               	}
               	else
               	{
                   	strcat(chr_l_rej_str,", QTY ");
               	}
               	int_l_error_flg=1;
            	}
				}
            if(int_l_error_flg==0)
            {
					for (i=1;i<=int_h_count_fail;i++)
					{
						memset(l_ms_537_struct_h.h_stat_qual, APL_NULL_CHAR, 5);
						memset(l_ms_537_struct_h.stat_cd, APL_NULL_CHAR, 5);
						memset(l_ms_537_struct_h.reason_cd, APL_NULL_CHAR, 5);
						memset(l_ms_537_struct_h.fail_det, APL_NULL_CHAR, 36);

					 	if (i==1)
					 	{
							strcpy(l_ms_537_struct_h.h_stat_qual,chr_h_statusqual1);
							strcpy(l_ms_537_struct_h.stat_cd,chr_h_statuscode1);
							strcpy(l_ms_537_struct_h.reason_cd,chr_h_reascode1);
							strcpy(l_ms_537_struct_h.fail_det,chr_h_reasnote1);
					 	}
					 	else if (i==2)
					 	{
							strcpy(l_ms_537_struct_h.h_stat_qual,chr_h_statusqual2);
							strcpy(l_ms_537_struct_h.stat_cd,chr_h_statuscode2);
							strcpy(l_ms_537_struct_h.reason_cd,chr_h_reascode2);
							strcpy(l_ms_537_struct_h.fail_det,chr_h_reasnote2);
					 	}
					 	else if (i==3)
					 	{
							strcpy(l_ms_537_struct_h.h_stat_qual,chr_h_statusqual3);
							strcpy(l_ms_537_struct_h.stat_cd,chr_h_statuscode3);
							strcpy(l_ms_537_struct_h.reason_cd,chr_h_reascode3);
							strcpy(l_ms_537_struct_h.fail_det,chr_h_reasnote3);
					 	}
				 		fprintf(p_fl_536log,"sq = |%s|, sc = |%s| reascode = |%s| i = |%d|\n\n",l_ms_537_struct_h.h_stat_qual,l_ms_537_struct_h.stat_cd,l_ms_537_struct_h.reason_cd,i);
				 		fprintf(p_fl_536log,"calling MarkTrdFail %s/%s\n\n",l_ms_537_struct_h.client,l_ms_537_struct_h.deal_rf_ident_no);

                 if( APL_FAILURE == DL_Proc_MarkDLFail (p_fl_536log,
                                                     &l_ms_537_struct_h,
                                                     &int_p_retstat,
                                                     p_intlenv_data_struct_h,
                                                     l_debug_info_ptr ) )
                  {

                     fprintf(p_fl_536log,
                              "Unsuccessfully returned from DL_Proc_MarkDLFail processtion\n");
                  }
                  else
                  {
                     fprintf(p_fl_536log,
                              "Successfully returned from DL_Proc_MarkDLFail processtion\n");
                  }
					}
            }
            if(int_l_error_flg==1)
            {

			     if(strcmp(chr_l_rej_str,APL_NULL_STRING)==0)
              {
                  strcpy(chr_l_rej_str,"Error in Message Values ");
              }
              else
              {
                  strcat(chr_l_rej_str," Not Found ");
              }	

						fprintf(p_fl_536log,chr_l_rej_str);
						fflush(p_fl_536log);
            }
   				memset(&l_ms_537_struct_h,NULL,sizeof(MS_537_STRUCT_H) );
					strcpy(l_ms_537_struct_h.depo_loc,chr_h_depolocation);
					strcpy(l_ms_537_struct_h.val_unique_identity,chr_h_unique_refcheck);
					strcpy(l_ms_537_struct_h.client,h_dl_client);
					memset(chr_l_rej_str,APL_NULL_CHAR,151);
		 }
       else if((!strcmp(h_msg_tag,END_TAG)) &&
            (!strcmp(chr_h_qualifier,I_CODERR_STAT)) && (!strcmp(p_msg_no,"537")) )
       {
			memset(chr_h_statusqual1,APL_NULL_CHAR,5);
			memset(chr_h_statuscode1,APL_NULL_CHAR,5);
			memset(chr_h_reascode1,APL_NULL_CHAR,5);
			memset(chr_h_reasnote1,APL_NULL_CHAR,36);
			memset(chr_h_statusqual2,APL_NULL_CHAR,5);
			memset(chr_h_statuscode2,APL_NULL_CHAR,5);
			memset(chr_h_reascode2,APL_NULL_CHAR,5);
			memset(chr_h_reasnote2,APL_NULL_CHAR,36);
			memset(chr_h_statusqual3,APL_NULL_CHAR,5);
			memset(chr_h_statuscode3,APL_NULL_CHAR,5);
			memset(chr_h_reascode3,APL_NULL_CHAR,5);
			memset(chr_h_reasnote3,APL_NULL_CHAR,36);
			int_h_count_fail = 0;
		 }
		 else
			continue;
    }
		
   
   RETURN_SUCCESS:
   {
          APL_IF_DEBUG
          {
            CO_ProcMonitor(p_fl_536log,"Exiting out of MS_Proc_IncMsg537 successfully\n", 
											 NULL, 
											 NULL);
          }
          return (APL_SUCCESS);
   }

   RETURN_FAILURE:
   {
          APL_IF_DEBUG
          {
           CO_ProcMonitor(p_fl_536log,"Exiting out of MS_Proc_IncMsg537 unsuccessfully\n", 
											NULL, 
											NULL);
          }
          return (APL_FAILURE);
   }
}

	

int MS_Chk_IncMsg54xNarr ( char *p_in_narr,
                         char *p_out_narr,
								 DEBUG_INFO_STRUCT_H  **l_debug_info_ptr)
{
	char chr_l_in_narr[31]		= APL_NULL_STRING;
	char chr_l_out_narr[31]		= APL_NULL_STRING;
	int  int_l_slash_count		= 0;
	int  i						= 0;
   char int_l_temp[2]				= APL_NULL_STRING;
   int  int_l_begin				= 0;		

	memset(chr_l_out_narr,APL_NULL_CHAR,31);
	memset(chr_l_in_narr,APL_NULL_CHAR,31);	
	strcpy(chr_l_in_narr,p_in_narr);
	for ( i=0 ;i<strlen(chr_l_in_narr);i++)
	{
			if( i != (strlen(chr_l_in_narr) -1 ))
			{
				if(chr_l_in_narr[i] != '/')
					int_l_begin = 1;
				
				if( chr_l_in_narr[i] == '/' && int_l_begin == 0 )
					strcat(chr_l_out_narr," ");
				else if(chr_l_in_narr[i] == '/' && chr_l_in_narr[i+1] == '/') 
				{
					int_l_slash_count++;
					strcat(chr_l_out_narr," ");
				}
				else
				{
						  if(int_l_slash_count%2 !=0 && chr_l_in_narr[i-1] == '/' && chr_l_in_narr[i]=='/' )
									 strcat(chr_l_out_narr," ");
						  else
						  {
									 int_l_temp[0]=chr_l_in_narr[i];
									 int_l_temp[1]=APL_NULL_CHAR;
									 strcat(chr_l_out_narr,int_l_temp);
									 int_l_slash_count=0;
						  }			 
				}
			}
			else 
			{
					  if( chr_l_in_narr[i]=='/' )
								 strcat(chr_l_out_narr," ");
					  else
					  {
								 int_l_temp[0]=chr_l_in_narr[i];
								 int_l_temp[1]=APL_NULL_CHAR;
								 strcat(chr_l_out_narr,int_l_temp);
					  }
			}
	}
	strcat(chr_l_out_narr,APL_NULL_STRING);	
	strcpy(p_out_narr,chr_l_out_narr);

	APL_GOBACK_SUCCESS;

  
	RETURN_FAILURE:
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,  
					"Exiting out of MS_Chk_IncMsg54xNarr unsuccessfully\n",
	  				NULL,
					NULL);
	   }
		return (APL_FAILURE);
	}

	RETURN_SUCCESS:
	{
   	APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,
					"Exiting out of MS_Chk_IncMsg54xNarr successfully\n",
               NULL,
	            NULL);
		}
			return (APL_SUCCESS);
	}

}

