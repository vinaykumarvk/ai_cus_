













 
#include "stdio_64.h"
#include "MS_Swift.h"

EXEC SQL INCLUDE SQLCA;

#define	APL_MALLOC_FAIL_LOC(pointer)\
			if (pointer == NULL)\
			{\
				return APL_FAILURE;\
			}


int MS_Proc_MsgFormat(MS_SEQ_ELM_STRUCT_H *p_ms_seq_elm_struct_h,int p_tot_seq,MS_VAL_ELM_STRUCT_H *p_ms_val_elm_struct_h,
                 int p_tot_val,char *p_msg_file,char p_swftlx,char p_priority,
		char *p_mere_biccode,char *p_uniq_seme_ident,char *chr_p_msgno_a)
{



extern int MS_Rtv_SeqRep(int ,int ,MS_SEQ_ELM_STRUCT_H *,int *);

extern int MS_Rtv_ParSeqRep(int ,int ,MS_SEQ_ELM_STRUCT_H *,int *);

extern int MS_Rtv_ParentSeq(int ,int ,MS_SEQ_ELM_STRUCT_H *,int *);

extern int MS_Rtv_ChildSeq(int , int ,MS_SEQ_ELM_STRUCT_H *,int , int *);



FILE *msg;
int int_seq_ctr=0,int_curr_rep_no = 0,int_par_rep_no = 0,int_child_rep_no = 0,int_val_ctr = 0;
MS_VAL_ELM_STRUCT_H *l_ms_val_elm_struct_ha = NULL;
MS_VAL_ELM_STRUCT_H *l_ms_val_elm_struct_h_t = NULL;
int int_mprocessed = 0,int_tot_seq=0,int_tot_val=0,int_childex=0,int_l_seq_rep_no=0,int_l_parent=0;
int int_l_child = 0,int_fin_ctr=0,int_nr_ctr=0,int_returnval = 0,int_clsstat = 0;
char chr_lval[16],chr_date_time[30];
char chr_l_tag[6] = APL_NULL_STRING;
char chr_l_dataval[8] = APL_NULL_STRING;
int l_70EFlag = 0;

int int_flg_addinfo = 0;
int int_flg_535_535b = 0;

int l_print_var = 0;

 
char chr_l_uniq_seme_refno[17]= APL_NULL_STRING;

l_ms_val_elm_struct_h_t = l_ms_val_elm_struct_ha = (MS_VAL_ELM_STRUCT_H *)calloc(1,sizeof(MS_VAL_ELM_STRUCT_H));
APL_MALLOC_FAIL_LOC(l_ms_val_elm_struct_ha);

memset(chr_lval,APL_NULL_CHAR,16);
memset(chr_date_time,APL_NULL_CHAR,30);

int_tot_seq = p_tot_seq;
int_tot_val = p_tot_val;


msg = fopen(p_msg_file,"w");
int_fnoopen++;

if(strncmp(chr_p_msgno_a,"535",3)==0)
int_flg_535_535b =1;



while( int_seq_ctr <= int_tot_seq)
{
   p_ms_seq_elm_struct_h[int_seq_ctr].sequence_rep_no = 0;
   p_ms_seq_elm_struct_h[int_seq_ctr].child_sequence_rep_no = 0;
   int_seq_ctr++;
}
int_seq_ctr = 0;
int_childex = 1;
while( int_seq_ctr  <= int_tot_seq)
{
   MS_Rtv_SeqRep(p_ms_seq_elm_struct_h[int_seq_ctr].identity_no,int_tot_seq,p_ms_seq_elm_struct_h,&int_l_seq_rep_no);
   int_curr_rep_no  = int_l_seq_rep_no;

   MS_Rtv_ParSeqRep(p_ms_seq_elm_struct_h[int_seq_ctr].identity_no,int_tot_seq,p_ms_seq_elm_struct_h,&int_l_seq_rep_no);
   int_par_rep_no  = int_l_seq_rep_no;


   if( p_ms_seq_elm_struct_h[int_seq_ctr].child_sequence_rep_no == 0) 
   {
      int_val_ctr=0;      
      int_mprocessed = 0;
      while( int_val_ctr  < int_tot_val)
      {
         if( p_ms_val_elm_struct_h[int_val_ctr].identity_no  == p_ms_seq_elm_struct_h[int_seq_ctr].identity_no)
         {
            if( p_ms_val_elm_struct_h[int_val_ctr].REP_NO == int_curr_rep_no)
	    {
               if( p_ms_val_elm_struct_h[int_val_ctr].PAR_REP_NO == int_par_rep_no)
	       {
                 if(strcmp(p_ms_val_elm_struct_h[int_val_ctr].msg_tag,"PG") == 0 ||
                   strcmp(p_ms_val_elm_struct_h[int_val_ctr].msg_tag,"PGC") == 0 )
                 {
                   int_val_ctr++;
                   continue;
                 }
                 if(strncmp(p_ms_seq_elm_struct_h[int_seq_ctr].ind,"R",1) == 0)
                 {
                  strcpy(l_ms_val_elm_struct_ha[int_fin_ctr].msg_tag,p_ms_val_elm_struct_h[int_val_ctr].msg_tag);
                  strcpy(l_ms_val_elm_struct_ha[int_fin_ctr].h_data_val,p_ms_val_elm_struct_h[int_val_ctr].h_data_val);
                  l_ms_val_elm_struct_ha[int_fin_ctr].identity_no = p_ms_val_elm_struct_h[int_val_ctr].identity_no;
                  l_ms_val_elm_struct_ha[int_fin_ctr].head_cont_newline = p_ms_val_elm_struct_h[int_val_ctr].head_cont_newline;
                  l_ms_val_elm_struct_ha[int_fin_ctr].print_cd = p_ms_val_elm_struct_h[int_val_ctr].print_cd;
						
                  l_ms_val_elm_struct_ha[int_fin_ctr].srl_num = p_ms_val_elm_struct_h[int_val_ctr].srl_num;
                 }
                 else
                 {

                    for(int_nr_ctr=0;int_nr_ctr<int_fin_ctr;int_nr_ctr++)
                    {
						  
                      if(strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,p_ms_val_elm_struct_h[int_val_ctr].msg_tag) == 0 && l_ms_val_elm_struct_ha[int_nr_ctr].identity_no == p_ms_val_elm_struct_h[int_val_ctr].identity_no && l_ms_val_elm_struct_ha[int_nr_ctr].srl_num == p_ms_val_elm_struct_h[int_val_ctr].srl_num)
                      {
                         strcpy(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,p_ms_val_elm_struct_h[int_val_ctr].msg_tag);
                         strcpy(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,p_ms_val_elm_struct_h[int_val_ctr].h_data_val);
                         l_ms_val_elm_struct_ha[int_fin_ctr].identity_no = p_ms_val_elm_struct_h[int_val_ctr].identity_no;
                         l_ms_val_elm_struct_ha[int_fin_ctr].head_cont_newline = p_ms_val_elm_struct_h[int_val_ctr].head_cont_newline;
                         l_ms_val_elm_struct_ha[int_fin_ctr].print_cd = p_ms_val_elm_struct_h[int_val_ctr].print_cd;
						
                  		 l_ms_val_elm_struct_ha[int_fin_ctr].srl_num = p_ms_val_elm_struct_h[int_val_ctr].srl_num;
                         int_fin_ctr--; 
                         break;
                      }

                    }
                    if(int_nr_ctr == int_fin_ctr)
                    {
                      strcpy(l_ms_val_elm_struct_ha[int_fin_ctr].msg_tag,p_ms_val_elm_struct_h[int_val_ctr].msg_tag);
                      strcpy(l_ms_val_elm_struct_ha[int_fin_ctr].h_data_val,p_ms_val_elm_struct_h[int_val_ctr].h_data_val);
                      l_ms_val_elm_struct_ha[int_fin_ctr].identity_no = p_ms_val_elm_struct_h[int_val_ctr].identity_no;
                      l_ms_val_elm_struct_ha[int_fin_ctr].head_cont_newline = p_ms_val_elm_struct_h[int_val_ctr].head_cont_newline;
                      l_ms_val_elm_struct_ha[int_fin_ctr].print_cd = p_ms_val_elm_struct_h[int_val_ctr].print_cd;
						
                  	 l_ms_val_elm_struct_ha[int_fin_ctr].srl_num = p_ms_val_elm_struct_h[int_val_ctr].srl_num;
						
                    }
                 }
                 
                  int_fin_ctr++;
                  l_ms_val_elm_struct_h_t = l_ms_val_elm_struct_ha = (MS_VAL_ELM_STRUCT_H *)realloc(l_ms_val_elm_struct_ha,sizeof(MS_VAL_ELM_STRUCT_H)*(int_fin_ctr+1));

                  int_mprocessed = 1;
               }
               else
               {
                  if( !int_childex) 
		  {
                     int_mprocessed = 0;
                     break;
                  }
                
                }
            }
          }
          int_val_ctr++;
      }
      if( !int_mprocessed )
      {
         MS_Rtv_ParentSeq(p_ms_seq_elm_struct_h[int_seq_ctr].par_seqno,int_tot_seq,p_ms_seq_elm_struct_h,&int_l_parent);
         int_seq_ctr  = int_l_parent;
         if( int_seq_ctr == -1) 
         {
            break;
         }
      }
      else
         p_ms_seq_elm_struct_h[int_seq_ctr].sequence_rep_no = p_ms_seq_elm_struct_h[int_seq_ctr].sequence_rep_no + 1;
      
    }
    MS_Rtv_ChildSeq(p_ms_seq_elm_struct_h[int_seq_ctr].identity_no,p_ms_seq_elm_struct_h[int_seq_ctr].child_sequence_rep_no ,
             p_ms_seq_elm_struct_h,int_tot_seq, &int_l_child);

    if( int_l_child >= 0)
    {
       p_ms_seq_elm_struct_h[int_seq_ctr].child_sequence_rep_no++; 
       int_seq_ctr = int_l_child;
       int_childex = 1;
    }
    else
    {
       if( int_l_child == -1)
       {
          p_ms_seq_elm_struct_h[int_seq_ctr].child_sequence_rep_no = 0;
          int_childex = 1;
       }
       else
          int_childex = 0;
       
    } 
    
} 

for(int_nr_ctr=0;int_nr_ctr<int_fin_ctr;int_nr_ctr++)
{
		/*** SKIP TAVI BLOCK  **/
l_print_var = 1; //Added by Hardik		
/* Below code commened by Hardik for ISKB_9714, Below code doesn't allow to print from srl_num 63 to 74 from the ctl */
/*	if (
			(
			 (strcmp(chr_p_msgno_a,"535") == 0 ) &&
			 (l_ms_val_elm_struct_ha[int_nr_ctr].srl_num >= 63 ) &&
			 (l_ms_val_elm_struct_ha[int_nr_ctr].srl_num <= 74 )
			)
			||
			(
			 (strcmp(chr_p_msgno_a,"535B") == 0 ) &&
			 (l_ms_val_elm_struct_ha[int_nr_ctr].srl_num >= 67 ) &&
			 (l_ms_val_elm_struct_ha[int_nr_ctr].srl_num <= 78 )
			)
		)
	{
		l_print_var = 0;
	}
	else
	{
		l_print_var = 1;
	}	
		
*/
/* Below code commened by Hardik for ISKB_9714, Below code doesn't allow to print from srl_num 63 to 74 from the ctl */

   if((p_swftlx == 'S') || (p_swftlx=='B'))
   {
		if(strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"20C")== 0 && strncmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,":SEME//",7) == 0)
		{
		strcpy(chr_l_uniq_seme_refno,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val+7);
		}
         if(l_ms_val_elm_struct_ha[int_nr_ctr].head_cont_newline != 'N')
         {
			
				if(strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"19A")== 0 && strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,":HOLS//") == 0)
					continue;
				else
				{
				if ((int_flg_535_535b==0) && (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"16R") == 0 ) && (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,"ADDINFO") == 0))
				{
					strcpy(chr_l_tag,l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag);
					strcpy(chr_l_dataval,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
					int_nr_ctr++;
         		if ((strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"70E") == 0) || (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"70F") == 0) )
					{
						l_70EFlag = 1;
						fprintf(msg,":%s:%s\n",chr_l_tag,chr_l_dataval);
						fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
					}
					else if  ((!strncmp(chr_p_msgno_a,"564",3)) || (!strncmp(chr_p_msgno_a,"567",3)) || (!strncmp(chr_p_msgno_a,"566",3)) || (!strncmp(chr_p_msgno_a,"568",3))) 
					{
						fprintf(msg,":%s:%s\n",chr_l_tag,chr_l_dataval);	
						fprintf(msg,"%s%s\n",MEOR_MACRO,l_mt_message_sys_params_struct_h.swift_cd);
					if ((p_priority != '1') && (strcmp(p_mere_biccode,APL_NULL_STRING)))
							fprintf(msg,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
						fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
					}
					else if (strcmp(p_mere_biccode,APL_NULL_STRING) && (p_priority !='1'))
					{
						fprintf(msg,":%s:%s\n",chr_l_tag,chr_l_dataval);
						fprintf(msg,"%s%s\n",MERERR_MACRO,p_mere_biccode);
						fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
					}
				}
      		else if ( (int_flg_535_535b == 0) && (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"16S") == 0 ) && (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,"ADDINFO") == 0)  ) 
					{
				 	if ( (l_70EFlag == 1) && ((!strncmp(chr_p_msgno_a,"564",3)) || (!strncmp(chr_p_msgno_a,"567",3)) || (!strncmp(chr_p_msgno_a,"566",3)) || (!strncmp(chr_p_msgno_a,"568",3))))
					{
						fprintf(msg,"%s%s\n",MEOR_MACRO,l_mt_message_sys_params_struct_h.swift_cd);
					if ((p_priority != '1') && (strcmp(p_mere_biccode,APL_NULL_STRING)))
						fprintf(msg,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
						fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
					}
					else
					{
						fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
					} 
				}
      else if ((strncmp(chr_p_msgno_a,"535",3) == 0) && (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"16R")== 0 ) && (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,"ADDINFO") == 0))
           {
					if (!strcmp(chr_p_msgno_a,"535A"))
					{					
                  	if ((p_priority != '1') && (strcmp(p_mere_biccode,APL_NULL_STRING)))
                  	{
                     	fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
                        	fprintf(msg,"%s%s\n",MERERR_MACRO,p_mere_biccode);
                     	int_flg_addinfo = 1;
                  	}
							else
								int_nr_ctr++;
					}
					else
					{
					
							int_nr_ctr++;
							if (((p_priority != '1') 
								&& (strcmp(p_mere_biccode,APL_NULL_STRING))) ||
								 ((strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"19A")== 0 ) &&
								(strncmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,":HOLP//",7) == 0)))
                    	 		fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr-1].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr-1].h_data_val);
							if (p_priority != '1') 
							{
								printf("PRIORITY MERE IS +++++++ %s \n",p_mere_biccode);
								if (strcmp(p_mere_biccode,APL_NULL_STRING))
								{
                    		  fprintf(msg,"%s%s\n",MERERR_MACRO,p_mere_biccode);
								}
							}
							printf("NR_CTR NR_CTR +++++++ %s \n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag);
							printf("MERE IS +++++++ %s \n",p_mere_biccode);
     						if  ((strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"19A")== 0 ) &&
							 		(strncmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,":HOLP//",7) == 0))
							{
                    	 	fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
							} 
							else  if ((p_priority != '1') && (strcmp(p_mere_biccode,APL_NULL_STRING)))
                    		fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
                     int_flg_addinfo = 1;
					}
               int_flg_535_535b = 1;
           }
            else if ( ((strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"16R")== 0) || (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,"16S") == 0) ) && (strcmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,"OTHRPRTY")==0))
           	{
				
					if (p_priority != '1')
					{
						 
						if(strcmp(p_mere_biccode,APL_NULL_STRING))
						{
							fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
							fprintf(msg,"%s%s\n",MERERR_MACRO,p_mere_biccode);
							int_nr_ctr++;
							fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
						}
						int_flg_addinfo = 1;
					}
				}
			else
				{
					if(l_print_var == 1) /*  TUX  */
						fprintf(msg,":%s:%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].msg_tag,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
				}
			}
		}
		else
			{
				if(l_print_var == 1) /*  TUX */
					fprintf(msg,"%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
			}
	}		
	else
	{
		if(l_print_var == 1) /*  TUX */
			fprintf(msg,"%s\n",l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
		/*Start - ISKB999 - To Update Swift ID in MS_MSGLOG for Email Msg - Rahul - 18Mar2008 */
		if((p_swftlx == 'E') && strncmp(l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val,"OUR REFERENCE:",14) == 0)
		{
			printf("\nRahul : Fetch SEME to for Email Messages\n");
			strcpy(chr_l_uniq_seme_refno,l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val+14);
			printf("Rahul : Swift ID going to update in MS_MSGLOG |%s|\n",l_ms_val_elm_struct_ha[int_nr_ctr].h_data_val);
		}
		/*End - ISKB999 - To Update Swift ID in MS_MSGLOG for Email Msg - Rahul - 18Mar2008 */
	}
}

   



 
   

strcpy(p_uniq_seme_ident,chr_l_uniq_seme_refno);

int_clsstat = fclose(msg);
if( int_clsstat == 0)
 int_fnoopen--;
free(l_ms_val_elm_struct_h_t);
return APL_SUCCESS;
} 


int MS_Rtv_ChildSeq(int p_seq_no, int p_child_rep_no,MS_SEQ_ELM_STRUCT_H *p_ms_seq_elm_struct_h,int p_tot_seq,
             int *p_child) 
{
int int_seq_ctr=0, int_l_child_no; 
*p_child = -2;
int_l_child_no = 1;
while( int_seq_ctr <= p_tot_seq)
{
   if( p_ms_seq_elm_struct_h[int_seq_ctr].par_seqno == p_seq_no)
   {
      *p_child = -1;
      if( int_l_child_no > p_child_rep_no)
      {
         *p_child = int_seq_ctr;
         break;
      }
      else
         int_l_child_no++;
      
   }
   int_seq_ctr++;
}

return APL_SUCCESS;
}

int MS_Rtv_ParentSeq(int p_seq_no,int p_tot_seq,MS_SEQ_ELM_STRUCT_H *p_ms_seq_elm_struct_h,int *p_parent)
{
int int_seq_ctr=0; 
*p_parent = -1; 

	while( int_seq_ctr < p_tot_seq)
	{
   	     if( p_ms_seq_elm_struct_h[int_seq_ctr].identity_no == p_seq_no)
             {
         	*p_parent = int_seq_ctr;
         	break;
   	     }
   	     int_seq_ctr++;
	}  

return APL_SUCCESS;
}

int MS_Proc_SWFTForm(char *chr_p_val,char *f_val) //AIX - Warnings Removal
{
   char chr_fchar[7],chr_l_val[16],chr_l_dec[16];
   int  int_slen=0,i=0,j=0,int_dec_len=0;
   char *chr_lpos = NULL;
   char *chr_l_pos_t = NULL;

   chr_l_pos_t = chr_lpos = (char *)calloc(15,sizeof(char));
	APL_MALLOC_FAIL_LOC(chr_lpos);

   memset(chr_l_val,'\0',16);
   memset(chr_l_dec,'\0',16);

   strncpy(chr_l_val,chr_p_val,15);
   
	chr_l_val[strlen(chr_l_val)] = APL_NULL_CHAR;


   chr_lpos = strchr(chr_l_val,'.');

   if(chr_lpos == NULL)
      int_slen = strlen(chr_p_val);
   else
   {
      int_slen = chr_lpos-chr_l_val;
   }


  /* sprintf(chr_fchar,"%s%2ds,","%.",int_slen);*/ // Commented By Santhoshi For AIX Migration
   sprintf(chr_fchar,"%s%d%s","%.",int_slen,"s,");
   sprintf(f_val,chr_fchar,chr_l_val);
   if(chr_lpos != NULL)
   {

     if(atoi(chr_lpos+1) == 0)
	{
		strcpy(chr_l_dec,"");
	}
     else
	{
        	strcpy(chr_l_dec,chr_lpos+1);
	}
   }

   if (int_slen < strlen(chr_l_val))
   {
       
       	strcat(f_val,chr_l_dec);
       
   }

   int_dec_len = strlen(f_val) - 1;
   while(int_dec_len > 0)
   {
      if(f_val[int_dec_len] != '0')
	break;
      else
	f_val[int_dec_len] = '\0';
      int_dec_len--;
   }
	free(chr_l_pos_t);

return APL_SUCCESS;
}
