

   
   
   
   
   
   
   
   
   
   
   
   


#include "CR_Common.h"
#include "CA_Common.h"
#include "CO_Commdef.h"

EXEC SQL INCLUDE SQLCA.H;



#define	S_SRL_NBR_LEN  			3
#define	PYMT_SEQ_NAME				"PAYMENT_SRL_NBR"
#define	S_CLI_FLAG				'C'



static	int 	CA_Mod_PymtNew( 	CA_CACHEQUE_STRUCT_H  *p_ca_cacheque_struct_h_d,
					                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
		      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
      	           				);

static	int 	CA_PymtChg(CA_CACHEQUE_STRUCT_H  *p_ca_cacheque_struct_h_d,
					                INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				        	 DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 					);

static	int 	CA_PymtReverse(	CA_CACHEQUE_STRUCT_H  *p_ca_cacheque_struct_h_d,
					           	      INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	     		 				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
         	         				);

static	int 	CA_Mod_PymtDel( 	CA_CACHEQUE_STRUCT_H  *p_ca_cacheque_struct_h_d,
					         	      INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      					   	   DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
            	      			);

static	int 	CA_CheckPayment(	CA_CACHEQUE_STRUCT_H	*p_ca_cacheque_struct_h_d, 
				      			   CA_CHK_DET_STRUCT_H		*p_ca_chk_det_struct_h,	
										DEBUG_INFO_STRUCT_H 	      **l_debug_info_ptr
										);
static	int	CA_MandDataChk( CA_CACHEQUE_STRUCT_H  *p_ca_cacheque_struct_h_d,
 				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
            			         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 				);



int CA_ModPymt(  CA_CACHEQUE_STRUCT_H    *p_ca_cacheque_struct_h_d,
                     INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
                     DEBUG_INFO_STRUCT_H         **l_debug_info_ptr,
					 char                     *chr_p_param_str
                  )

{
		struct	sqlca	sqlca;
		unsigned int int_gp_count=0;
		char chr_sys_sts_auth[APL_STATUS_LEN] ={APL_STS_AUTH};


   int int_h_no_rec=0;
   char chr_h_redenom_type[EVT_CLASS_]           =  {EVT_REDOM};
	//Changes done by Sunny for CS0020637  start

        int length=0;
	char l_event_type[3]=APL_NULL_STRING;
	short i_l_event_type=0;
	char l_instr_code[APL_INSTRUMENTCODE_LEN]=APL_NULL_STRING;
	int int_h_count=0;
	char access_stamp[APL_DATE_LEN];
	char maker_checker_dt[APL_DATE_LEN];
	int		int_decimal_len;
	double   round_inc_val=0.0;
	double instr_inc_bal = 0.0;
	char		*int_pos;
	short int_ret_val			=	0;
	
	memset(l_event_type,APL_NULL_CHAR,3);
	
    if(!strcmp(p_intlenv_data_struct_h->subprocess,"API"))
	{
		memset(l_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
		CO_Rtv_DataString(chr_p_param_str,"INSTR_CODE",l_instr_code);
		CO_Rtv_DataString(chr_p_param_str,"CA_EVENT",l_event_type);
		Alert("\nInstrument Code : |%s|\n",l_instr_code);
		Alert("Event Type : |%s|\n",l_event_type);
		
		if((strcmp(l_event_type,"BI")!=0 && strcmp(l_event_type,"RD")!=0))
		{
			CO_InsertErr(        l_debug_info_ptr,
							ERR_EVT_TYP_NOT_BI_RD,
                                  APL_NULL_STRING,
                                   APL_NULL_STRING,
                                   APL_NULL_STRING,
                                    __LINE__,
                                    __FILE__
                        );
        APL_GOBACK_FAIL
		}
		
		EXEC SQL SELECT CORP_ID INTO :p_ca_cacheque_struct_h_d->h_corp_id FROM 
		(SELECT CORP_ID FROM CAEVENT WHERE INSTR_CODE = :l_instr_code AND CA_EVENT = :l_event_type AND DATEOF_PAYMENT BETWEEN TO_DATE(:p_ca_cacheque_struct_h_d->h_pymt_dt,'DD/MM/YYYY HH24:MI:SS')-8 AND TO_DATE(:p_ca_cacheque_struct_h_d->h_pymt_dt,'DD/MM/YYYY HH24:MI:SS')+8 AND STATUS IN ('RE','RP','PP') ORDER BY DECLARE_DT DESC, SUBSTR(CORP_ID, -1) DESC) WHERE ROWNUM = 1;
		Alert("code %d\n",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
		if(sqlca.sqlcode == 1403)
    	{
	    	CO_InsertErr(        l_debug_info_ptr,
							ERR_NO_EXST_CORP,
                                  APL_NULL_STRING,
                                   APL_NULL_STRING,
                                   APL_NULL_STRING,
                                    __LINE__,
                                    __FILE__
                        );
            APL_GOBACK_FAIL
	    }	
		Alert("Corp id retreived 1 |%s|\n",p_ca_cacheque_struct_h_d->h_corp_id);
		
		if	(	CO_Chk_AccValid(p_ca_cacheque_struct_h_d->h_dl_client,
								APL_YES_FLAG,
								NULL,
								NULL,
								NULL,
								NULL,	
								NULL,	
								NULL,
								NULL,	
								l_debug_info_ptr
								)	==	APL_FAILURE
			 )
			{
					APL_GOBACK_FAIL
			}
		
		
		Alert("After validation Comment");

		EXEC SQL SELECT DEC_LEN
	    INTO :int_decimal_len
	    FROM DL_CURRENCY
	    WHERE CURRENCY_CD =:p_ca_cacheque_struct_h_d->h_pymt_currency;
		
		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_CCY_NOTFND,p_ca_cacheque_struct_h_d->h_pymt_currency,APL_NULL_STRING,APL_NULL_STRING)
		
		CO_Round(p_ca_cacheque_struct_h_d->h_curr_pymt,
			  int_decimal_len,
			  &round_inc_val);			  	
	    Alert("curr payment = (%lf)\n",round_inc_val);
		EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_h_count FROM CAENTITLEMENT
		WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id AND CLIENT = :p_ca_cacheque_struct_h_d->h_dl_client;
		IS_ANY_ORA_ERROR
		Alert("existence of entitlement for corp id |%s| is |%d|\n",p_ca_cacheque_struct_h_d->h_corp_id,int_h_count);
		if(int_h_count==0)
		{
			char  chr_l_audit_data[4000] 	= APL_NULL_STRING;
			char  chr_l_data_key[4000] 		= APL_NULL_STRING;
			char  chr_p_param_str_corp_id[150]             = APL_NULL_STRING;
	        char  chr_l_corp_id[21]                     = APL_NULL_STRING;
			strcpy(chr_l_audit_data,APL_NULL_STRING);
	        strcpy(chr_l_data_key,APL_NULL_STRING);
			strcpy(chr_l_corp_id,p_ca_cacheque_struct_h_d->h_corp_id);
			sprintf(chr_p_param_str_corp_id,"%c%s%c%s%c%s%c%s%c%s%c%s%c",DATA_FIELD_SEPRTR,"CORP_ID",DATA_VALUE_SEPRTR,chr_l_corp_id,DATA_FIELD_SEPRTR,"INSTR_CODE",DATA_VALUE_SEPRTR,l_instr_code,DATA_FIELD_SEPRTR,"CA_EVENT",DATA_VALUE_SEPRTR,l_event_type,DATA_FIELD_SEPRTR);
			strcat(chr_p_param_str,chr_p_param_str_corp_id);
			strcpy(p_intlenv_data_struct_h->processtion,"CAENTITLEMENT");
			int_ret_val = CO_PopulateAuditString("CAENTITLEMENT",chr_p_param_str,chr_l_audit_data,chr_l_data_key);
			if((strcmp(chr_l_audit_data,APL_NULL_STRING)!=0) && (strcmp(chr_l_data_key,APL_NULL_STRING)!=0))
		    {
	            if ( APL_FAILURE==CO_Upd_AudLog_Chk_SysOnline(p_intlenv_data_struct_h,chr_l_audit_data,chr_l_data_key,"RECORD ADDED THROUGH CSGL",l_debug_info_ptr))
		        {		
                    CO_ProcMonitor(APL_OUT_FILE,"Returned from CO_Upd_AudLog_Chk_SysOnline as FAILURE\n",NULL,p_intlenv_data_struct_h);
		        }
			}
			strcpy(p_intlenv_data_struct_h->processtion,"CACHEQUE");
			if (CO_RtvSysDtTime(access_stamp,l_debug_info_ptr) == APL_FAILURE)
			{
				Alert("Failed in CO_rtvsysdttime\n");
				APL_GOBACK_FAIL
			}
			strcpy(maker_checker_dt,strtok_r(access_stamp," ",&int_pos));
			strcat(maker_checker_dt,APL_NULL_TIME);
			
			EXEC SQL INSERT INTO CAENTITLEMENT(CORP_ID,CLIENT,ELIG_ENTITL_POS,CCY_FOR_ENTITL,INSTR_INC_BAL,STATUS,PROCESSED_DATE,MAKER,MAKER_DT,CHECKER,CHECKER_DT,ACCESS_STAMP,FRACT_DUE,RECEIVED_AMT,QUANTITY_BAL,QUANTITY_RECEIVED,CUSTODYTAX_RATE,FRACT_RCVD) 
			VALUES(:p_ca_cacheque_struct_h_d->h_corp_id,:p_ca_cacheque_struct_h_d->h_dl_client,:p_ca_cacheque_struct_h_d->h_quantity_paid,:p_ca_cacheque_struct_h_d->h_pymt_currency,:round_inc_val,
			:p_ca_cacheque_struct_h_d->h_pymt_stat,:p_ca_cacheque_struct_h_d->h_stat_date,'CSGL',:maker_checker_dt,'SYSTEM',:maker_checker_dt,:access_stamp,0,0,0,0,0,0);
            IS_ANY_ORA_ERROR		

            EXEC SQL UPDATE CAEVENT CA SET (AMOUNT_BAL,ENTL_CLT_CNT,FRACT_QTY_BAL,CORP_ID) = (SELECT SUM(GREATEST(CE.INSTR_INC_BAL,0)),NVL(COUNT(*),0),SUM(GREATEST(CE.FRACT_DUE,0)),CE.CORP_ID FROM CAENTITLEMENT CE
            WHERE CA.CORP_ID = CE.CORP_ID AND CE.CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id GROUP BY CE.CORP_ID),STATUS = 'RP' 
            WHERE EXISTS (SELECT 1 FROM CAENTITLEMENT CE WHERE CA.CORP_ID = CE.CORP_ID AND CE.CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id);
			IS_ANY_ORA_ERROR
		}else
		{
			EXEC SQL SELECT INSTR_INC_BAL INTO :instr_inc_bal FROM CAENTITLEMENT WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id AND CLIENT = :p_ca_cacheque_struct_h_d->h_dl_client;	
			IS_ANY_ORA_ERROR
			if(!APL_DOUBLE_EQUAL(p_ca_cacheque_struct_h_d->h_curr_pymt,instr_inc_bal))
			{
				EXEC SQL UPDATE CAENTITLEMENT SET INSTR_INC_BAL = :round_inc_val WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id AND CLIENT = :p_ca_cacheque_struct_h_d->h_dl_client;
				IS_ANY_ORA_ERROR
				
				EXEC SQL UPDATE CAEVENT SET (AMOUNT_BAL,CORP_ID) = (SELECT SUM(GREATEST(INSTR_INC_BAL,0)),CORP_ID FROM CAENTITLEMENT WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id GROUP BY CORP_ID)
				WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id ;
				IS_ANY_ORA_ERROR
			}
		}	
	}
	
	EXEC SQL SELECT CA_EVENT INTO :l_event_type:i_l_event_type FROM CAEVENT WHERE corp_id = :p_ca_cacheque_struct_h_d->h_corp_id ;
	IS_ANY_ORA_ERROR
	
	if(strcmp(l_event_type,"CD") !=0 && strcmp(p_intlenv_data_struct_h->subprocess,"GFU") ==0)
		{
			CO_InsertErr(        l_debug_info_ptr,
							ERR_NONCD_PAY_UPLD,
                                  APL_NULL_STRING,
                                   APL_NULL_STRING,
                                   APL_NULL_STRING,
                                    __LINE__,
                                    __FILE__
                        );
        APL_GOBACK_FAIL
		}
	
	
	

          if(!(APL_DOUBLE_EQUAL(p_ca_cacheque_struct_h_d->h_tax_rate,0)))
          {
		EXEC SQL SELECT DECODE (INSTR(:p_ca_cacheque_struct_h_d->h_tax_rate,'.'),'0','0',(LENGTH(:p_ca_cacheque_struct_h_d->h_tax_rate)-INSTR(:p_ca_cacheque_struct_h_d->h_tax_rate,'.'))) INTO :length
               FROM dual;
                  IS_ANY_ORA_ERROR
	  }
          if(length > 4)
          {
	   CO_InsertErr(l_debug_info_ptr,
							ERR_DECIMAL_LENGTH,
							 APL_NULL_STRING,
						   	APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
						  __FILE__);
			APL_GOBACK_FAIL				
           }
           //Changes done by Sunny for CS0020637  end		
	
	
	
 EXEC SQL VAR chr_h_redenom_type     is string;








		#ifdef	APL_THREADS
			APL_SET_CONTEXT
			EXEC SQL CONTEXT USE :my_ctx_local;
		#endif
		CO_ProcMonitor(APL_OUT_FILE,"Entered A_DbUpdPymtFn",NULL,p_intlenv_data_struct_h);



  

   EXEC SQL SELECT NVL(count(*),0)
   INTO :int_h_no_rec
   FROM CAEVENT
   WHERE corp_id=:p_ca_cacheque_struct_h_d->h_corp_id
   AND   CA_EVENT=:chr_h_redenom_type ;

   if ( ( int_h_no_rec != 0) )
      {
            CO_InsertErr(        l_debug_info_ptr,
											  ERR_REDN_EVNTPAY_MNT_NOTALLOWED,
                                   p_intlenv_data_struct_h->h_mode,
                                   APL_NULL_STRING,
                                   APL_NULL_STRING,
                                    __LINE__,
                                    __FILE__
                                    );
        APL_GOBACK_FAIL
      }





	
	
	EXEC SQL SELECT NVL(count(*),0)
	INTO :int_gp_count
	FROM CAGLPYMT
	WHERE corp_id=:p_ca_cacheque_struct_h_d->h_corp_id
	AND	stat_pymt <> :chr_sys_sts_auth
	AND	rownum < 2	;

	IS_ANY_ORA_ERROR

	if ( int_gp_count > 0 )
	{
		INSERT_GLOB_PYMT_WARNING_PAY
	}

	if ( CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS )
	{
		APL_GOBACK_FAIL
	}

fflush(APL_OUT_FILE);


	if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)	)	)
		{
			#	ifdef	SYS_DEBUG	
				fprintf(APL_OUT_FILE,"\nMode is INPUT \n");
			#	endif
			if (	CA_Mod_PymtNew(	p_ca_cacheque_struct_h_d,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
			else
					APL_GOBACK_SUCCESS
		}

		
	
	if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)	)	)
		{
			#	ifdef	SYS_DEBUG	
				fprintf(APL_OUT_FILE,"\nMode is MODIFY \n");
			#	endif

			if (	CA_PymtChg(	p_ca_cacheque_struct_h_d,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
					APL_GOBACK_SUCCESS
		}
	
		
	
	if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_REVERSE)	)	)
		{
			#	ifdef	SYS_DEBUG	
				fprintf(APL_OUT_FILE,"\nMode is REVERSE \n");
			#	endif
			if (	CA_PymtReverse(	p_ca_cacheque_struct_h_d,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
					APL_GOBACK_SUCCESS
		}


	

	if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE)	)	)
		{
			#	ifdef	SYS_DEBUG	
				fprintf(APL_OUT_FILE,"\nMode is DELETE \n");
			#	endif
			if (	CA_Mod_PymtDel(	p_ca_cacheque_struct_h_d,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
					APL_GOBACK_SUCCESS
		}

		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_ModPymt	successfully",NULL,p_intlenv_data_struct_h);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_ModPymt	unsuccessfully",NULL,p_intlenv_data_struct_h);
		Alert("\nLeaving flunked\n");
			return (APL_FAILURE);
		}
}



static	int CA_Mod_PymtNew(	CA_CACHEQUE_STRUCT_H 	*p_ca_cacheque_struct_h_d,
										INTL_ENV_DATA_STRUCT_H	*p_intlenv_data_struct_h,
							   		DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr
									)
{
	
	

	struct	sqlca	sqlca;
	PRO_GSEQNUM_STRUCT_H		*l_pro_gseqnum_struct_h					=	NULL;
	CA_CACHEQUE_STRUCT_I		*l_ca_cacheque_struct_ia		=	NULL;
   CA_CHK_DET_STRUCT_H			*l_ca_chk_det_struct_h		=	NULL;
   CA_CHK_DET_STRUCT_I			*l_ca_chk_det_struct_i		=	NULL;
	CA_CHK_PYMT_STRUCT_H		*l_ca_chk_pymt_struct_h		=	NULL;
	char		pro_sys_date[APL_DATE_LEN];
	int		int_date_diff;
	char		chr_str_eqv_srl_nbr[S_SRL_NBR_LEN];
	double	acredit_indual_posn=0;
	double	min_req_posn=0;
	int		int_retval=0;
	char		*int_pos;
	char chr_evt_status[MT_STATUS_LEN]; /* UAT Fix PJ */
	memset(chr_evt_status,APL_NULL_CHAR,MT_STATUS_LEN);

		#ifdef	APL_THREADS
			APL_SET_CONTEXT
			EXEC SQL CONTEXT USE :my_ctx_local;
		#endif

	CO_ProcMonitor(APL_OUT_FILE,"Entering CA_Mod_PymtNew",NULL,p_intlenv_data_struct_h);

	

	if	 (	CA_MandDataChk(	p_ca_cacheque_struct_h_d,
								p_intlenv_data_struct_h,
								l_debug_info_ptr
								) == APL_FAILURE
		 )
			{
				Alert("Failed in MandDataChk\n");
				APL_GOBACK_FAIL
			}

	
	

	l_ca_chk_det_struct_h=(CA_CHK_DET_STRUCT_H *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_H)	);
	APL_MALLOC_FAIL(l_ca_chk_det_struct_h) 

	l_ca_chk_det_struct_i=(CA_CHK_DET_STRUCT_I *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_I)	);
	APL_MALLOC_FAIL(l_ca_chk_det_struct_i) 

	l_ca_chk_pymt_struct_h=(CA_CHK_PYMT_STRUCT_H *)calloc( 1,sizeof(CA_CHK_PYMT_STRUCT_H)	);
    APL_MALLOC_FAIL(l_ca_chk_pymt_struct_h) 

	l_pro_gseqnum_struct_h=(PRO_GSEQNUM_STRUCT_H *)calloc( 1,sizeof(PRO_GSEQNUM_STRUCT_H) );
    APL_MALLOC_FAIL(l_pro_gseqnum_struct_h) 
	

	
	if  ( CA_RndPymt(p_ca_cacheque_struct_h_d,
					      l_debug_info_ptr
						  ) == APL_FAILURE
		 )
	{
				Alert("Failed in CA_RndPymt\n");
		APL_GOBACK_FAIL
	} 

	if	(	CA_CheckStatus( p_ca_cacheque_struct_h_d->h_corp_id,	
							   p_ca_cacheque_struct_h_d->h_dl_client,	
	   					   p_ca_cacheque_struct_h_d->h_loccode,	
				      		l_ca_chk_det_struct_h,	
				      		l_ca_chk_det_struct_i,	
								p_intlenv_data_struct_h,
								l_debug_info_ptr
								)		==	APL_FAILURE
		)
			{
				Alert("Failed in CA_CheckStatus\n");
				APL_GOBACK_FAIL
			}


	 
	

	if	(	CA_CheckPayment	(	p_ca_cacheque_struct_h_d,
									l_ca_chk_det_struct_h,
									l_debug_info_ptr
								)	==	APL_FAILURE
			)
				{
				Alert("Failed in CA_CheckPayment\n");
					APL_GOBACK_FAIL
				}
	
		/* UAT Fix PJ */
		
		/*** SGS EXEC SQL SELECT STATUS INTO :chr_evt_status FROM CAEVENT WHERE CORP_ID = (SELECT ATTACH_CORP_ID FROM CAEVENT WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id AND PRIORITY > 1);	**/
		EXEC SQL SELECT STATUS INTO :chr_evt_status FROM CAENTITLEMENT WHERE CORP_ID = (SELECT ATTACH_CORP_ID FROM CAEVENT WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id AND PRIORITY > 1) AND CLIENT = :p_ca_cacheque_struct_h_d->h_dl_client;	

		IS_ANY_ORA_ERROR
		
		if (!(APL_ZERO_RESULT_SET))
		{
			if(strcmp(chr_evt_status ,STATUS_MSG_PAID_CLSD))
			{
						CO_InsertErr(	l_debug_info_ptr,
											ERR_ATTACH_ENTITL_NOT_CLOSED,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__
										);
				Alert("Failed in Attach Event Payment status \n");
				APL_GOBACK_FAIL
			}
		}
	

		strcpy(l_ca_chk_pymt_struct_h->corp_id,p_ca_cacheque_struct_h_d->h_corp_id);
		strcpy(l_ca_chk_pymt_struct_h->client,p_ca_cacheque_struct_h_d->h_dl_client);
		l_ca_chk_pymt_struct_h->curr_pymt		=	p_ca_cacheque_struct_h_d->h_curr_pymt;
		l_ca_chk_pymt_struct_h->quantity_received		=	p_ca_cacheque_struct_h_d->h_quantity_recd;
			
		l_ca_chk_pymt_struct_h->quantity_paid		=	p_ca_cacheque_struct_h_d->h_quantity_paid;
			
		if		(CA_Chk_SumPymt(	l_ca_chk_pymt_struct_h,
								   		l_ca_chk_det_struct_h,
					            		p_intlenv_data_struct_h,
											l_debug_info_ptr
										)
				 		==	APL_FAILURE
				)
			{
				Alert("Failed in CA_ChkSumPymt\n");
				APL_GOBACK_FAIL
			}

	
        if(strcmp(p_intlenv_data_struct_h->subprocess,"API")){
		strcpy(l_pro_gseqnum_struct_h->sequencename,PYMT_SEQ_NAME);
		l_pro_gseqnum_struct_h->last_seqnum	=	99;	
		strcpy(l_pro_gseqnum_struct_h->seq_attrb_a,p_ca_cacheque_struct_h_d->h_corp_id);		
		strcpy(l_pro_gseqnum_struct_h->seq_attrb_b,p_ca_cacheque_struct_h_d->h_dl_client);		
		strcpy(l_pro_gseqnum_struct_h->seq_attrb_c,APL_NULL_STRING);
		
		Alert("\nCA_ID = %s\n",p_ca_cacheque_struct_h_d->h_corp_id); 
		Alert("\nACCOUNT = %s\n",p_ca_cacheque_struct_h_d->h_dl_client);		

		int_retval	=	(	CO_RtvNxtSeqNum(l_pro_gseqnum_struct_h,l_debug_info_ptr)	); 
		if	(	int_retval	==	APL_FAILURE	)
			{
				Alert("Failed in CO_rtvnxtseqnum\n");
				APL_GOBACK_FAIL
			}

		p_ca_cacheque_struct_h_d->h_pymt_srl_nbr	=	int_retval;	
		}
		
		#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"Payment Serial Number :(%d)\n",p_ca_cacheque_struct_h_d->h_pymt_srl_nbr);
		#	endif

	
	
			strcpy(p_ca_cacheque_struct_h_d->h_maker,p_intlenv_data_struct_h->usr);
			strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,APL_STATUS_UNAUTH);
			
	
	
	
	
      
	
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				Alert("Failed in CO_rtvsysdttime\n");
				APL_GOBACK_FAIL
			}
			strcpy(p_ca_cacheque_struct_h_d->h_access_stamp,pro_sys_date);
			strcpy(pro_sys_date,strtok_r(pro_sys_date," ",&int_pos));
			strcat(pro_sys_date,APL_NULL_TIME);
			strcpy(p_ca_cacheque_struct_h_d->h_maker_dt,pro_sys_date);
			if(strcmp(p_intlenv_data_struct_h->subprocess,"API")){
			strcpy(p_ca_cacheque_struct_h_d->h_stat_date,pro_sys_date);
			strcpy(p_ca_cacheque_struct_h_d->h_new_dt,pro_sys_date); 
			}
	
		#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n Status chr_date is %s  \n",p_ca_cacheque_struct_h_d->h_stat_date);
		#	endif
	
		#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nAccess Stamp is : %s %s\n",
						pro_sys_date,p_ca_cacheque_struct_h_d->h_access_stamp);
		#	endif

		
	
		l_ca_cacheque_struct_ia = (CA_CACHEQUE_STRUCT_I*)calloc(1,sizeof(CA_CACHEQUE_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_cacheque_struct_ia) 
		
		
			l_ca_cacheque_struct_ia->i_handoff_date		= -1;
			l_ca_cacheque_struct_ia->i_txn_indentity_no 		= -1;
			l_ca_cacheque_struct_ia->i_billdate				= -1;
			l_ca_cacheque_struct_ia->i_checker		=	-1;
			l_ca_cacheque_struct_ia->i_checker_dt	=	-1;
		
		
		
			if	(	!strlen(p_ca_cacheque_struct_h_d->h_loccode)	)
				{
					l_ca_cacheque_struct_ia->i_loccode	=	-1;
				}
	
			if	(	!strlen(p_ca_cacheque_struct_h_d->h_clt_pass_flg)	)
				{
					l_ca_cacheque_struct_ia->i_clt_pass_flg	=	-1;
				}
	
		Alert("\nBefore inserting = %s\n",p_ca_cacheque_struct_h_d->h_corp_id);
		Alert("\nAccount = %s\n",p_ca_cacheque_struct_h_d->h_dl_client);
		Alert("\nSrl No = %d\n",p_ca_cacheque_struct_h_d->h_pymt_srl_nbr);
		fflush(APL_OUT_FILE);
		//Changes done by Sunny for CS0020637  start
		if(!strcmp(p_intlenv_data_struct_h->subprocess,"GFU"))
		{
			l_ca_cacheque_struct_ia->i_checker		=	0;
		    l_ca_cacheque_struct_ia->i_checker_dt	=	0;
			strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_RDY_PYMT);
			strcpy(p_ca_cacheque_struct_h_d->h_checker,"SYSTEM");
		}
		//Changes done by Sunny for CS0020637  end
		if(!strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		{
			l_ca_cacheque_struct_ia->i_checker		=	0;
		    l_ca_cacheque_struct_ia->i_checker_dt	=	0;
			strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_RDY_PYMT);
			strcpy(p_ca_cacheque_struct_h_d->h_checker,"SYSTEM");
			strcpy(p_ca_cacheque_struct_h_d->h_checker_dt,pro_sys_date); 
			p_ca_cacheque_struct_h_d->h_net_amount = p_ca_cacheque_struct_h_d->h_curr_pymt;
		}

		EXEC SQL INSERT INTO CACHEQUE VALUES (:p_ca_cacheque_struct_h_d:l_ca_cacheque_struct_ia);
		# 	ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"\nattempting to insert record, checking for SQL l_debuglist\n");
		fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
		#	endif
		fflush(APL_OUT_FILE);
				
		strcpy(chr_str_eqv_srl_nbr,ltoa(p_ca_cacheque_struct_h_d->h_pymt_srl_nbr));
		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_PYMNT,
													 p_ca_cacheque_struct_h_d->h_corp_id,
													 p_ca_cacheque_struct_h_d->h_dl_client,
													 chr_str_eqv_srl_nbr 
													)

		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			APL_FREE(l_ca_chk_pymt_struct_h);
			APL_FREE(l_ca_cacheque_struct_ia);
			APL_FREE(l_pro_gseqnum_struct_h);
				
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_PymtNew successfully",NULL,p_intlenv_data_struct_h);
			fflush(APL_OUT_FILE);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			APL_FREE(l_ca_chk_pymt_struct_h);
			APL_FREE(l_ca_cacheque_struct_ia);
			APL_FREE(l_pro_gseqnum_struct_h);
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_PymtNew unsuccessfully",l_debug_info_ptr,p_intlenv_data_struct_h);
			return (APL_FAILURE);
		}
}		



static	int 	CA_PymtChg(CA_CACHEQUE_STRUCT_H    *p_ca_cacheque_struct_h_d,
							          INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      							 DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                 					)
{
	struct	sqlca	sqlca;
	CA_CACHEQUE_STRUCT_H		*l_ca_cachequeimg_struct_h	=	NULL;
	CA_CACHEQUE_STRUCT_I		*l_ca_cachequeimg_struct_i	=	NULL;
	CA_CACHEQUE_STRUCT_I		*l_ca_cacheque_struct_ia	=	NULL;
   CA_CHK_DET_STRUCT_H			*l_ca_chk_det_struct_h		=	NULL;
   CA_CHK_DET_STRUCT_I			*l_ca_chk_det_struct_i		=	NULL;
	CA_CHK_PYMT_STRUCT_H		*l_ca_chk_pymt_struct_h		=  NULL;
	char						 	rowid[APL_ROWID_LEN];
	char		pro_sys_date[APL_DATE_LEN];
	char		h_access_stamp[APL_DATE_LEN];
	short		i_access_stamp=0;	
	char		h_pymt_stat[APL_STATUS_LEN];
	short		i_pymt_stat=0;
	char		h_maker[APL_USERID_LEN];
	short		i_maker=0;
	int		int_date_diff=0;	
	char		chr_str_eqv_srl_nbr[S_SRL_NBR_LEN];
	double	acredit_indual_posn=0;
	double	min_req_posn=0;
	char		*int_pos;

		#ifdef	APL_THREADS
			APL_SET_CONTEXT
			EXEC SQL CONTEXT USE :my_ctx_local;
		#endif

		CO_ProcMonitor(APL_OUT_FILE,"Entered S_PaymentModify",NULL,p_intlenv_data_struct_h);
		
	if	 (	CA_MandDataChk(	p_ca_cacheque_struct_h_d,
								p_intlenv_data_struct_h,
								l_debug_info_ptr
							) == APL_FAILURE
		 )
				APL_GOBACK_FAIL

			
			
			(l_ca_cachequeimg_struct_h) = (CA_CACHEQUE_STRUCT_H*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_H));	
			APL_MALLOC_FAIL(l_ca_cachequeimg_struct_h) 
		
			(l_ca_cachequeimg_struct_i) = (CA_CACHEQUE_STRUCT_I*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_cachequeimg_struct_i) 

			(l_ca_cacheque_struct_ia) = (CA_CACHEQUE_STRUCT_I*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_cacheque_struct_ia) 

	
	

	l_ca_chk_det_struct_h=(CA_CHK_DET_STRUCT_H *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_H)	);
	APL_MALLOC_FAIL(l_ca_chk_det_struct_h) 


	l_ca_chk_det_struct_i=(CA_CHK_DET_STRUCT_I *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_I)	);
	APL_MALLOC_FAIL(l_ca_chk_det_struct_i) 

	l_ca_chk_pymt_struct_h=(CA_CHK_PYMT_STRUCT_H *)calloc( 1,sizeof(CA_CHK_PYMT_STRUCT_H)	);
			#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n about to select record based on corp_id :(%s)  \n client :(%s) \n pay serial no :(%d)",p_ca_cacheque_struct_h_d->h_corp_id,p_ca_cacheque_struct_h_d->h_dl_client,p_ca_cacheque_struct_h_d->h_pymt_srl_nbr); 
			#	endif

			

			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_corp_id is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_dl_client is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_pymt_inst is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_txn_indentity_no is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_loccode is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_maker is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_checker is string;
			
			

			
			

			strcpy(chr_str_eqv_srl_nbr,ltoa(p_ca_cacheque_struct_h_d->h_pymt_srl_nbr));

			
			
			EXEC SQL SELECT 	ROWID,
									CACHEQUE.*
 
			INTO					:rowid,
									:l_ca_cachequeimg_struct_h:l_ca_cachequeimg_struct_i
	 
			FROM CACHEQUE
 
        	WHERE CORP_ID=:p_ca_cacheque_struct_h_d->h_corp_id	AND
					CLIENT=:p_ca_cacheque_struct_h_d->h_dl_client	AND
					SEQNUM_PAY=:p_ca_cacheque_struct_h_d->h_pymt_srl_nbr 
   
	   	FOR UPDATE OF	CACHEQUE.STAT_PYMT;
		
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_PAYMNT_NOTFND_A,
																p_ca_cacheque_struct_h_d->h_corp_id,
																p_ca_cacheque_struct_h_d->h_dl_client,
																chr_str_eqv_srl_nbr
															 )	
		# ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"\nrow id is (%s)\n",rowid);
		fprintf(APL_OUT_FILE,"\n retreived caid is (%s)\n",l_ca_cachequeimg_struct_h->h_corp_id);
		fprintf(APL_OUT_FILE,"\n retreived client is (%s)\n",l_ca_cachequeimg_struct_h->h_dl_client);
		fprintf(APL_OUT_FILE,"\n retreived payment serial no. is (%d)\n",l_ca_cachequeimg_struct_h->h_pymt_srl_nbr);
		fprintf(APL_OUT_FILE,"\nOriginal maker is (%s)\n",l_ca_cachequeimg_struct_h->h_maker);
		fprintf(APL_OUT_FILE,"\nOriginal maker chr_date is (%s)\n",l_ca_cachequeimg_struct_h->h_maker_dt);
		# endif	

		
			# ifdef SYS_DEBUG
				fprintf(APL_OUT_FILE,"\nAbout to compare access stamps\n");
				fprintf(APL_OUT_FILE,"\n retreived access stamp is (%s)\n",l_ca_cachequeimg_struct_h->h_access_stamp);	
				fprintf(APL_OUT_FILE,"\n input access stamp is (%s)\n",p_ca_cacheque_struct_h_d->h_access_stamp);	
			#	endif			

        if(strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		{
		if (	
				strcmp(	p_ca_cacheque_struct_h_d->h_access_stamp,
							l_ca_cachequeimg_struct_h->h_access_stamp
						)
			)		
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}
		}else {
			strcmp(p_ca_cacheque_struct_h_d->h_access_stamp,l_ca_cachequeimg_struct_h->h_access_stamp);
		}

		
		

		if	(	strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,STATUS_CHNG_RDY_PYMT)	&&
				strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,STATUS_RDY_PYMT)	&&
				strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,APL_STATUS_UNAUTH)	
			)
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_PAYMNTSTS_INVALIDCHG,
									l_ca_cachequeimg_struct_h->h_pymt_stat,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}

		
	if  ( CA_RndPymt(p_ca_cacheque_struct_h_d,
					      l_debug_info_ptr
						  ) == APL_FAILURE
		 )
	{
		APL_GOBACK_FAIL
	} 
		

		
		
		

	if	(	CA_CheckStatus	(	p_ca_cacheque_struct_h_d->h_corp_id,
									p_ca_cacheque_struct_h_d->h_dl_client,
									p_ca_cacheque_struct_h_d->h_loccode,
									l_ca_chk_det_struct_h,
									l_ca_chk_det_struct_i,
									p_intlenv_data_struct_h,
									l_debug_info_ptr
								)	==	APL_FAILURE
			)
			APL_GOBACK_FAIL
		
			 
			
			

			if	(	CA_CheckPayment	(	p_ca_cacheque_struct_h_d,
											l_ca_chk_det_struct_h,
											l_debug_info_ptr
										)	==	APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}


	
	

		strcpy(l_ca_chk_pymt_struct_h->corp_id,p_ca_cacheque_struct_h_d->h_corp_id);
		strcpy(l_ca_chk_pymt_struct_h->client,p_ca_cacheque_struct_h_d->h_dl_client);
		l_ca_chk_pymt_struct_h->curr_pymt		=	( p_ca_cacheque_struct_h_d->h_curr_pymt -
														  l_ca_cachequeimg_struct_h->h_curr_pymt
														)
														;
		l_ca_chk_pymt_struct_h->quantity_received		=	( p_ca_cacheque_struct_h_d->h_quantity_recd -
														  l_ca_cachequeimg_struct_h->h_quantity_recd
														);
			
		l_ca_chk_pymt_struct_h->quantity_paid		=	( p_ca_cacheque_struct_h_d->h_quantity_paid -
														  l_ca_cachequeimg_struct_h->h_quantity_paid
														);
			

		if		(CA_Chk_SumPymt(	l_ca_chk_pymt_struct_h,
								   		l_ca_chk_det_struct_h,
					            		p_intlenv_data_struct_h,
											l_debug_info_ptr
										)
				 		==	APL_FAILURE
				)
			{
				APL_GOBACK_FAIL
			}

			

			
		//Changes done by Sunny for CS0020637  
		if	(	(!strcmp(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_RDY_PYMT)) && (strcmp(p_intlenv_data_struct_h->subprocess,"GFU")) )
		
		{
			if(strcmp(p_intlenv_data_struct_h->subprocess,"API")){
			EXEC SQL INSERT INTO CACHEQUEMG VALUES (:l_ca_cachequeimg_struct_h:l_ca_cachequeimg_struct_i);
	
		# ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"\nAbout to Image record , checking for SQL l_debuglist\n");
		fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
		# endif

		IS_ANY_ORA_ERROR_AND_DUPLICATE(	ERR_DUPLICATE_PYMNTIMG,
														l_ca_cachequeimg_struct_h->h_corp_id,
														l_ca_cachequeimg_struct_h->h_dl_client,
														chr_str_eqv_srl_nbr
													 )
		}	
		}
      
	
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}
			strcpy(p_ca_cacheque_struct_h_d->h_access_stamp,pro_sys_date);
			strcpy(pro_sys_date,strtok_r(pro_sys_date," ",&int_pos));
			strcat(pro_sys_date,APL_NULL_TIME);

		
		
			
		
		
		if	(	!strcmp(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_RDY_PYMT)	)	
		{	
	        if(strcmp(p_intlenv_data_struct_h->subprocess,"API"))
			strcpy(p_ca_cacheque_struct_h_d->h_stat_date,pro_sys_date);
			strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_CHNG_RDY_PYMT);
		}
	
		strcpy(p_ca_cacheque_struct_h_d->h_maker,p_intlenv_data_struct_h->usr);
		strcpy(p_ca_cacheque_struct_h_d->h_maker_dt,pro_sys_date);

		# ifdef SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nAccess Stamp is : %s %s\n",
						pro_sys_date,p_ca_cacheque_struct_h_d->h_access_stamp);
		# endif
	
		# ifdef SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n New Maker is (%s)\n",p_ca_cacheque_struct_h_d->h_maker);
		# endif
		
		
		
		
		(l_ca_cacheque_struct_ia) = (CA_CACHEQUE_STRUCT_I*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_cacheque_struct_ia) 
		
		l_ca_cacheque_struct_ia->i_checker		=	-1;
		l_ca_cacheque_struct_ia->i_checker_dt	=	-1;
		
		
		//Changes done by Sunny for CS0020637  start
		if(!strcmp(p_intlenv_data_struct_h->subprocess,"GFU"))
		{
		strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_RDY_PYMT);
		l_ca_cacheque_struct_ia->i_checker		=	0;
		l_ca_cacheque_struct_ia->i_checker_dt	=	0;
		
		strcpy(p_ca_cacheque_struct_h_d->h_checker,"SYSTEM");
		}
                //Changes done by Sunny for CS0020637  end
		if(!strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		{
			l_ca_cacheque_struct_ia->i_checker		=	0;
		    l_ca_cacheque_struct_ia->i_checker_dt	=	0;
			strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_RDY_PYMT);
			strcpy(p_ca_cacheque_struct_h_d->h_checker,"SYSTEM");
			strcpy(p_ca_cacheque_struct_h_d->h_checker_dt,pro_sys_date); 
			p_ca_cacheque_struct_h_d->h_net_amount = p_ca_cacheque_struct_h_d->h_curr_pymt;
		}

			if	(	!strlen(p_ca_cacheque_struct_h_d->h_loccode)	)
				{
					l_ca_cacheque_struct_ia->i_loccode	=	-1;
				}
			if	(	!strlen(p_ca_cacheque_struct_h_d->h_clt_pass_flg)	)
				{
					l_ca_cacheque_struct_ia->i_clt_pass_flg	=	-1;
				}
	

		

		if		(	CA_Mod_Pymt(	p_ca_cacheque_struct_h_d,
												l_ca_cacheque_struct_ia,
												rowid,
												l_debug_info_ptr
											) == APL_FAILURE
				)
					APL_GOBACK_FAIL
		

	
			APL_GOBACK_SUCCESS
			RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_cacheque_struct_ia);
			APL_FREE(l_ca_cachequeimg_struct_h);
			APL_FREE(l_ca_cachequeimg_struct_i);
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			APL_FREE(l_ca_chk_pymt_struct_h);
		
		CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_PymtChg successfully",NULL,p_intlenv_data_struct_h);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_cacheque_struct_ia);
			APL_FREE(l_ca_cachequeimg_struct_h);
			APL_FREE(l_ca_cachequeimg_struct_i);
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			APL_FREE(l_ca_chk_pymt_struct_h);
			
		CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_PymtChg unsuccessfully",NULL,p_intlenv_data_struct_h);
			return (APL_FAILURE);
		}
}



int 	CA_CheckStatus( char						*chr_p_ca_id,
							char						*chr_p_client,
							char						*p_loccode,
	      			   CA_CHK_DET_STRUCT_H		*p_ca_chk_det_struct_h,	
	      			   CA_CHK_DET_STRUCT_I		*p_ca_chk_det_struct_i,	
							INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
							DEBUG_INFO_STRUCT_H 			 **l_debug_info_ptr
							)
{
	struct	sqlca	sqlca;
	char		h_status[APL_STATUS_LEN]=APL_NULL_STRING;
	short		i_status=0;
	char		chr_h_acc_stat[APL_STATUS_LEN]=APL_NULL_STRING;
	short		i_acc_stat=0;
	char		h_res_instr_code[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short		i_res_instr_code=0;
	int		int_date_diff=0;
	char		h_loc_stat[APL_STATUS_LEN]=APL_NULL_STRING;
	short		i_loc_stat=0;
	int		int_error_ind	=APL_SUCCESS;
	int		int_sts_error_ind	=APL_SUCCESS;
	char		chr_op_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	char            chr_temp_op_event_type[3] = APL_NULL_STRING; 
        short           i_temp_op_event_type = 0;
	short		i_temp_conv_rate = 0; 
	char		h_checker_dt[APL_DATE_LEN] = APL_NULL_STRING;
	double          temp_conv_ae_rate = 0;
	double		temp_sub_cost = 0;
	double		temp_quantity_paid = 0;  
	short 		i_checker_dt=0;
	short 		i_temp_sub_price = 0; 

	double 	new_ent_quantity			=	0.00;
	double 	h_inc_due_fracredit_ind	=	0.00;
	double   round_val			= 	0.00;
	double   h_f_pr			= 	0.00;

	char		h_disp_of_fract[2] 	= 	APL_NULL_STRING;
	short		i_f_pr			=	0;	
	short		i_disp_of_fract		=	0;	

	short l_keep_fract_cond = 0;  
   char chr_l_keep_fract_flag = APL_NULL_CHAR;
   short i_keep_fract_flag = 0;
	char l_waitmsg[100];	//Retrofit by Kiran CA server down issue
	
	EXEC SQL VAR	p_ca_chk_det_struct_h->h_instr_code 	is string;
	EXEC SQL VAR	h_res_instr_code 							is string;
	EXEC SQL VAR	chr_h_acc_stat								is string;

	EXEC SQL VAR	p_ca_chk_det_struct_h->h_rec_date 	is string;
	EXEC SQL VAR   chr_temp_op_event_type               is string;  
	EXEC SQL VAR	h_disp_of_fract						 	is string;

	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	CO_ProcMonitor(APL_OUT_FILE,"Entered A_StsValidate",NULL,p_intlenv_data_struct_h);

	
	h_f_pr = 0.00;
	i_f_pr = 0;
	strcpy(h_disp_of_fract,APL_NULL_STRING);
	i_disp_of_fract = 0;

   

   if(CO_Chk_CntryEnabled(   "ENTL_GEN_RSLTINSTR",
                           "KEEP_FRACTION",
                           &l_keep_fract_cond,
                           l_debug_info_ptr) == APL_FAILURE)
   APL_GOBACK_FAIL

   if (l_keep_fract_cond > 0 )
   {

      EXEC SQL SELECT CLN_FRACT_IND INTO :chr_l_keep_fract_flag:i_keep_fract_flag
               FROM MT_CLIENT
               WHERE CLN_CODE = :chr_p_client;
      IS_ANY_ORA_ERROR
   }

   


        EXEC SQL SELECT OP_EVT_CLASS ,NEW_SAFEK_RT,SUB_PR,DISP_OF_FRACT,FRACT_PR INTO :chr_temp_op_event_type:i_temp_op_event_type,:temp_conv_ae_rate:i_temp_conv_rate,:temp_sub_cost:i_temp_sub_price,:h_disp_of_fract:i_disp_of_fract,:h_f_pr:i_f_pr FROM CAEVENT WHERE CORP_ID = :chr_p_ca_id;
		  IS_ANY_ORA_ERROR;

        Alert("\nOp To = %s\n",chr_temp_op_event_type);


	if (strcmp (chr_temp_op_event_type, "TO") != 0)
        {

			EXEC SQL SELECT
										NVL(INSTR_INC_BAL,0),							
										NVL(QUANTITY_BAL,0),							
										NVL(RECEIVED_AMT,0),
										NVL(QUANTITY_RECEIVED,0),
										NVL(ELIG_ENTITL_POS,0),
										STATUS	/*Smita - Changed Col Name - HDFCCA Base Ver*/
			INTO
										:p_ca_chk_det_struct_h->h_entl_instr_inc_bal:p_ca_chk_det_struct_i->i_entl_instr_inc_bal,
										:p_ca_chk_det_struct_h->h_entl_quantity_due:p_ca_chk_det_struct_i->i_entl_quantity_due,
										:p_ca_chk_det_struct_h->h_entl_amt_recd:p_ca_chk_det_struct_i->i_entl_amt_recd,
										:p_ca_chk_det_struct_h->h_entl_quantity_recd:p_ca_chk_det_struct_i->i_entl_quantity_recd,
									
										:p_ca_chk_det_struct_h->h_entitl_pos:p_ca_chk_det_struct_i->i_entitl_pos,
									
									
										:p_ca_chk_det_struct_h->h_entitl_stat:p_ca_chk_det_struct_i->i_entitl_stat
			FROM	CAENTITLEMENT
			WHERE 
						CORP_ID=:chr_p_ca_id 
			AND		CLIENT=:chr_p_client
			FOR UPDATE OF CAENTITLEMENT.STATUS NOWAIT;	//Retrofit by Kiran NOWAIT for CA server down issue
			
			/* Retrofit by Kiran CA server down issue - START */
			Alert("\n sqlca.sqlcode :%d \n ",sqlca.sqlcode);

			if(sqlca.sqlcode == -54)
			{
				sprintf(l_waitmsg,"Client:%s",chr_p_client);

										CO_InsertErr(l_debug_info_ptr,
										ERR_CA_ENTGEN_NOMOD_RPPP,
										l_waitmsg,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);

                                APL_GOBACK_FAIL

			}
			/* Retrofit by Kiran CA server down issue - END */

			#	ifdef	SYS_DEBUG
				fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
			#	endif
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET	(	ERR_ENTITLE_FORPYMNT_NOTFND,
																	APL_NULL_STRING,
																	APL_NULL_STRING,
																	APL_NULL_STRING
																)
	
				

			
			
			

			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)	||
					!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)	
				)	
				{

					if	(	strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_RDY_PYMT)	&&
							strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_PART_PAID)
						)
						{
							int_sts_error_ind	=	APL_FAILURE;
						}
				}

			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE)
				)	
				{

					if	(	strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_RDY_PYMT)	&&
							strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_PART_PAID)  &&
							strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_PENDING) 
						)
						{
							int_sts_error_ind	=	APL_FAILURE;
						}
				}
	
			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_AUTHORISE)	||
					!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_RESET)	
				)	
				{

					if	(	strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_RDY_PYMT)	&&
							strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_PART_PAID)	&&
							strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_MSG_PAID_CLSD) &&
							strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_PENDING) 
						)
						{
							int_sts_error_ind	=	APL_FAILURE;
						}
				}
			
			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_REVERSE)	
				)	
				{

					if	(	strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_PART_PAID)	&&
							strcmp(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_MSG_PAID_CLSD)
						)
						{
							int_sts_error_ind	=	APL_FAILURE;
						}
				}
				
			if	(	int_sts_error_ind	==	APL_FAILURE	)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_ENTITLESTS_INVALID,
										p_ca_chk_det_struct_h->h_entitl_stat,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					 int_error_ind = APL_FAILURE;
					 int_sts_error_ind = APL_SUCCESS;	
				}
	}

		#	ifdef	SYS_DEBUG
				fprintf(APL_OUT_FILE,"\nEntitlement is valid for payment\n");
		#	endif


/*Smita - Changes Col Name - HDFCCA_BaseVer*/
				EXEC SQL SELECT
									CA_EVENT,
									REC_DATE,
									NVL(NEW_SAFEK_QTY,0),
									NVL(OLD_STK_QTY,0),
									INSTR_CODE,
									RES_INSTR_CODE,
									NVL(AMOUNT_BAL,0),
									NVL(RECEIVED_AMT,0),
									NVL(QUANTITY_BAL,0),
									NVL(QUANTITY_RECEIVED,0),
									STATUS
			INTO
									:p_ca_chk_det_struct_h->h_evt_class:p_ca_chk_det_struct_i->i_evt_class,
									:p_ca_chk_det_struct_h->h_rec_date:p_ca_chk_det_struct_i->i_rec_date,
									:p_ca_chk_det_struct_h->h_new_safek_quantity:p_ca_chk_det_struct_i->i_new_safek_quantity,
									:p_ca_chk_det_struct_h->h_old_safek_quantity:p_ca_chk_det_struct_i->i_old_safek_quantity,
									:p_ca_chk_det_struct_h->h_instr_code:p_ca_chk_det_struct_i->i_instr_code,
									:h_res_instr_code:i_res_instr_code,
									:p_ca_chk_det_struct_h->h_evt_instr_inc_bal:p_ca_chk_det_struct_i->i_evt_instr_inc_bal,
									:p_ca_chk_det_struct_h->h_evt_amt_recd:p_ca_chk_det_struct_i->i_evt_amt_recd,
									:p_ca_chk_det_struct_h->h_evt_quantity_due:p_ca_chk_det_struct_i->i_evt_quantity_due,
									:p_ca_chk_det_struct_h->h_evt_quantity_recd:p_ca_chk_det_struct_i->i_evt_quantity_recd,
									:p_ca_chk_det_struct_h->h_evt_stat:p_ca_chk_det_struct_i->i_evt_stat
			FROM	CAEVENT
			WHERE 
						CORP_ID=:chr_p_ca_id;
			

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET	(	ERR_EVNT_FOR_PAYMNT_NOTFND,
																	APL_NULL_STRING,
																	APL_NULL_STRING,
																	APL_NULL_STRING
																)



			
			
			
	
			int_sts_error_ind = APL_SUCCESS;
		
			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)	||
					!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)	||
					!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_DELETE)
				)	
				{

					if	(	strcmp(p_ca_chk_det_struct_h->h_evt_stat,STATUS_RDY_PYMT)	&&
							strcmp(p_ca_chk_det_struct_h->h_evt_stat,STATUS_PART_PAID)
						)
						{
							int_sts_error_ind	=	APL_FAILURE;
						}
				}

			
			 

			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_AUTHORISE)	||
					!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_RESET)	
				)	
				{

					if	(	strcmp(p_ca_chk_det_struct_h->h_evt_stat,STATUS_RDY_PYMT)	&&
							strcmp(p_ca_chk_det_struct_h->h_evt_stat,STATUS_PART_PAID)	&&
							strcmp(p_ca_chk_det_struct_h->h_evt_stat,STATUS_MSG_PAID_CLSD)
						)
						{
							int_sts_error_ind	=	APL_FAILURE;
						}
				}
			
			
			 
			
			if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_REVERSE)	
				)	
				{

					if	(	strcmp(p_ca_chk_det_struct_h->h_evt_stat,STATUS_PART_PAID)	&&
							strcmp(p_ca_chk_det_struct_h->h_evt_stat,STATUS_MSG_PAID_CLSD)
						)
						{
							int_sts_error_ind	=	APL_FAILURE;
						}
				}
				
			if	(	int_sts_error_ind	==	APL_FAILURE	)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_EVNTSTS_INVALID,
										p_ca_chk_det_struct_h->h_evt_stat,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					int_error_ind = APL_FAILURE;
					int_sts_error_ind = APL_SUCCESS;	
				}

		#	ifdef	SYS_DEBUG
				fprintf(APL_OUT_FILE,"\nRetreived instr_code is (%s)\n",p_ca_chk_det_struct_h->h_instr_code);
				fprintf(APL_OUT_FILE,"\nEvent is valid for payment\n");
		#	endif
		
         if(strcmp(chr_temp_op_event_type,"TO") == 0)
         {
	         EXEC SQL SELECT SUM(SAFEKEEP_POS) INTO :p_ca_chk_det_struct_h->h_entitl_pos:p_ca_chk_det_struct_i->i_entitl_pos
	         FROM DL_SAFEK WHERE CLIENT = :chr_p_client
	              AND INSTR_CODE = :p_ca_chk_det_struct_h->h_instr_code
	              AND SAFEKEEP_POS > 0
	         GROUP BY CLIENT,INSTR_CODE;
	
	         IS_ANY_ORA_ERROR
	
				temp_quantity_paid = 0;
	
	         EXEC SQL SELECT SUM(QUANTITY_RECEIVED),SUM(CURR_PYMT),SUM(QUANTITY_PAID)
	         INTO :p_ca_chk_det_struct_h->h_entl_quantity_recd:p_ca_chk_det_struct_i->i_entl_quantity_recd,
	              :p_ca_chk_det_struct_h->h_entl_amt_recd:p_ca_chk_det_struct_i->i_entl_amt_recd,
					  :temp_quantity_paid
	         FROM CACHEQUE
	         WHERE CLIENT = :chr_p_client
	         AND CORP_ID = :chr_p_ca_id
	         AND STAT_PYMT IN ('CP','RU')
	         GROUP BY CLIENT,CORP_ID;
	
	         IS_ANY_ORA_ERROR
	         if(sqlca.sqlcode == 1403)
	         	strcpy(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_RDY_PYMT);
	         else
	            strcpy(p_ca_chk_det_struct_h->h_entitl_stat,STATUS_MSG_PAID_CLSD);
	
				p_ca_chk_det_struct_h->h_entitl_pos = p_ca_chk_det_struct_h->h_entitl_pos + temp_quantity_paid;
	         if(i_res_instr_code != -1)
	         {
	         	if(temp_conv_ae_rate !=0 )
	            {
	            	temp_conv_ae_rate = temp_conv_ae_rate/100;
	
	               p_ca_chk_det_struct_h->h_entl_quantity_due = p_ca_chk_det_struct_h->h_entitl_pos * temp_conv_ae_rate;
	
	            }
	            else
	            {
	               p_ca_chk_det_struct_h->h_entl_quantity_due = p_ca_chk_det_struct_h->h_new_safek_quantity * p_ca_chk_det_struct_h->h_entitl_pos/p_ca_chk_det_struct_h->h_old_safek_quantity;
	
	
	            }
	         }
	         else
	             p_ca_chk_det_struct_h->h_entl_quantity_due = 0;
				
				Alert("Sub Price = %f",temp_sub_cost);
	
	         if(temp_sub_cost != 0)
	         {
				Alert("entitl_inc_due= %lf",p_ca_chk_det_struct_h->h_entl_instr_inc_bal);
	         	p_ca_chk_det_struct_h->h_entl_instr_inc_bal = p_ca_chk_det_struct_h->h_entitl_pos * temp_sub_cost;
				Alert("entitl_inc_due= %lf",p_ca_chk_det_struct_h->h_entl_instr_inc_bal);
				Alert("p_val_dtls_struct_h->h_entitl_pos = %lf",p_ca_chk_det_struct_h->h_entitl_pos);
	         }
	         else
	            p_ca_chk_det_struct_h->h_entl_instr_inc_bal = 0;
				
				 
	          new_ent_quantity=0.00;
				 h_inc_due_fracredit_ind=0.00;
				 round_val=0.00;

	          EXEC SQL SELECT TRUNC(:p_ca_chk_det_struct_h->h_entl_quantity_due) INTO :new_ent_quantity FROM DUAL;
	          IS_ANY_ORA_ERROR
	
	         if((p_ca_chk_det_struct_h->h_entl_quantity_due - new_ent_quantity) > 0)
	         {
	            if (!strcmp(h_disp_of_fract,FRACT_DISP_RNDOFF))
	            {
	               h_inc_due_fracredit_ind = 0;
	               p_ca_chk_det_struct_h->h_entl_quantity_due = (new_ent_quantity + 1) ;
	            }
	
	            else if (!strcmp(h_disp_of_fract,CASH_IND))
	            {
	               round_val=0.0;
	
	            	CR_Proc_InstrQtyRound( (p_ca_chk_det_struct_h->h_entl_quantity_due-new_ent_quantity),p_ca_chk_det_struct_h->h_instr_code,&round_val,l_debug_info_ptr);
	
	               h_inc_due_fracredit_ind = round_val * h_f_pr ;
	               p_ca_chk_det_struct_h->h_entl_quantity_due = new_ent_quantity;
	            }
	
	            else if (!strcmp(h_disp_of_fract,DISRGD_IND))
	            {
	               h_inc_due_fracredit_ind = 0;
	               p_ca_chk_det_struct_h->h_entl_quantity_due = new_ent_quantity ;
	            }
	
	            else if (!strcmp(h_disp_of_fract,FRACT_DISP_STDRND))
	            {
	               h_inc_due_fracredit_ind = 0;
	               if((p_ca_chk_det_struct_h->h_entl_quantity_due - new_ent_quantity) >= 0.5)
	                   p_ca_chk_det_struct_h->h_entl_quantity_due = (new_ent_quantity + 1) ;
	               else
	                   p_ca_chk_det_struct_h->h_entl_quantity_due = new_ent_quantity;
	            }
	
	            else if (!strcmp(h_disp_of_fract,FRACT_DISP_IND))
	            {
						
                  if (l_keep_fract_cond > 0)
                  {
                     if (chr_l_keep_fract_flag == 'Y')
                     {
                        EXEC SQL SELECT 
									TRUNC(:p_ca_chk_det_struct_h->h_entl_quantity_due, :l_mt_core_sys_params_struct_h.qty_dec_len)
                        INTO :p_ca_chk_det_struct_h->h_entl_quantity_due
                        FROM DUAL;
                        IS_ANY_ORA_ERROR
                     }
                     else
                     {
                        EXEC SQL SELECT TRUNC(:p_ca_chk_det_struct_h->h_entl_quantity_due)
                        INTO :p_ca_chk_det_struct_h->h_entl_quantity_due
                        FROM DUAL;
                        IS_ANY_ORA_ERROR
                     }

                  }  

						else
						{
		               h_inc_due_fracredit_ind = 0;
	   	         	p_ca_chk_det_struct_h->h_entl_quantity_due =  p_ca_chk_det_struct_h->h_entl_quantity_due;
						}
	            }
	         }
	         else
	         {
	            h_inc_due_fracredit_ind = 0;
	            p_ca_chk_det_struct_h->h_entl_quantity_due =new_ent_quantity;
	         }
				p_ca_chk_det_struct_h->h_entl_instr_inc_bal = p_ca_chk_det_struct_h->h_entl_instr_inc_bal + h_inc_due_fracredit_ind;

				EXEC SQL SELECT TRUNC(:p_ca_chk_det_struct_h->h_entl_instr_inc_bal, :l_mt_core_sys_params_struct_h.amount_decimal_len)
							INTO :p_ca_chk_det_struct_h->h_entl_instr_inc_bal
							FROM DUAL;
				IS_ANY_ORA_ERROR

							

					
				
			  }







		
		

	   if ( !strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_OFFER) )
		{
			strcpy(chr_op_ind,APL_YES_IND);
		}
		else
		{
			strcpy(chr_op_ind,APL_NO_IND);
		}

			if	(	CA_ChkInstr(p_ca_chk_det_struct_h->h_instr_code,
									 h_res_instr_code,
									 chr_op_ind,
									 l_debug_info_ptr
									)	==	APL_FAILURE
				)
				{
					int_error_ind = APL_FAILURE;	
				}
			

        Alert("Entering CO_Chk_AccValid %s",APL_NULL_STRING);
		if	(	CO_Chk_AccValid(chr_p_client,
								APL_YES_FLAG,
								S_CLI_FLAG,
								NULL,
								NULL,
								NULL,	
								APL_NO_FLAG,	
								NULL,
								APL_NO_FLAG,	
								l_debug_info_ptr
								)	==	APL_FAILURE
			 )
				{
					int_error_ind = APL_FAILURE;	
				}
		Alert("Exiting CO_Chk_AccValid %s",APL_NULL_STRING);
		
		EXEC SQL SELECT STATUS,CHECKER_DT
		INTO :chr_h_acc_stat,:h_checker_dt:i_checker_dt
		FROM	MT_CLIENT
		WHERE CLN_CODE=:chr_p_client;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_ACCNOT_FND,
														  chr_p_client,
														  APL_NULL_STRING,
														  APL_NULL_STRING
														 )

	if ( i_checker_dt == -1 )
	{
		if ( !strcmp(chr_h_acc_stat,STATUS_UNFROZ_UAUTH) )
		{
        	CO_InsertWarning(l_debug_info_ptr,
          		          ERR_ACCOUNT_MARKEDFORUNFRZN,
                 	   	 chr_p_client,
								 APL_NULL_STRING,
                 	   	 APL_NULL_STRING,
                    		 __LINE__,
                    		 __FILE__
                       	  );
		}
		else if ( !strcmp(chr_h_acc_stat,STATUS_FROZ_UAUTH) )
		{
        	CO_InsertWarning(l_debug_info_ptr,
          		          ERR_ACCOUNT_MARKEDFORFRZN,
                 	   	 chr_p_client,
								 APL_NULL_STRING,
                 	   	 APL_NULL_STRING,
                    		 __LINE__,
                    		 __FILE__
                       	  );
		}
		else
		{
        	CO_InsertWarning(l_debug_info_ptr,
          		          ERR_ACCOUNT_UNAUTH,
                 	   	 chr_p_client,
								 APL_NULL_STRING,
                 	   	 APL_NULL_STRING,
                    		 __LINE__,
                    		 __FILE__
                       	  );
		}
	}
	//Added by Swapnil for Allowing ca for freezed account.isolve no ISKB_2188 start
	
	if ( !strcmp(chr_h_acc_stat,STATUS_CLS_AUTH) )
	{
     	CO_InsertWarning(l_debug_info_ptr,
        		          ERR_ACCOUNT_FRZN,
              	   	 chr_p_client,
							 APL_NULL_STRING,
              	   	 APL_NULL_STRING,
                  	 __LINE__,
                    	 __FILE__
                       	  );
	}
	
	//Added by Swapnil for Allowing ca for freezed account. isolve no ISKB_2188 end
	
	
	
		if	(	strlen(p_loccode)	)
			{
				if	(	MT_Chk_Loc(	p_loccode,
											APL_YES_FLAG,
											APL_YES_FLAG,
											APL_NO_FLAG,
											l_debug_info_ptr
										)	==	APL_FAILURE
					)
					{
						int_error_ind = APL_FAILURE;	
					}
			}



	
	
	
		  if	(CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS )
		  {
				APL_GOBACK_FAIL
			}
	
				APL_GOBACK_SUCCESS
				RETURN_SUCCESS	:
		
			{
				return (APL_SUCCESS);
				CO_ProcMonitor(APL_OUT_FILE,"Exiting  CA_CheckStatus successfully",NULL,p_intlenv_data_struct_h);
			}
			RETURN_FAILURE	:
			
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting  CA_CheckStatus unsuccessfully",NULL,p_intlenv_data_struct_h);
				return (APL_FAILURE);
			}
}



static	int	CA_MandDataChk(
			                       CA_CACHEQUE_STRUCT_H    *p_ca_cacheque_struct_h_d,
 				                    INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
            				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				)
{

	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	CO_ProcMonitor(APL_OUT_FILE,"Entered S_MandDataChk",NULL,p_intlenv_data_struct_h);

		if (	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)	)

		{	
		    if(strcmp(p_intlenv_data_struct_h->subprocess,"API"))
			if(	!strlen(p_ca_cacheque_struct_h_d->h_access_stamp)	)
			APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
		
			if	(	p_ca_cacheque_struct_h_d->h_pymt_srl_nbr	==	0	)
			APL_DATA_MISSING("Payment Serial Number",APL_NULL_STRING,APL_NULL_STRING)	

			if	(	!strlen(p_ca_cacheque_struct_h_d->h_pymt_stat)	)
			APL_DATA_MISSING("Payment Status",APL_NULL_STRING,APL_NULL_STRING)	

			if	(	!strlen(p_ca_cacheque_struct_h_d->h_stat_date)	)
			APL_DATA_MISSING("Status Date",APL_NULL_STRING,APL_NULL_STRING)	
			
			if	(	!strlen(p_ca_cacheque_struct_h_d->h_new_dt)	)
			APL_DATA_MISSING("Input Date",APL_NULL_STRING,APL_NULL_STRING)	
		}
	
	if(	!strlen(p_ca_cacheque_struct_h_d->h_corp_id)	)
		APL_DATA_MISSING("Event ID ",APL_NULL_STRING,APL_NULL_STRING)

	if(	!strlen(p_ca_cacheque_struct_h_d->h_dl_client)	)
		APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING)
	
	if(	!strlen(p_ca_cacheque_struct_h_d->h_pymt_dt)	)
		APL_DATA_MISSING("Pay Date ",APL_NULL_STRING,APL_NULL_STRING)	
	
	if(	!strlen(p_ca_cacheque_struct_h_d->h_pymt_currency)	)
		APL_DATA_MISSING("Payment Currency ",APL_NULL_STRING,APL_NULL_STRING)	

	
	if	(	(p_ca_cacheque_struct_h_d->h_curr_pymt	==	0)	&&
			(p_ca_cacheque_struct_h_d->h_quantity_recd	==	0)	
		)
		APL_DATA_MISSING("Quantity/Cash Amount ",APL_NULL_STRING,APL_NULL_STRING)	
	
	if	(CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
			APL_GOBACK_FAIL

		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_MandDataChk successfully",NULL,p_intlenv_data_struct_h);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_MandDataChk unsuccessfully",NULL,p_intlenv_data_struct_h);
			return (APL_FAILURE);
		}
}



static	int 	CA_PymtReverse( CA_CACHEQUE_STRUCT_H *p_ca_cacheque_struct_h_d,
					                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  		      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				)
{
	struct	sqlca	sqlca;
	CA_CACHEQUE_STRUCT_H		*l_ca_cachequeimg_struct_h	=	NULL;
	CA_CACHEQUE_STRUCT_I		*l_ca_cachequeimg_struct_i	=	NULL;
   CA_CHK_DET_STRUCT_H			*l_ca_chk_det_struct_h		=	NULL;
   CA_CHK_DET_STRUCT_I			*l_ca_chk_det_struct_i		=	NULL;
	char				 	rowid[APL_ROWID_LEN];
	char					pro_sys_date[APL_DATE_LEN];
	char					chr_str_eqv_srl_nbr[S_SRL_NBR_LEN];
	char					*int_pos;
	short					i_checker=-1;	
	short					i_checker_dt=-1;	

	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	CO_ProcMonitor(APL_OUT_FILE,"Entered S_PaymentReverse",NULL,p_intlenv_data_struct_h);

		
	        if(strcmp(p_intlenv_data_struct_h->subprocess,"API")){
			if(	!strlen(p_ca_cacheque_struct_h_d->h_access_stamp)	)
			APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
		    }
		
			if(	!strlen(p_ca_cacheque_struct_h_d->h_corp_id)	)
			APL_DATA_MISSING("Event key",APL_NULL_STRING,APL_NULL_STRING)	

			if(	!strlen(p_ca_cacheque_struct_h_d->h_dl_client)	)
			APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING)	
			
			if(	p_ca_cacheque_struct_h_d->h_pymt_srl_nbr	== 0	)
			APL_DATA_MISSING("Payment Serial Number",APL_NULL_STRING,APL_NULL_STRING)	
			if	(CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
			APL_GOBACK_FAIL

	
			(l_ca_cachequeimg_struct_h) = (CA_CACHEQUE_STRUCT_H*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_H));	
			APL_MALLOC_FAIL(l_ca_cachequeimg_struct_h) 
		
			(l_ca_cachequeimg_struct_i) = (CA_CACHEQUE_STRUCT_I*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_cachequeimg_struct_i) 

	
			l_ca_chk_det_struct_h=(CA_CHK_DET_STRUCT_H *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_H)	);
			APL_MALLOC_FAIL(l_ca_chk_det_struct_h) 

			l_ca_chk_det_struct_i=(CA_CHK_DET_STRUCT_I *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_I)	);
			APL_MALLOC_FAIL(l_ca_chk_det_struct_i) 
	
		#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n about to select record based on corp_id :(%s)  \n client :(%s) \n pay serial no :(%d)",p_ca_cacheque_struct_h_d->h_corp_id,p_ca_cacheque_struct_h_d->h_dl_client,p_ca_cacheque_struct_h_d->h_pymt_srl_nbr); 
			#	endif
			
			
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_corp_id is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_dl_client is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_pymt_inst is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_txn_indentity_no is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_loccode is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_maker is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_checker is string;
			
			

			
			
			strcpy(chr_str_eqv_srl_nbr,ltoa(p_ca_cacheque_struct_h_d->h_pymt_srl_nbr)	);

			
			
			EXEC SQL SELECT 	ROWID,
									CACHEQUE.* 
			INTO					:rowid,
									:l_ca_cachequeimg_struct_h:l_ca_cachequeimg_struct_i	 
			FROM CACHEQUE 

        	WHERE	 CORP_ID=:p_ca_cacheque_struct_h_d->h_corp_id	AND
					 CLIENT=:p_ca_cacheque_struct_h_d->h_dl_client	AND
					 SEQNUM_PAY=:p_ca_cacheque_struct_h_d->h_pymt_srl_nbr
 
	     	FOR UPDATE OF	CACHEQUE.STAT_PYMT;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_PAYMNT_NOTFND_A,
                                                p_ca_cacheque_struct_h_d->h_corp_id,
                                                p_ca_cacheque_struct_h_d->h_dl_client,
                                                chr_str_eqv_srl_nbr
																)	

		
        if(strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		{
		if (	
				strcmp(	p_ca_cacheque_struct_h_d->h_access_stamp,
							l_ca_cachequeimg_struct_h->h_access_stamp
						)
			)		
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}
		}else
		{
			strcmp(p_ca_cacheque_struct_h_d->h_access_stamp,l_ca_cachequeimg_struct_h->h_access_stamp);
		}

		
		
		

				if	(	strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,STATUS_MSG_PAID_CLSD)	
					)
					{
						CO_InsertErr(l_debug_info_ptr,
											ERR_PAYMNTSTS_INVALIDREVERSE,
											l_ca_cachequeimg_struct_h->h_pymt_stat,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__
											);
						APL_GOBACK_FAIL
					}	

		

		
		
		

	if	(	CA_CheckStatus	(	p_ca_cacheque_struct_h_d->h_corp_id,
									p_ca_cacheque_struct_h_d->h_dl_client,
									l_ca_cachequeimg_struct_h->h_loccode,
									l_ca_chk_det_struct_h,
									l_ca_chk_det_struct_i,
									p_intlenv_data_struct_h,
									l_debug_info_ptr
								)	==	APL_FAILURE
			)
			APL_GOBACK_FAIL

			
		EXEC SQL INSERT INTO CACHEQUEMG VALUES (:l_ca_cachequeimg_struct_h:l_ca_cachequeimg_struct_i);
		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_PYMNTIMG,p_ca_cacheque_struct_h_d->h_corp_id,p_ca_cacheque_struct_h_d->h_dl_client,chr_str_eqv_srl_nbr)
		# ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"\nAttempted to Insert Image record , checking for SQL l_debuglist\n");
		fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
		# endif

		
      
	
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}
			strcpy(p_ca_cacheque_struct_h_d->h_access_stamp,pro_sys_date);
			strcpy(pro_sys_date,strtok_r(pro_sys_date," ",&int_pos));
			strcat(pro_sys_date,APL_NULL_TIME);

            if(strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		    {
			strcpy(p_ca_cacheque_struct_h_d->h_stat_date,pro_sys_date);
			}
			strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_REV_UAUTH);
			strcpy(p_ca_cacheque_struct_h_d->h_maker,p_intlenv_data_struct_h->usr);
			strcpy(p_ca_cacheque_struct_h_d->h_maker_dt,pro_sys_date);
			i_checker	=	-1;
			i_checker_dt	=	-1;
            if(!strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		    {
			   i_checker		=	0;
		       i_checker_dt	=	0;
			   strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_REVERSED);
			   strcpy(p_ca_cacheque_struct_h_d->h_checker,"SYSTEM");
			   strcpy(p_ca_cacheque_struct_h_d->h_checker_dt,pro_sys_date); 
		    }
		
	
		EXEC SQL UPDATE CACHEQUE	
			SET
				MAKER=:p_ca_cacheque_struct_h_d->h_maker,
				MAKER_DT=:p_ca_cacheque_struct_h_d->h_maker_dt,
				CHECKER=:p_ca_cacheque_struct_h_d->h_checker:i_checker,
				CHECKER_DT=:p_ca_cacheque_struct_h_d->h_checker_dt:i_checker_dt,
				STAT_PYMT=:p_ca_cacheque_struct_h_d->h_pymt_stat,
				PROCESSED_DATE=:p_ca_cacheque_struct_h_d->h_stat_date,
				ACCESS_STAMP=:p_ca_cacheque_struct_h_d->h_access_stamp
		WHERE
				ROWID=:rowid;	

		#	ifdef	SYS_DEBUG
		fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
		#	endif
		IS_ANY_ORA_ERROR;
		
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_cachequeimg_struct_h);
			APL_FREE(l_ca_cachequeimg_struct_i);
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_PymtReverse successfully",NULL,p_intlenv_data_struct_h);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_cachequeimg_struct_h);
			APL_FREE(l_ca_cachequeimg_struct_i);
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_PymtReverse unsuccessfully",NULL,p_intlenv_data_struct_h);
			return (APL_FAILURE);
		}
}




static	int 	CA_Mod_PymtDel(  CA_CACHEQUE_STRUCT_H  *p_ca_cacheque_struct_h_d,
					                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  		      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				)
{
	struct	sqlca	sqlca;
	CA_CACHEQUE_STRUCT_H		*l_ca_cachequeimg_struct_h	=	NULL;
	CA_CACHEQUE_STRUCT_I		*l_ca_cachequeimg_struct_i	=	NULL;
   CA_CHK_DET_STRUCT_H			*l_ca_chk_det_struct_h		=	NULL;
   CA_CHK_DET_STRUCT_I			*l_ca_chk_det_struct_i		=	NULL;
	char				 			rowid[APL_ROWID_LEN];
	char							pro_sys_date[APL_DATE_LEN];
	char							*int_pos;
	short							i_checker=-1;
	short							i_checker_dt=-1;

	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

			CO_ProcMonitor(APL_OUT_FILE,"Entered S_PaymentDelete",NULL,p_intlenv_data_struct_h);

		
	
            if(strcmp(p_intlenv_data_struct_h->subprocess,"API")){
			if(	!strlen(p_ca_cacheque_struct_h_d->h_access_stamp)	)
			APL_DATA_MISSING("Access Stamp",APL_NULL_STRING,APL_NULL_STRING)	
			}		
		
			if(	!strlen(p_ca_cacheque_struct_h_d->h_corp_id)	)
			APL_DATA_MISSING("Event key",APL_NULL_STRING,APL_NULL_STRING)	

			if(	!strlen(p_ca_cacheque_struct_h_d->h_dl_client)	)
			APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING)	
			
			if(	p_ca_cacheque_struct_h_d->h_pymt_srl_nbr	==	0	)
			APL_DATA_MISSING("Payment Serial Number",APL_NULL_STRING,APL_NULL_STRING)	
	
			if	(CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
			APL_GOBACK_FAIL

	
			(l_ca_cachequeimg_struct_h) = (CA_CACHEQUE_STRUCT_H*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_H));	
			APL_MALLOC_FAIL(l_ca_cachequeimg_struct_h) 
		
			(l_ca_cachequeimg_struct_i) = (CA_CACHEQUE_STRUCT_I*)calloc(1,
										sizeof(CA_CACHEQUE_STRUCT_I));	
			APL_MALLOC_FAIL(l_ca_cachequeimg_struct_i) 

	
		
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_corp_id is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_dl_client is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_pymt_inst is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_txn_indentity_no is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_loccode is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_maker is string;
			EXEC SQL VAR	l_ca_cachequeimg_struct_h->h_checker is string;
	
	

			#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n about to select record based on corp_id :(%s)  \n client :(%s) \n pay serial no :(%d)",p_ca_cacheque_struct_h_d->h_corp_id,p_ca_cacheque_struct_h_d->h_dl_client,p_ca_cacheque_struct_h_d->h_pymt_srl_nbr); 
			#	endif
			
	
		
	
			EXEC SQL SELECT ROWID,CACHEQUE.* 
			INTO	:rowid,:l_ca_cachequeimg_struct_h:l_ca_cachequeimg_struct_i	 
			FROM CACHEQUE 
        	WHERE 
					CORP_ID=:p_ca_cacheque_struct_h_d->h_corp_id AND 
				   CLIENT=:p_ca_cacheque_struct_h_d->h_dl_client	AND
				   SEQNUM_PAY=:p_ca_cacheque_struct_h_d->h_pymt_srl_nbr
      	FOR UPDATE OF CACHEQUE.corp_id	;
		
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_PAYMNT_NOTFND_A,
                                                APL_NULL_STRING,
                                                APL_NULL_STRING,
                                                APL_NULL_STRING
																)	
				
	
        if(strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		{
		if (	
				strcmp(	p_ca_cacheque_struct_h_d->h_access_stamp,
						   l_ca_cachequeimg_struct_h->h_access_stamp	
						)
			)		
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}
		}else
		{
			strcmp(p_ca_cacheque_struct_h_d->h_access_stamp,l_ca_cachequeimg_struct_h->h_access_stamp);
		}

		
		
	
		if	(		strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,STATUS_RDY_PYMT)	
				&& strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,APL_STATUS_UNAUTH)
			)
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_PAYMNTSTS_INVALIDDEL,
									l_ca_cachequeimg_struct_h->h_pymt_stat,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}

	
	l_ca_chk_det_struct_h=(CA_CHK_DET_STRUCT_H *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_H)	);
	APL_MALLOC_FAIL(l_ca_chk_det_struct_h) 


	l_ca_chk_det_struct_i=(CA_CHK_DET_STRUCT_I *)calloc(	1,sizeof(CA_CHK_DET_STRUCT_I)	);
	APL_MALLOC_FAIL(l_ca_chk_det_struct_i) 

	if	(	CA_CheckStatus( p_ca_cacheque_struct_h_d->h_corp_id,
								p_ca_cacheque_struct_h_d->h_dl_client,
								l_ca_cachequeimg_struct_h->h_loccode,		
				      		l_ca_chk_det_struct_h,	
				      		l_ca_chk_det_struct_i,	
								p_intlenv_data_struct_h,
								l_debug_info_ptr
									)		==	APL_FAILURE
		)
			APL_GOBACK_FAIL

			//Changes done by Sunny for CS0020637  
		if	(		(!strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,STATUS_RDY_PYMT)) && (strcmp(p_intlenv_data_struct_h->subprocess,"GFU")) )
		{	
	
	
	
		if(strcmp(p_intlenv_data_struct_h->subprocess,"API")){
		EXEC SQL INSERT INTO CACHEQUEMG VALUES (:l_ca_cachequeimg_struct_h:l_ca_cachequeimg_struct_i);
	
		# ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"\nImage record inserted, checking for SQL l_debuglist\n");
		fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
		# endif

		IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_DUPLICATE_PYMNTIMG,
														APL_NULL_STRING,
														APL_NULL_STRING,
														APL_NULL_STRING) 
 		}    
		}
 
		
	
		if (	CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}

			strcpy(p_ca_cacheque_struct_h_d->h_access_stamp,pro_sys_date);
			strcpy(pro_sys_date,strtok_r(pro_sys_date," ",&int_pos)	);
			strcat(pro_sys_date,APL_NULL_TIME);

			 if(strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		    {
			strcpy(p_ca_cacheque_struct_h_d->h_stat_date,pro_sys_date);
			}
			strcpy(p_ca_cacheque_struct_h_d->h_maker,p_intlenv_data_struct_h->usr);
			strcpy(p_ca_cacheque_struct_h_d->h_maker_dt,pro_sys_date);
			i_checker		==	-1;
			i_checker_dt	==	-1;

			//Changes done by Sunny for CS0020637  
			if	(	!strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,APL_STATUS_UNAUTH) ||  (!strcmp(p_intlenv_data_struct_h->subprocess,"GFU"))	)
				{
					EXEC SQL DELETE CACHEQUE
					WHERE
					ROWID=:rowid;
					IS_ANY_ORA_ERROR

					APL_GOBACK_SUCCESS	
				}
			
			else	if	(	!strcmp(l_ca_cachequeimg_struct_h->h_pymt_stat,STATUS_RDY_PYMT)	)
						{
							strcpy(p_ca_cacheque_struct_h_d->h_pymt_stat,STATUS_DEL_UNAUTH);
						}
		     if(!strcmp(p_intlenv_data_struct_h->subprocess,"API"))
		    {
			        EXEC SQL DELETE CACHEQUE
					WHERE
					ROWID=:rowid;
					IS_ANY_ORA_ERROR
		
					APL_GOBACK_SUCCESS	
			}

		EXEC SQL UPDATE CACHEQUE	
			SET
				MAKER=:p_ca_cacheque_struct_h_d->h_maker,
				MAKER_DT=:p_ca_cacheque_struct_h_d->h_maker_dt,
				CHECKER=:p_ca_cacheque_struct_h_d->h_checker:i_checker,
				CHECKER_DT=:p_ca_cacheque_struct_h_d->h_checker_dt:i_checker_dt,
				STAT_PYMT=:p_ca_cacheque_struct_h_d->h_pymt_stat,
				PROCESSED_DATE=:p_ca_cacheque_struct_h_d->h_stat_date,
				ACCESS_STAMP=:p_ca_cacheque_struct_h_d->h_access_stamp
		WHERE
				ROWID=:rowid;	

		# ifdef SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
		# endif

		IS_ANY_ORA_ERROR;

		
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_FREE(l_ca_cachequeimg_struct_h);
			APL_FREE(l_ca_cachequeimg_struct_i);
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_PymtDel successfully",NULL,p_intlenv_data_struct_h);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_cachequeimg_struct_h);
			APL_FREE(l_ca_cachequeimg_struct_i);
			APL_FREE(l_ca_chk_det_struct_h);
			APL_FREE(l_ca_chk_det_struct_i);
			
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_PymtDel unsuccessfully",NULL,p_intlenv_data_struct_h);
			return (APL_FAILURE);
		}
}




int	CA_Mod_Pymt(	CA_CACHEQUE_STRUCT_H	*p_ca_cacheque_struct_h_d,
									CA_CACHEQUE_STRUCT_I	*p_payment_struct_i,
									char					*rowid,
									DEBUG_INFO_STRUCT_H		**l_debug_info_ptr
										)
{
			struct	sqlca	sqlca;

		#ifdef	APL_THREADS
			APL_SET_CONTEXT
			EXEC SQL CONTEXT USE :my_ctx_local;
		#endif
	
		#	ifdef	SYS_DEBUG	
			fprintf(APL_OUT_FILE,"\nEntering  CA_Mod_Pymt\n");
		#	endif

		
		EXEC SQL UPDATE CACHEQUE SET
		DATEOF_PAYMENT =:p_ca_cacheque_struct_h_d->h_pymt_dt:p_payment_struct_i->i_pymt_dt,	
		PAYMENT_CCY =:p_ca_cacheque_struct_h_d->h_pymt_currency:p_payment_struct_i->i_pymt_currency,	
		CURR_PYMT =:p_ca_cacheque_struct_h_d->h_curr_pymt:p_payment_struct_i->i_curr_pymt,	
		QUANTITY_RECEIVED =:p_ca_cacheque_struct_h_d->h_quantity_recd:p_payment_struct_i->i_quantity_recd,	
		
	QUANTITY_PAID =:p_ca_cacheque_struct_h_d->h_quantity_paid:p_payment_struct_i->i_quantity_paid,	
		
		TAX_RATE =:p_ca_cacheque_struct_h_d->h_tax_rate:p_payment_struct_i->i_tax_rate,	
		PAYMENT_INFO =:p_ca_cacheque_struct_h_d->h_pymt_inst:p_payment_struct_i->i_pymt_inst,	
		LOCATION_CD=:p_ca_cacheque_struct_h_d->h_loccode:p_payment_struct_i->i_loccode,	
		TAX_AMOUNT =:p_ca_cacheque_struct_h_d->h_tax_amount:p_payment_struct_i->i_tax_amount,	
		OTHER_CHRGS =:p_ca_cacheque_struct_h_d->h_other_chrgs:p_payment_struct_i->i_other_chrgs,	
		STAT_PYMT =:p_ca_cacheque_struct_h_d->h_pymt_stat:p_payment_struct_i->i_pymt_stat,	
		PROCESSED_DATE=:p_ca_cacheque_struct_h_d->h_stat_date:p_payment_struct_i->i_stat_date,	
		DATE_OF_INPUT=:p_ca_cacheque_struct_h_d->h_new_dt:p_payment_struct_i->i_new_dt,
		MAKER =:p_ca_cacheque_struct_h_d->h_maker:p_payment_struct_i->i_maker,
		MAKER_DT =:p_ca_cacheque_struct_h_d->h_maker_dt:p_payment_struct_i->i_maker_dt,
		CHECKER =:p_ca_cacheque_struct_h_d->h_checker:p_payment_struct_i->i_checker,
		CHECKER_DT =:p_ca_cacheque_struct_h_d->h_checker_dt:p_payment_struct_i->i_checker_dt,
		TAXABLE_DIVIDEND =:p_ca_cacheque_struct_h_d->h_taxable_dividend:p_payment_struct_i->i_taxable_dividend,
        FRACT_QTY_BAL =:p_ca_cacheque_struct_h_d->h_fract_qty_bal:p_payment_struct_i->i_fract_qty_bal,
        FRACT_QTY_RECD =:p_ca_cacheque_struct_h_d->h_fract_qty_recd:p_payment_struct_i->i_fract_qty_recd,
		ACCESS_STAMP=:p_ca_cacheque_struct_h_d->h_access_stamp:p_payment_struct_i->i_access_stamp	,
		NET_AMOUNT=:p_ca_cacheque_struct_h_d->h_net_amount:p_payment_struct_i->i_net_amount	,
		AE_PASSIND=:p_ca_cacheque_struct_h_d->h_clt_pass_flg:p_payment_struct_i->i_clt_pass_flg
		WHERE
				ROWID=:rowid;
		
                //Changes done by Sunny for CS0020637 
		#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n sql l_debuglist is :(%s)\n",sqlca.sqlerrm.sqlerrmc);
		#	endif	

		IS_ANY_ORA_ERROR;
	
			APL_GOBACK_SUCCESS
			RETURN_SUCCESS	:
		
		{
			#	ifdef SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nExiting CA_Mod_Pymt successfully having updated all fields in Payment record-(Modify/Reset)\n");
			#	endif
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			#	ifdef SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nExiting CA_Mod_Pymt unsuccessfully having tried to update all fields in Payment record(Modify/Reset)\n");
			#	endif
			return (APL_FAILURE);
		}
}



int	CA_Chk_SumPymt(	CA_CHK_PYMT_STRUCT_H	*p_val_sum_pymt_struct,
								   CA_CHK_DET_STRUCT_H 	*p_ca_chk_det_struct_h,
					            INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
									DEBUG_INFO_STRUCT_H			**l_debug_info_ptr
								 )
{
	double	h_sum_earnings			=	0;	
	short		i_sum_income			=	0;	
	double	h_sum_quantity				=	0;	
	short		i_sum_qty				=	0;
	double	h_img_earnings			=	0;	
	short		i_img_income			=	0;	
	double	h_img_quantity				=	0;	
	short		i_img_qty				=	0;
	double	total_pay_earnings		=	0;	
	double	total_pay_quantity			=	0;	
	
	double	h_sum_quantity_paid				=	0;	
	short		i_sum_qty_paid				=	0;
	
	double frc_due = 0;/*Chirag 210706*/
	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	CO_ProcMonitor(APL_OUT_FILE,"Entered A_ValSumPayments",NULL,p_intlenv_data_struct_h);
	
	EXEC SQL SELECT
						NVL(SUM(CURR_PYMT),0),
						NVL(SUM(QUANTITY_RECEIVED),0),
						NVL(SUM(QUANTITY_PAID),0)
	INTO	
						h_sum_earnings:i_sum_income,
						h_sum_quantity:i_sum_qty,
						
						h_sum_quantity_paid:i_sum_qty_paid
						
	FROM
						CACHEQUE
	WHERE
						CORP_ID=:p_val_sum_pymt_struct->corp_id		AND
						CLIENT=:p_val_sum_pymt_struct->client	AND
						STAT_PYMT	NOT IN	('RV','DL');
	

	#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n Total Income Payments in table: (%lf) \n",h_sum_earnings);
			fprintf(APL_OUT_FILE,"\n Total Quantity Payments in table: (%lf) \n",h_sum_quantity);
			
			fprintf(APL_OUT_FILE,"\n Total Quantity Paid in table: (%lf) \n",h_sum_quantity_paid);
			
			fprintf(APL_OUT_FILE,"\n Adjustment to be made for quantity : (%lf) \n", p_val_sum_pymt_struct->quantity_received);
	#	endif	

	#	ifdef	SYS_DEBUG
			fprintf(APL_OUT_FILE,"\n Total Entitlement Cash due (%lf)\n",p_ca_chk_det_struct_h->h_entl_instr_inc_bal);
			fprintf(APL_OUT_FILE,"\n Total Entitlement Qty due (%lf)\n",p_ca_chk_det_struct_h->h_entl_quantity_due);
			fprintf(APL_OUT_FILE,"\n Total Entitlement Positions (%lf)\n",p_ca_chk_det_struct_h->h_entitl_pos);
	#	endif

	
	/*Chirag 210706*/		
	EXEC SQL SELECT FRACT_DUE INTO :frc_due
				FROM CAENTITLEMENT
				WHERE CORP_ID=:p_val_sum_pymt_struct->corp_id
				AND CLIENT=:p_val_sum_pymt_struct->client;
	
	IS_ANY_ORA_ERROR;
	/*Chirag 210706*/	

		if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_INPUT)	)
			{
				h_sum_earnings	=	h_sum_earnings	+	p_val_sum_pymt_struct->curr_pymt;
				h_sum_quantity		=	h_sum_quantity		+	p_val_sum_pymt_struct->quantity_received;
				
				h_sum_quantity_paid		=	h_sum_quantity_paid		+	p_val_sum_pymt_struct->quantity_paid;
				
				#	ifdef	SYS_DEBUG
					fprintf(APL_OUT_FILE,"\n Total Income Payments : (%lf) \n",h_sum_earnings);
					fprintf(APL_OUT_FILE,"\n Total Quantity Payments : (%lf) \n",h_sum_quantity);
				#	endif	
			}
	
		
		
		
		
		
		
		

		if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_MODIFY)	)
			{
				h_sum_earnings	=	h_sum_earnings	+	p_val_sum_pymt_struct->curr_pymt;
				h_sum_quantity		=	h_sum_quantity		+	p_val_sum_pymt_struct->quantity_received;
				
				h_sum_quantity_paid		=	h_sum_quantity_paid		+	p_val_sum_pymt_struct->quantity_paid;
				
				#	ifdef	SYS_DEBUG
					fprintf(APL_OUT_FILE,"\n Adjustment to be made for quantity : (%lf) \n", p_val_sum_pymt_struct->quantity_received);
					fprintf(APL_OUT_FILE,"\n Total Income Payments : (%lf) \n",h_sum_earnings);
					fprintf(APL_OUT_FILE,"\n Total Quantity Payments : (%lf) \n",h_sum_quantity);
					
					fprintf(APL_OUT_FILE,"\n Total Quantity Paid : (%lf) \n",h_sum_quantity_paid);
					
				#	endif	
			}

		
		
		
		
		
		 

	if	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_RESET)	)		
		{
		
		h_sum_earnings	=	h_sum_earnings	+	p_val_sum_pymt_struct->curr_pymt;
		h_sum_quantity		=	h_sum_quantity		+	p_val_sum_pymt_struct->quantity_received;
				
				h_sum_quantity_paid		=	h_sum_quantity_paid		+	p_val_sum_pymt_struct->quantity_paid;
				
		
				#	ifdef	SYS_DEBUG
					fprintf(APL_OUT_FILE,"\n Adjustment to be made for quantity : (%lf) \n",p_val_sum_pymt_struct->quantity_received);
					fprintf(APL_OUT_FILE,"\n Total Income Payments : (%lf) \n",h_sum_earnings);
					fprintf(APL_OUT_FILE,"\n Total Quantity Payments : (%lf) \n",h_sum_quantity);
					
					fprintf(APL_OUT_FILE,"\n Total Quantity Paid : (%lf) \n",h_sum_quantity_paid);
					
				#	endif	
		}

		

		Alert(" APL_DOUBLE_LESS h_sum_income is   %lf\n",h_sum_earnings);
		Alert("p_val_dtls_struct_h->h_entl_instr_inc_bal is %lf\n",p_ca_chk_det_struct_h->h_entl_instr_inc_bal);

	/* Changes to compare two double value by using APL_DOUBLE_LESS for ISKB_9966  Start*/
/*		if	(	(	h_sum_earnings	>	p_ca_chk_det_struct_h->h_entl_instr_inc_bal	&& frc_due == 0) ||
				(	h_sum_quantity		>	p_ca_chk_det_struct_h->h_entl_quantity_due	) || 
				(	h_sum_quantity_paid		>	p_ca_chk_det_struct_h->h_entitl_pos	)  
			)
*/
		if (
				(APL_DOUBLE_LESS(p_ca_chk_det_struct_h->h_entl_instr_inc_bal,h_sum_earnings) &&  frc_due == 0) || 
	(APL_DOUBLE_LESS(p_ca_chk_det_struct_h->h_entl_quantity_due,h_sum_quantity)) ||
	(APL_DOUBLE_LESS(p_ca_chk_det_struct_h->h_entitl_pos,h_sum_quantity_paid))
			)
			{
			//	if	(		h_sum_earnings	>	p_ca_chk_det_struct_h->h_entl_instr_inc_bal	) 
				if(APL_DOUBLE_LESS(p_ca_chk_det_struct_h->h_entl_instr_inc_bal,h_sum_earnings))
				{
					CO_InsertErr(	l_debug_info_ptr,
											ERR_PAY_MORE_DUES_CASH_SUM,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__
										);
				}	
	
	//			if	(		h_sum_quantity		>	p_ca_chk_det_struct_h->h_entl_quantity_due	) 
				if(APL_DOUBLE_LESS(p_ca_chk_det_struct_h->h_entl_quantity_due,h_sum_quantity))
				{
					CO_InsertErr(	l_debug_info_ptr,
										ERR_PAY_MORE_DUES_STOCK_SUM,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
									);
				}
					
			//	if	(		h_sum_quantity_paid		>	p_ca_chk_det_struct_h->h_entitl_pos	) 
				if (APL_DOUBLE_LESS(p_ca_chk_det_struct_h->h_entitl_pos,h_sum_quantity_paid))
				{
					CO_InsertErr(	l_debug_info_ptr,
										ERR_PAY_MORE_DUES_ENT_SUM,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
									);
				}
					
					APL_GOBACK_FAIL
			}

/* Changes to compare two double value by using APL_DOUBLE_LESS for ISKB_9966  Start*/
	
			APL_GOBACK_SUCCESS
			RETURN_SUCCESS	:
		
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Chk_SumPymt successfully",NULL,p_intlenv_data_struct_h);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Chk_SumPymt unsuccessfully",NULL,p_intlenv_data_struct_h);
			return (APL_FAILURE);
		}
}
			



static	int 	CA_CheckPayment(	CA_CACHEQUE_STRUCT_H	*p_ca_cacheque_struct_h_d, 
				      			   CA_CHK_DET_STRUCT_H		*p_ca_chk_det_struct_h,	
										DEBUG_INFO_STRUCT_H 	      **l_debug_info_ptr
										)
{
	int		int_date_diff=0;
	int		int_holiday_flag=0;
	char		chr_l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	int             int_l_count_mod = 0;        
	char 		chr_h_to_op_event_type[3],chr_h_to_instrcode[10];  
	float 		flt_h_to_safek,flt_h_to_qty_recd_locn;  
	double frc_due = 0;
	EXEC SQL VAR    chr_h_to_op_event_type   is string;
	EXEC SQL VAR    chr_h_to_instrcode  	     is string;
	

	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	#	ifdef SYS_DEBUG
		fprintf(APL_OUT_FILE,"\nEntering CA_CheckPayment \n");
	#	endif

	
        EXEC SQL SELECT OP_EVT_CLASS,instr_code INTO :chr_h_to_op_event_type,:chr_h_to_instrcode
        FROM CAEVENT
        WHERE corp_id = :p_ca_cacheque_struct_h_d->h_corp_id;
	Alert("\nI am in Validation reqd. %s\n",chr_h_to_op_event_type);

        if(strcmp(chr_h_to_op_event_type,"TO")==0)
        {
                EXEC SQL SELECT SAFEKEEP_POS INTO :flt_h_to_safek
                FROM DL_SAFEK
                WHERE client = :p_ca_cacheque_struct_h_d->h_dl_client
                AND instr_code = :chr_h_to_instrcode
                AND location_cd = :p_ca_cacheque_struct_h_d->h_loccode;

                if ((sqlca.sqlcode == 1403) || (flt_h_to_safek < p_ca_cacheque_struct_h_d->h_quantity_paid))
                {
			 Alert("SQL CODE = %d",sqlca.sqlcode);
                         CO_InsertErr(l_debug_info_ptr,
                                                                       ERR_NOTPOSN_INSTRLOCN,
                                                                                p_ca_cacheque_struct_h_d->h_corp_id,
                                                                                p_ca_cacheque_struct_h_d->h_dl_client,
                                                                                APL_NULL_STRING,
                                                                                __LINE__,
                                                                                __FILE__
                                                                                );
                         APL_GOBACK_FAIL
                }

		EXEC SQL SELECT SUM(QUANTITY_PAID) INTO :flt_h_to_qty_recd_locn
		FROM CACHEQUE
		WHERE client = :p_ca_cacheque_struct_h_d->h_dl_client
		AND corp_id = :p_ca_cacheque_struct_h_d->h_corp_id
		AND location_cd = :p_ca_cacheque_struct_h_d->h_loccode
		AND SEQNUM_PAY <> :p_ca_cacheque_struct_h_d->h_pymt_srl_nbr
		AND STAT_PYMT IN ('RP','UU');

		if (sqlca.sqlcode != 1403)
		{
			flt_h_to_safek = flt_h_to_safek - flt_h_to_qty_recd_locn;
			if (flt_h_to_safek < p_ca_cacheque_struct_h_d->h_quantity_paid)
			{
				CO_InsertErr(l_debug_info_ptr,
                                                                       ERR_NOTPOSN_INSTRLOCN,
                                                                                p_ca_cacheque_struct_h_d->h_corp_id,
                                                                                p_ca_cacheque_struct_h_d->h_dl_client,
                                                                                APL_NULL_STRING,
                                                                                __LINE__,
                                                                                __FILE__
                                                                                );
                        	 APL_GOBACK_FAIL
			}
		}
        }

	
	
	

	if	(	(!strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind,APL_YES_IND))	&&
			(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_BOND))	&&	
			(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_CASH_DIV))	&&
			(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_DECR_VAL))   &&
			(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_CAP_RED))
		)	
			{
				if	(	!strlen(p_ca_cacheque_struct_h_d->h_loccode)	)
					{
						APL_DATA_MISSING("Location Code ",APL_NULL_STRING,APL_NULL_STRING)	
						APL_GOBACK_FAIL
					}
			}
		
	/*Chirag 21/07/06*/
	if(!strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_BONUS) || 
		!strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_RHTS) ||
		!strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_SPLIT) || 
		!strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_CAP_RED) ||
		!strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_CV) ||
		!strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_STOK_DIV) )
	{
		EXEC SQL SELECT FRACT_DUE INTO :frc_due
			FROM CAENTITLEMENT
			WHERE CORP_ID = :p_ca_cacheque_struct_h_d->h_corp_id
			AND  CLIENT = :p_ca_cacheque_struct_h_d->h_dl_client;

		IS_ANY_ORA_ERROR	

			if((frc_due == 0) && 
					(p_ca_chk_det_struct_h->h_entl_instr_inc_bal  == 0) && 
					(p_ca_cacheque_struct_h_d->h_curr_pymt  != 0 ))
			{

				CO_InsertErr(l_debug_info_ptr,
						ERR_NOPAY_INCDUE,
						p_ca_cacheque_struct_h_d->h_corp_id,
						p_ca_cacheque_struct_h_d->h_dl_client,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						);
				APL_GOBACK_FAIL

			}
	}	

		/*Chirag 21/07/06*/
	else
	{	
		if	(	(	p_ca_chk_det_struct_h->h_entl_instr_inc_bal	==	0)  &&
				(	p_ca_cacheque_struct_h_d->h_curr_pymt	!=	0	)
			)
		{
			CO_InsertErr(l_debug_info_ptr,
					ERR_NOPAY_INCDUE,
					p_ca_cacheque_struct_h_d->h_corp_id,
					p_ca_cacheque_struct_h_d->h_dl_client,
					APL_NULL_STRING,
					__LINE__,
					__FILE__
					);
			APL_GOBACK_FAIL
		}

	}
			if	(	(	p_ca_chk_det_struct_h->h_entl_quantity_due	==	0)  &&
					(	p_ca_cacheque_struct_h_d->h_quantity_recd	!=	0	)
				)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_NOPAY_QTYDUE,
										p_ca_cacheque_struct_h_d->h_corp_id,
										p_ca_cacheque_struct_h_d->h_dl_client,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					APL_GOBACK_FAIL
				}
	
	
	
	


		Alert("p_payment_struct_h->h_curr_pymt is %lf \n",p_ca_cacheque_struct_h_d->h_curr_pymt);
		Alert("p_val_dtls_struct_h->h_entl_instr_inc_bal is %lf \n",p_ca_chk_det_struct_h->h_entl_instr_inc_bal);
		Alert("p_val_dtls_struct_h->h_entl_amt_recd is %lf\n",p_ca_chk_det_struct_h->h_entl_amt_recd);
		Alert("p_payment_struct_h->h_quantity_recd  is %lf\n",p_ca_cacheque_struct_h_d->h_quantity_recd );
		Alert("p_val_dtls_struct_h->h_entl_quantity_due is %lf \n",p_ca_chk_det_struct_h->h_entl_quantity_due);
		Alert("p_val_dtls_struct_h->h_entl_quantity_recd is %lf \n",p_ca_chk_det_struct_h->h_entl_quantity_recd);
					
		if	(APL_GREATER(	p_ca_cacheque_struct_h_d->h_curr_pymt	,	 p_ca_chk_det_struct_h->h_entl_instr_inc_bal - p_ca_chk_det_struct_h->h_entl_amt_recd) && frc_due == 0/*Chirag Frc_Due Chk Included 210706*/	  ||
			APL_GREATER(	p_ca_cacheque_struct_h_d->h_quantity_recd	,	p_ca_chk_det_struct_h->h_entl_quantity_due - p_ca_chk_det_struct_h->h_entl_quantity_recd ))
				
		{
				
			if	(APL_GREATER(	p_ca_cacheque_struct_h_d->h_curr_pymt	, p_ca_chk_det_struct_h->h_entl_instr_inc_bal - p_ca_chk_det_struct_h->h_entl_amt_recd ) && frc_due == 0)/*Chirag Frc_Due Chk Included 210706*/ 
			{
								

							if	( p_ca_chk_det_struct_h->h_entl_amt_recd	==	0	)
								{
									CO_InsertErr(	l_debug_info_ptr,
															ERR_CASH_PYMT_GRTR_ENTITLE_DUE,
															APL_NULL_STRING,
															APL_NULL_STRING,
															APL_NULL_STRING,
															__LINE__,
															__FILE__
														);
								}
							else	
								{
									CO_InsertErr(	l_debug_info_ptr,
															ERR_PAY_MORE_DUES_CASH_SUM,
															APL_NULL_STRING,
															APL_NULL_STRING,
															APL_NULL_STRING,
															__LINE__,
															__FILE__
														);
								}
			  }
			Alert("Chirag Here .....\n");	
					
					if	(	APL_GREATER(	p_ca_cacheque_struct_h_d->h_quantity_recd	,	p_ca_chk_det_struct_h->h_entl_quantity_due - p_ca_chk_det_struct_h->h_entl_quantity_recd 	)
						)
						{
							
			Alert("Inside Failure reason .....\n");
			Alert("|%lf|\n",p_ca_cacheque_struct_h_d->h_quantity_recd);
							if	(p_ca_chk_det_struct_h->h_entl_quantity_recd	==	0)
								{			
									CO_InsertErr(	l_debug_info_ptr,
															ERR_PAY_MORE_DUES_STOCK,
															APL_NULL_STRING,
															APL_NULL_STRING,
															APL_NULL_STRING,
															__LINE__,
															__FILE__
														);
								}
							 else
								{			
									CO_InsertErr(	l_debug_info_ptr,
															ERR_PAY_MORE_DUES_STOCK_SUM,
															APL_NULL_STRING,
															APL_NULL_STRING,
															APL_NULL_STRING,
															__LINE__,
															__FILE__
														);
								}
							}
								
								APL_GOBACK_FAIL
				}

			
		
													
		Alert("Wating for error ......\n");
		
		if (strcmp(p_ca_chk_det_struct_h->h_rec_date,APL_NULL_STRING) != 0)
		{
			EXEC SQL SELECT 
				TO_DATE(:p_ca_cacheque_struct_h_d->h_pymt_dt)	-
				TO_DATE(:p_ca_chk_det_struct_h->h_rec_date)	
			INTO	:int_date_diff
			FROM	DUAL;

			IS_ANY_ORA_ERROR
			if	(	int_date_diff	<	0	)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_PAYDT_CANT_BEFORE_RECDT,
										p_ca_cacheque_struct_h_d->h_pymt_dt,
										p_ca_chk_det_struct_h->h_rec_date,	
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					APL_GOBACK_FAIL
				}	
		}
		
	Alert("Chirag Here ....1\n");		

		if ( 	(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_BOND))	&&	
				(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_CASH_DIV))  &&	
				(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_RHTS))  &&
				(strcmp(p_ca_chk_det_struct_h->h_evt_class,EVT_DECR_VAL))
					
					
			)
		{
		
			if (	CO_RtvSysDtTime(chr_l_sys_date,l_debug_info_ptr) == APL_FAILURE )
			{
				APL_GOBACK_FAIL
			}

			EXEC SQL SELECT 
				TO_DATE(:chr_l_sys_date ) - 
				TO_DATE(:p_ca_cacheque_struct_h_d->h_pymt_dt)	
			INTO	:int_date_diff
			FROM	DUAL;

			IS_ANY_ORA_ERROR

			if	(	int_date_diff	<	0	)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_DATE_CANT_GRT_TODAY,
										"Pay Date",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					APL_GOBACK_FAIL
				}	
		}
			
		
Alert("Chirag Here ....2\n");
		int_holiday_flag = 0;
      if (  CO_Chk_Holiday(p_ca_cacheque_struct_h_d->h_pymt_dt,
                              &int_holiday_flag,
                              l_debug_info_ptr,APL_NULL_STRING)
            == APL_FAILURE
         )
            {
               APL_GOBACK_FAIL
            }
      if (  int_holiday_flag   )
         {
            CO_InsertErr(l_debug_info_ptr,
                             ERR_DATE_IS_HOLIDAY,
                             "Pay Date ",
                             APL_NULL_STRING,
                             APL_NULL_STRING,
                             __LINE__,
                             __FILE__);
               APL_GOBACK_FAIL
        
 			}


	
			Alert("Chirag Here ....3\n");
			
			

			if	(	p_ca_chk_det_struct_h->h_entl_instr_inc_bal	==	0	&&
					p_ca_cacheque_struct_h_d->h_quantity_recd	==	0	)
			
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_VAL_SHLDBERR_POS,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					APL_GOBACK_FAIL
				}	
	
			if	(	p_ca_chk_det_struct_h->h_entl_quantity_due	==	0	&&
					p_ca_cacheque_struct_h_d->h_curr_pymt		==	0	)
			
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_VAL_SHLDBERR_POS,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);
					APL_GOBACK_FAIL
				}

	Alert("Chirag Here ....4 \n");
		
			
        EXEC SQL SELECT nvl(count(*),0) into :int_l_count_mod FROM CACHGEVENT
                WHERE corp_id = :p_ca_cacheque_struct_h_d->h_corp_id;

        IS_ANY_ORA_ERROR

        if (int_l_count_mod != 0)
        {
        CO_InsertErr(l_debug_info_ptr,
                           ERR_UNPRO_EVNT_MOD_EXST,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__
                           );
            APL_GOBACK_FAIL
        }
        
	Alert("Just before ......\n");
	
			APL_GOBACK_SUCCESS
			RETURN_SUCCESS	:
		
		{
			#	ifdef SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nExiting CA_CheckPayment successfully\n");
			#	endif
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			#	ifdef SYS_DEBUG
			fprintf(APL_OUT_FILE,"\nExiting CA_CheckPayment unsuccessfully\n");
			#	endif
			return (APL_FAILURE);
		}
}	

int  CA_RndPymt(CA_CACHEQUE_STRUCT_H *p_ca_cacheque_struct_h_d,
					  DEBUG_INFO_STRUCT_H     **l_debug_info_ptr
						 ) 
{
	struct	sqlca	sqlca;
	int		int_decimal_len;
	double   round_inc_val=0.0;
	double   round_quantity_val=0.0;
	char		chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short		l_i_instr_code=0;
	short l_cond_ca_7dec=0;

	#ifdef APL_THREADS
			APL_SET_CONTEXT
			EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	EXEC SQL SELECT DEC_LEN
	INTO :int_decimal_len
	FROM	DL_CURRENCY
	WHERE CURRENCY_CD =:p_ca_cacheque_struct_h_d->h_pymt_currency;
	Alert("\n ******** ASH ******* DECLEN = |%d| |%s| ",int_decimal_len,p_ca_cacheque_struct_h_d->h_pymt_currency);

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_CCY_NOTFND,p_ca_cacheque_struct_h_d->h_pymt_currency,APL_NULL_STRING,APL_NULL_STRING)

	CO_Round(p_ca_cacheque_struct_h_d->h_curr_pymt,
			  int_decimal_len,
			  &round_inc_val);			  	

	p_ca_cacheque_struct_h_d->h_curr_pymt = round_inc_val;
	round_inc_val =0.0;

	CO_Round(p_ca_cacheque_struct_h_d->h_other_chrgs,
			  int_decimal_len,
			  &round_inc_val);			  	

	p_ca_cacheque_struct_h_d->h_other_chrgs = round_inc_val;
	round_inc_val =0.0;

	CO_Round(p_ca_cacheque_struct_h_d->h_tax_amount,
			  int_decimal_len,
			  &round_inc_val);			  	

	p_ca_cacheque_struct_h_d->h_tax_amount = round_inc_val;
	round_inc_val =0.0;

	

	

	EXEC SQL SELECT INSTR_CODE
	INTO :chr_l_h_instrcode_A:l_i_instr_code
	FROM CAEVENT
	WHERE CORP_ID = RTRIM(:p_ca_cacheque_struct_h_d->h_corp_id);

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF,
														"Evnt. Record",
														p_ca_cacheque_struct_h_d->h_corp_id,
														APL_NULL_STRING )


l_cond_ca_7dec=0;
if (APL_FAILURE == CO_Chk_CntryEnabled("CA_QTY_LEN","SEVEN_DEC",&l_cond_ca_7dec,l_debug_info_ptr))
{
     APL_GOBACK_FAIL
}
if(l_cond_ca_7dec==0)
{
	if (APL_FAILURE == CR_Proc_InstrQtyRound(	p_ca_cacheque_struct_h_d->h_quantity_recd,
														chr_l_h_instrcode_A,
														&round_quantity_val,
														l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}
														
	p_ca_cacheque_struct_h_d->h_quantity_recd = round_quantity_val;

	if (APL_FAILURE == CR_Proc_InstrQtyRound(	p_ca_cacheque_struct_h_d->h_quantity_paid,
														chr_l_h_instrcode_A,
														&round_quantity_val,
														l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}
														
	p_ca_cacheque_struct_h_d->h_quantity_paid = round_quantity_val;
}
	
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_RndPymt successfully",NULL,NULL);
		}	
		return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_RndPymt unsuccessfully",NULL,NULL);
		}
		return (APL_FAILURE);
	}
}
