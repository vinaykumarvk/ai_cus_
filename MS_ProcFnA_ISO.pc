




#include "IV_Control_A.h"
#include "MS_Swift.h"
#include "CO_Commdef.h"
#include <string.h>
#include <stdlib.h>
#define COMMIT_COUNT_D  500

EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE ORACA;

#define REC_LOCK_ORA_ERROR -54




//AIX - Warnings Removal
int MS_Proc_MsgMain(char *p_ora_rowid,FILE *chr_finifile,FILE *l_errfile,FILE *l_techfile,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{



extern int MS_Rtv_MsgTags(MS_MSGENT_STRUCT,MS_TAG_ELM_STRUCT_H **,int *,char,int *,DEBUG_INFO_STRUCT_H **);

extern int IMsgSeqLoad(MS_MSGENT_STRUCT,MS_SEQ_ELM_STRUCT_H **,int *,char,int *,DEBUG_INFO_STRUCT_H **);

extern int MS_Proc_ISOMsg(char *,MS_TAG_ELM_STRUCT_H **,int,MS_SEQ_ELM_STRUCT_H **,int,MS_VAL_ELM_STRUCT_H **,int *,FILE *,int *,char *,char,MS_CALC_ELM_STRUCT_H **,int,MS_STATIC_VAL *,FILE *,char *,int *,char ,char *,char *,DEBUG_INFO_STRUCT_H **);

extern int MS_Proc_MsgFormat(MS_SEQ_ELM_STRUCT_H *,int ,MS_VAL_ELM_STRUCT_H *,int ,char *,char,char , char *,char *,char *);

extern int MT_Rtv_Base(MS_BASENO_STRUCT_H *,int *,DEBUG_INFO_STRUCT_H **);

extern int filecp(char *, char *,char , char *,char *,char *,char *,DEBUG_INFO_STRUCT_H **);

extern int CO_RtvNxtSeqNum(PRO_GSEQNUM_STRUCT_H *, DEBUG_INFO_STRUCT_H **);

extern int IGenMsgFileName(char *,DEBUG_INFO_STRUCT_H **);

extern int MS_Mod_MsgEnt(MS_MSGENT_STRUCT,int *,DEBUG_INFO_STRUCT_H **);

extern int MS_Mod_MsgLogAdd(MS_MSGLOG_STRUCT,int *,DEBUG_INFO_STRUCT_H **);

extern int MS_Mod_MsgStat(MS_MSGSTAT_STRUCT,int *,DEBUG_INFO_STRUCT_H **);

struct sqlca sqlca;
/* PJ */
MS_MSGENT_STRUCT l_ms_msgent_structa;
I_MS_MSGENT_STRUCT l_i_ms_msgent_struct;
memset(&l_ms_msgent_structa, NULL, sizeof(MS_MSGENT_STRUCT) );
EXEC SQL BEGIN DECLARE SECTION;
/* MS_MSGENT_STRUCT l_ms_msgent_structa;
I_MS_MSGENT_STRUCT l_i_ms_msgent_struct; PJ */

char h_swift_addr[201]=APL_NULL_STRING;
char h_infolex[201]=APL_NULL_STRING;
char h_gcn_addr[6]=APL_NULL_STRING;		// Changed the Array Size from 12 to 6 by Sana
char h_fax_addr[201]=APL_NULL_STRING;
char h_swift_tlx_gcn=APL_NULL_CHAR;
char chr_l_sfe_swftlx= APL_NULL_CHAR;
char chr_curr_swftlx=APL_NULL_CHAR;
char h_schedule[5]= APL_NULL_STRING;
char chr_h_eod_flg= APL_NULL_CHAR;
char chr_h_swftlx_old=APL_NULL_CHAR;
short i_sfe_swftlx = 0;
/*Increased size of chr_h_key variable for AIX for avoiding formater memory allocation issue*/
//char h_dl_client[APL_CLIENT_LENGTH],chr_h_prev_client[APL_CLIENT_LENGTH],chr_h_key[100],chr_h_msg_type,h_identify[41],chr_h_trefer[41],h_comb_msg,h_ora_rowid[APL_ROWID_LEN],chr_h_restart_data[51],h_status_ind[16],chr_prev_category[5];
char h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_h_key[100] = APL_NULL_STRING;
char chr_h_msg_type = APL_NULL_CHAR;
char h_identify[41] = APL_NULL_STRING;
char chr_h_trefer[41] = APL_NULL_STRING;
char h_comb_msg = APL_NULL_CHAR;
char h_ora_rowid[APL_ROWID_LEN] = APL_NULL_STRING;
char chr_h_restart_data[51] = APL_NULL_STRING;
char h_status_ind[16] = APL_NULL_STRING;
char chr_prev_category[5] = APL_NULL_STRING;
short i_swift_addr=0,i_infolex=0,i_gcn_addr=0,i_fax_addr=0,i_swift_tlx_gcn=0,i_identify=0,i_comb_msg=0,i_schedule=0,i_trefer=0,i_eod_flg=0,i_ora_rowid = 0,i_restart_info=0,i_status_ind=0;
short l_gr_52xind = 0, l_52xflg = 0;

char chr_h_prev_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_h_priority1_swift[201] = APL_NULL_STRING;
char chr_h_new_mnth[2] = APL_NULL_STRING;
char chr_h_weekly_stm[2] = APL_NULL_STRING;
char h_validate_flag[4] = APL_NULL_STRING;
char chr_h_sch_evaluate_flg[4] = APL_NULL_STRING;
char h_addrsequence_num[6] = APL_NULL_STRING;
char chr_h_schedule_evaluate_flg[9] = APL_NULL_STRING;
int int_l_h_dayofweek = 0;
char chr_l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
char chr_h_prev_sch_evaluate_flg[4] = APL_NULL_STRING;
int int_h_ctl_processed_ind =0;
int int_h_prev_processed_sw_rownum =0;
int int_h_firstp1_addr =0;
char l_temp[2] = APL_NULL_STRING;

/* PJ: Linux file closing issue */
short l_logfile_open_counter=0;


char chr_h_uniq_seme_refno[17] = APL_NULL_STRING;


char h_ca_event[3] = APL_NULL_STRING;
short l_ce_typ_found = 0;
char chr_l_old_priority1 = APL_NULL_CHAR;


char chr_h_fcstatus1[5] = APL_NULL_STRING;
char chr_h_fcstatus2[5] = APL_NULL_STRING;
int  int_h_548_send1 = 0;
int  int_h_548_send2 = 0;
char chr_h_fcstat1[2] = APL_NULL_STRING;
char chr_h_fcstat2[2] = APL_NULL_STRING;

/***********MS_MSGNO_548N04 Changes Starts****************/
char chr_l_dl_date[25] 			=	APL_NULL_STRING; //AIX -change memory allocation pblm
//Commented and rewritten for ISKB_6456(EOD got stuck) on 20122013- START
//char chr_l_broker_cd[11]						=	APL_NULL_STRING;
char chr_l_broker_cd[15]						=	APL_NULL_STRING;
//Commented and rewritten for ISKB_6456(EOD got stuck) on 20122013- END
char chr_l_contract_cd[17]						=	APL_NULL_STRING;
/***********MS_MSGNO_548N04 Changes Ends****************/


short	l_ru_52xN02ind	=	0;
char chr_h_domcp_account[APL_CLIENT_LENGTH];
char l_52xN02_msgno[3] =APL_NULL_STRING;
char	chr_l_note[9] = APL_NULL_STRING;
char	l_info_1[1751] = APL_NULL_STRING;
char	l_info_2[1751] = APL_NULL_STRING;
char	l_info_3[1751] = APL_NULL_STRING;
char	l_info_4[1751] = APL_NULL_STRING;
short i_info_1=0;
short i_info_2=0;
short i_info_3=0;
short i_info_4=0;

short	i_priority1_swift	=	0;
short i_validate_flag =  0;
short i_addrsequence_num =  0;
short i_schedule_evaluate_flg =  0;
short l_i_dayofweek = 0;
int   int_l_exist_a  = 0; 

EXEC SQL VAR h_swift_addr IS STRING;
EXEC SQL VAR h_validate_flag IS STRING;
EXEC SQL VAR h_ora_rowid IS STRING;
EXEC SQL VAR chr_h_key IS STRING;
EXEC SQL VAR h_infolex IS STRING;
EXEC SQL VAR h_gcn_addr IS STRING;
EXEC SQL VAR h_fax_addr IS STRING;
EXEC SQL VAR l_ms_msgent_structa.client IS STRING;
EXEC SQL VAR l_ms_msgent_structa.swift_msg_no IS STRING;
EXEC SQL VAR l_ms_msgent_structa.proc_init IS STRING;
EXEC SQL VAR l_ms_msgent_structa.info_file IS STRING;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR chr_h_prev_client IS STRING;
EXEC SQL VAR h_identify IS STRING;
EXEC SQL VAR h_schedule IS STRING;
EXEC SQL VAR h_addrsequence_num IS STRING;
EXEC SQL VAR chr_h_schedule_evaluate_flg IS STRING;
EXEC SQL VAR chr_l_sys_date IS STRING;


EXEC SQL VAR chr_h_fcstatus1 IS STRING;
EXEC SQL VAR chr_h_fcstatus2 IS STRING;


EXEC SQL VAR chr_h_priority1_swift IS STRING;



EXEC SQL VAR chr_h_domcp_account IS STRING;


EXEC SQL VAR chr_prev_category IS STRING;


char chr_h_crf_no[3] =APL_NULL_STRING;
short int_i_crf_no = 0;
EXEC SQL VAR chr_h_crf_no IS STRING;


EXEC SQL END DECLARE SECTION;


int int_returnval = 0,int_retstat = 0,int_tot_tag=0,int_tot_seq=0,int_tot_val=0,int_l_sw_rownum=1;
int int_msg_type_ctr=0,int_l_calc_ctr=0,int_msg_process=0,int_init=0,int_clsstat=0;
int int_commit_ctr=0;
int int_msg_exist=0,int_msg_gen_no=0,int_l_tlx_rownum=1,int_l_fax_rownum=1,int_l_gcn_rownum=1, l_counter=0;
char chr_l_addrseq_num[6];
char chr_l_msgtype='S',chr_prev_swftlx,chr_h_eof[2],chr_h_iscc[2],chr_h_subclient[11];
char chr_msg_addr_sel[2000],chr_l_msg_file[31],chr_l_msg_pathfname[PATH_LENGTH],chr_f_swftlx[2];
char  l_path_file_note[501] = APL_NULL_STRING;
char chr_l_date_time[APL_DATE_LEN],chr_l_msg_frm_file[31],chr_l_msg_pathfname1[100];
char chr_inifile[100],chr_l_data_pathfname[100],chr_l_data_path[100],chr_l_msg_path[100];
char message_class[7],chr_l_log_path[100],chr_l_log_name[100],chr_l_tech_name[100],chr_h_parm[2];
char chr_t_address[201]=APL_NULL_STRING;
char chr_l_txn_msg[7]=APL_NULL_STRING;
char chr_curr_msg_no[7]=APL_NULL_STRING;
char	chr_l_sys_date_time[APL_DATE_LEN];
char chr_l_consmsg = APL_NULL_CHAR;
MS_MSGLOG_STRUCT l_ms_msglog_struct;
MS_MSGSTAT_STRUCT l_ms_msgstat_structa;
MS_BASENO_STRUCT_H l_ms_baseno_struct_ha;
char chr_l_address[201]= APL_NULL_STRING;
char chr_l_address1[201] = APL_NULL_STRING;
char chr_l_statinfo[61] = APL_NULL_STRING;
char h_holdings[APL_FLAG_LENGTH]=APL_NULL_STRING;
short i_holdings = 0;
short mhold = 0;
int int_l_rownum_inc=0;
int int_l_sw_oldrownum = 0;
int      int_l_h_addrseq_num               = 0;
short    l_i_addrseq_num               = 0;


EXEC SQL VAR chr_h_parm IS STRING;//added by Tushar for ISKB_9963

char	chr_h_priority_new = APL_NULL_CHAR;
short i_priority_new = 0;
char chr_l_msg_no[7] = APL_NULL_STRING;
char chr_l_stat_tran_ind[2] = APL_NULL_STRING;		
char h_generate_flag[2] = APL_NULL_STRING;     
short i_generate_flag  =  0;							



MS_TAG_ELM_STRUCT_H *l_ms_tag_elm_struct_i = NULL;
MS_TAG_ELM_STRUCT_H *l_ms_tag_elm_struct_h_t = NULL;

MS_SEQ_ELM_STRUCT_H *l_ms_seq_elm_struct_h = NULL;
MS_SEQ_ELM_STRUCT_H *l_ms_seq_elm_struct_h_t = NULL;

MS_VAL_ELM_STRUCT_H *l_ms_val_elm_struct_h = NULL;
MS_VAL_ELM_STRUCT_H *l_ms_val_elm_struct_h_ta = NULL;

MS_CALC_ELM_STRUCT_H *l_ms_calc_elm_struct_h = NULL;
MS_CALC_ELM_STRUCT_H *l_ms_calc_elm_struct_h_t = NULL;

MS_STATIC_VAL *l_ms_static_val = NULL;
MS_STATIC_VAL *l_ms_static_val_b = NULL;

MS_STATIC_VAL *l_ms_static_val_temp= NULL;  /* PJ */

FILE *l_data_file=NULL;
FILE *fpn = NULL;
l_ms_msgent_structa.swift_count=0;
l_ms_msgent_structa.telex_count=0;
l_ms_msgent_structa.fax_count=0;
l_ms_msgent_structa.gcn_count=0;



l_ms_tag_elm_struct_h_t = l_ms_tag_elm_struct_i = (MS_TAG_ELM_STRUCT_H *)calloc(MAX_TAGS,sizeof(MS_TAG_ELM_STRUCT_H));
APL_MALLOC_FAIL(l_ms_tag_elm_struct_i);

l_ms_seq_elm_struct_h_t = l_ms_seq_elm_struct_h = (MS_SEQ_ELM_STRUCT_H *)calloc(1,sizeof(MS_SEQ_ELM_STRUCT_H));
APL_MALLOC_FAIL(l_ms_seq_elm_struct_h);

l_ms_val_elm_struct_h_ta = l_ms_val_elm_struct_h = (MS_VAL_ELM_STRUCT_H *)calloc(1,sizeof(MS_VAL_ELM_STRUCT_H));
APL_MALLOC_FAIL(l_ms_val_elm_struct_h);

l_ms_calc_elm_struct_h_t  = l_ms_calc_elm_struct_h = (MS_CALC_ELM_STRUCT_H *)calloc(20,sizeof(MS_CALC_ELM_STRUCT_H));
APL_MALLOC_FAIL(l_ms_calc_elm_struct_h);

l_ms_static_val_b = l_ms_static_val = (MS_STATIC_VAL *)calloc(11,sizeof(MS_STATIC_VAL));
APL_MALLOC_FAIL(l_ms_static_val);
/* PJ */
l_ms_static_val_temp = (MS_STATIC_VAL *)calloc(11,sizeof(MS_STATIC_VAL));
APL_MALLOC_FAIL(l_ms_static_val_temp);
char chr_l_stat[2]=APL_NULL_STRING;
int myi = 0;	
 memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(chr_l_statinfo,APL_NULL_CHAR,61);
 memset(chr_msg_addr_sel,APL_NULL_CHAR,2000);
 memset(chr_t_address,APL_NULL_CHAR,201);
 memset(l_ms_msglog_struct.client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(l_ms_msglog_struct.swift_msg_no,APL_NULL_CHAR,7);
 memset(l_ms_msglog_struct.maker,APL_NULL_CHAR,APL_USERID_LEN);
 memset(l_ms_msglog_struct.maker_dt,APL_NULL_CHAR,APL_DATE_LEN);
 memset(l_ms_msglog_struct.msg,APL_NULL_CHAR,31);
 memset(l_ms_msglog_struct.contact_details,APL_NULL_CHAR,201);
 memset(l_ms_msglog_struct.contact_details1,APL_NULL_CHAR,201);
 memset(l_ms_msglog_struct.baseid,APL_NULL_CHAR,7);
 memset(l_ms_msglog_struct.message_ind,APL_NULL_CHAR,61);
/***Added by Gouse - Start ****/
memset(l_ms_msglog_struct.checker,APL_NULL_CHAR,APL_USERID_LEN);
memset(l_ms_msglog_struct.checker_dt,APL_NULL_CHAR,APL_DATE_LEN);
memset(l_ms_msglog_struct.access_stamp,APL_NULL_CHAR,APL_DATE_LEN);

/**** Added by Gouse - End *****/

 memset(l_ms_msgstat_structa.proc_init,APL_NULL_CHAR,61);
 memset(chr_h_key,APL_NULL_CHAR,61);
 memset(chr_l_msg_pathfname,APL_NULL_CHAR,100);
 memset(chr_l_msg_pathfname1,APL_NULL_CHAR,100);
 memset(chr_l_data_pathfname,APL_NULL_CHAR,100);
 memset(chr_l_data_path,APL_NULL_CHAR,100);
 memset(chr_l_msg_path,APL_NULL_CHAR,100);
 memset(chr_l_log_path,APL_NULL_CHAR,100);
 memset(chr_l_log_name,APL_NULL_CHAR,100);
 memset(chr_l_tech_name,APL_NULL_CHAR,100);
 memset(chr_inifile,APL_NULL_CHAR,100);
 memset(message_class,APL_NULL_CHAR,7);
 memset(chr_l_address,APL_NULL_CHAR,201);
 memset(chr_l_address1,APL_NULL_CHAR,201);
 memset(chr_l_sys_date,APL_NULL_CHAR,APL_DATE_LEN);
 memset(chr_l_txn_msg,APL_NULL_CHAR,7);
 memset(l_ms_baseno_struct_ha.baseid,APL_NULL_CHAR,7);
 memset(l_ms_baseno_struct_ha.contact_details,APL_NULL_CHAR,201);
 memset(l_ms_baseno_struct_ha.access_stamp,APL_NULL_CHAR,APL_DATE_LEN);
 l_ms_baseno_struct_ha.swift_tlx_gcn = APL_NULL_CHAR;
 memset(chr_curr_msg_no,APL_NULL_CHAR,7);
 memset(chr_h_subclient,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(chr_h_iscc,APL_NULL_CHAR,2);
 memset(chr_h_parm,APL_NULL_CHAR,sizeof(chr_h_parm));//added by Tushar for ISKB_9963
 memset(chr_l_addrseq_num,APL_NULL_CHAR,6);
 memset(chr_f_swftlx,APL_NULL_CHAR,2);

 /**********MS_MSGNO_548N04 changes Starts***********/
 memset(chr_l_dl_date,APL_NULL_CHAR,25); //AIX Change -- memory allocation
 memset(chr_l_contract_cd,APL_NULL_CHAR,17);
 //Commented and rewritten for ISKB_6456(EOD got stuck) on 20122013- START
 //memset(chr_l_broker_cd,APL_NULL_CHAR,11);
memset(chr_l_broker_cd,APL_NULL_CHAR,15);
//Commented and rewritten for ISKB_6456(EOD got stuck) on 20122013- END
 /**********MS_MSGNO_548N04 changes Ends***********/
 
 memset(l_ms_msglog_struct.swift_msg_ident,APL_NULL_CHAR,17);
 memset(chr_l_note,APL_NULL_CHAR,9);
 memset(l_info_1,APL_NULL_CHAR,1751);
 memset(l_info_2,APL_NULL_CHAR,1751);
 memset(l_info_3,APL_NULL_CHAR,1751);
 memset(l_info_4,APL_NULL_CHAR,1751);

chr_h_priority_new = APL_NULL_CHAR;

memset(chr_h_crf_no,APL_NULL_CHAR,3);


chr_h_swftlx_old= APL_NULL_CHAR;
memset(chr_l_msg_no,APL_NULL_CHAR,7);


 memset(chr_h_domcp_account,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(l_52xN02_msgno,APL_NULL_CHAR,3);



memset(chr_l_stat_tran_ind,NULL,2);	
memset(h_generate_flag,APL_NULL_CHAR,2); 
memset(h_ca_event, APL_NULL_CHAR, 3); /* Vaibhav 22/02/2008 */ 
message_class[0] = 'S';
message_class[1] = 'Q' ; /*'Q'; */
message_class[2] = 'C'; /*'C' */
message_class[3] = 'M'; /*'M' */
message_class[4] = 'E'; /* 'E' */
message_class[5] = 'T'; /* 'T' */
/*message_class[5] = 'E'*/; /* 'E' */
message_class[6] = 'B'; /* SEBI */


	if (CO_ReadToken(chr_finifile,"INTL_MS_SND_PATH",chr_l_msg_path,l_debug_info_ptr)
   	             == APL_FAILURE )
		APL_GOBACK_FAIL;

	if (CO_ReadToken(chr_finifile,"INTL_MS_DATA_PATH",chr_l_data_path,l_debug_info_ptr)
   	             == APL_FAILURE )
		APL_GOBACK_FAIL;
	printf("\n calling CO_RtvSysParams ");
 	if(APL_FAILURE == CO_RtvSysParams(l_debug_info_ptr))
		APL_GOBACK_FAIL; 
	
	
	if(strlen(l_ms_msgent_structa.swift_msg_no) > 0 || strlen(h_dl_client) > 0 )	
	{
	printf("l_ms_msgent_structa.swift_msg_no is |%s|\n",l_ms_msgent_structa.swift_msg_no);	
	printf("h_dl_client is |%s|",h_dl_client);
	printf("int_l_h_addrseq_num is |%d|\n",int_l_h_addrseq_num);
	}
    
	/* VaibhavK Kotak_Uat  ISKB:656 22Feb2008 */ 
	/* MSG_IDENT_NO NOT IN ('31') condition added in below query */ 
	EXEC SQL DECLARE msg_addr_cur CURSOR FOR 
	SELECT SWIFT_ADDR,TELEX_ADDR,GCN_ADDR,FAX_ADDR,
	decode(swift_tlx_gcn,'Q','S','M','C',SWIFT_TLX_GCN),SWIFT_TLX_GCN,substr(IDENTIFY,1,25),IDENTIFY,
	SCHEDULE, COMB_MSG, HOLDINGS ,PRIORITY_IND,MSG_IDENT_NO, VALIDATE_IND, TO_CHAR(CONTACTSEQ), CLN_GENERATE_IND
	FROM MT_MSGADDRESS_VEW WHERE CLN_CODE = :h_dl_client AND
	MSG_IDENT_NO = (	SELECT MAX(to_number(MSG_IDENT_NO)) from MT_MSGADDRESS_VEW where 
					CLN_CODE = :h_dl_client and MSG_IDENT_NO in 
					(select rtrim(MSG_MAP_NO) FROM MS_MSGCRF WHERE ISO_MSG_NO = :l_ms_msgent_structa.swift_msg_no)
					 AND ISO_MSG_FORMAT =decode(:chr_h_msg_type,'B','S','Y')
		             AND MSG_IDENT_NO NOT IN ('31')  
		 	  )
	AND SWIFT_TLX_GCN = decode(:chr_h_msg_type,'B','S',:chr_h_msg_type)
	AND PRIORITY_IND !='9'
	AND (CONTACTSEQ = :int_l_h_addrseq_num OR :int_l_h_addrseq_num = 0)
	AND ISO_MSG_FORMAT =decode(:chr_h_msg_type,'B','S','Y')
	ORDER BY PRIORITY_IND,SCHEDULE;
 
    /* VaibhavK Kotak_Uat  ISKB:656 22Feb2008 */ 
    /* New Cursor "msg_addr_cur_sm" only for SM event */
   	EXEC SQL DECLARE msg_addr_cur_sm CURSOR FOR 
	SELECT SWIFT_ADDR,TELEX_ADDR,GCN_ADDR,FAX_ADDR,
	decode(swift_tlx_gcn,'Q','S','M','C',SWIFT_TLX_GCN),SWIFT_TLX_GCN,substr(IDENTIFY,1,25),IDENTIFY,
	SCHEDULE, COMB_MSG, HOLDINGS ,PRIORITY_IND,MSG_IDENT_NO, VALIDATE_IND, TO_CHAR(CONTACTSEQ), CLN_GENERATE_IND
	FROM MT_MSGADDRESS_VEW WHERE CLN_CODE = :h_dl_client AND
	MSG_IDENT_NO = (	SELECT MAX(to_number(MSG_IDENT_NO)) from MT_MSGADDRESS_VEW where 
					CLN_CODE = :h_dl_client and MSG_IDENT_NO in ('31','3')
					 AND ISO_MSG_FORMAT =decode(:chr_h_msg_type,'B','S','Y')
		 	  )
	AND SWIFT_TLX_GCN = decode(:chr_h_msg_type,'B','S',:chr_h_msg_type)
	AND PRIORITY_IND !='9'
	AND (CONTACTSEQ = :int_l_h_addrseq_num OR :int_l_h_addrseq_num = 0)
	AND ISO_MSG_FORMAT =decode(:chr_h_msg_type,'B','S','Y')
	ORDER BY PRIORITY_IND,SCHEDULE;

	if (APL_FAILURE == CO_Chk_CntryEnabled(	"MSG_52X",
														"GEN_52X_FOR_BOG",
														&l_gr_52xind,
														l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}
	if (!l_gr_52xind) 
	{
		if (APL_FAILURE == CO_Chk_CntryEnabled(  "MSG_52X",
															"GEN_52X_FOR_VTB",
															&l_gr_52xind,
															l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}
	}

	
 	memset(l_52xN02_msgno,APL_NULL_CHAR,3);
	
	strcpy(l_52xN02_msgno,MS_CRF_52XN02);
	if (APL_FAILURE == CO_Chk_CntryEnabled(	"MSG_52XN02",
														"GEN_52XN02_FOR_EURO",
														&l_ru_52xN02ind,
														l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	if (l_ru_52xN02ind)
	{
		EXEC SQL DECLARE msg_addr_cur_52xN02 CURSOR FOR
		SELECT SWIFT_ADDR,TELEX_ADDR,GCN_ADDR,FAX_ADDR,decode(swift_tlx_gcn,'Q','S','M','C',SWIFT_TLX_GCN),
		SWIFT_TLX_GCN,substr(IDENTIFY,1,25),IDENTIFY,
		SCHEDULE, COMB_MSG, HOLDINGS ,PRIORITY_IND,MSG_IDENT_NO
		FROM MT_CLIENT a , MT_MSGADDRESS b 
		WHERE a.CLN_CODE = :chr_h_domcp_account 
		AND	a.CLN_BRK_ALL 	= 'B' 
		AND	a.CLN_CODE	= b.cln_code
		AND	b.MSG_IDENT_NO		= :l_52xN02_msgno 
		AND 	b.SWIFT_TLX_GCN	=	:chr_h_msg_type
		AND   b.PRIORITY_IND	!=	'9'
		AND	b.ISO_MSG_FORMAT	=	'Y';	
	}

	if (l_gr_52xind)
	{
		EXEC SQL DECLARE msg_addr_cur_52x CURSOR FOR
		SELECT MS_VTB_MSG_ADDR FROM MT_MESSAGE_SYS_PARAMS;
	}

	
	EXEC SQL DECLARE msg_cur CURSOR FOR
            SELECT  swift_msg_no,proc_init,swift_msg_seqno,client,info_file,
                    swift_count,telex_count,fax_count,gcn_count,
                    clts_count,status,auto_tran_ind,proc_data,rowid 
		 FROM MS_MSGENT
       WHERE	( status = 'R' )
		/*	and swift_msg_no not in ('548N04','548N03')    */ /* Sana - Condition Added To Exclude 548 Messages for UAT Fix */
		/* and swift_msg_no not in ('548N04','548N03')*/			/*Added For ISKB_6289(Workaround for 535 Generation) on 23092013*/
		/*Changes done for ISKB_6289 commented for ISKB_6456 on 20122013 because ISKB_6289 was a workaround and actual issue got identified*/		
		 ORDER BY SWIFT_MSG_SEQNO;
	if(strlen(l_ms_msgent_structa.swift_msg_no) > 0)
	{	
	printf("\n opening for loop ******Vaibhav***** \n");	
/*	printf("\n chr_h_msg_type is vaibhavkarnik |%s| ",chr_h_msg_type); */
	printf("\n Swift Msg No |%s|",l_ms_msgent_structa.swift_msg_no); 
	}

   EXEC SQL OPEN msg_cur;
       	

	for( ; ; ) /*** main for loop ***/
	{
		int_g_curr_rec_no=0;						  
		int g_curr_rec_start = 0;				
		int g_prev_rec_start = 0;				
		myi = myi + 1;
		chr_h_msg_type = message_class[int_msg_type_ctr];
printf("\n 402 # 11 Evaluated msg changes: NOW MSG TYPE IS |%c| \n",chr_h_msg_type);
	
		strcpy(chr_h_fcstatus1,APL_NULL_STRING);         
      strcpy(chr_h_fcstatus2,APL_NULL_STRING);
		
	  	sqlca.sqlcode =  0;

		if(int_msg_type_ctr == 0 || int_msg_process == 1)
		{
			l_counter=0;
			EXEC SQL FETCH msg_cur INTO l_ms_msgent_structa:l_i_ms_msgent_struct;

			memset(chr_curr_msg_no,APL_NULL_CHAR,7);
			strcpy(chr_curr_msg_no,l_ms_msgent_structa.swift_msg_no);
			if(strlen(l_ms_msgent_structa.info_file) > 0 )
			printf("\n #12 Evaluated msg changes: picked data h_file |%s| \n",l_ms_msgent_structa.info_file);
		}


		if(l_i_ms_msgent_struct.i_swift_msg_no == -1)
			strcpy(l_ms_msgent_structa.swift_msg_no," ");

		printf("sqlca.sqlcode is |%d|***",sqlca.sqlcode);
		fflush(stdout);

	  	if (sqlca.sqlcode < 0)
      {
      	fprintf(l_errfile,"Error in fetching from msg_cur Cursor");
        	EXEC SQL CLOSE msg_cur;
         break; 
      }

	   if(sqlca.sqlcode == 1403)
			break;

	/* Linux - File close Issue Fix */
	printf("\n 513 Opening log files ");
	l_errfile = NULL;
	l_techfile = NULL;
	  if (APL_FAILURE == CO_Rtv_RptFileName("6B", APL_LOGFILE_DESC, 100, "ISO15022 MESSAGE FORMATTER DAEMON",NULL, &l_errfile, l_debug_info_ptr) )
	 {
		exit(-1);
	 }

	  if (APL_FAILURE == CO_Rtv_RptFileName("6b",APL_LOGFILE_DESC,100, "ISO15022 MESSAGE FORMATTER DAEMON", NULL, &l_techfile, l_debug_info_ptr) )
	 {
		exit(-1);
	 } 
	l_logfile_open_counter = 1;

      if(l_i_ms_msgent_struct.i_swift_count == -1)
			l_ms_msgent_structa.swift_count=0;
	
      if(l_i_ms_msgent_struct.i_telex_count == -1)
			l_ms_msgent_structa.telex_count=0;

      if(l_i_ms_msgent_struct.i_no_of_fax_addr == -1)
			l_ms_msgent_structa.fax_count=0;
	
      if(l_i_ms_msgent_struct.i_no_of_gcn_addr == -1)
			l_ms_msgent_structa.gcn_count=0;


		EXEC SQL SELECT STATUS INTO :chr_l_stat FROM MS_MSGENT WHERE ROWID = :l_ms_msgent_structa.rowid
					FOR UPDATE OF status NOWAIT;
		if (sqlca.sqlcode == REC_LOCK_ORA_ERROR )
		{
			sqlca.sqlcode = 0;
			continue;
		}
		IS_ANY_ORA_ERROR;

  	   memset(chr_l_data_pathfname,APL_NULL_CHAR,100);
      strcpy(chr_l_data_pathfname,chr_l_data_path);
      strcat(chr_l_data_pathfname,l_ms_msgent_structa.info_file);
      int g_cur_pos = 0; /*Added int for Linx Mig*/
      int g_prev_pos =0; /*Added int for Linx Mig*/
      printf("No of Open Files : %d",int_fnoopen);
	   if( (l_data_file = fopen(chr_l_data_pathfname,"r")) == NULL)
      {
      	int_msg_process = 1;
      	fprintf(l_errfile,"Error in opening datafile %s for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
     		continue; 
      }
	   printf("The Opened DataFile Name is : %s \n",l_ms_msgent_structa.info_file);   
      int_fnoopen++;
      int_returnval = 0;
 	   memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
		/* PJ */
	   /* int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CLIENT",l_data_file,
                                 &h_dl_client,0); */
	   int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CLIENT",l_data_file,&h_dl_client,
                                 &l_ms_static_val_temp,0); 

      if(int_returnval == APL_FAILURE)
      {
	    int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CLIENT",l_data_file,
                                 &h_dl_client,0); 
		 	if(int_returnval == APL_FAILURE)
		 	{
				fprintf(l_errfile,"Processing Datafile :  %s : Failure in fetching client for msg %s %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,l_ms_msgent_structa.proc_init);
				continue;
		 	}
	   }
		printf("******h_dl_client returned is %s\n",h_dl_client);
		if(strlen(h_dl_client)==0)
		{	
	    int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CLIENT",l_data_file,
                                 &h_dl_client,0); 
		 	if(int_returnval == APL_FAILURE)
		 	{
				fprintf(l_errfile,"Processing Datafile :  %s : Failure in fetching client for msg %s %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,l_ms_msgent_structa.proc_init);
				continue;
		 	}
		}
		
		int_returnval = 0;
		int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"UNIQREFNO",l_data_file,
												  &chr_h_uniq_seme_refno,0);
		printf(" after GetTable Value chr_h_uniq_seme_refno is %s\n",chr_h_uniq_seme_refno);
		if(int_returnval == APL_FAILURE)
		{
		fprintf(l_errfile,"Processing Datafile :  %s : Failure in fetching client for msg %s %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,l_ms_msgent_structa.proc_init);
		continue;
		}

      int_returnval = 0;
	   int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"PROC_INIT",l_data_file,
                                 &chr_h_key,0);
      if(int_returnval == APL_FAILURE)
      {
			fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching proc_init for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
			continue;
	   }
		/*BOJ-memset done for memory corruption-Javed[20/07/2014]*/
          memset(chr_h_parm,APL_NULL_CHAR,2); 
      if( strncmp(l_ms_msgent_structa.swift_msg_no,"535",3) == 0 )
		{
      	int_returnval = 0;
	   	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"NOHOLDGS",l_data_file,
                                    &chr_h_parm,0);
         if(int_returnval == APL_FAILURE)
         {
		 		fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching noholdings parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 		continue;
	      }
         int_returnval = 0;
	      int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"SWIFT_TLX_GCN",l_data_file,
                                    &chr_f_swftlx,0);
         if(int_returnval == APL_FAILURE)
         {
		 		fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching swift_tlx_gcn parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 		continue;
	      }
		}
		printf("\n\n\n\n *********msgno=%s****", l_ms_msgent_structa.swift_msg_no );
      if( !strcmp(l_ms_msgent_structa.swift_msg_no,"536") )
      {
      	int_returnval = 0;
 memset(chr_h_parm,APL_NULL_CHAR,sizeof(chr_h_parm));//added by Tushar for ISKB_9963
	      int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"ZEROMOV",l_data_file,
                                    &chr_h_parm,0);
         if(int_returnval == APL_FAILURE)
         {
		   	fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching no movements parameter  for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		   	continue;
	      }
		}
      if( !strcmp(l_ms_msgent_structa.swift_msg_no,"586") )
      {
      	int_returnval = 0;
	      int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"NOALLEG",l_data_file,
                                    &chr_h_parm,0);
         if(int_returnval == APL_FAILURE)
         {
		   	fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching no movements parameter  for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		   	continue;
	      }
		}
      if( !strcmp(l_ms_msgent_structa.swift_msg_no,"537") )
      {
      	int_returnval = 0;
	      int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"NOPENDGS",l_data_file,
                           			&chr_h_parm,0);
         if(int_returnval == APL_FAILURE)
         {
		   	fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching nopendings parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		   	continue;
	      }

			
			int_returnval = 0;
         int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"STAT_DL_IND",l_data_file,
                                    &chr_l_stat_tran_ind,0);
         if(int_returnval == APL_FAILURE)
         {
            fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching STAT_TRAN parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
            continue;
         }
			
		}
		/*else
		{
			printf("\n***********vaibhaV***********\n");
			memset(chr_l_stat_tran_ind,NULL,2);
		}*/
		

      if( !strcmp(l_ms_msgent_structa.swift_msg_no,"538") )
      {
         int_returnval = 0;
         int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"LOCCHG",l_data_file,
                                    &chr_h_parm,0);
         if(int_returnval == APL_FAILURE)
         {
            fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching no movements parameter  for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
            continue;
         }
      }
		
		if ((l_ru_52xN02ind) && (strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_54XN02) == 0))
		{
      	int_returnval = 0;
 	   	memset(chr_h_domcp_account,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	      int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"DOMESTIC_CPCLT",l_data_file,
                           			&chr_h_domcp_account,0);
         if(int_returnval == APL_FAILURE)
         {
		   	fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching DOMCPAC parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		   	continue;
	      }
		}
		printf("\n ******* client=%s***** \n", h_dl_client );
  		/*******************Changes for MS_MSGNO_548N04 **************************/	
		if( strcmp(l_ms_msgent_structa.swift_msg_no,"548N04") == 0 )
		{
			printf("\n Inside MSG changes ");
 memset(chr_l_dl_date,APL_NULL_CHAR,APL_DATE_LEN);
 memset(chr_l_contract_cd,APL_NULL_CHAR,17);
 //Commented and rewritten for ISKB_6456(EOD got stuck) on 20122013- START
// memset(chr_l_broker_cd,APL_NULL_CHAR,11);
memset(chr_l_broker_cd,APL_NULL_CHAR,15);
//Commented and rewritten for ISKB_6456(EOD got stuck) on 20122013- END

         int_returnval = 0;
	      int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CONTRACT_CD",l_data_file,
                                    chr_l_contract_cd,NULL,0);
		//	printf("chr_l_broker_cd is |%s|\n",chr_l_broker_cd);
			printf("chr_l_contract_cd is |%s|\n",chr_l_contract_cd);
         if(int_returnval == APL_FAILURE)
         {
		 		fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching swift_tlx_gcn parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 		continue; /*******Do we really want to continue**************/
	      }

         int_returnval = 0;
	      int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"BROKER_CD",l_data_file,
                                    chr_l_broker_cd,NULL,0);
			printf("chr_l_broker_cd is |%s|\n",chr_l_broker_cd);

         if(int_returnval == APL_FAILURE)
         {
		 		fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching swift_tlx_gcn parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 		continue; /*******Do we really want to continue**************/
	      }

      	int_returnval = 0;
 memset(chr_l_dl_date,APL_NULL_CHAR,APL_DATE_LEN); /* Changes by Dnyanesh 02/03/07*/

	   	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"DL_DATE",l_data_file,
                                    chr_l_dl_date,NULL,0);
				printf("\n 1After MS_Rtv_TabVal value  of chr_l_dl_date is |%s|",chr_l_dl_date);

         if(int_returnval == APL_FAILURE)
         {
		 		fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching noholdings parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 		continue; /*******Do we really want to continue*************/
	      }


		}
		else
		{
			printf("\n***********vaibhaV***********\n");
			memset(chr_l_stat_tran_ind,NULL,2);
		}

      while(strlen(h_dl_client) != 0)
		{
			printf("\n ******* dl client = |%s| \n ",h_dl_client);
			fprintf(l_techfile,"Processing Datafile : %s : record with sequence no :%d:\n",l_ms_msgent_structa.info_file,int_l_sw_rownum);
			clearerr(l_techfile);
			clearerr(l_data_file);
			int_l_sw_oldrownum = int_l_sw_rownum;
 			memset(chr_l_addrseq_num,APL_NULL_CHAR,6);
				
      	
         if (!strncmp(l_ms_msgent_structa.swift_msg_no,"535",3) || !strncmp(l_ms_msgent_structa.swift_msg_no,"536",3) || !strncmp(l_ms_msgent_structa.swift_msg_no,"537",3) || !strncmp(l_ms_msgent_structa.swift_msg_no,"586",3)|| !strncmp(l_ms_msgent_structa.swift_msg_no,"538",3))			
			{
				printf("\n Calling MS_Rtv_TabVal for ADDRSEQ_NUM for seq int_num %d and client %s ",int_l_sw_rownum,h_dl_client);   
				int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CONTACTSEQ",l_data_file, &chr_l_addrseq_num,0);	
			} 
			if(!strlen(chr_l_addrseq_num))
				int_l_h_addrseq_num = 0;
			else
				int_l_h_addrseq_num = atoi(chr_l_addrseq_num);
					
		   if (l_gr_52xind && (strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_52X)==0 || strcmp(l_ms_msgent_structa.swift_msg_no,MS_SWIFT_BOG_NO )==0 || strcmp(l_ms_msgent_structa.swift_msg_no,"54BN01")==0)) 
		   {
				l_52xflg = 1;
				EXEC SQL OPEN msg_addr_cur_52x;
         	IS_ANY_ORA_ERROR
		   }
		   else if ((l_ru_52xN02ind) && (!strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_54XN02)))
		   {
				l_52xflg = 2;
				EXEC SQL OPEN msg_addr_cur_52xN02;
         	IS_ANY_ORA_ERROR
		   }
			else if (strcmp(l_ms_msgent_structa.swift_msg_no,"548N04")==0)
			{
				l_52xflg = 4;
				sqlca.sqlcode = 0;
				printf("\n Inside 548N04 chr_l_broker_cd is |%s|\n",chr_l_broker_cd);
			}
		   else
		   {
				l_52xflg = 3;
				memset(h_ca_event, APL_NULL_CHAR, 3); /*VaibhavK 22/02/2008 */ 
               int_returnval = 0;
               int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CA_EVENT",l_data_file,
												  &h_ca_event,0);   

             if(int_returnval == APL_FAILURE)
			 {
				 fprintf(l_techfile,"Processing Datafile : %s : record with sequence no :%d:\n",l_ms_msgent_structa.info_file,int_l_sw_rownum);
				 continue;
			 }
            /* VaibhavK Kotak_Uat ISKB:656 22Feb2008 */
			Alert("h_ca_event is |%s|",h_ca_event);
			if(!strcmp(h_ca_event,"SM"))  			
			{					
				EXEC SQL OPEN msg_addr_cur_sm;
				IS_ANY_ORA_ERROR
			}				
			else
			{
				EXEC SQL OPEN msg_addr_cur; 
					Alert("sqlca.sqlcode at 805 is |%d|",sqlca.sqlcode);
          	    IS_ANY_ORA_ERROR
			} 

				printf("\n #13 Evaluated msg changes: opening msg_addr_cur \n");
		   }
			printf("\nl_52xflg is :%d:\n",l_52xflg);


			printf(" sqlca.sqlcode is %d***************\n",sqlca.sqlcode);
			if(sqlca.sqlcode < 0)
				fprintf(l_errfile,"Processing Datafile : %s : Error in accessing msg addresses for msg %s for client %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,h_dl_client);

			printf("\n * 643 ********\n");
         chr_prev_swftlx = APL_NULL_CHAR;
         int_msg_exist = 0;  
			mhold = 0;
			memset(chr_h_priority1_swift,APL_NULL_CHAR,201);
			int_h_firstp1_addr = 0;	
			chr_h_swftlx_old = APL_NULL_CHAR;
			l_ce_typ_found = 0;
			chr_l_old_priority1 = APL_NULL_CHAR;
			int_h_ctl_processed_ind=0;
         for( ; ; )
			{
				printf("\n ******************** AGAIN IN SECOND FOR LOOP ****************** ");	
					 
				memset(h_swift_addr, NULL, 201);
				memset(h_validate_flag, NULL, 4);
				memset(h_addrsequence_num, NULL, 6);
				memset(chr_h_schedule_evaluate_flg, NULL, 9);
				memset(h_infolex, NULL, 201);
				memset(h_gcn_addr, NULL, sizeof(h_gcn_addr));
				memset(h_fax_addr, NULL, 201);
				h_swift_tlx_gcn = APL_NULL_CHAR;
				chr_l_sfe_swftlx = APL_NULL_CHAR;
				memset(h_identify, NULL, 41);
				memset(chr_h_trefer, NULL, 41);
				memset(h_schedule, NULL, 5);
				memset(chr_h_crf_no,APL_NULL_CHAR,3); 
 				memset(chr_t_address,APL_NULL_CHAR,201);		//Added By Sana for multiple email messages
 				memset(chr_l_address,APL_NULL_CHAR,201);		//Added By Sana for multiple email messages
 				memset(chr_l_address1,APL_NULL_CHAR,201);		//Added By Sana for multiple email messages
				h_comb_msg = APL_NULL_CHAR;
				i_swift_addr = 0;
				i_infolex = 0;
				i_gcn_addr = 0;
				i_fax_addr = 0;
				i_swift_tlx_gcn = 0;
				i_identify = 0;
				i_trefer = 0;
				i_schedule = 0;
				i_comb_msg = 0;
				int_i_crf_no = 0; 


				printf("l_ms_msgent_structa.swift_msg_no is |%s|\n",l_ms_msgent_structa.swift_msg_no);	
				if (l_52xflg == 1)
				{
					EXEC SQL FETCH msg_addr_cur_52x INTO :h_swift_addr:i_swift_addr;
					IS_ANY_ORA_ERROR

					

					h_swift_tlx_gcn = 'S';
					int_msg_type_ctr = 6;
               if(strcmp(l_ms_msgent_structa.swift_msg_no,MS_SWIFT_BOG_NO)==0 
						|| strcmp(l_ms_msgent_structa.swift_msg_no,"54BN01")==0 )
						{
							chr_h_priority_new = '1'; 
						}
				 }
				 else if(l_52xflg == 2)
				 {
				   	
              	EXEC SQL FETCH 	msg_addr_cur_52xN02 INTO 	:h_swift_addr:i_swift_addr,
                 		                              			:h_infolex:i_infolex,
                       		                        			:h_gcn_addr:i_gcn_addr,
                             		                  			:h_fax_addr:i_fax_addr,
                                   		            			:h_swift_tlx_gcn:i_swift_tlx_gcn,
																			:chr_l_sfe_swftlx:i_sfe_swftlx,
				 																:h_identify:i_identify,
				  																:chr_h_trefer:i_trefer,
				  																:h_schedule:i_schedule,
				  																:h_comb_msg:i_comb_msg,
																				:h_holdings:i_holdings,
																				:chr_h_priority_new:i_priority_new,
																				:chr_h_crf_no:int_i_crf_no;
						
					
					
				 }
				 else if(l_52xflg == 4 )
				 {
					 /*****For MS_MSGNO_548N04 the address is to be picked up from DL_BCN table******/
					 if((l_counter == 0 ) && (message_class[int_msg_type_ctr]=='S'))
					 {
			                 Alert("chr_l_contract_cd is |%s|",chr_l_contract_cd);
					 printf("Inside if condition chr_l_broker_cd is |%s|\n",chr_l_broker_cd);
					 l_temp[0] = message_class[int_msg_type_ctr];
					 l_temp[1] = APL_NULL_CHAR;
						 EXEC SQL SELECT b.ADDR_FRM,
								null,
								ADDR_TO,
								null,
								'S',
								'S',
								null,null,null,null,null,'1','99',null,null,null
									INTO :h_swift_addr:i_swift_addr,
								:h_infolex:i_infolex,
								:h_gcn_addr:i_gcn_addr,
								:h_fax_addr:i_fax_addr,
								:h_swift_tlx_gcn:i_swift_tlx_gcn,
								:chr_l_sfe_swftlx:i_sfe_swftlx,
								:h_identify:i_identify,
								:chr_h_trefer:i_trefer,
								:h_schedule:i_schedule,
								:h_comb_msg:i_comb_msg,
								:h_holdings:i_holdings,
								:chr_h_priority_new:i_priority_new,
								:chr_h_crf_no:int_i_crf_no,
								:h_validate_flag:i_validate_flag,
								:h_addrsequence_num:i_addrsequence_num,
								:h_generate_flag:i_generate_flag
									FROM MT_PARTY a, DL_BCN b
									WHERE a.PTY_CODE = :chr_l_broker_cd
									AND a.PTY_CODE = b.BROKER_CD
									AND a.PTY_TYPE = 'B'
									AND b.DL_DATE = :chr_l_dl_date
									AND b.CONTRACT_CD = :chr_l_contract_cd
									AND b.BROKER_CD  = :chr_l_broker_cd ;
									
						 printf("sqlca.sqlcode is %d\n",sqlca.sqlcode);
						 IS_ANY_ORA_ERROR
					 }
						 printf("\n Message is NO4 ");
						 printf("\nchr_l_dl_date is |%s| \n",chr_l_dl_date);
						 printf("\nchr_l_contract_cd is |%s|\n",chr_l_contract_cd);
						 printf("\nchr_l_broker_cd is |%s|\n",chr_l_broker_cd);
						 printf("\nafter query!! sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
						 

				 }
				else
				 {
				 	
					printf("\n #14 Evaluated msg changes: 	fetching msg_addr_cur \n");
					printf("\n 723 for message=|%s| |%c| |%d| \n\n",l_ms_msgent_structa.swift_msg_no, chr_h_msg_type, int_l_h_addrseq_num);

					/* VaibhavK Kotak_Uat ISKB:656 22Feb2008 */
                
			Alert("h_ca_event is |%s|",h_ca_event);
					 if(!strcmp(h_ca_event,"SM"))
					 {
						 printf("\n inside SM cursor \n"); 

              	EXEC SQL FETCH 	msg_addr_cur_sm INTO :h_swift_addr:i_swift_addr,
                 		                              :h_infolex:i_infolex,
                       		                        :h_gcn_addr:i_gcn_addr,
                             		                  :h_fax_addr:i_fax_addr,
                                   		            :h_swift_tlx_gcn:i_swift_tlx_gcn,
																	:chr_l_sfe_swftlx:i_sfe_swftlx,
				 													:h_identify:i_identify,
				  													:chr_h_trefer:i_trefer,
				  													:h_schedule:i_schedule,
				  													:h_comb_msg:i_comb_msg,
																	:h_holdings:i_holdings,
																	:chr_h_priority_new:i_priority_new,
																	:chr_h_crf_no:int_i_crf_no,
																	:h_validate_flag:i_validate_flag,
																	:h_addrsequence_num:i_addrsequence_num,
																	:h_generate_flag:i_generate_flag;
					IS_ANY_ORA_ERROR
                    printf("\n After SM Fecth |%s| |%d|   \n",h_ca_event,sqlca.sqlcode);
					 }
                     else
                     {
						 printf("\n inside cursor Event other than SM \n");
							printf("\n |%s|%s|%c|%d| ", h_dl_client, l_ms_msgent_structa.swift_msg_no, chr_h_msg_type, int_l_h_addrseq_num);
							fflush(stdout);
					EXEC SQL FETCH 	msg_addr_cur INTO :h_swift_addr:i_swift_addr,
                 		                              :h_infolex:i_infolex,
                       		                        :h_gcn_addr:i_gcn_addr,
                             		                  :h_fax_addr:i_fax_addr,
                                   		            :h_swift_tlx_gcn:i_swift_tlx_gcn,
																	:chr_l_sfe_swftlx:i_sfe_swftlx,
				 													:h_identify:i_identify,
				  													:chr_h_trefer:i_trefer,
				  													:h_schedule:i_schedule,
				  													:h_comb_msg:i_comb_msg,
																	:h_holdings:i_holdings,
																	:chr_h_priority_new:i_priority_new,
																	:chr_h_crf_no:int_i_crf_no,
																	:h_validate_flag:i_validate_flag,
																	:h_addrsequence_num:i_addrsequence_num,
																	:h_generate_flag:i_generate_flag;
					Alert("Sqlca.sqlcode is |%d|",sqlca.sqlcode);
					IS_ANY_ORA_ERROR
                    printf("\n After Non- SM Fecth |%s| |%d| |%d|  \n",h_ca_event,sqlca.sqlcode,sqlca.sqlerrd[2]);
					} 



				 }

				

				printf("\n\n ******* ***** %d %s %d", myi, h_swift_addr, sqlca.sqlcode );

				if(i_swift_addr == -1)
				 	strcpy(h_swift_addr,APL_NULL_STRING);
             else
				 	strcpy(chr_t_address,h_swift_addr);

				 if(i_infolex == -1)
					strcpy(h_infolex,APL_NULL_STRING);
             else
					strcpy(chr_t_address,h_infolex);

				 if(i_gcn_addr == -1)
				 	strcpy(h_gcn_addr,APL_NULL_STRING);

				 if(i_fax_addr == -1)
			 		strcpy(h_fax_addr,APL_NULL_STRING); 
             else
			 		strcpy(chr_t_address,h_fax_addr);

				 if(i_schedule == -1)
					strcpy(h_schedule,APL_NULL_STRING); 

				 if(i_identify  == -1)
				 	strcpy(h_identify,APL_NULL_STRING); 

				 if(i_trefer  == -1)
				 	strcpy(chr_h_trefer,APL_NULL_STRING); 

				 if(i_validate_flag  == -1)
					strcpy(h_validate_flag,APL_NULL_STRING);

				 if(i_addrsequence_num  == -1)
					strcpy(h_addrsequence_num,APL_NULL_STRING);

             if(i_generate_flag  == -1)     
					strcpy(h_generate_flag,APL_NULL_STRING);

				 strcpy(l_ms_static_val[0].link_val,"IDENTIFY");
             strcpy(l_ms_static_val[0].link_tag,h_identify);
             strcpy(l_ms_static_val[1].link_val,"MCATEGORY");
             strcpy(l_ms_static_val[1].link_tag,h_schedule);
             strcpy(l_ms_static_val[2].link_val," ");
             strcpy(l_ms_static_val[3].link_val,"TELEX_ADDR");
             strcpy(l_ms_static_val[3].link_tag,chr_t_address);
             strcpy(l_ms_static_val[4].link_val,"TREFER");
             strcpy(l_ms_static_val[4].link_tag,chr_h_trefer);

				if( strncmp(l_ms_msgent_structa.swift_msg_no,"564",3) == 0 )
             strcpy(l_ms_static_val[5].link_val,"SECMOV");
				else
             strcpy(l_ms_static_val[5].link_val,"EVAL");

             strcpy(l_ms_static_val[6].link_val,"FCSTAT1");
             strcpy(l_ms_static_val[7].link_val,"FCSTAT2");
             strcpy(l_ms_static_val[8].link_val,"SUB_BLCK");

				 if(chr_h_msg_type =='B')
					 h_swift_tlx_gcn ='B';

				printf("\n*** sql code = |%d| l_counter = |%d| ",sqlca.sqlcode,l_counter);
				printf("\n*** rownum= |%d| l_counter = |%d| ",sqlca.sqlerrd[2] ,l_counter);
				/*Nikhil*/
				if(strncmp(l_ms_msgent_structa.swift_msg_no,"564",3)==0) 
				{
					int_returnval =0;
		       int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CA_EVENT",l_data_file,
												  &h_ca_event,0);
			Alert("h_ca_event is |%s|",h_ca_event);
				
					if(int_returnval == APL_FAILURE)
					{
						fprintf(l_errfile,"Nikhil fail Processing Datafile : %s : Failure in fetching consmsg chr_token for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
						int_msg_exist--;
						continue;
					}
				}
				/***
				if((chr_h_msg_type=='E') &&
						(strcmp(l_ms_msgent_structa.swift_msg_no,"564N99")!=0) &&
						(strcmp(l_ms_msgent_structa.swift_msg_no,"564N21")!=0) &&
						((strcmp(l_ms_msgent_structa.swift_msg_no,"564N11")!=0) 
						 ||  ((strcmp(l_ms_msgent_structa.swift_msg_no,"564N11")==0)
							 &&(strcmp(h_ca_event,"SD")==0)))
						&&  (strcmp(l_ms_msgent_structa.swift_msg_no,"564N88")!=0))	 **/
		   printf("Befor Check E-mail type chr_h_msg_type |%c| l_ms_msgent_structa.swift_msg_no |%s|\n",chr_h_msg_type,l_ms_msgent_structa.swift_msg_no);		
			fflush(stdout);
			/* (strcmp(l_ms_msgent_structa.swift_msg_no,"564N91")!=0) && Added by Gouse - 19/04/2013 - Email for OT Event */ 
         if(  ((chr_h_msg_type=='E') &&
              (strcmp(l_ms_msgent_structa.swift_msg_no,"564N99")!=0) &&
              (strcmp(l_ms_msgent_structa.swift_msg_no,"564N21")!=0) &&
				  (strcmp(l_ms_msgent_structa.swift_msg_no,"564N91")!=0) &&
              ((strcmp(l_ms_msgent_structa.swift_msg_no,"564N11")!=0)
		          ||  ((strcmp(l_ms_msgent_structa.swift_msg_no,"564N11")==0)
	              &&(strcmp(h_ca_event,"SD")==0)))
		         &&  (strcmp(l_ms_msgent_structa.swift_msg_no,"564N88")!=0))
	        ||( (chr_h_msg_type=='S') &&
		       (strcmp(l_ms_msgent_structa.swift_msg_no,"564N11")==0) &&
		      (strcmp(h_ca_event,"NS")==0) )  )
				{
					printf("Breaking...................\n");
					fflush(stdout);
					break;
				}
				else
				{
					printf("Not Breaking...................\n");
		   		printf("in else loop  chr_h_msg_type |%c| l_ms_msgent_structa.swift_msg_no |%s|\n",chr_h_msg_type,l_ms_msgent_structa.swift_msg_no);		
					fflush(stdout);
				}
             /* if(sqlca.sqlcode==0) *|| (l_counter==1))*/ 
             if((sqlca.sqlcode) || (l_52xflg == 4 && l_counter!=0  ))
				 {
					 printf("inside counter!!!\n");
					 printf("\n 799 %d\n", int_msg_exist);
					 if(int_msg_exist == 0)
					 {  
						 printf("\n 801 \n");
						 int_returnval = 0;
						 memset(chr_h_eof,APL_NULL_CHAR,2);
						 int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"EOF",l_data_file,
								 &chr_h_eof,0);
						 if(feof(l_data_file) == 0)
							 fgetpos(l_data_file,&g_cur_pos);
						 if(strcmp(chr_h_eof,"T") == 0)
						 {
							 printf("found EOF\n");
							 break;
						 }
						 int_l_sw_rownum++;
						 if (sqlca.sqlcode==1403)
						 {
							 printf("\n\n\n **** 814 |%s| |%s|\n\n\n",l_ms_msgent_structa.swift_msg_no, MS_MSGNO_54XN02);			
							 if ((l_ru_52xN02ind) && (strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_54XN02) == 0))
							 {
								 fprintf(l_errfile,"Processing Datafile : %s : No addresses set up for client %s for msg %s\n",l_ms_msgent_structa.info_file,chr_h_domcp_account,l_ms_msgent_structa.swift_msg_no);
							 }
							 else
							 {
								 fprintf(l_errfile,"Processing Datafile : %s : No addresses set up for client %s for msg %s\n",l_ms_msgent_structa.info_file,h_dl_client,l_ms_msgent_structa.swift_msg_no);
							 }
						 }
						 else
						 {
							 fprintf(l_errfile,"Processing Datafile : %s : got sqlca.sqlcode %d for client %s for msg %s\n"
									 ,l_ms_msgent_structa.info_file,sqlca.sqlcode,h_dl_client,l_ms_msgent_structa.swift_msg_no);
						 }
					 }
					 if (mhold)
					 {
						 int_l_sw_rownum = int_l_sw_oldrownum + 1 ;
						 mhold = 0;
					 }
					 printf("\n breaking.........\n ");
					  break; 
				 }
				 l_counter = 1 ; /*** 548N04 ***/

				if(strlen(h_validate_flag)>0)
				{
					printf("\n #15 Evaluated msg changes:  h_validate_flag is :%s:\n",h_validate_flag);
					if( strncmp(l_ms_msgent_structa.swift_msg_no,"535",3) == 0 )
					{
						chr_h_sch_evaluate_flg[0]=h_validate_flag[0];
						chr_h_sch_evaluate_flg[1]='\0';

						EXEC SQL SELECT VALIDATE_IND
						INTO :chr_h_schedule_evaluate_flg:i_schedule_evaluate_flg
						FROM MT_SCHDET WHERE CLN_CODE = :h_dl_client AND MSG_IDENT_NO = :chr_h_crf_no AND SCHIDEN_NO = :h_addrsequence_num;
						IS_ANY_ORA_ERROR

						printf("\n #16 Evaluated msg changes chr_h_schedule_evaluate_flg is |%s|\n",chr_h_schedule_evaluate_flg);

						if(sqlca.sqlcode == 0)
						{
							int_returnval = 0;
							memset(chr_h_new_mnth,APL_NULL_CHAR,2);
							int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"NEW_MNTH",l_data_file,&chr_h_new_mnth,0);

							printf("\n #17 Evaluated msg changes:  chr_h_new_mnth is :%s:\n",chr_h_new_mnth);

							if (strcmp(chr_h_new_mnth,"Y")==0)
							{
   							chr_h_sch_evaluate_flg[0]=chr_h_schedule_evaluate_flg[7];
   							chr_h_sch_evaluate_flg[1]='\0';
							}
							else
							{
   							int_returnval = 0;
								
   							int_returnval = CO_RtvSysDt(chr_l_sys_date,l_debug_info_ptr);

   							EXEC SQL SELECT TO_NUMBER(TO_CHAR(TO_DATE(:chr_l_sys_date),'D'))
   							INTO :int_l_h_dayofweek:l_i_dayofweek
   							FROM DUAL ;

   							chr_h_sch_evaluate_flg[0]=chr_h_schedule_evaluate_flg[int_l_h_dayofweek-1];
   							chr_h_sch_evaluate_flg[1]='\0';
							}
						}
					}
					else
						strcpy(chr_h_sch_evaluate_flg,h_validate_flag);
				}
				else
					strcpy(chr_h_sch_evaluate_flg,APL_NULL_STRING);

				strcpy(l_ms_static_val[5].link_tag,chr_h_sch_evaluate_flg);
            if( !strcmp(l_ms_msgent_structa.swift_msg_no,"535") ||  !strcmp(l_ms_msgent_structa.swift_msg_no,"535B") )
            {
            	strncpy(l_ms_static_val[8].link_tag,h_schedule,1);
            	strcat(l_ms_static_val[8].link_tag,APL_NULL_STRING);
            }

				printf("\n #18 Evaluated msg changes: 		SWIFT:|%s|, GCN:|%s|, REFER:|%s|, EVAL_FLG:|%s|, sch_eval_flg:|%s|, link_val[5]:|%s|, link_tag[5]:|%s|\n",h_swift_addr,h_gcn_addr,h_identify,h_validate_flag,chr_h_sch_evaluate_flg,l_ms_static_val[5].link_val,l_ms_static_val[5].link_tag);
				printf("\n #19 Evaluated msg changes: 		chr_h_prev_sch_evaluate_flg is :%s:\n",chr_h_prev_sch_evaluate_flg);

				if (chr_l_old_priority1 != chr_h_priority_new)
					l_ce_typ_found=0;
		chr_l_old_priority1 = chr_h_priority_new;

		
		
		printf("*** SAM **** before genr check *****\n");
		if( strstr("564N11^564R11^564R21^564N21^564N88^564N91^564R91^568N01^568N02^568N03",l_ms_msgent_structa.swift_msg_no) != NULL )
		{
			if( strlen(strstr("564N11^564R11^564R21^564N21^564N88^564N91^564R91^568N01^568N02^568N03",l_ms_msgent_structa.swift_msg_no)) != 0 )
			{
				if (strcmp(h_generate_flag,"Y")==0)
				{
					sqlca.sqlcode = 0;
					EXEC SQL SELECT 1 INTO :int_l_exist_a FROM MS_MSGLOG, MS_MSGENT, MT_CLIENT
						WHERE MS_MSGLOG.MESSAGE_IND = MS_MSGENT.SWIFT_MSG_SEQNO AND
						MS_MSGENT.SWIFT_MSG_NO = :l_ms_msgent_structa.swift_msg_no AND
						MT_CLIENT.CLN_CODE = MS_MSGLOG.CLIENT AND
						MT_CLIENT.CLN_GENERATE_IND = 'Y' AND
						trim(MS_MSGENT.PROC_DATA) = trim(:l_ms_msgent_structa.proc_data) AND
						MS_MSGLOG.CONTACT_DETAILS = decode(:h_swift_tlx_gcn,'S',:h_swift_addr,'C',:h_gcn_addr);

					printf("*** SAM GENR ****  sqlcode is |%d| \n",sqlca.sqlcode);
					IS_ANY_ORA_ERROR
						if (sqlca.sqlcode != 1403)
							continue;
				}
			}
		}
		printf("*** SAM **** after genr check *****\n");
		

		

		strcpy(chr_h_fcstat1,APL_NULL_STRING);
		strcpy(chr_h_fcstat2,APL_NULL_STRING);

		if (((i_validate_flag) != -1) && (strcmp(chr_h_crf_no,"21") == 0) && (strcmp(l_ms_msgent_structa.swift_msg_no,"548N03")==0))
		{
		int_returnval = 0;

		/* int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"STATUS_QUAL_IND",l_data_file,
												  &chr_h_fcstatus1,0); */
		int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"STATUS_QUAL",l_data_file,
												  &chr_h_fcstatus1,0); 

		int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"STAT_QUAL2",l_data_file,
												  &chr_h_fcstatus2,0);
 
			int_h_548_send1 = 0;
			int_h_548_send2 = 0;
			printf("\n ****** 953 |%s| |%s| |%s|\n\n",  chr_h_fcstatus1, chr_h_fcstatus2, h_validate_flag );
	      if (strlen(chr_h_fcstatus1)>0)
			{
			EXEC SQL SELECT count(*) into :int_h_548_send1 FROM PRO_SGENSTAT
						WHERE map_desc like '%'||:chr_h_fcstatus1||'%' AND map_type = 'FCOPTION'
						AND map_val = trim(:h_validate_flag);  

         IS_ANY_ORA_ERROR
			}

			if (strlen(chr_h_fcstatus2)>0)
			{
				
			  EXEC SQL SELECT count(*) into :int_h_548_send2 FROM PRO_SGENSTAT
				  		  WHERE map_desc like '%'||:chr_h_fcstatus2||'%' AND map_type = 'FCOPTION'
						  AND map_val = trim(:h_validate_flag);  

           IS_ANY_ORA_ERROR
			}

			printf("Value of mesg no :%s\n Value of STATUS_QUAL :%s\n Value of h_validate_flag :%s\n",chr_h_crf_no,chr_h_fcstatus1,h_validate_flag);
			printf("\n *** |%d| |%d| \n\n", int_h_548_send1, int_h_548_send2 );
			if ((int_h_548_send1 == 0 ) && (int_h_548_send2 == 0)) 
			{
			  continue;  
			}
			else if ((int_h_548_send1 > 0 ) && (int_h_548_send2 > 0))
			{
			  strcpy(chr_h_fcstat1,"Y");
			  strcpy(chr_h_fcstat2,"Y");
			}
			else
			{
				if(int_h_548_send1 > 0) 
				{
			     strcpy(chr_h_fcstat1,"Y");
			     strcpy(chr_h_fcstat2,"N");
				}
				if (int_h_548_send2 > 0)
				{
			     strcpy(chr_h_fcstat1,"N");
			     strcpy(chr_h_fcstat2,"Y");
				}
			}

			printf ("SSINHA going for further processing\n");
		}
		printf("\n 998 \n");
		strcpy(l_ms_static_val[6].link_tag,chr_h_fcstat1);
		strcpy(l_ms_static_val[7].link_tag,chr_h_fcstat2);
      strcpy(l_ms_static_val[9].link_val,"");
      strcpy(l_ms_static_val[9].link_tag,"");

		

		
		if (strcmp(chr_h_crf_no,"3")==0)
		{
			Alert("h_ca_event is |%s|",h_ca_event);
        /* memset(h_ca_event, APL_NULL_CHAR, 3);  //VaibhavK 22/02/2008  Commented for AIX UAT issue - 16/07/2012
		int_returnval = 0;
		int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CA_EVENT",l_data_file,
												  &h_ca_event,0); */
			Alert("h_ca_event is |%s|",h_ca_event);
		if ( (strcmp(l_ms_msgent_structa.swift_msg_no,"566N05") == 0 ) || (strcmp(h_ca_event,"RP") == 0 )  || (strcmp(h_ca_event,"RL") == 0 ))
				strcmp(h_ca_event,"RT");

		if(int_returnval == APL_FAILURE)
		{
		fprintf(l_errfile,"Processing Datafile :  %s : Failure in fetching Event Type for msg %s %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,l_ms_msgent_structa.proc_init);
		continue;
		}

		if ((strncmp(h_schedule,h_ca_event,2) != 0) && (strcmp(h_schedule,"ZZZZ") != 0))
			continue;
		else if ((strcmp(h_schedule,"ZZZZ") == 0)  && (l_ce_typ_found == 1))
			continue;
		else if(strncmp(h_schedule,h_ca_event,2) == 0)
				 l_ce_typ_found = 1;
	
		}

		int_h_firstp1_addr = 0;
		memset(chr_h_priority1_swift,APL_NULL_CHAR,201);
		if ((chr_h_priority_new != '1') && h_swift_tlx_gcn == 'S' )
		{
			if (chr_l_sfe_swftlx == 'S')
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN ='S'
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in( 'Y','S') and rownum < 2;

				IS_ANY_ORA_ERROR
					if (sqlca.sqlcode == 1403)
					{
						EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
							FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
							AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
							AND PRIORITY_IND ='1'
							AND SWIFT_TLX_GCN in ('Q')
							AND SWIFT_ADDR is not null
							AND SCHEDULE = :h_schedule
							AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
						IS_ANY_ORA_ERROR
					}
			}
			else if (chr_l_sfe_swftlx == 'Q')
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN ='Q'
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in ( 'Y','S')  and rownum < 2;
				IS_ANY_ORA_ERROR
					if (sqlca.sqlcode == 1403)
					{
						EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
							FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
							AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
							AND PRIORITY_IND ='1'
							AND SWIFT_TLX_GCN in ('S')
							AND SWIFT_ADDR is not null
							AND SCHEDULE = :h_schedule
							AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
						IS_ANY_ORA_ERROR
					}
			}
			if (sqlca.sqlcode == 1403)
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN in ('C')
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
				IS_ANY_ORA_ERROR
			}
			if (sqlca.sqlcode == 1403)
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN in ('M')
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
				IS_ANY_ORA_ERROR
			}
		}
		if ((chr_h_priority_new != '1') && h_swift_tlx_gcn == 'C')
		{
			if (chr_l_sfe_swftlx == 'C')
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN ='C'
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
				IS_ANY_ORA_ERROR
					if (sqlca.sqlcode == 1403)
					{
						EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
							FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
							AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
							AND PRIORITY_IND ='1'
							AND SWIFT_TLX_GCN in ('M')
							AND SWIFT_ADDR is not null
							AND SCHEDULE = :h_schedule
							AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
						IS_ANY_ORA_ERROR
					}
			}
			else if (chr_l_sfe_swftlx == 'M')
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN ='M'
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
				IS_ANY_ORA_ERROR
					if (sqlca.sqlcode == 1403)
					{
						EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
							FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
							AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
							AND PRIORITY_IND ='1'
							AND SWIFT_TLX_GCN in ('C')
							AND SWIFT_ADDR is not null
							AND SCHEDULE = :h_schedule
							AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
						IS_ANY_ORA_ERROR
					}
			}
			if (sqlca.sqlcode == 1403)
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN in ('S')
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
				IS_ANY_ORA_ERROR
			}
			if (sqlca.sqlcode == 1403)
			{
				EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift:i_priority1_swift
					FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
					AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
					AND PRIORITY_IND ='1'
					AND SWIFT_TLX_GCN in ('Q')
					AND SWIFT_ADDR is not null
					AND SCHEDULE = :h_schedule
					AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;
				IS_ANY_ORA_ERROR
			}
		} 

		chr_h_swftlx_old = h_swift_tlx_gcn;


		if((chr_h_priority_new == '1') && (int_h_firstp1_addr == 0))
		{
			int_h_firstp1_addr =1;
			strcpy(chr_h_priority1_swift,h_swift_addr);
		}

		else if ((chr_h_priority_new !='1') && (int_h_firstp1_addr == 0) && (!strcmp(chr_h_priority1_swift,APL_NULL_STRING)) ) 
		{
			EXEC SQL SELECT ltrim(rtrim(SWIFT_ADDR)) INTO :chr_h_priority1_swift 
				FROM MT_MSGADDRESS_VEW WHERE CLN_CODE=:h_dl_client
				AND MSG_IDENT_NO=rtrim(:chr_h_crf_no)
				AND PRIORITY_IND ='1'
				AND SWIFT_TLX_GCN = :chr_h_msg_type
				AND SWIFT_ADDR is not null
				AND SCHEDULE = :h_schedule
				AND ISO_MSG_FORMAT in ( 'Y','S') and rownum < 2;

			if((sqlca.sqlcode == -2112) || (sqlca.sqlcode == 1403)) 
			{
				memset(chr_h_priority1_swift,APL_NULL_CHAR,201);
			}
			else if (sqlca.sqlcode !=0)
			{
				IS_ANY_ORA_ERROR
			}
		}

		if (mhold)
			mhold = 0;	
		else
			int_msg_exist++;
		fflush(l_errfile);

		if((h_swift_tlx_gcn == 'S') || (h_swift_tlx_gcn=='B'))
		{
			strcpy(chr_l_address,h_swift_addr);
			 if(l_52xflg == 4 )
			 {
				strcpy(chr_l_address1,h_gcn_addr);
			 }
			 else
					strcpy(chr_l_address1,APL_NULL_STRING);
		}
		if(h_swift_tlx_gcn == 'C')
		{
			strcpy(chr_l_address,h_gcn_addr);
			strcpy(chr_l_address1,h_swift_addr);
		}
		if(h_swift_tlx_gcn == 'T')
		{
			strcpy(chr_l_address,h_infolex);
			strcpy(chr_l_address1,h_gcn_addr);
		}
		if(h_swift_tlx_gcn == 'F')
		{
			strcpy(chr_l_address,h_fax_addr);
			strcpy(chr_l_address1,APL_NULL_STRING);
		}
		if(h_swift_tlx_gcn == 'E')
		{
			strcpy(chr_l_address,h_swift_addr);
			strcpy(chr_l_address1,h_infolex);
		}

		strcpy(l_ms_baseno_struct_ha.contact_details,chr_l_address);
		Alert("chr_l_address = |%s|",chr_l_address);
		Alert("l_ms_baseno_struct_ha.contact_details = |%s|",l_ms_baseno_struct_ha.contact_details);
		fflush(stdout);
		
		l_ms_baseno_struct_ha.swift_tlx_gcn = h_swift_tlx_gcn;

                 printf("\n VaibhavA........chr_prev_swftlx =[%c]",chr_prev_swftlx);
                 printf("\n VaibhavA........h_swift_tlx_gcn =[%c]",h_swift_tlx_gcn);
                 printf("\n VaibhavA........chr_curr_msg_no =[%s]",chr_curr_msg_no);
                 printf("\n VaibhavA........chr_h_prev_sch_evaluate_flg =[%s]",chr_h_prev_sch_evaluate_flg);
                 printf("\n VaibhavA........chr_h_sch_evaluate_flg =[%s]",chr_h_sch_evaluate_flg);
                 printf("\n VaibhavA........chr_prev_category =[%s]",chr_prev_category);
                 printf("\n VaibhavA........h_schedule =[%s]",h_schedule);


			if(((chr_prev_swftlx == h_swift_tlx_gcn)&&
               ((strcmp(chr_h_prev_sch_evaluate_flg,chr_h_sch_evaluate_flg)==0)||(strcmp(chr_curr_msg_no,"535A") == 0))) && ((strcmp(chr_prev_category,h_schedule)==0) || ((strcmp(chr_curr_msg_no,"535")!=0) && (strcmp(chr_curr_msg_no,"535B")!=0))))
			{


				printf("\n #20 Evaluated msg changes: 				Both the  swift_tlx_gcn and evaluate_flg are SAME as previous \n");

				if(strncmp(l_ms_msgent_structa.swift_msg_no,"536",3) == 0)
				{
					if(strcmp(chr_h_parm,"Y") == 0 && h_swift_tlx_gcn == 'T')
					{
						int_msg_exist--;
						continue;
					}
				}
				if(strncmp(l_ms_msgent_structa.swift_msg_no,"586",3) == 0)
				{
					if(strcmp(chr_h_parm,"Y") == 0 && h_swift_tlx_gcn == 'T')
					{
						int_msg_exist--;
						continue;
					}
				}

				if(strncmp(l_ms_msgent_structa.swift_msg_no,"538",3) == 0)
				{
					if(strcmp(chr_h_parm,"Y") == 0 && h_swift_tlx_gcn == 'T')
					{
						int_msg_exist--;
						continue;
					}
				}


				if(!strcmp(chr_curr_msg_no,"535B"))
				{
					if( (h_comb_msg == 'N') ||
							(h_swift_tlx_gcn == 'T' && h_swift_tlx_gcn != chr_f_swftlx[0]) 
							|| ( (h_swift_tlx_gcn == 'C' || h_swift_tlx_gcn == 'S')
								&& chr_f_swftlx[0] == 'T') )
					{
						int_msg_exist--;
						continue;
					}
					strcpy(l_ms_msgent_structa.swift_msg_no,"535B");
				}
				if(!strcmp(chr_curr_msg_no,"535"))
				{
					if(h_comb_msg == 'Y')
					{
						int_msg_exist--;
						continue;
					}
					strcpy(l_ms_msgent_structa.swift_msg_no,"535");
				}


				if(strcmp(chr_h_parm,"Y") == 0  &&
						strcmp(chr_curr_msg_no,"535A") == 0)
				{
					int_returnval = 0;

					int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"COMB_MSG",l_data_file,&chr_l_consmsg,0);
					if(int_returnval == APL_FAILURE)
					{
						fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching consmsg chr_token for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
						int_msg_exist--;
						continue;
					}
					if(chr_l_consmsg != h_comb_msg)
					{
						int_msg_exist--;
						continue;
					}

					int_returnval = 0;
					memset(chr_h_iscc,APL_NULL_CHAR,2);
					int_returnval = MS_Rtv_TabVal(int_l_sw_oldrownum,"ISCC",l_data_file,&chr_h_iscc,0);
					if(int_returnval == APL_FAILURE)
					{
						fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching iscc chr_token for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
						int_msg_exist--;
						continue;
					}
					int_returnval = 0;
					memset(chr_h_subclient,APL_NULL_CHAR,11);
					int_returnval = MS_Rtv_TabVal(int_l_sw_oldrownum,"SUBACCOUNT",l_data_file,&chr_h_subclient,0);
					if(int_returnval == APL_FAILURE)
					{
						fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching subaccount chr_token for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
						int_msg_exist--;
						continue;
					}



					if ((!strcmp(h_dl_client,chr_h_subclient)) &&
							(h_holdings[0] == 'N'))
					{
						mhold=1;
						continue;
					}
					strcpy(l_ms_msgent_structa.swift_msg_no,"535A");

				}

				int_returnval = 0;
				memset(l_ms_baseno_struct_ha.baseid,APL_NULL_CHAR,7);
				//printf("\n\n\n ******* 1366 %c %c %c \n\n\n", l_mt_message_sys_params_struct_h.ccs_int_ind, chr_l_sfe_swftlx, chr_l_sfe_swftlx );Changes done for AIX Migration
				printf("\n\n\n ******* 1366 %s %c %c \n\n\n", l_mt_message_sys_params_struct_h.ccs_int_ind, chr_l_sfe_swftlx, chr_l_sfe_swftlx );
				if((strcmp(l_mt_message_sys_params_struct_h.ccs_int_ind,"N") == 0)  && (chr_l_sfe_swftlx !='Q') && (chr_l_sfe_swftlx != 'M'))
				{
					int_returnval = MT_Rtv_Base(&l_ms_baseno_struct_ha,&int_retstat,l_debug_info_ptr);

					if(int_returnval == APL_FAILURE)
					{
						fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching base no. for contact_details %c %s \n",l_ms_msgent_structa.info_file,h_swift_tlx_gcn,l_ms_msgent_structa.swift_msg_no);
						int_msg_exist--;
						continue;
					}
				} 

				memset(chr_l_msg_no,APL_NULL_CHAR,7);
				strcpy(chr_l_msg_no,l_ms_msgent_structa.swift_msg_no);	
				if(!strncmp(l_ms_msgent_structa.swift_msg_no,"535",3))
					strcpy(l_ms_msgent_structa.swift_msg_no,"535");
				if(!strncmp(l_ms_msgent_structa.swift_msg_no,"536",3))
					strcpy(l_ms_msgent_structa.swift_msg_no,"536");
				if(!strncmp(l_ms_msgent_structa.swift_msg_no,"586",3))
					strcpy(l_ms_msgent_structa.swift_msg_no,"586");
				if(!strncmp(l_ms_msgent_structa.swift_msg_no,"537",3))
					strcpy(l_ms_msgent_structa.swift_msg_no,"537");
				if(!strncmp(l_ms_msgent_structa.swift_msg_no,"538",3))
					strcpy(l_ms_msgent_structa.swift_msg_no,"538");

				int_returnval = 0;

				int_returnval = IGenMsgFileName(chr_l_msg_file,l_debug_info_ptr);
				fprintf(l_techfile,"Generating TBS :%s: for seq no :%d:\n\n",chr_l_msg_file,int_l_sw_rownum);
				clearerr(l_techfile);
				clearerr(l_data_file);
				int_msg_gen_no++;

				memset(l_ms_msglog_struct.client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
				memset(l_ms_msglog_struct.swift_msg_no,APL_NULL_CHAR,7);
				memset(l_ms_msglog_struct.maker,APL_NULL_CHAR,APL_USERID_LEN);
				memset(l_ms_msglog_struct.maker_dt,APL_NULL_CHAR,APL_DATE_LEN);
				memset(l_ms_msglog_struct.msg,APL_NULL_CHAR,31);
				memset(l_ms_msglog_struct.contact_details,APL_NULL_CHAR,201);
				memset(l_ms_msglog_struct.contact_details1,APL_NULL_CHAR,201);
				memset(l_ms_msglog_struct.baseid,APL_NULL_CHAR,7);
				memset(l_ms_msglog_struct.message_ind,APL_NULL_CHAR,61);

				memset(l_ms_msglog_struct.swift_msg_ident,APL_NULL_CHAR,17);


				if ((l_ru_52xN02ind) && (strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_54XN02) == 0))
					strcpy(l_ms_msglog_struct.client,chr_h_domcp_account);
				else if(strcmp(l_ms_msgent_structa.swift_msg_no,"548N04")==0)
					strcpy(l_ms_msglog_struct.client,chr_l_broker_cd);
				else
					strcpy(l_ms_msglog_struct.client,h_dl_client);

				if(strncmp(l_ms_msgent_structa.swift_msg_no,"54x",3) !=0 &&
						strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_52X) !=0 && strcmp(l_ms_msgent_structa.swift_msg_no, MS_SWIFT_BOG_NO)!=0 && strcmp(l_ms_msgent_structa.swift_msg_no,"54BN01") !=0)
					strncpy(l_ms_msglog_struct.swift_msg_no,l_ms_msgent_structa.swift_msg_no,3);
				else
					strcpy(l_ms_msglog_struct.swift_msg_no,chr_l_txn_msg);
				strcat(l_ms_msglog_struct.swift_msg_no,APL_NULL_STRING);
				strcpy(l_ms_msglog_struct.maker,"SYSTEM");

				printf("\n Vaibhav Swift MsgNo: |%s|",l_ms_msglog_struct.swift_msg_no);

				int_returnval = 0;

				int_returnval = CO_RtvSysDt(chr_l_sys_date,l_debug_info_ptr);
				if(int_returnval == APL_FAILURE)
				{
					fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching system chr_date\n",l_ms_msgent_structa.info_file);
					int_msg_exist--;
					continue;
				}
				strcpy(l_ms_msglog_struct.maker_dt,chr_l_sys_date);

				l_ms_msglog_struct.status_ind = 'Y';
				l_ms_msglog_struct.msg_in_out_ind = 'O';
				printf("\n Swift Msg No is vaibhavkarnik |%s| ",l_ms_msgent_structa.swift_msg_no);

				if (chr_l_sfe_swftlx == 'Q')
					l_ms_msglog_struct.message_class = 'Q';
				else if (chr_l_sfe_swftlx == 'M')
					l_ms_msglog_struct.message_class = 'M';
				else if (!strcmp(l_ms_msgent_structa.swift_msg_no,"548N04"))
				{
					/*l_ms_msglog_struct.message_class = 'S'; */
					l_ms_msglog_struct.message_class = 'B'; /** this is only for broker TUX **/
				}

			/*	else if(!strcmp(l_ms_msgent_structa.swift_msg_no,"54x"))
				{
					printf("\n***********Happy Diwali frm Vaibhav****************\n");
					l_ms_msglog_struct.message_class = 'I'; 
				}*/
							
				else if (chr_h_msg_type=='B')
				{
					printf("\n***********Happy Diwali frm Vaibhav****************\n");
					l_ms_msglog_struct.message_class = 'I'; 
				}

				else
					l_ms_msglog_struct.message_class = h_swift_tlx_gcn;

				strcpy(l_ms_msglog_struct.msg,chr_l_msg_file);
				strcpy(l_ms_msglog_struct.contact_details,chr_l_address);
				strcpy(l_ms_msglog_struct.contact_details1,chr_l_address1);
				strcpy(l_ms_msglog_struct.baseid,l_ms_baseno_struct_ha.baseid);
				strcpy(l_ms_msglog_struct.message_ind,ltoa(l_ms_msgent_structa.swift_msg_seqno));

				strcpy(l_ms_msglog_struct.swift_msg_ident,chr_h_uniq_seme_refno);

				int_returnval = 0;
				int_returnval = MS_Mod_MsgLogAdd(l_ms_msglog_struct,&int_retstat,l_debug_info_ptr); 
				if(int_returnval == APL_FAILURE)
				{
					fprintf(l_errfile,"Processing Datafile : %s : Failure in updating chr_log table for msg %s of type %c for client %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,h_swift_tlx_gcn,h_dl_client);
					int_msg_exist--;


					continue;
				}


				if((h_swift_tlx_gcn == 'S') || (h_swift_tlx_gcn == 'B'))
					l_ms_msgent_structa.swift_count++;
				else if(h_swift_tlx_gcn == 'T')
					l_ms_msgent_structa.telex_count++;
				else if(h_swift_tlx_gcn == 'F')
					l_ms_msgent_structa.fax_count++;
				else if(h_swift_tlx_gcn == 'C')
					l_ms_msgent_structa.gcn_count++;
				memset(chr_l_msg_pathfname1,APL_NULL_CHAR,100);
				strcpy(chr_l_msg_pathfname1,chr_l_msg_path);
				strcat(chr_l_msg_pathfname1,chr_l_msg_file);
				int_returnval = 0;

				printf("&&&&&&*********VALUE OF %s\n",chr_l_msg_no);



				int_returnval = filecp(h_identify, h_infolex,chr_h_priority_new, chr_l_msg_pathfname,chr_l_msg_pathfname1,chr_h_priority1_swift,chr_l_msg_no,l_debug_info_ptr);
				if(int_returnval == APL_FAILURE)
				{
					printf("\n ASTA FAILURE \n");
                                        /***Added %c for AIX Migration***/
					fprintf(l_errfile,"Processing Datafile : %s : Message not generated for %s of type %c %s %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,h_swift_tlx_gcn,h_dl_client,chr_h_key);
					int_msg_exist--;
					continue;
				}
				else
				{
					printf("\n ********* IN else part ********");

					if( APL_FAILURE == CO_RtvSysDtTime(chr_l_sys_date_time, l_debug_info_ptr))
						APL_GOBACK_FAIL;
					printf("\n ********* after time else part ********");
					memset(chr_l_statinfo,APL_NULL_CHAR,61);
					strcpy(chr_l_statinfo, chr_l_sys_date_time);
					strcat(chr_l_statinfo," : Processed ");
					strcat(chr_l_statinfo,h_dl_client);
					strcat(chr_l_statinfo," msg ");
					strcat(chr_l_statinfo,l_ms_msgent_structa.swift_msg_no);

					EXEC SQL UPDATE SYS_BATCHPROC 
						SET STAT_DET = :chr_l_statinfo
						WHERE ROWID = :p_ora_rowid;

					if(sqlca.sqlcode < 0 ||
							sqlca.sqlcode == 1403)
					{
						printf("\n ********* in commit failure else part ********");
						fprintf(l_errfile,"Failure in updating status_ind information in batch table\n");
						int_msg_exist--;
						EXEC SQL ROLLBACK WORK;
						IS_ANY_ORA_ERROR;
						continue;
					}
				}
				int_commit_ctr++;
				printf("\n ********* iberofr commit********");
				if(int_commit_ctr > COMMIT_COUNT_D)
				{
					EXEC SQL COMMIT WORK;
					IS_ANY_ORA_ERROR;
					printf("\n Afeter commit 2 ");
					fprintf(l_techfile,"\n************ COMMIT ***********\n");
					clearerr(l_techfile);
					clearerr(l_data_file);
					int_commit_ctr = 0;

					EXEC SQL SELECT processing_status,status
						INTO 	:chr_h_restart_data:i_restart_info,
								:h_status_ind:i_status_ind
									FROM SYS_BATCHPROC
									WHERE ROWID = :p_ora_rowid
									FOR UPDATE OF STATUS,PROCESSING_STATUS;

					if(sqlca.sqlcode < 0)
						fprintf(l_errfile,"Batch Table cannot be locked\n");

					IS_ANY_ORA_ERROR;
				}

				printf("\n ********* before continue********");
				continue;	
			}
			else
				printf("\n #1 Evaluated msg changes: 				Either the swift_tlx_gcn or evaluate_flg are diff \n");

             
             	if(!strcmp(chr_curr_msg_no,"535B"))
               {
               	if( (h_comb_msg == 'N') ||
                      (h_swift_tlx_gcn == 'T' && h_swift_tlx_gcn != chr_f_swftlx[0]) 
						 	 || ( (h_swift_tlx_gcn == 'C' || h_swift_tlx_gcn == 'S')
							 && chr_f_swftlx[0] == 'T') )
		       			{
			 					int_msg_exist--;
								printf("\n #2 Evaluated msg changes:		continuing from 535B iv_cond \n");
								continue;
							}
						strcpy(l_ms_msgent_structa.swift_msg_no,"535B");
					}
					if(!strcmp(chr_curr_msg_no,"535"))
					{
						if(h_comb_msg == 'Y')
						{
							int_msg_exist--;
							printf("\n #3 Evaluated msg changes:		continuing from 535 iv_cond \n");
			 				continue;
		       		}
		       		strcpy(l_ms_msgent_structa.swift_msg_no,"535");
                }
		     		 
                if(strcmp(chr_h_parm,"Y") == 0  &&
                   strcmp(chr_curr_msg_no,"535A") == 0)
					 {
                	int_returnval = 0;
					 	
                  int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"COMB_MSG",l_data_file,&chr_l_consmsg,0);
                  if(int_returnval == APL_FAILURE)
                  {
            			fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching consmsg chr_token for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
            			int_msg_exist--;
            			continue;
                  }
                  if(chr_l_consmsg != h_comb_msg)
                  {
							int_msg_exist--;
							printf("\n #4 Evaluated msg changes:		continuing from 535A iv_cond for CONSMSG\n");
							continue;
						}

                  int_returnval = 0;
		      		memset(chr_h_iscc,APL_NULL_CHAR,2);
                  int_returnval = MS_Rtv_TabVal(int_l_sw_oldrownum,"ISCC",l_data_file,&chr_h_iscc,0);
                  if(int_returnval == APL_FAILURE)
						{
							fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching iscc chr_token for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
							int_msg_exist--;
							continue;
						}
                  int_returnval = 0;
		      		memset(chr_h_subclient,APL_NULL_CHAR,11);
                  int_returnval = MS_Rtv_TabVal(int_l_sw_oldrownum,"SUBACCOUNT",l_data_file,&chr_h_subclient,0);
                  if(int_returnval == APL_FAILURE)
                  {
                  	fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching subaccount chr_token for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
                      int_msg_exist--;
                      continue;
                  }

						

                  

						if ((!strcmp(h_dl_client,chr_h_subclient)) &&
							 (h_holdings[0] == 'N'))
                  {
							mhold=1;
printf("\n #5 Evaluated msg changes:		continuing from 535A iv_cond for MASTER\n");
                     continue;
                  }
		      		strcpy(l_ms_msgent_structa.swift_msg_no,"535A");

					 }
		  			 



                if(!strcmp(l_ms_msgent_structa.swift_msg_no,"536"))
                {
                	if(strcmp(chr_h_parm,"Y") == 0 && (h_swift_tlx_gcn == 'S' || h_swift_tlx_gcn == 'C'))
                  {
                  	strcpy(l_ms_msgent_structa.swift_msg_no,"536A");
                  }
						else if(strcmp(chr_h_parm,"Y") == 0 && h_swift_tlx_gcn == 'T')
                  {
			 				int_msg_exist--;
                     continue;
                  }
		     		 }
                if(!strcmp(l_ms_msgent_structa.swift_msg_no,"586"))
                {
                	if(strcmp(chr_h_parm,"Y") == 0 && (h_swift_tlx_gcn == 'S' || h_swift_tlx_gcn == 'C'))
                  {
                  	strcpy(l_ms_msgent_structa.swift_msg_no,"586A");
                  }
						else if(strcmp(chr_h_parm,"Y") == 0 && h_swift_tlx_gcn == 'T')
                  {
			 				int_msg_exist--;
                     continue;
                  }
		     		 }
                if(!strcmp(l_ms_msgent_structa.swift_msg_no,"538"))
                {
                  if(strcmp(chr_h_parm,"N") == 0 && (h_swift_tlx_gcn == 'S' || h_swift_tlx_gcn == 'C'))
                  {
                     strcpy(l_ms_msgent_structa.swift_msg_no,"538A");
                  }
                  else if(strcmp(chr_h_parm,"Y") == 0 && h_swift_tlx_gcn == 'T')
                  {
                     int_msg_exist--;
                     continue;
                  }
                }

                if(!strcmp(l_ms_msgent_structa.swift_msg_no,"537"))
                {
                	if(strcmp(chr_h_parm,"Y") == 0 )
                  {
                  	strcpy(l_ms_msgent_structa.swift_msg_no,"537A");
                  }
		     		 }
                int_returnval = 0;
                if(h_swift_tlx_gcn == 'C')
                {
			  		 	chr_curr_swftlx = 'C';
                  h_swift_tlx_gcn = 'S';
                }
					 
						
						if((strcmp(chr_l_stat_tran_ind,"Y") == 0 ) && (strcmp(chr_h_parm,"Y") != 0))
                  {
							printf("\n Inside 537 B \n");
                     strcpy(l_ms_msgent_structa.swift_msg_no,"537B");
                     int_returnval = MS_Rtv_MsgTags(l_ms_msgent_structa,&l_ms_tag_elm_struct_i,&int_tot_tag,
                                             h_swift_tlx_gcn,&int_retstat,l_debug_info_ptr);

							memset(l_ms_msgent_structa.swift_msg_no,APL_NULL_CHAR,7);
                     strcpy(l_ms_msgent_structa.swift_msg_no,"537");
                  }
                  else
                  {
							printf("\n Inside 538 B \n");
	             		int_returnval = MS_Rtv_MsgTags(l_ms_msgent_structa,&l_ms_tag_elm_struct_i,&int_tot_tag,
                                          	h_swift_tlx_gcn,&int_retstat,l_debug_info_ptr);
						}
						
					 
                if(int_returnval == APL_FAILURE)
                {
					 	fprintf(l_errfile,"Processing Datafile : %s : Failure in accessing tags for msg %s of type %c \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,h_swift_tlx_gcn);
					 	APL_GOBACK_FAIL
	             }
	  
                	int_returnval = 0;
						
						if(strcmp(chr_l_stat_tran_ind,"Y") == 0)
                  {
                     strcpy(l_ms_msgent_structa.swift_msg_no,"537B");
                     int_returnval = IMsgSeqLoad(l_ms_msgent_structa,&l_ms_seq_elm_struct_h,&int_tot_seq,
                                             h_swift_tlx_gcn,&int_retstat,l_debug_info_ptr);

							memset(l_ms_msgent_structa.swift_msg_no,APL_NULL_CHAR,7);
                     strcpy(l_ms_msgent_structa.swift_msg_no,"537");
                  }
                  else
                  {
	  	     		 		int_returnval = IMsgSeqLoad(l_ms_msgent_structa,&l_ms_seq_elm_struct_h,&int_tot_seq,
                                             h_swift_tlx_gcn,&int_retstat,l_debug_info_ptr);
						}

          	    if(int_returnval == APL_FAILURE)
          	    {
					 	fprintf(l_errfile,"Processing Datafile : %s : Failure in accessing sequence for msg %s of type %c \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,h_swift_tlx_gcn);
						APL_GOBACK_FAIL
	  	     		 }
           
					 strcpy(l_ms_calc_elm_struct_h[0].link_val,"PAGENO");
                strcpy(l_ms_calc_elm_struct_h[1].link_val,"PARTNO");
                strcpy(l_ms_calc_elm_struct_h[2].link_val,"PORTFOLIO_AMT");
                strcpy(l_ms_calc_elm_struct_h[3].link_val,"TR3TOT");
                strcpy(l_ms_calc_elm_struct_h[4].link_val,"TR4TOT");
                strcpy(l_ms_calc_elm_struct_h[5].link_val,"TOTNET");
                strcpy(l_ms_calc_elm_struct_h[6].link_val,"START_SAFEK");
                strcpy(l_ms_calc_elm_struct_h[7].link_val,"TOTALDRAMT");
                strcpy(l_ms_calc_elm_struct_h[8].link_val,"TOTALCRAMT");
                strcpy(l_ms_calc_elm_struct_h[9].link_val,"NETDCAMT");
                strcpy(l_ms_calc_elm_struct_h[10].link_val,"OPNBAL");
                strcpy(l_ms_calc_elm_struct_h[11].link_val,"CLOSING_BAL");
                strcpy(l_ms_calc_elm_struct_h[12].link_val,"CURRBAL");
/* Done below changes for ISKB_1621 - SWIFT upgradation */
				strcpy(l_ms_calc_elm_struct_h[13].link_val,"PORTFOLIO"); //added by sachin for scotia - HOLP tag val was coming as USD1, always
                int_l_calc_ctr = 14;

		     		 for(int_init = 1;int_init <=10;int_init++) /*Changed for page number ISKB_1621*/
		     		 {
					 	l_ms_calc_elm_struct_h[int_init].link_tag = 0;
					 	l_ms_calc_elm_struct_h[int_init].PREV_VAL = 0;
					 	memset(l_ms_calc_elm_struct_h[int_init].inc_iv_cond,APL_NULL_CHAR,201);
					 	memset(l_ms_calc_elm_struct_h[int_init].res_iv_cond,APL_NULL_CHAR,201);
		     		 }
           


                int_returnval = 0;
 		     		 memset(l_ms_baseno_struct_ha.baseid,APL_NULL_CHAR,7);
					 if((strcmp(l_mt_message_sys_params_struct_h.ccs_int_ind,"N") == 0) && (chr_l_sfe_swftlx !='Q') && (chr_l_sfe_swftlx != 'M') && (chr_l_sfe_swftlx !='E'))
					 {
						 int_returnval = MT_Rtv_Base(&l_ms_baseno_struct_ha,&int_retstat,l_debug_info_ptr);

						 if(int_returnval == APL_FAILURE)
						 {
							 fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching base no. for contact_details %c %s \n",l_ms_msgent_structa.info_file,h_swift_tlx_gcn,l_ms_msgent_structa.swift_msg_no);
							 int_msg_exist--;
							 continue;
						 }
					 } 

                int_returnval = 0;

					 int_returnval = IGenMsgFileName(chr_l_msg_file,l_debug_info_ptr);
					 fprintf(l_techfile,"Generating TBS :%s: for seq no :%d:\n\n",chr_l_msg_file,int_l_sw_rownum);
					 clearerr(l_techfile);
					 clearerr(l_data_file);
                int_msg_gen_no++;
		     		 memset(chr_l_msg_pathfname,APL_NULL_CHAR,100);
                strcpy(chr_l_msg_pathfname,chr_l_msg_path);
                strcat(chr_l_msg_pathfname,chr_l_msg_file);

          	    
                int_returnval = 0;
		     		 memset(chr_l_txn_msg,APL_NULL_CHAR,7);
			  		 int_l_sw_oldrownum=int_l_sw_rownum;

               if(int_h_ctl_processed_ind==1)
					{
						printf("\n #6 Evaluated msg changes:			The CTL has already been processed \n");
						int_l_sw_rownum = int_h_prev_processed_sw_rownum;
						printf("\n #7 Evaluated msg changes: 			int_l_sw_rownum after reset |%d| \n",int_l_sw_rownum);

					}

					printf("\n #8 Evaluated msg changes:              calling the MS_Proc_ISOMsg \n");
					printf("\n #9 Evaluated msg changes:					For TBS |%s| \n",chr_l_msg_file);
					printf("\n #10 Evaluated msg changes:              current int_l_sw_rownum |%d| \n",int_l_sw_rownum);
               int_h_ctl_processed_ind = 1;
               int_h_prev_processed_sw_rownum = int_l_sw_rownum;

              	strcpy(chr_h_prev_sch_evaluate_flg,chr_h_sch_evaluate_flg);

         		 
	  	     		 int_returnval = MS_Proc_ISOMsg(l_ms_msgent_structa.swift_msg_no,&l_ms_tag_elm_struct_i,
                	                              int_tot_tag,&l_ms_seq_elm_struct_h,
                                                int_tot_seq,&l_ms_val_elm_struct_h,&int_tot_val,
                                                l_data_file,
					      								   &int_l_sw_rownum,
					      								   chr_l_msg_pathfname,
					      								   h_swift_tlx_gcn,
					      								   &l_ms_calc_elm_struct_h,
					      								   int_l_calc_ctr,
                                                l_ms_static_val,
					      								   l_errfile,
                                                chr_l_txn_msg,
                                                &int_retstat,
															   chr_h_priority_new,
														  	   chr_h_priority1_swift,
																chr_h_uniq_seme_refno,
                                                l_debug_info_ptr);

                 free(l_ms_val_elm_struct_h);
					  
		     		  l_ms_val_elm_struct_h = (MS_VAL_ELM_STRUCT_H *)calloc(1,sizeof(MS_VAL_ELM_STRUCT_H));
			  		  APL_MALLOC_FAIL(l_ms_val_elm_struct_h);
					  printf("h_uniq_seme_refno is %s\n",chr_h_uniq_seme_refno);
                     
                 if(chr_curr_swftlx == 'C')
                 {
                 	h_swift_tlx_gcn = 'C';
                  chr_curr_swftlx = APL_NULL_CHAR;
                 }

          	     if(int_returnval == APL_FAILURE)
          	     {
		        	  	
           					CO_ProcMonitor(l_errfile,APL_NULL_STRING,l_debug_info_ptr,NULL);
           					CO_FreeErrLst(l_debug_info_ptr);
        				

						fprintf(l_errfile,"Processing Datafile : %s : Failure in generating msg %s of type %c  %s %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,h_swift_tlx_gcn,h_dl_client,chr_h_key);
		   		   int_msg_exist--;
						continue;
	  	     		  }

					if((chr_h_msg_type=='E') && (strcmp(l_ms_msgent_structa.swift_msg_no,"564N99")!=0))
					{
                 int_returnval = 0;
			        memset(chr_l_note,APL_NULL_CHAR,9);
			        int_returnval = MS_Rtv_TabVal(int_l_sw_oldrownum,"LNOTE_NBR",l_data_file,&chr_l_note,0);
			        if(int_returnval == APL_FAILURE)
			        {
			           fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching note chr_token for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
			           int_msg_exist--;
			           continue;
			        }

						  printf("HERE I AM 4 chr_l_not is %s\n",chr_l_note);
						  fflush(stdout);
					  if(strcmp(chr_l_note,APL_NULL_STRING)!=0)
					  {

					  strcpy(l_path_file_note,chr_l_msg_path);
					  strcat(l_path_file_note,chr_l_msg_file);
					  printf("l_path_file_note is |%s|\n",l_path_file_note);
					  

			      	if( (fpn = fopen(l_path_file_note,"a+")) == NULL)
					   {
					       fprintf(l_errfile,"Error in opening MESSAGE File %s for msg %s\n",l_path_file_note,l_ms_msgent_structa.swift_msg_no);
					        continue;
					   }
						memset(l_info_1,APL_NULL_CHAR,1751);
						memset(l_info_2,APL_NULL_CHAR,1751);
						memset(l_info_3,APL_NULL_CHAR,1751);
						memset(l_info_4,APL_NULL_CHAR,1751);
						printf("HERE I AM 1\n");
					  
					  EXEC SQL SELECT INFO_1,INFO_2, INFO_3, INFO_4
						  		  INTO 	:l_info_1:i_info_1,
											:l_info_2:i_info_2,
											:l_info_3:i_info_3,
											:l_info_4:i_info_4
									FROM CANOTE
									WHERE INFO_SEQ =:chr_l_note;
						  printf("sqlca.sqlcode is %d\n",sqlca.sqlcode);
					  IS_ANY_ORA_ERROR

						  if(strcmp(l_info_1,APL_NULL_STRING)!=0)
						  {
							printf("JC::: Printing the footnote in TBS for email\n");
							  fprintf(fpn,"%s",l_info_1);
							 // fprintf(fpn,"\n"); Commented by JC - ISKB 636
						  }

						  if(strcmp(l_info_2,APL_NULL_STRING)!=0)
						  {
							  fprintf(fpn,"%s",l_info_2);
							 // fprintf(fpn,"\n"); Commented by JC - ISKB 636
						  }

						  if(strcmp(l_info_3,APL_NULL_STRING)!=0)
						  {
							  fprintf(fpn,"%s",l_info_3);
							 // fprintf(fpn,"\n"); Commented by JC - ISKB 636
						  }
						  if(strcmp(l_info_4,APL_NULL_STRING)!=0)
						  {
							  fprintf(fpn,"%s",l_info_4);
							 // fprintf(fpn,"\n"); Commented by JC - ISKB 1022
						  }

						  printf("HERE I AM 3\n");
							fprintf(fpn,"\n"); /* JC - ISKB 1022 */
						  fprintf(fpn,"IF YOU HAVE ANY QUERIES IN THIS MATTER PLEASE DO NOT HESITATE TO\n");
						  fprintf(fpn,"CONTACT US.\n");
						  fprintf(fpn,"\n");
						  fprintf(fpn,"WARM REGARDS\n");

						  fclose(fpn);
					  }
					}



					  
                 if(!strncmp(l_ms_msgent_structa.swift_msg_no,"535",3))
							strcpy(l_ms_msgent_structa.swift_msg_no,"535");
                 if(!strncmp(l_ms_msgent_structa.swift_msg_no,"536",3))
							strcpy(l_ms_msgent_structa.swift_msg_no,"536");
                 if(!strncmp(l_ms_msgent_structa.swift_msg_no,"586",3))
							strcpy(l_ms_msgent_structa.swift_msg_no,"586");
                 if(!strncmp(l_ms_msgent_structa.swift_msg_no,"537",3))
							strcpy(l_ms_msgent_structa.swift_msg_no,"537");
                 if(!strncmp(l_ms_msgent_structa.swift_msg_no,"538",3))
                     strcpy(l_ms_msgent_structa.swift_msg_no,"538");
                
 		     		  memset(l_ms_msglog_struct.client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 		     		  memset(l_ms_msglog_struct.swift_msg_no,APL_NULL_CHAR,7);
 		     		  memset(l_ms_msglog_struct.maker,APL_NULL_CHAR,APL_USERID_LEN);
 		     		  memset(l_ms_msglog_struct.maker_dt,APL_NULL_CHAR,APL_DATE_LEN);
 		     		  memset(chr_l_sys_date,APL_NULL_CHAR,APL_DATE_LEN);
 		     		  memset(l_ms_msglog_struct.msg,APL_NULL_CHAR,31);
 		     		  memset(l_ms_msglog_struct.contact_details,APL_NULL_CHAR,201);
 		     		  memset(l_ms_msglog_struct.contact_details1,APL_NULL_CHAR,201);
 		     		  memset(l_ms_msglog_struct.baseid,APL_NULL_CHAR,7);
 		     		  memset(l_ms_msglog_struct.message_ind,APL_NULL_CHAR,61);

					  
					  if ((l_ru_52xN02ind) && (strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_54XN02) == 0))
						  strcpy(l_ms_msglog_struct.client,chr_h_domcp_account);
					  else if(strcmp(l_ms_msgent_structa.swift_msg_no,"548N04")==0)
						  strcpy(l_ms_msglog_struct.client,chr_l_broker_cd);
					  else
						  strcpy(l_ms_msglog_struct.client,h_dl_client);
					  

                 
					  l_ms_msglog_struct.client[strlen(l_ms_msglog_struct.client)] = APL_NULL_CHAR;
					  
					
		     		  if(strncmp(l_ms_msgent_structa.swift_msg_no,"54x",3) !=0 &&
		        		  strcmp(l_ms_msgent_structa.swift_msg_no,MS_MSGNO_52X) !=0 && strcmp(l_ms_msgent_structa.swift_msg_no, MS_SWIFT_BOG_NO)!=0  && strcmp(l_ms_msgent_structa.swift_msg_no,"54BN01") !=0 )
                 		strncpy(l_ms_msglog_struct.swift_msg_no,l_ms_msgent_structa.swift_msg_no,3);
		     		  else
							strcpy(l_ms_msglog_struct.swift_msg_no,chr_l_txn_msg);
                 
					  l_ms_msglog_struct.swift_msg_no[strlen(l_ms_msglog_struct.swift_msg_no)] = APL_NULL_CHAR;
		     		  strcpy(l_ms_msglog_struct.maker,"SYSTEM");
					  
			  		  l_ms_msglog_struct.maker[strlen(l_ms_msglog_struct.maker)]	= APL_NULL_CHAR;
	
                 int_returnval = 0;
					
                 int_returnval = CO_RtvSysDt(chr_l_sys_date,l_debug_info_ptr);
                 if(int_returnval == APL_FAILURE)
                 {
							fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching system chr_date\n",l_ms_msgent_structa.info_file);
							int_msg_exist--;
							continue;
	              }
		     		  strcpy(l_ms_msglog_struct.maker_dt,chr_l_sys_date);
		    		  

				     l_ms_msglog_struct.status_ind = 'Y';
				     l_ms_msglog_struct.msg_in_out_ind = 'O';
                                        printf("\n *VaibhavK 29Jan2008****** Message Class = [%c]",h_swift_tlx_gcn); 

					  if (chr_l_sfe_swftlx == 'Q')
						  l_ms_msglog_struct.message_class = 'Q';
					  else if (chr_l_sfe_swftlx == 'M')
						  l_ms_msglog_struct.message_class = 'M';
					  else if (!strcmp(l_ms_msgent_structa.swift_msg_no,"548N04"))
					  {
						  /*l_ms_msglog_struct.message_class = 'S'; */
						  printf("\n ****** It's 548N04-Broker ******");
						  l_ms_msglog_struct.message_class = 'B'; /** this is only for broker TUX **/
					  }
					  /* VaibhavK Kotak-Uat ISKB:630 */   
					  else if (!strcmp(l_ms_msgent_structa.swift_msg_no,"54x") && chr_h_msg_type=='B')
					  {
						 printf("\n Ohh God pls Help me ***********");
						  l_ms_msglog_struct.message_class = 'I'; /** this is only for Client VAI **/
					  }

					  else if (chr_h_msg_type=='B')
                                          {  
                                                 printf("\n **** VaibhavK 29January2008************");
						  l_ms_msglog_struct.message_class = 'I';
                                          }
					  else
						  l_ms_msglog_struct.message_class = h_swift_tlx_gcn;

				     strcpy(l_ms_msglog_struct.msg,chr_l_msg_file);
				     
			  		  l_ms_msglog_struct.msg[strlen(l_ms_msglog_struct.msg)] = APL_NULL_CHAR;
		     		  strcpy(l_ms_msglog_struct.contact_details,chr_l_address);
						Alert("l_ms_msglog_struct.contact_details is |%s|",l_ms_msglog_struct.contact_details);
		     		  
			  		  l_ms_msglog_struct.contact_details[strlen(l_ms_msglog_struct.contact_details)] = APL_NULL_CHAR;
		     		  strcpy(l_ms_msglog_struct.contact_details1,chr_l_address1);
				Alert("l_ms_msglog_struct.contact_details1 is |%s|",l_ms_msglog_struct.contact_details1);
		  			  
			  		  l_ms_msglog_struct.contact_details1[strlen(l_ms_msglog_struct.contact_details1)] = APL_NULL_CHAR;
		     		  strcpy(l_ms_msglog_struct.baseid,l_ms_baseno_struct_ha.baseid);
		     		  
			  		  l_ms_msglog_struct.baseid[strlen(l_ms_msglog_struct.baseid)] = APL_NULL_CHAR;
		     		  strcpy(l_ms_msglog_struct.message_ind,ltoa(l_ms_msgent_structa.swift_msg_seqno));
		     		  
			  		  l_ms_msglog_struct.message_ind[strlen(l_ms_msglog_struct.message_ind)] = APL_NULL_CHAR;
					  
					  strcpy(l_ms_msglog_struct.swift_msg_ident,chr_h_uniq_seme_refno);

			  	     
                 int_returnval = 0;
						Alert("l_ms_msglog_struct.access_stamp is |%s|",l_ms_msglog_struct.access_stamp);
                 int_returnval = MS_Mod_MsgLogAdd(l_ms_msglog_struct,&int_retstat,l_debug_info_ptr); 
                 if(int_returnval == APL_FAILURE)
                 {
							fprintf(l_errfile,"Processing Datafile : %s : Failure in updating chr_log table for msg %s of type %c for client %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no,h_swift_tlx_gcn,h_dl_client);
		        			int_msg_exist--;
						   
							
						   continue;
	              }

   

					if((strcmp(l_ms_msgent_structa.swift_msg_no,"54x")==0) || (strcmp(l_ms_msgent_structa.swift_msg_no,"54xN01")==0) || (strcmp(l_ms_msgent_structa.swift_msg_no,"548N03")==0) || (strcmp(l_ms_msgent_structa.swift_msg_no,"578N01")==0)||(strcmp(l_ms_msgent_structa.swift_msg_no,"508")==0) || (strcmp(l_ms_msgent_structa.swift_msg_no,"538")==0))
					{
                 	EXEC SQL UPDATE DL_MSGLINK
                  	         SET MSG_IN_OUT_IND='Z'
                     	      WHERE CLIENT=:l_ms_msglog_struct.client
                        	         AND SWIFT_MSG_NO = :l_ms_msgent_structa.swift_msg_no
                           	      AND MSG_IN_OUT_IND='O'
                              	   AND INFORMATION = :l_ms_msglog_struct.swift_msg_ident;
               	IS_ANY_ORA_ERROR;
					}
               

                 int_commit_ctr++;
                 if(int_commit_ctr > COMMIT_COUNT_D)
					  {
						  EXEC SQL COMMIT WORK;
						  printf("\n before commit ");
						  fprintf(l_techfile,"\n************ COMMIT ***********\n");
						  clearerr(l_techfile);
						  clearerr(l_data_file);
						  int_commit_ctr = 0;

						  EXEC SQL SELECT processing_status,status
							  INTO :chr_h_restart_data:i_restart_info,
									 :h_status_ind:i_status_ind
										 FROM SYS_BATCHPROC
										 WHERE ROWID = :p_ora_rowid
										 FOR UPDATE OF STATUS,PROCESSING_STATUS;

						  if(sqlca.sqlcode < 0)
							  fprintf(l_errfile,"Batch Table cannot be locked\n");
					  }

                 if(h_swift_tlx_gcn == 'S')
							l_ms_msgent_structa.swift_count++;
                 else if(h_swift_tlx_gcn == 'T')
							l_ms_msgent_structa.telex_count++;
		     		  else if(h_swift_tlx_gcn == 'F')
							l_ms_msgent_structa.fax_count++;
		     		  else if(h_swift_tlx_gcn == 'C')
							l_ms_msgent_structa.gcn_count++;

                 strcpy(chr_l_msg_frm_file,chr_l_msg_file);
                 chr_prev_swftlx = h_swift_tlx_gcn;
					 strcpy(chr_prev_category,h_schedule);
          
			}  /*** For Loop ****/
        
			
			printf("\n ***************** Now outside for loop =exist = |%d| *****************",int_msg_exist);
			if (l_52xflg == 1)
			{
				EXEC SQL CLOSE msg_addr_cur_52x;
				IS_ANY_ORA_ERROR
			}
			else if (l_52xflg == 2)
			{
				EXEC SQL CLOSE msg_addr_cur_52xN02;
				IS_ANY_ORA_ERROR
			}
			else if (l_52xflg == 4)
			{
					printf("Nothing to close\n");
			}
			/* VaibhavK Kotak_Uat ISKB:656 22Feb2008 */
			else
			{
           	    if(strcmp(h_ca_event,"SM"))
				{
           		EXEC SQL CLOSE msg_addr_cur;
				}
				else
				{
				   EXEC SQL CLOSE msg_addr_cur_sm;	
				}
				IS_ANY_ORA_ERROR
			}

         int_returnval = 0;
 	    	memset(chr_h_eof,APL_NULL_CHAR,2);
	    	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"EOF",l_data_file,
                                      &chr_h_eof,0);
			printf("\n *********** chr_h_eof = |%s| ******* ",chr_h_eof);
         if(feof(l_data_file) == 0)
           	fgetpos(l_data_file,&g_cur_pos);
         /* Commented for AIX issue
			if(strcmp(chr_h_eof,"T") == 0)
            break;
        */
			/* Scotia changes have been incorporated [Start]*/
			if(strcmp(chr_h_eof,"T") == 0){
			printf("\nBREAKING LOOP and INCREMENTING VALUE");
			int_msg_type_ctr++;   //added by sachin for scotia issue- if all clients selected message not getting generated
            break;
		 	} 
			/* [End] */
           	
         int_returnval = 0;
			
 	    	memset(chr_h_prev_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
		 	strcpy(chr_h_prev_client,h_dl_client);
 	    
		 	memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	    	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"CLIENT",l_data_file,
                                      &h_dl_client,0);
	 	 	if(int_msg_exist==0)
		 	{
				printf("\n OPER =  |%s| --- |%s| ---- |%s| --- |%d|",l_ms_msgent_structa.client,h_dl_client,chr_h_prev_client,int_l_sw_rownum);
         	if(strcmp(l_ms_msgent_structa.client,h_dl_client)==0)
					break;
		 		while((strcmp(h_dl_client,chr_h_prev_client)==0))
				{
					if(feof(l_data_file) == 0)
            		fgetpos(l_data_file,&g_cur_pos);
 	    			int_returnval=0;
					memset(chr_h_eof,APL_NULL_CHAR,2);
					printf("\n******* Called from the inner while block ******* \n");
	    			int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"EOF",l_data_file,
               	                       &chr_h_eof,0);
            	if(strcmp(chr_h_eof,"T") == 0)
               	 break;
	    			int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,
														"CLIENT",
														l_data_file,
                     	                 &h_dl_client,0);
					if(strcmp(h_dl_client,chr_h_prev_client)==0)
					{
						int_l_sw_rownum++;
					}
				}
		 	}
       	
          
         int_returnval = 0;
         int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"PROC_INIT",l_data_file,
                                    &chr_h_key,0);

         if( strncmp(l_ms_msgent_structa.swift_msg_no,"535",3 ) == 0)
         {
         	int_returnval = 0;
	       	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"NOHOLDGS",l_data_file,
            	                          &chr_h_parm,0);
            if(int_returnval == APL_FAILURE)
            {
		 			fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching noholdings parameter  from data h_file  for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 			continue;
	       	}
            int_returnval = 0;
	       	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"SWIFT_TLX_GCN",l_data_file,
            	                          &chr_f_swftlx,0);
            if(int_returnval == APL_FAILURE)
            {
		 			fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching swift_tlx_gcn parameter  from data h_file  for msg %s\n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 			continue;
	       	}
         }
         if( !strcmp(l_ms_msgent_structa.swift_msg_no,"536") )
         {
            int_returnval = 0;
	       	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"ZEROMOV",l_data_file,
            	                          &chr_h_parm,0);
            if(int_returnval == APL_FAILURE)
            {
		 			fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching no movements parameter  for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 			continue;
	       	}
         }
         if( !strcmp(l_ms_msgent_structa.swift_msg_no,"586") )
         {
            int_returnval = 0;
	       	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"NOALLEG",l_data_file,
            	                          &chr_h_parm,0);
            if(int_returnval == APL_FAILURE)
            {
		 			fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching no movements parameter  for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 			continue;
	       	}
         }
         if( !strcmp(l_ms_msgent_structa.swift_msg_no,"537") )
         {
         	int_returnval = 0;
	       	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"NOPENDGS",l_data_file,
            	                          &chr_h_parm,0);
            if(int_returnval == APL_FAILURE)
            {
		 			fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching nopendings parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
		 			continue;
	       	}
				
				int_returnval = 0;
         	int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"STAT_DL_IND",l_data_file,
            	                        &chr_l_stat_tran_ind,0);
         	if(int_returnval == APL_FAILURE)
         	{
            	fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching STAT_TRAN parameter for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
            continue;
         	}
				
          }
         if( !strcmp(l_ms_msgent_structa.swift_msg_no,"538") )
         {
            int_returnval = 0;
            int_returnval = MS_Rtv_TabVal(int_l_sw_rownum,"LOCCHG",l_data_file,
                                    &chr_h_parm,0);
            if(int_returnval == APL_FAILURE)
            {
               fprintf(l_errfile,"Processing Datafile : %s : Failure in fetching no movements parameter  for msg %s \n",l_ms_msgent_structa.info_file,l_ms_msgent_structa.swift_msg_no);
               continue;
            }
         }

		}  
      int_msg_type_ctr++;
		if(int_msg_type_ctr > 6)
			int_msg_type_ctr = 0;
      int_msg_process = 0;
      int_l_sw_rownum = 1;
      g_cur_pos = 0;
      g_prev_pos = 0;
		printf("\n ++++++++++ int_msg_type_ctr = |%d| ====nt_msg_process = |%d|",int_msg_type_ctr,int_msg_process);
      if(int_msg_type_ctr == 0 || int_msg_process == 1)
		{
	   	if(l_ms_msgent_structa.auto_tran_ind[0] == 'Y')
      	{
         	EXEC SQL UPDATE MS_MSGLOG 
                     SET status = 'P'
                     WHERE message_ind = to_char(:l_ms_msgent_structa.swift_msg_seqno);
            if(sqlca.sqlcode < 0 )
            {
					
	/*** Added %ld for AIX Migration****/				
            	fprintf(l_errfile,"Error in updating imsglog for msg %s for record no. %ld\n",l_ms_msgent_structa.swift_msg_no,l_ms_msgent_structa.swift_msg_seqno);
               continue;
            }
          }
	     	 else
          {
          	EXEC SQL UPDATE MS_MSGLOG 
                     SET status = 'G'
                     WHERE message_ind = to_char(:l_ms_msgent_structa.swift_msg_seqno);
            if(sqlca.sqlcode < 0)
            {
					
	/*** Added %ld for AIX Migration****/			 	
               fprintf(l_errfile,"Error in updating imsglog for msg %s for record no. %ld\n",l_ms_msgent_structa.swift_msg_no,l_ms_msgent_structa.swift_msg_seqno);
               continue;
               }
           }
           int_returnval = 0;
	     	  strcpy(l_ms_msgent_structa.status_ind , "P");
           int_returnval = MS_Mod_MsgEnt(l_ms_msgent_structa,&int_retstat,l_debug_info_ptr);
 	     	  if(int_returnval == APL_FAILURE)
           {
					
           		if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
               {
                 CO_ProcMonitor(l_errfile,APL_NULL_STRING,l_debug_info_ptr,NULL);
                 CO_FreeErrLst(l_debug_info_ptr);
               }
	     	  }
           else
	     	  {
	        	 

	 		   	memset(chr_l_statinfo,APL_NULL_CHAR,61);
	   			strcpy(chr_l_statinfo,"Processed ");
	   			strcat(chr_l_statinfo,h_dl_client);
	   			strcat(chr_l_statinfo," msg ");
	   			strcat(chr_l_statinfo,l_ms_msgent_structa.swift_msg_no);

	 			  	EXEC SQL UPDATE SYS_BATCHPROC 
		    		SET STAT_DET = :chr_l_statinfo
		    		WHERE ROWID = :p_ora_rowid;

			   	if(sqlca.sqlcode < 0 ||
         		          sqlca.sqlcode == 1403)
               {
						fprintf(l_errfile,"Failure in updating status_ind information in batch table\n");
                  	      EXEC SQL ROLLBACK;

		   	       IS_ANY_ORA_ERROR
               }


               EXEC SQL COMMIT WORK;
					fprintf(l_techfile,"\n************ COMMIT ***********\n");
		/* HM :: ISBP_1814 - Below code commented for file closing issue; MS_ISOForamtter going down
         clearerr(l_techfile);
         clearerr(l_data_file); */

	       		EXEC SQL SELECT rowid
			   	INTO :h_ora_rowid:i_ora_rowid 
			   	FROM SYS_BATCHPROC
			   	WHERE ROWID = :p_ora_rowid;

		  			if(sqlca.sqlcode < 0)
					fprintf(l_errfile,"Batch Table cannot be locked\n");

		  			IS_ANY_ORA_ERROR;
	     		}
		}
      int_clsstat = fclose(l_data_file);
	  /* HM :: ISBP_1814 - Below code added for file closing issue; MS_ISOForamtter going down - START */
       fclose(l_techfile);
       fclose(l_errfile);
	  /* HM :: ISBP_1814 - Below code added for file closing issue; MS_ISOForamtter going down - END */
      if(int_clsstat == 0)
      int_fnoopen--;
	}  /*** main for loop ***/

   EXEC SQL CLOSE msg_cur;

   APL_GOBACK_SUCCESS
	

RETURN_SUCCESS:

	CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Proc_MsgMain()\n",NULL,NULL);
	/* PJ Linux log file closing issue fix */
	if(l_logfile_open_counter > 0)
	{
	/* HM :: ISBP_1814 - Below code commented for file closing issue; MS_ISOForamtter going down
	printf("\n Close log file if opened ");
	fflush(l_techfile);
	clearerr(l_techfile);
        fclose(l_techfile);
	fflush(l_errfile);
	clearerr(l_errfile);
        fclose(l_errfile);*/
	l_logfile_open_counter = 0;
	}
        free(l_ms_static_val_b);
		  free(l_ms_static_val_temp);
        free(l_ms_tag_elm_struct_h_t);
        free(l_ms_seq_elm_struct_h);
        free(l_ms_calc_elm_struct_h_t);
        free(l_ms_val_elm_struct_h);
	return APL_SUCCESS;
	
RETURN_FAILURE:
	CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of MS_Proc_MsgMain()\n",NULL,NULL);
	/* PJ Linux log file closing issue fix */
	if(l_logfile_open_counter > 0)
	{
	printf("\n Close log file if opened ");
	fflush(l_techfile);
	clearerr(l_techfile);
        fclose(l_techfile);
        fclose(l_errfile);
	l_logfile_open_counter = 0;
	}
        free(l_ms_static_val_b);
		  free(l_ms_static_val_temp);
        free(l_ms_tag_elm_struct_h_t);
        free(l_ms_seq_elm_struct_h);
        free(l_ms_calc_elm_struct_h_t);
        free(l_ms_val_elm_struct_h);
	return APL_FAILURE;
}



int MS_Rtv_MsgTags(MS_MSGENT_STRUCT p_ms_msgent_struct,MS_TAG_ELM_STRUCT_H **p_ms_tag_elm_struct_h,int *p_tot_tag,char p_swftlx,int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

EXEC SQL BEGIN DECLARE SECTION;
MS_MSGENT_STRUCT l_ms_msgent_structa;
I_MS_MSGENT_STRUCT l_i_ms_msgent_struct;
MS_TAG_ELM_STRUCT_H l_ms_tag_elm_struct_h;
MS_MAP_TAG_STRUCT_H l_ms_map_tag_struct_h;
EXEC SQL VAR l_ms_tag_elm_struct_h.msg_tag IS STRING;
EXEC SQL VAR l_ms_tag_elm_struct_h.info_elem IS STRING;
EXEC SQL VAR l_ms_tag_elm_struct_h.msg_tag_cond IS STRING;
EXEC SQL END DECLARE SECTION;

struct sqlca sqlca;
int int_tag_ctr=0,i=0;

MS_TAG_ELM_STRUCT_H *l_ms_tag_elm_struct_i = NULL;
MS_TAG_ELM_STRUCT_H *l_ms_tag_elm_struct_h_t = NULL;
l_ms_tag_elm_struct_h_t = l_ms_tag_elm_struct_i = (MS_TAG_ELM_STRUCT_H *)calloc(MAX_TAGS,sizeof(MS_TAG_ELM_STRUCT_H));
APL_MALLOC_FAIL(l_ms_tag_elm_struct_i);

l_ms_msgent_structa = p_ms_msgent_struct;


       EXEC SQL DECLARE tag_cur CURSOR FOR
	        SELECT msg_tag,identity_no,INFO_ELEM,info_type,HEAD_CONT_NEWLINE,MSG_TAG_COND,SRL_NUM
		,PRINT_CD
                FROM MS_DETAILSMAP
	        WHERE swift_msg_no = :l_ms_msgent_structa.swift_msg_no AND
                      message_class = :p_swftlx
                ORDER BY SRL_NUM;

			 printf("\n Query is no = |%s| class = |%c| ",l_ms_msgent_structa.swift_msg_no,p_swftlx);
       EXEC SQL OPEN tag_cur;
       if(sqlca.sqlcode < 0)
       {
         return APL_FAILURE;
       }

       for( ; ; )
		 {
			 memset(&l_ms_tag_elm_struct_h,NULL,sizeof(MS_TAG_ELM_STRUCT_H)); /** tux **/
			 EXEC SQL FETCH tag_cur INTO :l_ms_tag_elm_struct_h:l_ms_map_tag_struct_h;
			 if(sqlca.sqlcode == 1403)
				 break;
			 //printf("tag ctr is %d\n",int_tag_ctr);
			 fflush(stdout);
			 strcpy(l_ms_tag_elm_struct_i[int_tag_ctr].msg_tag,l_ms_tag_elm_struct_h.msg_tag);
			 strcpy(l_ms_tag_elm_struct_i[int_tag_ctr].info_elem,l_ms_tag_elm_struct_h.info_elem);
			 l_ms_tag_elm_struct_i[int_tag_ctr].info_type = l_ms_tag_elm_struct_h.info_type;
			 l_ms_tag_elm_struct_i[int_tag_ctr].head_cont_newline = l_ms_tag_elm_struct_h.head_cont_newline;
			 strcpy(l_ms_tag_elm_struct_i[int_tag_ctr].msg_tag_cond,l_ms_tag_elm_struct_h.msg_tag_cond);
			 l_ms_tag_elm_struct_i[int_tag_ctr].identity_no = l_ms_tag_elm_struct_h.identity_no;
			 l_ms_tag_elm_struct_i[int_tag_ctr].srl_num = l_ms_tag_elm_struct_h.srl_num;
			 l_ms_tag_elm_struct_i[int_tag_ctr].print_cd = l_ms_tag_elm_struct_h.print_cd;

			 int_tag_ctr++;
		 }
	EXEC SQL CLOSE tag_cur;

       if(int_tag_ctr == 0)
	  APL_GOBACK_FAIL


for(i=0;i<int_tag_ctr;i++)
{
	  strcpy((*p_ms_tag_elm_struct_h)[i].msg_tag,l_ms_tag_elm_struct_i[i].msg_tag);
	  strcpy((*p_ms_tag_elm_struct_h)[i].info_elem,l_ms_tag_elm_struct_i[i].info_elem);
	  (*p_ms_tag_elm_struct_h)[i].info_type = l_ms_tag_elm_struct_i[i].info_type;
	  (*p_ms_tag_elm_struct_h)[i].head_cont_newline = l_ms_tag_elm_struct_i[i].head_cont_newline;
	  strcpy((*p_ms_tag_elm_struct_h)[i].msg_tag_cond,l_ms_tag_elm_struct_i[i].msg_tag_cond);
	  (*p_ms_tag_elm_struct_h)[i].identity_no = l_ms_tag_elm_struct_i[i].identity_no;
	  (*p_ms_tag_elm_struct_h)[i].srl_num = l_ms_tag_elm_struct_i[i].srl_num;
	  (*p_ms_tag_elm_struct_h)[i].print_cd = l_ms_tag_elm_struct_i[i].print_cd;
}

*p_tot_tag = int_tag_ctr;
APL_GOBACK_SUCCESS;       

RETURN_SUCCESS:

        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Rtv_MsgTags()\n",NULL,NULL);
        free(l_ms_tag_elm_struct_h_t); 
        return APL_SUCCESS;

RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of MS_Rtv_MsgTags()\n",l_debug_info_ptr,NULL);
        free(l_ms_tag_elm_struct_h_t);
        return APL_FAILURE;

}




int IMsgSeqLoad(MS_MSGENT_STRUCT p_ms_msgent_struct,MS_SEQ_ELM_STRUCT_H **p_ms_seq_elm_struct_h,int *p_tot_seq,char p_swftlx,int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

EXEC SQL BEGIN DECLARE SECTION;
MS_MSGENT_STRUCT l_ms_msgent_structa;
char chr_h_seq_cond[201],chr_h_seq_flg[3];
int h_sequence_no,int_h_par_seq_no;
short i_sequence_no,i_seq_flg,i_seq_cond,i_par_seq_no;
EXEC SQL VAR chr_h_seq_cond IS STRING;
EXEC SQL VAR chr_h_seq_flg IS STRING;
EXEC SQL END DECLARE SECTION;

struct sqlca sqlca;

int int_seq_ctr=0,i=0;
MS_SEQ_ELM_STRUCT_H *l_ms_seq_elm_struct_h=NULL;
MS_SEQ_ELM_STRUCT_H *l_ms_seq_elm_struct_h_t=NULL;
l_ms_seq_elm_struct_h_t = l_ms_seq_elm_struct_h = (MS_SEQ_ELM_STRUCT_H *)calloc(1,sizeof(MS_SEQ_ELM_STRUCT_H));
APL_MALLOC_FAIL(l_ms_seq_elm_struct_h);

l_ms_msgent_structa = p_ms_msgent_struct;

	EXEC SQL DECLARE seq_cur CURSOR FOR
		 SELECT identity_no,SEQ_IND,SEQ_CONDITION,PAR_SEQNO
		 FROM MS_SEQUENCEMAP
		 WHERE SWIFT_MSG_NO = :l_ms_msgent_structa.swift_msg_no AND
                       MESSAGE_CLASS = :p_swftlx
                 ORDER BY identity_no;

	EXEC SQL OPEN seq_cur;

        if(sqlca.sqlcode < 0)
		return APL_FAILURE;

	for( ; ; )
	{

	   EXEC SQL FETCH seq_cur INTO :h_sequence_no:i_sequence_no,
                                       :chr_h_seq_flg:i_seq_flg,
                                       :chr_h_seq_cond:i_seq_cond,
				       :int_h_par_seq_no:i_par_seq_no;
		/* Alert(" Int Seq Ctr = %d", int_seq_ctr); */
	   if(sqlca.sqlcode == 1403)
		break;
	   l_ms_seq_elm_struct_h[int_seq_ctr].identity_no = h_sequence_no;
	   strcpy(l_ms_seq_elm_struct_h[int_seq_ctr].ind,chr_h_seq_flg);
	   if(i_par_seq_no != -1)
	         strcpy(l_ms_seq_elm_struct_h[int_seq_ctr].seq_condition,chr_h_seq_cond);
	   l_ms_seq_elm_struct_h[int_seq_ctr].par_seqno = int_h_par_seq_no;
           int_seq_ctr++;

	   l_ms_seq_elm_struct_h_t = l_ms_seq_elm_struct_h = (MS_SEQ_ELM_STRUCT_H *)realloc(l_ms_seq_elm_struct_h,sizeof(MS_SEQ_ELM_STRUCT_H)*(int_seq_ctr+1));
	   
	}
	EXEC SQL CLOSE seq_cur;

        if(int_seq_ctr == 0)
		  {
			Alert("Seqence not found in SEQUENCE Table ");
			APL_GOBACK_FAIL
		  }

for(i=0;i<int_seq_ctr;i++)
{
	fflush(stdout);
	/* Alert(" Value of Counter = %d", i); */
	(*p_ms_seq_elm_struct_h)[i].identity_no = l_ms_seq_elm_struct_h[i].identity_no;
	strcpy((*p_ms_seq_elm_struct_h)[i].ind,l_ms_seq_elm_struct_h[i].ind);
	strcpy((*p_ms_seq_elm_struct_h)[i].seq_condition,l_ms_seq_elm_struct_h[i].seq_condition);
	(*p_ms_seq_elm_struct_h)[i].par_seqno = l_ms_seq_elm_struct_h[i].par_seqno;
	(*p_ms_seq_elm_struct_h)[i].sequence_rep_no = 0;
	(*p_ms_seq_elm_struct_h)[i].child_sequence_rep_no = 0;
	/* Alert("Before Re- Allocation "); */
	*p_ms_seq_elm_struct_h = (MS_SEQ_ELM_STRUCT_H *)realloc(*p_ms_seq_elm_struct_h,sizeof(MS_SEQ_ELM_STRUCT_H)*(i+2)); 
	/* Alert("After Re- Allocation "); */
}
      (*p_ms_seq_elm_struct_h)[int_seq_ctr].identity_no =  0;
      strcpy((*p_ms_seq_elm_struct_h)[int_seq_ctr].ind,APL_NULL_STRING);
      strcpy((*p_ms_seq_elm_struct_h)[int_seq_ctr].seq_condition,APL_NULL_STRING);
      (*p_ms_seq_elm_struct_h)[int_seq_ctr].par_seqno = 0;
      (*p_ms_seq_elm_struct_h)[int_seq_ctr].sequence_rep_no = 0;
      (*p_ms_seq_elm_struct_h)[int_seq_ctr].child_sequence_rep_no = 0;



*p_tot_seq = int_seq_ctr;

APL_GOBACK_SUCCESS;
RETURN_SUCCESS:

        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of IMsgSeqLoad()\n",NULL,NULL);
        free(l_ms_seq_elm_struct_h_t);
        return APL_SUCCESS;

RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of IMsgSeqLoad()\n",NULL,NULL);
        free(l_ms_seq_elm_struct_h_t);
        return APL_FAILURE;

}




int IGenMsgFileName(char *chr_p_filename,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
PRO_GSEQNUM_STRUCT_H l_pro_gseqnum_struct_h_msg;
int int_returnval=0;

strcpy(l_pro_gseqnum_struct_h_msg.sequencename,"MSGFILE");
strcpy(l_pro_gseqnum_struct_h_msg.seq_attrb_a,APL_NULL_STRING);
strcpy(l_pro_gseqnum_struct_h_msg.seq_attrb_b,APL_NULL_STRING);
strcpy(l_pro_gseqnum_struct_h_msg.seq_attrb_c,APL_NULL_STRING);

                l_pro_gseqnum_struct_h_msg.seq_stepby = 1;
                l_pro_gseqnum_struct_h_msg.seq_start = ST_FM_MSG;
                l_pro_gseqnum_struct_h_msg.last_seqnum = EN_FM_MSG;

      int_returnval = CO_RtvNxtSeqNum(&l_pro_gseqnum_struct_h_msg,l_debug_info_ptr);

      if(int_returnval != APL_FAILURE)
      {
			if (strcmp(l_mt_message_sys_params_struct_h.ccs_int_ind,"Y") == 0)
      	{
				                                  
	     		strcpy(chr_p_filename,g_mt_commonsys_params_struct_h.nation_code);
	     		strcat(chr_p_filename,"00");
         	strcat(chr_p_filename,ltoa(int_returnval));
         	strcat(chr_p_filename,".TBS");
			}
			else
			{
				strcpy(chr_p_filename,"T00");													
				
				strcat(chr_p_filename,ltoa(int_returnval));
				strcat(chr_p_filename,".TBS");
      	}
		}
      else
             APL_GOBACK_FAIL;
RETURN_SUCCESS:

        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of IGenMsgFilename\n",NULL,NULL);

        return APL_SUCCESS;

RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of IGenMsgFilename\n",NULL,NULL);
        return APL_FAILURE;


}


int filecp(char *p_refer, char *p_notelex, char p_priority_new, char *p_msg_frm_file,char *p_msg_to_file,char *p_mere_biccode,char *chr_p_msgno_a,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  
   char chr_l_old_priority = '1';
   char chr_l_old_str[301] = APL_NULL_STRING;
   

  char chr_l_str[301],chr_fname[101],chr_fname1[101],*identify =NULL, *chr_refer_t=NULL;
  char chr_l_shortname[301]=APL_NULL_STRING;
  char  *chr_last;
  char chr_l_prefix[6] = APL_NULL_STRING;
  
  char chr_l_str_temp[301]=APL_NULL_STRING;
  FILE *fpr,*fpw;
  int int_clsstat = 0;
  
   int int_flg_addinfo=0;
  chr_refer_t = identify = (char *)calloc(300,sizeof(char));
  APL_MALLOC_FAIL(identify);

  memset(chr_fname,APL_NULL_CHAR,100);
  memset(chr_fname1,APL_NULL_CHAR,100);

  strcpy(chr_fname,p_msg_frm_file);
  strcpy(chr_fname1,p_msg_to_file);
  if( (fpr = fopen(chr_fname,"r")) == NULL)
  {
	APL_GOBACK_FAIL;
  }
  int_fnoopen++;
  if( (fpw = fopen(chr_fname1,"w")) == NULL)
  {
	APL_GOBACK_FAIL;
  }
  int_fnoopen++;
  
  while(feof(fpr) == 0)
  {
      memset(chr_l_str,'\0',300);
      if (fgets(chr_l_str,300,fpr))
      {
				strcpy(chr_l_old_str,chr_l_str);
			  /**if(strstr(chr_l_str,"ATTN.") == NULL && strstr(chr_l_str,"TLX") == NULL)
				{**/
				
					memset(chr_l_str_temp,APL_NULL_CHAR,301);
					if(p_priority_new != '1')
					{
						
						if(strstr(chr_l_str,":23G:") != NULL)
						{
							strncpy(chr_l_str_temp,chr_l_str,9);
							strcat(chr_l_str_temp,"/COPY");
							fprintf(fpw,"%s\n",chr_l_str_temp);
							chr_l_old_priority = p_priority_new;
							p_priority_new = '1';
						}
						else
					  		fputs(chr_l_str,fpw);
					}
					else
					{
                 
              	
						 if ((strstr(chr_l_str,"95P") != NULL) && (strstr(chr_l_str,"MERE") != NULL))
                     {
                        fputs(chr_l_str,fpw);
                        int_flg_addinfo = 1;
                     }
                  else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') && (!strncmp(chr_p_msgno_a,"535",3)) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (strstr(chr_l_str,"19A") != NULL) && (strstr(chr_l_str,"HOLP") != NULL) )
                     {
                           fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode);
                           fprintf(fpw,"%s",chr_l_str);
                           int_flg_addinfo = 1;
                     }  
                  else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') && ((!strncmp(chr_p_msgno_a,"564",3)) || (!strncmp(chr_p_msgno_a,"567",3)) || (!strncmp(chr_p_msgno_a,"566",3)) || (!strncmp(chr_p_msgno_a,"568",3)) ) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (strstr(chr_l_str,"16S") != NULL) && (strstr(chr_l_str,"ADDINFO") != NULL) )
                     {
                           fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode);
                           fprintf(fpw,"%s",chr_l_str);
                           int_flg_addinfo = 1;
                     }  
						else
					  		fputs(chr_l_str,fpw);
					}	
				
			/**	}
			  else if(strstr(chr_l_str,"ATTN.") != NULL)
			  {
					
					if (strlen(chr_l_str) == strlen(strstr(chr_l_str, "ATTN.")))
					{
						strcpy(chr_l_prefix, APL_NULL_STRING);
					}
					else
					{
						strncpy(chr_l_prefix, chr_l_str, strlen(chr_l_str)-strlen(strstr(chr_l_str, "ATTN.")));
						chr_l_prefix[strlen(chr_l_str)-strlen(strstr(chr_l_str, "ATTN."))]='\0';
					}
					fprintf(fpw,"%s%s%s\n",chr_l_prefix,"ATTN. ",p_refer);
				}
			  else if(strstr(chr_l_str,"TLX") != NULL)
				  {
					  	  printf("HERE!!!!!\n");
						  printf("chr_l_shortname is |%s|\n",chr_l_shortname);
						  printf("p_notelex is |%s|\n",p_notelex);
						  printf("chr_l_str is |%s|\n",chr_l_str);
						  strcpy(chr_l_shortname, p_notelex);
						  printf("0\n");
						  if(strlen(chr_l_shortname)==0)
							  strcpy(chr_l_shortname," ");
						  else
						  	strcat(chr_l_shortname," ");
						  printf("chr_l_shortname is |%s|\n",chr_l_shortname);
						  printf("chr_l_str+5 is |%s|",chr_l_str+5);
						  printf("1\n");
					*strcat(chr_l_shortname,strtok_r(strstr(chr_l_str+5, " " ), " ", &chr_last));*
						  strcat(chr_l_shortname,(strstr(chr_l_str+5, " " ))==NULL?" ":strtok_r(strstr(chr_l_str+5, " " ), " ", &chr_last));
						  printf("2\n");
						  **strcat(strcat(strcpy(chr_l_shortname, p_notelex)," "), strtok_r(strstr(chr_l_str+5, " " ), " ", &chr_last));*
						  strcpy(chr_l_str, APL_NULL_STRING);
						  strcat(strcpy(chr_l_str, "TLX "), chr_l_shortname);	
						  fprintf(fpw,"%s", chr_l_str);
				  }**/
      }

  }

if ( (int_flg_addinfo != 1) &&  (strstr(chr_l_old_str,"16S") != NULL) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (chr_l_old_priority != '1') && ((((!strncmp(chr_p_msgno_a,"535",3)) || (!strncmp(chr_p_msgno_a,"536",3))) && (strstr(chr_l_old_str,"16S") != NULL) && (strstr(chr_l_old_str,"SUBSAFE") != NULL)) || ((!strncmp(chr_p_msgno_a,"537",3)) && ((strstr(chr_l_old_str,"STAT") != NULL)) || (strstr(chr_l_old_str,"TRANS")!=NULL)) || (!strncmp (chr_p_msgno_a,"538",3) && (strstr(chr_l_old_str,"FIN") != NULL) ) || (!strncmp(chr_p_msgno_a,"586",3) && (strstr(chr_l_old_str,"ALLDET") != NULL)))) 
			{
				if (strstr(chr_l_old_str,"16S") != NULL)
				{
					fprintf(fpw,"%s\n",START_ADDINFO);
					fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
					fprintf(fpw,"%s\n",END_ADDINFO);
					int_flg_addinfo = 1;
				}
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') && ((!strcmp(chr_p_msgno_a,"535A")) || (!strcmp(chr_p_msgno_a,"536")) || (!strcmp(chr_p_msgno_a,"537")) || (!strcmp(chr_p_msgno_a,"538")) || (!strcmp(chr_p_msgno_a,"586")) ) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (strstr(chr_l_old_str,"16S") != NULL) && (strstr(chr_l_old_str,"GENL") != NULL) ) 
			{
				fprintf(fpw,"%s\n",START_ADDINFO);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_ADDINFO);
				int_flg_addinfo = 1;
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') &&  (strstr(chr_l_old_str,"16S") != NULL) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (((!strncmp(chr_p_msgno_a,"508",3)) && (strstr(chr_l_old_str,"INPOSDET") != NULL)) || ((!strncmp(chr_p_msgno_a,"548",3)) && (strstr(chr_l_old_str,"SETTRAN") != NULL)))) 
			{
				fprintf(fpw,"%s\n",START_ADDINFO);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_ADDINFO);
				int_flg_addinfo = 1;
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') &&  (strstr(chr_l_old_str,"16S") != NULL) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && ((!strncmp(chr_p_msgno_a,"54x",3)) && (strstr(chr_l_old_str,"SETDET") != NULL))) 
			{
				fprintf(fpw,"%s\n",START_OTHRPRTY);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_OTHRPRTY);
				int_flg_addinfo = 1;
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') &&  (strstr(chr_l_old_str,"16S") != NULL) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && ((!strncmp(chr_p_msgno_a,"578",3)) && (strstr(chr_l_old_str,"SETDET") != NULL))) 
			{
				fprintf(fpw,"%s\n",START_ADDINFO);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_ADDINFO);
				int_flg_addinfo = 1;
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') && (!strncmp(chr_p_msgno_a,"564",3)) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (strstr(chr_l_old_str,"16S") != NULL) && (strstr(chr_l_old_str,"CAOPTN") != NULL) ) 
			{
				fprintf(fpw,"%s\n",START_ADDINFO);
				fprintf(fpw,"%s%s\n",MEOR_MACRO,l_mt_message_sys_params_struct_h.swift_cd);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_ADDINFO);
				int_flg_addinfo = 1;
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') && (!strncmp(chr_p_msgno_a,"566",3)) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (strstr(chr_l_old_str,"16S") != NULL) && (strstr(chr_l_old_str,"CACONF") != NULL) ) 
			{
				fprintf(fpw,"%s\n",START_ADDINFO);
				fprintf(fpw,"%s%s\n",MEOR_MACRO,l_mt_message_sys_params_struct_h.swift_cd);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_ADDINFO);
				int_flg_addinfo = 1;
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') && (!strncmp(chr_p_msgno_a,"567",3)) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (strstr(chr_l_old_str,"16S") != NULL) && (strstr(chr_l_old_str,"CADETL") != NULL) ) 
			{
				fprintf(fpw,"%s\n",START_ADDINFO);
				fprintf(fpw,"%s%s\n",MEOR_MACRO,l_mt_message_sys_params_struct_h.swift_cd);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_ADDINFO);
				int_flg_addinfo = 1;
			}
else if ( (int_flg_addinfo != 1) && (chr_l_old_priority != '1') && (!strncmp(chr_p_msgno_a,"568",3)) && (strcmp(p_mere_biccode,APL_NULL_STRING)) && (strstr(chr_l_old_str,"16S") != NULL) && (strstr(chr_l_old_str,"USECU") != NULL) )
			{
				fprintf(fpw,"%s\n",START_ADDINFO);
				fprintf(fpw,"%s%s\n",MEOR_MACRO,l_mt_message_sys_params_struct_h.swift_cd);
				fprintf(fpw,"%s%s\n",MERERR_MACRO,p_mere_biccode); 
				fprintf(fpw,"%s\n",END_ADDINFO);
				int_flg_addinfo = 1;
			} 
  APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

		  free(chr_refer_t);
        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of filecp \n",NULL,NULL);
        int_clsstat = fclose(fpw);
        if (int_clsstat == 0)
           int_fnoopen--;
        int_clsstat = fclose(fpr);
        if (int_clsstat == 0)
           int_fnoopen--;

        return APL_SUCCESS;

RETURN_FAILURE:
		  free(chr_refer_t);
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of filecp \n",NULL,NULL);
        int_clsstat = fclose(fpw);
        if (int_clsstat == 0)
           int_fnoopen--;
        int_clsstat = fclose(fpr);
        if (int_clsstat == 0)
           int_fnoopen--;
        return APL_FAILURE;

}
