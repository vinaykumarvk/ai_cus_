/*
 **    COPYRIGHT NOTICE
 **
 **   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 **
 **   These materials are confidential and proprietary to
 **    Polaris Software Lab Limited and no part of these materials should
 **    be reproduced, published, transmitted or distributed in any form or
 **    by any means, electronic, mechanical, photocopying, recording or
 **    otherwise, or stored in any information storage or retrieval system
 **    of any nature nor should the materials be disclosed to third parties
 **    or used in any other manner for which this is not authorized, without
 **    the prior express written authorization of Polaris Software Lab Limited.
 **/
/*********************************************************************
 **
 ** Module Name         :      DEAL PROCESSING
 **
 ** File Name           :      DL_BCN_MAP.pc
 **
 ** Description         :      DEAL BCN MAPPING
 **
 **
 **
 **            Version Control Block
 **
 ** Date        Version     Author           Description        RFS No.
 ** ---------   --------  ---------------  ------------------   ---------
 ** 16/02/2006   1.0       AMOL             New File            HDFCDL_010
 **************************************************************************/

#include<stdio_64.h>
#include <stdlib.h>
#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "DL_Interface.h"
#include "BT_Common.h"
#include "Intellect_Error.h"
#include "CO_IndStructdef.h"


EXEC SQL INCLUDE SQLCA.H;

int DL_ModDBDL_NSE_OBL(DL_NSC_OBL_STRUCT_H *p_dl_nse_obl_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	   /* Variable Declarations */
	  DL_NSC_OBL_STRUCT_I *l_dl_nse_obl_struct_i;
	  DL_EXCHOBLIGATION_STRUCT_H *l_dl_exchobligation_rec=NULL;
	  DL_EXCHOBLIGATION_STRUCT_I *l_dl_exchobligation_rec_ind=NULL;

	  struct sqlca sqlca;

	  int   int_retval = APL_SUCCESS;
	  int   l_h_obgcumsalvol=APL_SUCCESS;
	  int   l_h_obgcumbuyvol=APL_SUCCESS;

	  /*Calloc*/
      l_dl_exchobligation_rec=(DL_EXCHOBLIGATION_STRUCT_H *)calloc(1,sizeof(DL_EXCHOBLIGATION_STRUCT_H));
	  l_dl_exchobligation_rec_ind=(DL_EXCHOBLIGATION_STRUCT_I *)calloc(1,sizeof(DL_EXCHOBLIGATION_STRUCT_I));
	  l_dl_nse_obl_struct_i=(DL_NSC_OBL_STRUCT_I*)calloc(1,sizeof(DL_NSC_OBL_STRUCT_I));

	  /*MemSet*/
	  memset(l_dl_exchobligation_rec, NULL, sizeof(DL_EXCHOBLIGATION_STRUCT_H));
	  memset(l_dl_exchobligation_rec_ind, NULL, sizeof(DL_EXCHOBLIGATION_STRUCT_I));
	  
		APL_MALLOC_FAIL(l_dl_nse_obl_struct_i)


		if (!strlen(p_dl_nse_obl_struct_h->h_obgdaybuyvol)) l_dl_nse_obl_struct_i->i_obgdaybuyvol =-1;
		     else l_dl_nse_obl_struct_i->i_obgdaybuyvol =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgdaysalvol)) l_dl_nse_obl_struct_i->i_obgdaysalvol =-1;
		     else l_dl_nse_obl_struct_i->i_obgdaysalvol =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgdaybuyamt)) l_dl_nse_obl_struct_i->i_obgdaybuyamt =-1;
		     else l_dl_nse_obl_struct_i->i_obgdaybuyamt =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgdaysalamt)) l_dl_nse_obl_struct_i->i_obgdaysalamt =-1;
		     else l_dl_nse_obl_struct_i->i_obgdaysalamt =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgcumbuyvol)) l_dl_nse_obl_struct_i->i_obgcumbuyvol =-1;
		     else l_dl_nse_obl_struct_i->i_obgcumbuyvol =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgcumsalvol)) l_dl_nse_obl_struct_i->i_obgcumsalvol =-1;
		     else l_dl_nse_obl_struct_i->i_obgcumsalvol =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgcumbuyamt)) l_dl_nse_obl_struct_i->i_obgcumbuyamt =-1;
		     else l_dl_nse_obl_struct_i->i_obgcumbuyamt =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgcumsalamt)) l_dl_nse_obl_struct_i->i_obgcumsalamt =-1;
		     else l_dl_nse_obl_struct_i->i_obgcumsalamt =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgsetlno)) l_dl_nse_obl_struct_i->i_obgsetlno =-1;
		     else l_dl_nse_obl_struct_i->i_obgsetlno =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgtmbrncode)) l_dl_nse_obl_struct_i->i_obgtmbrncode =-1;
		     else l_dl_nse_obl_struct_i->i_obgtmbrncode =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgdate)) l_dl_nse_obl_struct_i->i_obgdate =-1;
		     else l_dl_nse_obl_struct_i->i_obgdate =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgcupcode)) l_dl_nse_obl_struct_i->i_obgcupcode =-1;
		     else l_dl_nse_obl_struct_i->i_obgcupcode =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgsecsymbol)) l_dl_nse_obl_struct_i->i_obgsecsymbol =-1;
		     else l_dl_nse_obl_struct_i->i_obgsecsymbol =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgsecseries)) l_dl_nse_obl_struct_i->i_obgsecseries =-1;
		     else l_dl_nse_obl_struct_i->i_obgsecseries =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgseccode)) l_dl_nse_obl_struct_i->i_obgseccode =-1;
		     else l_dl_nse_obl_struct_i->i_obgseccode =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgtmcode)) l_dl_nse_obl_struct_i->i_obgtmcode =-1;
		     else l_dl_nse_obl_struct_i->i_obgtmcode =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgcuscode)) l_dl_nse_obl_struct_i->i_obgcuscode =-1;
		     else l_dl_nse_obl_struct_i->i_obgcuscode =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgsetltype)) l_dl_nse_obl_struct_i->i_obgsetltype =-1;
		     else l_dl_nse_obl_struct_i->i_obgsetltype =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgndflag)) l_dl_nse_obl_struct_i->i_obgndflag =-1;
		     else l_dl_nse_obl_struct_i->i_obgndflag =0;

		if (!strlen(p_dl_nse_obl_struct_h->h_obgfnlobg)) l_dl_nse_obl_struct_i->i_obgfnlobg =-1;
		     else l_dl_nse_obl_struct_i->i_obgfnlobg =0;

		printf("\n\n*********************Before Insert*********************");
                     //AIX-Warnings Removal  -- typecast to int before  strlen
		printf("\nOBGDAYBUYVOL |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgdaybuyvol,(int)strlen(p_dl_nse_obl_struct_h->h_obgdaybuyvol));
		printf("\nOBGDAYSALVOL |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgdaysalvol,(int)strlen(p_dl_nse_obl_struct_h->h_obgdaysalvol));
		printf("\nOBGDAYBUYAMT |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgdaybuyamt,(int)strlen(p_dl_nse_obl_struct_h->h_obgdaybuyamt));
		printf("\nOBGDAYSALAMT |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgdaysalamt,(int)strlen(p_dl_nse_obl_struct_h->h_obgdaysalamt));
		printf("\nOBGCUMBUYVOL |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgcumbuyvol,(int)strlen(p_dl_nse_obl_struct_h->h_obgcumbuyvol));
		printf("\nOBGCUMSALVOL |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgcumsalvol,(int)strlen(p_dl_nse_obl_struct_h->h_obgcumsalvol));
		printf("\nOBGCUMBUYAMT |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgcumbuyamt,(int)strlen(p_dl_nse_obl_struct_h->h_obgcumbuyamt));
		printf("\nOBGSETLNO |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgsetlno,(int)strlen(p_dl_nse_obl_struct_h->h_obgsetlno));
		printf("\nOBGTMBRNCODE |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgtmbrncode,(int)strlen(p_dl_nse_obl_struct_h->h_obgtmbrncode));
		printf("\nOBGDATE |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgdate,(int)strlen(p_dl_nse_obl_struct_h->h_obgdate));
		printf("\nOBGCUPCODE |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgcupcode,(int)strlen(p_dl_nse_obl_struct_h->h_obgcupcode));
		printf("\nOBGSECSYMBOL |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgsecsymbol,(int)strlen(p_dl_nse_obl_struct_h->h_obgsecsymbol));
		printf("\nOBGSECSERIES |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgsecseries,(int)strlen(p_dl_nse_obl_struct_h->h_obgsecseries));
		printf("\nOBGSECCODE |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgseccode,(int)strlen(p_dl_nse_obl_struct_h->h_obgseccode));
		printf("\nOBGTMCODE |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgtmcode,(int)strlen(p_dl_nse_obl_struct_h->h_obgtmcode));
		printf("\nOBGCUSCODE |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgcuscode,(int)strlen(p_dl_nse_obl_struct_h->h_obgcuscode));
		printf("\nOBGSETLTYPE |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgsetltype,(int)strlen(p_dl_nse_obl_struct_h->h_obgsetltype));
		printf("\nOBGNDFLAG |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgndflag,(int)strlen(p_dl_nse_obl_struct_h->h_obgndflag));
		printf("\nOBGFNLOBG |%s|, Length |%d|",p_dl_nse_obl_struct_h->h_obgfnlobg,(int)strlen(p_dl_nse_obl_struct_h->h_obgfnlobg));

	
		EXEC SQL INSERT INTO DL_NSE_OBL VALUES (:p_dl_nse_obl_struct_h:l_dl_nse_obl_struct_i);
		if(sqlca.sqlcode)
		{
			printf("\n Failed SQLCODE is |%d|\n ",sqlca.sqlcode);
		 }
		IS_ANY_ORA_ERROR
		
		strcpy(l_dl_exchobligation_rec->h_settlement_no,p_dl_nse_obl_struct_h->h_obgsetlno);
		strcpy(l_dl_exchobligation_rec->h_instr_cd,p_dl_nse_obl_struct_h->h_obgsecsymbol);
		strcpy(l_dl_exchobligation_rec->h_mkt_type,p_dl_nse_obl_struct_h->h_obgsetltype);
		strcpy(l_dl_exchobligation_rec->h_exch_code,"NSE");
		strcpy(l_dl_exchobligation_rec->h_status,"");
		strcpy( l_dl_exchobligation_rec->h_deal_dt,p_dl_nse_obl_struct_h->h_obgdate);
		if(!strcmp(l_dl_exchobligation_rec->h_mkt_type,"22"))
		{
			l_h_obgcumbuyvol=atoi(p_dl_nse_obl_struct_h->h_obgcumbuyvol);
			printf("\nl_h_obgcumbuyvol===%d",l_h_obgcumbuyvol);
			if((l_h_obgcumbuyvol!=0) && (l_dl_nse_obl_struct_i->i_obgcumbuyvol !=-1))
			{
				printf("Inside Buy Condition");
				strcpy(l_dl_exchobligation_rec->h_deal_cd,"P");
				l_dl_exchobligation_rec->h_aggr_qty=atof(p_dl_nse_obl_struct_h->h_obgcumbuyvol);
				l_dl_exchobligation_rec->h_agg_amt=atof(p_dl_nse_obl_struct_h->h_obgcumbuyamt);
			
				EXEC SQL INSERT INTO DL_EXCHOBLIGATION VALUES (:l_dl_exchobligation_rec:l_dl_exchobligation_rec_ind);
				if(sqlca.sqlcode)
				{
					printf("\n Failed second insert SQLCODE is |%d| for Mkt type=22 and buy condition\n ",sqlca.sqlcode);
				 }
				IS_ANY_ORA_ERROR
			}

			l_h_obgcumsalvol=atoi(p_dl_nse_obl_struct_h->h_obgcumsalvol);
			printf("\nl_h_obgcumsalvol=%d",l_h_obgcumsalvol);
			if(l_h_obgcumsalvol!=0 && (l_dl_nse_obl_struct_i->i_obgcumsalvol !=-1))
			{
				printf("Inside Sell Condition");
				strcpy(l_dl_exchobligation_rec->h_deal_cd,"S");
				l_dl_exchobligation_rec->h_aggr_qty=atof(p_dl_nse_obl_struct_h->h_obgcumsalvol);
				l_dl_exchobligation_rec->h_agg_amt=atof(p_dl_nse_obl_struct_h->h_obgcumsalamt);
				EXEC SQL INSERT INTO DL_EXCHOBLIGATION VALUES (:l_dl_exchobligation_rec:l_dl_exchobligation_rec_ind);
				if(sqlca.sqlcode)
				{
					printf("\n Failed second insert SQLCODE is |%d| for mtk_type=22 and Sell condition\n ",sqlca.sqlcode);
				 }
				IS_ANY_ORA_ERROR
			}

		}
		else
		{
			l_h_obgcumbuyvol=atoi(p_dl_nse_obl_struct_h->h_obgcumbuyvol);
			printf("\nl_h_obgcumbuyvol===%d",l_h_obgcumbuyvol);
			if((l_h_obgcumbuyvol!=0) && (l_dl_nse_obl_struct_i->i_obgcumbuyvol !=-1))
			{
				printf("Inside Buy Condition");
				strcpy(l_dl_exchobligation_rec->h_deal_cd,"P");
				l_dl_exchobligation_rec->h_aggr_qty=atof(p_dl_nse_obl_struct_h->h_obgcumbuyvol);
				l_dl_exchobligation_rec->h_agg_amt=atof(p_dl_nse_obl_struct_h->h_obgcumbuyamt);
			}
			
			l_h_obgcumsalvol=atoi(p_dl_nse_obl_struct_h->h_obgcumsalvol);
			printf("\nl_h_obgcumsalvol=%d",l_h_obgcumsalvol);
			if(l_h_obgcumsalvol!=0 && (l_dl_nse_obl_struct_i->i_obgcumsalvol !=-1))
			{
				printf("Inside Sell Condition");
				strcpy(l_dl_exchobligation_rec->h_deal_cd,"S");
				l_dl_exchobligation_rec->h_aggr_qty=atof(p_dl_nse_obl_struct_h->h_obgcumsalvol);
				l_dl_exchobligation_rec->h_agg_amt=atof(p_dl_nse_obl_struct_h->h_obgcumsalamt);
			}

			EXEC SQL INSERT INTO DL_EXCHOBLIGATION VALUES (:l_dl_exchobligation_rec:l_dl_exchobligation_rec_ind);
			if(sqlca.sqlcode)
			{
				printf("\n Failed second insert SQLCODE is |%d|\n ",sqlca.sqlcode);
			 }
			IS_ANY_ORA_ERROR
		}
		APL_GOBACK_SUCCESS							

		RETURN_SUCCESS: 

				printf("\n Sucess Inside DL_ModDBDL_NSE_OBL \n");		
		return(APL_SUCCESS);

		RETURN_FAILURE:
	
		printf("\n Error Inside DL_ModDBDL_NSE_OBL \n");
		return(APL_FAILURE);

} 
