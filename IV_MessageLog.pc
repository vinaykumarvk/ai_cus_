













 
#include "stdio_64.h"
#include "MS_Swift.h"
#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;

int MS_Mod_MsgLogAdd(MS_MSGLOG_STRUCT p_ms_msglog_struct,int *int_p_retstat,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
EXEC SQL BEGIN DECLARE SECTION;
MS_MSGLOG_STRUCT l_ms_msglog_structb;
EXEC SQL VAR l_ms_msglog_structb.client IS STRING;
EXEC SQL VAR l_ms_msglog_structb.message_ind IS STRING;
EXEC SQL VAR l_ms_msglog_structb.swift_msg_no IS STRING;
EXEC SQL VAR l_ms_msglog_structb.maker IS STRING;
EXEC SQL VAR l_ms_msglog_structb.maker_dt IS STRING;
EXEC SQL VAR l_ms_msglog_structb.msg IS STRING;
EXEC SQL VAR l_ms_msglog_structb.contact_details IS STRING;
EXEC SQL VAR l_ms_msglog_structb.contact_details1 IS STRING;
EXEC SQL VAR l_ms_msglog_structb.baseid IS STRING;
EXEC SQL VAR l_ms_msglog_structb.swift_msg_ident IS STRING;
EXEC SQL END DECLARE SECTION;

struct sqlca sqlca;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif


memset(l_ms_msglog_structb.client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
memset(l_ms_msglog_structb.message_ind,APL_NULL_CHAR,61);
memset(l_ms_msglog_structb.swift_msg_no,APL_NULL_CHAR,7);
memset(l_ms_msglog_structb.maker,APL_NULL_CHAR,APL_USERID_LEN);
memset(l_ms_msglog_structb.maker_dt,APL_NULL_CHAR,APL_DATE_LEN);
memset(l_ms_msglog_structb.msg,APL_NULL_CHAR,31);
memset(l_ms_msglog_structb.contact_details,APL_NULL_CHAR,201);
memset(l_ms_msglog_structb.contact_details1,APL_NULL_CHAR,201);
memset(l_ms_msglog_structb.baseid,APL_NULL_CHAR,7);
memset(l_ms_msglog_structb.swift_msg_ident,APL_NULL_CHAR,17);
l_ms_msglog_structb = p_ms_msglog_struct;

printf("l_ms_msglog_structb.client is %s\n",l_ms_msglog_structb.client);
fflush(stdout);
printf("l_ms_msglog_structb.message_ind is %s\n",l_ms_msglog_structb.message_ind);
fflush(stdout);
printf("l_ms_msglog_structb.swift_msg_no is %s\n",l_ms_msglog_structb.swift_msg_no);
fflush(stdout);
printf("l_ms_msglog_structb.make_ is %s\n",l_ms_msglog_structb.maker);
fflush(stdout);
printf("l_ms_msglog_structb.maker_dt is %s\n",l_ms_msglog_structb.maker_dt);
fflush(stdout);
printf("l_ms_msglog_structb.msg is %s\n",l_ms_msglog_structb.msg);
fflush(stdout);
printf("l_ms_msglog_structb.contact_details is %s\n",l_ms_msglog_structb.contact_details);
fflush(stdout);
printf("l_ms_msglog_structb.contact_details1 is %s\n",l_ms_msglog_structb.contact_details1);
fflush(stdout);
printf("l_ms_msglog_structb.baseid is %s\n",l_ms_msglog_structb.baseid);
fflush(stdout);
printf("l_ms_msglog_structb.swift_msg_ident is %s\n",l_ms_msglog_structb.swift_msg_ident);
fflush(stdout);
printf("l_ms_msglog_structb.checker is %s\n",l_ms_msglog_structb.checker);
fflush(stdout);
printf("l_ms_msglog_structb.checker_dt is %s\n",l_ms_msglog_structb.checker_dt);
fflush(stdout);
printf("l_ms_msglog_structb.access_stamp is %s\n",l_ms_msglog_structb.access_stamp);
fflush(stdout);

	EXEC SQL INSERT INTO MS_MSGLOG VALUES(:p_ms_msglog_struct);

	printf("sqlca.sqlcode is %d\n",sqlca.sqlcode);
	fflush(stdout);

        if(sqlca.sqlcode < 0)
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

        IS_ANY_ORA_ERROR;

        APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of InsIMSGLOG\n",NULL,NULL);

        }
        return APL_SUCCESS;

RETURN_FAILURE:
        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of InsIMSGLOG\n",NULL,NULL);
        }
        return APL_FAILURE;



}


int MS_Mod_MsgLogStat(char *p_ora_rowid,char p_status_ind,int *int_p_retstat,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
      MS_MSGLOG_STRUCT l_ms_msglog_structb;
      MS_MSGLOG_I_STRUCT l_ms_msglog_i_struct;
      PRO_GSEQNUM_STRUCT_H l_pro_gseqnum_struct_h_msg;
      int int_returnval=0;
      char chr_inifile[PATH_LENGTH] = APL_NULL_STRING;
      FILE *chr_finifile=NULL;
      char chr_messagesend[PATH_LENGTH] = APL_NULL_STRING;
      char chr_p_filename[PATH_LENGTH] = APL_NULL_STRING;
      char chr_original_file_path[PATH_LENGTH] = APL_NULL_STRING;
      char chr_new_file_path[PATH_LENGTH] = APL_NULL_STRING;
      FILE *original_file=NULL;
      FILE *new_file=NULL;
      char chr_chartemp[1000] = APL_NULL_STRING;

      
      EXEC SQL BEGIN DECLARE SECTION;
      EXEC SQL VAR l_ms_msglog_structb.client IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.message_ind IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.swift_msg_no IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.maker IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.maker_dt IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.msg IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.contact_details IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.contact_details1 IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.baseid IS STRING;
      EXEC SQL VAR l_ms_msglog_structb.swift_msg_ident IS STRING;
		struct sqlca sqlca;
	EXEC SQL END DECLARE SECTION;
      

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

      
      memset(&l_ms_msglog_structb,NULL,sizeof(MS_MSGLOG_STRUCT));
      memset(&l_ms_msglog_i_struct,NULL,sizeof(MS_MSGLOG_I_STRUCT));
      

      strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
      strcat(chr_inifile,"/intl_sun.cfg");
      if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
        APL_GOBACK_FAIL;

       if(CO_ReadToken(chr_finifile,"INTL_MS_SND_PATH",chr_messagesend,l_debug_info_ptr)==APL_FAILURE)
         APL_GOBACK_FAIL

      EXEC SQL SELECT *
      INTO :l_ms_msglog_structb:l_ms_msglog_i_struct
      FROM MS_MSGLOG
      WHERE rowid = :p_ora_rowid;

      strcpy(l_pro_gseqnum_struct_h_msg.sequencename,"MSGDAT");
      strcpy(l_pro_gseqnum_struct_h_msg.seq_attrb_a,APL_NULL_STRING);
      strcpy(l_pro_gseqnum_struct_h_msg.seq_attrb_b,APL_NULL_STRING);
      strcpy(l_pro_gseqnum_struct_h_msg.seq_attrb_c,APL_NULL_STRING);
      l_pro_gseqnum_struct_h_msg.last_usednum = 0;
      l_pro_gseqnum_struct_h_msg.seq_start = 0;
      l_pro_gseqnum_struct_h_msg.last_seqnum = 0;
      l_pro_gseqnum_struct_h_msg.seq_stepby = 0;

      int_returnval = CO_RtvNxtSeqNum(&l_pro_gseqnum_struct_h_msg,l_debug_info_ptr);

                                               
      strcpy(chr_p_filename,g_mt_commonsys_params_struct_h.nation_code);
      strcat(chr_p_filename,"00");
      strcat(chr_p_filename,ltoa(int_returnval));
      strcat(chr_p_filename,".TBS");

      strcpy(chr_original_file_path,chr_messagesend);
      strcat(chr_original_file_path,l_ms_msglog_structb.msg);

      strcpy(chr_new_file_path,chr_messagesend);
      strcat(chr_new_file_path,chr_p_filename);

      if ((original_file = fopen(chr_original_file_path,"r")) == NULL)
         APL_GOBACK_FAIL;

      if ((new_file=fopen(chr_new_file_path,"w")) == NULL)
         APL_GOBACK_FAIL;

       while(fgets(chr_chartemp,1000,original_file))
         fprintf(new_file,"%s",chr_chartemp);

      fclose(original_file);
      fclose(new_file);
      fclose(chr_finifile);

      memset(l_ms_msglog_structb.msg,APL_NULL_CHAR,31);
      strcpy(l_ms_msglog_structb.msg,chr_p_filename);
      l_ms_msglog_structb.status_ind = 'P';

      EXEC SQL INSERT INTO MS_MSGLOG VALUES(:l_ms_msglog_structb);



        if(sqlca.sqlcode < 0)
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

        IS_ANY_ORA_ERROR;

        APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of UpdIMSGLOGSTAT\n",NULL,NULL);

        }
        return APL_SUCCESS;

RETURN_FAILURE:
        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of UpdIMSGLOGSTAT\n",NULL,NULL);
        }
        return APL_FAILURE;

}
int MS_Mod_MsgLogDel(char *p_ora_rowid,int *int_p_retstat,
                   DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;
		struct sqlca sqlca;
	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	EXEC SQL DELETE MS_MSGLOG 
             WHERE rowid = :p_ora_rowid;

        if(sqlca.sqlcode < 0)
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

        IS_ANY_ORA_ERROR;

        APL_GOBACK_SUCCESS;

RETURN_SUCCESS:

        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of DelIMSGLOG\n",NULL,NULL);

        }
        return APL_SUCCESS;

RETURN_FAILURE:
        APL_IF_DEBUG
        {
                CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of DelIMSGLOG\n",NULL,NULL);
        }
        return APL_FAILURE;

}
