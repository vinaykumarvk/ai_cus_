


   
   
   
   
   
   
   
   
   
   
   
   




#include <CO_HostStructdef.h>

EXEC SQL INCLUDE sqlca;




int CR_Rtv_CCYFldVal(	char *p_currencycode, 
							char *p_ind, 	
							int  *int_p_retval, 
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	

	

	struct sqlca sqlca;
	char chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	
	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	

	APL_IF_DEBUG
	{
		CO_ProcMonitor(	APL_OUT_FILE, 
						"Entered Function CR_Rtv_CCYFldVal\n",
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Currency is       : %s\n", 
						p_currencycode);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Indicator is     : %s\n", 
						p_ind);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
	}


	

	sqlca.sqlcode = 0;
	if (!strcmp(p_ind, "decimallen"))
		EXEC SQL SELECT DEC_LEN INTO :int_p_retval 
		FROM DL_CURRENCY 
		WHERE CURRENCY_CD = RTRIM(:p_currencycode);

	if (sqlca.sqlcode != -1405)
  { // AIX - Warnings
		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_CCY_NOTFND,
															p_currencycode,
															APL_NULL_STRING,
															APL_NULL_STRING);
  }

	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
		APL_IF_DEBUG
		{
         CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function CR_Rtv_CCYFldVal with success\n",
							NULL,
							NULL);
		}
      return(APL_SUCCESS);
 
   RETURN_FAILURE :
		APL_IF_DEBUG
		{
         CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function CR_Rtv_CCYFldVal with errors\n",
							NULL,
							NULL);
		}
      return(APL_FAILURE);

}
