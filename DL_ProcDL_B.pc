/*
 *    COPYRIGHT NOTICE
 *
 *    Copyright 2015 Intellect Design Arena Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Intellect Design Arena Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Intellect Design Arena Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Deal Processing
 *
 * File Name           :      DL_ProcDL_B.pc
 *
 * Description         :      This file contains common functions related to Deal
 *                            Processing Module.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description       RFS No.
 * ---------   --------  ------------     -------------     ---------
 * 21/11/2014   1.1       Prateek Singh   Changed for FPI   ISKB_7009
 * 23/06/2015   1.2       Sharanya Shenoy Lien Release      ISKB_1493
 * 06/07/2015   1.3       Prateek Singh   Lien Release      ISKB_1493
 *********************************************************************/

#include "CO_HostStructdef.h"
#include "SMI_InterFace.h"
#include "SMI_Common.h"
#include <time.h> 
EXEC SQL INCLUDE sqlca.h;




int DL_Mod_DLPos(	DL_DEAL_OTH_STRUCT_H *p_dl_deal_oth_struct_h_a,
							char *p_ora_rowid,  
							INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h, 
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr ) 
{

	char 	chr_l_current_date_time[APL_DATE_LEN] 		= APL_NULL_STRING; 
	char 	chr_l_h_newtrcode[APL_FLAG_LENGTH] 				= APL_NULL_STRING;
   char 	chr_l_h_countacc_a[APL_COUNTACC_LEN] 			= APL_NULL_STRING; 
   char 	chr_l_h_clientofcode[APL_CLIENT_LENGTH] 			= APL_NULL_STRING;
   char 	chr_l_sys_checker[APL_USERID_LEN] 			= APL_NULL_STRING;
	char 	chr_l_h_trade_status[APL_STATUS_LEN] 		= APL_NULL_STRING; 
	char 	chr_l_upd_trade_status[APL_STATUS_LEN] 		= APL_NULL_STRING;
	char 	chr_l_h_confdt[APL_DATE_LEN] 					= APL_NULL_STRING;  
	char 	chr_l_h_parentrefno[APL_TXNREFNO_LEN] 		= APL_NULL_STRING; 
	char 	chr_l_h_childrefno[APL_TXNREFNO_LEN] 		= APL_NULL_STRING;
	char 	chr_l_h_origrefno[APL_TXNREFNO_LEN] 			= APL_NULL_STRING;
	char 	chr_l_condid[APL_CONDID_LEN] 					= APL_NULL_STRING;
	char  chr_mainfuncarea[APL_MAINFUNCAREA_LEN] 	= APL_NULL_STRING;
	char 	chr_l_sys_date[APL_DATE_LEN] 					= APL_NULL_STRING;
	char 	chr_l_h_blocking[APL_FLAG_LENGTH] 				= APL_NULL_STRING;
	char 	chr_l_h_ispartial[APL_FLAG_LENGTH] 				= APL_NULL_STRING;
	char 	chr_l_h_ccy[APL_CCYCODE_LEN] 					= APL_NULL_STRING;
	char 	chr_l_buf[BUFFER_LEN] 								= APL_NULL_STRING;
   char 	chr_l_fxrqflg 										= 'Y';
   char 	chr_l_fieldname[20] 								= APL_NULL_STRING;
   char 	chr_l_accspottrdflg[APL_FLAG_LENGTH] 			= APL_NULL_STRING;
	char	chr_l_h_trdfromord[APL_FLAG_LENGTH]				= APL_NULL_STRING;	
	char  chr_l_h_countname[66] 							= APL_NULL_STRING;
	char	chr_l_h_trcode_a[2] 									= APL_NULL_STRING;
	char	chr_l_h_typeoftrd[3] 								= APL_NULL_STRING;
	char	chr_l_h_exarena[3] 								= APL_NULL_STRING;
	char	chr_l_h_trdt_a[20] 									= APL_NULL_STRING;
	char	chr_l_h_settledt_a[20] 								= APL_NULL_STRING;
	char	chr_l_h_locncode_a[5] 								= APL_NULL_STRING;
	char	chr_l_h_ccycode[4] 								= APL_NULL_STRING;
	char	chr_l_h_domcpac[11] 								= APL_NULL_STRING;
	char	chr_l_h_note1[261] 								= APL_NULL_STRING;
	char	int_l_h_failcode[3] 								= APL_NULL_STRING;
	char	chr_l_h_failnote[36] 								= APL_NULL_STRING;
	char	chr_l_h_verwith[26] 								= APL_NULL_STRING;
	char	chr_l_h_clientof[66] 							= APL_NULL_STRING; 
	char	chr_l_h_countaccnm[66] 							= APL_NULL_STRING;
	char  chr_l_h_locn_csd[APL_LOCNCODE_LENGTH]    		= APL_NULL_STRING;
	char  chr_l_h_trd_locn[APL_LOCNCODE_LENGTH]    		= APL_NULL_STRING;
	char	chr_l_h_oldtrcode[APL_FLAG_LENGTH]				= APL_NULL_STRING;
	char	chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN]		 			= APL_NULL_STRING;
	char  chr_l_h_posn_status[STATUS_POS_LEN]  	= APL_NULL_STRING;
   char	chr_l_h_locnchng_flg[2]							= APL_NULL_STRING;
	char  chr_l_h_comm_ref_no[17]							= APL_NULL_STRING;
	char  chr_l_h_conf_dt[APL_DATE_LEN]					= APL_NULL_STRING;
	char	chr_l_h_maker[15]									= APL_NULL_STRING;
	char	chr_l_h_makerdt[APL_DATE_LEN]					= APL_NULL_STRING;
	char  chr_temp_str[140]									= APL_NULL_STRING;
	char  chr_l_str_lrtrdtype[4]							= APL_NULL_STRING;
	char  chr_l_tmp_chr = NULL;
	char 	chr_l_548_client[11] 							= APL_NULL_STRING;  
	char 	chr_l_548_refno[17] 								= APL_NULL_STRING;  
	short	i_548_account	=	0;
	short	i_548_refno	=	0;
	char	chr_l_h_msg_status[51]			=	APL_NULL_STRING;
	char  chr_l_h_ccsmsgtyp[APL_STATUS_LEN] 			=  APL_NULL_STRING;
	char  chr_l_h_temp_trade_status[APL_STATUS_LEN] 	=  APL_NULL_STRING;
	char  chr_l_tempdt[APL_DATE_LEN] 						= APL_NULL_STRING;
	double   l_netposn         = 0.0;
	int   int_l_date_diff										= 0;
   char	h_ora_rowid[APL_ROWID_LEN]						= APL_NULL_STRING;
   short	i_ora_rowid											= 0;
	short l_i_temp_trade_status 	=  0;
	char  chr_exch_code[4] = APL_NULL_STRING;
	short i_exch_code = 0;
	char l_block_type[5]	=	APL_NULL_STRING;
   double l_dl_amt = 0;  /* changes by amish 28/04 */
   short  i_dl_amt = 0;	
   
   /*Retro from ICICI of IB_5647 - 21062012 -Vilin - Start*/
	char l_deal_stat[DL_DEAL_STAT_LEN] = APL_NULL_STRING;	
	short i_deal_stat = 0;
	/*Retro from ICICI of IB_5647 - 21062012 -Vilin - End*/

    /*Changes done by Gouse - START */

  char l_clh_flg[DL_CLH_FLG_LEN] =  APL_NULL_STRING;
  short i_clh_flg = 0 ;

 /*Changes done by Gouse for IB_5222 - END*/

	struct sqlca sqlca;

	SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_hi;
  	SYS_DL_DEAL_STRUCT_I *l_sys_dl_deal_struct_ig;
	EI_SMI_PEND_DEAL_STRUCT_H *l_ei_smi_pend_deal_struct_ha;
	EI_SMI_PEND_DEAL_STRUCT_I *l_ei_smi_pend_deal_struct_ia;

 	short l_i_trade_status 		= 0;
	short int_l_i_trcode 				= 0;
	short l_i_typeoftrd 			= 0;
	short l_i_exarena 			= 0;
	short l_i_trdt 				= 0;
	short l_i_settledt 			= 0;
	short l_i_locncode 			= 0;
	short l_i_ccycode 			= 0;
	//Commented for warnings removal as part of ISKB 1493 short l_i_ConcatedNote 		= 0;
	short l_i_domcpac 			= 0;
	short l_i_failcode 			= 0;
	short l_i_failnote 			= 0;
	short l_i_verwith 			= 0;
	short l_i_accountof 			= 0;
	short l_i_countaccnm 		= 0;
	short l_i_amount 				= 0;
	short l_i_brkcomm 			= 0;
	short l_i_countacc 			= 0;
	short l_i_accountofcode 			= 0;
	short l_i_countname 			= 0;
	short l_i_trdfromord			= 0;
	short	int_l_condexists_A 			= 0; 
	short l_i_blocking 			= 0;
	short l_i_confdt 				= 0;
	short int_l_i_qty 					= 0;
	short l_i_amt 					= 0; 
	short l_i_origrefno 			= 0;
   short l_i_decimallen 		= 0;
	short l_i_ccy 					= 0;
	short int_l_flag               = 0;
	short l_flag1              = 0;
	short l_i_trd_locn         = 0;
	short l_i_locn_csd         = 0;
	short l_i_oldtrcode 			= 0; 
	short l_i_instr_code 				= 0;
	short l_i_posn_status 		= 0;
   short	l_i_locnchng_flg		= 0;
	short	l_i_subfailcode		= 0;
	short l_i_comm_ref_no		= 0;
	short l_i_conf_dt				= 0;
	short	l_i_maker				= 0;
	short l_i_makerdt				= 0;
	short l_locrefexists			= 0; 
	short l_i_note1				= 0;
	short int_l_exists					= 0;
	short l_i_msg_status			= 0;

	int   int_l_h_nochildrec 		= 0;
	int   int_l_h_decimallen 		= 0;
	int	int_p_smieligibility_flg = 0;	
	int	int_p_ccseligibility_flg = 0;	
	int	int_l_h_subfailcode		= 0;
	int   int_l_hol_exist			   = 0; 
   int   int_l_h_ccscount			= 0;

	double l_h_amount					= 0;
	double l_h_quantity_a 				= 0;
	double chr_l_h_amount 			= 0;	
	double l_h_brokercomm 			= 0; 	
	/* added by amish */
	float l_brk_amt = 0;
	float l_stt_amt = 0;
	
	double l_availquantity = 0;
 	/***********OVERRIDE CHK****************/
	char l_chr_cauflg_fii[2]=APL_NULL_STRING;
   short l_i_cauflgFii=0; 
	char l_chr_interfii_flg[2]=APL_NULL_STRING;
	short l_interfii_flg=0;
	float l_brokerage = 0.0;
	float l_sttrate = 0.0;
	float l_brokercomm =0.0;
	float l_stx_comm = 0.0;
	short l_i_stx_comm;
	short l_i_brokercomm;
	float l_amount =0.0;
	short l_li_amount;
	int int_error_flag=APL_SUCCESS;
	/***********OVERRIDE CHK****************/
	
								/*Amol 111206 -- Override mode only for FII Client with Inter FII ='N'*/
	char chr_l_cln_type[5]=APL_NULL_STRING; 
	//Added by Dipak for PMS T+0 confirmation start
	char l_chr_ex_arena[2] = APL_NULL_STRING;
	char l_chr_clh_flg[2] = APL_NULL_STRING;
	char l_chr_classofdl[2] = APL_NULL_STRING;
	char l_chr_dealcd[2] = APL_NULL_STRING;
	short i_chr_ex_arena=0; 
	short i_chr_clh_flg=0; 
	short i_chr_classofdl=0; 
	short i_chr_dealcd=0; 
	//Added by Dipak for PMS T+0 confirmation end

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
   
   l_sys_dl_deal_struct_hi = ( SYS_DL_DEAL_STRUCT_H *) calloc( 1,sizeof(SYS_DL_DEAL_STRUCT_H));
   APL_MALLOC_FAIL(l_sys_dl_deal_struct_hi);
   memset(l_sys_dl_deal_struct_hi , NULL , sizeof(SYS_DL_DEAL_STRUCT_H));

   l_sys_dl_deal_struct_ig = (SYS_DL_DEAL_STRUCT_I *) calloc( 1, sizeof(SYS_DL_DEAL_STRUCT_I));
   APL_MALLOC_FAIL(l_sys_dl_deal_struct_ig);
   memset(l_sys_dl_deal_struct_ig , NULL , sizeof(SYS_DL_DEAL_STRUCT_I));

   l_ei_smi_pend_deal_struct_ha = ( EI_SMI_PEND_DEAL_STRUCT_H *) calloc( 1,sizeof(EI_SMI_PEND_DEAL_STRUCT_H));
   APL_MALLOC_FAIL(l_ei_smi_pend_deal_struct_ha);
   memset(l_ei_smi_pend_deal_struct_ha , NULL , sizeof(EI_SMI_PEND_DEAL_STRUCT_H));

   l_ei_smi_pend_deal_struct_ia = ( EI_SMI_PEND_DEAL_STRUCT_I *) calloc( 1,sizeof(EI_SMI_PEND_DEAL_STRUCT_I));
   APL_MALLOC_FAIL(l_ei_smi_pend_deal_struct_ia);
   memset(l_ei_smi_pend_deal_struct_ia , NULL , sizeof(EI_SMI_PEND_DEAL_STRUCT_I));

	memset(chr_l_h_msg_status,APL_NULL_CHAR,51);
	strcpy(chr_l_current_date_time, APL_NULL_STRING);
	strcpy(chr_l_h_newtrcode, APL_NULL_STRING);
   strcpy(chr_l_h_countacc_a , APL_NULL_STRING);
   strcpy(chr_l_h_clientofcode , APL_NULL_STRING);
	strcpy(chr_l_h_trade_status, APL_NULL_STRING);
	strcpy(chr_l_upd_trade_status, APL_NULL_STRING);
	strcpy(chr_l_h_confdt, APL_NULL_STRING);
	strcpy(chr_l_h_msg_status, APL_NULL_STRING);
	strcpy(chr_l_fieldname, APL_NULL_STRING);
	strcpy(chr_l_condid, APL_NULL_STRING);
	strcpy(chr_mainfuncarea, APL_NULL_STRING);
	strcpy(chr_l_sys_date, APL_NULL_STRING);
	strcpy(chr_l_h_blocking, APL_NULL_STRING);
	strcpy(chr_l_h_ispartial, APL_NULL_STRING);
	strcpy(chr_l_h_ccy, APL_NULL_STRING);
	strcpy(chr_l_buf, APL_NULL_STRING);

	sqlca.sqlcode = 0;

	

	EXEC SQL VAR chr_l_548_client										IS STRING;
	EXEC SQL VAR chr_l_548_refno											IS STRING;
	EXEC SQL VAR chr_l_h_childrefno 									IS STRING;
	EXEC SQL VAR chr_l_h_parentrefno									IS STRING;
	EXEC SQL VAR chr_l_h_confdt											IS STRING;
	EXEC SQL VAR chr_l_h_msg_status									IS STRING;
	EXEC SQL VAR chr_l_h_ccy												IS STRING;
	EXEC SQL VAR chr_l_h_origrefno										IS STRING;
	EXEC SQL VAR chr_l_h_countacc_a     								IS STRING;
	EXEC SQL VAR chr_l_h_clientofcode     								IS STRING;
	EXEC SQL VAR chr_l_h_locn_csd     								IS STRING;
	EXEC SQL VAR chr_l_h_trd_locn     								IS STRING;
	EXEC SQL VAR chr_l_h_instrcode_A											IS STRING;
	EXEC SQL VAR chr_l_h_posn_status									IS STRING;
	EXEC SQL VAR chr_l_h_oldtrcode										IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_dl_client         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_indentity_no           IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_dlt            IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_setldt        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_ex_arena         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_instrdate           IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_moneydate         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_domcpclt_cd         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_isspotdl       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_dlfromord      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_entry       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_reapired_ind       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_domcp_custodyclt      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_countclt        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_countcltnm      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_clientof       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_custinfo        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_fx_reqd          IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_ispymtlocal      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_verfied_with         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_brkrno        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_fail_cd        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_failinfo        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_ispart_       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_report_at_eom_ind        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_billdate          IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_locindentity_no        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_instruct_person       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_dealcd          IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_instr_code          IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_currencycode         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_classofdl       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_origindentity_no       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_newdt         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_maker           IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_maker_dt         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_deal_status    IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_access_stamp    IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_info1           IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_loccode        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_reginstr_ind        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_pos_stat     IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_status_reg       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_confdate          IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_matchindentity_no      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_markfaildate      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_candropdate       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_checker         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_checker_dt       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_instrconv_ind       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_ndsbldate         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lrdltype       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_ndsdate           IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_ublckdate         IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_delrecdate        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lastregdate       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lr_chkdate        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lr_confdate       IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lr_instrdate        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_tmpoutdate        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_tmpretdate        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_transmitdate      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_hostdate          IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lr_ndsbldate      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lr_ndsdate        IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_lr_ublckdate      IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_clt_reqdel_flag  IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_mod_hispos_ind    IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_updhispos_date    IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_cash_client    IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_instruct_personnm 	   IS STRING;
  	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_clientofcode   IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_hi->h_inter_med_person       IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_hi->h_inter_med_personnm     IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_hi->h_fxccy     IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_hi->h_exp_setl_date     IS STRING; 
	EXEC SQL VAR l_sys_dl_deal_struct_hi->h_misinfo         IS STRING; 
  	EXEC SQL VAR chr_l_h_locncode_a										IS STRING;
  	EXEC SQL VAR chr_l_h_trdt_a											IS STRING;
  	EXEC SQL VAR chr_l_h_typeoftrd									  	IS STRING;
  	EXEC SQL VAR chr_l_h_locnchng_flg								  	IS STRING;
	EXEC SQL VAR chr_l_h_trade_status									IS STRING;
 	EXEC SQL VAR chr_l_h_trcode_a 										IS STRING;
 	EXEC SQL VAR chr_l_h_exarena										IS STRING;
 	EXEC SQL VAR chr_l_h_settledt_a										IS STRING;
 	EXEC SQL VAR chr_l_h_ccycode										IS STRING;
 	EXEC SQL VAR chr_l_h_domcpac										IS STRING;
 	EXEC SQL VAR int_l_h_failcode										IS STRING;
 	EXEC SQL VAR chr_l_h_failnote										IS STRING;
 	EXEC SQL VAR chr_l_h_verwith										IS STRING;
 	EXEC SQL VAR chr_l_h_clientof										IS STRING;
 	EXEC SQL VAR chr_l_h_countaccnm									IS STRING;
 	EXEC SQL VAR chr_l_h_comm_ref_no									IS STRING;
 	EXEC SQL VAR chr_l_h_conf_dt										IS STRING;
 	EXEC SQL VAR chr_l_h_maker											IS STRING;
 	EXEC SQL VAR chr_l_h_makerdt										IS STRING;
	EXEC SQL VAR chr_l_h_note1											IS STRING;
	EXEC SQL VAR chr_l_str_lrtrdtype									IS STRING;
	EXEC SQL VAR h_ora_rowid												IS STRING;
	EXEC SQL VAR chr_l_h_trdfromord										IS STRING;

	//Added by Sharanya Shenoy on 23062015 for ISKB_1493(Lien release on Reset Prematch)-START
	//int l_condition = 0;
	int hvCount1 = 0;
	int l_deal_cd =0;
	char chr_l_deal_date[APL_DATE_LEN]=APL_NULL_STRING;
	int l_deal_class =0;
//	char chr_l_clh_flag[APL_DATE_LEN]=APL_NULL_STRING;
	time_t hvPrcStrtTime;
	time_t hvPrcEndTime;
	int sys_retval = 0;
	double hv_seconds;
	int hvFailRec = 0;
	int  hvTimeOut = 0; 
	char chr_l_timeout[4] = APL_NULL_STRING;
	char chr_l_sleeptime[2] = APL_NULL_STRING;
	EXEC SQL VAR chr_l_deal_date IS STRING;
//	EXEC SQL VAR chr_l_clh_flag IS STRING;
	char p_lien_release[1000] = APL_NULL_STRING;
	char error[100]= APL_NULL_STRING;
	char *chr_tempchar=NULL;
	char chr_inifile[PATH_LENGTH];
	FILE *chr_finifile=NULL;
	
	char chr_settl_no[16] = APL_NULL_STRING;
	char chr_payout_typ[7] = APL_NULL_STRING;
	char chr_ex_arena[2] = APL_NULL_STRING;
	int l_count_dl_lien = 0;
	double l_deal_net_amt = 0.0 ;

	short i_chr_settl_no = 0; //Added On 27072015 For PMS Prematch Reset Sanity - Priyanka B.
	memset(chr_ex_arena, APL_NULL_CHAR, sizeof(chr_ex_arena));
		
	memset(chr_payout_typ, APL_NULL_CHAR, sizeof(chr_payout_typ));
	strcpy(chr_payout_typ, "NORMAL");

  
	char   chr_err_desc[4001] =APL_NULL_STRING;

	/*Added by Prateek on 01072015 for ISKB_1493(To add additional parameter while calling the LienMarkReq.ksh file) -START*/
	char g_pdf_db_url[100] = APL_NULL_STRING;
	memset(g_pdf_db_url, APL_NULL_CHAR, sizeof(g_pdf_db_url));

	char g_pdf_driver_class[100] = APL_NULL_STRING;
	memset(g_pdf_driver_class, APL_NULL_CHAR, sizeof(g_pdf_driver_class));

	char g_pdf_db_user[APL_USERID_LEN] = APL_NULL_STRING;
	memset(g_pdf_db_user, APL_NULL_CHAR, sizeof(g_pdf_db_user));

	char g_pdf_db_password[50] = APL_NULL_STRING;
	memset(g_pdf_db_password, APL_NULL_CHAR, sizeof(g_pdf_db_password));

	char g_combined_param[351] = APL_NULL_STRING;
	memset(g_combined_param, APL_NULL_CHAR, sizeof(g_combined_param));

	char  chr_custody_id_b[APL_USERID_LEN] = APL_NULL_STRING;
	memset(chr_custody_id_b, APL_NULL_CHAR, sizeof(chr_custody_id_b));
	/*Added by Prateek on 01072015 for ISKB_1493(To add additional parameter while calling the LienMarkReq.ksh file) -END*/

	int  hvSleepTime = 0; 
	if(!(chr_tempchar=getenv("INTL_ROOT_PATH")))
	APL_GOBACK_FAIL
	sprintf(chr_inifile,"%s/intl_sun.cfg",chr_tempchar);
	if(!(chr_finifile=fopen(chr_inifile,"r")))
	APL_GOBACK_FAIL

	/*Added by Prateek on 01072015 for ISKB_1493(To add additional parameter while calling the LienMarkReq.ksh file) -START*/
	if (APL_FAILURE == CO_ReadToken(chr_finifile,"DB_URL",g_pdf_db_url,l_debug_info_ptr))
		{
		printf("Error : DB_URL  not set in intl_sun.cfg File \n");
		APL_GOBACK_FAIL
		}

	if (APL_FAILURE == CO_ReadToken(chr_finifile,"DRIVER_CLASS",g_pdf_driver_class,l_debug_info_ptr))
		{
		printf("Error : DRIVER_CLASS  not set in intl_sun.cfg File \n");
		APL_GOBACK_FAIL
		}

	/*Added by Prateek on 01072015 for ISKB_1493(To add additional parameter while calling the LienMarkReq.ksh file) -END*/

	if(CO_ReadToken(chr_finifile,"INTL_LIEN_SLEEP",chr_l_sleeptime,l_debug_info_ptr)==APL_FAILURE)
		{
		printf("CO_ReadToken Failed for token LIEN SLEEP \n");
		APL_GOBACK_FAIL
		}
		printf("\n SLEEP TIME FOR LIEN: chr_l_sleeptime :[%s]",chr_l_sleeptime);

		hvSleepTime = atoi(chr_l_sleeptime);
		printf("\n hvSleepTime:[%d]",hvSleepTime);
	if(CO_ReadToken(chr_finifile,"INTL_LIEN_TIMEOUT",chr_l_timeout,l_debug_info_ptr)==APL_FAILURE)
		{
		printf("CO_ReadToken Failed for token LIEN TIMEOUT\n");
		APL_GOBACK_FAIL
		}
		printf("\n TIMEOUT FOR LIEN: chr_l_timeout :[%s]\n",chr_l_timeout);

		hvTimeOut = atoi(chr_l_timeout);
		printf("\n hvTimeOut:[%d]\n",hvTimeOut);
		fclose(chr_finifile);
		//Added by Sharanya Shenoy on 23062015 for ISKB_1493(Lien release on Reset Prematch)-END

		/*Added by Prateek on 01072015 for ISKB_1493(To add additional parameter while calling the LienMarkReq.ksh file) -START*/
		APL_FETCH_DB_LOGIN_DETAILS(l_ptr_ini_file, chr_custody_id_b,g_pdf_db_user,g_pdf_db_password,APL_OUT_FILE,&l_debug_info_ptr)

		printf("\n Debug:::: g_pdf_db_user = |%s| g_pdf_db_password = |%s|\n",g_pdf_db_user, g_pdf_db_password);
	
		printf("\n g_pdf_db_url = |%s| g_pdf_driver_class = |%s|\n",g_pdf_db_url, g_pdf_driver_class);

		strcpy(g_combined_param,g_pdf_driver_class);
		strcat(g_combined_param,",");
		strcat(g_combined_param,g_pdf_db_url);
		strcat(g_combined_param,",");
		strcat(g_combined_param,g_pdf_db_user);
		strcat(g_combined_param,",");
		strcat(g_combined_param,g_pdf_db_password);
		strcat(g_combined_param,",");

		printf("\nValue of Combined Parameter is [%s]\n",g_combined_param);
		/*Added by Prateek on 01072015 for ISKB_1493(To add additional parameter while calling the LienMarkReq.ksh file) -END*/

	APL_IF_DEBUG
	{
		CO_ProcMonitor(	APL_OUT_FILE, 
						"Entering Function DL_Mod_DLPos\n",
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Account is: %s\n", 
					p_dl_deal_oth_struct_h_a->h_dl_client);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Ref. Number is: %s\n", 
					p_dl_deal_oth_struct_h_a->h_indentity_no);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Local Ref. Number is: %s\n", 
					p_dl_deal_oth_struct_h_a->h_locindentity_no);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Cust Reqd Del Flag is: %s\n", 
					p_dl_deal_oth_struct_h_a->h_clt_reqdel_flag); 
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Broker Number is: %s\n", 	
					p_dl_deal_oth_struct_h_a->h_brkrno); 
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Mode is: %s\n", 
					p_intl_env_data_struct_h->h_mode);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The User is: %s\n", 
					p_intl_env_data_struct_h->usr);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Sub Function h_code is: %s\n", 
					p_intl_env_data_struct_h->subprocess);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
	}
	
	

	if ( APL_FAILURE == CO_RtvSysDtTime(	chr_l_current_date_time, 
															l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL;
	}

	

	if ( !strlen(p_ora_rowid) )
	{
		APL_DATA_MISSING( "Row Id",
								APL_NULL_STRING,
								APL_NULL_STRING);
	}

	

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, APL_FUNC_DELETE) )
	{
		
		if (g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y') 
		{
			EXEC SQL SELECT 
						LOCATION_CD,
						DEAL_DATE,
						DL_CLASS,
						INSTR_CODE,
						LOC_CHNG_IND,
						DEAL_STAT
			INTO 		:chr_l_h_locncode_a:l_i_locncode,
						:chr_l_h_trdt_a:l_i_trdt,
						:chr_l_h_typeoftrd:l_i_typeoftrd,
						:chr_l_h_instrcode_A:l_i_instr_code,
						:chr_l_h_locnchng_flg:l_i_locnchng_flg,
						:chr_l_h_trade_status:l_i_trade_status 	
			FROM 
						DL_DEAL
			WHERE 
						ROWID = RTRIM(:p_ora_rowid)
						AND DEAL_STAT IN ('AA','UU')
						FOR UPDATE;
		
		
		 if (EI_Chk_SMIElg(chr_l_h_locncode_a,
                                   chr_l_h_trdt_a,
                                   chr_l_h_typeoftrd,
                                   chr_l_h_instrcode_A,
                                   chr_l_h_locnchng_flg,
											  p_ora_rowid,
                                   &int_p_smieligibility_flg,
                                   p_intl_env_data_struct_h,
                                   l_debug_info_ptr
                                   ) == APL_FAILURE)
			{
            CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_env_data_struct_h);
            APL_GOBACK_FAIL;
         }

		}
		  printf("INSIDE CONDTION CHANGE DUUUUU**** STAT |%s|",chr_l_h_trade_status);
		if(int_p_smieligibility_flg)
			{
				strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
				
				if( !strcmp(chr_l_h_trade_status,STATUS_UAUTH) )
					strcpy(chr_l_upd_trade_status, STATUS_DEL_UAUTH);
			   else if ((!strcmp(chr_l_h_trade_status,APL_STATUS_CD)) || (!strcmp(chr_l_h_trade_status,APL_STATUS_CQ)))
					strcpy(chr_l_upd_trade_status, STATUS_DEL_UAUTH);
				else
					strcpy(chr_l_upd_trade_status, STATUS_SMI_DELUAUTH);
			}		
		else
			{
			strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
			strcpy(chr_l_upd_trade_status, STATUS_DEL_UAUTH);
			}

      if ( !strcmp(p_intl_env_data_struct_h->usr, APL_USER_SYSTEM) )
      {
         memset(chr_l_current_date_time, APL_NULL_CHAR, APL_DATE_LEN);

         if ( APL_FAILURE ==
                     CO_RtvMachDtTime(chr_l_current_date_time, l_debug_info_ptr) )
         {
            APL_GOBACK_FAIL
         }
      }


		EXEC SQL UPDATE DL_DEAL 
					SET   MAKER 		 	= :p_intl_env_data_struct_h->usr,
						   MAKER_DT 		 	= :chr_l_current_date_time,
						   CHECKER 	 	 	= NULL,
						   CHECKER_DT 	 	= NULL,
					   	DEAL_STAT 	= :chr_l_upd_trade_status,
							CLT_REQDEL_IND = :p_dl_deal_oth_struct_h_a->h_clt_reqdel_flag,
					   	ACCESS_STAMP 	= :chr_l_current_date_time,
							CLIENT_NOTE			= :p_dl_deal_oth_struct_h_a->h_custinfo,
							MSG_STAT     = ltrim(rtrim(MSG_STAT))||decode(DEAL_STAT,'CD','P','CQ','Q','') 
					WHERE ROWID 		 	= :p_ora_rowid;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);
		
	}

	
	if ( !strcmp(p_intl_env_data_struct_h->h_mode, BOG_MODE))
	{
		
		strcpy(chr_mainfuncarea, APL_NULL_STRING);
      strcpy(chr_l_condid, APL_NULL_STRING);
      strcpy(chr_mainfuncarea,"TRD_LOCREFNO");
      strcpy(chr_l_condid, "LOCREFNO_UNIQUE");

      if ( APL_SUCCESS == CO_Chk_CntryEnabled( chr_mainfuncarea,
                                             chr_l_condid,
                                             &int_l_condexists_A,
                                             l_debug_info_ptr ) )
      {
			if ( int_l_condexists_A > 0 && strlen(p_dl_deal_oth_struct_h_a->h_locindentity_no) )
      	{
         	if ( APL_SUCCESS == DL_Chk_LRRefTrd(  "",
           		                                     "",
              	                                  p_dl_deal_oth_struct_h_a->h_locindentity_no,
              	                                  &l_locrefexists,
              	                                  l_debug_info_ptr) )
         	{
            	if ( l_locrefexists > 0 )
            	{
               	if ( CO_InsertErr( l_debug_info_ptr,
                 	                     ERR_DEAL_LOCREFNO_EXIST,
                                    	p_dl_deal_oth_struct_h_a->h_locindentity_no,
                                    	APL_NULL_STRING,
                                    	APL_NULL_STRING,
                                    	__LINE__,
                                    	__FILE__ ) == APL_FAILURE )
               	{
                  	APL_GOBACK_FAIL;
               	} 
            	} 
         	}
				else
					APL_GOBACK_FAIL
			}
			
		}
		else
			APL_GOBACK_FAIL
		

		
		if ( strlen(p_dl_deal_oth_struct_h_a->h_lr_ndsdate)<=0 )
		{
			APL_DATA_MISSING("Forward Value Date", APL_NULL_STRING, APL_NULL_STRING);
		   APL_GOBACK_FAIL		
		}
   int_l_hol_exist = 0;

   if ( APL_SUCCESS == CO_Chk_Holiday(  p_dl_deal_oth_struct_h_a->h_lr_ndsdate,
                                          &int_l_hol_exist,
                                          l_debug_info_ptr,APL_NULL_STRING) )
   {
      if ( int_l_hol_exist != 0 )
      {
         if ( CO_InsertErr( l_debug_info_ptr,
                              ERR_DATE_IS_HOLIDAY,
										p_dl_deal_oth_struct_h_a->h_lr_ndsdate,
                              APL_NULL_STRING,
                              APL_NULL_STRING,
                              __LINE__,
                              __FILE__ ) == APL_FAILURE )
         {
            APL_GOBACK_FAIL;
         }
      }
   }
   else
   {
      APL_GOBACK_FAIL;
   }

		EXEC SQL UPDATE DL_DEAL
					SET   LCL_IDENTNO     = :p_dl_deal_oth_struct_h_a->h_locindentity_no,
					      LRNDS_DATE     = :p_dl_deal_oth_struct_h_a->h_lr_ndsdate, 
							ACCESS_STAMP = :chr_l_current_date_time
					WHERE ROWID        = :p_ora_rowid;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);

		      
      if (APL_FAILURE == DL_Proc_BOGSeqRst(p_dl_deal_oth_struct_h_a->h_locindentity_no,
                            l_debug_info_ptr) )
      {
         APL_GOBACK_FAIL
      }      
	}

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, APL_FUNC_RESET) )
	{
		EXEC SQL SELECT VAL_FDT, MSG_STAT
					INTO		:chr_l_h_confdt:l_i_confdt, :chr_l_h_msg_status:l_i_msg_status
					FROM		DL_DEAL
					WHERE		ROWID	= :p_ora_rowid;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);
		if ( !strlen( chr_l_h_confdt ) )
		{
			strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
			if(strstr(chr_l_h_msg_status,"P")!=0)
      	{
				strcpy(chr_l_upd_trade_status, APL_STATUS_CD);
			}
			else if(strstr(chr_l_h_msg_status,"Q")!=0)
      	{
				strcpy(chr_l_upd_trade_status, APL_STATUS_CQ);
			}
			else
			{
				strcpy(chr_l_upd_trade_status, STATUS_AUTH);
			}
		}
		else
		{
			strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
			strcpy(chr_l_upd_trade_status, STATUS_CONF);
		}

		EXEC SQL UPDATE DL_DEAL 
					SET   CHECKER      	= :p_intl_env_data_struct_h->usr,
						   CHECKER_DT    	= :chr_l_current_date_time,
						   DEAL_STAT 	= :chr_l_upd_trade_status,
							CLT_REQDEL_IND = NULL,
						   ACCESS_STAMP 	= :chr_l_current_date_time
					WHERE ROWID        	= :p_ora_rowid;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);

		if (strcmp(chr_l_upd_trade_status,APL_STATUS_CD)==0) 
		{
    		EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'P') - 1) ||
               substr(MSG_STAT, instr(MSG_STAT,'P') + 1, length(MSG_STAT))
					WHERE ROWID        	= :p_ora_rowid;
		}
		if (strcmp(chr_l_upd_trade_status,APL_STATUS_CQ)==0) 
		{
    		EXEC SQL UPDATE DL_DEAL
               SET MSG_STAT = substr(MSG_STAT,1,instr(MSG_STAT,'Q') - 1) ||
               substr(MSG_STAT, instr(MSG_STAT,'Q') + 1, length(MSG_STAT))
					WHERE ROWID        	= :p_ora_rowid;
		}
	}					

/*
	if ( !strcmp(p_intl_env_data_struct_h->h_mode, APL_FUNC_AUTHORISE) )
*/
	if ( !strcmp(p_intl_env_data_struct_h->h_mode, APL_FUNC_AUTHORISE) || !strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_OVERRIDE))
	{
		printf("Over ride mode\n");
      memset( chr_l_buf, NULL, BUFFER_LEN );
      CO_ProcMonitor(   APL_OUT_FILE, chr_l_buf, NULL, NULL);
		      EXEC SQL SELECT DEAL_STAT,
                     DEAL_CD,
                     DL_CLASS,
                     EX_ARENA,
                     DEAL_DATE,
                     SETL_DATE,
                     LOCATION_CD,
                     INSTR_CODE,
                     CURRENCY_CD,
                     DOMESTIC_CPCLT,
                     CP_CLT,
                     REPLACE(REPLACE(INFO1,CHR(34),' '),CHR(39),' '),
                     FAILREASON_CD,
                     REPLACE(REPLACE(FAIL_DET,CHR(34),' '),CHR(39),' '),
                     REPLACE(REPLACE(VERFIED_WITH,CHR(34),' '),CHR(39),' '),
                     REPLACE(REPLACE(CLIENTOF,CHR(34),' '),CHR(39),' '),
                     REPLACE(REPLACE(CP_CLTNAME,CHR(34),' '),CHR(39),' '),
                     QTY,
                     AMOUNT,
                     BROKERCOMM,
							LOC_CHNG_IND,
							SUB_FAIL_CD,
							REPLACE(REPLACE(COMM_IDENT_NO,CHR(34),' '),CHR(39),' '),
							VAL_FDT,
							MAKER,
							MAKER_DT,
							CLIENTOF_CD
               INTO  :chr_l_h_trade_status:l_i_trade_status,
                     :chr_l_h_trcode_a:int_l_i_trcode,
                     :chr_l_h_typeoftrd:l_i_typeoftrd,
                     :chr_l_h_exarena:l_i_exarena,
                     :chr_l_h_trdt_a:l_i_trdt,
                     :chr_l_h_settledt_a:l_i_settledt,
                     :chr_l_h_locncode_a:l_i_locncode,
                     :chr_l_h_instrcode_A:l_i_instr_code,
                     :chr_l_h_ccycode:l_i_ccycode,
                     :chr_l_h_domcpac:l_i_domcpac,
                     :chr_l_h_countacc_a:l_i_countacc,
                     :chr_l_h_note1:l_i_note1,
                     :int_l_h_failcode:l_i_failcode,
                     :chr_l_h_failnote:l_i_failnote,
                     :chr_l_h_verwith:l_i_verwith,
                     :chr_l_h_clientof:l_i_accountof,
                     :chr_l_h_countaccnm:l_i_countaccnm,
                     :l_h_quantity_a:int_l_i_qty,
                     :chr_l_h_amount:l_i_amount,
                     :l_h_brokercomm:l_i_brkcomm,
							:chr_l_h_locnchng_flg:l_i_locnchng_flg,
							:int_l_h_subfailcode:l_i_subfailcode,
							:chr_l_h_comm_ref_no:l_i_comm_ref_no,
							:chr_l_h_conf_dt:l_i_conf_dt,
							:chr_l_h_maker:l_i_maker,
							:chr_l_h_makerdt:l_i_makerdt,
							:chr_l_h_clientofcode:l_i_accountofcode
               FROM  DL_DEAL 
               WHERE rowid = :p_ora_rowid;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);


		Alert("Status here %s\n",chr_l_h_trade_status);

		if ((!strcmp(chr_l_h_trade_status, APL_STATUS_UNAUTH)) ||(!strcmp(chr_l_h_trade_status, "OR"))|| (!strcmp(chr_l_h_trade_status,APL_STATUS_CQ)) || (!strcmp(chr_l_h_trade_status,APL_STATUS_CD)) || (!strcmp(chr_l_h_trade_status,APL_STATUS_MANUNAUTH)) || (((!strcmp(chr_l_h_trade_status,APL_STATUS_SMIUNAUTH)) || (!strcmp(chr_l_h_trade_status,APL_STATUS_SMIAUTH))) &&  g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'N'))
		{

			Alert("Inside this \n");
      memset( chr_l_buf, NULL, BUFFER_LEN );
      CO_ProcMonitor(   APL_OUT_FILE, chr_l_buf, NULL, NULL);

			strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
			if ((g_mt_commonsys_params_struct_h.ccs_ind[0] == 'Y') && ((strcmp(chr_l_h_trade_status,APL_STATUS_CQ)) && (strcmp(chr_l_h_trade_status,APL_STATUS_CD)) && (strcmp(chr_l_h_trade_status,APL_STATUS_MANUNAUTH))))
			{
				if ( APL_FAILURE == DL_Chk_CCSEligible (p_dl_deal_oth_struct_h_a->h_dl_client,
																				 p_dl_deal_oth_struct_h_a->h_indentity_no,
																				 &int_p_ccseligibility_flg,
																				 "XX",
																				 l_debug_info_ptr))
				{
            	CO_ProcMonitor(APL_OUT_FILE,"Failure from CCS_CheckEligibility", NULL, p_intl_env_data_struct_h);
            	APL_GOBACK_FAIL;
				}

				if (int_p_ccseligibility_flg)
				{
					EXEC SQL SELECT MSG_STAT INTO :chr_l_h_msg_status:l_i_msg_status 
								FROM DL_DEAL WHERE ROWID = :p_ora_rowid;
					IS_ANY_ORA_ERROR

               EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_h_ccscount
								  FROM DL_DEALAUDIT 
								 WHERE CLIENT=:p_dl_deal_oth_struct_h_a->h_dl_client
								   AND IDENTIY_NO=:p_dl_deal_oth_struct_h_a->h_indentity_no
                           AND TASK_DESC='Authorization Acknowlegdement - CCS'
									AND PROC_USR='CCS-IN';
					IS_ANY_ORA_ERROR
				
					
					if (int_l_h_ccscount==0)
					{	
						if (p_dl_deal_oth_struct_h_a->h_dealcd[0] == DEALCD_RVP)
						{
							strcpy(chr_l_upd_trade_status, APL_STATUS_CQ);
					      if (strstr(chr_l_h_msg_status,"O")==0)
            			   strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T1);
            			else
                        strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T4);
						}
						else if (p_dl_deal_oth_struct_h_a->h_dealcd[0] == DEALCD_DF )
						{
							strcpy(chr_l_tempdt, APL_NULL_STRING);
							if ( APL_FAILURE == CO_RtvSysDt(chr_l_tempdt, l_debug_info_ptr) )
							{
								APL_GOBACK_FAIL;
							}

                  	EXEC SQL SELECT NVL(SUM(SAFEKEEP_POS),0)-NVL(SUM(VAL_REC),0)-NVL(SUM(NVALDELIVER),0) into :l_netposn
                        	FROM DL_SAFEK WHERE CLIENT = :p_dl_deal_oth_struct_h_a->h_dl_client 
														AND INSTR_CODE = (select instr_code from DL_DEAL 
														where client = :p_dl_deal_oth_struct_h_a->h_dl_client AND 
														IDENTIY_NO = :p_dl_deal_oth_struct_h_a->h_indentity_no);
                  	IS_ANY_ORA_ERROR

							if ( APL_FAILURE == CO_Pro_DateComp(	p_dl_deal_oth_struct_h_a->h_setldt,
																		chr_l_tempdt, 
																		&int_l_date_diff,
																		l_debug_info_ptr) )
							{
								APL_GOBACK_FAIL;
							}
							if ((int_l_date_diff > 0) || (l_netposn < 0) )
							{
								strcpy(chr_l_upd_trade_status, APL_STATUS_CD);
					         if (strstr(chr_l_h_msg_status,"O")==0)
            				    strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T3);
            				else
                            strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T4);
							}
							else
							{
                        strcpy(chr_l_upd_trade_status, STATUS_AUTH);
					         if (strstr(chr_l_h_msg_status,"O")==0)
            					strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T2);
            				else
									strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T4);
							}
						}
						else 
						{
							strcpy(chr_l_upd_trade_status, STATUS_AUTH);
					      if (strstr(chr_l_h_msg_status,"O")==0)
            				strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T2);
            			else
								strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T4);
                  }
					}
					else
					{
						strcpy(chr_l_upd_trade_status, STATUS_AUTH);
					   if (strstr(chr_l_h_msg_status,"O")==0)
            			strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T2);
            		else
							strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T4);
					}
				}
				else
				{
					strcpy(chr_l_upd_trade_status, STATUS_AUTH);
				}
			}
			else
			{
      		if(((!strcmp(chr_l_h_trade_status,APL_STATUS_CQ)) || (!strcmp(chr_l_h_trade_status,APL_STATUS_CD))) && (strcmp(p_intl_env_data_struct_h->subprocess,"ACK")!=0))
      		{
         		strcpy(chr_l_upd_trade_status,APL_STATUS_MANUNAUTH);
      		}
      		else
      		{
         		strcpy(chr_l_upd_trade_status, STATUS_AUTH);
      		}
			} 

			if(!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_AUTHORISE))
			{	
				Alert("Inside over chk \n");
				/*************OVERRIDE CHK********************************/
            /* chgs by amish */
				/*
				EXEC SQL SELECT BROKERCOMM,NET_AMT,STX_COMM INTO :l_brokercomm:l_i_brokercomm,l_amount:l_li_amount,
					  :l_stx_comm:l_i_stx_comm
					FROM DL_DEAL WHERE CLIENT =:p_dl_deal_oth_struct_h_a->h_dl_client
					AND IDENTIY_NO =:p_dl_deal_oth_struct_h_a->h_indentity_no;
				IS_ANY_ORA_ERROR
				*/

				 
				EXEC SQL SELECT BROKERCOMM,NET_AMT,STX_COMM,AMOUNT INTO :l_brokercomm:l_i_brokercomm,l_amount:l_li_amount,
					  :l_stx_comm:l_i_stx_comm,l_dl_amt:i_dl_amt
					FROM DL_DEAL WHERE CLIENT =:p_dl_deal_oth_struct_h_a->h_dl_client
					AND IDENTIY_NO =:p_dl_deal_oth_struct_h_a->h_indentity_no;

				IS_ANY_ORA_ERROR
		       //Added by Dipak for PMS T+0 confirmation start
				EXEC SQL SELECT INSTR_CODE,
								INTERFII_FLG,
								EX_ARENA,
								CLH_FLG,
								DL_CLASS,
								DEAL_CD 
								INTO :chr_l_h_instrcode_A:l_i_instr_code ,
									:l_chr_interfii_flg:l_interfii_flg,
									:l_chr_ex_arena:i_chr_dealcd,
									:l_chr_clh_flg:i_chr_clh_flg,
									:l_chr_classofdl:i_chr_classofdl,
									:l_chr_dealcd:i_chr_dealcd
						FROM DL_DEAL 
						WHERE CLIENT =:p_dl_deal_oth_struct_h_a->h_dl_client 
						AND IDENTIY_NO =:p_dl_deal_oth_struct_h_a->h_indentity_no;
		       //Added by Dipak for PMS T+0 confirmation end
	
							/*Amol 111206 -- Override mode only for FII Client with Inter FII ='N'*/
				EXEC SQL SELECT CLN_TYPE INTO :chr_l_cln_type FROM MT_CLIENT WHERE CLN_CODE=:p_dl_deal_oth_struct_h_a->h_dl_client;
				IS_ANY_ORA_ERROR

				/* ISKB-381 : ASHISH 21/08/2007 */
				//Commented and Rewritten by Prateek on 21-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - START
				//if((strcmp(l_chr_interfii_flg,"N")==0) && (strcmp(chr_l_cln_type,"F")==0)&& (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,APL_DEAL_RVP) || !strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,APL_DEAL_RF)))
				if((strcmp(l_chr_interfii_flg,"N")==0) && ((strcmp(chr_l_cln_type,"F")==0)||(strcmp(chr_l_cln_type,"FP")==0)) && (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,APL_DEAL_RVP) || !strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,APL_DEAL_RF)))
				//Commented and Rewritten by Prateek on 21-11-2014 for ISKB_7009(System is not checking RBI restricted scrips for FPI category clients) - END
				{	
					Alert("Caution flag is N,client type F or FP,Deal Code RVP or RF");

					EXEC SQL SELECT CAUTION_FLG
						INTO :l_chr_cauflg_fii:l_i_cauflgFii
						FROM MT_RBI_MONITORY
						WHERE INSTR_CODE =:chr_l_h_instrcode_A;
					if (strcmp(l_chr_cauflg_fii,"Y")==0)
					{
						strcpy(chr_l_upd_trade_status,STATUS_OVERRIDE);
					}
				}
					EXEC SQL SELECT BROKERAGE,STTRATE INTO :l_brokerage,:l_sttrate FROM MT_CORE_SYS_PARAMS WHERE PART_CONFIRM = 'Y';
					printf("sql code %d\n",sqlca.sqlcode);
					IS_ANY_ORA_ERROR
                /* chgs by amish --02/05 --comparision oonly till 4 decimal places */
					l_brk_amt = (l_brokercomm*100/l_dl_amt);
				   EXEC SQL select round(:l_brk_amt,4) into :l_brk_amt from dual;
					/*
					printf("\n%%%%%%%%%%%%%%5brk amout is |%f|",l_brk_amt);
					printf("\n%%%%%%%amish##########%%%%%%%5brokerage is |%f|",l_brokerage);
					*/
				if(l_brokercomm != 0) 
				{
					/*
						if((l_brokercomm*100/l_amount) > l_brokerage)  
						*/
					/* chgs by amish */
					  if(l_brk_amt > l_brokerage)
						{
							/*
							 printf("\n%%%%%%%amish##########%%%%%%%5brokerage is |%lf|",l_brokerage);
							 */
							if(CO_InsertErr(l_debug_info_ptr,
										ERR_BCN_BROKERAGE_HIGH,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										) == APL_SUCCESS)
								int_error_flag = APL_FAILURE;
						}
				
				}
				/* chgs by amish --02/05 --comparision oonly till 4 decimal places */
				l_stt_amt = (l_stx_comm*100/l_dl_amt);
				
					EXEC SQL select round(:l_stt_amt,4) into :l_stt_amt from dual;
					/*
				printf("\n%%%%%%%am5 STT AMOUNT  is |%f|",l_stt_amt);
				*/

					if(l_stx_comm != 0)
					{
						/*
						if((l_stx_comm*100/l_amount) > l_sttrate)   
						*/
						/* chgs by amish */
						if(l_stt_amt > l_sttrate)
						{
						
							if(CO_InsertErr(l_debug_info_ptr,
										ERR_BCN_STTAMT_HIGH,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										 ) == APL_SUCCESS)
								int_error_flag = APL_FAILURE;
						}
					}

					if (int_error_flag == APL_FAILURE)
					{
						APL_GOBACK_FAIL
					}
				/*************OVERRIDE CHK********************************/
				/*************Position Chk********************************/
					if((p_dl_deal_oth_struct_h_a->h_dealcd[0] == '1') || (p_dl_deal_oth_struct_h_a->h_dealcd[0] == '3'))
					{
						/*Changes done by Dipak for PMS deals T+0 cnfirmation start - New function DL_Chk_MasterSubAvlPos is added to check the master client parameter which will decide if sub client position need to consider in sell deal */
						char l_chr_sub_pos_chk[2] = APL_NULL_STRING;
						memset(l_chr_sub_pos_chk,APL_NULL_CHAR,sizeof(l_chr_sub_pos_chk));
						EXEC SQL SELECT GETCLIENTPARAMBYID('SUBACC_POS_SELL',:p_dl_deal_oth_struct_h_a->h_dl_client) INTO :l_chr_sub_pos_chk FROM DUAL;
									
						if	(	(!strcmp(l_chr_sub_pos_chk,"Y"))
							&&	(!strcmp(l_chr_ex_arena,"1")) 
							&& 	(!strcmp(l_chr_clh_flg,"C")) 
							&&  (!strcmp(l_chr_classofdl,"1")) 
							&& 	(	(!strcmp(l_chr_dealcd,"1")) 
									|| (!strcmp(l_chr_dealcd,"3"))
								)
							)
						{
							Alert("Calling function DL_Chk_MasterSubAvlPos \n");
							if ( APL_FAILURE == DL_Chk_MasterSubAvlPos(  p_dl_deal_oth_struct_h_a->h_dl_client,
									chr_l_h_instrcode_A,
									chr_l_h_locncode_a,
									'Y','N','Y','N','Y','N','N','N',"FREE",
									&l_availquantity,
									l_debug_info_ptr ) )
							{
								APL_GOBACK_FAIL;
							}
						}
						else
						{
							Alert("Calling function DL_Chk_AvlPos \n");
							if ( APL_FAILURE == DL_Chk_AvlPos(  p_dl_deal_oth_struct_h_a->h_dl_client,
									chr_l_h_instrcode_A,
									chr_l_h_locncode_a,
									'Y','N','Y','N','Y','N','N','N',"FREE",
									&l_availquantity,
									l_debug_info_ptr ) )
							{
								APL_GOBACK_FAIL;
							}
						}
						/*Changes done by Dipak for PMS deals T+0 cnfirmation end */

						/* if ( l_availquantity < 0 ) TUX ***/
						/** For short sell deal we have to bypass this check ****/
						if ( l_availquantity < 0  && strcmp(p_dl_deal_oth_struct_h_a->h_classofdl,SHORTSELLDEAL))
						{
							if ( APL_FAILURE == CO_InsertErr(   l_debug_info_ptr,
										ERR_DEAL_NENUFPOSN,
										p_dl_deal_oth_struct_h_a->h_dl_client,
										chr_l_h_instrcode_A,
										APL_NULL_STRING,
										__LINE__,
										__FILE__ ) )
							{
								APL_GOBACK_FAIL;
							}
							/*	int_l_error_flg = APL_FAILURE;*/
						}
					}
			}
			printf("status is %s\n",chr_l_upd_trade_status);

      if(((!strcmp(chr_l_h_trade_status,APL_STATUS_CQ)) || (!strcmp(chr_l_h_trade_status,APL_STATUS_CD))) && (strcmp(p_intl_env_data_struct_h->subprocess,"ACK")!=0))
       {
        EXEC SQL UPDATE DL_DEAL
                  SET   MAKER        = :p_intl_env_data_struct_h->usr,
                        MAKER_DT      = :chr_l_current_date_time,
                        DEAL_STAT = :chr_l_upd_trade_status,
                        ACCESS_STAMP = :chr_l_current_date_time,
                        CHECKER      =  NULL,
                        CHECKER_DT    =  NULL 
                  WHERE ROWID        = :p_ora_rowid;
       }
       else
       {
			if (g_mt_commonsys_params_struct_h.ccs_ind[0]=='Y')
			{
				EXEC SQL UPDATE DL_DEAL 
						SET   CHECKER      = :p_intl_env_data_struct_h->usr,
							   CHECKER_DT    = :chr_l_current_date_time,
							   DEAL_STAT = :chr_l_upd_trade_status,
							   ACCESS_STAMP = :chr_l_current_date_time,
								MSG_STAT	 = decode(instr(nvl(MSG_STAT,' '),'O'),0,ltrim(rtrim(MSG_STAT))||'O',MSG_STAT)
						WHERE ROWID        = :p_ora_rowid;
			}
			else
			{
				EXEC SQL UPDATE DL_DEAL 
						SET   CHECKER      = :p_intl_env_data_struct_h->usr,
							   CHECKER_DT    = :chr_l_current_date_time,
							   DEAL_STAT = :chr_l_upd_trade_status,
							   ACCESS_STAMP = :chr_l_current_date_time
						WHERE ROWID        = :p_ora_rowid;
			}
		}
		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);

		
      if (int_p_ccseligibility_flg)
      {
				
				if ( strcmp(chr_l_h_ccsmsgtyp,MS_CCS_T3) == 0)
				{
					strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T2);
            	if (  DL_Mod_CCSPendDL(p_dl_deal_oth_struct_h_a->h_dl_client,
                           	p_dl_deal_oth_struct_h_a->h_indentity_no,
                           	chr_l_h_ccsmsgtyp,
										APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                           	l_debug_info_ptr) == APL_FAILURE  )
            	{
                  	CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_env_data_struct_h);
                  	APL_GOBACK_FAIL;
            	} 
					strcpy(chr_l_h_ccsmsgtyp,MS_CCS_T3);
				}

            if (  DL_Mod_CCSPendDL(p_dl_deal_oth_struct_h_a->h_dl_client,
                           p_dl_deal_oth_struct_h_a->h_indentity_no,
                           chr_l_h_ccsmsgtyp,
									APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                           l_debug_info_ptr) == APL_FAILURE  )
            {
                  CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_env_data_struct_h);
                  APL_GOBACK_FAIL;
            }
      }

		

     

     

	  if ( p_intl_env_data_struct_h->h_process[0]  == 'Y' ||  p_intl_env_data_struct_h->h_process[0]  == BILLABLE_DEAL_IND || p_intl_env_data_struct_h->h_process[0]  == BILLABLE_DEAL_INSTR_LEG)
     {
        
          EXEC SQL SELECT * INTO :l_sys_dl_deal_struct_hi:l_sys_dl_deal_struct_ig
          FROM DL_DEAL
          WHERE ROWID     = :p_ora_rowid;

          IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
                                                 p_dl_deal_oth_struct_h_a->h_dl_client,
                                                 p_dl_deal_oth_struct_h_a->h_indentity_no,
                                                 APL_NULL_STRING);


        

        strcpy(chr_l_upd_trade_status, STATUS_DEL_UAUTH);


          if (((!strcmp(l_sys_dl_deal_struct_hi->h_classofdl , DL_BOOKTRF_IND))|| (!strcmp(l_sys_dl_deal_struct_hi->h_classofdl , INTRAFIRM))|| (!strcmp(l_sys_dl_deal_struct_hi->h_classofdl , IPOBOOKTRFDEAL)))
             && (!strcmp(l_sys_dl_deal_struct_hi->h_domcpclt_cd , l_mt_core_sys_params_struct_h.custody_clt_cd))
             && (strlen(l_sys_dl_deal_struct_hi->h_countclt) != 0 )
             && (strcmp(l_sys_dl_deal_struct_hi->h_deal_status ,chr_l_upd_trade_status)))

          {
              if (l_sys_dl_deal_struct_hi->h_dealcd[0]== DEALCD_DF)
              {
                    chr_l_h_newtrcode[0] = DEALCD_RF;
              }
              else if(l_sys_dl_deal_struct_hi->h_dealcd[0] == DEALCD_RF )
              {
                 chr_l_h_newtrcode[0] = DEALCD_DF;
              }
              else  if (l_sys_dl_deal_struct_hi->h_dealcd[0] == DEALCD_DVP)
              {
                    chr_l_h_newtrcode[0] = DEALCD_RVP;
              }
              else if( l_sys_dl_deal_struct_hi->h_dealcd[0] == DEALCD_RVP)
              {
                    chr_l_h_newtrcode[0] = DEALCD_DVP;
              }
              if (l_sys_dl_deal_struct_hi->h_dealcd[0]== DEALCD_CD)
              {
                    chr_l_h_newtrcode[0] = DEALCD_CR;
              }
              else if(l_sys_dl_deal_struct_hi->h_dealcd[0] == DEALCD_CR )
              {
                 chr_l_h_newtrcode[0] = DEALCD_CD;
              }
              else  if (l_sys_dl_deal_struct_hi->h_dealcd[0] == DEALCD_DCD)
              {
                    chr_l_h_newtrcode[0] = DEALCD_RCR;
              }
              else if( l_sys_dl_deal_struct_hi->h_dealcd[0] == DEALCD_RCR)
              {
                    chr_l_h_newtrcode[0] = DEALCD_DCD;
              }

              chr_l_h_newtrcode[1] = '\0' ;
              strcpy( chr_l_upd_trade_status,STATUS_AUTH);
				  strcpy(chr_l_sys_checker , APL_USER_SYSTEM);
               
    			  strncpy(l_sys_dl_deal_struct_hi->h_dl_client , l_sys_dl_deal_struct_hi->h_countclt,APL_CLIENT_LENGTH-1);
              
					strcat(l_sys_dl_deal_struct_hi->h_dl_client,"\0"); 
              strcpy(l_sys_dl_deal_struct_hi->h_countclt, p_dl_deal_oth_struct_h_a->h_dl_client);
              strcpy(l_sys_dl_deal_struct_hi->h_maker   ,chr_l_sys_checker);
              strcpy(l_sys_dl_deal_struct_hi->h_checker ,chr_l_sys_checker);
              strcpy(l_sys_dl_deal_struct_hi->h_maker_dt ,chr_l_current_date_time);
              strcpy(l_sys_dl_deal_struct_hi->h_checker_dt ,chr_l_current_date_time);
              strcpy(l_sys_dl_deal_struct_hi->h_deal_status ,chr_l_upd_trade_status);
              strcpy(l_sys_dl_deal_struct_hi->h_uniq_ident_no ,APL_NULL_STRING);

				  	
					
   				
   					int_l_exists=0;
   					if (APL_FAILURE == CO_Chk_CntryEnabled("TRD_LRTRDTYP", "LRTRDTYP_NOT_NULL",
   					                                      &int_l_exists, l_debug_info_ptr))
   					{
      					APL_GOBACK_FAIL
   					}
   					if (int_l_exists)
   					{
      					int_l_exists=0;
      					if(CO_Chk_CntryEnabled("TRD_LRTRDTYP",
                        						"LRTRDTYP_MOROCCO",
                        						&int_l_exists,
                        						l_debug_info_ptr)==APL_FAILURE)
         					APL_GOBACK_FAIL
      					else
         				 if (int_l_exists)
							 {
								memset(chr_l_str_lrtrdtype,APL_NULL_CHAR,4);
								chr_l_tmp_chr=chr_l_h_newtrcode[0];
								EXEC SQL SELECT DEAL_CLASS INTO :chr_l_str_lrtrdtype FROM DL_LOCALREPDEALTYPE 
   							WHERE 
								SUBSTR(DEAL_CD_MTX,:chr_l_tmp_chr,1) = '1'
								AND ROWNUM = 1 ; 
   
   							IS_ANY_ORA_ERROR

   							strcpy(l_sys_dl_deal_struct_hi->h_lrdltype ,chr_l_str_lrtrdtype);	
							 }
						}

					


				  

				  strcpy(l_sys_dl_deal_struct_hi->h_cash_client, APL_NULL_STRING);

	      


	  if ( p_intl_env_data_struct_h->h_process[0]  == BILLABLE_DEAL_IND || p_intl_env_data_struct_h->h_process[0]  == BILLABLE_DEAL_INSTR_LEG)
			l_sys_dl_deal_struct_hi->h_entry[0] = BILLABLE_DEAL_IND;
	  else
			l_sys_dl_deal_struct_hi->h_entry[0] = ENTRY_MANUAL_IND;

              l_sys_dl_deal_struct_hi->h_entry[1] = '\0';
              l_sys_dl_deal_struct_hi->h_dealcd[0] =chr_l_h_newtrcode[0];
              l_sys_dl_deal_struct_hi->h_dealcd[1] = chr_l_h_newtrcode[1];

	 
	EXEC SQL SELECT CLN_NAME
                                  INTO :chr_l_h_countname:l_i_countname
                                  FROM MT_CLIENT
                                  WHERE CLN_CODE = rtrim(SUBSTR(:l_sys_dl_deal_struct_hi->h_countclt,1,10));

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_ACCNOT_FND,
"Trd. Countacc.",
l_sys_dl_deal_struct_hi->h_countclt,
APL_NULL_STRING
)

strcpy(l_sys_dl_deal_struct_hi->h_countcltnm, chr_l_h_countname);


              if ( l_mt_message_sys_params_struct_h.gen_fx_adv_ind[0] == 'Y' )
              {
                    if ( APL_SUCCESS == DL_Chk_FXAcc( l_sys_dl_deal_struct_hi ->h_dl_client,
                                                         l_sys_dl_deal_struct_hi ->h_dealcd[0],
                                                      &chr_l_fxrqflg,
                                                      l_debug_info_ptr) )
                    {
                      if ( chr_l_fxrqflg == 'N')
                        l_sys_dl_deal_struct_hi->h_fx_reqd[0] = 'N';
                    }
                    else
                    {
                      APL_GOBACK_FAIL;
                    }
               }

              if ( l_mt_core_sys_params_struct_h.proc_spot_dl_ind[0] == 'Y' )
              {
                 strcpy(chr_l_fieldname, "spottrdflg");
                 if ( APL_SUCCESS == MT_Rtv_AccFldVal(l_sys_dl_deal_struct_hi ->h_dl_client,
                                                     chr_l_fieldname,
                                                     chr_l_accspottrdflg,
                                                     l_debug_info_ptr ) )
                 {
                    if  ( chr_l_accspottrdflg[0] ==  'N' )
                          l_sys_dl_deal_struct_hi->h_isspotdl[0] = 'N';
                 }
                 else
                 {
                     APL_GOBACK_FAIL;
                  }
               }

              strcpy(p_intl_env_data_struct_h->h_mode,APL_FUNC_INPUT);

   				
   				
      				if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_INPUT))
         				strcpy(l_sys_dl_deal_struct_hi->h_allow_part_s,"N");
   				

               
              if (APL_FAILURE == DL_Proc_Trd( l_sys_dl_deal_struct_hi,
															NULL,
                                             p_intl_env_data_struct_h,
                                             l_debug_info_ptr ))
              {
                APL_GOBACK_FAIL
              }

               else 
					{

					

					
					EXEC SQL SELECT DEAL_STAT into :chr_l_h_temp_trade_status:l_i_temp_trade_status
								FROM DL_DEAL 
								WHERE CLIENT=:l_sys_dl_deal_struct_hi->h_dl_client
								AND 	IDENTIY_NO=:l_sys_dl_deal_struct_hi->h_indentity_no;
					IS_ANY_ORA_ERROR

		   	  if ((g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y') && (strcmp(chr_l_h_temp_trade_status,APL_STATUS_CD)!=0 )
					&& (strcmp(chr_l_h_temp_trade_status,APL_STATUS_CQ)!=0 ) && (strcmp(chr_l_h_temp_trade_status,APL_STATUS_MANUNAUTH)!=0 ) )
         	  {

					memset(h_ora_rowid,APL_NULL_CHAR,APL_ROWID_LEN);
					EXEC SQL SELECT rowid 
								INTO :h_ora_rowid:i_ora_rowid
								FROM DL_DEAL
								WHERE CLIENT=:l_sys_dl_deal_struct_hi->h_dl_client
								AND 	IDENTIY_NO=:l_sys_dl_deal_struct_hi->h_indentity_no;

					IS_ANY_ORA_ERROR

					int_p_smieligibility_flg=0;

			 		if (EI_Chk_SMIElg(chr_l_h_locncode_a,
               			                   chr_l_h_trdt_a,
                        			          l_sys_dl_deal_struct_hi->h_classofdl,
                                 			 chr_l_h_instrcode_A,
                                   			 chr_l_h_locnchng_flg,
														 h_ora_rowid,
                                   			 &int_p_smieligibility_flg,
                                   			 p_intl_env_data_struct_h,
                                   			 l_debug_info_ptr
                                   			 ) == APL_FAILURE)
         			{
            			CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_env_data_struct_h);
            			APL_GOBACK_FAIL;
         			}
					
					if(int_p_smieligibility_flg)
					{
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_dl_client,	l_sys_dl_deal_struct_hi->h_dl_client);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_indentity_no,		l_sys_dl_deal_struct_hi->h_indentity_no);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_dealcd,	l_sys_dl_deal_struct_hi->h_dealcd);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_classofdl,l_sys_dl_deal_struct_hi->h_classofdl);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_ex_arena,	l_sys_dl_deal_struct_hi->h_ex_arena);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_dlt,		l_sys_dl_deal_struct_hi->h_dlt);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_setldt,	l_sys_dl_deal_struct_hi->h_setldt);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_loccode,	l_sys_dl_deal_struct_hi->h_loccode);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_instr_code,	l_sys_dl_deal_struct_hi->h_instr_code);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_currencycode,	l_sys_dl_deal_struct_hi->h_currencycode);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_domcpclt_cd,	l_sys_dl_deal_struct_hi->h_domcpclt_cd);
if (strcmp(l_sys_dl_deal_struct_hi->h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
{
	if (strcmp(l_sys_dl_deal_struct_hi->h_countclt,APL_NULL_STRING)!=0)
   {
  		 
  		strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,l_sys_dl_deal_struct_hi->h_countclt,APL_CLIENT_LENGTH-1);
      strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0"); 
   }
	else 
	strcpy(l_ei_smi_pend_deal_struct_ha->h_countclt, l_sys_dl_deal_struct_hi->h_clientofcode);
}
else
{
   
	strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt, l_sys_dl_deal_struct_hi->h_countclt,APL_CLIENT_LENGTH-1);
   strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0");
}
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_info1,		l_sys_dl_deal_struct_hi->h_info1);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_fail_cd,	l_sys_dl_deal_struct_hi->h_fail_cd);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_failinfo,	l_sys_dl_deal_struct_hi->h_failinfo);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_verfied_with,	l_sys_dl_deal_struct_hi->h_verfied_with);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_deal_status,	l_sys_dl_deal_struct_hi->h_deal_status); 
	if(strcmp(l_sys_dl_deal_struct_hi->h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
	{
	if (strcmp(l_sys_dl_deal_struct_hi->h_countclt,APL_NULL_STRING)!=0)
  		strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,l_sys_dl_deal_struct_hi->h_countcltnm);
	else 
		strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,l_sys_dl_deal_struct_hi->h_clientof);
	}
	else
		strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,l_sys_dl_deal_struct_hi->h_countcltnm);

            		strcpy(l_ei_smi_pend_deal_struct_ha->h_clientof,		l_sys_dl_deal_struct_hi->h_clientof);
           	 		l_ei_smi_pend_deal_struct_ha->h_qty 					= l_sys_dl_deal_struct_hi->h_qty;
            		l_ei_smi_pend_deal_struct_ha->h_net_setlval 	= l_sys_dl_deal_struct_hi->h_amt;
            		l_ei_smi_pend_deal_struct_ha->h_grs_setlval = l_sys_dl_deal_struct_hi->h_brokercomm;
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_trans_status_ind,	"A");
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_req_class,	"N");
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_reject_reason,	APL_NULL_STRING);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_access_stamp,	chr_l_current_date_time);

						

						l_ei_smi_pend_deal_struct_ha->h_subfailreas_cd 			= l_sys_dl_deal_struct_hi->h_subfailreas_cd;
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_commonindentity_no,	chr_l_h_comm_ref_no);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_maker,			l_sys_dl_deal_struct_hi->h_maker);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_maker_dt,		l_sys_dl_deal_struct_hi->h_maker_dt);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_checker,		l_sys_dl_deal_struct_hi->h_checker);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_checker_dt,	chr_l_current_date_time);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_confdate,		l_sys_dl_deal_struct_hi->h_confdate);


            		EXEC SQL INSERT INTO DL_SMI_PENDTXN 
                     	VALUES (:l_ei_smi_pend_deal_struct_ha:l_ei_smi_pend_deal_struct_ia);
            		IS_ANY_ORA_ERROR
					}
				  }


					

						strcpy(p_intl_env_data_struct_h->h_mode,APL_FUNC_AUTHORISE);
						

					 if (APL_FAILURE==EI_Mod_MQData(l_sys_dl_deal_struct_hi->h_dl_client,
         			                         l_sys_dl_deal_struct_hi->h_indentity_no,
            	   		                   NULL,
               	      		             NULL,
                  	         		       "B",
                     	            		  l_debug_info_ptr))
  			
					     APL_GOBACK_FAIL
					}
        }


           

        else if (strcmp(l_sys_dl_deal_struct_hi->h_classofdl , DL_BOOKTRF_IND) || strcmp(l_sys_dl_deal_struct_hi->h_classofdl , INTRAFIRM) || strcmp(l_sys_dl_deal_struct_hi->h_classofdl , IPOBOOKTRFDEAL))
        {
           CO_InsertErr(l_debug_info_ptr,
                       ERR_TYPEOFDEAL_NOTEQTO_26,
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       __LINE__,
                       __FILE__);
           APL_GOBACK_FAIL
        }

        else if  (strcmp(l_sys_dl_deal_struct_hi->h_domcpclt_cd , l_mt_core_sys_params_struct_h.custody_clt_cd))
          {
            CO_InsertErr(l_debug_info_ptr,
                         ERR_DOMCP_EQLTO_INTRNLACC,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__);
             APL_GOBACK_FAIL
          }

        else if (strlen(l_sys_dl_deal_struct_hi->h_countclt) == 0)
          {
             CO_InsertErr(l_debug_info_ptr,
                         ERR_COUNTACCFLD_CANT_EMPTY,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__);
             APL_GOBACK_FAIL
          }
			else if (!strcmp(l_sys_dl_deal_struct_hi->h_deal_status ,chr_l_upd_trade_status))
          {
             CO_InsertErr(l_debug_info_ptr,
                         ERR_STATUS_DEAL_DU,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         APL_NULL_STRING,
                         __LINE__,
                         __FILE__);
              APL_GOBACK_FAIL
          }
		   }
 



		   if (strcmp(chr_l_upd_trade_status,APL_STATUS_CD) && (strcmp(chr_l_upd_trade_status,APL_STATUS_CQ)) && (strcmp(chr_l_upd_trade_status,APL_STATUS_MANUNAUTH)) && (g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y'))
         	{
			 		if (EI_Chk_SMIElg(chr_l_h_locncode_a,
               			                   chr_l_h_trdt_a,
                        			          chr_l_h_typeoftrd,
                                 			 chr_l_h_instrcode_A,
                                   			 chr_l_h_locnchng_flg,
														 p_ora_rowid,
                                   			 &int_p_smieligibility_flg,
                                   			 p_intl_env_data_struct_h,
                                   			 l_debug_info_ptr
                                   			 ) == APL_FAILURE)
         			{
            			CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_env_data_struct_h);
            			APL_GOBACK_FAIL;
         			}
					
					if(int_p_smieligibility_flg)
					{
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_dl_client,p_dl_deal_oth_struct_h_a->h_dl_client);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_indentity_no,p_dl_deal_oth_struct_h_a->h_indentity_no);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_dealcd,chr_l_h_trcode_a);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_classofdl,chr_l_h_typeoftrd);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_ex_arena,chr_l_h_exarena);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_dlt,chr_l_h_trdt_a);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_setldt,chr_l_h_settledt_a);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_loccode,chr_l_h_locncode_a);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_instr_code,chr_l_h_instrcode_A);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_currencycode,chr_l_h_ccycode);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_domcpclt_cd,chr_l_h_domcpac);
if (strcmp(chr_l_h_domcpac,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
{
	if (strcmp(chr_l_h_countacc_a,APL_NULL_STRING)!=0)
   {
      
   	strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,chr_l_h_countacc_a,APL_CLIENT_LENGTH-1);
      strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0");
   }
	else
		strcpy(l_ei_smi_pend_deal_struct_ha->h_countclt,chr_l_h_clientofcode);
}
else
{
   
	strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,chr_l_h_countacc_a,APL_CLIENT_LENGTH-1);
   strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0");
}

            		strcpy(l_ei_smi_pend_deal_struct_ha->h_info1,chr_l_h_note1);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_fail_cd,int_l_h_failcode);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_failinfo,chr_l_h_failnote);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_verfied_with,chr_l_h_verwith);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_deal_status,chr_l_upd_trade_status); 
	if (strcmp(chr_l_h_domcpac,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
	{
		if (strcmp(chr_l_h_countacc_a,APL_NULL_STRING)!=0)
     		strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_h_countaccnm);
		else 
			strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_h_clientof);
	}
	else
			strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_h_countaccnm);

            		strcpy(l_ei_smi_pend_deal_struct_ha->h_clientof,chr_l_h_clientof);
           	 		l_ei_smi_pend_deal_struct_ha->h_qty = l_h_quantity_a;
            		l_ei_smi_pend_deal_struct_ha->h_net_setlval = chr_l_h_amount;
            		l_ei_smi_pend_deal_struct_ha->h_grs_setlval = l_h_brokercomm;
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_trans_status_ind,"A");
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_req_class,"N");
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_reject_reason,APL_NULL_STRING);
            		strcpy(l_ei_smi_pend_deal_struct_ha->h_access_stamp,chr_l_current_date_time);

						

						l_ei_smi_pend_deal_struct_ha->h_subfailreas_cd = int_l_h_subfailcode;
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_commonindentity_no,chr_l_h_comm_ref_no);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_maker,chr_l_h_maker);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_maker_dt,chr_l_h_makerdt);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_checker,p_intl_env_data_struct_h->usr);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_checker_dt,chr_l_current_date_time);
                  strcpy(l_ei_smi_pend_deal_struct_ha->h_confdate,chr_l_h_conf_dt);


            		EXEC SQL INSERT INTO DL_SMI_PENDTXN 
                     	VALUES (:l_ei_smi_pend_deal_struct_ha:l_ei_smi_pend_deal_struct_ia);
            		IS_ANY_ORA_ERROR;
					}
			}

 
		}
      else if ( !strcmp(chr_l_h_trade_status, STATUS_DEL_UAUTH) ||
                !strcmp(chr_l_h_trade_status, STATUS_SMI_DELAUTH) ||
                !strcmp(chr_l_h_trade_status, STATUS_SMI_DELUAUTH) )
		{
			EXEC SQL SELECT 	VAL_FDT, 
									QTY,
									AMOUNT,
									ORIG_REFNO,
									CURRENCY_CD,
									MSG_STAT
			INTO				 :chr_l_h_confdt:l_i_confdt,
								 :l_h_quantity_a:int_l_i_qty,
								 :l_h_amount:l_i_amt,
								 :chr_l_h_origrefno:l_i_origrefno,
								 :chr_l_h_ccy:l_i_ccy,
								 :chr_l_h_msg_status:l_i_msg_status
			FROM	DL_DEAL
			WHERE	ROWID = :p_ora_rowid;	

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																p_dl_deal_oth_struct_h_a->h_dl_client,
																p_dl_deal_oth_struct_h_a->h_indentity_no,
																APL_NULL_STRING);

			if ( strlen(chr_l_h_confdt) )
			{
				if ( !strcmp(p_dl_deal_oth_struct_h_a->h_indentity_no, chr_l_h_origrefno) ) 
							
				{

					EXEC SQL SELECT DEC_LEN 
					INTO :int_l_h_decimallen:l_i_decimallen
					FROM	DL_CURRENCY
					WHERE CURRENCY_CD = :chr_l_h_ccy;

					IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_CCY_NOTFND,
																		"Currency",
																		APL_NULL_STRING,
																		APL_NULL_STRING );

					EXEC SQL SELECT IDENTIY_NO INTO :chr_l_h_childrefno 
							FROM DL_DEAL 
							WHERE CLIENT   = :p_dl_deal_oth_struct_h_a->h_dl_client
							AND   ORIG_REFNO = :p_dl_deal_oth_struct_h_a->h_indentity_no 
							AND   DATEOF_INPUT   = (SELECT MAX(DATEOF_INPUT) FROM DL_DEAL 
													WHERE CLIENT = :p_dl_deal_oth_struct_h_a->h_dl_client 
													AND ORIG_REFNO = :p_dl_deal_oth_struct_h_a->h_indentity_no);

					IS_ANY_ORA_ERROR;


					EXEC SQL UPDATE DL_DEAL
						   SET   ORIG_REFNO    = :chr_l_h_childrefno,
								   ORIG_AMOUNT      = round( ORIG_AMOUNT - :l_h_amount, :int_l_h_decimallen),
								   ORIG_QTY      = (ORIG_QTY - :l_h_quantity_a),
						 			ACCESS_STAMP = :chr_l_current_date_time,
									CLIENT_NOTE		 = :p_dl_deal_oth_struct_h_a->h_custinfo
							WHERE CLIENT      = :p_dl_deal_oth_struct_h_a->h_dl_client
							AND   ORIG_REFNO    = :p_dl_deal_oth_struct_h_a->h_indentity_no;

					IS_ANY_ORA_ERROR;
				}
				else 
				{
					EXEC SQL SELECT DEC_LEN 
					INTO :int_l_h_decimallen:l_i_decimallen
					FROM	DL_CURRENCY
					WHERE CURRENCY_CD = :chr_l_h_ccy;

					IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_CCY_NOTFND,
																		"Currency",
																		APL_NULL_STRING,
																		APL_NULL_STRING );

					EXEC SQL SELECT QTY, AMOUNT, ORIG_REFNO INTO :l_h_quantity_a, :l_h_amount, :chr_l_h_parentrefno
							FROM DL_DEAL
							WHERE ROWID = :p_ora_rowid;

					IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																		p_dl_deal_oth_struct_h_a->h_dl_client,
																		p_dl_deal_oth_struct_h_a->h_indentity_no,
																		APL_NULL_STRING);



					EXEC SQL UPDATE DL_DEAL
							SET   ORIG_AMOUNT      = round( ORIG_AMOUNT - :l_h_amount, :int_l_h_decimallen), 
								   ORIG_QTY      = (ORIG_QTY - :l_h_quantity_a),
									CLIENT_NOTE		 = :p_dl_deal_oth_struct_h_a->h_custinfo,
						 			ACCESS_STAMP = :chr_l_current_date_time
							WHERE CLIENT      = :p_dl_deal_oth_struct_h_a->h_dl_client 
							AND   ORIG_REFNO    = :chr_l_h_parentrefno; 

					IS_ANY_ORA_ERROR;
				}
			}

			strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
			strcpy(chr_l_upd_trade_status, STATUS_DEL_AUTH);

			EXEC SQL UPDATE DL_DEAL 
						SET   CHECKER      = :p_intl_env_data_struct_h->usr,
							   CHECKER_DT    = :chr_l_current_date_time,
							   DEAL_STAT = :chr_l_upd_trade_status,
								CLIENT_NOTE		 = :p_dl_deal_oth_struct_h_a->h_custinfo,
						   	ACCESS_STAMP = :chr_l_current_date_time
						WHERE ROWID        = :p_ora_rowid;
				
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																p_dl_deal_oth_struct_h_a->h_dl_client,
																p_dl_deal_oth_struct_h_a->h_indentity_no,
																APL_NULL_STRING);
			
			if ((g_mt_commonsys_params_struct_h.ccs_ind[0] != 'Y') && (strstr(chr_l_h_msg_status,"O")>0))
			{
         	
         	if ( APL_FAILURE ==  DL_Mod_CCSPendDL(p_dl_deal_oth_struct_h_a->h_dl_client,
                                          p_dl_deal_oth_struct_h_a->h_indentity_no,
                                          MS_CCS_XD,
                                          APL_NULL_STRING,
                                          APL_NULL_STRING,
                                          APL_NULL_STRING,
                                          &l_debug_info_ptr) )
         	{
            	APL_GOBACK_FAIL
         	}
			}
			else
			{
         	if (  DL_Mod_CCSPendDL(p_dl_deal_oth_struct_h_a->h_dl_client,
                           	p_dl_deal_oth_struct_h_a->h_indentity_no,
                           	MS_CCS_CN,
										APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                           	l_debug_info_ptr) == APL_FAILURE  )
         	{
               CO_ProcMonitor(APL_OUT_FILE,"Failure from DbUpdCCSPendTxnFn", NULL, p_intl_env_data_struct_h);
               APL_GOBACK_FAIL;
         	}
			}
			
				

			strcpy(chr_mainfuncarea, APL_NULL_STRING);
			strcpy(chr_l_condid, APL_NULL_STRING);
			strcpy(chr_mainfuncarea, "TRDAUTH_OF_DELETE");
			strcpy(chr_l_condid, "UBLCKDT_UPDATE");

			if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea, 
																chr_l_condid, 
																&int_l_condexists_A, 
																l_debug_info_ptr ) )
			{
				if ( int_l_condexists_A > 0 )
				{	
					EXEC SQL SELECT BLOCK INTO :chr_l_h_blocking:l_i_blocking
								FROM   DL_LOCALREPDEALTYPE
								WHERE  DEAL_CLASS = ( SELECT LR_DL_CLASS 
															FROM DL_DEAL
															WHERE ROWID = :p_ora_rowid );
													
					IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_VAL_NF, 
																		"Blocking",
																		APL_NULL_STRING,
																		APL_NULL_STRING );

					if ( chr_l_h_blocking[0] == 'T' )
					{
						if ( APL_FAILURE == CO_RtvSysDt( 	chr_l_sys_date,
																			l_debug_info_ptr) )	
						{
							APL_GOBACK_FAIL;
						}
						else
						{
							EXEC SQL UPDATE DL_DEAL 
										SET    UNBLK_DATE = :chr_l_sys_date
										WHERE  rowid = :p_ora_rowid;
							IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																				p_dl_deal_oth_struct_h_a->h_dl_client,
																				p_dl_deal_oth_struct_h_a->h_indentity_no,
																				APL_NULL_STRING);

						}
					}
				}	
			}
			else
			{
				APL_GOBACK_FAIL;
			}
	
		}
	}				

	
	
	if ( !strcmp(p_intl_env_data_struct_h->h_mode, ALERT_MODE) )
	{
		 EXEC SQL SELECT  DEAL_CD,
                        QTY,
								VAL_FDT,
                        LOCATION_CD,
								INSTR_CODE,
								STATUS_POS
               INTO  :chr_l_h_oldtrcode:l_i_oldtrcode,
                     :l_h_quantity_a:int_l_i_qty,
							:chr_l_h_confdt:l_i_confdt,
                     :chr_l_h_trd_locn:l_i_trd_locn,
							:chr_l_h_instrcode_A:l_i_instr_code,
							:chr_l_h_posn_status:l_i_posn_status
           FROM DL_DEAL
           WHERE ROWID = :p_ora_rowid;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
                                             p_dl_deal_oth_struct_h_a->h_dl_client,
                                             p_dl_deal_oth_struct_h_a->h_indentity_no,
                                             APL_NULL_STRING);
					if(CA_Rtv_Block_Type(  p_dl_deal_oth_struct_h_a->h_indentity_no,
								chr_l_h_typeoftrd,
								chr_l_h_oldtrcode,
								l_block_type,
								l_debug_info_ptr) == APL_FAILURE)
					{
							APL_GOBACK_FAIL
					}

			if (((!strcmp(chr_l_h_oldtrcode,"1")) || (!strcmp(chr_l_h_oldtrcode,"3")) || (!strcmp(chr_l_h_oldtrcode,"5")) || (!strcmp(chr_l_h_oldtrcode,"7")))
				&& ((!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"2")) || (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"4")) || (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"6")) || (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"8"))))
			{
				if (!strcmp(chr_l_h_confdt,APL_NULL_STRING))
				{
					if ( APL_FAILURE == DL_Mod_Posn(p_dl_deal_oth_struct_h_a->h_dl_client,
        	                                  		 chr_l_h_instrcode_A,
                                          		 chr_l_h_trd_locn,
                                          		 chr_l_h_posn_status,
                                          		 'U',
                                          	p_dl_deal_oth_struct_h_a->h_dealcd[0],
                                          		 &l_h_quantity_a,
                                          		 'I',l_block_type,
                                          		 l_debug_info_ptr ) )
      			{
         			APL_GOBACK_FAIL;
      			}
		
					if ( APL_FAILURE == DL_Mod_Posn(p_dl_deal_oth_struct_h_a->h_dl_client,
                                                 chr_l_h_instrcode_A,
                                                 chr_l_h_trd_locn,
                                                 chr_l_h_posn_status,
                                                 'U',
                                            		 chr_l_h_oldtrcode[0], 
                                                 &l_h_quantity_a,
                                                 'D',l_block_type,
                                                 l_debug_info_ptr ) )
               {
                  APL_GOBACK_FAIL;
               }
				}	
				else
				{
					if ( APL_FAILURE == DL_Mod_Posn(p_dl_deal_oth_struct_h_a->h_dl_client,
                                                 chr_l_h_instrcode_A,
                                                 chr_l_h_trd_locn,
                                                 chr_l_h_posn_status,
                                                 'C',
                                               p_dl_deal_oth_struct_h_a->h_dealcd[0],
                                                 &l_h_quantity_a,
                                                 'I',l_block_type,
                                                 l_debug_info_ptr ) )
               {
                  APL_GOBACK_FAIL;
               }
					
					if ( APL_FAILURE == DL_Mod_Posn(p_dl_deal_oth_struct_h_a->h_dl_client,
                                                 chr_l_h_instrcode_A,
                                                 chr_l_h_trd_locn,
                                                 chr_l_h_posn_status,
                                                 'C',
                                              	 chr_l_h_oldtrcode[0], 
                                                 &l_h_quantity_a,
                                                 'D',l_block_type,
                                                 l_debug_info_ptr ) )
               {
                  APL_GOBACK_FAIL;
               }
				}
			}

			if (((!strcmp(chr_l_h_oldtrcode,"2")) || (!strcmp(chr_l_h_oldtrcode,"4")) || (!strcmp(chr_l_h_oldtrcode,"6")) || (!strcmp(chr_l_h_oldtrcode,"8")))
				&& ((!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"1")) || (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"3")) || (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"5")) || (!strcmp(p_dl_deal_oth_struct_h_a->h_dealcd,"7"))))
 			{
       		if (!strcmp(chr_l_h_confdt,APL_NULL_STRING))
            {
               if ( APL_FAILURE == DL_Mod_Posn(p_dl_deal_oth_struct_h_a->h_dl_client,
                                                 chr_l_h_instrcode_A,
                                                 chr_l_h_trd_locn,
                                                 chr_l_h_posn_status,
                                                 'U',
                                               p_dl_deal_oth_struct_h_a->h_dealcd[0],
                                                 &l_h_quantity_a,
                                                 'I',l_block_type,
                                                  l_debug_info_ptr ) )
               {
                  APL_GOBACK_FAIL;
               }

					if ( APL_FAILURE == DL_Mod_Posn(p_dl_deal_oth_struct_h_a->h_dl_client,
                                                 chr_l_h_instrcode_A,
                                                 chr_l_h_trd_locn,
                                                 chr_l_h_posn_status,
                                                 'U',
                                              	 chr_l_h_oldtrcode[0], 
                                                 &l_h_quantity_a,
                                                 'D',l_block_type,
                                                  l_debug_info_ptr ) )
               {
                  APL_GOBACK_FAIL;
               }

				}
	 			else
				{
             	if ( APL_FAILURE == DL_Mod_Posn(  p_dl_deal_oth_struct_h_a->h_dl_client,
                                                chr_l_h_instrcode_A,
                                                chr_l_h_trd_locn,
                                                chr_l_h_posn_status,
                                                'C',
                                               p_dl_deal_oth_struct_h_a->h_dealcd[0],
                                                 &l_h_quantity_a,
                                                 'I',l_block_type,
                                                 l_debug_info_ptr ) )
             	{
             		APL_GOBACK_FAIL;
             	}
			
				if ( APL_FAILURE == DL_Mod_Posn(p_dl_deal_oth_struct_h_a->h_dl_client,
                                                 chr_l_h_instrcode_A,
                                                 chr_l_h_trd_locn,
                                                 chr_l_h_posn_status,
                                                 'C',
                                                 chr_l_h_oldtrcode[0],
                                                 &l_h_quantity_a,
                                                 'D',l_block_type,
                                                  l_debug_info_ptr ) )
               {
                  APL_GOBACK_FAIL;
               }
				}
			}
		
         
	
		EXEC SQL UPDATE DL_DEAL 
					SET   LCL_IDENTNO     = :p_dl_deal_oth_struct_h_a->h_locindentity_no,
						   BRK_NO     = :p_dl_deal_oth_struct_h_a->h_brkrno,
					   	ACCESS_STAMP = :chr_l_current_date_time,
							DEAL_CD		 = :p_dl_deal_oth_struct_h_a->h_dealcd,
							DEAL_DATE			 = :p_dl_deal_oth_struct_h_a->h_dlt,
							SETL_DATE		 = :p_dl_deal_oth_struct_h_a->h_setldt,
							DL_CLASS	 = :p_dl_deal_oth_struct_h_a->h_classofdl,
							LR_DL_CLASS	 = :p_dl_deal_oth_struct_h_a->h_lrdltype,
							AMOUNT		 = :p_dl_deal_oth_struct_h_a->h_amt,
							COST			 = :p_dl_deal_oth_struct_h_a->h_pr,
							DOMESTIC_CPCLT		 = :p_dl_deal_oth_struct_h_a->h_domcpclt_cd
					WHERE ROWID        = :p_ora_rowid;	

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);

	}

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, PMR_MODE))
	{

		memset(chr_exch_code, APL_NULL_CHAR,4);

                /* Query changed by Gosue -- selected clh flg -- STARTED*/
               
		EXEC SQL SELECT 	VAL_FDT, 
								QTY, 
								ORIG_REFNO, 
								AMOUNT, 
								CURRENCY_CD,
								LOCATION_CD,
								DEAL_FRM_ORD,
								client,
								IDENTIY_NO,
								exch_code,
								INFO1,
								CLH_FLG,
				DEAL_STAT, /*Retro from ICICI of IB_5647 - 25062012 -Vilin */
				/*Added by Prateek Singh on 07072015 for ISKB_1493(Lien Release on Prematch Reset)-START*/
				to_char(DEAL_DATE,'dd/mm/yyyy'),
				DEAL_CD,
				DL_CLASS,
				SETTLEMENT_NO,
				EX_ARENA,
				NET_AMT
				/*Added by Prateek Singh on 07072015 for ISKB_1493(Lien Release on Prematch Reset)-END*/
					INTO 	:chr_l_h_confdt:l_i_confdt,
							:l_h_quantity_a:int_l_i_qty,
							:chr_l_h_origrefno:l_i_origrefno,
							:l_h_amount:l_i_amt,
							:chr_l_h_ccy:l_i_ccy,
							:chr_l_h_trd_locn:l_i_trd_locn,
							:chr_l_h_trdfromord:l_i_trdfromord,
							:chr_l_548_client:i_548_account,
							:chr_l_548_refno:i_548_refno,
							:chr_exch_code:i_exch_code,
							:chr_l_h_note1:l_i_note1,
						        :l_clh_flg:i_clh_flg,
				:l_deal_stat:i_deal_stat, /*Retro from ICICI of IB_5647 - 25062012 -Vilin */		
				/*Added by Prateek Singh on 07072015 for ISKB_1493(Lien Release on Prematch Reset)-START*/
				:chr_l_deal_date,
				:l_deal_cd,
				:l_deal_class,
				:chr_settl_no :i_chr_settl_no,  /* Indicator variable Added On 27072015 For PMS Prematch Reset Sanity - Priyanka B. */
				:chr_ex_arena,
				:l_deal_net_amt
				/*Added by Prateek Singh on 07072015 for ISKB_1493(Lien Release on Prematch Reset)-END*/
			  FROM DL_DEAL
			  WHERE ROWID = :p_ora_rowid;
                /* Query chgd by Gouse -- selected clh flg -- END*/
		
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_oth_struct_h_a->h_dl_client,
															p_dl_deal_oth_struct_h_a->h_indentity_no,
															APL_NULL_STRING);
															
			/*Added by Prateek Singh on 07072015 for ISKB_1493(Lien Release on Prematch Reset)-START*/
			IF_COND_EXISTS("RESET","LIEN_RL_ON_RESET")
				{
					EXEC SQL SELECT COUNT(*) 
						INTO : l_count_dl_lien 
						FROM DL_LIEN 
						WHERE CLIENT =:p_dl_deal_oth_struct_h_a->h_dl_client
						AND REF_NO = :p_dl_deal_oth_struct_h_a->h_indentity_no 
						AND STATUS IN ('IN','MI');

						printf("Sqlcode after checking the count in DL_LIEN Table is [%d]",sqlca.sqlcode);
						IS_ANY_ORA_ERROR;

						if (l_count_dl_lien >0)
						{
							if(l_deal_cd == 4 && l_deal_class == 1 && strcmp(l_clh_flg,"D") == 0 && strcmp(chr_ex_arena,"1") ==0)
								{
									printf("\n Lien Marking Present for deal\n");
									memset(p_lien_release,APL_NULL_CHAR,sizeof(p_lien_release));
									sprintf(p_lien_release,"%sLienMarkReq.ksh %s %s %s %s %s %s %lf %s",chr_tempchar,p_dl_deal_oth_struct_h_a->h_dl_client, p_dl_deal_oth_struct_h_a->h_indentity_no, chr_l_deal_date, chr_settl_no, chr_exch_code, chr_payout_typ,l_deal_net_amt,g_combined_param);
									printf("\n p_lien_release :[%s]",p_lien_release);
									sys_retval=system(p_lien_release);
									printf("\n sys_retval :[%d]",sys_retval);

									if(sys_retval == 0)
									{
										printf("\n LienMarkReq.ksh Executed Successfully");
										time(&hvPrcStrtTime);
										sleep(hvSleepTime);
										while(1==1)
										{
											hv_seconds = 0.0;
											hvFailRec = 0;
											time(&hvPrcEndTime);
											hv_seconds = difftime(hvPrcEndTime,hvPrcStrtTime);
											printf("\n hv_seconds is [%lf]",hv_seconds);
											if(hv_seconds < hvTimeOut)
											{
												EXEC SQL select count(*) into :hvCount1 from dl_lien_his 
													where client= :p_dl_deal_oth_struct_h_a->h_dl_client
													AND REF_NO = :p_dl_deal_oth_struct_h_a->h_indentity_no 
													and status = 'RL';
												IS_ANY_ORA_ERROR
								
												if (hvCount1 > 0)
													{
													printf("\n Lien Release successful..");
													printf("\n Lien Relese Successful..Proceeding for Reset Mapping/Matching");
													sprintf(chr_l_buf,"\n LIEN RELEASED FOR CLIENT |%s| and REFERENCE |%s| SUCCESSFULLY",p_dl_deal_oth_struct_h_a->h_dl_client,p_dl_deal_oth_struct_h_a->h_indentity_no);
													CO_ProcMonitor(APL_OUT_FILE,chr_l_buf, l_debug_info_ptr, NULL);
													strcpy(error,"SUCCESS");
													printf("\n Error is [%s]",error);
													break;
													}
													else
													{
														Alert("\n Debug ::: Status Update yet pending .. going for sleep");
														sleep(hvSleepTime);
														continue;
													}
												}
												else  
												{
													memset(error,NULL,sizeof(error));
													memset(chr_err_desc,NULL,sizeof(chr_err_desc));
													strcpy(error,"TIMEOUT");
													printf("\n Error is [%s]",error);

													EXEC SQL SELECT ERR_DESC INTO :chr_err_desc FROM DL_LIEN 
													WHERE CLIENT = :p_dl_deal_oth_struct_h_a->h_dl_client
													AND REF_NO = :p_dl_deal_oth_struct_h_a->h_indentity_no 
													AND STATUS IN ('IN','MI','RF');

													Alert("sqlcode.sqlcode = |%d|",sqlca.sqlcode);
													sprintf(chr_l_buf,"\n LIEN RELEASE FAILED FOR CLIENT |%s| and REFERENCE |%s| REASON |%s|",p_dl_deal_oth_struct_h_a->h_dl_client,p_dl_deal_oth_struct_h_a->h_indentity_no,chr_err_desc);
													CO_ProcMonitor(APL_OUT_FILE,chr_l_buf, l_debug_info_ptr, NULL);
													
													break;
												}

											}
										}
										else
										{
											printf("\n LienMarkReq.ksh Executed UnSuccessfully");
											APL_GOBACK_FAIL;
										} 
									}
									else
									{
										memset(error,NULL,sizeof(error));
										strcpy(error,"SUCCESS");
									}
							
						}

				}
	if(!strcmp(error,APL_NULL_STRING) || !strcmp(error,"SUCCESS") )
	{
	/*Added by Prateek Singh on 07072015 for ISKB_1493(Lien Release on Prematch Reset)-END*/

	/*Retro from ICICI of IB_5647 - 25062012 -Vilin-Start*/
	if(strcmp(l_deal_stat,STATUS_CONF))
	{
		 CO_InsertErr(   l_debug_info_ptr,
		 DEAL_NOT_IN_PROPER_STATUS, 
		  p_dl_deal_oth_struct_h_a->h_dl_client,
		  p_dl_deal_oth_struct_h_a->h_indentity_no,
		  APL_NULL_STRING,
		  __LINE__,
		   __FILE__ );
		APL_GOBACK_FAIL
	}
  /*Retro from ICICI of IB_5647 - 25062012 -Vilin-End*/

		

		if ( !strcmp(p_dl_deal_oth_struct_h_a->h_indentity_no, chr_l_h_origrefno) ||
			(chr_l_h_trdfromord[0] == 'Y')) 
		{

			if (g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y')
			{

				if (p_intl_env_data_struct_h->h_process[0] == 'A')
				{
				 EXEC SQL UPDATE DL_DEAL
               SET   COMM_IDENT_NO = NULL,
                     BROKERCOMM = 0,
                     FAILREASON_CD = NULL,
							SUB_FAIL_CD = NULL,
							EXP_SETLDATE = NULL,
							VERFIED_WITH = NULL
               WHERE ROWID = :p_ora_rowid;  
				}
				else if (p_intl_env_data_struct_h->h_process[0] == 'B')
				{
				 strncpy(chr_temp_str,chr_l_h_note1,130);
				 chr_temp_str[strlen(chr_temp_str)] = '\0';

				 EXEC SQL UPDATE DL_DEAL
               SET   COMM_IDENT_NO = NULL,
                     BROKERCOMM = 0,
                     FAILREASON_CD = NULL,
							SUB_FAIL_CD = NULL,
							EXP_SETLDATE = NULL,
							VERFIED_WITH = NULL,
							INFO1 = :chr_temp_str
               WHERE ROWID = :p_ora_rowid;  
				}
			}
			strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
			/** off market deal - AA, else RC**/
			if(strcmp(chr_exch_code,APL_NULL_STRING)==0)
			{
				strcpy(chr_l_upd_trade_status, STATUS_AUTH);
			}
			else
			{
				printf("\n Entered in On-Market Reset");
				fflush(stdout);
				//strcpy(chr_l_upd_trade_status, "RC");

                /* Changed by Gouse  -- START*/
                if ( strcmp(l_clh_flg,"C") == 0)
					strcpy(chr_l_upd_trade_status, "PM");
			   else if( strcmp(l_clh_flg,"D") == 0)
				    strcpy(chr_l_upd_trade_status, "RC");

				printf("\n chr_l_upd_trade_status:[%s]",chr_l_upd_trade_status);
				fflush(stdout);
				printf("\n hvTimeOut:[%d]",hvTimeOut);
				fflush(stdout);
                /* Changed by Gouse  -- END*/
			}
			   
        		if (APL_FAILURE == CO_Chk_CntryEnabled(   "TRADE_MAINT",
                       		         "TRD_BOGTXNCODE",
               		                 &int_l_flag,
                       		         l_debug_info_ptr ))
        		{
                		APL_GOBACK_FAIL
        		}

        		if (int_l_flag)
				{
					l_flag1 = 0;
					if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT_RST",
																		"RST_GROSSAMT_CSD",
																		&l_flag1,
																		l_debug_info_ptr ))
					{
						APL_GOBACK_FAIL
				   }
					EXEC SQL SELECT FIELD_VAL INTO :chr_l_h_locn_csd:l_i_locn_csd
					FROM PRO_GSSPLVAL
					WHERE MAIN_FUN = 'TRADE_MAINT'
					AND   SUB_PROCESS       = 'GROSS_AMT_LOCATION'
					AND   NATION        = :g_mt_commonsys_params_struct_h.nation_code
					AND   FIELD_VAL		=	:chr_l_h_trd_locn;

					IS_ANY_ORA_ERROR
					if ((l_flag1)&&(!strcmp(chr_l_h_trd_locn,chr_l_h_locn_csd)))
					{              
					EXEC SQL UPDATE DL_DEAL
					SET 	VAL_FDT = NULL,
							VERFIED_WITH = NULL,
							AMT_DIFFER = NULL,
							EXP_SETLDATE = NULL,
							BROKERCOMM = 0,
							DEAL_STAT = :chr_l_upd_trade_status, 
                     ACCESS_STAMP = :chr_l_current_date_time,
                     FAILREASON_CD = NULL,
                     SUB_FAIL_CD = NULL
					WHERE ROWID = :p_ora_rowid;  

					IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																		p_dl_deal_oth_struct_h_a->h_dl_client,
																		p_dl_deal_oth_struct_h_a->h_indentity_no,
																		APL_NULL_STRING);
					}
					else
					{
					EXEC SQL UPDATE DL_DEAL
					SET   VAL_FDT = NULL,
							VERFIED_WITH = NULL,
							EXP_SETLDATE = NULL,
							AMT_DIFFER = NULL,
					DEAL_STAT = :chr_l_upd_trade_status,
               ACCESS_STAMP = :chr_l_current_date_time,
               FAILREASON_CD = NULL,
               SUB_FAIL_CD = NULL
					WHERE ROWID = :p_ora_rowid;

					IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																		p_dl_deal_oth_struct_h_a->h_dl_client,
																		p_dl_deal_oth_struct_h_a->h_indentity_no,
																		APL_NULL_STRING);
					}
				}
			else
				{       
               l_flag1 = 0;
               if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT_RST",
                                                      "RST_BRKNO_NO",
                                                      &l_flag1,
                                                      l_debug_info_ptr ))
               {
                  APL_GOBACK_FAIL
               }

               if(l_flag1)
               {  
                EXEC SQL UPDATE DL_DEAL
                  SET     VAL_FDT = NULL,
                    VERFIED_WITH = NULL,
                                     AMT_DIFFER = NULL,
							EXP_SETLDATE = NULL,
                    DEAL_STAT = :chr_l_upd_trade_status,
                    ACCESS_STAMP = :chr_l_current_date_time
                    WHERE ROWID = :p_ora_rowid;


                  IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
                                                   p_dl_deal_oth_struct_h_a->h_dl_client,
                                                   p_dl_deal_oth_struct_h_a->h_indentity_no,
                                                   APL_NULL_STRING);
               }
               else
               {	
					//Modified By Aakash for IOP-2 CS0028550 starts..
					if ( strcmp(l_clh_flg,"C") == 0)
					{					
						EXEC SQL UPDATE DL_DEAL
						SET     VAL_FDT = NULL,
						VERFIED_WITH = NULL,
						EXP_SETLDATE = NULL,
						BRK_NO = NULL,
						CP_AMT = 0,
						DEAL_STAT = :chr_l_upd_trade_status,
						ACCESS_STAMP = :chr_l_current_date_time
						WHERE ROWID = :p_ora_rowid;

					}
					else
					{
						EXEC SQL UPDATE DL_DEAL
						SET     VAL_FDT = NULL,
						VERFIED_WITH = NULL,
						AMT_DIFFER = 0,  
						EXP_SETLDATE = NULL,
						BRK_NO = NULL,
						CP_AMT = 0,
						DEAL_STAT = :chr_l_upd_trade_status,
						ACCESS_STAMP = :chr_l_current_date_time
						WHERE ROWID = :p_ora_rowid;
						
					}
					//Modified By Aakash for IOP-2 CS0028550 ends..
                  IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
                                                   p_dl_deal_oth_struct_h_a->h_dl_client,
                                                   p_dl_deal_oth_struct_h_a->h_indentity_no,
                                                   APL_NULL_STRING);
               }
			   /*ISKB_2095: DELTE DATA FROM DL_DPGEN_DET TABLE --> START */
		          EXEC SQL DELETE FROM DL_DPGEN_DET 
			      WHERE DL_CLIENT =:p_dl_deal_oth_struct_h_a->h_dl_client
				  AND DL_REF_NO =:p_dl_deal_oth_struct_h_a->h_indentity_no;
				  IS_ANY_ORA_ERROR;
			   /*ISKB_2095: DELTE DATA FROM DL_DPGEN_DET TABLE --> END */
				}
		}
		else 
		{
			EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_h_nochildrec 
					FROM 	DL_DEAL
					WHERE	CLIENT   = :p_dl_deal_oth_struct_h_a->h_dl_client
					AND 	ORIG_REFNO = :chr_l_h_origrefno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																p_dl_deal_oth_struct_h_a->h_dl_client,
																p_dl_deal_oth_struct_h_a->h_indentity_no,
																APL_NULL_STRING);

			
			if (int_l_h_nochildrec > 2)                               
			{
				chr_l_h_ispartial[0] = 'Y';
				chr_l_h_ispartial[1] = '\0';
			}
			else
			{
				chr_l_h_ispartial[0] = 'N';
				chr_l_h_ispartial[1] = '\0';
			}
							
				
			EXEC SQL SELECT DEC_LEN 
				INTO :int_l_h_decimallen:l_i_decimallen
				FROM	DL_CURRENCY
				WHERE CURRENCY_CD = :chr_l_h_ccy;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_CCY_NOTFND,
																"Currency",
																APL_NULL_STRING,
																APL_NULL_STRING );


			EXEC SQL UPDATE DL_DEAL
					SET   AMOUNT		 = round( AMOUNT + :l_h_amount, :int_l_h_decimallen),
	  					   QTY			 = ( QTY + :l_h_quantity_a),
							PARTIAL_IND_B	 = :chr_l_h_ispartial,
				 			ACCESS_STAMP = :chr_l_current_date_time
					WHERE CLIENT      = :p_dl_deal_oth_struct_h_a->h_dl_client 
					AND   IDENTIY_NO        = :chr_l_h_origrefno; 

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																p_dl_deal_oth_struct_h_a->h_dl_client,
																p_dl_deal_oth_struct_h_a->h_indentity_no,
																APL_NULL_STRING);

			strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
			strcpy(chr_l_upd_trade_status, STATUS_DEL_AUTH);

			 
			EXEC SQL UPDATE DL_DEAL 
						SET   CHECKER      = :p_intl_env_data_struct_h->usr,
							   CHECKER_DT    = :chr_l_current_date_time,
								CP_AMT		 = 0,
							EXP_SETLDATE = NULL,
							   DEAL_STAT = :chr_l_upd_trade_status,
						   	ACCESS_STAMP = :chr_l_current_date_time
						WHERE ROWID 		 = :p_ora_rowid;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																p_dl_deal_oth_struct_h_a->h_dl_client,
																p_dl_deal_oth_struct_h_a->h_indentity_no,
																APL_NULL_STRING);
		}
	} //Bracket Added by Prateek for ISKB_1493(Lien Release on Prematch Reset)
	}

if (!strcmp(p_intl_env_data_struct_h->h_mode,APL_FUNC_APPROVE))
{
	

	            EXEC SQL SELECT DEAL_STAT,
                     DEAL_CD,
                     DL_CLASS,
                     EX_ARENA,
                     DEAL_DATE,
                     SETL_DATE,
                     LOCATION_CD,
                     INSTR_CODE,
                     CURRENCY_CD,
                     DOMESTIC_CPCLT,
                     CP_CLT,
                     REPLACE(REPLACE(INFO1,CHR(34),' '),CHR(39),' '),
                     FAILREASON_CD,
                     REPLACE(REPLACE(FAIL_DET,CHR(34),' '),CHR(39),' '),
                     REPLACE(REPLACE(VERFIED_WITH,CHR(34),' '),CHR(39),' '),
                     REPLACE(REPLACE(CLIENTOF,CHR(34),' '),CHR(39),' '),
                     REPLACE(REPLACE(CP_CLTNAME,CHR(34),' '),CHR(39),' '),
                     QTY,
                     AMOUNT,
                     BROKERCOMM,
                     LOC_CHNG_IND,
                     SUB_FAIL_CD,
							REPLACE(REPLACE(COMM_IDENT_NO,CHR(34),' '),CHR(39),' '),
                     VAL_FDT,
                     MAKER,
                     MAKER_DT,
							CLIENTOF_CD
               INTO  :chr_l_h_trade_status:l_i_trade_status,
                     :chr_l_h_trcode_a:int_l_i_trcode,
                     :chr_l_h_typeoftrd:l_i_typeoftrd,
                     :chr_l_h_exarena:l_i_exarena,
                     :chr_l_h_trdt_a:l_i_trdt,
                     :chr_l_h_settledt_a:l_i_settledt,
                     :chr_l_h_locncode_a:l_i_locncode,
                     :chr_l_h_instrcode_A:l_i_instr_code,
                     :chr_l_h_ccycode:l_i_ccycode,
                     :chr_l_h_domcpac:l_i_domcpac,
                     :chr_l_h_countacc_a:l_i_countacc,
                     :chr_l_h_note1:l_i_note1,
                     :int_l_h_failcode:l_i_failcode,
                     :chr_l_h_failnote:l_i_failnote,
                     :chr_l_h_verwith:l_i_verwith,
                     :chr_l_h_clientof:l_i_accountof,
                     :chr_l_h_countaccnm:l_i_countaccnm,
                     :l_h_quantity_a:int_l_i_qty,
                     :chr_l_h_amount:l_i_amount,
                     :l_h_brokercomm:l_i_brkcomm,
                     :chr_l_h_locnchng_flg:l_i_locnchng_flg,
                     :int_l_h_subfailcode:l_i_subfailcode,
                     :chr_l_h_comm_ref_no:l_i_comm_ref_no,
                     :chr_l_h_conf_dt:l_i_conf_dt,
                     :chr_l_h_maker:l_i_maker,
                     :chr_l_h_makerdt:l_i_makerdt,
							:chr_l_h_clientofcode:l_i_accountofcode
               FROM  DL_DEAL 
               WHERE rowid = :p_ora_rowid;

IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
                                      p_dl_deal_oth_struct_h_a->h_dl_client,
                                      p_dl_deal_oth_struct_h_a->h_indentity_no,
                                      APL_NULL_STRING);
	
			
		if(strcmp(chr_l_h_trade_status,APL_STATUS_SMIUNAUTH) == 0)
			{
				strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
      		strcpy(chr_l_upd_trade_status, APL_STATUS_SMIAUTH);
			}
		
		else if(strcmp(chr_l_h_trade_status,STATUS_SMI_DELUAUTH) == 0)
			{
			if(p_dl_deal_oth_struct_h_a->h_clt_reqdel_flag[0] == 'N')
				{
					strcpy(chr_l_upd_trade_status, APL_NULL_STRING);
					strcpy(chr_l_upd_trade_status, STATUS_AUTH);
				}
			else 
				{
					strcpy(chr_l_upd_trade_status, APL_NULL_STRING); 
      			strcpy(chr_l_upd_trade_status, STATUS_SMI_DELAUTH);
				}
			}

      EXEC SQL UPDATE DL_DEAL 
               SET    CHECKER      = :p_intl_env_data_struct_h->usr,
                      CHECKER_DT    = :chr_l_current_date_time,
                      DEAL_STAT = :chr_l_upd_trade_status,
                      ACCESS_STAMP = :chr_l_current_date_time
               WHERE  ROWID        = :p_ora_rowid;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,
                                            p_dl_deal_oth_struct_h_a->h_dl_client,
                                            p_dl_deal_oth_struct_h_a->h_indentity_no,
                                            APL_NULL_STRING);

		if(p_dl_deal_oth_struct_h_a->h_clt_reqdel_flag[0] != 'N')
		{
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_dl_client,p_dl_deal_oth_struct_h_a->h_dl_client);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_indentity_no,p_dl_deal_oth_struct_h_a->h_indentity_no);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_dealcd,chr_l_h_trcode_a);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_classofdl,chr_l_h_typeoftrd);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_ex_arena,chr_l_h_exarena);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_dlt,chr_l_h_trdt_a);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_setldt,chr_l_h_settledt_a);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_loccode,chr_l_h_locncode_a);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_instr_code,chr_l_h_instrcode_A);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_currencycode,chr_l_h_ccycode);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_domcpclt_cd,chr_l_h_domcpac);

			if (strcmp(chr_l_h_domcpac,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
			{
				if (strcmp(chr_l_h_countacc_a,APL_NULL_STRING) != 0)
         	{
         		
     		 		strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,chr_l_h_countacc_a,APL_CLIENT_LENGTH-1);
               strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0");
            }
				else 
					strcpy(l_ei_smi_pend_deal_struct_ha->h_countclt,chr_l_h_clientofcode);
			}
			else
         {
         
				strncpy(l_ei_smi_pend_deal_struct_ha->h_countclt,chr_l_h_countacc_a,APL_CLIENT_LENGTH-1);
            strcat(l_ei_smi_pend_deal_struct_ha->h_countclt,"\0");
         }

      	strcpy(l_ei_smi_pend_deal_struct_ha->h_info1,chr_l_h_note1);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_fail_cd,int_l_h_failcode);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_failinfo,chr_l_h_failnote);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_verfied_with,chr_l_h_verwith);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_deal_status,chr_l_upd_trade_status); 
if(strcmp(chr_l_h_domcpac,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
{
	if (strcmp(chr_l_h_countacc_a,APL_NULL_STRING) != 0)
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_h_countaccnm);
	else 
			strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_h_clientof);
}
else
	strcpy(l_ei_smi_pend_deal_struct_ha->h_countcltnm,chr_l_h_countaccnm);

      	strcpy(l_ei_smi_pend_deal_struct_ha->h_clientof,chr_l_h_clientof);
      	l_ei_smi_pend_deal_struct_ha->h_qty = l_h_quantity_a;
      	l_ei_smi_pend_deal_struct_ha->h_net_setlval = chr_l_h_amount;
      	l_ei_smi_pend_deal_struct_ha->h_grs_setlval = l_h_brokercomm;
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_trans_status_ind,"A");						

			if(strcmp(chr_l_h_trade_status,APL_STATUS_SMIUNAUTH) == 0)
				{
      			strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_req_class,"A");						
				}
			else if(strcmp(chr_l_h_trade_status,STATUS_SMI_DELUAUTH) == 0)
				{
      			strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_req_class,"C");						
				}

      	strcpy(l_ei_smi_pend_deal_struct_ha->h_smi_reject_reason,APL_NULL_STRING);
      	strcpy(l_ei_smi_pend_deal_struct_ha->h_access_stamp,chr_l_current_date_time);
			l_ei_smi_pend_deal_struct_ha->h_subfailreas_cd = int_l_h_subfailcode;
         strcpy(l_ei_smi_pend_deal_struct_ha->h_commonindentity_no,chr_l_h_comm_ref_no);
         strcpy(l_ei_smi_pend_deal_struct_ha->h_maker,chr_l_h_maker);
         strcpy(l_ei_smi_pend_deal_struct_ha->h_maker_dt,chr_l_h_makerdt);
         strcpy(l_ei_smi_pend_deal_struct_ha->h_checker,p_intl_env_data_struct_h->usr);
         strcpy(l_ei_smi_pend_deal_struct_ha->h_checker_dt,chr_l_current_date_time);
         strcpy(l_ei_smi_pend_deal_struct_ha->h_confdate,chr_l_h_conf_dt);


      	EXEC SQL INSERT INTO DL_SMI_PENDTXN VALUES (:l_ei_smi_pend_deal_struct_ha:l_ei_smi_pend_deal_struct_ia);

      	IS_ANY_ORA_ERROR;
		}
	}

	

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
		APL_FREE(l_sys_dl_deal_struct_hi);
      APL_FREE(l_sys_dl_deal_struct_ig);
      APL_FREE(l_ei_smi_pend_deal_struct_ha);
      APL_FREE(l_ei_smi_pend_deal_struct_ia);

		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE, 
							"Exiting DL_Mod_DLPos with success\n",
							NULL,
							NULL);
		}
		return(APL_SUCCESS);

	RETURN_FAILURE :
		APL_FREE(l_sys_dl_deal_struct_hi);
      APL_FREE(l_sys_dl_deal_struct_ig);
      APL_FREE(l_ei_smi_pend_deal_struct_ha);
      APL_FREE(l_ei_smi_pend_deal_struct_ia);

		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE, 
							"Exiting DL_Mod_DLPos with errors\n",
							NULL,
							NULL);
		}
		return(APL_FAILURE);

}




int DL_Mod_DLFailReas(	DL_DEAL_FAIL_STRUCT_H *p_dl_deal_fail_struct_h,
							INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,	
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{

	

	struct sqlca sqlca;	
	int int_l_error_flag = APL_SUCCESS;
	char		int_l_domcpac[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	char 		int_l_countacc[APL_COUNTACC_LEN] = APL_NULL_STRING;  
	char  	chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	char  	chr_l_locncode_c[APL_LOCNCODE_LENGTH] = APL_NULL_STRING;
	char 		chr_l_ccycode[APL_CCYCODE_LEN] = APL_NULL_STRING;
	char 		chr_l_be_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	char  	chr_l_rowid_A[APL_ROWID_LEN] = APL_NULL_STRING;
	char  	chr_l_now[APL_DATE_LEN] = APL_NULL_STRING;
	char  	chr_l_trdfromord[APL_FLAG_LENGTH] = APL_NULL_STRING;
	double	l_quantity = 0.0;
	char     chr_l_trade_status[APL_STATUS_LEN]       = APL_NULL_STRING;
	char		chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	short    l_flag1=0;
	short  	i_dlfromord = 0;

	int   int_p_smieligibility_flg = 0;
	//Commented for warnings removal as part of ISKB 1493 int	int_p_ccseligibility_flg = 0;
   char  chr_l_h_locncode_a[5]                        = APL_NULL_STRING;
   char  chr_l_h_trdt_a[20]                           = APL_NULL_STRING;
   char  chr_l_h_typeoftrd[3]                       = APL_NULL_STRING;
   char  chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN]             = APL_NULL_STRING;
   char  chr_l_h_locnchng_flg[2]                    = APL_NULL_STRING;
	short l_i_locncode = 0;
	short l_i_trdt = 0;
	short l_i_typeoftrd = 0;
	short l_i_instr_code = 0;
	short l_i_locnchng_flg = 0;
	//Commented for warnings removal as part of ISKB 1493 char chr_l_cubk_exttrd[2]	=	APL_NULL_STRING;
	//Commented for warnings removal as part of ISKB 1493 char chr_l_typeoftrd[3] = APL_NULL_STRING;
   
   char chr_h_old_failcode[3] = APL_NULL_STRING;
   int int_h_old_subfailcode =  0 ;
   short i_old_failcode = 0;
	short l_ext_trd_check =  0 ;   
	char  chr_l_condid[APL_CONDID_LEN]               = APL_NULL_STRING;
	char  chr_mainfuncarea[APL_MAINFUNCAREA_LEN]   = APL_NULL_STRING;
	int	int_l_ccseligfail_flg = 0;
	char l_param[201] = APL_NULL_STRING;

   EXEC SQL BEGIN DECLARE SECTION;

   EXEC SQL VAR chr_h_old_failcode IS STRING;
	EXEC SQL VAR chr_l_trade_status    IS STRING;

   EXEC SQL END DECLARE SECTION;


	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_h = NULL;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE	:my_ctx_local;
	#endif

	sqlca.sqlcode = 0;

	

	l_dl_dealaudit_struct_h = (DL_DEALAUDIT_STRUCT_H *)calloc(1, sizeof(DL_DEALAUDIT_STRUCT_H));

	

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CDBUpdTrdFailFn", NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Account is  : %s", p_dl_deal_fail_struct_h->h_dl_client);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The RefNo is    : %s", p_dl_deal_fail_struct_h->h_indentity_no);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Failcode is : %s", p_dl_deal_fail_struct_h->h_fail_cd);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Custnote is : %s", p_dl_deal_fail_struct_h->h_custinfo);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Failnote is : %s", p_dl_deal_fail_struct_h->h_failinfo);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Subfailcode is : %d", p_dl_deal_fail_struct_h->h_subfailreas_cd);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
	}
	
   EXEC SQL VAR chr_l_h_locncode_a                             IS STRING;
   EXEC SQL VAR chr_l_h_trdt_a                                 IS STRING;
   EXEC SQL VAR chr_l_h_typeoftrd                            IS STRING;
   EXEC SQL VAR chr_l_h_instrcode_A                               IS STRING;
   EXEC SQL VAR chr_l_h_locnchng_flg                         IS STRING;
	
	

	if (!strlen(p_dl_deal_fail_struct_h->h_dl_client))
	{
		APL_DATA_MISSING("Account", APL_NULL_STRING, APL_NULL_STRING);
		int_l_error_flag = APL_FAILURE;
	} 
	if (!strlen(p_dl_deal_fail_struct_h->h_indentity_no))
	{
		APL_DATA_MISSING("RefNo", APL_NULL_STRING, APL_NULL_STRING);
		int_l_error_flag = APL_FAILURE;
	} 
	

	if (APL_FAILURE == int_l_error_flag) APL_GOBACK_FAIL

	

	

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"rowid",
													chr_l_rowid_A,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}


	



   if (APL_FAILURE == DL_Chk_DLDet(  p_dl_deal_fail_struct_h->h_dl_client,
                                    p_dl_deal_fail_struct_h->h_indentity_no,
                                    'Y',
                                    NULL,
                                    'N',
                                    NULL,
                                    NULL,
                                    'N',
                                    'N',
                                    NULL,
                                    l_debug_info_ptr ))
   {
      int_l_error_flag = APL_FAILURE;
		APL_GOBACK_FAIL
   }

	

	

	EXEC SQL SELECT 	DEAL_FRM_ORD,
                  	LOCATION_CD,
                  	DEAL_DATE,
                  	DL_CLASS,
                  	INSTR_CODE,
                  	LOC_CHNG_IND
	INTO 					:chr_l_trdfromord:i_dlfromord,
							:chr_l_h_locncode_a:l_i_locncode,
                  	:chr_l_h_trdt_a:l_i_trdt,
                  	:chr_l_h_typeoftrd:l_i_typeoftrd,
                  	:chr_l_h_instrcode_A:l_i_instr_code,
                  	:chr_l_h_locnchng_flg:l_i_locnchng_flg
	FROM 					dl_deal
	WHERE 				rowid = :chr_l_rowid_A;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
														APL_NULL_STRING,
														APL_NULL_STRING,
														APL_NULL_STRING)
	
   if (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0)
   {
       if (EI_Chk_SMIElg(chr_l_h_locncode_a,
                                   chr_l_h_trdt_a,
                                   chr_l_h_typeoftrd,
                                   chr_l_h_instrcode_A,
                                   chr_l_h_locnchng_flg,
											  chr_l_rowid_A,
                                   &int_p_smieligibility_flg,
                                   p_intl_envdatastruct_h,
                                   l_debug_info_ptr
                                   ) == APL_FAILURE)
         {
            CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_envdatastruct_h);
            APL_GOBACK_FAIL;
         }
   }
	

   if ( (int_p_smieligibility_flg )  &&
        (!strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y")  ))
   {
      
   }
   else
   {
      if ((!strlen(p_dl_deal_fail_struct_h->h_fail_cd)) && (!strcmp(p_intl_envdatastruct_h->h_mode, UFL_MODE)))
      {
         APL_DATA_MISSING("Failcode", APL_NULL_STRING, APL_NULL_STRING);
         APL_GOBACK_FAIL;
      }
   }

   if	( (int_p_smieligibility_flg) &&
		  (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0) )
		;
	else
	{
			if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
															p_dl_deal_fail_struct_h->h_indentity_no,
															"access_stamp",
															chr_l_be_access_stamp,
															l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}

			if (strcmp(chr_l_be_access_stamp, p_dl_deal_fail_struct_h->h_access_stamp))
			{
				CO_InsertErr(	l_debug_info_ptr,
										ERR_ACCESSSTAMP_CHGD,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__ );
				APL_GOBACK_FAIL
			}
	}
	if (chr_l_trdfromord[0] == 'Y' )
	{
		if ( APL_FAILURE == CO_Chk_AccValid(	p_dl_deal_fail_struct_h->h_dl_client, 
													'Y', 
													'C', 
													'B', 
													NULL, 
													'Y', 
													'N', 
													'N', 
													'N', 
													l_debug_info_ptr ) )
   	{
      	int_l_error_flag = APL_FAILURE;
   	}
	}
	else
	{
     //Changed function name by Swapnil for Freezed client for Isolve no ISKB_2188 Start
          
              if ( strcmp(chr_l_h_typeoftrd,"19") == 0 )
		{  
			if ( APL_FAILURE == CO_Chk_AccValid_CA(	p_dl_deal_fail_struct_h->h_dl_client, 
														'Y',
														'C',
														NULL,
														NULL,
														'Y',
														'N',
														'N',
														'N',
														l_debug_info_ptr))
			{
				printf(" ***...inside  CO_Chk_AccValid_CA()   ");
				int_l_error_flag = APL_FAILURE;
			}
		}
		else
		{   	
		if ( APL_FAILURE == CO_Chk_AccValid( p_dl_deal_fail_struct_h->h_dl_client,
													'Y',
													'C',
													NULL,
													NULL,
													'Y',
													'N',
													'N',
													'N',
													l_debug_info_ptr) )
		{
				
			int_l_error_flag = APL_FAILURE;
		}
	}
	  //Changed function name by Swapnil for Freezed client for Isolve no ISKB_2188 End		
		
			
	}
	
	
	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"domcpac",
													int_l_domcpac,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	



/***   	if ( APL_FAILURE == CO_Chk_AccValid(	int_l_domcpac, 
													'Y', 
													'B', 
													NULL, 
													NULL, 
													'Y', 
													'N', 
													'N', 
													'N', 
													l_debug_info_ptr ) )
   	{
      	int_l_error_flag = APL_FAILURE;
		}  **/

	
	strcpy(chr_mainfuncarea, "TRD_MAINT");   
	strcpy(chr_l_condid, "EXT_TRD_CNTAC_ALWD");
	l_ext_trd_check =0;

   if (APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                       chr_l_condid,
                                       &l_ext_trd_check,
                                       l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }
   if((strcmp(l_mt_core_sys_params_struct_h.custody_clt_cd,int_l_domcpac)==0) ||(l_ext_trd_check==0))
   {

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"countacc",
													int_l_countacc,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	

   /****if (strlen(int_l_countacc) )
   {
      if ( APL_FAILURE == CO_Chk_AccValid(	int_l_countacc, 
													'Y', 
													'C', 
													'C', 
													NULL, 
													'Y', 
													'N', 
													'N', 
													'N', 
													l_debug_info_ptr ) )
      {
         int_l_error_flag = APL_FAILURE;
		}
	}***/

	}    
	

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"instr_code",
													chr_l_instrcode_a,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	

	if ( APL_FAILURE == CO_Chk_InstrValid(	chr_l_instrcode_a, 
												'Y', 
												'Y', 
												'N', 
												'N', 
												NULL, 
												'N', 
												l_debug_info_ptr ) )
   {
      int_l_error_flag = APL_FAILURE;
   }
	
	

	if (l_mt_core_sys_params_struct_h.loc_proc_ind[0] == 'Y')
	{
		if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
														p_dl_deal_fail_struct_h->h_indentity_no,
														"locncode",
														chr_l_locncode_c,
														l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}

		

		if (APL_FAILURE == MT_Chk_Loc(	chr_l_locncode_c,
													'Y',
													'Y',
													NULL,
													l_debug_info_ptr ))
		{
			int_l_error_flag = APL_FAILURE;
		}
	}

	

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"ccycode",
													chr_l_ccycode,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	

	if ( APL_FAILURE == CO_Chk_CcyValid(	chr_l_ccycode, 
												'M', 
												'Y', 
												l_debug_info_ptr ) )
   {
      int_l_error_flag = APL_FAILURE;
   }
	

	

	if (APL_FAILURE == int_l_error_flag) APL_GOBACK_FAIL

	if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr)) APL_GOBACK_FAIL

	

	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_now, l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
	
	
	


  fprintf(APL_OUT_FILE,"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");
  fprintf(APL_OUT_FILE,"MODE=:%s: n",p_intl_envdatastruct_h->h_mode);

      memset(chr_l_trade_status, NULL, APL_STATUS_LEN);
      EXEC SQL SELECT DEAL_STAT
      INTO :chr_l_trade_status
      FROM DL_DEAL WHERE rowid=:chr_l_rowid_A;

     fprintf(APL_OUT_FILE,":%s:  \n",chr_l_trade_status);

	if (!strcmp(p_intl_envdatastruct_h->h_mode, UFL_MODE))
	{
	

	 

      EXEC SQL SELECT failreason_cd,nvl(sub_fail_cd,-1)
      INTO :chr_h_old_failcode:i_old_failcode,
           :int_h_old_subfailcode
      FROM DL_DEAL WHERE rowid=:chr_l_rowid_A;

      IS_ANY_ORA_ERROR

      if(i_old_failcode == -1)
         strcpy(chr_h_old_failcode,APL_NULL_STRING);

     
      IS_ANY_ORA_ERROR
		
		if ( (int_p_smieligibility_flg) &&
      	  (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0) &&
			(!strcmp(p_dl_deal_fail_struct_h->h_fail_cd,APL_NULL_STRING)))
		{
				
            if((strcmp(chr_l_trade_status,STATUS_SMI_DELUAUTH) == 0)||(strcmp(chr_l_trade_status,STATUS_SMI_DELAUTH)==0))
            {
     fprintf(APL_OUT_FILE,":%s:  \n",chr_l_trade_status);
     
               EXEC SQL UPDATE dl_deal
               SET fail_det = :p_dl_deal_fail_struct_h->h_failinfo,
                 access_stamp = :chr_l_now
               WHERE ROWID = :chr_l_rowid_A;
               IS_ANY_ORA_ERROR
            }
            else
            {
     fprintf(APL_OUT_FILE," :%s: \n",chr_l_trade_status);
				EXEC SQL UPDATE dl_deal
				SET fail_det = :p_dl_deal_fail_struct_h->h_failinfo,
					 client_note = :p_dl_deal_fail_struct_h->h_custinfo,		
				    access_stamp = :chr_l_now
  				WHERE ROWID = :chr_l_rowid_A;
				IS_ANY_ORA_ERROR
				}
		}
	
		else
		{			

			
         if((strcmp(chr_l_trade_status,STATUS_SMI_DELUAUTH) == 0)||(strcmp(chr_l_trade_status,STATUS_SMI_DELAUTH)==0))
         {
            EXEC SQL UPDATE dl_deal
            SET   failreason_cd     = :p_dl_deal_fail_struct_h->h_fail_cd,
                  sub_fail_cd  = :p_dl_deal_fail_struct_h->h_subfailreas_cd,
                  fail_det     = :p_dl_deal_fail_struct_h->h_failinfo,
                  DATEOF_MARKFAIL   = :chr_l_now,
                  access_stamp = :chr_l_now
            WHERE rowid = :chr_l_rowid_A;

            IS_ANY_ORA_ERROR
         }
         else
         {
			EXEC SQL UPDATE dl_deal
			SET	failreason_cd     = :p_dl_deal_fail_struct_h->h_fail_cd,
					sub_fail_cd	 =	:p_dl_deal_fail_struct_h->h_subfailreas_cd,
					fail_det     = :p_dl_deal_fail_struct_h->h_failinfo,
					client_note     = :p_dl_deal_fail_struct_h->h_custinfo,
					DATEOF_MARKFAIL	 = :chr_l_now,
					access_stamp = :chr_l_now
			WHERE rowid = :chr_l_rowid_A;
			
			IS_ANY_ORA_ERROR
	
				
               int_l_ccseligfail_flg = 0;
               if (APL_FAILURE == DL_Chk_DLFailCd(p_dl_deal_fail_struct_h->h_fail_cd,&int_l_ccseligfail_flg,l_debug_info_ptr))
               {
                  APL_GOBACK_FAIL
               }
               if (int_l_ccseligfail_flg)
               {
                  if ( APL_FAILURE ==  DL_Mod_CCSPendDL(p_dl_deal_fail_struct_h->h_dl_client,
                                          					p_dl_deal_fail_struct_h->h_indentity_no,
                                          					MS_CCS_FC,
                                          					p_dl_deal_fail_struct_h->h_fail_cd,
																			p_dl_deal_fail_struct_h->h_subfailreas_cd, 
																			p_dl_deal_fail_struct_h->h_custinfo,
                                          					&l_debug_info_ptr) )
                  {
                     APL_GOBACK_FAIL    
                  }				
					}
			
			}
		}
		

      
      l_flag1 = 0;
      if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT",
                                             "NO_534_SENT",
                                             &l_flag1,
                                             l_debug_info_ptr ))
      {
         APL_GOBACK_FAIL
      }
      


      
      

      if(strcmp(p_dl_deal_fail_struct_h->h_fail_cd,APL_NULL_STRING))
      {
         if((strcmp(chr_h_old_failcode,p_dl_deal_fail_struct_h->h_fail_cd) || int_h_old_subfailcode != p_dl_deal_fail_struct_h->h_subfailreas_cd) && (strcmp(p_intl_envdatastruct_h->h_process,"N")))
         {

          if((l_flag1==0))
          {
				 memset(l_param,APL_NULL_CHAR,201);
            if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                                             p_dl_deal_fail_struct_h->h_indentity_no,
                                             p_dl_deal_fail_struct_h->h_dl_client,
                                             'Y',
                                             l_param,
                                             l_debug_info_ptr ) )
            {
               APL_GOBACK_FAIL;
            }
          }
          else
          {
            if(strcmp(p_dl_deal_fail_struct_h->h_fail_cd,"95"))
            {
				 memset(l_param,APL_NULL_CHAR,201);
               if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                                                   p_dl_deal_fail_struct_h->h_indentity_no,
                                                   p_dl_deal_fail_struct_h->h_dl_client,
                                                   'Y',
                                                   l_param,
                                                   l_debug_info_ptr ) )
               {
                  APL_GOBACK_FAIL
               }
            }
          }
         }
    }
   }


	if (!strcmp(p_intl_envdatastruct_h->h_mode, APL_FUNC_RESET))
	{
	
    if((strcmp(chr_l_trade_status,STATUS_SMI_DELUAUTH) == 0)||(strcmp(chr_l_trade_status,STATUS_SMI_DELAUTH)==0))
      {
      EXEC SQL UPDATE dl_deal
      SET   failreason_cd     = NULL,
            sub_fail_cd  = NULL,
            fail_det     = NULL,
            DATEOF_MARKFAIL   = NULL,
            access_stamp = :chr_l_now
      WHERE rowid = :chr_l_rowid_A;
      IS_ANY_ORA_ERROR
      }
     else
      {
		EXEC SQL UPDATE dl_deal
		SET	failreason_cd     = NULL,
				sub_fail_cd	 =	NULL,
				fail_det     = NULL,
				client_note     = NULL,
				DATEOF_MARKFAIL   = NULL,
				access_stamp = :chr_l_now
		WHERE rowid = :chr_l_rowid_A;
      IS_ANY_ORA_ERROR
     }
	}
	
	

	EXEC SQL SELECT QTY, DEAL_FRM_ORD INTO :l_quantity, :chr_l_trdfromord
	FROM dl_deal
	WHERE rowid = :chr_l_rowid_A;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
														APL_NULL_STRING,	 
														APL_NULL_STRING,	 
														APL_NULL_STRING );	 
	

	strcpy(l_dl_dealaudit_struct_h->h_dl_client, p_dl_deal_fail_struct_h->h_dl_client);
	strcpy(l_dl_dealaudit_struct_h->h_indentity_no, p_dl_deal_fail_struct_h->h_indentity_no);
	strcpy(l_dl_dealaudit_struct_h->h_trail_for, "T");
	strcpy(l_dl_dealaudit_struct_h->h_processdetail, p_intl_envdatastruct_h->processtion);
	strcpy(l_dl_dealaudit_struct_h->h_proc_usr, p_intl_envdatastruct_h->usr);
	if (!strcmp(p_intl_envdatastruct_h->h_mode, UFL_MODE))
	{
		strcpy(l_dl_dealaudit_struct_h->h_subprocess, MARKANOMALOUS);
	}
	else
	{
		strcpy(l_dl_dealaudit_struct_h->h_subprocess, RESETANOMALOUS);
	}
	strcpy(l_dl_dealaudit_struct_h->h_logdate, APL_NULL_STRING);
	strcpy(l_dl_dealaudit_struct_h->h_fail_cd, p_dl_deal_fail_struct_h->h_fail_cd);
	
	
	if(strlen(p_dl_deal_fail_struct_h->h_fail_cd)!=0)
		l_dl_dealaudit_struct_h->h_subfailreas_cd	=	p_dl_deal_fail_struct_h->h_subfailreas_cd;
	
	l_dl_dealaudit_struct_h->h_qty = l_quantity;
	strcpy(l_dl_dealaudit_struct_h->h_dlfromord, chr_l_trdfromord);
						
	if (APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_h, l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	} 



 if (APL_FAILURE==EI_Mod_MQData(l_dl_dealaudit_struct_h->h_dl_client,
                                  l_dl_dealaudit_struct_h->h_indentity_no,
                                  NULL,
                                  NULL,
                                  "T",
                                   l_debug_info_ptr))
       APL_GOBACK_FAIL
 

	
	
	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Mod_DLFailReas successfully",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_SUCCESS);

   RETURN_FAILURE :
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Mod_DLFailReas with errors",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_FAILURE);

}



int DL_Mod_NDS(	DL_DEAL_NDS_STRUCT_H *p_dl_deal_nds_struct_h_a, 
						INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h,
						DEBUG_INFO_STRUCT_H		 **l_debug_info_ptr )
{

	

	struct sqlca sqlca;
	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_ha = NULL;
	char 	chr_l_h_rowid[APL_ROWID_LEN] = APL_NULL_STRING;
 	char	chr_l_h_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	//Commented for warnings removal as part of ISKB 1493 char	chr_l_fieldname[20]	= APL_NULL_STRING;
	char	chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING; 
	char	chr_l_h_locncode_a[APL_LOCNCODE_LENGTH] = APL_NULL_STRING; 
	char	chr_l_h_ccycode[APL_CCYCODE_LEN] = APL_NULL_STRING; 
	char	chr_l_h_flg[APL_FLAG_LENGTH] = APL_NULL_STRING; 
	char	chr_l_tempdt[APL_DATE_LEN] = APL_NULL_STRING; 
	char	chr_l_h_clscode[CLSCD_LEN] = APL_NULL_STRING;
	char 	chr_l_h_domcpac[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	char	chr_l_h_countacc_a[APL_COUNTACC_LEN] = APL_NULL_STRING;  
	char	chr_l_h_trdfromord[APL_FLAG_LENGTH] = APL_NULL_STRING;
	char	chr_l_h_ndsdt[APL_DATE_LEN] = APL_NULL_STRING;
	char	chr_l_h_ndsbldt[APL_DATE_LEN] = APL_NULL_STRING;
	char	chr_l_h_instr_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char	chr_l_h_confdt[APL_DATE_LEN] = APL_NULL_STRING;
	char	chr_l_h_lrtrdtype[3] = APL_NULL_STRING;
	char	chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	int int_l_error_flg = APL_SUCCESS, int_l_date_diff = 0;
	short l_ext_trd_check = 0;
	char  chr_l_condid[APL_CONDID_LEN]               = APL_NULL_STRING;
	char  chr_mainfuncarea[APL_MAINFUNCAREA_LEN]   = APL_NULL_STRING; 
	short l_i_flg = 0, 
			l_i_clscode = 0,
			l_i_rowid = 0,
			l_i_access_stamp = 0,
			l_i_domcpac = 0,
			l_i_countacc = 0,
			l_i_instr_code = 0,
			l_i_locncode = 0,
			l_i_ccycode = 0,
			l_i_trdfromord = 0,
			int_l_i_qty	= 0,
			l_i_ndsdt = 0,
			l_i_ndsbldt = 0,
			l_i_instr_dt = 0, 
			l_i_confdt = 0,
			l_i_lrtrdtype = 0;
	double l_h_quantity_a = 0;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0;
 
	

	APL_IF_DEBUG
	{
		CO_ProcMonitor(	APL_OUT_FILE, 
						"Entering Function DL_Mod_NDS\n",
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Account is : %s\n", 
					p_dl_deal_nds_struct_h_a->h_dl_client);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Ref. Number is : %s\n", 
					p_dl_deal_nds_struct_h_a->h_indentity_no);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The NDS Date is : %s\n", 
					p_dl_deal_nds_struct_h_a->h_ndsdate);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The h_mode is : %s\n", 
					p_intl_env_data_struct_h->h_mode);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
	}

	

	if ( !strlen(p_dl_deal_nds_struct_h_a->h_dl_client) )
	{
		APL_DATA_MISSING(	"Account", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if ( !strlen(p_dl_deal_nds_struct_h_a->h_indentity_no) )
	{
		APL_DATA_MISSING(	"Ref. Number", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if ( !strlen(p_dl_deal_nds_struct_h_a->h_ndsdate) )
	{
		APL_DATA_MISSING(	"NDS Date", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if ( !strlen(p_dl_deal_nds_struct_h_a->h_access_stamp) )
	{
		APL_DATA_MISSING(	"Access Stamp", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if ( APL_FAILURE == int_l_error_flg )
	{
		APL_GOBACK_FAIL;
	}

	

	EXEC SQL VAR chr_l_h_rowid			IS STRING;
	EXEC SQL VAR chr_l_h_access_stamp	IS STRING;
	EXEC SQL VAR chr_l_h_domcpac		IS STRING;
	EXEC SQL VAR chr_l_h_countacc_a		IS STRING;
	EXEC SQL VAR chr_l_h_instrcode_A			IS STRING;
	EXEC SQL VAR chr_l_h_locncode_a		IS STRING;
	EXEC SQL VAR chr_l_h_ccycode		IS STRING;
	EXEC SQL VAR chr_l_h_clscode 		IS STRING;
	EXEC SQL VAR chr_l_h_trdfromord	IS STRING;
	EXEC SQL VAR chr_l_h_ndsdt			IS STRING;
	EXEC SQL VAR chr_l_h_ndsbldt		IS STRING;
	EXEC SQL VAR chr_l_h_confdt			IS STRING;
	EXEC SQL VAR chr_l_h_instr_dt			IS STRING;
	EXEC SQL VAR chr_l_h_lrtrdtype		IS STRING;

	EXEC SQL SELECT ROWID,
						 ACCESS_STAMP,
						 DOMESTIC_CPCLT,
						 CP_CLT,
						 INSTR_CODE,
						 LOCATION_CD,
						 CURRENCY_CD,
						 DEAL_FRM_ORD,
						 QTY,
						 NDS_DATE,
						 NDS_BLK_DT,
						 VAL_FDT,
						 INSTRUMENT_DT,
						 LR_DL_CLASS 
				INTO	chr_l_h_rowid:l_i_rowid,
						chr_l_h_access_stamp:l_i_access_stamp,
						chr_l_h_domcpac:l_i_domcpac,
						chr_l_h_countacc_a:l_i_countacc,
						chr_l_h_instrcode_A:l_i_instr_code,
						chr_l_h_locncode_a:l_i_locncode,
						chr_l_h_ccycode:l_i_ccycode,
						chr_l_h_trdfromord:l_i_trdfromord,
						l_h_quantity_a:int_l_i_qty,
						chr_l_h_ndsdt:l_i_ndsdt,
						chr_l_h_ndsbldt:l_i_ndsbldt,
						chr_l_h_confdt:l_i_confdt,
						chr_l_h_instr_dt:l_i_instr_dt,
						chr_l_h_lrtrdtype:l_i_lrtrdtype
				FROM	DL_DEAL
				WHERE	CLIENT	=	:p_dl_deal_nds_struct_h_a->h_dl_client 
				AND	IDENTIY_NO		=	:p_dl_deal_nds_struct_h_a->h_indentity_no
				FOR UPDATE OF ACCESS_STAMP;

	if ( sqlca.sqlcode != -1405 )
	{
		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
															p_dl_deal_nds_struct_h_a->h_dl_client,
															p_dl_deal_nds_struct_h_a->h_indentity_no,
															APL_NULL_STRING );
	}	

	

   if ( strcmp(p_dl_deal_nds_struct_h_a->h_access_stamp, chr_l_h_access_stamp ) )
   {
      CO_InsertErr(	l_debug_info_ptr, 
								ERR_ACCESSSTAMP_CHGD, 
								p_dl_deal_nds_struct_h_a->h_dl_client,
								p_dl_deal_nds_struct_h_a->h_indentity_no,
								APL_NULL_STRING, 
								__LINE__, 
								__FILE__); 
      APL_GOBACK_FAIL;
   }

	

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDC_MODE) )
	{
		if ( strlen(chr_l_h_ndsdt) )
		{
			CO_InsertErr( 	l_debug_info_ptr, 
									ERR_DEAL_NDSCONF,
								 	p_dl_deal_nds_struct_h_a->h_dl_client, 
									p_dl_deal_nds_struct_h_a->h_indentity_no,
								 	APL_NULL_STRING, 
									__LINE__, 
									__FILE__ );
			APL_GOBACK_FAIL;
		}
	}
	else if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDB_MODE) )
	{
		if ( strlen(chr_l_h_ndsbldt) )
		{
			CO_InsertErr( 	l_debug_info_ptr, 
									ERR_DEAL_NDSBLCKCONF,
								 	p_dl_deal_nds_struct_h_a->h_dl_client, 
									p_dl_deal_nds_struct_h_a->h_indentity_no,
								 	APL_NULL_STRING, 
									__LINE__, 
									__FILE__ );
			APL_GOBACK_FAIL;
		}
	}
	
	
	
	 

	EXEC SQL SELECT CLASSCD INTO :chr_l_h_clscode:l_i_clscode
			          FROM MT_INSTRUMENT 
						 WHERE INSTR_CODE = :chr_l_h_instrcode_A;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_INSTR_NOTFND, 
													  	chr_l_h_instrcode_A,
													  	APL_NULL_STRING,
													  	APL_NULL_STRING);		

	if ( strcmp(chr_l_h_clscode, "LCR") )
	{
		if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDC_MODE) )
		{
			CO_InsertErr( 	l_debug_info_ptr, 
									ERR_DEAL_NVAL_NDSCONF,
								 	p_dl_deal_nds_struct_h_a->h_dl_client, 
									p_dl_deal_nds_struct_h_a->h_indentity_no,
								 	APL_NULL_STRING, 
									__LINE__, 
									__FILE__ );
			APL_GOBACK_FAIL;
		}
		else if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDB_MODE) )
		{
			CO_InsertErr( 	l_debug_info_ptr, 
									ERR_DEAL_NVAL_NDSBLCK,
								 	p_dl_deal_nds_struct_h_a->h_dl_client, 
									p_dl_deal_nds_struct_h_a->h_indentity_no,
								 	APL_NULL_STRING, 
									__LINE__, 
									__FILE__ );
			APL_GOBACK_FAIL;
		}
	}

	

	strcpy(chr_l_h_flg, APL_NULL_STRING);

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDC_MODE) )
	{
		EXEC SQL SELECT 	NDS_IND INTO  :chr_l_h_flg:l_i_flg 
				   		  	FROM  DL_LOCALREPDEALTYPE
					  			WHERE DEAL_CLASS = :chr_l_h_lrtrdtype;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF, 
														  	"NDS Flag",
														  	APL_NULL_STRING,
														  	APL_NULL_STRING);		
	}
	else if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDB_MODE) )
	{
		EXEC SQL SELECT NDS_BLK 	INTO  :chr_l_h_flg:l_i_flg 
				      	 FROM  DL_LOCALREPDEALTYPE
					  		 WHERE DEAL_CLASS = :chr_l_h_lrtrdtype;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF, 
														  	"NDS Block Flag",
														  	APL_NULL_STRING,
														  	APL_NULL_STRING);		
	}

	if ( chr_l_h_flg[0] == 'F' )
	{
		if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDC_MODE) )
		{
			CO_InsertErr( 	l_debug_info_ptr, 
									ERR_DEAL_NVAL_NDSCONF,
								 	p_dl_deal_nds_struct_h_a->h_dl_client, 
									p_dl_deal_nds_struct_h_a->h_indentity_no,
								 	APL_NULL_STRING, 
									__LINE__, 
									__FILE__ );
			APL_GOBACK_FAIL;
		}
		else if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDB_MODE) )
		{
			CO_InsertErr( 	l_debug_info_ptr, 
									ERR_DEAL_NVAL_NDSBLCK,
								 	p_dl_deal_nds_struct_h_a->h_dl_client, 
									p_dl_deal_nds_struct_h_a->h_indentity_no,
								 	APL_NULL_STRING, 
									__LINE__, 
									__FILE__ );
			APL_GOBACK_FAIL;
		}
	}

	
 
	strcpy(chr_l_tempdt, APL_NULL_STRING);
	if ( APL_FAILURE == CO_RtvSysDt(chr_l_tempdt, l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL;
	}

	

	if ( APL_FAILURE == CO_Pro_DateComp(	p_dl_deal_nds_struct_h_a->h_ndsdate, 
													chr_l_tempdt, 
													&int_l_date_diff,
													l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL;
	}
	else
	{
		if ( int_l_date_diff < 0 )
 		{ 
         CO_InsertErr(	l_debug_info_ptr, 
									ERR_DATE_CANT_GRT_TODAY, 
									p_dl_deal_nds_struct_h_a->h_ndsdate, 
									APL_NULL_STRING, 
									APL_NULL_STRING, 
									__LINE__, 
									__FILE__); 
         APL_GOBACK_FAIL;
		}
	}

	

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDC_MODE) )
	{
		if ( APL_FAILURE == DL_Chk_DLDet(	p_dl_deal_nds_struct_h_a->h_dl_client, 
													p_dl_deal_nds_struct_h_a->h_indentity_no, 
													'Y', NULL, 'N', NULL, NULL, 'Y', 
													NULL, NULL, l_debug_info_ptr) ) 
		{
			APL_GOBACK_FAIL;
		}
	}
	else if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDB_MODE) )
	{
		if ( APL_FAILURE == DL_Chk_DLDet(	p_dl_deal_nds_struct_h_a->h_dl_client, 
													p_dl_deal_nds_struct_h_a->h_indentity_no, 
													'Y', NULL, 'N', 'Y', NULL, 'N', 
													NULL, NULL, l_debug_info_ptr) ) 
		{
			APL_GOBACK_FAIL;
		}
	}

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDC_MODE) )
	{
		if ( APL_FAILURE == CO_Pro_DateComp(	p_dl_deal_nds_struct_h_a->h_ndsdate, 
														chr_l_h_instr_dt, 
														&int_l_date_diff,
														l_debug_info_ptr) )
		{
			APL_GOBACK_FAIL;
		}
		else
		{
			if ( int_l_date_diff > 0 )
 			{	 
         	CO_InsertErr(	l_debug_info_ptr, 
										ERR_DEAL_NDSDT_CANT_LESS_FINALEXECDT, 
										p_dl_deal_nds_struct_h_a->h_ndsdate,
										chr_l_h_instr_dt, 
										APL_NULL_STRING, 
										__LINE__, 
										__FILE__); 
         	APL_GOBACK_FAIL;
			}
		}	
	}
	else if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDB_MODE) )
	{
		if ( APL_FAILURE == CO_Pro_DateComp(	p_dl_deal_nds_struct_h_a->h_ndsdate, 
														chr_l_h_confdt, 
														&int_l_date_diff,
														l_debug_info_ptr) )
		{
			APL_GOBACK_FAIL;
		}
		else
		{
			if ( int_l_date_diff > 0 )
 			{	 
         	CO_InsertErr(	l_debug_info_ptr, 
										ERR_DEAL_BLKCONF_CANTLESS_EXECCONF, 
										p_dl_deal_nds_struct_h_a->h_ndsdate,
										chr_l_h_confdt, 
										APL_NULL_STRING, 
										__LINE__, 
										__FILE__); 
         	APL_GOBACK_FAIL;
			}
		}	
	}
	
	

	

	if ( chr_l_h_trdfromord[0] == 'Y')
	{
 		if ( APL_FAILURE == CO_Chk_AccValid(	p_dl_deal_nds_struct_h_a->h_dl_client, 
													'Y', 'C', 'B', NULL, 'Y', 'N', 
													'N', 'N', l_debug_info_ptr ) )
   	{
      	int_l_error_flg = APL_FAILURE;
   	}
	}
	else
	{
		if ( APL_FAILURE == CO_Chk_AccValid ( p_dl_deal_nds_struct_h_a->h_dl_client,
													'Y','C',NULL,NULL,'Y','N',
													'N','N',l_debug_info_ptr))
		{
			int_l_error_flg = APL_FAILURE;
		}
	}
   

   /**if ( APL_FAILURE == CO_Chk_AccValid(	chr_l_h_domcpac, 'Y', 'B', 
												NULL, NULL, 'Y', 'N', 'N', 'N', 
												l_debug_info_ptr ) )
   {
      int_l_error_flg = APL_FAILURE;
   }***/

   

	strcpy(chr_mainfuncarea, "TRD_MAINT");
	strcpy(chr_l_condid, "EXT_TRD_CNTAC_ALWD");
	l_ext_trd_check =0;

	if (APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
													chr_l_condid,
													&l_ext_trd_check,
													l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
	if((strcmp(l_mt_core_sys_params_struct_h.custody_clt_cd,chr_l_h_domcpac)==0) ||(l_ext_trd_check==0))
	{
   	if ( strcmp(chr_l_h_countacc_a, APL_NULL_STRING) )
   	{
      	if ( APL_FAILURE == CO_Chk_AccValid(	chr_l_h_countacc_a, 'Y', 
														'C', 'C', NULL, 'Y', 'N', 'N', 
														'N', l_debug_info_ptr ) )
      	{
         	int_l_error_flg = APL_FAILURE;
      	}
		}
	}
  

   if ( APL_FAILURE == CO_Chk_InstrValid(	chr_l_h_instrcode_A, 'Y', 'Y', 'N', 'N', 
												NULL, 'N', l_debug_info_ptr ) )
   {
      int_l_error_flg = APL_FAILURE;
   }

   
			
   if ( !strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind, "Y") )
   {
      if ( APL_FAILURE == MT_Chk_Loc(	chr_l_h_locncode_a, 'Y', 
													'Y', 'N', l_debug_info_ptr ) )
      {
         int_l_error_flg = APL_FAILURE;
      }
   }

   

	if ( APL_FAILURE == CO_Chk_CcyValid( chr_l_h_ccycode, 'M', 'Y', l_debug_info_ptr) )
	{
		int_l_error_flg = APL_FAILURE;
	}

	

	if ( APL_FAILURE == int_l_error_flg )
	{
		APL_GOBACK_FAIL;
	}

	if ( APL_SUCCESS == CO_ChkErr( *l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	}

	

	strcpy(chr_l_h_access_stamp, APL_NULL_STRING);
	if ( APL_FAILURE == CO_RtvSysDtTime(	chr_l_h_access_stamp, 
															l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL;
	}

	

	if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDC_MODE) )
	{
		EXEC SQL UPDATE DL_DEAL 
					SET   NDS_DATE     = :p_dl_deal_nds_struct_h_a->h_ndsdate,
						   ALLOW_DROPDT = :p_dl_deal_nds_struct_h_a->h_ndsdate,
						   ACCESS_STAMP = :chr_l_h_access_stamp
					WHERE ROWID = :chr_l_h_rowid;
	}
	else if ( !strcmp(p_intl_env_data_struct_h->h_mode, NDB_MODE) )
	{
		EXEC SQL UPDATE DL_DEAL 
					SET   NDS_BLK_DT = :p_dl_deal_nds_struct_h_a->h_ndsdate,
   					   ACCESS_STAMP = :chr_l_h_access_stamp
					WHERE ROWID = :chr_l_h_rowid;
	}

	IS_ANY_ORA_ERROR;

	

	

	l_dl_dealaudit_struct_ha = (DL_DEALAUDIT_STRUCT_H*)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H) );
	APL_MALLOC_FAIL(l_dl_dealaudit_struct_ha);

	strcpy(l_dl_dealaudit_struct_ha->h_dl_client, p_dl_deal_nds_struct_h_a->h_dl_client);
	strcpy(l_dl_dealaudit_struct_ha->h_indentity_no, p_dl_deal_nds_struct_h_a->h_indentity_no);
	strcpy(l_dl_dealaudit_struct_ha->h_trail_for, "T");
	strcpy(l_dl_dealaudit_struct_ha->h_processdetail, p_intl_env_data_struct_h->processtion);
	strcpy(l_dl_dealaudit_struct_ha->h_proc_usr, p_intl_env_data_struct_h->usr);
	strcpy(l_dl_dealaudit_struct_ha->h_subprocess, APL_NULL_STRING);
	strcpy(l_dl_dealaudit_struct_ha->h_fail_cd, APL_NULL_STRING);
	l_dl_dealaudit_struct_ha->h_qty =  l_h_quantity_a;
	strcpy(l_dl_dealaudit_struct_ha->h_dlfromord, chr_l_h_trdfromord);

	if ( APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_ha, l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL;
	}

	APL_GOBACK_SUCCESS;

	

	RETURN_SUCCESS :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function CDBNdsUpdFn with success\n",
							NULL,
							NULL);
		}
		APL_FREE(l_dl_dealaudit_struct_ha);
		return(APL_SUCCESS);

	RETURN_FAILURE :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function CDBNdsUpdFn with errors\n",
							NULL,
							NULL);
		}
		APL_FREE(l_dl_dealaudit_struct_ha);
		return(APL_FAILURE);

}




int DL_Proc_BOGSeqRst (  char *p_str_bogseqnum,
                         DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{
	
	long   int_l_next_number        = 0;
   long   l_inc_number         = 0;
   long   l_h_tempnextval      = 0;
   long   l_h_orig_maxvalue    = 0;
   long   l_h_temp    = 0;

   char  chr_l_buf[BUFFER_LEN]     = APL_NULL_STRING;
   char  chr_l_seqname[100]       = APL_NULL_STRING;
   char  chr_l_inifile[70]        = APL_NULL_STRING;
   FILE  *l_ptr_ini_file      = NULL;
   char  chr_l_h_select_stmt[200] = APL_NULL_STRING;
   char  chr_l_datapath[100]      = APL_NULL_STRING;
   char  chr_l_bogseqname[31]     = APL_NULL_STRING;
	//Commented for warnings removal as part of ISKB 1493 char	chr_buffer[KEY_LENGTH]	= APL_NULL_STRING;

   struct sqlca sqlca;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

	APL_IF_DEBUG
   {
      CO_ProcMonitor(   APL_OUT_FILE,
                  "Entering Function DL_Proc_BOGSeqRst\n",
                  NULL,
                  NULL);
      memset( chr_l_buf, NULL, BUFFER_LEN );
      sprintf( chr_l_buf,
               "The BogSeqNum is: %s\n", p_str_bogseqnum);
   }

   sqlca.sqlcode = 0;

   EXEC SQL VAR  chr_l_h_select_stmt IS STRING;
   EXEC SQL VAR  chr_l_datapath IS STRING;
   EXEC SQL VAR  chr_l_bogseqname IS STRING;


   memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
   memset(chr_l_seqname,NULL,sizeof(chr_l_seqname));

	
   int_l_next_number = atol(p_str_bogseqnum);
	strcpy(chr_l_bogseqname,"SMACBOGREFSEQ");	

	 
   strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
   strcat(chr_l_inifile,"intl_sun.cfg");

   if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
      APL_GOBACK_FAIL

   if (CO_ReadToken(l_ptr_ini_file,"INTL_DB_ADM",chr_l_seqname,l_debug_info_ptr) != APL_SUCCESS)
      APL_GOBACK_FAIL
  
   strcpy(chr_l_datapath,chr_l_seqname);

   strcat(chr_l_seqname,".SMACBOGREFSEQ");
   EXEC SQL SELECT SMACBOGREFSEQ.NEXTVAL INTO :l_h_tempnextval FROM DUAL;

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode != 0)
   {
      printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
		CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
      APL_GOBACK_FAIL
   }

	
   if(int_l_next_number == l_h_tempnextval)
      APL_GOBACK_SUCCESS

   
   
   strcpy(chr_l_h_select_stmt,"SELECT MAX_VALUE FROM ALL_SEQUENCES WHERE SEQUENCE_NAME = 'SMACBOGREFSEQ' AND ");
   strcat(chr_l_h_select_stmt,"SEQUENCE_OWNER = UPPER('");
   strcat(chr_l_h_select_stmt,chr_l_datapath);
   strcat(chr_l_h_select_stmt,"')");

   printf("Select for Prepare : %s\n",chr_l_h_select_stmt);

   EXEC SQL PREPARE S FROM :chr_l_h_select_stmt;

   IS_ANY_ORA_ERROR

	if(sqlca.sqlcode != 0) 
	{
		printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
		CO_InsertErr(l_debug_info_ptr,
							ERR_CANT_GEN_SEQNO,
							chr_l_bogseqname,
							APL_NULL_STRING,
							APL_NULL_STRING,
							__LINE__,
							__FILE__);
		APL_GOBACK_FAIL
	}
						
   EXEC SQL DECLARE sel_data_cur CURSOR FOR S;

	IS_ANY_ORA_ERROR

	if(sqlca.sqlcode != 0)
   {
      CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
      APL_GOBACK_FAIL
   }


   EXEC SQL OPEN sel_data_cur;

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode != 0)
   {
      printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
      CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
      APL_GOBACK_FAIL
   }


   EXEC SQL FETCH sel_data_cur INTO :l_h_orig_maxvalue;

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode != 0)
   {
      printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
      CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);

      APL_GOBACK_FAIL
   }
   EXEC SQL CLOSE sel_data_cur;

	if((int_l_next_number == l_h_orig_maxvalue) && (l_h_tempnextval == 1))
		APL_GOBACK_SUCCESS

	
	sprintf(chr_l_h_select_stmt,"ALTER SEQUENCE %s MAXVALUE  %ld ",chr_l_seqname,l_h_tempnextval);

   EXEC SQL EXECUTE IMMEDIATE :chr_l_h_select_stmt;

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode != 0)
   {
     	printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
	 	CO_InsertErr(l_debug_info_ptr,
     	             	ERR_CANT_GEN_SEQNO,
     	             	chr_l_bogseqname,
     	             	APL_NULL_STRING,
       	            APL_NULL_STRING,
                    	__LINE__,
                    	__FILE__);
      	APL_GOBACK_FAIL
  	 }

	EXEC SQL SELECT SMACBOGREFSEQ.NEXTVAL into :l_h_temp FROM DUAL; 

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode != 0)
   {
      printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
		CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
      APL_GOBACK_FAIL
   }

	
   sprintf(chr_l_h_select_stmt,"ALTER SEQUENCE %s MAXVALUE %ld ",chr_l_seqname,l_h_orig_maxvalue);

   EXEC SQL EXECUTE IMMEDIATE :chr_l_h_select_stmt; 

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode != 0)
   {
      printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
		CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
      APL_GOBACK_FAIL
   }

	if (int_l_next_number != 1)
   {
      l_inc_number = int_l_next_number - 1;

      sprintf(chr_l_h_select_stmt,"ALTER SEQUENCE %s INCREMENT BY %ld ",chr_l_seqname,l_inc_number);

      printf("Debug - Select Stmt : %s",chr_l_h_select_stmt);

      EXEC SQL EXECUTE IMMEDIATE :chr_l_h_select_stmt;

      IS_ANY_ORA_ERROR

		if(sqlca.sqlcode != 0)
      {
         printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
			CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
         APL_GOBACK_FAIL
      }

		
      EXEC SQL SELECT SMACBOGREFSEQ.NEXTVAL into :l_h_temp FROM DUAL;

      
      sprintf(chr_l_h_select_stmt,"ALTER SEQUENCE %s INCREMENT BY %d ",chr_l_seqname,1);

      EXEC SQL EXECUTE IMMEDIATE :chr_l_h_select_stmt;
      IS_ANY_ORA_ERROR

      if(sqlca.sqlcode != 0)
      {
         printf("sqlca.sqlcode=%d\n",sqlca.sqlcode);
			CO_InsertErr(l_debug_info_ptr,
                     ERR_CANT_GEN_SEQNO,
                     chr_l_bogseqname,
                     APL_NULL_STRING,
                     APL_NULL_STRING,
                     __LINE__,
                     __FILE__);
         APL_GOBACK_FAIL
      }
	 }

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
      fclose(l_ptr_ini_file);

      APL_IF_DEBUG
      {
         CO_ProcMonitor(   APL_OUT_FILE,
                     "Exiting DL_Proc_BOGSeqRst with success\n",
                     NULL,
                     NULL);
      }
      return(APL_SUCCESS);

   RETURN_FAILURE :
      fclose(l_ptr_ini_file);

      APL_IF_DEBUG
      {
         CO_ProcMonitor(   APL_OUT_FILE,
                     "Exiting DL_Proc_BOGSeqRst with errors\n",
                     NULL,
                     NULL);
      }
      return(APL_FAILURE);
}

int DL_Mod_MultReas(	DL_DEAL_FAIL_STRUCT_H *p_dl_deal_fail_struct_h,int	p_snd_msg,
								INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,	
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{

	

	struct sqlca sqlca;	
	int int_l_error_flag = APL_SUCCESS;
	char		int_l_domcpac[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	char 		int_l_countacc[APL_COUNTACC_LEN] = APL_NULL_STRING;  
	char  	chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	char  	chr_l_locncode_c[APL_LOCNCODE_LENGTH] = APL_NULL_STRING;
	char 		chr_l_ccycode[APL_CCYCODE_LEN] = APL_NULL_STRING;
	char 		chr_l_be_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	char  	chr_l_rowid_A[APL_ROWID_LEN] = APL_NULL_STRING;
	char  	chr_l_now[APL_DATE_LEN] = APL_NULL_STRING;
   char  chr_l_condid[APL_CONDID_LEN]               = APL_NULL_STRING;
   char  chr_mainfuncarea[APL_MAINFUNCAREA_LEN]   = APL_NULL_STRING;
   short l_ext_trd_check =  0 ;   
	char  	chr_l_trdfromord[APL_FLAG_LENGTH] = APL_NULL_STRING;
	double	l_quantity = 0.0;
	char		chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	short    l_flag1=0;
	short  	i_dlfromord = 0;

	int   int_p_smieligibility_flg = 0;
   char  chr_l_h_locncode_a[5]                        = APL_NULL_STRING;
   char  chr_l_h_trdt_a[20]                           = APL_NULL_STRING;
   char  chr_l_h_typeoftrd[3]                       = APL_NULL_STRING;
   char  chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN]             = APL_NULL_STRING;
   char  chr_l_h_locnchng_flg[2]                    = APL_NULL_STRING;
	short l_i_locncode = 0;
	short l_i_trdt = 0;
	short l_i_typeoftrd = 0;
	short l_i_instr_code = 0;
	short l_i_locnchng_flg = 0;
	//Commented for warnings removal as part of ISKB 1493 char chr_l_cubk_exttrd[2]	=	APL_NULL_STRING;
	//Commented for warnings removal as part of ISKB 1493 char chr_l_typeoftrd[3] = APL_NULL_STRING;
   char chr_h_old_failcode[3] = APL_NULL_STRING;
   short i_old_failcode = 0;
   int int_h_old_subfailcode =  0 ;
   char chr_h_old_custnote[71] = APL_NULL_STRING;
   short i_old_custnote = 0;
	char chr_l_param_str[200]	=	APL_NULL_STRING;
	char	chr_l_support_single_548[2]	=	APL_NULL_STRING;
	short i_single548_support_ind;
	char	chr_l_stat_blck_num[4]	=	APL_NULL_STRING;
	int	int_l_count					=		0;
	char     chr_l_trade_status[APL_STATUS_LEN]       = APL_NULL_STRING; 
	char	l_param[201]	=APL_NULL_STRING;


   EXEC SQL BEGIN DECLARE SECTION;

   EXEC SQL VAR chr_h_old_failcode IS STRING;
   EXEC SQL VAR chr_h_old_custnote IS STRING;
	EXEC SQL VAR chr_l_trade_status    IS STRING;

   EXEC SQL END DECLARE SECTION;


	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_h = NULL;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE	:my_ctx_local;
	#endif

	sqlca.sqlcode = 0;

	

	l_dl_dealaudit_struct_h = (DL_DEALAUDIT_STRUCT_H *)calloc(1, sizeof(DL_DEALAUDIT_STRUCT_H));

	

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CDBUpdTrdFailFn", NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Account is  : %s", p_dl_deal_fail_struct_h->h_dl_client);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The RefNo is    : %s", p_dl_deal_fail_struct_h->h_indentity_no);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Failcode is : %s", p_dl_deal_fail_struct_h->h_fail_cd);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Custnote is : %s", p_dl_deal_fail_struct_h->h_custinfo);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Failnote is : %s", p_dl_deal_fail_struct_h->h_failinfo);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Subfailcode is : %d", p_dl_deal_fail_struct_h->h_subfailreas_cd);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
	}
	
   EXEC SQL VAR chr_l_h_locncode_a                             IS STRING;
   EXEC SQL VAR chr_l_h_trdt_a                                 IS STRING;
   EXEC SQL VAR chr_l_h_typeoftrd                            IS STRING;
   EXEC SQL VAR chr_l_h_instrcode_A                               IS STRING;
   EXEC SQL VAR chr_l_h_locnchng_flg                         IS STRING;
	
	

	if (!strlen(p_dl_deal_fail_struct_h->h_dl_client))
	{
		APL_DATA_MISSING("Account", APL_NULL_STRING, APL_NULL_STRING);
		int_l_error_flag = APL_FAILURE;
	} 
	if (!strlen(p_dl_deal_fail_struct_h->h_indentity_no))
	{
		APL_DATA_MISSING("RefNo", APL_NULL_STRING, APL_NULL_STRING);
		int_l_error_flag = APL_FAILURE;
	} 

	if (APL_FAILURE == int_l_error_flag) APL_GOBACK_FAIL

	

	

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"rowid",
													chr_l_rowid_A,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}


	

   if (APL_FAILURE == DL_Chk_DLDet(  p_dl_deal_fail_struct_h->h_dl_client,
                                    p_dl_deal_fail_struct_h->h_indentity_no,
                                    'Y',
                                    NULL,
                                    'N',
                                    NULL,
                                    NULL,
                                    'N',
                                    'N',
                                    NULL,
                                    l_debug_info_ptr ))
   {
      int_l_error_flag = APL_FAILURE;
		APL_GOBACK_FAIL
   }

	


	EXEC SQL SELECT 	DEAL_FRM_ORD,
                  	LOCATION_CD,
                  	DEAL_DATE,
                  	DL_CLASS,
                  	INSTR_CODE,
                  	LOC_CHNG_IND
	INTO 					:chr_l_trdfromord:i_dlfromord,
							:chr_l_h_locncode_a:l_i_locncode,
                  	:chr_l_h_trdt_a:l_i_trdt,
                  	:chr_l_h_typeoftrd:l_i_typeoftrd,
                  	:chr_l_h_instrcode_A:l_i_instr_code,
                  	:chr_l_h_locnchng_flg:l_i_locnchng_flg
	FROM 					dl_deal
	WHERE 				rowid = :chr_l_rowid_A;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
														APL_NULL_STRING,
														APL_NULL_STRING,
														APL_NULL_STRING)
	
   if (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0)
   {
       if (EI_Chk_SMIElg(chr_l_h_locncode_a,
                                   chr_l_h_trdt_a,
                                   chr_l_h_typeoftrd,
                                   chr_l_h_instrcode_A,
                                   chr_l_h_locnchng_flg,
											  chr_l_rowid_A,
                                   &int_p_smieligibility_flg,
                                   p_intl_envdatastruct_h,
                                   l_debug_info_ptr
                                   ) == APL_FAILURE)
         {
            CO_ProcMonitor(APL_OUT_FILE,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_envdatastruct_h);
            APL_GOBACK_FAIL;
         }
   }
	

   if ( (int_p_smieligibility_flg )  &&
        (!strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y")  ))
   {
      
   }
   else
   {
      if ((!strlen(p_dl_deal_fail_struct_h->h_fail_cd)) && (!strcmp(p_intl_envdatastruct_h->h_mode, UFL_MODE)))
      {
         APL_DATA_MISSING("Failcode", APL_NULL_STRING, APL_NULL_STRING);
         APL_GOBACK_FAIL;
      }
   }

   if	( (int_p_smieligibility_flg) &&
		  (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0) )
		;
	else
	{
			if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
															p_dl_deal_fail_struct_h->h_indentity_no,
															"access_stamp",
															chr_l_be_access_stamp,
															l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}

			if (strcmp(chr_l_be_access_stamp, p_dl_deal_fail_struct_h->h_access_stamp))
			{
				CO_InsertErr(	l_debug_info_ptr,
										ERR_ACCESSSTAMP_CHGD,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__ );
				APL_GOBACK_FAIL
			}
	}
	if (chr_l_trdfromord[0] == 'Y' )
	{
		if ( APL_FAILURE == CO_Chk_AccValid(	p_dl_deal_fail_struct_h->h_dl_client, 
													'Y', 
													'C', 
													'B', 
													NULL, 
													'Y', 
													'N', 
													'N', 
													'N', 
													l_debug_info_ptr ) )
   	{
      	int_l_error_flag = APL_FAILURE;
   	}
	}
	else
	{
		if ( APL_FAILURE == CO_Chk_AccValid( p_dl_deal_fail_struct_h->h_dl_client,
													'Y',
													'C',
													NULL,
													NULL,
													'Y',
													'N',
													'N',
													'N',
													l_debug_info_ptr) )
		{
			int_l_error_flag = APL_FAILURE;
		}
	}
	
	
	/**if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"domcpac",
													int_l_domcpac,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	

   	if ( APL_FAILURE == CO_Chk_AccValid(	int_l_domcpac, 
													'Y', 
													'B', 
													NULL, 
													NULL, 
													'Y', 
													'N', 
													'N', 
													'N', 
													l_debug_info_ptr ) )
   	{
      	int_l_error_flag = APL_FAILURE;
		}**/
	
strcpy(chr_mainfuncarea, "TRD_MAINT");   
strcpy(chr_l_condid, "EXT_TRD_CNTAC_ALWD");
l_ext_trd_check =0;

   if (APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                       chr_l_condid,
                                       &l_ext_trd_check,
                                       l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }
   if((strcmp(l_mt_core_sys_params_struct_h.custody_clt_cd,int_l_domcpac)==0) ||(l_ext_trd_check==0))
   {

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"countacc",
													int_l_countacc,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	

   /**if (strlen(int_l_countacc) )
   {
      if ( APL_FAILURE == CO_Chk_AccValid(	int_l_countacc, 
													'Y', 
													'C', 
													'C', 
													NULL, 
													'Y', 
													'N', 
													'N', 
													'N', 
													l_debug_info_ptr ) )
      {
         int_l_error_flag = APL_FAILURE;
		}
	}**/
}
	

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"instr_code",
													chr_l_instrcode_a,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	

	if ( APL_FAILURE == CO_Chk_InstrValid(	chr_l_instrcode_a, 
												'Y', 
												'Y', 
												'N', 
												'N', 
												NULL, 
												'N', 
												l_debug_info_ptr ) )
   {
      int_l_error_flag = APL_FAILURE;
   }
	
	

	if (l_mt_core_sys_params_struct_h.loc_proc_ind[0] == 'Y')
	{
		if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
														p_dl_deal_fail_struct_h->h_indentity_no,
														"locncode",
														chr_l_locncode_c,
														l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}

		

		if (APL_FAILURE == MT_Chk_Loc(	chr_l_locncode_c,
													'Y',
													'Y',
													NULL,
													l_debug_info_ptr ))
		{
			int_l_error_flag = APL_FAILURE;
		}
	}

	

	if (APL_FAILURE == DL_Rtv_TrdChrVal(	p_dl_deal_fail_struct_h->h_dl_client,
													p_dl_deal_fail_struct_h->h_indentity_no,
													"ccycode",
													chr_l_ccycode,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	

	if ( APL_FAILURE == CO_Chk_CcyValid(	chr_l_ccycode, 
												'M', 
												'Y', 
												l_debug_info_ptr ) )
   {
      int_l_error_flag = APL_FAILURE;
   }
	

	

	if (APL_FAILURE == int_l_error_flag) APL_GOBACK_FAIL

	if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr)) APL_GOBACK_FAIL

	

	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_now, l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
		
		
      memset(chr_l_trade_status, NULL, APL_STATUS_LEN);
      EXEC SQL SELECT DEAL_STAT
      INTO :chr_l_trade_status
      FROM DL_DEAL WHERE rowid=:chr_l_rowid_A;

		IS_ANY_ORA_ERROR
	
	
	

	if (!strcmp(p_intl_envdatastruct_h->h_mode, UFL_MODE))
	{

      EXEC SQL SELECT failreason_cd,nvl(sub_fail_cd,-1),client_note
      INTO :chr_h_old_failcode:i_old_failcode,
           :int_h_old_subfailcode,
			  :chr_h_old_custnote:i_old_custnote
      FROM DL_DEAL WHERE rowid=:chr_l_rowid_A;

      IS_ANY_ORA_ERROR

      if(i_old_failcode == -1)
         strcpy(chr_h_old_failcode,APL_NULL_STRING);

		if ( (int_p_smieligibility_flg) &&
      	  (strcmp(g_mt_commonsys_params_struct_h.ei_smi_ind,"Y") == 0) &&
			(!strcmp(p_dl_deal_fail_struct_h->h_fail_cd,APL_NULL_STRING)))
		{
        if((strcmp(chr_l_trade_status,STATUS_SMI_DELUAUTH) == 0)||(strcmp(chr_l_trade_status,STATUS_SMI_DELAUTH)==0))
        {
				EXEC SQL UPDATE dl_deal
				SET fail_det = :p_dl_deal_fail_struct_h->h_failinfo,
				    access_stamp = :chr_l_now
  				WHERE ROWID = :chr_l_rowid_A;
				IS_ANY_ORA_ERROR
			}
			else
			{
				EXEC SQL UPDATE dl_deal
				SET fail_det = :p_dl_deal_fail_struct_h->h_failinfo,
					 client_note = :p_dl_deal_fail_struct_h->h_custinfo,		
				    access_stamp = :chr_l_now
  				WHERE ROWID = :chr_l_rowid_A;
				IS_ANY_ORA_ERROR
			}
		}					
	
		else
		{			
       	if((strcmp(chr_l_trade_status,STATUS_SMI_DELUAUTH) == 0)||(strcmp(chr_l_trade_status,STATUS_SMI_DELAUTH)==0))
       	{
				EXEC SQL UPDATE dl_deal
				SET	failreason_cd     = :p_dl_deal_fail_struct_h->h_fail_cd,
						sub_fail_cd	 =	:p_dl_deal_fail_struct_h->h_subfailreas_cd,
						fail_det     = :p_dl_deal_fail_struct_h->h_failinfo,
						DATEOF_MARKFAIL	 = :chr_l_now,
						access_stamp = :chr_l_now
				WHERE rowid = :chr_l_rowid_A;
			
		 	}
			else
			{

				EXEC SQL UPDATE dl_deal
				SET	failreason_cd     = :p_dl_deal_fail_struct_h->h_fail_cd,
						sub_fail_cd	 =	:p_dl_deal_fail_struct_h->h_subfailreas_cd,
						fail_det     = :p_dl_deal_fail_struct_h->h_failinfo,
						client_note     = :p_dl_deal_fail_struct_h->h_custinfo,
						DATEOF_MARKFAIL	 = :chr_l_now,
						access_stamp = :chr_l_now
				WHERE rowid = :chr_l_rowid_A;
			
				IS_ANY_ORA_ERROR
			}				
		}
		


      l_flag1 = 0;
      if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT",
                                             "NO_534_SENT",
                                             &l_flag1,
                                             l_debug_info_ptr ))
      {
         APL_GOBACK_FAIL
      }



      if(strcmp(p_dl_deal_fail_struct_h->h_fail_cd,APL_NULL_STRING))
      {

			printf("p_snd_msg is %d\n",p_snd_msg);
         if((strcmp(chr_h_old_failcode,p_dl_deal_fail_struct_h->h_fail_cd) || int_h_old_subfailcode != p_dl_deal_fail_struct_h->h_subfailreas_cd || p_snd_msg ==1 || strcmp(chr_h_old_custnote,p_dl_deal_fail_struct_h->h_custinfo)) && (strcmp(p_intl_envdatastruct_h->h_process,"N")))
         
         {
		
			EXEC SQL SELECT CLN_SINGLE548_SUPPORT_IND 
						INTO :chr_l_support_single_548:i_single548_support_ind
						FROM MT_CLIENT
						WHERE	CLN_CODE=:p_dl_deal_fail_struct_h->h_dl_client;
			IS_ANY_ORA_ERROR

			if(strcmp(chr_l_support_single_548,"N")==0)
			{

                	if((l_flag1==0))
                	{
				 			memset(l_param,APL_NULL_CHAR,201);
                  	if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                     	                                 p_dl_deal_fail_struct_h->h_indentity_no,
                        	                              p_dl_deal_fail_struct_h->h_dl_client,
                           	                           'Y',
                              	                        l_param,
                                 	                     l_debug_info_ptr ) )
                  	{
                     	APL_GOBACK_FAIL;
                  	}
                	}
                	else
                	{
                  	   if(strcmp(p_dl_deal_fail_struct_h->h_fail_cd,"95"))
                     	{
				 					memset(l_param,APL_NULL_CHAR,201);
                        	if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                           	                                 p_dl_deal_fail_struct_h->h_indentity_no,
                              	                              p_dl_deal_fail_struct_h->h_dl_client,
                                 	                           'Y',
                                    	                        l_param,
                                       	                     l_debug_info_ptr ) )
                        	{
                           	APL_GOBACK_FAIL
                        	}
                     	}
                 	}

				
				EXEC SQL DECLARE CMULTREAS_CUR  CURSOR FOR
							SELECT STAT_BLCKNO
							FROM DL_MULT_REAS_CODES
							WHERE CLIENT=:p_dl_deal_fail_struct_h->h_dl_client
							AND 	IDENTIY_NO =:p_dl_deal_fail_struct_h->h_indentity_no
							AND FAILREASON_CD =:p_dl_deal_fail_struct_h->h_fail_cd
							AND nvl(SUB_FAIL_CD,0) =nvl(:p_dl_deal_fail_struct_h->h_subfailreas_cd,0)
							AND STAT_BLCKNO !=11
							AND ACCESS_STAMP = (SELECT MAX(ACCESS_STAMP) 
														FROM DL_MULT_REAS_CODES 
														WHERE CLIENT=:p_dl_deal_fail_struct_h->h_dl_client
														AND   IDENTIY_NO =:p_dl_deal_fail_struct_h->h_indentity_no
														AND FAILREASON_CD =:p_dl_deal_fail_struct_h->h_fail_cd
														AND nvl(SUB_FAIL_CD,0) 
															=nvl(:p_dl_deal_fail_struct_h->h_subfailreas_cd,0));
				IS_ANY_ORA_ERROR
			
				EXEC SQL OPEN CMULTREAS_CUR;
				IS_ANY_ORA_ERROR
				
				int_l_count=0;
			
				for(;;)
				{
					
					sleep(1);
					memset(chr_l_stat_blck_num,APL_NULL_CHAR,4);
					memset(chr_l_param_str,APL_NULL_CHAR,200);
					EXEC SQL FETCH CMULTREAS_CUR INTO :chr_l_stat_blck_num;

					if(sqlca.sqlcode==1403)
					break;
					
					strncpy(chr_l_param_str,chr_l_stat_blck_num,2);
					strcat(chr_l_param_str,";");
						 	
   		       if((l_flag1==0))
         		 {
            		if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                  			                           p_dl_deal_fail_struct_h->h_indentity_no,
                           			                  p_dl_deal_fail_struct_h->h_dl_client,
                                    			         'Y',
                                             			chr_l_param_str,
                                             			l_debug_info_ptr ) )
            		{
               		APL_GOBACK_FAIL;
            		}
          		 }
          		 else
          		 {
            			if(strcmp(p_dl_deal_fail_struct_h->h_fail_cd,"95"))
            			{
               			if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                     			                              p_dl_deal_fail_struct_h->h_indentity_no,
                              			                     p_dl_deal_fail_struct_h->h_dl_client,
                                       			            'Y',
                                                			   chr_l_param_str,
                                                   			l_debug_info_ptr ) )
               			{
                  			APL_GOBACK_FAIL
               			}
            			}
          			}
         		}
			}
			else if(strcmp(chr_l_support_single_548,"Y")==0)
			{
				strcpy(chr_l_param_str,"ALL;");
			
      	    if((l_flag1==0))
         	 {
            	if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
               	   	                           p_dl_deal_fail_struct_h->h_indentity_no,
                  	   	                        p_dl_deal_fail_struct_h->h_dl_client,
                           		                  'Y',
                                 		            chr_l_param_str,
                                       		      l_debug_info_ptr ) )
            	{
               	APL_GOBACK_FAIL;
            	}
          	 }
          	 else
          	 {
            		if(strcmp(p_dl_deal_fail_struct_h->h_fail_cd,"95"))
            		{
               		if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                     		                              p_dl_deal_fail_struct_h->h_indentity_no,
                           		                        p_dl_deal_fail_struct_h->h_dl_client,
                                 		                  'Y',
                                       		            chr_l_param_str,
                                             		      l_debug_info_ptr ) )
               		{
                  		APL_GOBACK_FAIL
               		}
            		}
          		}
				}
         	if(strcmp(chr_l_support_single_548,"N")==0)
         	{
					EXEC SQL CLOSE CMULTREAS_CUR;
					IS_ANY_ORA_ERROR
				}
			}
    	}
   }

	

	EXEC SQL SELECT QTY, DEAL_FRM_ORD INTO :l_quantity, :chr_l_trdfromord
	FROM dl_deal
	WHERE rowid = :chr_l_rowid_A;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
														APL_NULL_STRING,	 
														APL_NULL_STRING,	 
														APL_NULL_STRING );	 
	

	strcpy(l_dl_dealaudit_struct_h->h_dl_client, p_dl_deal_fail_struct_h->h_dl_client);
	strcpy(l_dl_dealaudit_struct_h->h_indentity_no, p_dl_deal_fail_struct_h->h_indentity_no);
	strcpy(l_dl_dealaudit_struct_h->h_trail_for, "T");
	strcpy(l_dl_dealaudit_struct_h->h_processdetail, p_intl_envdatastruct_h->processtion);
	strcpy(l_dl_dealaudit_struct_h->h_proc_usr, p_intl_envdatastruct_h->usr);
	if (!strcmp(p_intl_envdatastruct_h->h_mode, UFL_MODE))
	{
		strcpy(l_dl_dealaudit_struct_h->h_subprocess, MARKANOMALOUS);
	}
	else
	{
		strcpy(l_dl_dealaudit_struct_h->h_subprocess, RESETANOMALOUS);
	}
	strcpy(l_dl_dealaudit_struct_h->h_logdate, APL_NULL_STRING);
	strcpy(l_dl_dealaudit_struct_h->h_fail_cd, p_dl_deal_fail_struct_h->h_fail_cd);
	
	if(strlen(p_dl_deal_fail_struct_h->h_fail_cd)!=0)
		l_dl_dealaudit_struct_h->h_subfailreas_cd	=	p_dl_deal_fail_struct_h->h_subfailreas_cd;
	
	l_dl_dealaudit_struct_h->h_qty = l_quantity;
	strcpy(l_dl_dealaudit_struct_h->h_dlfromord, chr_l_trdfromord);
						
	if (APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_h, l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	} 

 if (APL_FAILURE==EI_Mod_MQData(l_dl_dealaudit_struct_h->h_dl_client,
                                  l_dl_dealaudit_struct_h->h_indentity_no,
                                  NULL,
                                  NULL,
                                  "T",
                                   l_debug_info_ptr))
       APL_GOBACK_FAIL
 
	
	
	
	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Mod_MultReas successfully",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_SUCCESS);

   RETURN_FAILURE :
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Mod_MultReas with errors",
						NULL,
						p_intl_envdatastruct_h);
      return(APL_FAILURE);

}
int DL_Mod_MultReasNew( DL_MULT_REAS_CODES_STRUCT_H	*p_dl_mult_reas_codes_struct_h, DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{

    EXEC SQL BEGIN DECLARE SECTION;
		DL_MULT_REAS_CODES_STRUCT_H	l_dl_mult_reas_codes_struct_ha_a;
		DL_MULT_REAS_CODES_STRUCT_I	l_dl_mult_reas_codes_struct_ib;


	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_indentity_no IS STRING;
	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_blck_no IS STRING;
	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_stat_qual IS STRING;
	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_stat_reas IS STRING;
	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_failreas_qual IS STRING;
	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_failreas_cd IS STRING;
	EXEC SQL VAR l_dl_mult_reas_codes_struct_ha_a.h_info IS STRING;


	struct sqlca sqlca;
	EXEC SQL END DECLARE SECTION;
    # ifdef APL_THREADS
      APL_SET_CONTEXT
     EXEC SQL CONTEXT USE :my_ctx_local;
    #endif
    sqlca.sqlcode=0;

	memset(&l_dl_mult_reas_codes_struct_ha_a,NULL,sizeof(DL_MULT_REAS_CODES_STRUCT_H));
	memset(&l_dl_mult_reas_codes_struct_ib,NULL,sizeof(DL_MULT_REAS_CODES_STRUCT_I));
	
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_dl_client,p_dl_mult_reas_codes_struct_h->h_dl_client);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_indentity_no,p_dl_mult_reas_codes_struct_h->h_indentity_no);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_blck_no,p_dl_mult_reas_codes_struct_h->h_blck_no);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_stat_qual,p_dl_mult_reas_codes_struct_h->h_stat_qual);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_stat_reas,p_dl_mult_reas_codes_struct_h->h_stat_reas);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_failreas_qual,p_dl_mult_reas_codes_struct_h->h_failreas_qual);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_failreas_cd,p_dl_mult_reas_codes_struct_h->h_failreas_cd);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_info,p_dl_mult_reas_codes_struct_h->h_info);
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_fail_cd,p_dl_mult_reas_codes_struct_h->h_fail_cd);
	l_dl_mult_reas_codes_struct_ha_a.h_subfailreas_cd=p_dl_mult_reas_codes_struct_h->h_subfailreas_cd;
	strcpy(l_dl_mult_reas_codes_struct_ha_a.h_access_stamp,p_dl_mult_reas_codes_struct_h->h_access_stamp);

	if( !strlen(l_dl_mult_reas_codes_struct_ha_a.h_dl_client))
		APL_DATA_MISSING("CLIENT",APL_NULL_STRING,APL_NULL_STRING)

	if( !strlen(l_dl_mult_reas_codes_struct_ha_a.h_indentity_no))
		APL_DATA_MISSING("IDENTIY_NO",APL_NULL_STRING,APL_NULL_STRING)

	if( !strlen(l_dl_mult_reas_codes_struct_ha_a.h_blck_no))
		APL_DATA_MISSING("BLOCKNO",APL_NULL_STRING,APL_NULL_STRING)

	if( !strlen(l_dl_mult_reas_codes_struct_ha_a.h_stat_qual))
		APL_DATA_MISSING("STATQUAL",APL_NULL_STRING,APL_NULL_STRING)

	if( !strlen(l_dl_mult_reas_codes_struct_ha_a.h_stat_reas))
		APL_DATA_MISSING("STATREAS",APL_NULL_STRING,APL_NULL_STRING)

	

	


	EXEC SQL INSERT INTO DL_MULT_REAS_CODES
				VALUES (:l_dl_mult_reas_codes_struct_ha_a:l_dl_mult_reas_codes_struct_ib);
	
	IS_ANY_ORA_ERROR

 
        APL_GOBACK_SUCCESS//AIX Warning Removal
      RETURN_SUCCESS:

      APL_IF_DEBUG
       {
         CO_ProcMonitor(APL_OUT_FILE,"Successfully out - DL_Mod_MultReasNew\n",NULL,NULL);
       }
      return APL_SUCCESS;

      RETURN_FAILURE:

      APL_IF_DEBUG
       {
        CO_ProcMonitor(APL_OUT_FILE,"Unsuccessfully out - DL_Mod_MultReasNew\n",NULL,NULL);
       }
      return APL_FAILURE;
}


int DL_Rtv_MultReas(	char 					*chr_p_client,
							 	char 					*chr_p_refno,
								DL_MULT_REAS_CODES_STRUCT_H **p_dl_mult_reas_codes_struct_h_a,
								int 					*int_p_count, 
								DEBUG_INFO_STRUCT_H 		**l_debug_info_ptr)
{
	int	int_l_count			=	0;	
	DL_MULT_REAS_CODES_STRUCT_H	l_dl_mult_reas_codes_struct_h;
	DL_MULT_REAS_CODES_STRUCT_I	l_dl_mult_reas_codes_struct_i;

	APL_FREE(*p_dl_mult_reas_codes_struct_h_a);


		EXEC SQL DECLARE CMULTREAS_CUR2  CURSOR FOR
           SELECT *
           FROM DL_MULT_REAS_CODES
           WHERE CLIENT	=	:chr_p_client
           AND   IDENTIY_NO	=	:chr_p_refno
			  AND		ACCESS_STAMP = (SELECT MAX(ACCESS_STAMP) 
				 					FROM DL_MULT_REAS_CODES
									WHERE CLIENT	=	:chr_p_client
									AND IDENTIY_NO	=	:chr_p_refno);
            IS_ANY_ORA_ERROR

				EXEC SQL OPEN CMULTREAS_CUR2;
				IS_ANY_ORA_ERROR

		for(;;)
		{
			   (*p_dl_mult_reas_codes_struct_h_a) = (DL_MULT_REAS_CODES_STRUCT_H *)realloc(*p_dl_mult_reas_codes_struct_h_a,(sizeof(DL_MULT_REAS_CODES_STRUCT_H) * (int_l_count + 1)));
				memset(&l_dl_mult_reas_codes_struct_h,NULL,sizeof(DL_MULT_REAS_CODES_STRUCT_H)); 
				memset(&l_dl_mult_reas_codes_struct_i,NULL,sizeof(DL_MULT_REAS_CODES_STRUCT_I));  
			
				EXEC SQL FETCH CMULTREAS_CUR2 INTO :l_dl_mult_reas_codes_struct_h:l_dl_mult_reas_codes_struct_i;
				IS_ANY_ORA_ERROR
				
				if(sqlca.sqlcode==1403)
					break;
		
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_dl_client,l_dl_mult_reas_codes_struct_h.h_dl_client);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_indentity_no,l_dl_mult_reas_codes_struct_h.h_indentity_no);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_blck_no,l_dl_mult_reas_codes_struct_h.h_blck_no);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_stat_qual,l_dl_mult_reas_codes_struct_h.h_stat_qual);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_stat_reas,l_dl_mult_reas_codes_struct_h.h_stat_reas);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_failreas_qual,l_dl_mult_reas_codes_struct_h.h_failreas_qual);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_failreas_cd,l_dl_mult_reas_codes_struct_h.h_failreas_cd);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_info,l_dl_mult_reas_codes_struct_h.h_info);
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_fail_cd,l_dl_mult_reas_codes_struct_h.h_fail_cd);
				(*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_subfailreas_cd = l_dl_mult_reas_codes_struct_h.h_subfailreas_cd;
				strcpy((*p_dl_mult_reas_codes_struct_h_a + int_l_count)->h_access_stamp,l_dl_mult_reas_codes_struct_h.h_access_stamp);

				int_l_count	=	int_l_count	+	1;

		}
		
		EXEC SQL CLOSE CMULTREAS_CUR2;
		IS_ANY_ORA_ERROR
	
		*int_p_count	=	int_l_count;

 
     APL_GOBACK_SUCCESS//AIX Warning Removal
      RETURN_SUCCESS:

      APL_IF_DEBUG
       {
         CO_ProcMonitor(APL_OUT_FILE,"Successfully out - DL_Rtv_MultReas\n",NULL,NULL);
       }
      return APL_SUCCESS;

      RETURN_FAILURE:

      APL_IF_DEBUG
       {
        CO_ProcMonitor(APL_OUT_FILE,"Unsuccessfully out - DL_Rtv_MultReas\n",NULL,NULL);
       }
      return APL_FAILURE;
}

