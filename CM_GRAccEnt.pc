








#include "CO_HostStructdef.h"
EXEC SQL INCLUDE SQLCA.H;
#define PAGELENGTH 24		



int CO_Upd_IGrAcctEnt(PRO_GRACCTENT_STRUCT_H  *p_pro_gracctent_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
PRO_GRACCTENT_STRUCT_H l_pro_gracctent_struct_h;
PRO_GRACCTENT_STRUCT_I l_pro_gracctent_struct_i;

EXEC SQL BEGIN DECLARE SECTION;						

EXEC SQL VAR l_pro_gracctent_struct_h.h_module_ind 	IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_proc_num 	   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_batch_dt 	IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_instr_class 		IS STRING; /* Bageshri--10GM */
EXEC SQL VAR l_pro_gracctent_struct_h.h_rec_class 	   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_status_ind 		IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_entry 	IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_dl_client 		IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_currencycode 		IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_value_date 	   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_deal_cd 	   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_db_cr_flag 		IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_splgr_clt_cd 	   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_statistic 	IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_trans_bog 	   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_offset_client 	   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_broker_cd 	IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_nationality 		IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_instr_isin 			IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_special_tax 		IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_indentity_no 		   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_auto_rec_flag 	IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_note_a 		   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_note_b 		   IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_safekeep_pos 		IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_sequence 			IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_reas_cd  IS STRING;
EXEC SQL VAR l_pro_gracctent_struct_h.h_deal_ident 		IS STRING;

EXEC SQL END DECLARE SECTION;

l_pro_gracctent_struct_h.h_trans_amt    			=	0;
l_pro_gracctent_struct_h.h_quantity_items						=	0;
l_pro_gracctent_struct_h.h_fcy_amt					=	0;
l_pro_gracctent_struct_h.h_mis_sprd					=	0;
l_pro_gracctent_struct_h.h_rt							=	0;



memset(&l_pro_gracctent_struct_h, NULL,sizeof(PRO_GRACCTENT_STRUCT_H));
memset(&l_pro_gracctent_struct_i, NULL,sizeof(PRO_GRACCTENT_STRUCT_I));

l_pro_gracctent_struct_h     =  *p_pro_gracctent_struct_h;


if (strlen(l_pro_gracctent_struct_h.h_module_ind) == 0)
	APL_DATA_MISSING("MODULE IDENT",APL_NULL_STRING,APL_NULL_STRING)

if(strlen(l_pro_gracctent_struct_h.h_proc_num) == 0)
	APL_DATA_MISSING("BATCH NUM",APL_NULL_STRING,APL_NULL_STRING)

if(strlen(l_pro_gracctent_struct_h.h_batch_dt) == 0)
	APL_DATA_MISSING("BATCH DATE",APL_NULL_STRING,APL_NULL_STRING)

if(strlen(l_pro_gracctent_struct_h.h_rec_class) == 0)
	APL_DATA_MISSING("REC TYPE",APL_NULL_STRING,APL_NULL_STRING)

if(strlen(l_pro_gracctent_struct_h.h_status_ind) == 0)
	APL_DATA_MISSING("STATUS",APL_NULL_STRING,APL_NULL_STRING)

if(strlen(l_pro_gracctent_struct_h.h_dl_client) == 0)
	APL_DATA_MISSING("CLIENT",APL_NULL_STRING,APL_NULL_STRING)


if(!strcmp(l_pro_gracctent_struct_h.h_instr_class,APL_NULL_STRING)) /* Bageshri--10GM */
	l_pro_gracctent_struct_i.i_instr_class = -1;                     /* Bageshri--10GM */

if (!strcmp(l_pro_gracctent_struct_h.h_entry,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_entry = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_currencycode,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_currencycode =  -1;




if (!strcmp(l_pro_gracctent_struct_h.h_value_date, APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_value_date =  -1;

if (!strcmp(l_pro_gracctent_struct_h.h_deal_cd,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_deal_cd = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_db_cr_flag ,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_db_cr_flag = -1;


if (!strcmp(l_pro_gracctent_struct_h.h_splgr_clt_cd ,APL_NULL_STRING ))
   l_pro_gracctent_struct_i.i_splgr_clt_cd  = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_statistic, APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_statistic =  -1;

if (!strcmp(l_pro_gracctent_struct_h.h_trans_bog,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_trans_bog = -1;

if (l_pro_gracctent_struct_h.h_quantity_items <  0)
   l_pro_gracctent_struct_i.i_quantity_items = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_offset_client ,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_offset_client = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_broker_cd ,APL_NULL_STRING ))
   l_pro_gracctent_struct_i.i_broker_cd  = -1;


if (!strcmp(l_pro_gracctent_struct_h.h_nationality ,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_nationality = -1;


if (!strcmp(l_pro_gracctent_struct_h.h_instr_isin ,APL_NULL_STRING ))
   l_pro_gracctent_struct_i.i_instr_isin  = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_special_tax, APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_special_tax =  -1;

if (!strcmp(l_pro_gracctent_struct_h.h_indentity_no,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_indentity_no = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_auto_rec_flag ,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_auto_rec_flag = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_note_a ,APL_NULL_STRING ))
   l_pro_gracctent_struct_i.i_note_a= -1;

if (!strcmp(l_pro_gracctent_struct_h.h_note_b ,APL_NULL_STRING ))
   l_pro_gracctent_struct_i.i_note_b  = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_safekeep_pos, APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_safekeep_pos =  -1;

if (!strcmp(l_pro_gracctent_struct_h.h_sequence,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_sequence = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_reas_cd ,APL_NULL_STRING))
   l_pro_gracctent_struct_i.i_reas_cd = -1;

if (!strcmp(l_pro_gracctent_struct_h.h_deal_ident ,APL_NULL_STRING ))
   l_pro_gracctent_struct_i.i_deal_ident= -1;
if ( !strcmp(l_pro_gracctent_struct_h.h_module_ind, "B") )
{
	if (l_pro_gracctent_struct_h.h_mis_sprd < 0)
	{
		l_pro_gracctent_struct_i.i_mis_sprd = -1;
	}
}


if(strlen(l_pro_gracctent_struct_h.h_proc_num) != 5)
{
   if(APL_FAILURE == CO_PadString(l_pro_gracctent_struct_h.h_proc_num,'L',5,"0",l_debug_info_ptr))
      APL_GOBACK_FAIL
}

EXEC SQL INSERT INTO PRO_GRACCTENT VALUES
			( :l_pro_gracctent_struct_h INDICATOR :l_pro_gracctent_struct_i );
IS_ANY_ORA_ERROR;

APL_GOBACK_SUCCESS // AIX - Warnings removal

 RETURN_SUCCESS :


      #ifdef SYS_DEBUG
         printf( "Leaving Function  CO_Upd_IGrAcctEnt with success\n");
      #endif

      return(APL_SUCCESS);

   RETURN_FAILURE :



      #ifdef SYS_DEBUG
         printf( "Leaving Function  CO_Upd_IGrAcctEnt with errors\n");
      #endif

      return(APL_FAILURE);

}

	
int CO_Pro_GrAccRep(char *chr_p_batchno,char *p_batch_date,char p_mod_ident,char **argv,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int 		 int_pageno													=	1;
	int		 int_p_currpos												=  0;
	int 		 int_linecount												=	0;
	int 		 int_retval													=	0;
	int       int_l_fetch_count      		           				=  0;
	int 		 int_l_count													=	0;
   int       int_l_periodflg                                 =  0;
	char      chr_h_system_date[APL_DATE_LEN]   					= APL_NULL_STRING;
	char      chr_l_aeflname[100]      								= APL_NULL_STRING;
   char      chr_l_h_client_a[APL_CLIENT_LENGTH]          		=  APL_NULL_STRING;
	char      chr_l_h_ccycode[APL_CCYCODE_LEN]						=  APL_NULL_STRING;
	char      chr_l_h_valuedt[APL_DATE_LEN]							=	APL_NULL_STRING;
	char      chr_l_valuedt[APL_DATE_LEN]							=	APL_NULL_STRING;
	char      chr_l_h_text1[33]											=	APL_NULL_STRING;

	char      chr_l_h_d_c_ind[APL_FLAG_LENGTH]							=	APL_NULL_STRING;	 
	char      chr_l_h_seq[6]												=	APL_NULL_STRING;
	char      chr_l_h_typeofinstr[APL_FLAG_LENGTH]							=	APL_NULL_STRING;
	char      chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN]						=	APL_NULL_STRING;
	char      chr_l_h_txn_ref[31]										=	APL_NULL_STRING;	
	char      dbl_l_amount_a[14]                          		=  APL_NULL_STRING;
   char      chr_l_fcyamount[14]										=	APL_NULL_STRING;
	char		 h_procnum[6]											=  APL_NULL_STRING;
	char      h_batch_dt[APL_DATE_LEN]						=  APL_NULL_STRING;
	char      h_module_ind;
	char		 chr_p_str_modident[2]									=  APL_NULL_STRING;
	char      *chr_l_str_qty_items										=	APL_NULL_STRING;
	long int  int_l_h_qty_items											=	0;
	double	 l_h_transamount										=	0;
   double    l_h_fcy_amount										=	0;
	double    l_h_ae_rate 													=	0;
	double    l_dcredit_ind													=	0.0;
	double	 l_ccredit_ind													=	0.0;
	double    l_dacredit_ind                                      =  0  ;
   double    l_cacredit_ind                                      =  0  ;
	double    chr_l_h_amount												=	0.0;	 
	double    l_doub_sequence												=	0.0;
	double    l_doub_quantity_items										=	0.0;
	long int    int_l_longint_qty_items										=	0;
	short		 l_i_seq													=  0;
	short		 l_i_d_c_ind											=	0;
	short		 l_i_account											=	0;
	short     l_i_ccycode											=	0;
	short     l_i_valuedt											=	0;
	short     l_i_text1												=	0;
	short     l_i_qty_items											=	0;
	short     l_i_transamount										=	0;
	short 	 l_i_txn_ref											=	0; 
	short		 l_i_rep_amt											=  0;
	short		 l_i_rate												=  0;
	short		 l_i_lcy_amt											=  0;
	short     l_i_fcy_amount										=	0;

   FILE  *l_repfile                       =  NULL;
	
	EXEC SQL BEGIN DECLARE SECTION;
	
	EXEC SQL VAR   chr_l_h_client_a             IS STRING;
	EXEC SQL VAR   chr_p_str_modident          IS STRING;
   EXEC SQL VAR   chr_l_h_ccycode             IS STRING;
   EXEC SQL VAR   chr_l_h_valuedt             IS STRING;
   EXEC SQL VAR   chr_l_h_text1               IS STRING;
   EXEC SQL VAR   chr_l_h_d_c_ind             IS STRING;
   EXEC SQL VAR   chr_l_h_seq                 IS STRING;
   EXEC SQL VAR   chr_l_h_instrcode_A              IS STRING;
   EXEC SQL VAR   chr_l_h_txn_ref             IS STRING;
	EXEC SQL END DECLARE SECTION;

	PRO_GRACCTENT_STRUCT_H l_pro_gracctent_struct_ha;
	PRO_GRACCTENT_STRUCT_I l_pro_gracctent_struct_i;
	
	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_module_ind    IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_proc_num     IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_batch_dt   IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_instr_class      IS STRING; /* Bageshri--10GM */
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_rec_class     IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_status_ind       IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_entry    IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_dl_client      IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_currencycode      IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_value_date     IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_deal_cd     IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_db_cr_flag      IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_splgr_clt_cd     IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_statistic   IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_trans_bog     IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_offset_client  	IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_broker_cd    IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_nationality      IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_instr_isin         IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_special_tax      IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_indentity_no     	IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_auto_rec_flag    IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_note_a     	IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_note_b     	IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_safekeep_pos  	IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_sequence          IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_reas_cd  IS STRING;
	EXEC SQL VAR l_pro_gracctent_struct_ha.h_deal_ident      IS STRING;
	EXEC SQL END DECLARE SECTION;

	

	

	memset(chr_h_system_date,APL_NULL_CHAR,APL_DATE_LEN); 
	memset(chr_l_aeflname,APL_NULL_CHAR,100);


	if (strlen(chr_p_batchno) == 0)
		 APL_DATA_MISSING("BATCH NUM",APL_NULL_STRING,APL_NULL_STRING)

	if(strlen(p_batch_date) == 0)
 		 APL_DATA_MISSING("BATCH DATE",APL_NULL_STRING,APL_NULL_STRING) 

	if ( p_mod_ident == ' ')
		 APL_DATA_MISSING("MODULE IDENT",APL_NULL_STRING,APL_NULL_STRING)  

	
	int_l_periodflg=0;
	if(APL_FAILURE == CO_Chk_EMU_Period(p_batch_date,&int_l_periodflg,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
												
	if(p_mod_ident == 'C')
	{
		
		 if (APL_FAILURE == CO_Rtv_RptFileName( "CO",
                                          "Accounting Entries Report File for Core Accounting-Greece",
                                          100,
                                          argv[5],
                                          argv,
                                          &l_repfile,
                                          l_debug_info_ptr ) )
      {
         APL_GOBACK_FAIL
      }
		
		int_retval = CR_Prnt_DLDtPosRptHdr(chr_p_batchno,p_batch_date,l_repfile, int_pageno,l_debug_info_ptr);
		EXEC SQL DECLARE accrepgen CURSOR FOR
					SELECT  	SEQUENCE,
								db_cr_ind,
                        client,
                        currency_cd,
                        VAL_DT,
                        NOTE_A,
                        QUANTITY_ITEMS,
                        DEAL_AMOUNT,
								deal_ident,
								fccy_amt,
								AE_RATE
					FROM    PRO_GRACCTENT
					WHERE    proc_num  = :chr_p_batchno
               AND      BATCH_DATE = :p_batch_date
               ORDER BY SEQUENCE;	

EXEC SQL OPEN accrepgen;
IS_ANY_ORA_ERROR

for(int_l_count=1;;int_l_count++)
{
	EXEC SQL FETCH accrepgen INTO :chr_l_h_seq:l_i_seq,
                    					:chr_l_h_d_c_ind:l_i_d_c_ind,
                        			:chr_l_h_client_a:l_i_account,
                        			:chr_l_h_ccycode:l_i_ccycode,
                        			:chr_l_h_valuedt:l_i_valuedt,
                        			:chr_l_h_text1:l_i_text1,
                        			:int_l_h_qty_items:l_i_qty_items,
                        			:l_h_transamount:l_i_transamount,
											:chr_l_h_txn_ref:l_i_txn_ref,
											:l_h_fcy_amount:l_i_fcy_amount,
											:l_h_ae_rate:l_i_rate;
   IS_ANY_ORA_ERROR	

	if(APL_ZERO_RESULT_SET)
		break;

	if(!strcmp(chr_l_h_d_c_ind,DEBIT_IND))
		l_dcredit_ind=l_dcredit_ind+(l_h_transamount/100);
	else
		l_ccredit_ind=l_ccredit_ind+(l_h_transamount/100);

   

   

   

   EXEC SQL SELECT   instr_code
            INTO     :chr_l_h_instrcode_A
            FROM     dl_deal
            WHERE    client = SUBSTR(:chr_l_h_txn_ref,1,INSTR(:chr_l_h_txn_ref,'^')-1)
            AND      IDENTIY_NO= SUBSTR(:chr_l_h_txn_ref,INSTR(:chr_l_h_txn_ref,'^')+1);

   

 IS_ANY_ORA_ERROR
		l_doub_sequence = atoi(chr_l_h_seq);	
	   CO_ToStr(l_doub_sequence,5,0,chr_l_h_seq);

		if(APL_FAILURE == CO_ToStr(l_h_transamount/100,14,2,dbl_l_amount_a))
		{
			APL_GOBACK_FAIL
		}
		if(APL_FAILURE == CO_ToStr(l_h_fcy_amount/100,14,2,chr_l_fcyamount))
		{
			APL_GOBACK_FAIL
		}
		
		strncpy(chr_l_valuedt,chr_l_h_valuedt,10);
		chr_l_valuedt[10]='\0';

		if(l_i_qty_items == -1 )
		{
			strcpy(chr_l_str_qty_items,"              ");
		}
		else
		{
			
			int_l_longint_qty_items = int_l_h_qty_items;
			chr_l_str_qty_items = ltoa(int_l_longint_qty_items);
			if(APL_FAILURE == CO_PadString(chr_l_str_qty_items,'L',14," ",l_debug_info_ptr))
     		{
         	APL_GOBACK_FAIL
      	}
		}
      if(APL_FAILURE == CO_PadString(chr_l_h_instrcode_A,'R',8," ",l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}


if(int_l_periodflg != 2)
{
	fprintf(l_repfile,"%s %s       %s %s %s       %s %-17s %s %s\n",chr_l_h_seq,chr_l_h_d_c_ind,chr_l_h_client_a,dbl_l_amount_a,chr_l_h_ccycode,chr_l_valuedt,chr_l_h_text1,chr_l_str_qty_items,chr_l_h_instrcode_A);
}
else
{
	fprintf(l_repfile,"%s %s       %s %s %s       %s %-17s %s %s %s %lf\n",chr_l_h_seq,chr_l_h_d_c_ind,chr_l_h_client_a,dbl_l_amount_a,chr_l_h_ccycode,chr_l_valuedt,chr_l_h_text1,chr_l_str_qty_items,chr_l_h_instrcode_A,chr_l_fcyamount,l_h_ae_rate/10000000);
}

int_linecount++;
	if(int_linecount==(PAGELENGTH-12))
	{
		int_pageno ++;
		int_retval =CR_Prnt_DLDtPosRptHdr(chr_p_batchno,p_batch_date,l_repfile,int_pageno,l_debug_info_ptr);
		{
			if(int_retval == APL_FAILURE)
				APL_GOBACK_FAIL
   	}             
	int_linecount = 0;
	}

  }

		fprintf(l_repfile,"\n\n\n--------------------------------------------------------------------------------------------------------------------------");

		fprintf(l_repfile,"\nTotal :");
      fprintf(l_repfile,"\nDebit Controls Total                  %f",l_dcredit_ind);
      fprintf(l_repfile,"\nCredit Controls Total                 %f",l_ccredit_ind);
      if(l_dcredit_ind != l_ccredit_ind)
      {

      fprintf(l_repfile,"\nDifference :                          %f",fabs(l_dcredit_ind-l_ccredit_ind));
		
      fprintf(l_repfile,"\n(Diff in debit totals and credit totlas due to rounding off;Debit and Credit totals equated)");
      }

      fprintf(l_repfile,"\n\n\n--------------------------------------------------------------------------------------------------------------------------");

      fprintf(l_repfile,"\n                                                          END OF REPORT");

		fflush(l_repfile);

}

	

	else if( p_mod_ident == 'B')
	{
		if (APL_FAILURE == CO_Rtv_RptFileName( "BA",
                                          "Accounting Entries Report File for Billing-Greece",
                                          100,
                                          argv[5],
                                          argv,
                                          &l_repfile,
                                          l_debug_info_ptr ) )
      {
         APL_GOBACK_FAIL
      }
		
	strcpy(h_procnum,chr_p_batchno);
	strcpy(h_batch_dt,p_batch_date);
	h_module_ind = p_mod_ident;
	
	chr_p_str_modident[0] = p_mod_ident;
	chr_p_str_modident[1] = '\0';

	if (APL_FAILURE == IV_AccEntIfIfn(chr_p_batchno,chr_l_aeflname,l_debug_info_ptr))
      {
          CO_InsertErr(l_debug_info_ptr,ERR_HANDOFFFILE_NOTGEN,
                        APL_NULL_STRING,
                         APL_NULL_STRING,APL_NULL_STRING,
                         __LINE__,__FILE__);
          APL_GOBACK_FAIL
      }


	 

    EXEC SQL DECLARE baccrepgen CURSOR FOR
    SELECT * FROM PRO_GRACCTENT
	 WHERE	BATCH_DATE	=:h_batch_dt 	
 		  AND MODULE_IND	=:h_module_ind				
  		  AND PROC_NUM 	=:h_procnum 
    ORDER BY SEQUENCE;

    EXEC SQL OPEN baccrepgen;

    IS_ANY_ORA_ERROR;

	 if (sqlca.sqlcode <0)
	 {
		fprintf(APL_OUT_FILE,"DB ERROR IN IGRACCTENT\n");
		APL_GOBACK_FAIL
	 }
	
	 for(;;)
    {
		  EXEC SQL FETCH baccrepgen into l_pro_gracctent_struct_ha:l_pro_gracctent_struct_i;
 		  IS_ANY_ORA_ERROR

         if (sqlca.sqlcode == 1403)
         {
				if (int_l_fetch_count  == 0)
				{
					CO_InsertErr(l_debug_info_ptr,ERR_BATCHNO_NOTFND,
										chr_p_batchno, APL_NULL_STRING,
										APL_NULL_STRING,__LINE__,__FILE__); //AIX -Warning Removal

					fprintf(APL_OUT_FILE,"No records in IGRACCTENT TABLE\n");
					APL_GOBACK_FAIL
				}
				else
				{

					fprintf(APL_OUT_FILE,"NO MORE RECORDS IN IGRACCTENT.\n");

      			if (APL_FAILURE == 
									EI_Prn_AERpt_Foot(l_repfile,chr_l_aeflname,
															&l_ccredit_ind,&l_dcredit_ind,
              	   								   &l_cacredit_ind, &l_dacredit_ind,
															chr_p_str_modident, chr_p_batchno,
															&int_p_currpos, &int_pageno,
															chr_h_system_date,
															g_mt_commonsys_params_struct_h.dom_ccy,
                        							l_debug_info_ptr))
      			{
         			fprintf(APL_OUT_FILE,"Failure in EI_Prn_AERpt_Foot()\n");
         			APL_GOBACK_FAIL
      			}

            	break;
				}
         }	

			int_l_fetch_count++;

			if (int_l_fetch_count == 1)
			{
				if (APL_FAILURE == CO_RtvSysDt(chr_h_system_date,l_debug_info_ptr) )
               {
                  fprintf(APL_OUT_FILE,"Failed to Get System Date\n");
                  APL_GOBACK_FAIL
               }

		 } 
		
		

		 l_pro_gracctent_struct_ha.h_fcy_amt /= 100.0;
		 l_pro_gracctent_struct_ha.h_lcy_amount /= 100.0;
		 l_pro_gracctent_struct_ha.h_rep_amount /= 100.0;

		 if (APL_FAILURE == EI_Prn_AERpt_Det_Gr( l_repfile,
							  						   chr_l_aeflname,
                       							chr_p_str_modident,
                       							chr_p_batchno,
                       							&l_pro_gracctent_struct_ha,
                       							&int_p_currpos,
                       							&int_pageno,
                       							chr_h_system_date,
                       							l_debug_info_ptr))
		{
			fprintf(APL_OUT_FILE,"Failure in EI_Prn_AERpt_Det()\n");
			APL_GOBACK_FAIL
		}
		
      if (!strcmp(l_pro_gracctent_struct_ha.h_db_cr_flag , DEBIT_IND))
      {
         l_dcredit_ind  = l_dcredit_ind + l_pro_gracctent_struct_ha.h_lcy_amount;
         l_dacredit_ind = l_dacredit_ind + atof(l_pro_gracctent_struct_ha.h_dl_client);
      }

      if (!strcmp(l_pro_gracctent_struct_ha.h_db_cr_flag ,CREDIT_IND_B))
      {
          l_ccredit_ind  = l_ccredit_ind + l_pro_gracctent_struct_ha.h_lcy_amount;
          l_cacredit_ind = l_cacredit_ind + atof(l_pro_gracctent_struct_ha.h_dl_client);
      }
	
	 }
		
		EXEC SQL CLOSE baccrepgen;
		IS_ANY_ORA_ERROR

 	 }

APL_GOBACK_SUCCESS // AIX - Warnings removal
	

RETURN_SUCCESS:

	return(APL_SUCCESS);

RETURN_FAILURE:

	return(APL_FAILURE);

}


int CR_Prnt_DLDtPosRptHdr(char *chr_p_batchno,char *p_batch_date,FILE *p_repfile,int int_pageno,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char chr_l_h_typeofinstr[APL_FLAG_LENGTH]			=	APL_NULL_STRING;
	char chr_l_h_codedesc[41]	=	APL_NULL_STRING;
   int int_l_periodflg = 0;
	EXEC SQL VAR chr_l_h_codedesc IS STRING;
   

   if(APL_FAILURE == CO_Chk_EMU_Period(p_batch_date,&int_l_periodflg,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
	
		fprintf(p_repfile,"\n                                                  HANDOFF FILE REPORT FOR %s\n",chr_p_batchno);
      fprintf(p_repfile,"                                                  -----------------------------\n");
      fprintf(p_repfile,"%.11s",p_batch_date);
      fprintf(p_repfile,"                                           %s",g_mt_commonsys_params_struct_h.ca_identname);
      fprintf(p_repfile,"                                             Page %d\n\n",int_pageno);

	  EXEC SQL SELECT TYPEOFINSTR
               INTO :chr_l_h_typeofinstr
               FROM PRO_GRACCTENT
               WHERE proc_num   =  :chr_p_batchno
               AND   BATCH_DATE =  :p_batch_date
					AND   rownum <2;	

	  IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_VAL_NF,
													    "Instrurity Type",
														 chr_p_batchno,
														 p_batch_date)	
	
      EXEC SQL SELECT map_desc
               INTO :chr_l_h_codedesc
               FROM  PRO_SGENSTAT
               WHERE map_type = 'GR_ACCENT'
					AND   map_val = :chr_l_h_typeofinstr;

	  IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_VAL_NF,
													    "Code Desc",
														 chr_l_h_typeofinstr,
														 APL_NULL_STRING)	
														
		if(chr_l_h_typeofinstr[0]=='A')
		{
			fprintf(p_repfile,"                                                             %s\n",chr_l_h_codedesc);
         fprintf(p_repfile,"                                                            -----");

		}
		else
		{
      fprintf(p_repfile,"                                                       %s\n",chr_l_h_codedesc);
      fprintf(p_repfile,"                                                         ----------");
		}
      fprintf(p_repfile,"\n\n\n-------------------------------------------------------------------------------------------------------------------------------");
		if(int_l_periodflg != 2)
		{
      	fprintf(p_repfile,"\n  Seq Dr./Cr. Account            Amount Currency  Value      Description                 Qty. Instrurity");
		}
		else
		{
      	fprintf(p_repfile,"\n  Seq Dr./Cr. Account            Amount Currency  Value      Description                 Qty. Instrurity     Fcy Amount       Rate");
		}
      fprintf(p_repfile,"\n  No.                                             Date");
      fprintf(p_repfile,"\n-------------------------------------------------------------------------------------------------------------------------------\n");	

APL_GOBACK_SUCCESS // AIX - Warnings removal

RETURN_SUCCESS:
	return(APL_SUCCESS);
RETURN_FAILURE:
	return(APL_FAILURE);
}






int CM_DelIGRACCTENTFn(char *chr_p_batchno,
							  char *chr_p_batchdate,
							  char chr_p_modident,
							  INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
							  DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct   sqlca sqlca;

	#ifdef APL_THREADS
       APL_SET_CONTEXT
       EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	
	 	
	if ( chr_p_modident == ' ')
	{
 		APL_DATA_MISSING("MODULE_IDENTIFIER",APL_NULL_STRING,APL_NULL_STRING);
	}

	if (!strcmp(chr_p_batchno ,APL_NULL_STRING))
   {
      APL_DATA_MISSING("PROC_NUM",APL_NULL_STRING,APL_NULL_STRING);
   }

	if (!strcmp(chr_p_batchdate ,APL_NULL_STRING))
   {
      APL_DATA_MISSING("PROC_DT",APL_NULL_STRING,APL_NULL_STRING);
   }
	
	if(CO_ChkErr(*l_debug_info_ptr)== APL_SUCCESS)
         APL_GOBACK_FAIL

	
	EXEC SQL DELETE PRO_GRACCTENT
				WHERE PROC_NUM = :chr_p_batchno
				AND BATCH_DATE = :chr_p_batchdate
				AND MODULE_IND = :chr_p_modident;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_BATCHNO_NOTFND,
													  APL_NULL_STRING,
													  APL_NULL_STRING,
													  APL_NULL_STRING);		

APL_GOBACK_SUCCESS;


   RETURN_SUCCESS:

      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
CM_DelIGRACCTENTFn().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }
      return APL_SUCCESS;

   RETURN_FAILURE:

      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
CM_DelIGRACCTENTFn().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }
      return APL_FAILURE;
}
