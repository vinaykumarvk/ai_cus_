/*
 * COPYRIGHT NOTICE
 *
 * Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 * These materials are confidential and proprietary to Polaris Software Lab Limited
 * and no part of these materials  should be  reproduced, published, transmitted or 
 * distributed in any form or by  any  means, electronic, mechanical, photocopying, 
 * recording or otherwise, or stored in any information storage or retrieval system
 * of any nature nor should the materials be disclosed to third parties or  used in
 * any other manner for which this is  not  authorized, without  the  prior express 
 * written authorization of Polaris Software Lab Limited.
 *
 ************************************************************************************
 *
 * Module Name         :         Deal Processing
 *
 * File Name           :         DL_PassDPInstrn.pc
 *
 * Description         :         This file contains all functions for Passing 
 *                               Payin/Payout Accounting Entries.
 ************************************************************************************
 *
 *            Version Control Block
 *
 * Date        Version		Author              Description		RFS No.
 * ---------   --------	 ---------------  ---------------------------  --------------
 * 25/03/2006  1.0.1.0   Amit Bhosale     New File                     HDFCDL_014
 * ----------------------------------------------------------------------------------
 * 09-Jun-2010 1.0.1.13  Naren V          NSDL DP Ins File Format Cha  ISKB_3298
 *                                        nges -  File format  length
 *                                        changes  were  incorporated 
 *                                        accordingly as per the revi
 *                                        sed formats of  Import  and
 *                                        Export files  to  and  from  
 *                                        the NSDL depository.
 * ----------------------------------------------------------------------------------
 * 12-Nov-2010 1.0.1.14  Naren V          Program modified for provid  ISKB_3298
 *                                        ing UAT fix  for  ISKB_3298 
 *                                        changes. 
 * ----------------------------------------------------------------------------------
 * 28-Nov-2010 1.0.1.15  Naren V          Program modified for incorp  ISKB_3298
 *                                        porating the chgs initiated 
 *                                        based on the 2 observations 
 *                                        raised in the UAT regarding
 *                                        912 file format.
 *                                        1. Batch No shd not be same
 *                                        as that of 904.
 *                                        2. Source client should  be
 *                                        Clearing Member ID  instead
 *                                        of Benefitiary Client ID.
 * 03-July-2014 1.0.1.16 Prateek Singh    DIS related Changes for 904
 *                                        905 and 912 Files            ISKB_6788
 *----------------------------------------------------------------------------------
 * 27-Sept-2019 1.0.1.17 Shradha V        Program modified for Genera  ISKB_12434
 *                                         ting 934 instruction 
 *                                        for on market PMS deals, 
 *                                        if CMBP id is maintained for
 *                                        client.
 * 29-03-2022   1.0.1.18 kotubabu         Linux Migration         Kotak Implementation
 ************************************************************************************/


#include "Intellect_Common.h"
#include "CO_HostStructdef.h"
#include "DL_Interface.h"
#include<stdlib.h>
#include<DL_Csd.h>

#define DATA_FIELD_SEPRTR ''
#define DATA_VALUE_SEPRTR ''
#define IDO_TXN_CODE "912"

/* Added for ISKB_3298 Changes - Jun2010 - Naren V */

/* Defining macro for using the field lengths in generic usage. Any future change 
   requirements  can be  handled with  the change of legth value  of  the  macro. */

#define CMEMSET(z)           memset(z,'\0',sizeof(z))        /* For Memsetting variables*/
#define DP_BATCH_NO_LEN                             8        /* For All Around Usage    */
#define DP_NO_OF_RECS_LEN                           6        /* For Header Record Usage */
#define DP_SERIAL_NO_LEN                            6        /* For Detail Record Usage */
#define DP_INT_REF_NO_LEN                          36        /* For Detail Record Usage */
#define DP_SEND_REF_LEN                            51        /* For Detail Record Usage */
#define DP_QTY_DGTS_1                              18
#define DP_FORMAT_FILLER_LEN                       50        /* For Detail Record Usage */
#define DP_FORMAT_ZEROS                           100

int  g_i_batch_no_len    = 0; 
int  g_i_serial_no_len   = 0; 
int  g_i_no_of_recs_len  = 0;
int  g_i_qty_digits_1    = 0;

char chr_g_format_zeros [DP_FORMAT_ZEROS + 1] = APL_NULL_STRING;  // +1 Char for Null Term
char chr_g_format_filler[DP_FORMAT_ZEROS + 1] = APL_NULL_STRING;  // +1 Char for Null Term

// Added for PMS - 06082015 - Start
char  l_sys_dt[APL_DATE_LEN]   =  APL_NULL_STRING;
int l_int_num1=0; 
int i=0;
// Added for PMS - 06082015 - End
EXEC SQL BEGIN DECLARE SECTION;

EXEC SQL VAR chr_g_format_zeros  IS STRING;
EXEC SQL VAR chr_g_format_filler IS STRING;

EXEC SQL END DECLARE SECTION;

/* End of ISKB_3298 Changes - Jun2010 - Naren V */

 char **temp= NULL;
 char **temp1= NULL;
 /* Added by kotubabu for Linux Migration -Start*/
 #ifdef OS_LINUX
 FILE *g_logfile= NULL;
 #else
 FILE *g_logfile = APL_OUT_FILE;
 #endif
 /* Added by kotubabu  for Linux Migration -END*/

EXEC SQL INCLUDE SQLCA.H;

char  chr_g_progname[APL_BATCH_PROGNAME_LEN]          =  APL_NULL_STRING;
char  chr_g_key[APL_BATCH_KEY_LEN]                    =  APL_NULL_STRING;
char  chr_g_start_date[APL_DATE_LEN]                  =  APL_NULL_STRING;

FILE  *l_ptr_new_file = NULL;
FILE  *l_ptr_new_file_904 = NULL;
short int_l_new_file_format = 0;
int g_batchseq=0;

/******************************************************************************************************  
 *                            DP Instructions Passing Main Process Start                              *
 ******************************************************************************************************/

int main(int argc,char **argv) //AIX-Warnings Removal 
{
	char  chr_g_log_buffer[BUFFER_LEN] = APL_NULL_STRING;	
	char chr_l_batch_no[APL_DP_BATCH_NO_LEN]= APL_NULL_STRING;
	int int_num=0;
	int l_int_num1=0;
	int i=0;
	int counter=0;
	char chr_l_mode[2]= APL_NULL_STRING;
	char chr_l_client[11]=  APL_NULL_STRING;
	char chr_l_trans_type[4]=  APL_NULL_STRING;
	char chr_l_deal_refno_str[3999]=  APL_NULL_STRING;	 
	short i_deal_refno_str=0;
	short i_client=0;
	short i_trans_type=0;
	

	/* Added by kotubabu for Linux Migration-Start*/
    #ifdef OS_LINUX
     g_logfile = APL_OUT_FILE;
    #endif
   /* Added by kotubabu for Linux Migration-End*/
	/* Added By Sana for DP Passing Reset Start */
	char chr_l_depo_ind[5] = APL_NULL_STRING;
	char chr_l_instr_code[11] = APL_NULL_STRING;
	char chr_l_deal_cd = APL_NULL_CHAR;
	double l_deal_qty = 0.0;
	short i_l_depo_ind=0;
	short i_l_instr_code=0;
	short i_l_deal_qty=0;
	short i_l_deal_cd=0;
	/* Added By Sana for DP Passing Reset End */
	
   DEBUG_INFO_STRUCT_H **l_debug_info_ptr= NULL;
   INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;

	/* Added for ISKB_3298 Changes - Jun2010 - Naren V */

	g_i_qty_digits_1   = DP_QTY_DGTS_1    ;
	g_i_batch_no_len   = DP_BATCH_NO_LEN  ;
	g_i_serial_no_len  = DP_SERIAL_NO_LEN ;
	g_i_no_of_recs_len = DP_NO_OF_RECS_LEN;

	memset(chr_g_format_zeros , '0', sizeof(chr_g_format_zeros ));
	memset(chr_g_format_filler, ' ', sizeof(chr_g_format_filler));

	chr_g_format_zeros  [DP_FORMAT_ZEROS] = '\0';
	chr_g_format_filler [DP_FORMAT_ZEROS] = '\0';

	/* End of ISKB_3298 Changes - Jun2010 - Naren V */
	
	l_debug_info_ptr = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *));

   if(CO_Get_DBConnect(l_debug_info_ptr) == APL_FAILURE)
   {
		APL_GOBACK_FAIL
   }

   if (APL_FAILURE == CO_Rtv_RptFileName( "DPInPS",
            APL_LOGFILE_DESC,
                 100,
                 argv[5],
                 argv,
                 &g_logfile,
                 l_debug_info_ptr ))
   {	
		printf("\n Error in CO_Rtv_RptFileName \n");
/*		CO_ProcMonitor(g_logfile, "Unable to Retrive Report Filename", NULL, NULL);
*/	    APL_GOBACK_FAIL
   }

	EXEC SQL COMMIT;
	IS_ANY_ORA_ERROR
	
	if ( CO_RtvSysParams(l_debug_info_ptr) == APL_FAILURE)
	{
		CO_ProcMonitor(g_logfile, "Returned Failure from CO_RtvSysParams()", NULL, NULL);
		APL_GOBACK_FAIL
	}


	if (APL_FAILURE == CO_SplitStr( argv[9],
                '|',
                &int_num,
                &temp ))
   {
	   fprintf(g_logfile,"Returns Unsuccessfully from CO_SplitStr\n");
	   APL_GOBACK_FAIL
   }

	
	 if (int_num != 2)
		{
			printf("\n Total no of arguments are |%d|", int_num);
			CO_ProcMonitor(g_logfile, "Improper Number of Arguements", NULL, NULL);
			
			APL_GOBACK_FAIL
		}

		
	 strcpy(chr_g_progname,  argv[0]);
	 strcpy(chr_g_key,       argv[1]);
	 strcpy(chr_g_start_date,   argv[2]);
	 strcpy(l_intl_env_data_h.usr, argv[3]);


	 
		strcpy(chr_l_batch_no,temp[0]);
		strcpy(chr_l_mode,temp[1]);
		
		sprintf(chr_g_log_buffer,"BATCH NO=|%s|",chr_l_batch_no);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
	
	if(strcmp(chr_l_mode,"P")==0)
	{
		fprintf(g_logfile,"******** The Mode is PASSING ********");
			
			if(strstr(chr_l_batch_no,"I") != NULL)
			{
				CO_ProcMonitor(g_logfile,"******** Passing InterDP Instructions ********",NULL,NULL);
				
			if(APL_FAILURE == Proc_PassInterDP_Instrn( chr_l_batch_no,
											  argv,	
											  g_logfile,
											  &l_intl_env_data_h,
											  l_debug_info_ptr))
				{	
					CO_ProcMonitor(g_logfile, "Proc_PassInterDP_Instrn Returned Faliure", NULL, NULL);
					APL_GOBACK_FAIL
				}
			}
			else
			{
				if(APL_FAILURE == Proc_PassDP_Instrn( chr_l_batch_no,
												  argv,	
												  g_logfile,
												  &l_intl_env_data_h,
												  l_debug_info_ptr))
				{	
					CO_ProcMonitor(g_logfile, "Proc_PassDP_Instrn Returned Faliure", NULL, NULL);
					APL_GOBACK_FAIL
				}
			
			}
/****************** If Batch No Contains "I"  ************************************/

		

	}	  
	else if(strcmp(chr_l_mode,"R")==0)
	{
		CO_ProcMonitor(g_logfile,"******** The Mode is RESET ********",NULL,NULL);

	  if(strstr(chr_l_batch_no,"I") != NULL)
	  {

		  fprintf(g_logfile,"\n Reseting InterDP Batch \n");
		  printf("\n chr_l_batch_no=|%s| \n",chr_l_batch_no);

		   EXEC SQL DECLARE cur_reset_batch_interdp CURSOR FOR
				SELECT  b.cln_code,deal_ref_nos
				FROM DL_DPINSTRS a,MT_CLI_DEPO_MAP b
				WHERE SUBSTR(a.client,9,16)=b.cln_depo_map_client_id
				AND a.batch_no=:chr_l_batch_no
				AND a.STATUS='G'
				ORDER BY a.serial_no;

			EXEC SQL OPEN cur_reset_batch_interdp;
  	  }
 	  else
	  {	  
		   fprintf(g_logfile,"\n Reseting NORMAL Batch \n");

			EXEC SQL DECLARE cur_reset_batch_normal CURSOR FOR				
				 SELECT  b.cln_code,deal_ref_nos,TRANS_TYPE
				 FROM DL_DPINSTRS a,MT_CLI_DEPO_MAP b
				 WHERE a.client=b.cln_depo_map_client_id
				 AND a.batch_no=:chr_l_batch_no
				 AND a.STATUS='G'
				 ORDER BY a.serial_no;

			EXEC SQL OPEN cur_reset_batch_normal;
		}
			IS_ANY_ORA_ERROR
			
			for(;;)
			{
			  if(strstr(chr_l_batch_no,"I") != NULL)
			  {
					EXEC SQL FETCH cur_reset_batch_interdp INTO :chr_l_client:i_client,
															 :chr_l_deal_refno_str:i_deal_refno_str,:chr_l_trans_type:i_trans_type;
			  }
  			  else
			  {
				 	EXEC SQL FETCH cur_reset_batch_normal INTO :chr_l_client:i_client,
					                                              :chr_l_deal_refno_str:i_deal_refno_str,:chr_l_trans_type:i_trans_type;
			  }				 
				if(APL_ZERO_RESULT_SET)
				{
					if(counter==0)
					{
						CO_ProcMonitor(g_logfile,"No Records Found in cur_reset_batch CURSOR" ,NULL,NULL);				
						CO_ProcMonitor(g_logfile,"No Records to be RESET for Selected Batch Number" ,NULL,NULL);
						APL_GOBACK_FAIL
					}
					break;
				}
				IS_ANY_ORA_ERROR
				
				counter++;	
					
				sprintf(chr_g_log_buffer,"Deal Ref No String=|%s|",chr_l_deal_refno_str);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
	
				if(APL_FAILURE == CO_SplitStr(chr_l_deal_refno_str,
								',',
								&l_int_num1,&temp1))
					{
						CO_ProcMonitor(g_logfile, "Failure from StrSplitFn", NULL, NULL);
						APL_GOBACK_FAIL

					}
	
				sprintf(chr_g_log_buffer,"No of Records=|%d| \n",l_int_num1);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);	
				
				for(i=0;i<l_int_num1;i++)
				{

					Alert("temp1[i]==>|%s|",temp1[i]);
					EXEC SQL UPDATE dl_deal SET nds_blk_dt=NULL
										 WHERE client=:chr_l_client
										 AND identiy_no=:temp1[i];
					if(sqlca.sqlcode)
					{
						sprintf(chr_g_log_buffer," Error Updating DEAL NDS_BLK_DT=|%d|",sqlca.sqlcode);
						CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
					}
					
					IS_ANY_ORA_ERROR
					if((strcmp(chr_l_trans_type,"904")==0) || (strcmp(chr_l_trans_type,"925")==0))
					{
						EXEC SQL UPDATE DL_DPGEN_DET SET DP_GENERATED='N'
											 WHERE DL_REF_NO=:temp1[i]
											 AND DP_GENERATED='Y';
						if(sqlca.sqlcode)
						{
							sprintf(chr_g_log_buffer," Error Updating DL_DPGEN_DET DP_GENERATED=|%d|",sqlca.sqlcode);
							CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
						}
						
						IS_ANY_ORA_ERROR
					}

				}

		}	/*****  END OF CURSOR FOR LOOP		****/	

  		if(strstr(chr_l_batch_no,"I") !=NULL)
		  {
				EXEC SQL CLOSE cur_reset_batch_interdp;
		  }
		  else		
		  {
				EXEC SQL CLOSE cur_reset_batch_normal;
				
		  }
		IS_ANY_ORA_ERROR		
		
		
		EXEC SQL DELETE FROM DL_DPINSTRS WHERE batch_no=:chr_l_batch_no;

			sprintf(chr_g_log_buffer," Error DELETE FROM DL_DPINSTRS=|%d|",sqlca.sqlcode);
			CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

		IS_ANY_ORA_ERROR
		
		EXEC SQL DELETE FROM DL_DPINSTR_HDR WHERE batch_no=:chr_l_batch_no;

			sprintf(chr_g_log_buffer," Error DELETE FROM DL_DPINSTR_HDR=|%d|",sqlca.sqlcode);
			CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

		IS_ANY_ORA_ERROR
		

		EXEC SQL DELETE FROM DL_DPINSTR_TRAIL WHERE batch_no=:chr_l_batch_no;

			sprintf(chr_g_log_buffer," Error DELETE FROM DL_DPINSTR_TRAIL=|%d|",sqlca.sqlcode);
			CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

		IS_ANY_ORA_ERROR
			
	}
	/* Added By Sana for DP Passing Reset Start */
	else if(strcmp(chr_l_mode,"PR")==0)
	{
		CO_ProcMonitor(g_logfile,"******** The Mode is RESET OF PASSING********",NULL,NULL);

		  if(strstr(chr_l_batch_no,"I") != NULL)
		  {

				 fprintf(g_logfile,"\n Reseting InterDP Batch \n");
				printf("\n chr_l_batch_no=|%s| \n",chr_l_batch_no);

					EXEC SQL DECLARE cur_reset_pass_interdp CURSOR FOR
					SELECT  b.cln_code, instr_code, qty, depo_ind, deal_cd
					FROM DL_DPINSTRS a,MT_CLI_DEPO_MAP b
					WHERE SUBSTR(a.client,9,16)=b.cln_depo_map_client_id
					AND a.batch_no=:chr_l_batch_no
					AND a.STATUS='P'
					ORDER BY a.serial_no;

					EXEC SQL OPEN cur_reset_pass_interdp;
		  }
		  else
		  {	  
					fprintf(g_logfile,"\n Reseting NORMAL Batch \n");

					 EXEC SQL DECLARE cur_reset_pass_normal CURSOR FOR				
					 SELECT  b.cln_code, instr_code, qty, depo_ind, deal_cd
					 FROM DL_DPINSTRS a,MT_CLI_DEPO_MAP b
					 WHERE a.client=b.cln_depo_map_client_id
					 AND a.batch_no=:chr_l_batch_no
					 AND a.STATUS='P'
					 ORDER BY a.serial_no;

					EXEC SQL OPEN cur_reset_pass_normal;
		}
		IS_ANY_ORA_ERROR
			
		for(;;)
		{
				  if(strstr(chr_l_batch_no,"I") != NULL)
				  {
						EXEC SQL FETCH cur_reset_pass_interdp INTO :chr_l_client:i_client,
											 :chr_l_instr_code:i_l_instr_code,
											 :l_deal_qty:i_l_deal_qty,
											 :chr_l_depo_ind:i_l_depo_ind,
											 :chr_l_deal_cd:i_l_deal_cd;
				  }
				  else
				  {
						EXEC SQL FETCH cur_reset_pass_normal INTO :chr_l_client:i_client,
											:chr_l_instr_code:i_l_instr_code,
											:l_deal_qty:i_l_deal_qty,
											:chr_l_depo_ind:i_l_depo_ind,
											:chr_l_deal_cd:i_l_deal_cd;
				  }				 
				  if(APL_ZERO_RESULT_SET)
				  {
						if(counter==0)
						{
							printf("No Records Found in cur_reset_batch CURSOR");				
							CO_ProcMonitor(g_logfile,"No Records Found to Reset the Passing for Selected Batch Number" ,NULL,NULL);
							CO_ProcMonitor(g_logfile,"Exitting the Reset of Passing process" ,NULL,NULL);
							APL_GOBACK_SUCCESS
						}
						break;
				}
				IS_ANY_ORA_ERROR
					
				counter++;	
						
				printf("Deal Qty is |%lf|\n",l_deal_qty);	
				/*if((strcmp(chr_l_deal_cd,"1") == 0) || (strcmp(chr_l_deal_cd,"3") == 0))
				{
					EXEC SQL UPDATE DL_SAFEK set DP_DEL = DP_DEL - :l_deal_qty, VAL_DEL = VAL_DEL + :l_deal_qty
								WHERE CLIENT = :chr_l_client
									AND INSTR_CODE = :chr_l_instr_code
									AND LOCATION_CD = :chr_l_depo_ind;
				}
				if((strcmp(chr_l_deal_cd,"2") == 0) || (strcmp(chr_l_deal_cd,"4") == 0))
				{
					EXEC SQL UPDATE DL_SAFEK set DP_REC = DP_REC - :l_deal_qty, VAL_REC = VAL_REC + :l_deal_qty
								WHERE CLIENT = :chr_l_client
									AND INSTR_CODE = :chr_l_instr_code
									AND LOCATION_CD = :chr_l_depo_ind;
				}*/
				/* Call to update the DP buckets */
				 if (APL_FAILURE == DL_Mod_Posn(chr_l_client,
									chr_l_instr_code,
									chr_l_depo_ind,
									"",
									'D',
									chr_l_deal_cd,
									&l_deal_qty,
									'D',
									"FREE",
									l_debug_info_ptr))
				{
					
						CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
						sprintf(chr_g_log_buffer,"Not Enough Positions For Client=|%s| Instrument=|%s| At Depository=|%s|\n",chr_l_client,chr_l_instr_code,chr_l_depo_ind);
						CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
						CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
						APL_GOBACK_FAIL
				}
				/* Call to update the Confirm buckets */
				 if (APL_FAILURE == DL_Mod_Posn(chr_l_client,
									chr_l_instr_code,
									chr_l_depo_ind,
									"",
									'C',
									chr_l_deal_cd,
									&l_deal_qty,
									'I',
									"FREE",
									l_debug_info_ptr))
				{
					
						CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
						sprintf(chr_g_log_buffer,"Not Enough Positions For Client=|%s| Instrument=|%s| At Depository=|%s|\n",chr_l_client,chr_l_instr_code,chr_l_depo_ind);
						CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
						CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
						APL_GOBACK_FAIL
				}
				


		}	/*****  END OF CURSOR FOR LOOP		****/	

		if(strstr(chr_l_batch_no,"I") !=NULL)
		{
					EXEC SQL CLOSE cur_reset_pass_interdp;
		}
		else		
		{
					EXEC SQL CLOSE cur_reset_pass_normal;
					
		}
		IS_ANY_ORA_ERROR		
			
			
		EXEC SQL UPDATE DL_DPINSTRS SET STATUS = 'G' WHERE batch_no=:chr_l_batch_no;

		sprintf(chr_g_log_buffer," Error updating DL_DPINSTRS=|%d|",sqlca.sqlcode);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

		IS_ANY_ORA_ERROR
			
		EXEC SQL UPDATE DL_DPINSTR_HDR SET STATUS = 'G' WHERE batch_no=:chr_l_batch_no;

		sprintf(chr_g_log_buffer," Error updating DL_DPINSTR_HDR=|%d|",sqlca.sqlcode);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

		IS_ANY_ORA_ERROR
			

		EXEC SQL UPDATE DL_DPINSTR_TRAIL SET STATUS = 'G' WHERE batch_no=:chr_l_batch_no;

		sprintf(chr_g_log_buffer," Error updating DL_DPINSTR_TRAIL=|%d|",sqlca.sqlcode);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

		IS_ANY_ORA_ERROR
			
	}
	/* Added By Sana for DP Passing Reset End */

	APL_GOBACK_SUCCESS
	
	RETURN_SUCCESS :
	{

		if(APL_FAILURE == BT_Status_Completed(argv[0],argv[1],argv[2],l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}
		EXEC SQL COMMIT WORK;
		if(sqlca.sqlcode != 0)
			APL_GOBACK_FAIL
		exit(0);
	}
	RETURN_FAILURE :
	{
		CO_ProcMonitor(g_logfile, "Failed To Create HandOff DP Instruction", NULL, NULL);
		printf("\n Failed To Create HandOff DP Instruction: ORA|%d|\n\n",sqlca.sqlcode);
		CO_Proc_RptClose(g_logfile,l_debug_info_ptr);
		exit(-1);
	}

}


/******************************************************************************************************  
 *             Normal Depository Instruction Passing Start - Creating Header Record                   *
 ******************************************************************************************************/

int Proc_PassDP_Instrn( char *chr_p_batch_no,
						 		char **argv,	
					    		FILE *g_logfile,
					    		INTL_ENV_DATA_STRUCT_H *l_intl_env_data_h,
					    		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

    /* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
	FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_handoff_file = NULL;
	FILE  *l_ptr_handoff_file_rev = NULL;
	#else
    FILE *l_ptr_ini_file = APL_OUT_FILE;
    FILE *l_ptr_handoff_file = APL_OUT_FILE;
    FILE *l_ptr_handoff_file_rev = APL_OUT_FILE;
    #endif
    /* Added by kotubabu  for Linux Migration -END*/
	char  chr_g_log_buffer[BUFFER_LEN] = APL_NULL_STRING;
	char  chr_l_inifile[PATH_LENGTH]= APL_NULL_STRING;
	char  chr_l_handoff_dir[PATH_LENGTH]= APL_NULL_STRING;
	char  chr_l_handoff_file_name[PATH_LENGTH]= APL_NULL_STRING;	
	char  chr_l_handoff_file_name_rev[PATH_LENGTH]= APL_NULL_STRING;
	char l_remove_file_path1[200] = APL_NULL_STRING;
	char l_remove_file_path2[200] = APL_NULL_STRING;
	char l_remove_file_path3[200] = APL_NULL_STRING;

	char  chr_l_header[100]= APL_NULL_STRING;
	char  chr_l_header_rev[100]= APL_NULL_STRING;	//ISolve322:AmitB:290507
	char  chr_l_detail_rec[1000] =APL_NULL_STRING;
	char  chr_l_detail_rec_rev[1000] =APL_NULL_STRING;

	char chr_l_batch_no[APL_DP_BATCH_NO_LEN] =APL_NULL_STRING;
	/* char chr_l_serial_no[6] =APL_NULL_STRING; 
	* Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_serial_no[DP_SERIAL_NO_LEN + 1] =APL_NULL_STRING; // +1 for Null Term
	char chr_l_trans_type[4] =APL_NULL_STRING;
	char chr_l_client[21] =APL_NULL_STRING;
	char chr_l_isin_cd[13] =APL_NULL_STRING;
	char chr_l_qty[29] =APL_NULL_STRING;
	char chr_l_mkt_type[4] =APL_NULL_STRING;
	char chr_l_settlement_no[16] =APL_NULL_STRING;
	/** New Variable:10/11/2006	**/
	char chr_l_mkt_type_pool[4] =APL_NULL_STRING;			
	char chr_l_settlement_no_pool[16] =APL_NULL_STRING;
	char l_temp_mkttype[16] =APL_NULL_STRING;	
	char chr_l_setl_date[20]= APL_NULL_STRING;
	char chr_l_setl_date_cdsl[20]= APL_NULL_STRING;
	char chr_l_other_branch_cd[7] =APL_NULL_STRING;
	char chr_l_other_cm_bp_id[9] =APL_NULL_STRING;
	char chr_l_other_mkt_type[3] =APL_NULL_STRING;
	char chr_l_other_stlmnt_no[8] =APL_NULL_STRING;
	/* char chr_l_internal_ref_no[21] =APL_NULL_STRING; * Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_internal_ref_no [DP_INT_REF_NO_LEN] = APL_NULL_STRING;
	char chr_l_bo_id[21] =APL_NULL_STRING;
	char chr_l_counter_bo_id[21] =APL_NULL_STRING;
	/* char chr_l_send_ref_1[36] =APL_NULL_STRING;
	char chr_l_send_ref_2[36] =APL_NULL_STRING; * Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_send_ref_1 [DP_SEND_REF_LEN] = APL_NULL_STRING;
	char chr_l_send_ref_2 [DP_SEND_REF_LEN] = APL_NULL_STRING;
	/* char chr_l_filler[39] =APL_NULL_STRING; ** Doomed For ISKB_3298 Changes 
	** Replaced with chr_l_904_905_filler7 - Jun2010 - Naren V */
	char chr_l_int_ref_no_cdsl[21] =APL_NULL_STRING;
	char chr_l_int_ref_no_cdsl_rev[21] =APL_NULL_STRING;	//ISolve322:AmitB:290507
	/* char chr_l_internal_ref_no_rev[21] =APL_NULL_STRING; 
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_internal_ref_no_rev [DP_INT_REF_NO_LEN] = APL_NULL_STRING;
	char chr_l_rec_type[3]="02";
	char chr_l_trans_flg[2]=APL_NULL_STRING;
	char chr_l_status_ind[2]= "G";
	int  counter=0;
	char chr_l_depository[5]=APL_NULL_STRING;
	char chr_l_dpid[7]=APL_NULL_STRING;
	/* char chr_p_batch_no_new[7]=APL_NULL_STRING; 
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_p_batch_no_new[APL_DP_BATCH_NO_LEN]=APL_NULL_STRING;
	char chr_l_buy_sell[2]= APL_NULL_STRING;
	char chr_l_buy_sell_rev[2]= APL_NULL_STRING;
	char chr_l_other_dpid[9]= APL_NULL_STRING;
	char chr_l_other_acc_no[14]= APL_NULL_STRING;
	char chr_l_other_acc_ctgry[3]= APL_NULL_STRING;
	char chr_l_instr_code[9]= APL_NULL_STRING;
	double l_int_qty=0.0;
	char chr_l_deal_cd[2] = APL_NULL_STRING;
	char chr_l_deal_cd_new= APL_NULL_CHAR;
	//Changes done by shrinath for new File format for KOTAK_11371
	char chr_l_filler904_905_2[3] = APL_NULL_STRING; 
	char chr_l_filler904_905_8[9] = APL_NULL_STRING; 
	char chr_l_filler904_905_135[136] = APL_NULL_STRING; 
	char chr_l_filler904_905_30[31] = APL_NULL_STRING; 
	char chr_l_filler904_905_35[36] = APL_NULL_STRING; 
	char chr_l_filler904_905_25[26] = APL_NULL_STRING; 
	char chr_l_filler904_905_164[165] = APL_NULL_STRING; //Changes done by Sunny for CS0031749
	
	char chr_l_rev_flg[2] = APL_NULL_STRING;
	
	/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
	/* char chr_l_filler2[3] =APL_NULL_STRING; -- Replaced with chr_l_904_905_filler5
	char chr_l_filler3[8] =APL_NULL_STRING;    -- Replaced with chr_l_904_905_filler1
	char chr_l_filler4[11] =APL_NULL_STRING;   -- Replaced with chr_l_904_905_filler2
	** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */

	char chr_l_904_905_filler1 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler2 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler3 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler4 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING; /* For Future Reference */
	char chr_l_904_905_filler5 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler6 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler7 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler8 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_priority_flag   [                   2] = APL_NULL_STRING;

	/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
	char chr_dis_ind[2]= APL_NULL_STRING;
	char chr_l_904_905_filler9  [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler10 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler11 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler12 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler13 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler14 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler15 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_904_905_filler16 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-END*/

	/* End of ISKB_3298 Changes - Jun2010 - Naren V  */
	
	char chr_l_trxn_code[4] =APL_NULL_STRING;
	char chr_l_exch_code[4] =APL_NULL_STRING;
	char chr_file_batch_no[APL_DP_BATCH_NO_LEN] =APL_NULL_STRING;
	char chr_l_orig_client[11] =APL_NULL_STRING;
	char chr_l_pos_req_flg[2] =APL_NULL_STRING;
	char chr_l_flg='Y';
	int  int_l_count=0;
	char chr_l_hoff_file[PATH_LENGTH]=APL_NULL_STRING;
	char chr_l_hoff_file_rev[PATH_LENGTH]=APL_NULL_STRING;
	
	char l_chr_rep_id[4]=  APL_NULL_STRING;	
	char l_chr_rep_format[2]=  APL_NULL_STRING;
	char l_chr_rep_name[30]=  APL_NULL_STRING;
	char l_chr_start_date[20]= APL_NULL_STRING;
	char l_chr_user[APL_USERID_LEN]=  APL_NULL_STRING;
	char l_chr_fieldval[26] =  APL_NULL_STRING;

	char chr_l_rep_exch_code[4]=  APL_NULL_STRING;
	char chr_l_rep_mkt_type[4]=  APL_NULL_STRING;
	char chr_l_rep_setl_no[16]=  APL_NULL_STRING;
	char chr_l_trail_rec[700]= APL_NULL_STRING;
	char chr_l_clh_flg[2]=APL_NULL_STRING;
	char l_exists_cln_depo[2]=APL_NULL_STRING;
	char chr_l_other_acc_no_del[14]= APL_NULL_STRING;
	/* char chr_l_batch_no_rev[8]= APL_NULL_STRING; *Modified For ISKB_3298 Changes - Jun2010 - Naren V */	//ISolve322:AmitB:290507
	char chr_l_batch_no_rev[APL_DP_BATCH_NO_LEN]= APL_NULL_STRING;
	
	char chr_l_IDO_file_name[PATH_LENGTH] = APL_NULL_STRING;
	char chr_l_IDO_file[PATH_LENGTH] = APL_NULL_STRING;
    /* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
	FILE  *l_ptr_IDO_file = NULL;
	#else
     FILE *l_ptr_IDO_file = APL_OUT_FILE;
    #endif
    /* Added by kotubabu  for Linux Migration -END*/
int int_counter_offmkt = 0;

	short i_rep_exch_code = 0;
	short i_rep_mkt_type = 0; 
	short i_rep_setl_no =0;
	
	short i_header=0;
	short i_header_rev=0;
	short i_batch_no=0;
	short i_serial_no=0;
	short i_trans_type=0;
	short i_setl_date=0;
	short i_setl_date_cdsl=0;
	short i_bo_id=0;
	short i_counter_bo_id=0;
	short i_int_qty=0;
	short i_deal_cd=0;
	short i_deal_cd_new=0;
	short i_exists_clndepo=0;

	/* START -- Added by Minal for Implementation Of DIS in INTELLECT CUSTODY on 12/09/2014 */

	char chr_p_map_val[5] = APL_NULL_STRING;
	char chr_p_transfer_reason_code[5] = APL_NULL_STRING;
	char chr_p_reason_purpose[23] = APL_NULL_STRING;
	char chr_l_net_amt[16] = APL_NULL_STRING;
short i_exch_code=0;

 char chr_l_deal_ref_nos[4001]= APL_NULL_STRING; 
	short i_deal_ref_nos=0;

	/* END -- Added by Minal for Implementation Of DIS in INTELLECT CUSTODY on 12/09/2014 */
	
	//Added by Sunny for CS0016121 - Kotak start
	char chr_l_without_con_flag_filler_1[2] = APL_NULL_STRING; 
	char chr_l_stamp_duty_pay_ind_filler_1[2] = APL_NULL_STRING; 
	char chr_l_early_payin_ind_filler_1[2] = APL_NULL_STRING;//Changes done by Sunny for CS0031749
	short i_without_con_flag_filler_1=0;	
    short i_stamp_duty_pay_ind_filler_1=0; 
    short i_l_early_payin_ind_filler_1=0; //Changes done by Sunny for CS0031749
	//Added by Sunny for CS0016121 - Kotak end
    
	/* Changes by Shradha for 934 generation KB_12434 - Starts */
	FILE  *l_ptr_handoff_file_pms = NULL;   
	char  chr_l_handoff_file_name_pms[PATH_LENGTH]= APL_NULL_STRING;  
	char chr_l_hoff_file_pms[PATH_LENGTH]=APL_NULL_STRING; 
	char chr_l_filler_904_905_16 [17] = APL_NULL_STRING;
	char chr_l_filler904_905_399 [401] = APL_NULL_STRING;
	char chr_l_filler904_905_24 [25] = APL_NULL_STRING;
	char chr_l_filler904_905_9 [10] = APL_NULL_STRING;
	
	char l_client_details[300]=APL_NULL_STRING;
	char chr_l_handoff_file_name_nsdl[PATH_LENGTH] = APL_NULL_STRING;
	
	char chr_l_sys_date[20]= APL_NULL_STRING;
	char  chr_l_detail_rec_pms[1000] =APL_NULL_STRING;
	//double total_quantity_pms_trailer = 0.0; //Added by Shradha for PMS total qty calculation in trailer
	char chr_l_trail_rec_pms[700]= APL_NULL_STRING;
	double int_counter_pms = 0.0; 
	char  chr_l_header_pms[100]= APL_NULL_STRING;
	short i_header_pms=0;
	
	memset(chr_l_trail_rec_pms,APL_NULL_CHAR,700);
	memset(chr_l_sys_date,APL_NULL_CHAR,20);
	memset(chr_l_handoff_file_name_pms,APL_NULL_CHAR,PATH_LENGTH);
	memset(chr_l_hoff_file_pms,APL_NULL_CHAR,PATH_LENGTH);
	memset(chr_l_header_pms,APL_NULL_CHAR,100);
	/* Changes by Shradha for 934 generation KB_12434 - Ends */

	EXEC SQL BEGIN DECLARE SECTION;
	
		EXEC SQL VAR chr_l_batch_no IS STRING;
		EXEC SQL VAR chr_l_serial_no IS STRING;
		EXEC SQL VAR chr_l_trans_type IS STRING;
		EXEC SQL VAR chr_l_client IS STRING;
		EXEC SQL VAR chr_l_isin_cd IS STRING;
		EXEC SQL VAR chr_l_qty IS STRING;
		EXEC SQL VAR chr_l_mkt_type IS STRING;
		EXEC SQL VAR chr_l_settlement_no IS STRING;
		EXEC SQL VAR l_temp_mkttype IS STRING;
		EXEC SQL VAR chr_l_setl_date IS STRING;
		EXEC SQL VAR chr_l_setl_date_cdsl IS STRING;
		EXEC SQL VAR chr_l_other_branch_cd IS STRING;
		EXEC SQL VAR chr_l_other_cm_bp_id IS STRING;
		EXEC SQL VAR chr_l_other_mkt_type IS STRING;
		EXEC SQL VAR chr_l_other_stlmnt_no IS STRING;
		EXEC SQL VAR chr_l_internal_ref_no IS STRING;
		EXEC SQL VAR chr_l_send_ref_1 IS STRING;
		EXEC SQL VAR chr_l_send_ref_2 IS STRING;
		/* EXEC SQL VAR chr_l_filler IS STRING;
		** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
		EXEC SQL VAR chr_l_depository IS STRING;
		EXEC SQL VAR chr_l_dpid IS STRING;
		EXEC SQL VAR chr_p_batch_no IS STRING;
		EXEC SQL VAR chr_p_batch_no_new IS STRING;
		EXEC SQL VAR chr_l_int_ref_no_cdsl IS STRING;
		EXEC SQL VAR chr_l_bo_id IS STRING;
		EXEC SQL VAR chr_l_counter_bo_id IS STRING;
		EXEC SQL VAR chr_l_buy_sell IS STRING;
		EXEC SQL VAR chr_l_other_dpid IS STRING;
		EXEC SQL VAR chr_l_other_acc_no IS STRING;
		EXEC SQL VAR chr_l_other_acc_ctgry IS STRING;
		EXEC SQL VAR chr_l_instr_code IS STRING;
		EXEC SQL VAR chr_l_deal_cd IS STRING;
		EXEC SQL VAR chr_l_without_con_flag_filler_1 IS STRING; //Added by Sunny for CS0016121 - Kotak
		EXEC SQL VAR chr_l_stamp_duty_pay_ind_filler_1 IS STRING; //Added by Sunny for CS0016121 - Kotak
		EXEC SQL VAR chr_l_early_payin_ind_filler_1 IS STRING; //Changes done by Sunny for CS0031749
		/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
		/* EXEC SQL VAR chr_l_filler2 IS STRING;
		EXEC SQL VAR chr_l_filler3 IS STRING;
		EXEC SQL VAR chr_l_filler4 IS STRING; 
		** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */

		EXEC SQL VAR chr_l_904_905_filler1 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler2 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler3 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler4 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler5 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler6 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler7 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler8 IS STRING;
		EXEC SQL VAR chr_l_priority_flag   IS STRING;
		/* End of ISKB_3298 Changes - Jun2010 - Naren V */

		EXEC SQL VAR chr_l_trxn_code IS STRING;
		EXEC SQL VAR chr_l_exch_code IS STRING;
		EXEC SQL VAR chr_file_batch_no IS STRING;
		EXEC SQL VAR chr_l_orig_client IS STRING;
		EXEC SQL VAR chr_l_pos_req_flg IS STRING;
		EXEC SQL VAR chr_l_rep_exch_code IS STRING;
		EXEC SQL VAR chr_l_rep_mkt_type IS STRING;
		EXEC SQL VAR chr_l_rep_setl_no IS STRING;
		EXEC SQL VAR chr_l_clh_flg IS STRING;
		EXEC SQL VAR chr_l_batch_no_rev IS STRING;		//ISolve322:AmitB:290507
		EXEC SQL VAR chr_l_int_ref_no_cdsl_rev IS STRING;
		EXEC SQL VAR chr_l_internal_ref_no_rev IS STRING;

		/* START -- Added by Minal for Implementation Of DIS in INTELLECT CUSTODY on 12/09/2014 */

		EXEC SQL VAR chr_p_map_val IS STRING;
		EXEC SQL VAR chr_p_transfer_reason_code IS STRING;
		EXEC SQL VAR chr_p_reason_purpose IS STRING;
		EXEC SQL VAR chr_l_904_905_filler9 IS STRING;
		EXEC SQL VAR chr_l_net_amt IS STRING;

		/* END -- Added by Minal for Implementation Of DIS in INTELLECT CUSTODY on 12/09/2014 */
		/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
		EXEC SQL VAR chr_dis_ind IS STRING;
		EXEC SQL VAR chr_l_904_905_filler9  IS STRING;
		EXEC SQL VAR chr_l_904_905_filler10 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler11 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler12 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler13 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler14 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler15 IS STRING;
		EXEC SQL VAR chr_l_904_905_filler16 IS STRING;
		/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-END*/
		
		/*added by shrinath for 925 off market start KOTAK_11371 */
			EXEC SQL VAR chr_l_filler904_905_135 IS STRING;
			EXEC SQL VAR chr_l_filler904_905_30 IS STRING;
			EXEC SQL VAR chr_l_filler904_905_35 IS STRING;
			EXEC SQL VAR chr_l_filler904_905_25 IS STRING;
		/*added by shrinath for 925 end */	
		
		EXEC SQL END DECLARE SECTION;

		/** Added by Sana for SIT issue fix [start] **/
		short i_depo_cd = 0;
		short i_dp_id = 0;
		short i_bs_flg = 0;
		short i_clh_flg = 0;
		/** Added by Sana for SIT issue fix [end] **/

		
		if ( ( (l_debug_info_ptr) = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *)) ) == NULL )
		 APL_GOBACK_FAIL ;
		
		INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

		l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha);
		
		
		CO_ProcMonitor(g_logfile,"Entered Into Proc_PassDP_Instrn",NULL,NULL);
		
		fprintf(g_logfile,"\n Got User=|%s| \n",argv[3]);
		strcpy(l_chr_user,argv[3]);
		fprintf(g_logfile,"\n Got l_chr_user=|%s| \n",l_chr_user);
			
	/* START -- Added by Minal for Implementation Of DIS in INTELLECT CUSTODY on 12/09/2014 */
      if ( CO_Chk_CntryEnabled("DL_DPINSTPASS", 
		 			                    "NEW_FORMAT", 
					                    &int_l_new_file_format, 
					                    l_debug_info_ptr)  == APL_FAILURE )
			 {
						APL_GOBACK_FAIL
			 }
	 
	memset(chr_p_map_val, APL_NULL_CHAR, sizeof(chr_p_map_val));

	EXEC SQL
		SELECT MAP_VAL
		INTO :chr_p_map_val
		FROM PRO_SGENSTAT
		WHERE MAP_TYPE = 'DIS_IND';

	IS_ANY_ORA_ERROR

EXEC SQL SELECT SYS_DATE INTO :l_sys_dt FROM PRO_SYS_DATE;
           IS_ANY_ORA_ERROR

	/* END -- Added by Minal for Implementation Of DIS in INTELLECT CUSTODY on 12/09/2014 */

	EXEC SQL
		SELECT COUNT(*)
		INTO :int_counter_offmkt
		FROM DL_DPINSTRS 
		WHERE batch_no = :chr_p_batch_no
		AND status = :chr_l_status_ind
		AND trans_type in ('904', '905')
		AND CLH_DVP = 'D'
                AND EXCH_CODE is null //Added on 07122015
                AND MKT_TYPE is null  //Added On 07122015
                AND SETTLEMENT_NO is null; //Added On 07122015
	
	IS_ANY_ORA_ERROR

	//if(int_counter_offmkt > 0)
//	{
		Alert("Count for 904/905 for Off Market is |%d| \n", int_counter_offmkt);
			
	/* Added by Shradha for 934 generation KB_12434 - Starts */
	IS_ANY_ORA_ERROR
	
	EXEC SQL
		SELECT COUNT(*)
		INTO :int_counter_pms
		FROM DL_DPINSTRS 
		WHERE batch_no = :chr_p_batch_no
		AND status = :chr_l_status_ind
		AND trans_type ='934'
		AND CLH_DVP IN ('C','D');
	
	IS_ANY_ORA_ERROR

        Alert("Count for 934 for PMS is |%d| \n", int_counter_pms);
	
	EXEC SQL SELECT SUBSTR(NVL(RPAD(TO_CHAR(SYS_DATE,'YYYYMMDD'),8,' '),:chr_g_format_filler),1,8) INTO :chr_l_sys_date 
	FROM PRO_SYS_DATE;

	Alert("\n shr:: sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
	IS_ANY_ORA_ERROR
	/* Added by Shradha for 934 generation KB_12434 - Ends */
		EXEC SQL 
SELECT count(*) 
INTO :int_l_count
 FROM DL_DPINSTRS
			WHERE batch_no=:chr_p_batch_no
			AND status=:chr_l_status_ind;

		IS_ANY_ORA_ERROR

		if(int_l_count == 0)
		{
			chr_l_flg='N';
			CO_ProcMonitor(g_logfile,"No Data available for Passing For Selcted Batch Number !",NULL,NULL);
			APL_GOBACK_FAIL
		}
		
   if(chr_l_flg =='Y')
   {	
		strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
		strcat(chr_l_inifile,"intl_sun.cfg");
			
		if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		{
			CO_ProcMonitor(g_logfile,"Failed to Open Config. File",NULL,NULL);
			APL_GOBACK_FAIL
		}

		if (CO_ReadToken(l_ptr_ini_file,"INTL_HF_PATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		{
			return(APL_FAILURE);
		}
		
		sprintf(chr_g_log_buffer,"HandOff FilePath=|%s|",chr_l_handoff_dir);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

		printf("\nBefore Query");
	
		EXEC SQL SELECT DISTINCT(trans_type),exch_code INTO :chr_l_trxn_code,:chr_l_exch_code:i_exch_code
						FROM DL_DPINSTRS
						WHERE batch_no=:chr_p_batch_no
						AND trans_type <> '934' /* Added by Shradha for 934 generation KB_12434 */
						AND ROWNUM=1;

		IS_ANY_ORA_ERROR

		printf("\nafter Query");

		EXEC SQL SELECT DISTINCT(a.depo_ind),LPAD(SUBSTR(dp_id,-6,6),6,'0'),
							  SUBSTR(LPAD(TO_CHAR(a.BATCH_NO),5,'0'),1,5),buy_sell_flg/*decode(buy_sell_flg,'S','B','B','S')*/,clh_dvp
						/* Changed By Sana INTO :chr_l_depository,:chr_l_dpid,:chr_p_batch_no_new,:chr_l_buy_sell,:chr_l_clh_flg */
						INTO :chr_l_depository:i_depo_cd,:chr_l_dpid:i_dp_id,:chr_p_batch_no_new:i_batch_no,:chr_l_buy_sell:i_bs_flg,:chr_l_clh_flg:i_clh_flg
						FROM DL_DPINSTRS a,DL_DPINSTR_HDR b 
						WHERE a.BATCH_NO=b.BATCH_NO 
						AND a.BATCH_NO = :chr_p_batch_no
						AND ROWNUM=1;

		IS_ANY_ORA_ERROR
		//ISolve322:AmitB:290507
		if(strcmp(chr_l_trxn_code,"905")==0  && strcmp(chr_l_clh_flg,"C")==0 && strcmp(chr_l_depository,"NSDL")==0 )
	    	{
			/* EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(DL_DPINSTRSEQ.NEXTVAL),7,'0'),1,7) INTO :chr_l_batch_no_rev FROM DUAL; **  Modified For ISKB_3298 Changes - Jun2010 - Naren V */

			EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(DL_DPINSTRSEQ.NEXTVAL),
						    :g_i_batch_no_len,'0'),1,:g_i_batch_no_len) 
				   INTO :chr_l_batch_no_rev 
				   FROM DUAL;

			IS_ANY_ORA_ERROR
		}
		
		printf("\n DEPOSITORY=|%s|DPID=|%s| BATCH NEW=|%s|BUY_SELL=|%s| CLH_DVP=|%s|\n",
			chr_l_depository,
			chr_l_dpid,
			chr_p_batch_no_new,
			chr_l_buy_sell,
			chr_l_clh_flg);
			
			fflush(stdout);

		sprintf(chr_g_log_buffer,"DEPOSITORY=|%s|DPID=|%s| BATCH NEW=|%s|BUY_SELL=|%s| CLH_DVP=|%s|\n",chr_l_depository,chr_l_dpid,chr_p_batch_no_new,chr_l_buy_sell,chr_l_clh_flg);
		fprintf(g_logfile,"%s",chr_g_log_buffer);

		if(strcmp(chr_l_depository,"NSDL")==0)	
		{

		  /******* Creating NSDL Header For Normal DP Instructions *******/	 /* ISKB_3298 */
		
		  /* EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(batch_no),7,'0'),1,7)|| 
			SUBSTR(LPAD(TO_CHAR(record_type),2,'0'),1,2)||     
			SUBSTR(NVL(LPAD(**:g_mt_commonsys_params_struct_h.brnch_cd**'000',6,'0'),'000000'),1,6)||
			SUBSTR(NVL(LPAD(dp_id,8,' '),'        '),1,8)||SUBSTR(LPAD(TO_CHAR(dp_role),2,'0'),1,2)||
			SUBSTR(LPAD(TO_CHAR(tot_num_record),5,'0'),1,5)|| 
			SUBSTR(TO_CHAR(maker_date,'YYYYMMDD'),1,8)||
			SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)||'  '  INTO :chr_l_header:i_header
			FROM DL_DPINSTR_HDR
			WHERE BATCH_NO = :chr_p_batch_no
			AND STATUS=:chr_l_status_ind;
			***** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

			/* Added by Shradha for 934 generation KB_12434 - Starts */
			if(int_counter_pms > 0)
			{
				EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(batch_no),:g_i_batch_no_len,'0'),1,:g_i_batch_no_len) ||
					SUBSTR(LPAD(TO_CHAR(record_type),2,'0'),1,2)                              ||
					SUBSTR(NVL(LPAD('000',6,'0'),'000000'),1,6)                               ||
					SUBSTR(NVL(LPAD(dp_id,8,' '),'        '),1,8)                             ||
					SUBSTR(LPAD(TO_CHAR(dp_role),2,'0'),1,2)                                  ||
					SUBSTR(LPAD(to_char(:int_counter_pms),:g_i_no_of_recs_len,'0'),
					       1,:g_i_no_of_recs_len)                                             ||
					SUBSTR(TO_CHAR(To_date(:chr_l_sys_date,'YYYYMMDD'),'YYYYMMDD'),1,8)                           ||
					SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)                                ||
					'  '  
				   INTO :chr_l_header_pms:i_header_pms
                        	   FROM DL_DPINSTR_HDR
				  WHERE BATCH_NO = :chr_p_batch_no
				    AND STATUS   = :chr_l_status_ind;
				
				IS_ANY_ORA_ERROR
			}
			else
			{
				EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(batch_no),:g_i_batch_no_len,'0'),1,:g_i_batch_no_len) ||
					SUBSTR(LPAD(TO_CHAR(record_type),2,'0'),1,2)                              ||
					SUBSTR(NVL(LPAD('000',6,'0'),'000000'),1,6)                               ||
					SUBSTR(NVL(LPAD(dp_id,8,' '),'        '),1,8)                             ||
					SUBSTR(LPAD(TO_CHAR(dp_role),2,'0'),1,2)                                  ||
					SUBSTR(LPAD(TO_CHAR(tot_num_record - :int_counter_pms),:g_i_no_of_recs_len,'0'), /* Changes by Shradha for 934 generation KB_12434 */
					       1,:g_i_no_of_recs_len)                                             ||
					SUBSTR(TO_CHAR(maker_date,'YYYYMMDD'),1,8)                                ||
					SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)                                ||
					'  '  
				   INTO :chr_l_header:i_header
                        	   FROM DL_DPINSTR_HDR
				  WHERE BATCH_NO = :chr_p_batch_no
				    AND STATUS   = :chr_l_status_ind;
					
			IS_ANY_ORA_ERROR
			}
            /* Added by Shradha for 934 generation KB_12434 - Ends */
			printf("\n BEFORE chr_p_batch_no=|%s| \n",chr_p_batch_no);

			/* EXEC SQL SELECT SUBSTR(LPAD(:chr_p_batch_no,8,'0'),1,8) INTO :chr_file_batch_no FROM DUAL;
			   ** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

			EXEC SQL SELECT SUBSTR( LPAD(:chr_p_batch_no, :g_i_batch_no_len+1,'0'), 
						1,:g_i_batch_no_len+1 ) 
			           INTO :chr_file_batch_no 
			           FROM DUAL;

			IS_ANY_ORA_ERROR
			
			printf("\n AFTER chr_p_batch_no=|%s| \n",chr_file_batch_no);

			strcpy(chr_l_handoff_file_name,chr_l_handoff_dir);
			strcat(chr_l_handoff_file_name,chr_file_batch_no);
			strcat(chr_l_handoff_file_name,"_");
			if(int_counter_offmkt == 0)
			{
				strcat(chr_l_handoff_file_name,chr_l_exch_code);
				strcat(chr_l_handoff_file_name,"_Normal.");
			}
			else
			{
				strcat(chr_l_handoff_file_name,"OffMkt.");  
			}
			strcpy(chr_l_IDO_file_name,chr_l_handoff_file_name);
                        /* Added by Shradha for 934 generation KB_12434 - Starts */
			strcpy(chr_l_handoff_file_name_pms,chr_l_handoff_file_name);
			if(int_counter_pms == 0) 
			{
				strcat(chr_l_handoff_file_name,chr_l_trxn_code);
			}
			else
			{
				if(strcmp(chr_l_trxn_code,APL_NULL_STRING))
					strcat(chr_l_handoff_file_name,chr_l_trxn_code);
				strcat(chr_l_handoff_file_name_pms,"934");
			}
			/* Added by Shradha for 934 generation KB_12434 - Ends */
			strcat(chr_l_IDO_file_name,IDO_TXN_CODE);

			printf("\n NSDL HandOff FileName=|%s| \n",chr_l_hoff_file);
			printf("\n NSDL HandOff FilePath=|%s| \n",chr_l_handoff_file_name);
			printf("\n NSDL HandOff FilePath pms=|%s| \n",chr_l_handoff_file_name_pms);
			
			strcpy(chr_l_hoff_file,chr_file_batch_no);
			strcat(chr_l_hoff_file,"_");
		    if(int_counter_offmkt == 0)
		    {
				strcat(chr_l_hoff_file,chr_l_exch_code);
				strcat(chr_l_hoff_file,"_Normal.");
            }
            else
		    {
				strcat(chr_l_hoff_file,"OffMkt.");
		    }

			strcpy(chr_l_IDO_file,chr_l_hoff_file);
			strcpy(chr_l_hoff_file_pms,chr_l_hoff_file);
			/* Added by Shradha for 934 generation KB_12434 - Starts */
			if(strcmp(chr_l_trxn_code,APL_NULL_STRING))
				strcat(chr_l_hoff_file,chr_l_trxn_code);
			if(int_counter_pms >0) {
				strcat(chr_l_hoff_file_pms,"934");
			}
			/* Added by Shradha for 934 generation KB_12434 - Ends */
			strcat(chr_l_IDO_file,IDO_TXN_CODE);
			printf("\n NSDL IDO FileName=|%s| \n",chr_l_IDO_file);
			printf("\n NSDL IDO FilePath=|%s| \n",chr_l_IDO_file_name);						
			
			/* Changes by Shradha for 934 generation KB_12434 - Starts */
			if(strcmp(chr_l_trxn_code,APL_NULL_STRING))
                        {
				if ((l_ptr_handoff_file = fopen(chr_l_handoff_file_name,"w")) == NULL)
				{
					return(APL_FAILURE);
				}
			}
                        /* Changes by Shradha for 934 generation KB_12434 - Ends */
			if(int_counter_offmkt ==0) // This If Added on 07082015
			{
				if ((l_ptr_IDO_file = fopen(chr_l_IDO_file_name,"w")) == NULL)
				{
					return(APL_FAILURE);
				}
			}
			/* Added by Shradha for 934 generation KB_12434 - Starts */
			if(int_counter_pms >0) 
                        {
				if ((l_ptr_handoff_file_pms = fopen(chr_l_handoff_file_name_pms,"w")) == NULL)
				{
					return(APL_FAILURE);
				}
                         }			
                        /* Added by Shradha for 934 generation KB_12434 - Ends */
			if(strcmp(chr_l_trxn_code,APL_NULL_STRING)) /* Added by Shradha for 934 generation KB_12434 */
                        {
				strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				
				if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
			}
			/* Added by Shradha for 934 generation KB_12434 - Starts */
			if(int_counter_pms >0) 
                        {
				strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file_pms);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				
				if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}

			}
            /* Added by Shradha for 934 generation KB_12434 - Ends */
			
			if(int_counter_offmkt == 0) // This If Added on 07082015
			{
				strcpy(l_intl_rept_struct_ha->report_name, chr_l_IDO_file);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);

				if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))

				{
					APL_GOBACK_FAIL
				}
			}

		if(strcmp(chr_l_trxn_code,"905")==0  && strcmp(chr_l_clh_flg,"C")==0)
		{
			printf("\n The Transaction Type is 905 \n");		
			
			strcpy(chr_l_handoff_file_name_rev,chr_l_handoff_dir);
			strcat(chr_l_handoff_file_name_rev,chr_file_batch_no);
			strcat(chr_l_handoff_file_name_rev,"_");
			strcat(chr_l_handoff_file_name_rev,chr_l_exch_code);
			strcat(chr_l_handoff_file_name_rev,"_Normal.");
			strcat(chr_l_handoff_file_name_rev,"904");

			strcpy(chr_l_hoff_file_rev,chr_file_batch_no);
			strcat(chr_l_hoff_file_rev,"_");
			strcat(chr_l_hoff_file_rev,chr_l_exch_code);
			strcat(chr_l_hoff_file_rev,"_Normal.");
			strcat(chr_l_hoff_file_rev,"904");
						
					
			printf("\n NSDL HandOff FileName REV=|%s| \n",chr_l_hoff_file_rev);
			printf("\n NSDL HandOff FilePath REV=|%s| \n",chr_l_handoff_file_name_rev);
				
			
			if ((l_ptr_handoff_file_rev = fopen(chr_l_handoff_file_name_rev,"w")) == NULL)
			{
				return(APL_FAILURE);
			}

			strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file_rev);
			strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
			strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
			l_intl_rept_struct_ha->report_width = 100;
			strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
			strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
			strcpy(l_intl_rept_struct_ha->usr, argv[3]);
			

			if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))

			{
				APL_GOBACK_FAIL
			}
			//ISolve322:AmitB:290507			
			/* EXEC SQL SELECT :chr_l_batch_no_rev||
			SUBSTR(LPAD(TO_CHAR(record_type),2,'0'),1,2)||     
			SUBSTR(NVL(LPAD(**:g_mt_commonsys_params_struct_h.brnch_cd**'000',6,'0'),'000000'),1,6)||
			SUBSTR(NVL(LPAD(dp_id,8,' '),'        '),1,8)||SUBSTR(LPAD(TO_CHAR(dp_role),2,'0'),1,2)||
			SUBSTR(LPAD(TO_CHAR(tot_num_record),5,'0'),1,5)||
			SUBSTR(TO_CHAR(maker_date,'YYYYMMDD'),1,8)||
			SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)||'  '  INTO :chr_l_header_rev:i_header_rev
			FROM DL_DPINSTR_HDR
			WHERE BATCH_NO = :chr_p_batch_no
			AND STATUS=:chr_l_status_ind;
			** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
			
			EXEC SQL SELECT :chr_l_batch_no_rev                                        ||
					SUBSTR(LPAD(TO_CHAR(record_type),2,'0'),1,2)               ||     
					SUBSTR(NVL(LPAD('000',6,'0'),'000000'),1,6)                ||
					SUBSTR(NVL(LPAD(dp_id,8,' '),'        '),1,8)              ||
					SUBSTR(LPAD(TO_CHAR(dp_role),2,'0'),1,2)                   ||
					SUBSTR(LPAD(TO_CHAR(tot_num_record - :int_counter_pms),:g_i_no_of_recs_len,'0'),
						    1,:g_i_no_of_recs_len)                         ||
					SUBSTR(TO_CHAR(maker_date,'YYYYMMDD'),1,8)                 ||
					SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)                 ||
					'  '  
				   INTO :chr_l_header_rev:i_header_rev
				   FROM DL_DPINSTR_HDR
				  WHERE BATCH_NO = :chr_p_batch_no
				    AND STATUS   = :chr_l_status_ind;

			IS_ANY_ORA_ERROR
				
			fprintf(l_ptr_handoff_file_rev,"%s",chr_l_header_rev);
			fprintf(l_ptr_handoff_file_rev,"\n");
				

		}

					
	   }
	   else if(strcmp(chr_l_depository,"CDSL")==0)	
	   {

			EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(tot_num_record),6,'0'),1,6)||
					SUBSTR(NVL(LPAD(TO_CHAR(tot_qty*1000),16,'0'),'0000000000000000'),1,16)||
/*					SUBSTR(NVL(RPAD(:g_mt_commonsys_params_struct_h.brnch_cd,6,'0'),'000000'),1,6)||	*/
					SUBSTR(NVL(RPAD(:l_chr_user,6,'0'),'000000'),1,6)||
					LPAD(SUBSTR(dp_id,-6,6),6,'0') INTO :chr_l_header:i_header
				FROM DL_DPINSTR_HDR
				WHERE BATCH_NO = :chr_p_batch_no
				AND STATUS=:chr_l_status_ind;

			IS_ANY_ORA_ERROR

			
				
			EXEC SQL SELECT DISTINCT(trans_type),exch_code INTO :chr_l_trxn_code,chr_l_exch_code
						FROM DL_DPINSTRS
						WHERE batch_no=:chr_p_batch_no
						AND ROWNUM=1;

			IS_ANY_ORA_ERROR

				
			strcpy(chr_l_handoff_file_name,chr_l_handoff_dir);
			strcat(chr_l_handoff_file_name,"05");
			strcat(chr_l_handoff_file_name,chr_l_dpid);
			strcat(chr_l_handoff_file_name,".");
			strcat(chr_l_handoff_file_name,chr_p_batch_no_new);
		

				
			strcpy(chr_l_hoff_file,"05");
			strcat(chr_l_hoff_file,chr_l_dpid);
			strcat(chr_l_hoff_file,".");
			strcat(chr_l_hoff_file,chr_p_batch_no_new);
			
	/*		sprintf(chr_l_handoff_file_name,"%s05%s%s",chr_l_handoff_dir,chr_l_dpid,chr_p_batch_no_new);
	*/		
			printf("\n CDSL HandOff FileName=|%s| \n",chr_l_hoff_file);
			printf("\n CDSL HandOff FilePath=|%s| \n",chr_l_handoff_file_name);	

			if ((l_ptr_handoff_file = fopen(chr_l_handoff_file_name,"w")) == NULL)
			{
				return(APL_FAILURE);
			}

					
			strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file);
			strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
			strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
			l_intl_rept_struct_ha->report_width = 100;
			strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
			strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
			strcpy(l_intl_rept_struct_ha->usr, argv[3]);
			

			if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))

			{
				APL_GOBACK_FAIL
			}

		printf("Amit:Before Going  chr_l_trxn_code=|%s| \n",chr_l_trxn_code);
			
		if(strcmp(chr_l_trxn_code,"905")==0  && strcmp(chr_l_clh_flg,"C")==0 )	
		{
				
				printf("\n 2:The Transaction Type is 905 \n");		
			

			strcpy(chr_l_handoff_file_name_rev,chr_l_handoff_dir);
			strcat(chr_l_handoff_file_name_rev,"05");
			strcat(chr_l_handoff_file_name_rev,chr_l_dpid);
			strcat(chr_l_handoff_file_name_rev,".");
		    strcat(chr_l_handoff_file_name_rev,chr_p_batch_no_new);
		    strcat(chr_l_handoff_file_name_rev,".904");
		

				
			strcpy(chr_l_hoff_file_rev,"05");
			strcat(chr_l_hoff_file_rev,chr_l_dpid);
			strcat(chr_l_hoff_file_rev,".");
			strcat(chr_l_hoff_file_rev,chr_p_batch_no_new);
			strcat(chr_l_hoff_file_rev,".904");
			
	/*		sprintf(chr_l_handoff_file_name,"%s05%s%s",chr_l_handoff_dir,chr_l_dpid,chr_p_batch_no_new);
	*/		
			printf("\n CDSL HandOff FileName REV=|%s| \n",chr_l_hoff_file_rev);
			printf("\n CDSL HandOff FilePath REV=|%s| \n",chr_l_handoff_file_name_rev);	

			if ((l_ptr_handoff_file_rev = fopen(chr_l_handoff_file_name_rev,"w")) == NULL)
			{
				return(APL_FAILURE);
			}

					
			strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file_rev);
			strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
			strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
			l_intl_rept_struct_ha->report_width = 100;
			strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
			strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
			strcpy(l_intl_rept_struct_ha->usr, argv[3]);
			

			if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))

			{
				APL_GOBACK_FAIL
			}

			printf("\n Before Printing Header REV chr_l_header=|%s|\n",chr_l_header);
			
			fprintf(l_ptr_handoff_file_rev,"%s",chr_l_header);
			fprintf(l_ptr_handoff_file_rev,"\n");

			
		}	

			
			

		}

		/* Bageshri for IDO File */
		printf("*** TXN Code: |%s|\n",chr_l_trxn_code);
		printf("*** CLH/DVP: |%s|\n",chr_l_clh_flg);
		printf("*** chr_l_depository: |%s|\n",chr_l_depository);
		printf("*** int_counter_pms: |%d|\n",int_counter_pms);
		printf("shrinath start");
		if(((strcmp(chr_l_trxn_code,"904")==0) || (int_counter_pms > 0) )  && strcmp(chr_l_clh_flg,"C")==0 && strcmp(chr_l_depository,"NSDL")==0)
	   	{
			if(APL_FAILURE == Proc_IDO_File( chr_p_batch_no,
											chr_l_status_ind,
											  chr_l_header,
											l_ptr_IDO_file,
											chr_l_IDO_file_name,
											argv,
											  g_logfile,
											  l_debug_info_ptr))
			{	
				CO_ProcMonitor(g_logfile, "Proc_IDO_File Returned Faliure", NULL, NULL);
				APL_GOBACK_FAIL
			}
	   	}
		printf("\n Before Printing Header chr_l_header=|%s|\n",chr_l_header);
		fflush(stdout);
		sprintf(chr_g_log_buffer,"\n HandOff Filename=|%s| \n",chr_l_handoff_file_name);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
        /* Changes by Shradha for 934 generation KB_12434 - Starts */
		if(strcmp(chr_l_trxn_code,APL_NULL_STRING))
		{
			fprintf(l_ptr_handoff_file,"%s",chr_l_header);
			fprintf(l_ptr_handoff_file,"\n");
		}
		if(int_counter_pms>0)
		{
			fprintf(l_ptr_handoff_file_pms,"%s",chr_l_header_pms);
			fprintf(l_ptr_handoff_file_pms,"\n");
		}
		/* Changes by Shradha for 934 generation KB_12434 - Ends */

		printf("*** DP ID: |%s|\n",chr_l_dpid);
		fflush(stdout);
		printf("*** DP ID FILE: |%s|\n",chr_l_dpid);
		fflush(stdout);
		printf("*** Batch No: |%s|\n",chr_p_batch_no);
		fflush(stdout);
		printf("*** Status Ind: |%s|\n",chr_l_status_ind);
		fflush(stdout);
		printf("*** Status Ind: |%s|\n",l_sys_dt);
		fflush(stdout);

	/* -------------------------------------------------------------------------------
	   Preparing Detail Record For Normal DP Delivery(904) / Receipt(905) Instructions
	   ------------------------------------------------------------------------------- */

	/* EXEC SQL DECLARE cur_l_details CURSOR FOR
		SELECT DISTINCT b.cln_code AS ORIGINAL_CLIENT,
			SUBSTR(LPAD(TO_CHAR(batch_no),7,'0'),1,7) batch_no, 
			SUBSTR(LPAD(TO_CHAR(serial_no),5,'0'),1,5) serial_no,
			SUBSTR(LPAD(TO_CHAR(serial_no),:g_i_serial_no_len,'0'),1,:g_i_serial_no_len) serial_no,
			SUBSTR(LPAD(TO_CHAR(trans_type),3,'0'),1,3) trans_type,
			'A',
			'       ' as Filler3,
			SUBSTR(LPAD(TO_CHAR(client),8,' '),1,8) client,
			SUBSTR(NVL(RPAD(isin_cd,12,' '),'            '),1,12) isin_cd,
			SUBSTR(NVL(LPAD(TO_CHAR(qty*1000),15,'0'),'0000000000000000'),1,15) qty,
			'          ' as Filler4,
			SUBSTR(NVL(LPAD(TO_CHAR(mkt_type),2,'0'),'00'),1,2) mkt_type,
			SUBSTR(NVL(RPAD(settlement_no,7,' '),'       '),1,7) settlement_no,
			SUBSTR(NVL(RPAD(TO_CHAR(setl_date,'YYYYMMDD'),8,' '),'        '),1,8),
			SUBSTR(NVL(RPAD(TO_CHAR(setl_date,'DDMMYYYY'),8,' '),'        '),1,8),
			SUBSTR(NVL(RPAD(other_branch_cd,6,' '),'      '),1,6) other_branch_cd,
			SUBSTR(NVL(RPAD(a.other_dp_id,8,' '),'        '),1,8) other_dp_id,
			SUBSTR(NVL(LPAD(TO_CHAR(OTHER_CLIENT_ID),8,' '),'        '),1,8) other_client_no,
			SUBSTR(NVL(LPAD(TO_CHAR(''),2,'0'),'00'),1,2) filler2,
			SUBSTR(NVL(RPAD(DECODE(a.CLH_DVP,'D',a.CMBP_ID,'C',a.CMBP_ID),8,' '),'        '),1,8) cm_bp_id, ** Change:AmitB:010207:CMBP for CLH Payin **
			SUBSTR(NVL(RPAD(to_char(other_mkt_type),2,' '),'  '),1,2) other_mkt_type,
			SUBSTR(NVL(RPAD(other_stlmnt_no,7,' '),'       '),1,7) other_stlmnt_no,
			SUBSTR(NVL(RPAD(internal_ref_no,20,' '),'                    '),1,20) internal_ref_no,
			SUBSTR(NVL(RPAD(send_ref_1,35,' '),'                                   '),1,35) send_ref_1,
			SUBSTR(NVL(RPAD(send_ref_2,35,' '),'                                   '),1,35) send_ref_2,
			SUBSTR('                                      ',1,38) filler,
			SUBSTR(NVL(RPAD(internal_ref_no,16,' '),'                '),1,16) int_ref_no_cdsl,
****		NVL(LPAD((:chr_l_dpid),16,'0'),'0000000000000000') AS BO_ID,			****
			NVL(LPAD(DECODE(TRANS_TYPE,'904',(a.other_dp_id||A.CLIENT),'905',(a.other_dp_id||a.OTHER_CLIENT_ID)),16,'0'),'0000000000000000') AS BO_ID,
			         NVL(LPAD(DECODE(TRANS_TYPE,'904',(a.other_dp_id||a.OTHER_CLIENT_ID),'905',(a.other_dp_id||A.CLIENT)),16,'0'),'0000000000000000') AS COUNTER_BO_ID,
			a.instr_code,
			a.qty,
			deal_cd
		FROM DL_DPINSTRS a,MT_CLI_DEPO_MAP b
		WHERE batch_no =:chr_p_batch_no
		AND a.client=b.cln_depo_map_client_id
		AND a.depo_ind=b.cln_depo_code
		AND NVL(a.status,'N')=:chr_l_status_ind
		ORDER BY batch_no,serial_no;
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	
	//Commented and Rewritten by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START

	EXEC SQL DECLARE cur_l_details CURSOR FOR
	SELECT DISTINCT a.client_code AS ORIGINAL_CLIENT                                             ,
	SUBSTR(LPAD(TO_CHAR(BATCH_NO),:g_i_batch_no_len,'0'),
	1,:g_i_batch_no_len) BATCH_NO                                               ,
	SUBSTR(LPAD(TO_CHAR(serial_no),:g_i_serial_no_len,'0'),
	1,:g_i_serial_no_len) serial_no                                             ,
	SUBSTR(LPAD(TO_CHAR(trans_type),3,'0'),1,3) trans_type,
	'A'                                                                                ,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler1 is splitted into 3 Parts with 2 Fillers and 1 fields of DIS Indicator- START
	SUBSTR(:chr_g_format_filler, 1, 14) as DP_904_905_Filler1 ,*/
	SUBSTR(:chr_g_format_filler, 1, 12) as DP_904_905_Filler1 /*Filler1 part 1*/,
	SUBSTR(:chr_g_format_filler, 1, 1)  as DP_904_905_Filler9 /*Filler1 part 2*/, 
	(c.MAP_VAL) AS chr_dis_ind  /*Filler1 part 3*/,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler1 is splitted into 3 Parts with 2 Fillers and 1 fields of DIS Indicator- END*/
	SUBSTR(LPAD(TO_CHAR(client),8,' '),1,8) client                                     ,
	SUBSTR(NVL(RPAD(isin_cd,12,' '),:chr_g_format_filler),1,12) isin_cd                ,
	SUBSTR(NVL(LPAD(TO_CHAR(qty*1000),:g_i_qty_digits_1,'0'),
	:chr_g_format_zeros),1,:g_i_qty_digits_1) qty                               ,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler2 is splitted into 3 Parts with 3 Fields - START
	SUBSTR(:chr_g_format_filler, 1, 10) as DP_904_905_Filler2 ,*/
	SUBSTR(:chr_g_format_filler, 1, 1) as DP_904_905_Filler2 ,
	SUBSTR(:chr_g_format_filler, 1, 8) as DP_904_905_Filler10 ,
	SUBSTR(:chr_g_format_filler, 1, 1) as DP_904_905_Filler11 ,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler2 is splitted into 3 Parts with 3 Fields - END*/
	SUBSTR(NVL(LPAD(TO_CHAR(decode(a.CLH_DVP,'D',decode(a.deal_cd,'3',a.other_mkt_type,'1',a.other_mkt_type,a.mkt_type),mkt_type)),2,'0'),'00'),1,2) mkt_type                       ,
	/* IB_12174 */
	SUBSTR(NVL(RPAD(decode(a.CLH_DVP,'D',decode(a.deal_cd,'3',a.other_stlmnt_no,'1',a.other_stlmnt_no,a.settlement_no),settlement_no),7,' '),:chr_g_format_filler),1,7) settlement_no      , /* IB_12174 */
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler3 is splitted into 2 Parts with 1 Field and 1 Filler - START
	SUBSTR(:chr_g_format_filler, 1, 7) as DP_904_905_Filler3, */
	SUBSTR(:chr_g_format_filler, 1, 6) as DP_904_905_Filler3 /*No of Instruction - 6 space*/,
	SUBSTR(:chr_g_format_filler, 1, 1) as DP_904_905_Filler12 /*Filler*/,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler3 is splitted into 2 Parts with 1 Field and 1 Filler - END*/
	/*changes done By Pankaj Deshpande for passing execuation date as system date in batch start*/
	SUBSTR(NVL(RPAD(TO_CHAR(to_date(:l_sys_dt,'DD/MM/YYYY HH24:MI:SS'),'YYYYMMDD'),8,' '),:chr_g_format_filler),1,8)    ,
	SUBSTR(NVL(RPAD(TO_CHAR(to_date(:l_sys_dt,'DD/MM/YYYY HH24:MI:SS'),'YYYYMMDD'),8,' '),:chr_g_format_filler),1,8)    ,
	/*changes done By Pankaj Deshpande for passing execuation date as system date in batch Ends */
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler is splitted into 2 Parts with 1 Filler and 1 Field - START
	SUBSTR(NVL(RPAD(other_branch_cd,6,' '),:chr_g_format_filler), 1, 6) other_branch_cd ,*/
	SUBSTR(NVL(RPAD(other_branch_cd,4,' '),:chr_g_format_filler), 1, 4) other_branch_cd ,
/*SUBSTR(:chr_g_format_filler, 1, 2) as DP_904_905_Filler13, Commented By Priyanka For KOTAK TRANFER REASON WILL BE PRINTED */ /*Transfer Reason Code - 2 space will be provided*/
	SUBSTR(NVL(LPAD(a.TRANSFER_REASON_CODE,2,' '),:chr_g_format_filler), 1, 2) as DP_904_905_Filler13 /*Transfer Reason Code - 2 space will be provided*/,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler3 is splitted into 2 Parts with 1 Filler and 1 Field - END*/
	SUBSTR(NVL(RPAD(a.OTHER_DP_ID,8,' '),:chr_g_format_filler),1,8) other_dp_id        ,
	//SUBSTR(NVL(LPAD(TO_CHAR(DECODE(TRANS_TYPE,'904',OTHER_CLIENT_ID,'934',OTHER_CLIENT_ID,a.CMBP_ID)),8,' ') ,:chr_g_format_filler),1,8) other_client_no /* DP_ID & CLNT Total 16 Chars */,
	SUBSTR(NVL(LPAD(TO_CHAR(OTHER_CLIENT_ID),8,' '),:chr_g_format_filler),1,8) other_client_no, /* DP_ID & CLNT Total 16 Chars */
	SUBSTR(NVL(LPAD(TO_CHAR(''),2,'0'),'00'),1,2) DP_904_905_Filler5 /*filler2*/       ,
/* Following is Changed For PMS CMBP_ID - 08082015 - Priyanka - In Offmarket CMBP_ID should not be printed */    			  //DECODE(decode(a.CLH_DVP,'D',decode(a.deal_cd,'3',a.other_stlmnt_no,'1',a.other_stlmnt_no,a.settlement_no),settlement_no),null,SUBSTR(:chr_g_format_filler,1,8),SUBSTR(NVL(RPAD(DECODE(TRANS_TYPE,'904',a.CMBP_ID,'934',a.CMBP_ID,OTHER_CLIENT_ID),8,' '), :chr_g_format_filler),1,8)) cm_bp_id
	DECODE(decode(a.CLH_DVP,'D',decode(a.deal_cd,'3',a.other_stlmnt_no,'1',a.other_stlmnt_no,a.settlement_no),settlement_no),null,SUBSTR(:chr_g_format_filler,1,8),SUBSTR(NVL(RPAD(DECODE(a.CLH_DVP,'D',a.CMBP_ID,'C',a.CMBP_ID),8,' '), :chr_g_format_filler),1,8)) cm_bp_id,

	/* Filler6 is splitted into 3 Parts with 2 substituted fields & rest with spaces*/
	/*Swapnil PMS 12434 Starts*/
	DECODE(TRANS_TYPE,'934',SUBSTR(NVL(RPAD(TO_CHAR(a.mkt_type),2,' '),:chr_g_format_filler),1,2),SUBSTR(NVL(RPAD(to_char(''),2,' '),:chr_g_format_filler),1,2)) other_mkt_type,  // Swapnil PMS 12434 -  /*Added by Asmeet for ISKB_12434  PMS_ON_MARKET */
	DECODE(TRANS_TYPE,'934',SUBSTR(NVL(RPAD(a.settlement_no,7,' '),:chr_g_format_filler),1,7),SUBSTR(NVL(RPAD('',7,' '),:chr_g_format_filler),1,7)) other_stlmnt_no,  // Swapnil PMS 12434 -  /*Added by Asmeet for ISKB_12434  PMS_ON_MARKET */	
	/*Swapnil PMS 12434 Ends */
	SUBSTR(:chr_g_format_filler, 1, 8) DP_904_905_Filler6  /* Rest of Filler6 Part3 */ ,
	/* End Of Framing                                       **** Filler6 ****       */

	SUBSTR(NVL(RPAD(INTERNAL_REF_NO, 35, ' '),
	:chr_g_format_filler), 1, 35) internal_ref_no                               ,
	SUBSTR(NVL(RPAD(SEND_REF_1,50,' '),:chr_g_format_filler),1,50) send_ref_1          ,
	SUBSTR(NVL(RPAD(SEND_REF_2,50,' '),:chr_g_format_filler),1,50) send_ref_2          ,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler7 is splitted into 2 Parts with 1 Filler and 1 Field - START
	SUBSTR(:chr_g_format_filler, 1, 35) as DP_904_905_Filler7,*/
/*	SUBSTR(:chr_g_format_filler, 1, 22) as DP_904_905_Filler7 , This is Commented and  will be printed */ /*Reason- 22 space*/
	SUBSTR(NVL(RPAD(REASON_PURPOSE,22,' '),:chr_g_format_filler), 1, 22) as DP_904_905_Filler7 /*Reason- 22 space*/,
	SUBSTR(:chr_g_format_filler, 1, 12) as DP_904_905_Filler14 /*Filler -12 space modified by Sunny for CS0016121 - Kotak */,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler7 is splitted into 2 Parts with 1 Filler and 1 Field - END*/
	'1' as priority_flag                                                               ,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler8 is splitted into 2 Parts with 1 Filler and 3 Field - START
	SUBSTR(:chr_g_format_filler, 1, 24) as DP_904_905_Filler8,*/
	SUBSTR(:chr_g_format_filler, 1, 1) as DP_904_905_Filler8 /*DPI Flag*/,
	SUBSTR(:chr_g_format_filler, 1, 15) as DP_904_905_Filler15 /*Consideration - 15 Spaces*/,
	SUBSTR(:chr_g_format_filler, 1, 8) as DP_904_905_Filler16 /*Source DP ID*/,
	/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788X - Filler8 is splitted into 2 Parts with 1 Filler and 3 Field - END*/
	SUBSTR(NVL(RPAD(INTERNAL_REF_NO,16,' '),
	:chr_g_format_filler),1,16) int_ref_no_cdsl       /* For CDSL */            ,
	NVL(LPAD(DECODE(TRANS_TYPE,'904',(a.OTHER_DP_ID||A.CLIENT),
		'905',(a.OTHER_DP_ID||a.OTHER_CLIENT_ID)),16,'0')       ,
	SUBSTR(:chr_g_format_zeros, 1, 16)) AS BO_ID         /* For CDSL */            ,
	NVL(LPAD(DECODE(TRANS_TYPE,'904',(a.OTHER_DP_ID||a.OTHER_CLIENT_ID),
		'905',(a.OTHER_DP_ID||A.CLIENT)),16,'0'),
	SUBSTR(:chr_g_format_zeros, 1, 16)) AS COUNTER_BO_ID /* For CDSL */            ,
	a.INSTR_CODE                                                                       ,
	a.QTY                                                                              ,
			 DEAL_CD,
       a.deal_ref_nos,      //Added For Selecting refernce number to update nds_date for offmarket 06082015 -PMS
	/*Added by Sunny for CS0016121 - Kotak end*/   
	RPAD(NVL(DECODE(TRANS_TYPE,'904',decode(a.CLH_DVP,'C','Y','D',decode(a.SETTLEMENT_NO,null,a.WITHOUT_CON_FLAG,'Y')),' '),' '),1,' '),
	RPAD(NVL(cast(a.STAMP_DUTY_PAY_IND as varchar2(1)),' '),1,' ')/*Added by Sunny for CS0016121 - Kotak end*/,	
	NVL(DECODE(a.CLH_DVP,'C',decode(TRANS_TYPE,'904','Y','934',decode(a.deal_cd,'3',' ','1',' ',' '),' '),' '),' ')/*Changes done by Sunny for CS0031749*/,
	   /*changes done by shrinath for DP passing UAT issue fixed. mode of payment to be changed*/
	   RPAD(NVL(to_char(decode(a.MODE_OF_PAYMENT,'C','01','CH','02','E','03')),' '),2,' ') ,
			RPAD(NVL(TO_CHAR(a.PAYMENT_TRAN_DATE,'YYYYMMDD'),' '),8,' '),
			RPAD(NVL(a.TRANSFEREE_NAME,' '),135,' '),
			RPAD(NVL(a.BANK_AC_NUMBER,' '),30,' '),
			RPAD(NVL(a.BANK_NAME,' '),35,' '),
			RPAD(NVL(a.CHEQUE_TRAN_REF_NO,' '),25,' '),
			NVL(a.POSITION_REQ_FLAG,'N')
	FROM DL_DPINSTRS a,
	//MT_CLI_DEPO_MAP b, changes done for 12434
	PRO_SGENSTAT c
	WHERE batch_no           =  :chr_p_batch_no
	//AND a.client           =  b.cln_depo_map_client_id  changes done for 12434
	//AND a.depo_ind         =  b.cln_depo_code
	AND NVL(a.status,'N')  =  :chr_l_status_ind
           //          AND a.client_code=b.cln_code // Added on 06082015 Priyanka Commeted on 07122015 - Priyanka
	AND c.MAP_TYPE			= 'DIS_IND'
	ORDER BY batch_no, serial_no;

	//Commented and Rewritten by Prateek on 03072014 For ISKB_6788(DIS Format Change)-END

	
	 EXEC SQL OPEN cur_l_details;
		
	 IS_ANY_ORA_ERROR
	 
		   for(;;)
		   {

          printf("\n GOING TO FETCH DETAILS FOR cur_l_details");
		  fflush(stdout);

          memset(chr_l_deal_ref_nos,APL_NULL_CHAR,4001); //PMS 06082015 
			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */	

			/* Memsetting Variables Before Fetching from DB Cursor */
			l_int_qty  = 0;
	         memset(chr_l_filler904_905_2, APL_NULL_CHAR, sizeof(chr_l_filler904_905_2));
		 memset(chr_l_filler904_905_8, APL_NULL_CHAR, sizeof(chr_l_filler904_905_8));
		 memset(chr_l_filler904_905_135, APL_NULL_CHAR, sizeof(chr_l_filler904_905_135));
		 memset(chr_l_filler904_905_30, APL_NULL_CHAR, sizeof(chr_l_filler904_905_30));
		 memset(chr_l_filler904_905_35, APL_NULL_CHAR, sizeof(chr_l_filler904_905_35));
		 memset(chr_l_filler904_905_25, APL_NULL_CHAR, sizeof(chr_l_filler904_905_25));
			CMEMSET( chr_l_orig_client     );
			CMEMSET( chr_l_pos_req_flg     );
			CMEMSET( chr_l_batch_no        );
			CMEMSET( chr_l_serial_no       );
			CMEMSET( chr_l_trans_flg       );
			CMEMSET( chr_l_904_905_filler1 );
			CMEMSET( chr_l_904_905_filler9 ); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_dis_ind           ); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_client          );
			CMEMSET( chr_l_isin_cd         );
			CMEMSET( chr_l_qty             );
			CMEMSET( chr_l_904_905_filler2 );
			CMEMSET( chr_l_904_905_filler10); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_904_905_filler11); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_mkt_type        );
			CMEMSET( chr_l_settlement_no   );
			CMEMSET( chr_l_904_905_filler3 );
			CMEMSET( chr_l_904_905_filler12); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_setl_date       );
			CMEMSET( chr_l_setl_date_cdsl  );
			CMEMSET( chr_l_other_branch_cd );
			CMEMSET( chr_l_904_905_filler13); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_other_dpid      );
			CMEMSET( chr_l_other_acc_no    );
			CMEMSET( chr_l_904_905_filler5 );
			CMEMSET( chr_l_other_cm_bp_id  );
			CMEMSET( chr_l_other_mkt_type  );
			CMEMSET( chr_l_other_stlmnt_no );
			CMEMSET( chr_l_904_905_filler6 );
			CMEMSET( chr_l_internal_ref_no );
			CMEMSET( chr_l_send_ref_1      );
			CMEMSET( chr_l_send_ref_2      );
			CMEMSET( chr_l_904_905_filler7 );
			CMEMSET( chr_l_904_905_filler14); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_priority_flag   );
			CMEMSET( chr_l_904_905_filler8 );
			CMEMSET( chr_l_904_905_filler15); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_904_905_filler16); //Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)
			CMEMSET( chr_l_int_ref_no_cdsl );
			CMEMSET( chr_l_bo_id           );
			CMEMSET( chr_l_counter_bo_id   );
			CMEMSET( chr_l_instr_code      );
			CMEMSET( chr_l_deal_cd         );	
			CMEMSET( chr_l_without_con_flag_filler_1         );//Added by Sunny for CS0016121 - Kotak 
			CMEMSET( chr_l_stamp_duty_pay_ind_filler_1         );//Added by Sunny for CS0016121 - Kotak 
			CMEMSET( chr_l_early_payin_ind_filler_1         );//Changes done by Sunny for CS0031749
          printf("\n GOING TO FETCH DETAILS FOR cur_l_details:111");
		  fflush(stdout);
			/* End of ISKB_3298 Changes - Jun2010 - Naren V */

			/* EXEC SQL FETCH cur_l_details INTO    :chr_l_orig_client,
							        :chr_l_batch_no:i_batch_no,
							        :chr_l_serial_no:i_serial_no,
							        :chr_l_trans_type:i_trans_type,
							        :chr_l_trans_flg,
							        :chr_l_filler3,
							        :chr_l_client,
		       					        :chr_l_isin_cd,
							        :chr_l_qty,
							        :chr_l_filler4,
							        :chr_l_mkt_type,
							        :chr_l_settlement_no,
							        :chr_l_setl_date:i_setl_date,
							        :chr_l_setl_date_cdsl:i_setl_date_cdsl,
							        :chr_l_other_branch_cd,
							        :chr_l_other_dpid,
							        :chr_l_other_acc_no,
							        :chr_l_filler2,
							        :chr_l_other_cm_bp_id,
							        :chr_l_other_mkt_type,
							        :chr_l_other_stlmnt_no,
							        :chr_l_internal_ref_no,
							        :chr_l_send_ref_1,
							        :chr_l_send_ref_2,
							        :chr_l_filler,
							        :chr_l_int_ref_no_cdsl,
							        :chr_l_bo_id:i_bo_id,
							        :chr_l_counter_bo_id:i_counter_bo_id,
							        :chr_l_instr_code,
							        :l_int_qty:i_int_qty,
							        :chr_l_deal_cd:i_deal_cd;
			** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

printf("\n ppppppppppppppp");
fflush(stdout);

			EXEC SQL FETCH  cur_l_details 
				  INTO	:chr_l_orig_client                      ,
						:chr_l_batch_no        :i_batch_no      ,
						:chr_l_serial_no       :i_serial_no     ,
						:chr_l_trans_type      :i_trans_type    ,
						:chr_l_trans_flg                        ,
						:chr_l_904_905_filler1                  ,
						:chr_l_904_905_filler9                  , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
						:chr_dis_ind                            , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
						:chr_l_client                           ,
						:chr_l_isin_cd                          ,
						:chr_l_qty                              ,
						:chr_l_904_905_filler2                  ,
						:chr_l_904_905_filler10                 ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
						:chr_l_904_905_filler11                 ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
						:chr_l_mkt_type                         ,
						:chr_l_settlement_no                    ,
						:chr_l_904_905_filler3                  ,
						:chr_l_904_905_filler12                 ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
						:chr_l_setl_date       :i_setl_date     ,
						:chr_l_setl_date_cdsl  :i_setl_date_cdsl,
						:chr_l_other_branch_cd                  , /* 904_905_Filler4       */
						:chr_l_904_905_filler13                 ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
						:chr_l_other_dpid                       ,
						:chr_l_other_acc_no                     ,
						:chr_l_904_905_filler5                  ,
						:chr_l_other_cm_bp_id                   ,
						:chr_l_other_mkt_type                   , /* 904_905_Filler6 Part1 */
						:chr_l_other_stlmnt_no                  , /* 904_905_Filler6 Part2 */
						:chr_l_904_905_filler6                  , /* 904_905_Filler6 Part3 */
						:chr_l_internal_ref_no                  ,
						:chr_l_send_ref_1                       ,
						:chr_l_send_ref_2                       ,
						:chr_l_904_905_filler7                  ,
						:chr_l_904_905_filler14                 , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
						:chr_l_priority_flag                    ,
						:chr_l_904_905_filler8                  ,
						:chr_l_904_905_filler15                 ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
						:chr_l_904_905_filler16                 ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
						:chr_l_int_ref_no_cdsl                  ,
						:chr_l_bo_id           :i_bo_id         ,
						:chr_l_counter_bo_id   :i_counter_bo_id ,
						:chr_l_instr_code                       ,
						:l_int_qty             :i_int_qty       ,
						:chr_l_deal_cd         :i_deal_cd           ,
						:chr_l_deal_ref_nos:i_deal_ref_nos                    ,//Added For PMS - 06082015
						:chr_l_without_con_flag_filler_1:i_without_con_flag_filler_1           ,/*Added by Sunny for CS0016121 - Kotak */
						:chr_l_stamp_duty_pay_ind_filler_1:i_stamp_duty_pay_ind_filler_1,       /*Added by Sunny for CS0016121 - Kotak */     
						:chr_l_early_payin_ind_filler_1:i_l_early_payin_ind_filler_1,/*Changes done by Sunny for CS0031749*/
		                                 :chr_l_filler904_905_2, /* ICICI_2191 */
						:chr_l_filler904_905_8,
						:chr_l_filler904_905_135,
						:chr_l_filler904_905_30,
						:chr_l_filler904_905_35,
						:chr_l_filler904_905_25,
						:chr_l_pos_req_flg;
		printf("deal_code==|%s|",chr_l_deal_cd);				
       printf("\n SQLCODE OF PASSING :[%d] counter:[%d]",sqlca.sqlcode,counter);
	   fflush(stdout);
       printf("\n TRANSFER REASON CODE :chr_l_904_905_filler13:[%s]",chr_l_904_905_filler13);
	   fflush(stdout);

				if(APL_ZERO_RESULT_SET)
				{
				    if(counter==0)
				    {
			 	      CO_ProcMonitor(g_logfile,"No Records Found in the cur_l_details CURSOR" ,NULL,NULL);
				    }
					break;
				} /* End of ZERO Result Set Check */
				IS_ANY_ORA_ERROR
		
				counter++;
				memset(chr_l_detail_rec,APL_NULL_CHAR,1000);
				strcpy(chr_l_detail_rec,APL_NULL_STRING);
				memset(chr_l_detail_rec_rev,APL_NULL_CHAR,1000);
				strcpy(chr_l_detail_rec_rev,APL_NULL_STRING);
				/* Added by Shradha for 934 generation KB_12434 - Starts */
				memset(chr_l_detail_rec_pms,APL_NULL_CHAR,1000);
				/* Added by Shradha for 934 generation KB_12434 - Ends */

				printf("\n chr_l_batch_no=|%s| \n",chr_l_batch_no);
				fflush(stdout);
				printf("\n chr_l_serial_no=|%s| \n",chr_l_serial_no);
				fflush(stdout);
				printf("\n chr_l_trans_type=|%s| \n",chr_l_trans_type);
				fflush(stdout);
				printf("\n chr_l_trans_flg=|%s| \n",chr_l_trans_flg);
				fflush(stdout);
				printf("\n chr_dis_ind=|%s| \n",chr_dis_ind); /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
				printf("\n chr_l_client=|%s| \n",chr_l_client);
				printf("\n chr_l_isin_cd=|%s| \n",chr_l_isin_cd);
				printf("\n chr_l_qty=|%s| \n",chr_l_qty);
				printf("\n chr_l_mkt_type=|%s| \n",chr_l_mkt_type);
				printf("\n chr_l_settlement_no=|%s| \n",chr_l_settlement_no);
				printf("\n l_temp_mkttype=|%s| \n",l_temp_mkttype);
				printf("\n chr_l_settlement Date=|%s| \n",chr_l_setl_date);
				printf("\n chr_l_other_branch_cd=|%s| \n",chr_l_other_branch_cd);
				printf("\n chr_l_other_dpid =|%s| \n",chr_l_other_dpid);
				printf("\n chr_l_other_acc_no =|%s| \n",chr_l_other_acc_no);
				printf("\n chr_l_other_cm_bp_id=|%s| \n",chr_l_other_cm_bp_id);
				printf("\n chr_l_other_mkt_type=|%s| \n",chr_l_other_mkt_type);
				printf("\n chr_l_other_stlmnt_no=|%s| \n",chr_l_other_stlmnt_no);
				printf("\n chr_l_internal_ref_no=|%s| \n",chr_l_internal_ref_no);
				printf("\n chr_l_send_ref_1=|%s| \n",chr_l_send_ref_1);
				printf("\n chr_l_send_ref_2=|%s| \n",chr_l_send_ref_2);
				/* printf("\n chr_l_filler=|%s| \n",chr_l_filler);
				** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
				printf("\n chr_l_int_ref_no_cdsl=|%s| \n",chr_l_int_ref_no_cdsl);
				printf("\n chr_l_bo_id=|%s| \n",chr_l_bo_id);

				sprintf(chr_g_log_buffer,"chr_l_batch_no=|%s| \n",chr_l_batch_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_serial_no=|%s| \n",chr_l_serial_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_trans_type=|%s| \n",chr_l_trans_type);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_trans_flg=|%s| \n",chr_l_trans_flg);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
				sprintf(chr_g_log_buffer,"chr_dis_ind=|%s| \n",chr_dis_ind);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)- END*/
				sprintf(chr_g_log_buffer,"chr_l_client=|%s| \n",chr_l_client);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_isin_cd=|%s| \n",chr_l_isin_cd);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_qty=|%s| \n",chr_l_qty);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_mkt_type=|%s| \n",chr_l_mkt_type);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_settlement_no=|%s| \n",chr_l_settlement_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_settlement Date=|%s| \n",chr_l_setl_date);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_branch_cd=|%s| \n",chr_l_other_branch_cd);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_dpid =|%s| \n",chr_l_other_dpid);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_acc_no =|%s| \n",chr_l_other_acc_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_cm_bp_id=|%s| \n",chr_l_other_cm_bp_id);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_mkt_type=|%s| \n",chr_l_other_mkt_type);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_stlmnt_no=|%s| \n",chr_l_other_stlmnt_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_internal_ref_no=|%s| \n",chr_l_internal_ref_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				printf(chr_g_log_buffer,"chr_l_send_ref_1=|%s| \n",chr_l_send_ref_1);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_send_ref_2=|%s| \n",chr_l_send_ref_2);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				/* sprintf(chr_g_log_buffer,"chr_l_filler=|%s| \n",chr_l_filler);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL); 
				** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
				sprintf(chr_g_log_buffer,"chr_l_int_ref_no_cdsl=|%s| \n",chr_l_int_ref_no_cdsl);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_bo_id=|%s| \n",chr_l_bo_id);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_counter_bo_id=|%s| \n",chr_l_counter_bo_id);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

				/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
				sprintf(chr_g_log_buffer,"chr_l_priority_flag=|%s| \n",chr_l_priority_flag);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				/* End of ISKB_3298 Changes - Jun2010 - Naren V  */


				sprintf(chr_g_log_buffer,"Serial no=|%s| Depository is=|%s|",
					chr_l_serial_no,chr_l_depository);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				
				printf("|%s|\n",chr_l_batch_no);
				printf("|%s|\n",chr_l_rec_type);
				printf("|%s|\n",chr_l_serial_no);
				printf("|%s|\n",chr_l_trans_type);
				printf("|%s|\n",chr_l_trans_flg);
				/* printf("|%s|\n",chr_l_filler3); 
				** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
				printf("|%s|\n",chr_l_904_905_filler1);
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
				printf("|%s|\n",chr_l_904_905_filler9);
				printf("|%s|\n",chr_dis_ind); 
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-END*/
				printf("|%s|\n",chr_l_client);
				printf("|%s|\n",chr_l_isin_cd);
				printf("|%s|\n",chr_l_qty);
				printf("|%s|\n",chr_l_904_905_filler2); /* Added For ISKB_3298 */
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
				printf("|%s|\n",chr_l_904_905_filler10);
				printf("|%s|\n",chr_l_904_905_filler11);
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-END*/
				printf("|%s|\n",chr_l_mkt_type);
				printf("|%s|\n",chr_l_settlement_no);
				printf("|%s|\n",chr_l_904_905_filler3); /* Added For ISKB_3298 */
				printf("|%s|\n",chr_l_904_905_filler12); /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
				printf("|%s|\n",chr_l_setl_date);
				printf("|%s|\n",chr_l_other_branch_cd); /* Substitute For Filler4 */
				printf("|%s|\n",chr_l_904_905_filler13); /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
				printf("|%s|\n",chr_l_other_dpid);
				printf("|%s|\n",chr_l_other_acc_no);
				/* printf("|%s|\n",chr_l_filler2);
				** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
				printf("|%s|\n",chr_l_904_905_filler5);
				printf("|%s|\n",chr_l_other_cm_bp_id);
				printf("|%s|\n",chr_l_other_mkt_type);
				printf("|%s|\n",chr_l_other_stlmnt_no);
				printf("|%s|\n",chr_l_904_905_filler6); /* Added For ISKB_3298 */
				printf("|%s|\n",chr_l_internal_ref_no);
				printf("|%s|\n",chr_l_send_ref_1);
				printf("|%s|\n",chr_l_send_ref_2);

				/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
				/* printf("|%s|\n",chr_l_filler);
				** Modified For ISKB_3298 Changes */
				printf("|%s|\n",chr_l_904_905_filler7); 
				printf("|%s|\n",chr_l_904_905_filler14); /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
				printf("|%s|\n",chr_l_priority_flag);
				printf("|%s|\n",chr_l_904_905_filler8);
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
				printf("|%s|\n",chr_l_904_905_filler15); 
				printf("|%s|\n",chr_l_904_905_filler16);
				/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-END*/
				fflush(stdout);
				/* End of ISKB_3298 Changes - Jun2010 - Naren V  */
				
//Changes done by shrinath for new File format KOTAK_11371
		 Alert("beforre changes fillers of 400\n");
		 memset(chr_l_filler904_905_164, APL_NULL_CHAR, sizeof(chr_l_filler904_905_164));
		 /* Added by Shradha for 934 generation KB_12434 - Starts */
	         memset(chr_l_filler904_905_24, APL_NULL_CHAR, sizeof(chr_l_filler904_905_24));   
	         memset(chr_l_filler904_905_9, APL_NULL_CHAR, sizeof(chr_l_filler904_905_9));   
	         memset(chr_l_filler904_905_399, APL_NULL_CHAR, sizeof(chr_l_filler904_905_399));   
	         memset(chr_l_filler_904_905_16, APL_NULL_CHAR, sizeof(chr_l_filler_904_905_16));  
		 /* Added by Shradha for 934 generation KB_12434 - Ends */
	

			if(strcmp(chr_l_depository,"CDSL")==0)
			{
				if(strcmp(chr_l_exch_code,"NSE")==0)
				{
					if(strcmp(chr_l_trxn_code,"905")==0)
					{
						strcpy(chr_l_buy_sell,"S");
					}
					if((strcmp(chr_l_mkt_type,"00")==0) || (strcmp(chr_l_mkt_type,"13")==0))
					{
						strcpy(l_temp_mkttype,"N");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"N");

					}
					else if(strcmp(chr_l_mkt_type,"14")==0)
					{
						strcpy(l_temp_mkttype,"A");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"A");
					}
					else if(strcmp(chr_l_mkt_type,"22")==0)
					{
						strcpy(l_temp_mkttype,"W");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"W");
					}
					else if(strcmp(chr_l_mkt_type,"21")==0)
					{
						strcpy(l_temp_mkttype,"D");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"D");
					}
					/*else if(strcmp(chr_l_mkt_type,"02")==0)
					{
						strcpy(l_temp_mkttype,"B");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"B");
					}
					else if(strcmp(chr_l_mkt_type,"01")==0)
					{
						strcpy(l_temp_mkttype,"N");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"N");
					}*/
					else if(strcmp(chr_l_mkt_type,"49")==0)
					{
						strcpy(l_temp_mkttype,"M");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"M");
					}
					else if(strcmp(chr_l_mkt_type,"50")==0)
					{
						strcpy(l_temp_mkttype,"Z");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"Z");
					}
					else
					{
						strcpy(l_temp_mkttype," ");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype," ");
					}

					
					memset(chr_l_settlement_no,APL_NULL_CHAR,13);
					strcpy(chr_l_settlement_no,l_temp_mkttype);
					
					if(APL_FAILURE == CO_PadString(chr_l_settlement_no,'R',13," ",l_debug_info_ptr))
					{
						fprintf(g_logfile,"\n Failure from CO_PadString:Still Going Ahead \n");
						strcpy(chr_l_settlement_no,"             ");
					}
					fprintf(g_logfile,"\n Offmarket:Blank Settlement No(13)=|%s| \n",chr_l_settlement_no);

					sprintf(chr_l_detail_rec,"%s%s%s%s%s%s%c %s%s",chr_l_setl_date_cdsl,chr_l_bo_id,
																				chr_l_counter_bo_id,
																				chr_l_isin_cd,chr_l_qty,chr_l_buy_sell,'X',
																				chr_l_int_ref_no_cdsl,chr_l_settlement_no);

				}
/*Added By PT for the MCS Exchange MCS Enhancement [START]*/
				else if(strcmp(chr_l_exch_code,"MCS")==0) 
				{
					if(strcmp(chr_l_trxn_code,"905")==0)
					{
						strcpy(chr_l_buy_sell,"S");
					}
					if((strcmp(chr_l_mkt_type,"00")==0) || (strcmp(chr_l_mkt_type,"01")==0))
					{
						strcpy(l_temp_mkttype,"N");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"N");

					}
					else if(strcmp(chr_l_mkt_type,"02")==0)
					{
						strcpy(l_temp_mkttype,"A");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"A");
					}
					else if(strcmp(chr_l_mkt_type,"03")==0)
					{
						strcpy(l_temp_mkttype,"W");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"W");
					}
					else if(strcmp(chr_l_mkt_type,"23")==0)
					{
						strcpy(l_temp_mkttype,"M");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"M");
					}
					else if(strcmp(chr_l_mkt_type,"24")==0)
					{
						strcpy(l_temp_mkttype,"Z");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype,"Z");
					}
					else
					{
						strcpy(l_temp_mkttype," ");
						strcat(l_temp_mkttype,chr_l_settlement_no);
						strcat(l_temp_mkttype," ");
					}

					
					memset(chr_l_settlement_no,APL_NULL_CHAR,16);
					strcpy(chr_l_settlement_no,l_temp_mkttype);
	
					sprintf(chr_l_detail_rec,"%s%s%s%s%s%s%c%d%s    %s",chr_l_setl_date_cdsl,chr_l_bo_id,
																				chr_l_counter_bo_id,
																				chr_l_isin_cd,chr_l_qty,chr_l_buy_sell,'X',0,
																				chr_l_int_ref_no_cdsl,chr_l_settlement_no);

				}
/*Added By PT for the MCS Exchange MCS Enhancement [END]*/

				else
				{	if(strcmp(chr_l_trxn_code,"905")==0)
					{
						strcpy(chr_l_buy_sell,"S");
					}
						strcpy(l_temp_mkttype,"1110");
						if((strcmp(chr_l_mkt_type,"05")==0) || (strcmp(chr_l_mkt_type,"41")==0))
						{
						strcat(l_temp_mkttype,"00");
						}
						else if (strcmp(chr_l_mkt_type,"04")==0)
						{
						strcat(l_temp_mkttype,"01");
						}
						else if (strcmp(chr_l_mkt_type,"02")==0)
						{
						strcat(l_temp_mkttype,"06");
						}
						else
						strcat(l_temp_mkttype,chr_l_mkt_type);
						strcat(l_temp_mkttype,chr_l_settlement_no);
						memset(chr_l_settlement_no,APL_NULL_CHAR,13);
						strcpy(chr_l_settlement_no,l_temp_mkttype);
				sprintf(chr_l_detail_rec,"%s%s%s%s%s%s%c %s%s",chr_l_setl_date_cdsl,chr_l_bo_id,
																				chr_l_counter_bo_id,
																				chr_l_isin_cd,chr_l_qty,chr_l_buy_sell,'X',
																				chr_l_int_ref_no_cdsl,chr_l_settlement_no);
				}



				if(strcmp(chr_l_trxn_code,"905")==0  && strcmp(chr_l_clh_flg,"C")==0 )
				{	
					//ISolve322:AmitB:290507
					EXEC SQL SELECT SUBSTR(NVL(RPAD(CONCAT(DL_DPINSTRSEQ.NEXTVAL,SUBSTR(:chr_l_int_ref_no_cdsl,LENGTH(to_number(:chr_l_batch_no))+1)),16,' '),'                '),1,16)  INTO :chr_l_int_ref_no_cdsl_rev FROM DUAL;
					IS_ANY_ORA_ERROR
					printf("\n chr_l_int_ref_no_cdsl_rev=|%s| \n",chr_l_int_ref_no_cdsl_rev);

					if(strcmp(chr_l_buy_sell,"B")==0)
					{
						strcpy(chr_l_buy_sell_rev,"S");
					}
					else if(strcmp(chr_l_buy_sell,"S")==0)
					{	
						strcpy(chr_l_buy_sell_rev,"B");
					}
					if(strcmp(chr_l_exch_code,"NSE")==0 || strcmp(chr_l_exch_code,"MCS")==0 )
					{
/*						sprintf(chr_l_detail_rec_rev,"%s%s%s%s%s%s%c %s     %s",chr_l_setl_date_cdsl,chr_l_counter_bo_id,
																				chr_l_bo_id,
																				chr_l_isin_cd,chr_l_qty,chr_l_buy_sell_rev,'X',
																				chr_l_int_ref_no_cdsl,chr_l_settlement_no);
*/
						sprintf(chr_l_detail_rec_rev,"%s%s%s%s%s%s%c %s%s",chr_l_setl_date_cdsl,chr_l_counter_bo_id,
																				chr_l_bo_id,
																				chr_l_isin_cd,chr_l_qty,chr_l_buy_sell_rev,'X',
																				chr_l_int_ref_no_cdsl_rev,chr_l_settlement_no);
					}
					else
					{

					sprintf(chr_l_detail_rec_rev,"%s%s%s%s%s%s%c %s%s",chr_l_setl_date_cdsl,chr_l_counter_bo_id,
																				chr_l_bo_id,
																				chr_l_isin_cd,chr_l_qty,chr_l_buy_sell_rev,'X',
																				chr_l_int_ref_no_cdsl_rev,chr_l_settlement_no);
					}

					fprintf(g_logfile,"\n Rev file line=|%s| \n",chr_l_detail_rec_rev);
					fprintf(l_ptr_handoff_file_rev,"%s",chr_l_detail_rec_rev);
					fprintf(l_ptr_handoff_file_rev,"\n");	

				}

			}
			else if(strcmp(chr_l_depository,"NSDL")==0)
			{

			/**Change: AMitB:02/11/06: If source is ClientBene,Mkt Type & SettlNo should be as below **/
                        // In  Following qry CLN_DEPO_MAP_CLIENT_ID is added for PMS Offmarket defect - 04082015

			printf("\n SLB client id is |%s|,depo code is - |%s| , chr_l_other_dpid - [%s]\n",chr_l_client,chr_l_depository,chr_l_other_dpid);
			EXEC SQL SELECT 'X' INTO :l_exists_cln_depo:i_exists_clndepo FROM MT_CLI_DEPO_MAP
				WHERE CLN_DEPO_MAP_CLIENT_ID=:chr_l_client AND CLN_DEPO_CODE=:chr_l_depository 
        AND STATUS='AA';
       // AND cln_code = :chr_l_client; Commented on 07122015 

			printf("\n SLB sqlca.sqlcode is |%d|\n",sqlca.sqlcode);
			IS_ANY_ORA_ERROR

			fprintf(g_logfile,"\n Amit:Error=|%d l_exists_cln_depo=|%s| chr_l_client=|%s| \n",sqlca.sqlcode,l_exists_cln_depo,chr_l_client);
			strcpy(chr_l_mkt_type_pool,"00");
			strcpy(chr_l_settlement_no_pool,"       ");
			fprintf(g_logfile,"\n Amit:Source Client:chr_l_mkt_type_pool=|%s| chr_l_settlement_no_pool=|%s| chr_l_mkt_type=|%s| chr_l_settlement_no=|%s|\n",chr_l_mkt_type_pool,chr_l_settlement_no_pool,chr_l_mkt_type,chr_l_settlement_no);
			if(!strcmp(l_exists_cln_depo,"X"))
			{
				printf("\n Skipping ...\n");
			}

			/** For CLH Deliver Clientid should be Blank : Also For Mirror of 905 **/
/*			if(strcmp(chr_l_clh_flg,"C")==0)
				strcpy(chr_l_other_acc_no_del,"        ");
			else if(strcmp(chr_l_clh_flg,"D")==0)
				strcpy(chr_l_other_acc_no_del,chr_l_other_acc_no);

*/			strcpy(chr_l_other_acc_no_del,"        ");
			printf("\n chr_l_other_acc_no_del=|%s| \n",chr_l_other_acc_no_del);
			
			if(strcmp(chr_l_clh_flg,"D")==0)
			{

/** SETTLEMENT NO IS USED TO COMPARE AND CHECK OFFMARKET DEAL*/
printf("\n chr_l_settlement_no:[%s]",chr_l_settlement_no);
                             //if(strlen(chr_l_settlement_no) > 0) COMMENTED ON 18122015 - PriyankaB
                             if(strcmp(chr_l_settlement_no,"       ") != 0)
                             {
                                printf("\n SETTLEMENT NO PRESENT DVP");
			  //strcpy(chr_l_other_acc_no,"        "); /** For Hand-Del Clientid should be Blank **/ 
			  /*change done by shrinath for populate other cln id ofr DVP ISKB 12434*/
			  strcpy(chr_l_other_acc_no_del,chr_l_other_acc_no);
			}
                             else
                             {
                                printf("\n SETTLEMENT NO NOT PRESENT - OFFMARKET");
          strcpy(chr_l_other_acc_no_del,chr_l_other_acc_no); //Added On 07082015 - PMS
			}
				if(strcmp(chr_l_trxn_code,"905")==0 && strcmp(chr_l_exch_code,APL_NULL_STRING)!=0)//Added by Sandip for ISKB_12434.
				{
					strcpy(chr_l_other_cm_bp_id,chr_l_other_acc_no_del);
					strcpy(chr_l_other_acc_no_del,"        ");				
				}		 
			}
			if(strcmp(chr_l_clh_flg,"C")==0)
			{
			  strcpy(chr_l_other_acc_no_del,APL_NULL_STRING);
			  strcpy(chr_l_other_acc_no_del,"        ");	/** For CLH Deliver Clientid should be Blank **/
			}
			//Added by Sunny for CS0016121 - Kotak start
			if(((strcmp(chr_l_exch_code, APL_NULL_STRING) == 0) && ((strcmp(chr_l_without_con_flag_filler_1,"N") == 0) || (strcmp(chr_l_without_con_flag_filler_1," ")== 0))) &&  ((strcmp(chr_l_904_905_filler13," 1")== 0) || (strcmp(chr_l_904_905_filler13,"01")== 0) || (strcmp(chr_l_904_905_filler13,"22")== 0)))
			    {
					
					EXEC SQL					
						SELECT decode(:chr_l_trans_type, 
									'904',
									decode(net_amt, 0, 
									SUBSTR(NVL(LPAD(:chr_g_format_filler,15,:chr_g_format_filler),:chr_g_format_filler),1,15) ,
									SUBSTR(NVL(LPAD(TO_CHAR(trunc(net_amt)),15,:chr_g_format_zeros),:chr_g_format_zeros),1,15)),:chr_l_904_905_filler15) as net_amt
						INTO :chr_l_904_905_filler15
						FROM DL_DEAL
						WHERE IDENTIY_NO = substr(:chr_l_deal_ref_nos,1,instr(:chr_l_deal_ref_nos,',') -1)	
						AND CLIENT = :chr_l_orig_client;
						
					IS_ANY_ORA_ERROR 
					
				}
				Alert("After if |%s|",chr_l_904_905_filler15);
            //Added by Sunny for CS0016121 - Kotak end
			
			Alert("\n ======== PRINTING DETAIL ======== ");	
				/* sprintf(chr_l_detail_rec,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",chr_l_batch_no,chr_l_rec_type,
						  chr_l_serial_no,chr_l_trans_type,chr_l_trans_flg,chr_l_filler3,chr_l_client,chr_l_isin_cd,
						  chr_l_qty,chr_l_filler4,chr_l_mkt_type,chr_l_settlement_no,chr_l_setl_date,chr_l_other_branch_cd,chr_l_other_dpid,
						  chr_l_other_acc_no_del,chr_l_filler2,chr_l_other_cm_bp_id,chr_l_other_mkt_type,chr_l_other_stlmnt_no,
						  chr_l_internal_ref_no,chr_l_send_ref_1,chr_l_send_ref_2,chr_l_filler);
				** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

				/* Printing Detail Record For 905 - Receipt Instructions For NSDL */

       printf("\n OTHER DP ID FOR OFFMARKET IS :[%s]",chr_l_other_acc_no_del);
                                        /*Modified  by Sunny for CS0016121 - Kotak*/
                                        strcpy(chr_l_filler904_905_164,"                                                                                                                                                                   ");
					/* Added by Shradha for 934 generation KB_12434 - Starts */
					strcpy(chr_l_filler904_905_24,"                        "); 
					strcpy(chr_l_filler904_905_9,"         ");
					strcpy(chr_l_filler_904_905_16,"                ");
					strcpy(chr_l_filler904_905_399,"                                                                                                                                                                                                                                                                                                                                                                                                               ");
					/* Added by Shradha for 934 generation KB_12434 - Ends */
                    
						
						Alert("CHECK2");
				sprintf(chr_l_detail_rec,
					"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
					chr_l_batch_no           ,
					chr_l_rec_type           ,
					chr_l_serial_no          ,
					chr_l_trans_type         ,
					chr_l_trans_flg          ,
					chr_l_904_905_filler1    , /* Replacement to filler3         */
					chr_l_904_905_filler9    , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
					chr_dis_ind              , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
					chr_l_client             ,
					chr_l_isin_cd            ,
					chr_l_qty                ,
					chr_l_904_905_filler2    , /* Replacement to filler4         */
					chr_l_904_905_filler10   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
					chr_l_904_905_filler11   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
					chr_l_mkt_type           ,
					chr_l_settlement_no      ,
					chr_l_904_905_filler3    , /* New Field                      */
					chr_l_904_905_filler12   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
					chr_l_setl_date          ,
					chr_l_other_branch_cd    , /* Substitute for 904_905_Filler4 */
					chr_l_904_905_filler13   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
					chr_l_other_dpid         ,
					chr_l_other_acc_no_del   ,
					chr_l_904_905_filler5    , /* Replacement to filler2         */
					chr_l_other_cm_bp_id     ,
					chr_l_other_mkt_type     , /* 904_905_Filler6 Part1          */
					chr_l_other_stlmnt_no    , /* 904_905_Filler6 Part2          */
					chr_l_904_905_filler6    , /* 904_905_Filler6 Part3          */
					chr_l_internal_ref_no    ,
					chr_l_send_ref_1         ,
					chr_l_send_ref_2         ,
					chr_l_904_905_filler7    , /* Replacement to filler          */
					chr_l_904_905_filler14   , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
					chr_l_without_con_flag_filler_1,//Added by Sunny for CS0016121 - Kotak */
					chr_l_priority_flag      , /* New Field                      */
					chr_l_904_905_filler8    , /* New Field                      */
					chr_l_904_905_filler15   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
					chr_l_904_905_filler16  , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
					chr_l_filler904_905_2    ,
					chr_l_filler904_905_8	 ,
					chr_l_filler904_905_135  ,
					chr_l_filler904_905_30   ,
					chr_l_filler904_905_35   ,
					chr_l_filler904_905_25   ,
					chr_l_stamp_duty_pay_ind_filler_1,
					chr_l_early_payin_ind_filler_1,/*Changes done by Sunny for CS0031749*/
					chr_l_filler904_905_164  
					);

					Alert("type [%s],country[%d]",chr_l_trans_type,int_l_new_file_format);
					Alert("depo [%s],[%s]",chr_l_depository,chr_l_handoff_file_name);
					 if(strcmp(chr_l_trans_type,"934"))
			           {
					
				
					if(int_l_new_file_format > 0 && (strcmp(chr_l_depository,"NSDL")==0) && (strlen(chr_l_handoff_file_name) >0) )
				
				       {
							     Alert(" File Name [%s]",chr_l_handoff_file_name);
								 CMEMSET(l_client_details);
								 sprintf(l_client_details,"%s|%s|%s|%s|%s|",chr_l_client,chr_l_other_dpid,chr_l_other_acc_no_del,chr_l_other_cm_bp_id,chr_l_internal_ref_no);
					  
							     if (APL_FAILURE == New_format(chr_l_handoff_file_name,chr_l_batch_no,chr_l_trans_type ,l_client_details,argv, l_debug_info_ptr))
									{
										Alert("FAILURE FROM NEW_FORMAT");
										APL_GOBACK_FAIL;
									}
					   }
				    }
                
					/* Added by Shradha for 934 generation KB_12434 - Starts */
					if(strcmp(chr_l_trans_type,"934")==0  && (strcmp(chr_l_clh_flg,"C")==0 || strcmp(chr_l_clh_flg,"D")==0))  
					{
								
						//Alert("SHR::: Total incremental quantity before update is [%lf]\n", total_quantity_pms_trailer);
						//total_quantity_pms_trailer = total_quantity_pms_trailer + l_int_qty;
						//Alert("SHR::: Total incremental quantity after update is [%lf] and quantity of current record is [%lf]\n", total_quantity_pms_trailer, l_int_qty);
						
						
						
							sprintf(chr_l_detail_rec_pms,
						"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
						chr_l_batch_no           ,
						chr_l_rec_type           ,
						chr_l_serial_no          ,
						chr_l_trans_type         ,
						chr_l_trans_flg          ,
						chr_l_904_905_filler1    ,
						chr_l_904_905_filler12   ,
						chr_dis_ind              , 
						chr_l_client             ,
						chr_l_isin_cd            ,
						chr_l_qty                ,
						chr_l_filler904_905_9    ,
						chr_l_904_905_filler12   ,
						chr_l_mkt_type           ,
						chr_l_settlement_no      ,
						chr_l_904_905_filler3    ,
						chr_l_904_905_filler12   ,
				     	chr_l_sys_date           ,
						chr_l_filler904_905_24   , 
						chr_l_other_cm_bp_id     ,
						chr_l_other_mkt_type     ,
					    chr_l_other_stlmnt_no    ,
						chr_l_filler904_905_8    ,
						chr_l_internal_ref_no    ,
						chr_l_send_ref_1         ,
						chr_l_send_ref_2         ,
						chr_l_filler904_905_35   ,
						chr_l_priority_flag      ,
						chr_l_filler_904_905_16  ,
						chr_l_904_905_filler16	 ,
						chr_l_early_payin_ind_filler_1,/*Changes done by Sunny for CS0031749*/
						chr_l_filler904_905_399
						);
						
						if(int_l_new_file_format > 0 && (strcmp(chr_l_depository,"NSDL")==0) && (strlen(chr_l_handoff_file_name_pms) >0) )
				
				       {
							     Alert(" File Name [%s]",chr_l_handoff_file_name_pms);
								 CMEMSET(l_client_details);
								 sprintf(l_client_details,"%s|||%s|%s|",chr_l_client,chr_l_other_cm_bp_id,chr_l_internal_ref_no);
					  
							     if (APL_FAILURE == New_format(chr_l_handoff_file_name_pms,chr_l_batch_no,chr_l_trans_type ,l_client_details,argv, l_debug_info_ptr))
									{
										Alert("FAILURE FROM NEW_FORMAT");
										APL_GOBACK_FAIL;
									}
					   }
						
					}
                    /* Added by Shradha for 934 generation KB_12434 - Ends */

				if(strcmp(chr_l_trxn_code,"905")==0  && strcmp(chr_l_clh_flg,"C")==0 )
				{
					/* ISolve322:AmitB:040607	*/
					/* EXEC SQL SELECT SUBSTR(NVL(RPAD(CONCAT(to_number(:chr_l_batch_no_rev),SUBSTR(:chr_l_internal_ref_no,LENGTH(to_number(:chr_l_batch_no))+1)),20,' '),'                '),1,20)  INTO :chr_l_internal_ref_no_rev FROM DUAL; ** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

					if(strcmp(chr_l_trans_type,"934")!=0) /* Added by Shradha for 934 generation KB_12434 */
					{
						EXEC SQL SELECT SUBSTR(NVL(RPAD(CONCAT(TO_NUMBER(:chr_l_batch_no_rev),
								SUBSTR(:chr_l_internal_ref_no,
									   LENGTH(TO_NUMBER(:chr_l_batch_no))+1)),
									   35,' '),:chr_g_format_filler),1,35)  
							   INTO :chr_l_internal_ref_no_rev 
							   FROM DUAL;
						IS_ANY_ORA_ERROR

						Alert("\n chr_l_internal_ref_no_rev=|%s| \n",chr_l_internal_ref_no_rev);

						/* EXEC SQL SELECT SUBSTR(NVL(RPAD(:chr_l_internal_ref_no_rev,35,' '),'                                   '),1,35)  INTO :chr_l_send_ref_1 FROM DUAL; 
						** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

						EXEC SQL SELECT SUBSTR(NVL(RPAD(:chr_l_internal_ref_no_rev,50,' '),
								:chr_g_format_filler),1,50)  
							   INTO :chr_l_send_ref_1 
							   FROM DUAL;
						IS_ANY_ORA_ERROR
						printf("\n chr_l_send_ref_1=|%s| \n",chr_l_send_ref_1);

						strcpy(chr_l_other_cm_bp_id,APL_NULL_STRING);
						strcpy(chr_l_other_cm_bp_id,"        ");
						fprintf(g_logfile,"\n For:904:CLH:chr_l_other_cm_bp_id=|%s| \n",chr_l_other_cm_bp_id);

						/* sprintf(chr_l_detail_rec_rev,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",chr_l_batch_no_rev,chr_l_rec_type,
							  chr_l_serial_no,"904",chr_l_trans_flg,chr_l_filler3,chr_l_other_acc_no,chr_l_isin_cd,
							  chr_l_qty,chr_l_filler4,chr_l_mkt_type,chr_l_settlement_no,chr_l_setl_date,chr_l_other_branch_cd,chr_l_other_dpid,
							  chr_l_client,chr_l_filler2,chr_l_other_cm_bp_id,chr_l_other_mkt_type,chr_l_other_stlmnt_no,
							  chr_l_internal_ref_no_rev,chr_l_send_ref_1,chr_l_send_ref_2,chr_l_filler);
						** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

						/* Printing Detail Record For 904 - Delivery Instructions For NSDL */

						sprintf(chr_l_detail_rec_rev,
							"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
							chr_l_batch_no_rev       ,
							chr_l_rec_type           ,
							chr_l_serial_no          ,
							"904"                    ,
							chr_l_trans_flg          ,
							chr_l_904_905_filler1    , /* Replacement to filler3         */
							chr_l_904_905_filler9    , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
							chr_dis_ind              , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
							chr_l_other_acc_no       ,
							chr_l_isin_cd            ,
							chr_l_qty                ,
							chr_l_904_905_filler2    , /* Replacement to filler4         */
							chr_l_904_905_filler10   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
							chr_l_904_905_filler11   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
							chr_l_mkt_type           ,
							chr_l_settlement_no      ,
							chr_l_904_905_filler3    , /* New Field                      */ 
							chr_l_904_905_filler12   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
							chr_l_setl_date          ,
							chr_l_other_branch_cd    , /* Substitute for 904_905_Filler4 */
							chr_l_904_905_filler13   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
							chr_l_other_dpid         ,
							chr_l_client             ,
							chr_l_904_905_filler5    , /* Replacement to filler2         */    
							chr_l_other_cm_bp_id     ,
							chr_l_other_mkt_type     , /* 904_905_Filler6 Part1 */
							chr_l_other_stlmnt_no    , /* 904_905_Filler6 Part2 */
							chr_l_904_905_filler6    , /* 904_905_Filler6 Part3 */
							chr_l_internal_ref_no_rev,
							chr_l_send_ref_1         ,
							chr_l_send_ref_2         ,
							chr_l_904_905_filler7    , /* Replacement to filler          */
							chr_l_904_905_filler14   , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
							"Y",
							chr_l_priority_flag      , /* New Field                      */
							chr_l_904_905_filler8    ,/* New Field                      */
							chr_l_904_905_filler15   , /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
							chr_l_904_905_filler16 ,  /*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/ 
							chr_l_filler904_905_2    ,
							chr_l_filler904_905_8	 ,
							chr_l_filler904_905_135  ,
							chr_l_filler904_905_30   ,
							chr_l_filler904_905_35   ,
							chr_l_filler904_905_25   ,
							" ",
							chr_l_early_payin_ind_filler_1,/*Changes done by Sunny for CS0031749*/
							chr_l_filler904_905_164  
							);

						fprintf(l_ptr_handoff_file_rev,"%s",chr_l_detail_rec_rev);
						fprintf(l_ptr_handoff_file_rev,"\n");
								if(int_l_new_file_format > 0 && (strcmp(chr_l_depository,"NSDL")==0) && (strlen(chr_l_handoff_file_name_rev) >0) )
						
							   {
										 Alert(" File Name [%s]",chr_l_handoff_file_name_rev);
										 CMEMSET(l_client_details);
										 sprintf(l_client_details,"%s|%s|%s|%s|%s|%s|%s|",chr_l_client,chr_l_other_dpid,chr_l_other_acc_no,chr_l_other_cm_bp_id,chr_l_internal_ref_no,chr_l_batch_no_rev,chr_l_internal_ref_no_rev);
							  
										 if (APL_FAILURE == New_format_905(chr_l_handoff_file_name_rev,chr_l_batch_no ,"904",chr_l_batch_no_rev,l_client_details,argv, l_debug_info_ptr))
											{
												Alert("FAILURE FROM NEW_FORMAT");
												APL_GOBACK_FAIL;
											}
							   }
					   
					   
						}

				} /* End Of Trans Type 905 Check */


			} /* End Of Depository NSDL Check */
				
				printf("\n Details Record=|%s|\n",chr_l_detail_rec);
                Alert("\n shr:: chr_l_detail_rec_pms=|%s|\n",chr_l_detail_rec_pms);
				/* Added by Shradha for 934 generation KB_12434 - Starts */
			    if(strcmp(chr_l_trans_type,"934"))
			    {
					fprintf(l_ptr_handoff_file,"%s",chr_l_detail_rec);
					fprintf(l_ptr_handoff_file,"\n");
				}
				else 
				{
					fprintf(l_ptr_handoff_file_pms,"%s",chr_l_detail_rec_pms);
					fprintf(l_ptr_handoff_file_pms,"\n");
				}
				/* Added by Shradha for 934 generation KB_12434 - Ends */
				
				
				 /*if(int_l_new_file_format > 0 && (strcmp(chr_l_depository,"NSDL")==0) && (strlen(chr_l_handoff_file_name_nsdl) >0) )
				
				    {
						Alert(" File Name [%s]",chr_l_handoff_file_name_nsdl);
				             CMEMSET(l_client_details);
							 sprintf(l_client_details,"%s|%s|%s|%s|%s|",chr_l_client,chr_l_other_dpid,chr_l_other_acc_no,chr_l_other_cm_bp_id,chr_l_internal_ref_no_rev);
                  
						if (APL_FAILURE == New_format(chr_l_handoff_file_name_nsdl,chr_p_batch_no,chr_l_rec_type ,l_client_details,argv, l_debug_info_ptr))
								{
									Alert("FAILURE FROM NEW_FORMAT");
									APL_GOBACK_FAIL;
						        }
					   }	
*/
				
				EXEC SQL SELECT :chr_l_deal_cd INTO :chr_l_deal_cd_new:i_deal_cd_new FROM dual;
			 
				//IS_ANY_ORA_ERROR
				if(sqlca.sqlcode)
				{
					Alert("\n sqlca.sqlcode |%d| -  \n",sqlca.sqlcode);
					goto RETURN_FAILURE;
					
				}


/***			if(strcmp(chr_l_trans_type,"904")==0)
			 {

***/		   printf("\n Before Passing NEW CLIENT=|%s|NEW Deal Code=|%c| Qty=|%lf|\n",chr_l_orig_client,chr_l_deal_cd_new,l_int_qty);
			   fprintf(g_logfile,"Before Passing NEW CLIENT=|%s|NEW Deal Code=|%c| Qty=|%lf|\n",chr_l_orig_client,chr_l_deal_cd_new,l_int_qty);

			printf("\n PASSING: chr_l_instr_code=|%s| chr_l_orig_client=|%s| chr_l_deal_cd_new=|%c| l_int_qty=|%lf|",
				  						chr_l_instr_code,
										chr_l_orig_client,
										chr_l_deal_cd_new,
										l_int_qty);	
	        printf("\n PASSING::  chr_l_deal_cd =|%c|",chr_l_deal_cd);
			Alert("chr_l_pos_req_flg==>|%s|",chr_l_pos_req_flg);
			if(strcmp(chr_l_pos_req_flg,"Y")==0)
			{
		 	  if (APL_FAILURE == DL_Mod_Posn(chr_l_orig_client,
									chr_l_instr_code,
									chr_l_depository,
									"",
									'C',
									chr_l_deal_cd_new,
									&l_int_qty,
									'D',
									"FREE",
									l_debug_info_ptr))
			{
					
				CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
				sprintf(chr_g_log_buffer,"Not Enough Positions For Client=|%s| Instrument=|%s| At Depository=|%s|\n",chr_l_orig_client,chr_l_instr_code,chr_l_depository);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
				APL_GOBACK_FAIL
			}
/* Next call for DP movement should be CDSL for CDSL Instruction .. Will have to be changed later */
			if (APL_FAILURE == DL_Mod_Posn(chr_l_orig_client,
									chr_l_instr_code,
									chr_l_depository,
									"",
									'D',
									chr_l_deal_cd_new,
									&l_int_qty,
									'I',
									"FREE",
									l_debug_info_ptr))
			   {
					
				CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
				sprintf(chr_g_log_buffer,"Not Enough Positions For Client=|%s|Instrument=|%s|At Depository=|%s|\n", chr_l_orig_client,chr_l_instr_code,chr_l_depository);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
				APL_GOBACK_FAIL
			   }
			}
        // Added Login To update nds_date To Process Offmarket Deals in GS 06082015
				printf("B4 updating nds_date chr_l_deal_ref_nos is |%s| Client is |%s| l_sys_dt is |%s|\n",chr_l_deal_ref_nos,chr_l_orig_client,l_sys_dt);
            
					if(strstr(chr_l_deal_ref_nos,",") == NULL)
					{
						if(strcmp(chr_l_pos_req_flg,"Y")==0)
						{
							EXEC SQL
							UPDATE dl_deal SET nds_date=:l_sys_dt
							WHERE client=:chr_l_orig_client
							AND identiy_no=:chr_l_deal_ref_nos;

							if(sqlca.sqlcode)
							{
								sprintf(chr_g_log_buffer," Error Updating DEAL NDS_DATE =|%d|",sqlca.sqlcode);
								CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
							}
						}

					}
					else
					{

						if(APL_FAILURE == CO_SplitStr(chr_l_deal_ref_nos,
                                                        ',',
                                                        &l_int_num1,&temp1))
						{
					        CO_ProcMonitor(g_logfile, "Failure from StrSplitFn", NULL, NULL);
					        APL_GOBACK_FAIL
						}

						sprintf(chr_g_log_buffer,"Here No of Records=|%d| \n",l_int_num1);
						CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

						for(i=0;i<l_int_num1;i++)
						{
							if(strcmp(chr_l_pos_req_flg,"Y")==0)
							{
					        EXEC SQL
			                UPDATE dl_deal SET nds_date=:l_sys_dt
						    WHERE client=:chr_l_orig_client
			                AND identiy_no=:temp1[i];

					        if(sqlca.sqlcode)
					        {
				                sprintf(chr_g_log_buffer," Error Updating DEAL NDS_DATE=|%d|",sqlca.sqlcode);
								CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
					        }

					        IS_ANY_ORA_ERROR
							}
						}
					}
         //End of NDS_DATE update - 06082015 
                         
/***
			 }
***/
		   }/* ********* FOR LOOP ENDS ********* */


		EXEC SQL CLOSE cur_l_details;
		
		IS_ANY_ORA_ERROR
			
		/* ---------------------------------------------------------------
         	    Printing The Trailer Records For Normal DP Transfer NDSL File
 		   --------------------------------------------------------------- */
		
               if(strcmp(chr_l_depository,"NSDL")==0)
		{
			/* fprintf(g_logfile,"Now Printing Trailer Records ... \n"); */
			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
			fprintf(g_logfile,"Now Printing Normal DP Ins Trailer Record1 ... \n");
			fflush(g_logfile);
			/* End of ISKB_3298 Changes - Jun2010 - Naren V */
			
			/* EXEC SQL SELECT substr(lpad(to_char(batch_no),7,'0'),1,7)||
			substr(lpad(to_char(record_type),2,'0'),1,2)||
			substr(nvl(lpad(BRANCH_CD,6,'0'),'000000'),1,6)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0 *1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(DELIVER_QTY*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(RECEIVE_QTY*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr('000000000000000000000000000000000000000000000000000000000000000000000000000',1,75)||
			substr('000000000000000000000000000000000000000000000',1,45)||
			substr('0000000',1,7)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000',1,23)||
			substr(lpad(to_char(tot_qty*1000),15,'0'),1,15) INTO :chr_l_trail_rec
			from DL_DPINSTR_TRAIL
			where batch_no =:chr_p_batch_no
			AND status=:chr_l_status_ind; 
			** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
			/* Added by Shradha for 934 generation KB_12434 - Starts */
			if(int_counter_pms > 0) 
			{
				EXEC SQL 
			     SELECT SUBSTR(LPAD(TO_CHAR(BATCH_NO), :g_i_batch_no_len, '0'), 
						1, :g_i_batch_no_len)                                 ||
				    SUBSTR(LPAD(TO_CHAR(RECORD_TYPE), 2, '0'), 1, 2)                  ||
				    SUBSTR(NVL(LPAD(BRANCH_CD , 6, '0'), '000000'), 1, 6)             ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, 15)  /* Filler1 */                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(NVL(LPAD(TO_CHAR(TOT_QTY * 1000), :g_i_qty_digits_1, '0'),
					       :chr_g_format_zeros), 1, :g_i_qty_digits_1)            ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, 30)  /* Filler2 */                 ||
				    SUBSTR(LPAD(TO_CHAR(TOT_QTY * 1000), :g_i_qty_digits_1,'0'), 
					   1, :g_i_qty_digits_1) 
			       INTO :chr_l_trail_rec_pms
			       FROM DL_DPINSTR_TRAIL
			      WHERE BATCH_NO = :chr_p_batch_no
			        AND STATUS   = :chr_l_status_ind;
	
				printf("\n PMS DP Ins Trailer Rec 1 - Sql Code: [%d] \n", sqlca.sqlcode);
				fflush(stdout);
			
				IS_ANY_ORA_ERROR
				
				chr_l_trail_rec_pms[strlen(chr_l_trail_rec_pms)] = '\0'; 
				printf("\n PMS DP Ins Trailer Rec 1 : [%s] \n",  chr_l_trail_rec_pms);
				fflush(stdout);
				fprintf(l_ptr_handoff_file_pms,"%s",chr_l_trail_rec_pms);
			    fflush(l_ptr_handoff_file_pms);
				Alert("\n Now Printing Line Break \n");
				fprintf(l_ptr_handoff_file_pms,"\n");
			}
			else
			{
			EXEC SQL 
			     SELECT SUBSTR(LPAD(TO_CHAR(BATCH_NO), :g_i_batch_no_len, '0'), 
						1, :g_i_batch_no_len)                                 ||
				    SUBSTR(LPAD(TO_CHAR(RECORD_TYPE), 2, '0'), 1, 2)                  ||
				    SUBSTR(NVL(LPAD(BRANCH_CD , 6, '0'), '000000'), 1, 6)             ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, 15)  /* Filler1 */                 ||
				    SUBSTR(NVL(LPAD(TO_CHAR(DELIVER_QTY*1000), :g_i_qty_digits_1, '0'),
					       :chr_g_format_zeros), 1, :g_i_qty_digits_1)            ||
				    SUBSTR(NVL(LPAD(TO_CHAR(RECEIVE_QTY*1000), :g_i_qty_digits_1, '0'),
					       :chr_g_format_zeros), 1, :g_i_qty_digits_1)            ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                 ||
				    SUBSTR(:chr_g_format_zeros, 1, 30)  /* Filler2 */                 ||
				    SUBSTR(LPAD(TO_CHAR(TOT_QTY*1000), :g_i_qty_digits_1,'0'), 
					   1, :g_i_qty_digits_1) 
			       INTO :chr_l_trail_rec
			       FROM DL_DPINSTR_TRAIL
			      WHERE BATCH_NO = :chr_p_batch_no
			        AND STATUS   = :chr_l_status_ind;
				
			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
			printf("\n Normal DP Ins Trailer Rec 1 - Sql Code: [%d] \n", sqlca.sqlcode);
			fflush(stdout);
			/* End of ISKB_3298 Changes - Jun2010 - Naren V */	
		
			IS_ANY_ORA_ERROR

			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
			chr_l_trail_rec[strlen(chr_l_trail_rec)] = '\0'; 
			printf("\n Normal DP Ins Trailer Rec 1 : [%s] \n",  chr_l_trail_rec);
			fflush(stdout);
			if(strcmp(chr_l_trxn_code,APL_NULL_STRING))/* Added by Shradha for 934 generation KB_12434 */
			{
				fprintf(l_ptr_handoff_file,"%s",chr_l_trail_rec);
				fflush(l_ptr_handoff_file);
				Alert("\n Now Printing Line Break \n");
				fprintf(l_ptr_handoff_file,"\n");
			}
			/* End of ISKB_3298 Changes - Jun2010 - Naren V */
			}
			
				 
			
			

			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
			fprintf(g_logfile,"Befor Printing Normal DP Ins Trailer Rec2 ... \n");
			fflush(g_logfile);
			fprintf(g_logfile," chr_l_trans_type: [%s] chr_l_clh_flg: [%s] \n", chr_l_trans_type, chr_l_clh_flg);
			fflush(g_logfile);
			/* End of ISKB_3298 Changes - Jun2010 - Naren V */
			
			
			if(strcmp(chr_l_trxn_code,"905")==0  && strcmp(chr_l_clh_flg,"C")==0 )/* Changes by Shradha for 934 generation KB_12434 */
			{
				/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
				fprintf(g_logfile,"Now Printing Normal DP Ins Trailer Record2 ... \n");
				fflush(g_logfile);
				/* End of ISKB_3298 Changes - Jun2010 - Naren V */

				/* EXEC SQL SELECT :chr_l_batch_no_rev||
				substr(lpad(to_char(record_type),2,'0'),1,2)||
				substr(nvl(lpad(BRANCH_CD,6,'0'),'000000'),1,6)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(RECEIVE_QTY*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
				substr('000000000000000000000000000000000000000000000000000000000000000000000000000',1,75)||
				substr('000000000000000000000000000000000000000000000',1,45)||
				substr('00000000000000000000000000000000000000000000000000',1,50)||
				substr('00000000000000000000000000000000000000000000000000',1,50)||
				substr('00000000000000000000000000000000000000000000000000',1,50)||
				substr('00000000000000000000000000000000000000000000000000',1,50)||
				substr('00000000000000000000000000000000000000000000000000',1,50)||
				substr('00000000000000000000000000000000000000000000000000',1,50)||
				substr('00000000000000000000000',1,23)||
				substr('0000000',1,7)||
				substr(lpad(to_char(tot_qty*1000),15,'0'),1,15) INTO :chr_l_trail_rec
				from DL_DPINSTR_TRAIL
				where batch_no =:chr_p_batch_no
				AND status=:chr_l_status_ind;
				** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

				
				EXEC SQL 
				SELECT  :chr_l_batch_no_rev                                                ||
					substr(lpad(to_char(record_type),2,'0'),1,2)                       ||
					substr(nvl(lpad(BRANCH_CD  ,6,'0'),'000000'),1,6)                  ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, 15)  /* Filler1 */                 ||
				    	SUBSTR(NVL(LPAD(TO_CHAR(RECEIVE_QTY*1000), :g_i_qty_digits_1, '0'),
					       :chr_g_format_zeros), 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, :g_i_qty_digits_1)                 ||
				    	SUBSTR(:chr_g_format_zeros , 1, 30)  /* Filler1 */                 ||
					SUBSTR(LPAD(TO_CHAR(TOT_QTY*1000), :g_i_qty_digits_1, '0'),
						    1, :g_i_qty_digits_1)
				  INTO  :chr_l_trail_rec
				  FROM  DL_DPINSTR_TRAIL
				 WHERE  BATCH_NO = :chr_p_batch_no
				   AND  STATUS   = :chr_l_status_ind;
	
				/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
				printf("\n Normal DP Ins Trailer Rec 2 - Sql Code: [%d] \n", sqlca.sqlcode);
				fflush(stdout);
				/* End of ISKB_3298 Changes - Jun2010 - Naren V */	
		
				IS_ANY_ORA_ERROR

				/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
				chr_l_trail_rec[strlen(chr_l_trail_rec)] = '\0'; 
				printf("\n Normal DP Ins Trailer Rec 2 : [%s] \n",  chr_l_trail_rec);
				fflush(stdout);
				/* End of ISKB_3298 Changes - Jun2010 - Naren V */
						
				fprintf(l_ptr_handoff_file_rev,"%s",chr_l_trail_rec);
				fflush(l_ptr_handoff_file_rev); /* Added for ISKB_3298 Changes - Jun2010 - Naren V */
				fprintf(l_ptr_handoff_file_rev,"\n");
				
			} /* End Of Trans Type 905 Check  */
	
		}         /* End Of Depository NSDL Check */
				
				
			
			if(strcmp(chr_l_trxn_code,"905")==0  && strcmp(chr_l_clh_flg,"C")==0)
			{
				fclose(l_ptr_handoff_file_rev);
			}
			if(strcmp(chr_l_trxn_code,APL_NULL_STRING))
				fclose(l_ptr_handoff_file);
			if(int_counter_pms >0)
				fclose(l_ptr_handoff_file_pms);
			fclose(l_ptr_ini_file);
	
		
		

		EXEC SQL UPDATE DL_DPINSTRS SET status='P' WHERE batch_no=:chr_p_batch_no AND status=:chr_l_status_ind;
		if(sqlca.sqlcode)
		{
			printf("\n Error Updating DL_DPINSTRS=|%d| \n",sqlca.sqlcode);
		}
		IS_ANY_ORA_ERROR
		
		EXEC SQL UPDATE DL_DPINSTR_HDR SET status='P' WHERE batch_no=:chr_p_batch_no AND status=:chr_l_status_ind; 
		if(sqlca.sqlcode)
		{
			printf("\n Error Updating DL_DPINSTR_HDR=|%d| \n",sqlca.sqlcode);
		}
		IS_ANY_ORA_ERROR
	
		EXEC SQL UPDATE DL_DPINSTR_TRAIL SET status='P' WHERE batch_no=:chr_p_batch_no AND status=:chr_l_status_ind;
		if(sqlca.sqlcode)
		{
			printf("\n Error Updating DL_DPINSTR_TRAIL=|%d| \n",sqlca.sqlcode);
		}
		IS_ANY_ORA_ERROR
	
	/*	Comment Report UAT	*/	
	/*	
			
		printf("\n Total Records Processed=|%d| \n",counter);
		sprintf(chr_g_log_buffer,"Total Records Processed=|%d|",counter);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);


		
		EXEC SQL SELECT exch_code,mkt_type,settlement_no 
					INTO :chr_l_rep_exch_code:i_rep_exch_code,
						  :chr_l_rep_mkt_type:i_rep_mkt_type,
						  :chr_l_rep_setl_no:i_rep_setl_no
					FROM DL_DPINSTRS WHERE batch_no=:chr_p_batch_no AND ROWNUM=1;
		
		IS_ANY_ORA_ERROR
	
		strcpy(l_chr_rep_format,"0");
		strcpy(l_chr_start_date,argv[2]);
		strcpy(l_chr_user,argv[3]);
		sprintf(l_chr_fieldval,"%s%c%s%c%s%c",chr_l_rep_exch_code,DATA_FIELD_SEPRTR,chr_l_rep_mkt_type,DATA_FIELD_SEPRTR,chr_l_rep_setl_no,DATA_FIELD_SEPRTR);


		printf("\n ParamString=|%s|\n",l_chr_fieldval);

		sprintf(chr_g_log_buffer,"Report Parameters are:|%s|%s|%s| \n",chr_l_rep_exch_code,chr_l_rep_mkt_type,chr_l_rep_setl_no);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);


		if(strcmp(chr_l_depository,"NSDL")==0)
		{
			strcpy(l_chr_rep_id,"546");
			strcpy(l_chr_rep_name,"DPInstructionRept_NSDL");
	
	 		 CO_ProcMonitor(g_logfile,"Inside Report Call for NSDL\n",NULL,NULL);		 
			
			if( CO_CreateReport(l_chr_rep_id,
					l_chr_rep_format,
					l_chr_rep_name,
					l_chr_fieldval,
					l_chr_start_date,
					l_chr_user,
					l_debug_info_ptr) == APL_FAILURE)
			{
				APL_GOBACK_FAIL
			}
			
		}
		else if(strcmp(chr_l_depository,"CDSL")==0)
		{
				strcpy(l_chr_rep_id,"547");
				strcpy(l_chr_rep_name,"DPInstructionRept_CDSL");
		
				CO_ProcMonitor(g_logfile,"Inside Report Call for NSDL\n",NULL,NULL);
				
				if( CO_CreateReport(l_chr_rep_id,
							l_chr_rep_format,
							l_chr_rep_name,
							l_chr_fieldval,
							l_chr_start_date,
							l_chr_user,
							l_debug_info_ptr) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}	
			
		}


		strcpy(l_intl_rept_struct_ha->report_name, l_chr_rep_name);
		strcpy(l_intl_rept_struct_ha->report_desc, "DP Instruction Report");
		strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
		l_intl_rept_struct_ha->report_width = 100;
		strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha->usr, argv[3]);


		if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))

		{
			APL_GOBACK_FAIL
		}

	*/	
	
	 }	/* ****  if Ends ***** */
		
	APL_GOBACK_SUCCESS							

	  RETURN_SUCCESS:
	  {
		CO_ProcMonitor(g_logfile,"Leaving Proc_PassDP_Instrn With Success",NULL,NULL);
		return(APL_SUCCESS);
	  }
	   
 	  RETURN_FAILURE:
      {
	   printf("\n Error Inside Proc_GenDP_Instrn:ORA|%d|\n",sqlca.sqlcode);
	   fprintf(g_logfile,"\n Deleting the Incorrect Handoff Files ... \n");
	   strcpy(l_remove_file_path1,"rm -f ");
	   strcat(l_remove_file_path1,chr_l_handoff_file_name);
	   strcpy(l_remove_file_path2,"rm -f ");
	   strcat(l_remove_file_path2,chr_l_handoff_file_name_rev);
	   strcpy(l_remove_file_path3,"rm -f ");
	   strcat(l_remove_file_path3,chr_l_IDO_file_name);

	   printf("\n l_remove_file_path1=|%s| \n",l_remove_file_path1);
	   printf("\n l_remove_file_path2=|%s| \n",l_remove_file_path2);
	   printf("\n l_remove_file_path3 =|%s| \n",l_remove_file_path3);

	   if(system(l_remove_file_path1)!=0)
	   {
		 fprintf(g_logfile,"\n Error Removing File1 \n");
	   }
	   if(system(l_remove_file_path2)!=0)
	   {
		 fprintf(g_logfile,"\n Error Removing File2 \n");
	   }
	   if(system(l_remove_file_path3)!=0)
	   {
		 fprintf(g_logfile,"\n Error Removing File 3\n");
	   }

	   printf("\n chr_l_hoff_file=|%s| \n",chr_l_hoff_file);
	   printf("\n chr_l_hoff_file_rev=|%s| \n",chr_l_hoff_file_rev);
	   printf("\n chr_l_IDO_file=|%s| \n",chr_l_IDO_file);

	   EXEC SQL DELETE FROM PRO_COMMON_REPORT WHERE REPORT_NAME IN(:chr_l_hoff_file,:chr_l_hoff_file_rev,:chr_l_IDO_file);
	   IS_ANY_ORA_ERROR
	   fprintf(g_logfile,"\n Error Deleting Report Entry=|%d|\n",sqlca.sqlcode);	
	   sprintf(chr_g_log_buffer,"Leaving Proc_PassDP_Instrn With Failure ORA|%d|\n",sqlca.sqlcode);	
 	   CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
	   return(APL_FAILURE);	
	 }

} /* End Of Function Proc_PassDP_Instrn() */


/******************************************************************************************************  
 *                           Inter Depository Instruction Passing Start                               *
 ******************************************************************************************************/

int Proc_PassInterDP_Instrn( char *chr_p_batch_no,
						 		char **argv,	
					    		FILE *g_logfile,
					    		INTL_ENV_DATA_STRUCT_H *l_intl_env_data_h,
					    		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

    /* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
	FILE  *l_ptr_ini_file = NULL;
	FILE  *l_ptr_handoff_file_nsdl = NULL;
	FILE  *l_ptr_handoff_file_cdsl = NULL;
	#else
    FILE *l_ptr_ini_file = APL_OUT_FILE;
    FILE *l_ptr_handoff_file_nsdl = APL_OUT_FILE;
    FILE *l_ptr_handoff_file_cdsl = APL_OUT_FILE;
    #endif
    /* Added by kotubabu  for Linux Migration -END*/
    char  chr_g_log_buffer[BUFFER_LEN] = APL_NULL_STRING;
	char  chr_l_inifile[PATH_LENGTH]= APL_NULL_STRING;
	char  chr_l_handoff_dir[PATH_LENGTH]= APL_NULL_STRING;
    char  chr_l_handoff_file_name_nsdl[PATH_LENGTH]= APL_NULL_STRING;	
    char  chr_l_handoff_file_name_cdsl[PATH_LENGTH]= APL_NULL_STRING;	
	char l_remove_file_path1[200] = APL_NULL_STRING;
	char l_remove_file_path2[200] = APL_NULL_STRING;

	char  chr_l_header_nsdl[100]= APL_NULL_STRING;
	char  chr_l_header_cdsl[100]= APL_NULL_STRING;

	/* char  chr_l_detail_rec_nsdl[300] =APL_NULL_STRING; * Modified for ISKB_3298 Changes - UAT Fix - Nov2010 - Naren V */
	char  chr_l_detail_rec_nsdl[1000] =APL_NULL_STRING;

	char  chr_l_detail_rec_cdsl[200] =APL_NULL_STRING;

	char chr_l_batch_no[APL_DP_BATCH_NO_LEN] =APL_NULL_STRING;
	/* char chr_l_serial_no[6] =APL_NULL_STRING; 
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_serial_no[DP_SERIAL_NO_LEN    + 1] =APL_NULL_STRING;
	char chr_l_trans_type[4] =APL_NULL_STRING;
	char chr_l_client[21] =APL_NULL_STRING;
	char chr_l_isin_cd[13] =APL_NULL_STRING;
	char chr_l_qty[29] =APL_NULL_STRING;
	char chr_l_mkt_type[4] =APL_NULL_STRING;
	char chr_l_settlement_no_nsdl[16] =APL_NULL_STRING;
	char chr_l_setl_date[20]= APL_NULL_STRING;
	char chr_l_setl_date_cdsl[20]= APL_NULL_STRING;
	char chr_l_other_branch_cd[7] =APL_NULL_STRING;
	char chr_l_other_cm_bp_id[9] =APL_NULL_STRING;
	char chr_l_other_mkt_type[3] =APL_NULL_STRING;
	char chr_l_other_stlmnt_no[8] =APL_NULL_STRING;
	/* char chr_l_internal_ref_no[21] =APL_NULL_STRING;
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_internal_ref_no [DP_INT_REF_NO_LEN] = APL_NULL_STRING;
	char chr_l_bo_id[21] =APL_NULL_STRING;
	/* char chr_l_send_ref_1[36] =APL_NULL_STRING;
	char chr_l_send_ref_2[36] =APL_NULL_STRING; * Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_send_ref_1 [DP_SEND_REF_LEN] = APL_NULL_STRING;
	char chr_l_send_ref_2 [DP_SEND_REF_LEN] = APL_NULL_STRING;
	/* char chr_l_filler[39] =APL_NULL_STRING; ** Doomed For ISKB_3298 Changes
	** Replaced with chr_l_925_926_filler7 - Jun2010 - Naren V */
	char chr_l_int_ref_no_cdsl[21] =APL_NULL_STRING;
	char chr_l_rec_type[3]="02";
	char chr_l_trans_flg[2]=APL_NULL_STRING;
    char chr_l_status_ind[2]= "G";
	int  counter=0;
	char chr_l_depository[5]=APL_NULL_STRING;
	char chr_l_dpid[7]=APL_NULL_STRING;
	char chr_p_batch_no_new[APL_DP_BATCH_NO_LEN]=APL_NULL_STRING;
	char chr_l_buy_sell[2]= APL_NULL_STRING;
	char chr_l_buy_sell_rev[2]= APL_NULL_STRING;
	char chr_l_other_dpid[9]= APL_NULL_STRING;
	char chr_l_other_acc_no[14]= APL_NULL_STRING;
	char chr_l_other_acc_ctgry[3]= APL_NULL_STRING;
	char chr_l_instr_code[9]= APL_NULL_STRING;
	double l_int_qty=0.0;
	char chr_l_deal_cd = APL_NULL_CHAR;
	char chr_l_deal_cd_new;

	/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
	/* char chr_l_filler2[3] =APL_NULL_STRING; -- Replaced with chr_l_904_905_filler5
	char chr_l_filler3[8] =APL_NULL_STRING;    -- Replaced with chr_l_904_905_filler1
	char chr_l_filler4[11] =APL_NULL_STRING;   -- Replaced with chr_l_904_905_filler2
	** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */

	char chr_l_925_926_filler1 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_925_926_filler2 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_925_926_filler3 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_925_926_filler4 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING; /* For Future Reference */
	char chr_l_925_926_filler5 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_925_926_filler6 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_925_926_filler7 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_925_926_filler8 [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_priority_flag   [                   2] = APL_NULL_STRING;
	char chr_l_oth_settl_dtls  [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;

	/* End of ISKB_3298 Changes - Jun2010 - Naren V  */

	char chr_l_trxn_code[4] =APL_NULL_STRING;
	char chr_l_trxn_code1[4] =APL_NULL_STRING;
	char chr_l_exch_code[4] =APL_NULL_STRING;
	char chr_file_batch_no[APL_DP_BATCH_NO_LEN] =APL_NULL_STRING;
	char chr_l_orig_client[11] =APL_NULL_STRING;
	char chr_l_instr_client[21] =APL_NULL_STRING;
	char chr_l_flg='Y';
	int int_l_count=0;
	char chr_l_hoff_file_nsdl[PATH_LENGTH]=APL_NULL_STRING;
	char chr_l_hoff_file_cdsl[PATH_LENGTH]=APL_NULL_STRING;
	
	char l_chr_rep_id[4]=  APL_NULL_STRING;	
	char l_chr_rep_format[2]=  APL_NULL_STRING;
	char l_chr_rep_name[30]=  APL_NULL_STRING;
	char l_chr_start_date[20]= APL_NULL_STRING;
	char l_chr_user[APL_USERID_LEN]=  APL_NULL_STRING;
	char l_chr_fieldval[26] =  APL_NULL_STRING;

	char chr_l_rep_exch_code[4]=  APL_NULL_STRING;
	char chr_l_rep_mkt_type[4]=  APL_NULL_STRING;
	char chr_l_rep_setl_no[16]=  APL_NULL_STRING;
	char chr_l_trail_rec_nsdl[700]= APL_NULL_STRING;
	char chr_l_nsdl_client_id[9]=APL_NULL_STRING;
	char chr_l_nsdl_cmbp_id[9]=APL_NULL_STRING;
	char chr_l_batch_no_orig[APL_DP_BATCH_NO_LEN]=APL_NULL_STRING;
	char chr_l_settlement_no_cdsl[10] =APL_NULL_STRING;
	char l_temp_mkttype[16] =APL_NULL_STRING;
	char l_new_srl_no[6] = APL_NULL_STRING;
	int	l_counter_srl =0;
	char l_chr_rev_flg[2]= APL_NULL_STRING;
  /*added by shrinath for 926  KOTAK_11371 start*/
  char chr_l_mode_of_pymt_filler_2[3] = APL_NULL_STRING;
  char chr_l_pymt_date_filler_8[9] = APL_NULL_STRING;
  char chr_l_buyer_name_filler_135[136] = APL_NULL_STRING;
  char chr_l_bank_acc_filler_30[31] = APL_NULL_STRING;
  char chr_l_buyer_bank_name_filler_35[36] = APL_NULL_STRING;
  char chr_l_pymt_transaction_ref_filler_25[26] = APL_NULL_STRING;
  char chr_l_filler_165[166] = APL_NULL_STRING;
  /*added by shrinath for 926  end*/

	short i_rep_exch_code = 0;
	short i_rep_mkt_type = 0; 
	short i_rep_setl_no =0;
	
	short i_header_nsdl=0;
	short i_header_cdsl=0;
	short i_batch_no=0;
	short i_serial_no=0;
	short i_trans_type=0;
	short i_setl_date=0;
	short i_setl_date_cdsl=0;
	short i_bo_id=0;
	short i_counter_bo_id=0;
	short i_int_qty=0;
	short i_deal_cd=0;
	short i_deal_cd_new=0;
	short i_nsdl_client_id=0;
	short i_nsdl_cmbp_id=0;
	short i_orig_client=0;
	short i_batch_no_orig=0;
	short i_rev_flg=0;
	short i_instr_code=0;


	EXEC SQL BEGIN DECLARE SECTION;
	
		EXEC SQL VAR chr_l_batch_no IS STRING;
		EXEC SQL VAR chr_l_serial_no IS STRING;
		EXEC SQL VAR l_new_srl_no IS STRING;
		EXEC SQL VAR chr_l_trans_type IS STRING;
		EXEC SQL VAR chr_l_client IS STRING;
		EXEC SQL VAR chr_l_isin_cd IS STRING;
		EXEC SQL VAR chr_l_qty IS STRING;
		EXEC SQL VAR chr_l_mkt_type IS STRING;
		EXEC SQL VAR chr_l_settlement_no_nsdl IS STRING;
		EXEC SQL VAR chr_l_setl_date IS STRING;
		EXEC SQL VAR chr_l_setl_date_cdsl IS STRING;
		EXEC SQL VAR chr_l_other_branch_cd IS STRING;
		EXEC SQL VAR chr_l_other_cm_bp_id IS STRING;
		EXEC SQL VAR chr_l_other_mkt_type IS STRING;
		EXEC SQL VAR chr_l_other_stlmnt_no IS STRING;
		EXEC SQL VAR chr_l_internal_ref_no IS STRING;
		EXEC SQL VAR chr_l_send_ref_1 IS STRING;
		EXEC SQL VAR chr_l_send_ref_2 IS STRING;
		/* EXEC SQL VAR chr_l_filler IS STRING;
		** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
		EXEC SQL VAR chr_l_depository IS STRING;
		EXEC SQL VAR chr_l_dpid IS STRING;
		EXEC SQL VAR chr_p_batch_no IS STRING;
		EXEC SQL VAR chr_p_batch_no_new IS STRING;
		EXEC SQL VAR chr_l_int_ref_no_cdsl IS STRING;
		EXEC SQL VAR chr_l_bo_id IS STRING;
		EXEC SQL VAR chr_l_buy_sell IS STRING;
		EXEC SQL VAR chr_l_other_dpid IS STRING;
		EXEC SQL VAR chr_l_other_acc_no IS STRING;
		EXEC SQL VAR chr_l_other_acc_ctgry IS STRING;
		EXEC SQL VAR chr_l_instr_code IS STRING;
		EXEC SQL VAR chr_l_deal_cd IS STRING;

		/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
		/* EXEC SQL VAR chr_l_filler2 IS STRING;
		EXEC SQL VAR chr_l_filler3 IS STRING;
		EXEC SQL VAR chr_l_filler4 IS STRING; 
		** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */

		EXEC SQL VAR chr_l_925_926_filler1 IS STRING;
		EXEC SQL VAR chr_l_925_926_filler2 IS STRING;
		EXEC SQL VAR chr_l_925_926_filler3 IS STRING;
		EXEC SQL VAR chr_l_925_926_filler4 IS STRING;
		EXEC SQL VAR chr_l_925_926_filler5 IS STRING;
		EXEC SQL VAR chr_l_925_926_filler6 IS STRING;
		EXEC SQL VAR chr_l_925_926_filler7 IS STRING;
		EXEC SQL VAR chr_l_925_926_filler8 IS STRING;
		EXEC SQL VAR chr_l_priority_flag   IS STRING;
		EXEC SQL VAR chr_l_oth_settl_dtls  IS STRING;
		/* End of ISKB_3298 Changes - Jun2010 - Naren V */

		EXEC SQL VAR chr_l_trxn_code IS STRING;
		EXEC SQL VAR chr_l_exch_code IS STRING;
		EXEC SQL VAR chr_file_batch_no IS STRING;
		EXEC SQL VAR chr_l_orig_client IS STRING;
		EXEC SQL VAR chr_l_instr_client IS STRING;

		EXEC SQL VAR chr_l_rep_exch_code IS STRING;
		EXEC SQL VAR chr_l_rep_mkt_type IS STRING;
		EXEC SQL VAR chr_l_rep_setl_no IS STRING;
		EXEC SQL VAR chr_l_batch_no_orig IS STRING;
		EXEC SQL VAR chr_l_settlement_no_cdsl IS STRING;
		EXEC SQL VAR l_temp_mkttype IS STRING;
		EXEC SQL VAR l_chr_rev_flg IS STRING;
		
		
		/* END -- Added by Minal for Implementation Of DIS in INTELLECT CUSTODY on 12/09/2014 */
		
		/*added by shrinath for 926 start KOTAK_11371*/
			EXEC SQL VAR chr_l_buyer_name_filler_135 IS STRING;
			EXEC SQL VAR chr_l_bank_acc_filler_30 IS STRING;
			EXEC SQL VAR chr_l_buyer_bank_name_filler_35 IS STRING;
			EXEC SQL VAR chr_l_pymt_transaction_ref_filler_25 IS STRING;
		/*added by shrinath for 926 end */	
		
		EXEC SQL END DECLARE SECTION;

		
		if ( ( (l_debug_info_ptr) = (DEBUG_INFO_STRUCT_H **)calloc(1,sizeof(DEBUG_INFO_STRUCT_H *)) ) == NULL )
		 APL_GOBACK_FAIL ;
		
		INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

		l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha);
		
		
		CO_ProcMonitor(g_logfile,"Entered Into Proc_PassInterDP_Instrn",NULL,NULL);
		
		fprintf(g_logfile,"\n Got User=|%s| \n",argv[3]);
		strcpy(l_chr_user,argv[3]);
		fprintf(g_logfile,"\n Got User=|%s| \n",l_chr_user);
		
		if ( CO_Chk_CntryEnabled("DL_DPINSTPASS", 
		 			                    "NEW_FORMAT", 
					                    &int_l_new_file_format, 
					                    l_debug_info_ptr)  == APL_FAILURE )
     {
                APL_GOBACK_FAIL
     }
			
		EXEC SQL SELECT count(*) INTO :int_l_count FROM DL_DPINSTRS
		  	  WHERE batch_no=:chr_p_batch_no
			    AND status=:chr_l_status_ind;

		IS_ANY_ORA_ERROR
		
		printf("\n chr_p_batch_no=|%s| \n",chr_p_batch_no);
		printf("\n Number of Records=|%d| \n",int_l_count);

		if(int_l_count == 0)
		{
			chr_l_flg='N';
			CO_ProcMonitor(g_logfile,"No INTERDP Data available for Passing For Selcted Batch Number !",NULL,NULL);
			APL_GOBACK_FAIL
		}
		
	if(chr_l_flg =='Y')
	{	
		strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
		strcat(chr_l_inifile,"intl_sun.cfg");
			
		if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		{
			CO_ProcMonitor(g_logfile,"Failed to Open Config. File",NULL,NULL);
			APL_GOBACK_FAIL
		}

		if (CO_ReadToken(l_ptr_ini_file,"INTL_HF_PATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
		{
			return(APL_FAILURE);
		}
		
		sprintf(chr_g_log_buffer,"HandOff FilePath=|%s|",chr_l_handoff_dir);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
	

		EXEC SQL SELECT DISTINCT(a.depo_ind),LPAD(SUBSTR(dp_id,-6,6),6,'0'),
						LPAD(SUBSTR(a.batch_no,2,4),3,'0'),buy_sell_flg
						INTO :chr_l_depository,:chr_l_dpid,:chr_p_batch_no_new,:chr_l_buy_sell
						FROM DL_DPINSTRS a,DL_DPINSTR_HDR b 
						WHERE a.BATCH_NO=b.BATCH_NO 
						AND a.BATCH_NO = :chr_p_batch_no
						AND ROWNUM=1;

		printf("\n IF Error1=|%d| \n",sqlca.sqlcode);

		IS_ANY_ORA_ERROR

		printf("\n Depository=|%s|DPID=|%s| Batch New=|%s|Buy_Sell=|%s| \n",
																chr_l_depository,
																chr_l_dpid,
																chr_p_batch_no_new,
																chr_l_buy_sell);
			

		/**************** Creating NSDL Header  *******************/	

			/* EXEC SQL SELECT lpad(substr(batch_no,2,8),7,'0') ||
			SUBSTR(LPAD(TO_CHAR(record_type),2,'0'),1,2)||     
			SUBSTR(NVL(LPAD(:g_mt_commonsys_params_struct_h.brnch_cd,6,'0'),'000000'),1,6)||
			SUBSTR(NVL(LPAD(dp_id,8,' '),'        '),1,8)||SUBSTR(LPAD(TO_CHAR(dp_role),2,'0'),1,2)||
			SUBSTR(LPAD(TO_CHAR(tot_num_record),5,'0'),1,5)||
			SUBSTR(TO_CHAR(maker_date,'YYYYMMDD'),1,8)||
			SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)||'  '  INTO :chr_l_header_nsdl:i_header_nsdl
			FROM DL_DPINSTR_HDR
			WHERE BATCH_NO = :chr_p_batch_no
			AND STATUS=:chr_l_status_ind;
			** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

		EXEC SQL SELECT LPAD(SUBSTR(BATCH_NO,2,:g_i_batch_no_len+1),:g_i_batch_no_len,'0')            ||
				SUBSTR(LPAD(TO_CHAR(RECORD_TYPE),2,'0'),1,2)                                  ||    
				SUBSTR(NVL(LPAD(:g_mt_commonsys_params_struct_h.brnch_cd,6,'0'),'000000'),1,6)||
				SUBSTR(NVL(LPAD(DP_ID,8,' '),'        '),1,8)                                 ||
				SUBSTR(LPAD(TO_CHAR(DP_ROLE),2,'0'),1,2)                                      ||
				SUBSTR(LPAD(TO_CHAR(TOT_NUM_RECORD),:g_i_no_of_recs_len,'0'),
					    1,:g_i_no_of_recs_len)                                            ||
				SUBSTR(TO_CHAR(MAKER_DATE,'YYYYMMDD'),1,8)                                    ||
				SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)                                    ||
				'  '  
			   INTO :chr_l_header_nsdl:i_header_nsdl
			   FROM DL_DPINSTR_HDR
			  WHERE BATCH_NO   = :chr_p_batch_no
			    AND STATUS     = :chr_l_status_ind;

		printf("\n IF Error2=|%d| \n",sqlca.sqlcode);

		IS_ANY_ORA_ERROR

		fprintf(g_logfile,"NSDL Header=|%s| \n",chr_l_header_nsdl);
		fflush(g_logfile);

		/**************** Creating CDSL Header  *******************/	

		EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(tot_num_record),6,'0'),1,6)||
				 SUBSTR(NVL(LPAD(TO_CHAR(tot_qty*1000),16,'0'),'0000000000000000'),1,16)
						INTO :chr_l_header_cdsl:i_header_cdsl
				 FROM DL_DPINSTR_HDR
				 WHERE BATCH_NO = :chr_p_batch_no
				 AND STATUS=:chr_l_status_ind;
		
		printf("\n If Error3=|%d| \n",sqlca.sqlcode);

		IS_ANY_ORA_ERROR

		fprintf(g_logfile,"CDSL Header=|%s| \n",chr_l_header_nsdl);


		EXEC SQL SELECT DISTINCT(trans_type),exch_code INTO :chr_l_trxn_code,chr_l_exch_code
						FROM DL_DPINSTRS
						WHERE batch_no=:chr_p_batch_no
						AND ROWNUM=1;
			
			printf("\n IF Error4=|%d| \n",sqlca.sqlcode);

			IS_ANY_ORA_ERROR
			
			printf("\n BEFORE chr_p_batch_no=|%s| \n",chr_p_batch_no);



		if(strcmp(chr_l_depository,"NSDL")==0)	
		{
		
/*			if(strcmp(chr_l_trxn_code,"CN5")==0  || strcmp(chr_l_trxn_code,"CN6")==0)
			{	
			
*/			
				/**************************************************************** 
				  Creating AND Opening Inter Depository Transfer NDSL File (926) 
				*****************************************************************/

				
				/* EXEC SQL SELECT SUBSTR(LPAD(:chr_p_batch_no,8,'0'),1,8) INTO :chr_file_batch_no FROM DUAL; ** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
				
				EXEC SQL SELECT SUBSTR(LPAD(:chr_p_batch_no,:g_i_batch_no_len+1,'0'),
							    1,:g_i_batch_no_len+1) 
					   INTO :chr_file_batch_no 
					   FROM DUAL;

				printf("\n IF Error5=|%d| \n",sqlca.sqlcode);

				IS_ANY_ORA_ERROR
				
				printf("\n AFTER chr_p_batch_no=|%s| \n",chr_file_batch_no);
			
				strcpy(chr_l_handoff_file_name_nsdl,chr_l_handoff_dir);
				strcat(chr_l_handoff_file_name_nsdl,chr_file_batch_no);
				strcat(chr_l_handoff_file_name_nsdl,"_");
				strcat(chr_l_handoff_file_name_nsdl,chr_l_exch_code);
				strcat(chr_l_handoff_file_name_nsdl,"_Normal.");
				strcat(chr_l_handoff_file_name_nsdl,"926");

				strcpy(chr_l_hoff_file_nsdl,chr_file_batch_no);
				strcat(chr_l_hoff_file_nsdl,"_");
				strcat(chr_l_hoff_file_nsdl,chr_l_exch_code);
				strcat(chr_l_hoff_file_nsdl,"_Normal.");
				strcat(chr_l_hoff_file_nsdl,"926");
							
				printf("\n NSDL Deliver HandOff FileName InterDP=|%s| \n",chr_l_handoff_file_name_nsdl);
				printf("\n NSDL Deliver HandOff FilePath InterDP=|%s| \n",chr_l_handoff_file_name_nsdl);

		
				if ((l_ptr_handoff_file_nsdl = fopen(chr_l_handoff_file_name_nsdl,"w")) == NULL)
				{
					return(APL_FAILURE);
				}

				strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file_nsdl);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				

				if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))

				{
					APL_GOBACK_FAIL
				}


				/************* Creating AND Opening CDSL File ***************************/
					
				strcpy(chr_l_handoff_file_name_cdsl,chr_l_handoff_dir);
				strcat(chr_l_handoff_file_name_cdsl,"04");
				strcat(chr_l_handoff_file_name_cdsl,chr_l_dpid);
				strcat(chr_l_handoff_file_name_cdsl,".");
				strcat(chr_l_handoff_file_name_cdsl,chr_p_batch_no_new);
		

					
				strcpy(chr_l_hoff_file_cdsl,"04");
				strcat(chr_l_hoff_file_cdsl,chr_l_dpid);
				strcat(chr_l_hoff_file_cdsl,".");
				strcat(chr_l_hoff_file_cdsl,chr_p_batch_no_new);


				printf("\n CDSL Receive HandOff FileName InterDP=|%s| \n",chr_l_hoff_file_cdsl);
				printf("\n CDSL Receive HandOff FilePath InterDP=|%s| \n",chr_l_handoff_file_name_cdsl);	
	

				if ((l_ptr_handoff_file_cdsl = fopen(chr_l_handoff_file_name_cdsl,"w")) == NULL)
				{
					return(APL_FAILURE);
				}

				strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file_cdsl);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				

				if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))

				{
					APL_GOBACK_FAIL
				}
	

		/*	} */ /*** END if(strcmp(chr_l_trxn_code,"CN5")==0  || strcmp(chr_l_trxn_code,"CN6")==0)  ****/
					
	   }
	   else if(strcmp(chr_l_depository,"CDSL")==0)
	   {

					
/*		 if(strcmp(chr_l_trxn_code,"NC5")==0  || strcmp(chr_l_trxn_code,"NC6")==0)
		 {
	
*/
			/************* Creating AND Opening CDSL File ***************************/
		
			strcpy(chr_l_handoff_file_name_cdsl,chr_l_handoff_dir);
			strcat(chr_l_handoff_file_name_cdsl,"04");
			strcat(chr_l_handoff_file_name_cdsl,chr_l_dpid);
			strcat(chr_l_handoff_file_name_cdsl,".");
		    strcat(chr_l_handoff_file_name_cdsl,chr_p_batch_no_new);
	

			strcpy(chr_l_hoff_file_cdsl,"04");
			strcat(chr_l_hoff_file_cdsl,chr_l_dpid);
			strcat(chr_l_hoff_file_cdsl,".");
			strcat(chr_l_hoff_file_cdsl,chr_p_batch_no_new);


			printf("\n CDSL Deliver HandOff FileName InterDP=|%s| \n",chr_l_hoff_file_cdsl);
			printf("\n CDSL Deliver HandOff FilePath InterDP=|%s| \n",chr_l_handoff_file_name_cdsl);

			
			if ((l_ptr_handoff_file_cdsl = fopen(chr_l_handoff_file_name_cdsl,"w")) == NULL)
				{
					return(APL_FAILURE);
				}

				strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file_cdsl);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				

			if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}

			/* -------------------------------------------------------------- 
			   Creating AND Opening Inter Depository Transfer NDSL File (925) 
			   -------------------------------------------------------------- */
		
			/* EXEC SQL SELECT SUBSTR(LPAD(:chr_p_batch_no,8,'0'),1,8) INTO :chr_file_batch_no FROM DUAL; ** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
				
			EXEC SQL SELECT SUBSTR(LPAD(:chr_p_batch_no,:g_i_batch_no_len+1,'0'),
						    1,:g_i_batch_no_len+1) 
				   INTO :chr_file_batch_no 
				   FROM DUAL;

			printf("\n IF Error5=|%d| \n",sqlca.sqlcode);

			IS_ANY_ORA_ERROR

			strcpy(chr_l_handoff_file_name_nsdl,chr_l_handoff_dir);
			strcat(chr_l_handoff_file_name_nsdl,chr_file_batch_no);
			strcat(chr_l_handoff_file_name_nsdl,"_");
			strcat(chr_l_handoff_file_name_nsdl,chr_l_exch_code);
			strcat(chr_l_handoff_file_name_nsdl,"_Normal.");
			strcat(chr_l_handoff_file_name_nsdl,"925");

			strcpy(chr_l_hoff_file_nsdl,chr_file_batch_no);
			strcat(chr_l_hoff_file_nsdl,"_");
			strcat(chr_l_hoff_file_nsdl,chr_l_exch_code);
			strcat(chr_l_hoff_file_nsdl,"_Normal.");
			strcat(chr_l_hoff_file_nsdl,"925");
						
			
			printf("\n NSDL Receive HandOff FileName InterDP=|%s| \n",chr_l_hoff_file_nsdl);
			printf("\n NSDL Receive HandOff FilePath InterDP=|%s| \n",chr_l_handoff_file_name_nsdl);
	

			if ((l_ptr_handoff_file_nsdl = fopen(chr_l_handoff_file_name_nsdl,"w")) == NULL)
				{
					return(APL_FAILURE);
				}

				strcpy(l_intl_rept_struct_ha->report_name, chr_l_hoff_file_nsdl);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);
				

			if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}

	
/*		 }	*/

	

	   }

		
		printf("\n Before Printing NSDL Header chr_l_header=|%s|\n",chr_l_header_nsdl);
		printf("\n Before Printing CDSL Header chr_l_header=|%s|\n",chr_l_header_cdsl);

		sprintf(chr_g_log_buffer,"\n NSDL HandOff Filename=|%s| \n",chr_l_handoff_file_name_nsdl);
		fprintf(g_logfile,"%s",chr_g_log_buffer);
		sprintf(chr_g_log_buffer,"\n CDSL HandOff Filename=|%s| \n",chr_l_handoff_file_name_cdsl);
		fprintf(g_logfile,"%s",chr_g_log_buffer);

		fprintf(l_ptr_handoff_file_nsdl,"%s",chr_l_header_nsdl);
		fprintf(l_ptr_handoff_file_nsdl,"\n");
		fprintf(l_ptr_handoff_file_cdsl,"%s",chr_l_header_cdsl);
		fprintf(l_ptr_handoff_file_cdsl,"\n");

		printf("*** DP ID: |%s|\n",chr_l_dpid);
		printf("*** DP ID FILE: |%s|\n",chr_l_dpid);
		printf("*** Batch No: |%s|\n",chr_p_batch_no);
		printf("*** Status Ind: |%s|\n",chr_l_status_ind);
 /*KOTAK_11371 changes by shrinath*/
			memset(chr_l_filler_165, APL_NULL_CHAR, sizeof(chr_l_filler_165));
			strcpy(chr_l_filler_165,"                                                                                                                                                                     ");



	/************************************************************************ 
	 Framing Detail Record For Inter Depository Transfer NDSL Files (925/926) 
	 ************************************************************************/

	/* EXEC SQL DECLARE cur_l_details_interdp CURSOR FOR
		SELECT DECODE(trans_type,'CN6',a.client,'NC6',SUBSTR(a.client,9,16),a.client),a.batch_no,a.trans_type, LPAD(SUBSTR(batch_no,2,8),7,'0')  batch_no1,
			SUBSTR(LPAD(TO_CHAR(serial_no),5,'0'),1,5) serial_no,
			SUBSTR(LPAD(TO_CHAR(trans_type),3,'0'),1,3) trans_type,
			'A',
			'       ' as Filler3,
			SUBSTR(LPAD(TO_CHAR(a.client),8,' '),1,8) client,
			SUBSTR(NVL(RPAD(a.isin_cd,12,' '),'            '),1,12) isin_cd,
			SUBSTR(NVL(LPAD(TO_CHAR(qty*1000),15,'0'),'0000000000000000'),1,15) qty,
			'          ' as Filler4,
			SUBSTR(NVL(LPAD(TO_CHAR(mkt_type),2,'0'),'00'),1,2) mkt_type,
			SUBSTR(NVL(RPAD(a.settlement_no,7,' '),'       '),1,7) settlement_no_nsdl,
			SUBSTR(NVL(RPAD(a.settlement_no,7,' '),'       '),1,7) settlement_no_cdsl,
			SUBSTR(NVL(RPAD(TO_CHAR(setl_date,'YYYYMMDD'),8,' '),'        '),1,8),
			SUBSTR(NVL(RPAD(TO_CHAR(setl_date,'DDMMYYYY'),8,' '),'        '),1,8),
			SUBSTR(NVL(RPAD(other_branch_cd,6,' '),'      '),1,6) other_branch_cd,
			SUBSTR(NVL(RPAD(a.other_dp_id,8,' '),'        '),1,8) other_dp_id,
			SUBSTR(NVL(LPAD(TO_CHAR(other_client_id),8,' '),'        '),1,8) other_client_no,
			SUBSTR(NVL(LPAD(TO_CHAR(''),2,'0'),'00'),1,2) filler2,
			SUBSTR(NVL(RPAD(DECODE(a.CLH_DVP,'D',CMBP_ID,'C',''),8,' '),'        '),1,8) cm_bp_id,
			SUBSTR(NVL(RPAD(to_char(other_mkt_type),2,' '),'  '),1,2) other_mkt_type,
			SUBSTR(NVL(RPAD(other_stlmnt_no,7,' '),'       '),1,7) other_stlmnt_no,
			SUBSTR(NVL(RPAD(internal_ref_no,20,' '),'                    '),1,20) internal_ref_no,
			SUBSTR(NVL(RPAD(send_ref_1,35,' '),'                                   '),1,35) send_ref_1,
			SUBSTR(NVL(RPAD(send_ref_2,35,' '),'                                   '),1,35) send_ref_2,
			SUBSTR('                                      ',1,38) filler,
			SUBSTR(NVL(RPAD(internal_ref_no,16,' '),'                '),1,16) int_ref_no_cdsl,
**			NVL(LPAD(DECODE(TRANS_TYPE,'904',(a.other_dp_id||A.CLIENT),'905',(a.other_dp_id||a.OTHER_CLIENT_ID)),16,'0'),'0000000000000000') AS BO_ID,
**			NVL(LPAD(a.client,16,'0'),'0000000000000000') AS BO_ID,	
			SUBSTR(NVL(RPAD(to_char(a.other_client_id),8,' '),'  '),1,8) nsdl_client_id,
			SUBSTR(NVL(RPAD(to_char(a.other_dp_id),8,' '),'  '),1,8) nsdl_cmbp_id,
			a.instr_code,
			a.qty,
			deal_cd,
			rev_flg
		FROM DL_DPINSTRS a
		WHERE batch_no =:chr_p_batch_no
		AND NVL(a.status,'N')=:chr_l_status_ind
		ORDER BY batch_no,serial_no;
		** Modified For ISKB_3298 Changes - Jun2010 - Naren V */


	EXEC SQL DECLARE cur_l_details_interdp CURSOR FOR
		  SELECT DECODE(TRANS_TYPE,'CN6',a.CLIENT,'NC6',SUBSTR(a.CLIENT,9,16),a.CLIENT)              ,
			 a.BATCH_NO                                                                          ,
			 a.TRANS_TYPE                                                                        , 
			 LPAD(SUBSTR(BATCH_NO,2,:g_i_batch_no_len + 1),:g_i_batch_no_len,'0')  batch_no1     ,
			 SUBSTR(LPAD(TO_CHAR(SERIAL_NO),:g_i_serial_no_len,'0'),
				1,:g_i_serial_no_len) serial_no                                              ,
			 SUBSTR(LPAD(TO_CHAR(TRANS_TYPE),3,'0'),1,3) trans_type                              ,
			 'A'                                                                                 ,
			 SUBSTR(:chr_g_format_filler, 1, 14) as DP_925_926_Filler1                           ,
			 SUBSTR(LPAD(TO_CHAR(a.CLIENT),8,' '),1,8) client                                    ,
			 SUBSTR(NVL(RPAD(a.ISIN_CD,12,' '),:chr_g_format_filler),1,12) isin_cd               ,
			 SUBSTR(NVL(LPAD(TO_CHAR(QTY*1000),:g_i_qty_digits_1,'0'),
				:chr_g_format_zeros),1,:g_i_qty_digits_1) qty                                ,
			 SUBSTR(:chr_g_format_filler, 1, 10) as DP_925_926_Filler2                           ,
			 SUBSTR(NVL(LPAD(TO_CHAR(MKT_TYPE),2,'0'),'00'),1,2) mkt_type                        ,
			 SUBSTR(NVL(RPAD(a.SETTLEMENT_NO,7,' '),:chr_g_format_filler),1,7) settlement_no_nsdl,
			 SUBSTR(NVL(RPAD(a.SETTLEMENT_NO,7,' '),:chr_g_format_filler),1,7) settlement_no_cdsl,
			 SUBSTR(:chr_g_format_filler, 1, 7) as DP_925_926_Filler3                            ,
			 SUBSTR(NVL(RPAD(TO_CHAR(SETL_DATE,'YYYYMMDD'),8,' '),:chr_g_format_filler),1,8)     ,
			 SUBSTR(NVL(RPAD(TO_CHAR(SETL_DATE,'DDMMYYYY'),8,' '),:chr_g_format_filler),1,8)     ,
			 SUBSTR(NVL(RPAD(OTHER_BRANCH_CD,6,' '),
				:chr_g_format_filler), 1, 6) other_branch_cd /* Subtitute for Filler4 */     ,
			 SUBSTR(NVL(RPAD(a.OTHER_DP_ID,8,' '),:chr_g_format_filler),1,8) other_dp_id         ,
			 SUBSTR(NVL(LPAD(TO_CHAR(OTHER_CLIENT_ID),8,' '),
				:chr_g_format_filler),1,8) other_client_no /* DP_ID & CLNT Total 16 Chars */ ,
			 SUBSTR(NVL(LPAD(TO_CHAR(''),2,'0'),'00'),1,2) DP_925_926_Filler5 /*filler2*/        ,
			 SUBSTR(NVL(RPAD(DECODE(a.CLH_DVP,'D',a.CMBP_ID,'C',a.CMBP_ID),8,' '),
				:chr_g_format_filler),1,8) cm_bp_id                                          ,

			 /* Filler6 is splitted into 3 Parts with 2 substituted fields & rest with spaces   */
			 SUBSTR(NVL(RPAD(TO_CHAR(''),2,' '),
				:chr_g_format_filler),1,2) other_mkt_type      /* Filler6 Part1         */   ,
			 SUBSTR(NVL(RPAD('',7,' '),
				:chr_g_format_filler),1,7) other_stlmnt_no     /* Filler6 Part2         */   , 
			 SUBSTR(:chr_g_format_filler, 1, 8) DP_925_926_Filler6 /* Rest of Filler6 Part3 */   ,
			 /* End Of Framing                                    **** Filler6 ****             */ 

			 SUBSTR(NVL(RPAD(INTERNAL_REF_NO, 35, ' '),
				:chr_g_format_filler), 1, 35) internal_ref_no                                ,
			 SUBSTR(NVL(RPAD(SEND_REF_1,50,' '),:chr_g_format_filler),1,50) send_ref_1           ,
			 SUBSTR(NVL(RPAD(SEND_REF_2,50,' '),:chr_g_format_filler),1,50) send_ref_2           ,
			 SUBSTR(:chr_g_format_zeros , 1, 13) as other_settlement_details                     ,
			 SUBSTR(:chr_g_format_filler, 1, 22) as DP_925_926_Filler7                           ,
			 '1' as priority_flag                                                                ,
			 SUBSTR(:chr_g_format_filler, 1, 24) as DP_925_926_Filler8                           ,
			 SUBSTR(NVL(RPAD(INTERNAL_REF_NO,16,' ') ,
				:chr_g_format_filler),1,16) int_ref_no_cdsl       /* For CDSL */             ,
			 SUBSTR(NVL(LPAD(a.CLIENT,16,'0'), :chr_g_format_zeros),
				1,16) AS BO_ID                                                               ,	
			 SUBSTR(NVL(RPAD(to_char(a.OTHER_CLIENT_ID),8,' '), :chr_g_format_filler),
				1,8) nsdl_client_id                                                          ,
			 SUBSTR(NVL(RPAD(to_char(a.OTHER_DP_ID),8,' '),:chr_g_format_filler),
				1,8) nsdl_cmbp_id                                                            ,
			 a.INSTR_CODE                                                                        ,
			 a.QTY                                                                               ,
			 DEAL_CD                                                                             ,
			 REV_FLG,
			 /*changes done by shrinath for DP passing UAT issue fixed. mode of payment to be changed*/
			 RPAD(NVL(to_char(decode(a.MODE_OF_PAYMENT,'C','01','CH','02','E','03')),' '),2,' ') , /*KOTAK_11371*/
			RPAD(NVL(TO_CHAR(a.PAYMENT_TRAN_DATE,'YYYYMMDD'),' '),8,' '),
			RPAD(NVL(a.TRANSFEREE_NAME,' '),135,' '),
			RPAD(NVL(a.BANK_AC_NUMBER,' '),30,' '),
			RPAD(NVL(a.BANK_NAME,' '),35,' '),
			RPAD(NVL(a.CHEQUE_TRAN_REF_NO,' '),25,' ') 
		    FROM DL_DPINSTRS a
		   WHERE BATCH_NO          =  :chr_p_batch_no
		     AND NVL(a.STATUS,'N') =  :chr_l_status_ind
		ORDER BY BATCH_NO,SERIAL_NO;

		 EXEC SQL OPEN cur_l_details_interdp;

		 printf("\n IF Error6=|%d| \n",sqlca.sqlcode);

		 IS_ANY_ORA_ERROR
			l_counter_srl =0; 
		   for(;;)
		   {

			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */	

			/* Memsetting Inter DP Variables Before Fetching from DB Cursor */
			l_int_qty = 0;

			CMEMSET( chr_l_instr_client       );
			CMEMSET( chr_l_batch_no_orig      );
			CMEMSET( chr_l_trxn_code1         );
			CMEMSET( chr_l_batch_no           );
			CMEMSET( chr_l_serial_no          );
			CMEMSET( chr_l_trans_type         );
			CMEMSET( chr_l_trans_flg          );
			CMEMSET( chr_l_925_926_filler1    );
			CMEMSET( chr_l_client             );
			CMEMSET( chr_l_isin_cd            );
			CMEMSET( chr_l_qty                );
			CMEMSET( chr_l_925_926_filler2    );
			CMEMSET( chr_l_mkt_type           );
			CMEMSET( chr_l_settlement_no_nsdl );
			CMEMSET( chr_l_settlement_no_cdsl );
			CMEMSET( chr_l_925_926_filler3    );
			CMEMSET( chr_l_setl_date          );
			CMEMSET( chr_l_setl_date_cdsl     );
			CMEMSET( chr_l_other_branch_cd    );
			CMEMSET( chr_l_other_dpid         );
			CMEMSET( chr_l_other_acc_no       );
			CMEMSET( chr_l_925_926_filler5    );
			CMEMSET( chr_l_other_cm_bp_id     );
			CMEMSET( chr_l_other_mkt_type     );
			CMEMSET( chr_l_other_stlmnt_no    );
			CMEMSET( chr_l_925_926_filler6    );
			CMEMSET( chr_l_internal_ref_no    );
			CMEMSET( chr_l_send_ref_1         );
			CMEMSET( chr_l_send_ref_2         );
			CMEMSET( chr_l_oth_settl_dtls     );
			CMEMSET( chr_l_925_926_filler7    );
			CMEMSET( chr_l_priority_flag      );
			CMEMSET( chr_l_925_926_filler8    );
			CMEMSET( chr_l_int_ref_no_cdsl    );
			CMEMSET( chr_l_bo_id              );
			CMEMSET( chr_l_nsdl_client_id     );
			CMEMSET( chr_l_nsdl_cmbp_id       );
			CMEMSET( chr_l_instr_code         );
			CMEMSET( chr_l_deal_cd            );
			CMEMSET( l_chr_rev_flg            );

			/* End of ISKB_3298 Changes - Jun2010 - Naren V */

				 /*added by shrinath for 926 for KOTAK_11371 start*/
				 memset(chr_l_mode_of_pymt_filler_2, APL_NULL_CHAR, sizeof(chr_l_mode_of_pymt_filler_2));
				 memset(chr_l_pymt_date_filler_8, APL_NULL_CHAR, sizeof(chr_l_pymt_date_filler_8));
				 memset(chr_l_buyer_name_filler_135, APL_NULL_CHAR, sizeof(chr_l_buyer_name_filler_135));
				 memset(chr_l_bank_acc_filler_30, APL_NULL_CHAR, sizeof(chr_l_bank_acc_filler_30));
				 memset(chr_l_buyer_bank_name_filler_35, APL_NULL_CHAR, sizeof(chr_l_buyer_bank_name_filler_35));
				 memset(chr_l_pymt_transaction_ref_filler_25, APL_NULL_CHAR, sizeof(chr_l_pymt_transaction_ref_filler_25));
				/*added by shrinath for 926  end*/

			/*EXEC SQL FETCH cur_l_details_interdp INTO    :chr_l_instr_client:i_instr_code,
									 :chr_l_batch_no_orig:i_batch_no_orig,
									 :chr_l_trxn_code1,
									 :chr_l_batch_no:i_batch_no,
									 :chr_l_serial_no:i_serial_no,
									 :chr_l_trans_type:i_trans_type,
									 :chr_l_trans_flg,
									 :chr_l_filler3,
									 :chr_l_client,
									 :chr_l_isin_cd,
									 :chr_l_qty,
									 :chr_l_filler4,
									 :chr_l_mkt_type,
									 :chr_l_settlement_no_nsdl,
									 :chr_l_settlement_no_cdsl,
									 :chr_l_setl_date:i_setl_date,
									 :chr_l_setl_date_cdsl:i_setl_date_cdsl,
									 :chr_l_other_branch_cd,
									 :chr_l_other_dpid,
									 :chr_l_other_acc_no,
									 :chr_l_filler2,
									 :chr_l_other_cm_bp_id,
									 :chr_l_other_mkt_type,
									 :chr_l_other_stlmnt_no,
									 :chr_l_internal_ref_no,
									 :chr_l_send_ref_1,
									 :chr_l_send_ref_2,
									 :chr_l_filler,
									 :chr_l_int_ref_no_cdsl,
									 :chr_l_bo_id:i_bo_id,
									 :chr_l_nsdl_client_id:i_nsdl_client_id,
									 :chr_l_nsdl_cmbp_id:i_nsdl_cmbp_id,
									 :chr_l_instr_code,
									 :l_int_qty:i_int_qty,
									 :chr_l_deal_cd:i_deal_cd,
									 :l_chr_rev_flg:i_rev_flg;
			** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
		   Alert("\nShrinath");
			EXEC SQL 
			   FETCH cur_l_details_interdp 
			    INTO :chr_l_instr_client        :i_instr_code    ,
				 :chr_l_batch_no_orig       :i_batch_no_orig ,
				 :chr_l_trxn_code1                           ,
				 :chr_l_batch_no            :i_batch_no      ,
				 :chr_l_serial_no           :i_serial_no     ,
				 :chr_l_trans_type          :i_trans_type    ,
				 :chr_l_trans_flg                            ,
				 :chr_l_925_926_filler1                      ,
				 :chr_l_client                               ,
				 :chr_l_isin_cd                              ,
				 :chr_l_qty                                  ,
				 :chr_l_925_926_filler2                      ,
				 :chr_l_mkt_type                             ,
				 :chr_l_settlement_no_nsdl                   ,
				 :chr_l_settlement_no_cdsl                   ,
				 :chr_l_925_926_filler3                      ,
				 :chr_l_setl_date           :i_setl_date     ,
				 :chr_l_setl_date_cdsl      :i_setl_date_cdsl,
				 :chr_l_other_branch_cd                      , /* 925_926_Filler4       */
				 :chr_l_other_dpid                           ,
				 :chr_l_other_acc_no                         ,
				 :chr_l_925_926_filler5                      ,
				 :chr_l_other_cm_bp_id                       ,
				 :chr_l_other_mkt_type                       , /* 925_926_Filler6 Part1 */
				 :chr_l_other_stlmnt_no                      , /* 925_926_Filler6 Part2 */
				 :chr_l_925_926_filler6                      , /* 925_926_Filler6 Part3 */
				 :chr_l_internal_ref_no                      ,
				 :chr_l_send_ref_1                           ,
				 :chr_l_send_ref_2                           ,
				 :chr_l_oth_settl_dtls                       ,
				 :chr_l_925_926_filler7                      ,
				 :chr_l_priority_flag                        ,
				 :chr_l_925_926_filler8                      ,
				 :chr_l_int_ref_no_cdsl                      ,
				 :chr_l_bo_id               :i_bo_id         ,
				 :chr_l_nsdl_client_id      :i_nsdl_client_id,
				 :chr_l_nsdl_cmbp_id        :i_nsdl_cmbp_id  ,
				 :chr_l_instr_code                           ,
				 :l_int_qty                 :i_int_qty       ,
				 :chr_l_deal_cd             :i_deal_cd       ,
				 :l_chr_rev_flg             :i_rev_flg       ,
				 :chr_l_pymt_date_filler_8,
				 :chr_l_buyer_name_filler_135,
				 :chr_l_bank_acc_filler_30,
				 :chr_l_buyer_bank_name_filler_35,
				 :chr_l_pymt_transaction_ref_filler_25
				 ;


				if(APL_ZERO_RESULT_SET)
				{
					if(counter==0)
					{
						CO_ProcMonitor(g_logfile,"No Records Found in the cur_l_details_interdp CURSOR" ,NULL,NULL);
					}
					break;
				}
				IS_ANY_ORA_ERROR
		
				counter++;
				memset(chr_l_detail_rec_nsdl,APL_NULL_CHAR,1000);
				strcpy(chr_l_detail_rec_nsdl,APL_NULL_STRING);
				memset(chr_l_detail_rec_cdsl,APL_NULL_CHAR,1000);
				strcpy(chr_l_detail_rec_cdsl,APL_NULL_STRING);

				sprintf(chr_g_log_buffer,"chr_l_batch_no=|%s| \n",chr_l_batch_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_serial_no=|%s| \n",chr_l_serial_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_trans_type=|%s| \n",chr_l_trans_type);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_trans_flg=|%s| \n",chr_l_trans_flg);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_client=|%s| \n",chr_l_client);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_isin_cd=|%s| \n",chr_l_isin_cd);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_qty=|%s| \n",chr_l_qty);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_mkt_type=|%s| \n",chr_l_mkt_type);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_settlement_no_nsdl=|%s| \n",chr_l_settlement_no_nsdl);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_settlement_no_cdsl=|%s| \n",chr_l_settlement_no_cdsl);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_settlement Date=|%s| \n",chr_l_setl_date);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_branch_cd=|%s| \n",chr_l_other_branch_cd);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_dpid =|%s| \n",chr_l_other_dpid);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_acc_no =|%s| \n",chr_l_other_acc_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_cm_bp_id=|%s| \n",chr_l_other_cm_bp_id);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_mkt_type=|%s| \n",chr_l_other_mkt_type);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_other_stlmnt_no=|%s| \n",chr_l_other_stlmnt_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_internal_ref_no=|%s| \n",chr_l_internal_ref_no);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				printf(chr_g_log_buffer,"chr_l_send_ref_1=|%s| \n",chr_l_send_ref_1);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_send_ref_2=|%s| \n",chr_l_send_ref_2);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				/* sprintf(chr_g_log_buffer,"chr_l_filler=|%s| \n",chr_l_filler);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
				sprintf(chr_g_log_buffer,"chr_l_int_ref_no_cdsl=|%s| \n",chr_l_int_ref_no_cdsl);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_bo_id=|%s| \n",chr_l_bo_id);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_nsdl_client_id=|%s| \n",chr_l_nsdl_client_id);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_nsdl_cmbp_id=|%s| \n",chr_l_nsdl_cmbp_id);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_instr_client=|%s| \n",chr_l_instr_client);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
				sprintf(chr_g_log_buffer,"chr_l_trxn_code1=|%s| \n",chr_l_trxn_code1);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

			
				printf("\n chr_l_instr_client=|%s| \n",chr_l_instr_client);
				printf("\n chr_l_trxn_code1=|%s| \n",chr_l_trxn_code1);


				/* Validation on length of Client ID : ASHISH 07-09-2007 Start */
				/* ISKB-354 : Commented on 23-10-2007 by ASHISH */
/*				if(strlen(chr_l_instr_client) !=8)
			    {
					fprintf(g_logfile,"\n Error: Client ID should have 8 digits \n");
					APL_GOBACK_FAIL;
				}

*/				
				memset(chr_l_orig_client,APL_NULL_CHAR,11);
				EXEC SQL SELECT  cln_code INTO :chr_l_orig_client:i_orig_client FROM MT_CLI_DEPO_MAP
								WHERE CLN_DEPO_MAP_CLIENT_ID=:chr_l_instr_client
								AND status='AA';

				if(sqlca.sqlcode)
			    {
					printf("\n Error selecting Original Client:sqlca.sqlcode=|%d| \n",sqlca.sqlcode);
			    }
				IS_ANY_ORA_ERROR



				sprintf(chr_g_log_buffer,"Serial no=|%s| Depository is=|%s|",chr_l_serial_no,chr_l_depository);
				CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);

				if(strcmp(chr_l_trxn_code1,"CN5")==0)
			    {
					strcpy(chr_l_buy_sell,"S");
			    }
			    if(strcmp(chr_l_trxn_code1,"NC6")==0)
			    {	
					strcpy(chr_l_buy_sell,"B");
			    }
				
				if(strcmp(chr_l_trxn_code1,"CN5")==0 || strcmp(chr_l_trxn_code1,"NC6")==0)
			    {
					
					if(strcmp(chr_l_exch_code,"BSE")==0)
					{
						if((strcmp(chr_l_mkt_type,"00")==0) || (strcmp(chr_l_mkt_type,"05")==0) || (strcmp(chr_l_mkt_type,"41")==0))
						{
							strcpy(l_temp_mkttype,"RM");
						}
						if((strcmp(chr_l_mkt_type,"01")==0) || (strcmp(chr_l_mkt_type,"04")==0) )
						{
							strcpy(l_temp_mkttype,"AR");

						}
						if(strcmp(chr_l_mkt_type,"06")==0)
						{
							strcpy(l_temp_mkttype,"CO");

						}
						if(strcmp(chr_l_mkt_type,"07")==0)
						{
							strcpy(l_temp_mkttype,"CO");
						}
						else
						{
							strcpy(l_temp_mkttype,chr_l_mkt_type);
						}
						strcat(l_temp_mkttype,chr_l_settlement_no_cdsl);
						memset(chr_l_settlement_no_cdsl,APL_NULL_CHAR,13);
						strcpy(chr_l_settlement_no_cdsl,l_temp_mkttype);

						if(APL_FAILURE == CO_PadString(chr_l_settlement_no_cdsl,'R',9," ",l_debug_info_ptr))
						{
							fprintf(g_logfile,"\n Interdp:Failure from CO_PadString:Still Going Ahead \n");
							strcpy(chr_l_settlement_no_cdsl,"         ");
						}
						strcpy(chr_l_settlement_no_cdsl,APL_NULL_STRING);
						strcpy(chr_l_settlement_no_cdsl,"         ");
						fprintf(g_logfile,"\n InterDP:BSE:Blank Settlement No(9)=|%s| \n",chr_l_settlement_no_cdsl);
						
						sprintf(chr_l_detail_rec_cdsl,"%s%s%s%s%s%c%s%s%s%s",chr_l_setl_date_cdsl,chr_l_bo_id,
																				chr_l_isin_cd,
																				chr_l_qty,chr_l_buy_sell,'X',
																				chr_l_nsdl_client_id,chr_l_other_dpid,
																				chr_l_settlement_no_cdsl,chr_l_int_ref_no_cdsl);
				


					}
					else
					{
						
						if((strcmp(chr_l_mkt_type,"00")==0) || (strcmp(chr_l_mkt_type,"05")==0) || (strcmp(chr_l_mkt_type,"41")==0) )
						{
							strcpy(l_temp_mkttype,"NR");
						}
						if((strcmp(chr_l_mkt_type,"01")==0) || (strcmp(chr_l_mkt_type,"14")==0))
						{
							strcpy(l_temp_mkttype,"NA");

						}
						if(strcmp(chr_l_mkt_type,"04")==0)
						{
							strcpy(l_temp_mkttype,"TT");

						}
						if(strcmp(chr_l_mkt_type,"07")==0)
						{
							strcpy(l_temp_mkttype,"CO");
						}

						else
						{
							strcpy(l_temp_mkttype,chr_l_mkt_type);
						}
						strcat(l_temp_mkttype,chr_l_settlement_no_cdsl);
						memset(chr_l_settlement_no_cdsl,APL_NULL_CHAR,16);
						strcpy(chr_l_settlement_no_cdsl,l_temp_mkttype);
						
						strcpy(chr_l_settlement_no_cdsl,APL_NULL_STRING);
						strcpy(chr_l_settlement_no_cdsl,"         ");
						fprintf(g_logfile,"\n InterDP:NSE:Blank Settlement No(9)=|%s| \n",chr_l_settlement_no_cdsl);

						sprintf(chr_l_detail_rec_cdsl,"%s%s%s%s%s%c%s%s%s%s",chr_l_setl_date_cdsl,chr_l_bo_id,
																				chr_l_isin_cd,
																				chr_l_qty,chr_l_buy_sell,'X',
																				chr_l_nsdl_client_id,chr_l_other_dpid,
																				chr_l_settlement_no_cdsl,chr_l_int_ref_no_cdsl);
				
					
					}

					fprintf(l_ptr_handoff_file_cdsl,"%s",chr_l_detail_rec_cdsl);
					fprintf(l_ptr_handoff_file_cdsl,"\n");	

			    }

				if(strcmp(chr_l_trxn_code1,"NC5")==0)
			    {
					strcpy(chr_l_trans_type,"925");
				}
				if(strcmp(chr_l_trxn_code1,"CN6")==0)
			    {
					strcpy(chr_l_trans_type,"926");
				}
				
				if(strcmp(chr_l_trxn_code1,"NC5")==0  || strcmp(chr_l_trxn_code1,"CN6")==0)
			    {	printf("\n Entered Either \n");
					 l_counter_srl ++;
					 EXEC SQL SELECT lpad(:l_counter_srl,5,'0') 
						 					INTO :l_new_srl_no
											FROM DUAL;
					 IS_ANY_ORA_ERROR
				  if(strcmp(chr_l_trxn_code1,"NC5")==0)
				  {
					printf("\n Entered NC5 \n");
					/* sprintf(chr_l_detail_rec_nsdl,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",chr_l_batch_no,chr_l_rec_type,
						  l_new_srl_no,chr_l_trans_type,chr_l_trans_flg,chr_l_filler3,chr_l_client,chr_l_isin_cd,
						  chr_l_qty,chr_l_filler4,chr_l_mkt_type,chr_l_settlement_no_nsdl,chr_l_setl_date,chr_l_other_branch_cd,
						  chr_l_other_dpid,chr_l_other_acc_no,chr_l_filler2,"IN000026",**chr_l_other_dpid**chr_l_other_mkt_type,chr_l_other_stlmnt_no,
						  chr_l_internal_ref_no,chr_l_send_ref_1,chr_l_send_ref_2,chr_l_filler);
					** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

					sprintf(chr_l_detail_rec_nsdl,
						"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
						chr_l_batch_no          ,
						chr_l_rec_type          ,
						l_new_srl_no            ,
						chr_l_trans_type        ,
						chr_l_trans_flg         ,
						chr_l_925_926_filler1   ,
						chr_l_client            ,
						chr_l_isin_cd           ,
						chr_l_qty               ,
						chr_l_925_926_filler2   ,
						chr_l_mkt_type          ,
						chr_l_settlement_no_nsdl,
						chr_l_925_926_filler3   ,
						chr_l_setl_date         ,
						chr_l_other_branch_cd   , /* Substitute for 925_926_Filler4 */
						chr_l_other_dpid        ,
						chr_l_other_acc_no      ,
						chr_l_925_926_filler5   , /* Replacement to filler2         */ 
						"IN000026"              ,
						chr_l_other_mkt_type    , /* 925_926_Filler6 Part1          */
						chr_l_other_stlmnt_no   , /* 925_926_Filler6 Part2          */
						chr_l_925_926_filler6   , /* 925_926_Filler6 Part3          */
						chr_l_internal_ref_no   ,
						chr_l_send_ref_1        ,
						chr_l_send_ref_2        ,
						chr_l_oth_settl_dtls    , 
						chr_l_925_926_filler7   , /* Replacement to filler          */
						chr_l_priority_flag     , /* New Field                      */ 
						chr_l_925_926_filler8     /* New Field                      */ 
						);
				  }
				  if(strcmp(chr_l_trxn_code1,"CN6")==0)
				  {
					printf("\n Entered CN6 \n");
					strcpy(chr_l_mkt_type,APL_NULL_STRING);
					printf("\n Entered CN6 1\n");
					strcpy(chr_l_settlement_no_nsdl,APL_NULL_STRING);
					printf("\n Entered CN6 2\n");
					strcpy(chr_l_mkt_type,"00");
					printf("\n Entered CN6 3\n");
					strcpy(chr_l_settlement_no_nsdl,"       ");
					printf("\n CN6:chr_l_mkt_type=|%s| chr_l_settlement_no_nsdl=|%s|\n",chr_l_mkt_type,chr_l_settlement_no_nsdl);
					fprintf(g_logfile,"\n CN6:chr_l_mkt_type=|%s| chr_l_settlement_no_nsdl=|%s|\n",chr_l_mkt_type,chr_l_settlement_no_nsdl);

					/* sprintf(chr_l_detail_rec_nsdl,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",chr_l_batch_no,chr_l_rec_type,
						  l_new_srl_no,chr_l_trans_type,chr_l_trans_flg,chr_l_filler3,chr_l_client,chr_l_isin_cd,
						  chr_l_qty,chr_l_filler4,chr_l_mkt_type,chr_l_settlement_no_nsdl,chr_l_setl_date,chr_l_other_branch_cd,
						  chr_l_other_dpid,chr_l_other_acc_no,chr_l_filler2,"IN000026",**chr_l_other_dpid**chr_l_other_mkt_type,chr_l_other_stlmnt_no,
						  chr_l_internal_ref_no,chr_l_send_ref_1,chr_l_send_ref_2,chr_l_filler);
					** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

					sprintf(chr_l_detail_rec_nsdl,
						"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
						chr_l_batch_no          ,
						chr_l_rec_type          ,
						l_new_srl_no            ,
						chr_l_trans_type        ,
						chr_l_trans_flg         ,
						chr_l_925_926_filler1   ,
						chr_l_client            ,
						chr_l_isin_cd           ,
						chr_l_qty               ,
						chr_l_925_926_filler2   ,
						chr_l_mkt_type          ,
						chr_l_settlement_no_nsdl,
						chr_l_925_926_filler3   ,
						chr_l_setl_date         ,
						chr_l_other_branch_cd   , /* Substitute for 925_926_Filler4 */
						chr_l_other_dpid        ,
						chr_l_other_acc_no      ,
						chr_l_925_926_filler5   , /* Replacement to filler2         */    
						"IN000026"              ,
						chr_l_other_mkt_type    , /* 925_926_Filler6 Part1          */
						chr_l_other_stlmnt_no   , /* 925_926_Filler6 Part2          */
						chr_l_925_926_filler6   , /* 925_926_Filler6 Part3          */
						chr_l_internal_ref_no   ,
						chr_l_send_ref_1        ,
						chr_l_send_ref_2        ,
						chr_l_oth_settl_dtls    , 
						chr_l_925_926_filler7   , /* Replacement to filler          */
						chr_l_priority_flag     , /* New Field                      */ 
						chr_l_925_926_filler8     /* New Field                      */ 
						);

				  }
					fprintf(l_ptr_handoff_file_nsdl,"%s",chr_l_detail_rec_nsdl);
					fprintf(l_ptr_handoff_file_nsdl,"\n");

				}

				printf("\n Details Record NSDL=|%s|\n",chr_l_detail_rec_nsdl);
				printf("\n Details Record CDSL=|%s|\n",chr_l_detail_rec_cdsl);

				
				
				EXEC SQL SELECT :chr_l_deal_cd INTO :chr_l_deal_cd_new:i_deal_cd_new FROM dual;

				printf("\n IF Error7=|%d| \n",sqlca.sqlcode);

				IS_ANY_ORA_ERROR


			   printf("\n Before Passing NEW CLIENT=|%s|NEW Deal Code=|%c| Qty=|%lf|\n",chr_l_orig_client,chr_l_deal_cd_new,l_int_qty);
			   fprintf(g_logfile,"Before Passing NEW CLIENT=|%s|NEW Deal Code=|%c| Qty=|%lf|\n",chr_l_orig_client,chr_l_deal_cd_new,l_int_qty);

				printf("\n chr_l_instr_code=|%s| chr_l_orig_client=|%s| chr_l_deal_cd_new=|%c| l_int_qty=|%lf| \n",
				  						chr_l_instr_code,
										chr_l_orig_client,
										chr_l_deal_cd_new,
										l_int_qty);	
			

/**				if(strcmp(chr_l_orig_client,APL_NULL_STRING)!=0)
***/		
/*			   sprintf(chr_g_log_buffer,"Rev_Flg=|%s|\n",l_chr_rev_flg);	*/
			   printf("\n Rev_Flg=|%s|\n",l_chr_rev_flg);
			   fprintf(g_logfile,"Rev_Flg=|%s|\n",l_chr_rev_flg);

			
			/*** OR i can Check if Trans_Type is either CN6 or NC6		****/

			 if(strcmp(l_chr_rev_flg,"P")!=0)
			 {
			  printf("\n Calling Position Update for |%d|th time \n",counter);

		 	  if (APL_FAILURE == DL_Mod_Posn(chr_l_orig_client,
									chr_l_instr_code,
									chr_l_depository,
									"",
									'C',
									chr_l_deal_cd_new,
									&l_int_qty,
									'D',
									"FREE",
									l_debug_info_ptr))
					{
						
						CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
						sprintf(chr_g_log_buffer,"Not Enough Positions For Client=|%s| Instrument=|%s| At Depository=|%s|\n",chr_l_orig_client,chr_l_instr_code,chr_l_depository);
						CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
						CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
						APL_GOBACK_FAIL
					}
/* Next call for DP movement should be CDSL for CDSL Instruction .. Will have to be changed later */
				if (APL_FAILURE == DL_Mod_Posn(chr_l_orig_client,
										chr_l_instr_code,
										chr_l_depository,
										"",
										'D',
										chr_l_deal_cd_new,
										&l_int_qty,
										'I',
										"FREE",
										l_debug_info_ptr))
				   {
					
					CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
					sprintf(chr_g_log_buffer,"Not Enough Positions For Client=|%s|Instrument=|%s|At Depository=|%s|\n",
								       			  chr_l_orig_client,chr_l_instr_code,chr_l_depository);
					CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
					CO_ProcMonitor(g_logfile,"***********************************************",NULL,NULL);
						APL_GOBACK_FAIL
				   }
				

			 }

		   } /* ********* FOR LOOP ENDS ********* */


		EXEC SQL CLOSE cur_l_details_interdp;
		
		IS_ANY_ORA_ERROR
			
			/* ------------------------------------------------------------------- 
			     Printing The Trailer Record For Inter DP Instructions for NSDL
			   ------------------------------------------------------------------- 
			                         ISKB_3298 Changes - Jun2010 - Naren V */
		
			/* fprintf(g_logfile,"Now Printing Trailer Records ... \n"); */
			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
			fprintf(g_logfile,"Now Printing Inter DP Ins Trailer Record1 ... \n");
			fflush(g_logfile);
			/* End of ISKB_3298 Changes - Jun2010 - Naren V */

			
			/* EXEC SQL SELECT  lpad(substr(batch_no,2,8),7,'0') ||
			substr(lpad(to_char(record_type),2,'0'),1,2)||
			substr(nvl(lpad(BRANCH_CD,6,'0'),'000000'),1,6)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(decode(:chr_l_trxn_code,'NC5',RECEIVE_QTY*1000)),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(decode(:chr_l_trxn_code,'CN6',RECEIVE_QTY*1000)),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
			substr('0000000',1,7)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000000000000000000000000000000',1,50)||
			substr('00000000000000000000000',1,23)||
			substr(lpad(to_char(tot_qty*1000),15,'0'),1,15) INTO :chr_l_trail_rec_nsdl
			from DL_DPINSTR_TRAIL
			where batch_no =:chr_p_batch_no
			AND status=:chr_l_status_ind;
			** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

			
			EXEC SQL SELECT LPAD(SUBSTR(BATCH_NO,2,:g_i_batch_no_len+1),:g_i_batch_no_len,'0')      ||
					SUBSTR(LPAD(TO_CHAR(RECORD_TYPE),2,'0'),1,2)                            ||
					SUBSTR(NVL(LPAD(BRANCH_CD,6,'0'),'000000'),1,6)                         ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, 15)  /* Filler1 */                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(NVL(LPAD(TO_CHAR(DECODE(:chr_l_trxn_code,'NC5',RECEIVE_QTY*1000)),
					       :g_i_qty_digits_1,'0'),:chr_g_format_zeros),1,:g_i_qty_digits_1) ||
					SUBSTR(NVL(LPAD(TO_CHAR(DECODE(:chr_l_trxn_code,'CN6',RECEIVE_QTY*1000)),
					       :g_i_qty_digits_1,'0'),:chr_g_format_zeros),1,:g_i_qty_digits_1) ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)                       ||
					SUBSTR(:chr_g_format_zeros, 1, 30)  /* Filler2 */                       ||
					SUBSTR(LPAD(TO_CHAR(TOT_QTY*1000), :g_i_qty_digits_1, '0'),
					       1, :g_i_qty_digits_1)
				   INTO :chr_l_trail_rec_nsdl
				   FROM DL_DPINSTR_TRAIL
				  WHERE BATCH_NO  =  :chr_p_batch_no
				    AND STATUS    =  :chr_l_status_ind;

			printf("\n IF Error8=|%d| \n",sqlca.sqlcode);

			IS_ANY_ORA_ERROR

			/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
			chr_l_trail_rec_nsdl[strlen(chr_l_trail_rec_nsdl)] = '\0';
			printf("\n Sql Code: [%d] \n Inter DP Ins Trailer Rec 1 : [%s] \n",                                                                     sqlca.sqlcode, chr_l_trail_rec_nsdl);
			fflush(stdout);
			/* End of ISKB_3298 Changes - Jun2010 - Naren V */

			fprintf(l_ptr_handoff_file_nsdl,"%s",chr_l_trail_rec_nsdl);
			fflush(l_ptr_handoff_file_nsdl); /* Added for ISKB_3298 Changes - Jun2010 - Naren V */
			fprintf(l_ptr_handoff_file_nsdl,"\n");
			fflush(l_ptr_handoff_file_nsdl); /* Added for ISKB_3298 Changes - Jun2010 - Naren V */
			
				
				
			fclose(l_ptr_handoff_file_nsdl);
			fclose(l_ptr_handoff_file_cdsl);

			fclose(l_ptr_ini_file);
	
		
		printf("\n Before Updating chr_l_batch_no=|%s| chr_l_status_ind=|%s| \n",chr_p_batch_no,chr_l_status_ind);	

		EXEC SQL UPDATE DL_DPINSTRS SET status='P' WHERE batch_no=:chr_p_batch_no AND status=:chr_l_status_ind;
		if(sqlca.sqlcode)
		{
			printf("\n Error Updating DL_DPINSTRS=|%d| \n",sqlca.sqlcode);
		}
		IS_ANY_ORA_ERROR
		
		EXEC SQL UPDATE DL_DPINSTR_HDR SET status='P' WHERE batch_no=:chr_p_batch_no AND status=:chr_l_status_ind; 
		if(sqlca.sqlcode)
		{
			printf("\n Error Updating DL_DPINSTR_HDR=|%d| \n",sqlca.sqlcode);
		}
		IS_ANY_ORA_ERROR
	
		EXEC SQL UPDATE DL_DPINSTR_TRAIL SET status='P' WHERE batch_no=:chr_p_batch_no AND status=:chr_l_status_ind;
		if(sqlca.sqlcode)
		{
			printf("\n Error Updating DL_DPINSTR_TRAIL=|%d| \n",sqlca.sqlcode);
		}
		IS_ANY_ORA_ERROR


	}	/* ****  if Ends ***** */
		
	APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
	  {
		CO_ProcMonitor(g_logfile,"Leaving Proc_PassInterDP_Instrn With Success",NULL,NULL);
		return(APL_SUCCESS);
	  } /* End Of Returning Success Part */
	   
 	  RETURN_FAILURE:
	  {
	   printf("\n Error Inside Proc_PassInterDP_Instrn:ORA|%d|\n",sqlca.sqlcode);

	   fprintf(g_logfile,"\n Deleting the Incorrect Handoff Files ... \n");
	   strcpy(l_remove_file_path1,"rm -f ");
	   strcat(l_remove_file_path1,chr_l_handoff_file_name_nsdl);
	   strcpy(l_remove_file_path2,"rm -f ");
	   strcat(l_remove_file_path2,chr_l_handoff_file_name_cdsl);
	   
	   printf("\n l_remove_file_path1=|%s| \n",l_remove_file_path1);
	   printf("\n l_remove_file_path2=|%s| \n",l_remove_file_path2);

	   if(system(l_remove_file_path1)!=0)
	   {
		 fprintf(g_logfile,"\n Error Removing File 1\n");
	   }
	   if(system(l_remove_file_path2)!=0)
	   {
		 fprintf(g_logfile,"\n Error Removing File 2\n");
	   }

	   printf("\n chr_l_hoff_file_nsdl=|%s| \n",chr_l_hoff_file_nsdl);
	   printf("\n chr_l_hoff_file_cdsl=|%s| \n",chr_l_hoff_file_cdsl);

	   EXEC SQL DELETE FROM PRO_COMMON_REPORT WHERE REPORT_NAME IN(:chr_l_hoff_file_nsdl,:chr_l_hoff_file_cdsl);
	   IS_ANY_ORA_ERROR
	   fprintf(g_logfile,"\n Error Deleting Report Entry=|%d|\n",sqlca.sqlcode);	
	   sprintf(chr_g_log_buffer,"Leaving Proc_PassInterDP_Instrn With Failure ORA|%d|\n",sqlca.sqlcode);	
 	   CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
	   return(APL_FAILURE);	
	  } /* End Of Returning Failure Part             */

}           /* End Of Function Proc_PassInterDP_Instrn() */


/******************************************************************************************************  
 *             Irreversible Delivery Out Depository Instruction (912) File Passing Start              *
 ******************************************************************************************************/

int Proc_IDO_File( char *chr_p_batch_no,
					char *chr_p_status_ind,
					char *chr_p_header,	
					FILE *p_ptr_IDO_file,
					char *file_name,
					char **argv,
					FILE *g_logfile,
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char  chr_g_log_buffer[BUFFER_LEN] = APL_NULL_STRING;
char chr_l_batchno_02[11] =APL_NULL_STRING;
short i_l_batchno_02=0;
	char chr_l_batch_no[APL_DP_BATCH_NO_LEN] = APL_NULL_STRING;
	char chr_l_rec_type[3] = APL_NULL_STRING;	
	/* char chr_l_serial_no[6] = APL_NULL_STRING;
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_serial_no[DP_SERIAL_NO_LEN + 1] = APL_NULL_STRING;
	char chr_l_trans_type[4] = APL_NULL_STRING;
	char chr_l_trans_flg[2] = APL_NULL_STRING;
	/* char chr_l_filler7[8] = APL_NULL_STRING; ** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_client[9] = APL_NULL_STRING;
	char chr_l_isin_cd[13] = APL_NULL_STRING;

	/* char chr_l_qty[16] = APL_NULL_STRING; 
	Increased the length of var for ISKB_3298 Changes - UAT Fix - Nov2010 - Naren V */
	char chr_l_qty[19] = APL_NULL_STRING;

	/* char chr_l_filler10[11] = APL_NULL_STRING; ** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_mkt_type[3] = APL_NULL_STRING;
	char chr_l_settlement_no[8] = APL_NULL_STRING;
	/* char chr_l_filler6[7] = APL_NULL_STRING; ** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_irr_res_cd[5] = APL_NULL_STRING;
	/* char chr_l_filler19[20] = APL_NULL_STRING; ** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
	/* char chr_l_internal_ref_no[21] = APL_NULL_STRING;
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_internal_ref_no [DP_INT_REF_NO_LEN] = APL_NULL_STRING;
	/* char chr_l_send_ref_1[36] = APL_NULL_STRING;
	char chr_l_send_ref_2[36] = APL_NULL_STRING; * Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_send_ref_1 [DP_SEND_REF_LEN] = APL_NULL_STRING;
	char chr_l_send_ref_2 [DP_SEND_REF_LEN] = APL_NULL_STRING;
	/* char chr_l_filler38[39] = APL_NULL_STRING; ** Doomed For ISKB_3298 Changes - Jun2010 - Naren V */
	char chr_l_trail_rec[661] = APL_NULL_STRING;
	
	/* char chr_l_detail_rec[300] = APL_NULL_STRING; 
	 * Modified for ISKB_3298 Changes - UAT Fix - Nov2010 - Naren V */
	char chr_l_detail_rec[1000] = APL_NULL_STRING;

	char chr_l_setl_date[20] = APL_NULL_STRING;
	char chr_l_prev_date[20] = APL_NULL_STRING;
	char chr_l_exec_date[20] = APL_NULL_STRING;

	/* Added for ISKB_3298 Changes (912 frmt chgs) - Start - Nov2010 - Naren V */
	char chr_l_header    [1001] = APL_NULL_STRING; 
	char chr_l_batchno   [   9] = APL_NULL_STRING;
	char chr_l_status_ind[   2] = "G"            ;
	/* End of ISKB_3298 Changes (912 frmt chgs) - Nov2010 - Naren V            */

	/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
	char chr_l_912_filler1   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler2   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler3   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler4   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler5   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler6   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler7   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_priority_flag [                   2] = APL_NULL_STRING;
	char chr_l_filler400[401] = APL_NULL_STRING; //Changes done by shrinath for new File format KOTAK_11371
	/* End of ISKB_3298 Changes - Jun2010 - Naren V  */

	/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
	char chr_dis_ind[2] = APL_NULL_STRING;
	char chr_l_912_filler8   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler9   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	char chr_l_912_filler10   [DP_FORMAT_FILLER_LEN] = APL_NULL_STRING;
	/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)- END*/

	short i_batch_no = 0;
	short i_serial_no = 0;
	short i_exec_date = 0;

	int counter = 0;

	/* Added for ISKB_3298 Changes (912 frmt chgs) - Start - Nov2010 - Naren V */
	int   l_ido_record_count = 0;
	short i_header           = 0;
	/* End of ISKB_3298 Changes (912 frmt chgs) - Nov2010 - Naren V            */

	EXEC SQL BEGIN DECLARE SECTION;
	
	EXEC SQL VAR chr_l_batch_no IS STRING;
	EXEC SQL VAR chr_l_rec_type IS STRING;
	EXEC SQL VAR chr_l_serial_no IS STRING;
	EXEC SQL VAR chr_l_trans_type IS STRING;
	EXEC SQL VAR chr_l_trans_flg IS STRING;
	/* EXEC SQL VAR chr_l_filler7 IS STRING; 
	** Doomed For RFS No: ISKB_3298 Changes - Jun2010 - Naren V */
	EXEC SQL VAR chr_l_client IS STRING;
	EXEC SQL VAR chr_l_isin_cd IS STRING;
	EXEC SQL VAR chr_l_qty IS STRING;
	EXEC SQL VAR chr_l_mkt_type IS STRING;
	EXEC SQL VAR chr_l_settlement_no IS STRING;
	/* EXEC SQL VAR chr_l_filler6 IS STRING; 
	** Doomed For RFS No: ISKB_3298 Changes - Jun2010 - Naren V */
	EXEC SQL VAR chr_l_irr_res_cd IS STRING;
	/* EXEC SQL VAR chr_l_filler19 IS STRING; 
	** Doomed For RFS No: ISKB_3298 Changes - Jun2010 - Naren V */
	EXEC SQL VAR chr_l_internal_ref_no IS STRING;
	EXEC SQL VAR chr_l_send_ref_1 IS STRING;
	EXEC SQL VAR chr_l_send_ref_2 IS STRING;
	/* EXEC SQL VAR chr_l_filler38 IS STRING; 
	** Doomed For RFS No: ISKB_3298 Changes - Jun2010 - Naren V */
	EXEC SQL VAR chr_l_setl_date IS STRING;
	EXEC SQL VAR chr_l_exec_date IS STRING;

	EXEC SQL VAR chr_l_header IS STRING; /* Added for ISKB_3298 Changes (912 frmt chgs) - Nov2010 - Naren V */
		
        /* ISKB_3298 Changes - Start - Jun2010 - Naren V */

	EXEC SQL VAR chr_l_912_filler1   IS STRING;
	EXEC SQL VAR chr_l_912_filler2   IS STRING;
	EXEC SQL VAR chr_l_912_filler3   IS STRING;
	EXEC SQL VAR chr_l_912_filler4   IS STRING;
	EXEC SQL VAR chr_l_912_filler5   IS STRING;
	EXEC SQL VAR chr_l_912_filler6   IS STRING;
	EXEC SQL VAR chr_l_912_filler7   IS STRING;
	EXEC SQL VAR chr_l_priority_flag IS STRING;

	/* End of ISKB_3298 Changes - Jun2010 - Naren V  */

	/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
	EXEC SQL VAR chr_dis_ind   IS STRING;
	EXEC SQL VAR chr_l_912_filler8   IS STRING;
	EXEC SQL VAR chr_l_912_filler9   IS STRING;
	EXEC SQL VAR chr_l_912_filler10   IS STRING;
	/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)- END*/

	EXEC SQL END DECLARE SECTION;
	
/**************NEW FORMAT START*****************/
	char l_client_details[300]=APL_NULL_STRING;
    char chr_l_internal_refno [37] = APL_NULL_STRING;
	char l_ori_filepath_1[PATH_LENGTH]=APL_NULL_STRING;
    char l_ori_file[PATH_LENGTH]=APL_NULL_STRING;
	FILE *l_ptr_new_912 =NULL;
	
    CMEMSET(l_ori_filepath_1);
    CMEMSET(l_ori_file);
	INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha  =NULL;

	l_intl_rept_struct_ha   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
	APL_MALLOC_FAIL(l_intl_rept_struct_ha);
	
	char l_deal_ref_no [40001]=APL_NULL_STRING;
	char l_reason_purpose [23]=APL_NULL_STRING;
	char l_mode_of_payment [3]=APL_NULL_STRING;
	char l_check_tran_ref_no [26]=APL_NULL_STRING;
	char l_payment_tran_date [21]=APL_NULL_STRING;
	char l_ransferee_name [136]=APL_NULL_STRING;
	char l_bank_ac_num [31]=APL_NULL_STRING;
	char l_bank_name [36]=APL_NULL_STRING;
	char l_branch_name [101]=APL_NULL_STRING;
	char l_deal_cd [2]=APL_NULL_STRING;
	char l_settl_no [16]=APL_NULL_STRING;
	char l_clh_flg [2]=APL_NULL_STRING;
	char l_client_cd [11]=APL_NULL_STRING;
	char l_other_dpid [21]=APL_NULL_STRING;
	char l_depo_ind [5]=APL_NULL_STRING;
	char l_exch_code [4]=APL_NULL_STRING;
	char l_mkt_type [4]=APL_NULL_STRING;
	char l_off_mkt [2]=APL_NULL_STRING;
	char l_dom_cpclt [11]=APL_NULL_STRING;
	char l_client_id [21]=APL_NULL_STRING;
	char othr_dpid [21]=APL_NULL_STRING;
	char l_otr_cmbpid [29]=APL_NULL_STRING;
	char l_counter_id [21]=APL_NULL_STRING;
	char l_early_payin [3]=APL_NULL_STRING;
	char chr_l_mkt [5]=APL_NULL_STRING;
	char otr_mkt_type [4]=APL_NULL_STRING;
	char l_settl_no1 [16]=APL_NULL_STRING;
	char l_seg_code [3]=APL_NULL_STRING;
	char l_consideration_flg [5]=APL_NULL_STRING;
	char l_header_dpid [20]=APL_NULL_STRING;
	char l_isin_cd [13]=APL_NULL_STRING;
	char l_stamp_duty_ind[3]=APL_NULL_STRING;
	char  chr_l_detail_rec_nsdl[2000] =APL_NULL_STRING;
	char chr_l_TxType[5]=APL_NULL_STRING;
    char l_buysell[5]=APL_NULL_STRING;
	char l_trns_reasoncd[5]=APL_NULL_STRING;
	char l_qty[29] =APL_NULL_STRING;
	char l_ori_filepath[PATH_LENGTH]=APL_NULL_STRING;
//    char l_ori_file[PATH_LENGTH]=APL_NULL_STRING;
	char l_cmid [10]=APL_NULL_STRING;
	char l_distyp_ind[5] = APL_NULL_STRING;
	char l_cp_code [15] =  APL_NULL_STRING;
	char l_instr_type [6] = APL_NULL_STRING;
	char chr_l_headerline[2500]=APL_NULL_STRING;
	char  pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	char  chr_l_handoff_dir_new[PATH_LENGTH]= APL_NULL_STRING;
	char chr_l_sysdate_1[20]=APL_NULL_STRING;
	char l_batch_filename[100]=APL_NULL_STRING;
	FILE *l_ptr_ini_file=NULL;
    char chr_l_inifile_1[PATH_LENGTH]= APL_NULL_STRING;
	CMEMSET(chr_l_headerline);
	CMEMSET(chr_l_handoff_dir_new);
	CMEMSET(chr_l_sysdate_1);
	CMEMSET(l_batch_filename);
	
	CMEMSET(chr_l_headerline);
	
	short i_deal_ref_no=0;
	short i_reason_purpose=0;
	short i_mode_of_payment=0;
	short i_check_tran_ref_no=0;
	short i_payment_tran_date=0;
	short i_ransferee_name=0;
	short i_bank_ac_num=0;
	short i_bank_name=0;
	short i_branch_name=0;
	short i_stamp_duty_ind=0;
	short i_deal_cd=0;
	short i_settl_no=0;
	short i_clh_flg=0;
	short i_client_cd=0;
	short i_other_dpid=0;
	short i_depo_ind=0;
	short i_exch_code=0;
	short i_mkt_type=0;
	short i_isin_cd =0;
	short i_client_id =0;
	short i_othr_dpid =0;
	short i_otr_cmbpid =0;
	short i_counter_id =0;
	short i_l_mkt =0;
	short i_qty =0;
	short i_header_dpid=0;
	short i_trns_reasoncd=0;
	short i_off_mkt=0;
	short i_dom_cpclt=0;
    short i_cp_code=0;
	short i_buysell=0;
	short i_otr_mkt_type=0;
	short i_settl_no1=0;
	short i_consideration_flg=0;
	short i_cmid=0;
    short i_internal_ref_no=0;
    short i_seg_code=0;	
	short i_pro_sys_date=0;
	short i_instr_type=0;
	short i_batch_filename=0;
	/* NEW FORMAT END ***************************/
	/* printf("\n Before Printing Header chr_l_header=|%s|\n",chr_p_header);
		
	fprintf(p_ptr_IDO_file,"%s",chr_p_header);
	fprintf(p_ptr_IDO_file,"\n"); ** 
	Commented for ISKB_3298 Changes (912 frmt chgs) - Nov2010 - Naren V 
	Seperate Header is framed for 912 file */

		strcpy(chr_l_filler400,"                                                                                                                                                                                                                                                                                                                                                                                                                ");


	printf("*** Batch No: |%s|\n",chr_p_batch_no);
	printf("*** Status Ind: |%s|\n",chr_p_status_ind);
	fflush(stdout);	

	/*	Use of Payin date instead of setle date -1 as Execution date	*/	

	EXEC SQL SELECT DISTINCT(TO_CHAR(setl_date,'DD/MM/YYYY')) INTO :chr_l_setl_date
					FROM DL_DPINSTRS
					WHERE batch_no=:chr_p_batch_no
					AND ROWNUM=1;
  /* Vilin - Issue for the DP Generation and Passing(IDO) - Start */ 
  /*	if ( Rtv_Prev_BussDate(chr_l_setl_date,chr_l_prev_date,"NSE",l_debug_info_ptr) == APL_FAILURE)
	{
		printf("\n error in getting execution date");
			   APL_GOBACK_FAIL
	}

	printf("\n chr_l_prev_date |%s|",chr_l_prev_date); */
 /* Vilin - Issue for the DP Generation and Passing(IDO) - End */

	// Added by Pankaj Deshpande  for execution date changes - Starts */
	//EXEC SQL SELECT TO_CHAR(TO_DATE(SUBSTR(:chr_l_setl_date,1,10),'DD/MM/YYYY'),'YYYYMMDD')  INTO :chr_l_exec_date:i_exec_date FROM DUAL;
	EXEC SQL SELECT TO_CHAR(TO_DATE(SYS_DATE,'DD/MM/YYYY hh24:mi:ss'),'YYYYMMDD')  INTO :chr_l_exec_date:i_exec_date FROM PRO_SYS_DATE;
	// Added by Pankaj Deshpande  for execution date changes - Ends */

	IS_ANY_ORA_ERROR;

	printf("\n ppd: finaly chr_l_exec_date |%s|",chr_l_exec_date);
	Alert(" file [%s]",file_name);
	
	
	fflush(stdout);
	  if(int_l_new_file_format > 0  &&  (strlen(file_name) >0) )
			{
		/*		Alert("inside ");
                     strcpy(l_ori_filepath_1,file_name);
                     strcat(l_ori_filepath_1,"_new.csv");	
                     char* ptr = strrchr(l_ori_filepath_1, '/');
					 Alert("ptr [%s]",ptr);
					 if(strlen(ptr)>0)
					 strcpy(l_ori_file,ptr+1);
				 */	 			 
				 strcpy(chr_l_inifile_1,getenv("INTL_ROOT_PATH"));
		         strcat(chr_l_inifile_1,"intl_sun.cfg");
			
				if ((l_ptr_ini_file = fopen(chr_l_inifile_1,"r")) == NULL)
				{
						CO_ProcMonitor(g_logfile,"Failed to Open Config. File",NULL,NULL);
						APL_GOBACK_FAIL
				}
					
	    if (CO_ReadToken(l_ptr_ini_file,"INTL_HF_PATH",chr_l_handoff_dir_new,l_debug_info_ptr) != APL_SUCCESS)
		{
			return(APL_FAILURE);
		}
		CO_RtvSysDtTime(chr_l_sysdate_1,l_debug_info_ptr);
		
		//strcpy(l_ori_filepath_1,chr_l_handoff_dir_new);
		++g_batchseq;
		EXEC SQL SELECT DP_ID||'_'||to_Char(to_date(:chr_l_sysdate_1,'DD/MM/YYYY HH24:MI:SS'),'YYYYMMDDHH24MI')||'_'||'912'||LPAD(regexp_REPLACE(LTRIM(TRIM(BATCH_NO),'0'),'[a-zA-Z]',''),7,'0') INTO :l_batch_filename:i_batch_filename FROM dl_dpinstr_hdr , pro_sys_date 
		where BATCH_NO= LTRIM(TRIM(:chr_p_batch_no),'0') ;
		
		sprintf(l_ori_filepath_1,"%sTXN_UPLD_%s.csv",chr_l_handoff_dir_new,l_batch_filename);
		sprintf(l_ori_file,"TXN_UPLD_%s.csv",l_batch_filename);
		
	
					 Alert("\n file name = |%s| \n",l_ori_file);
					 Alert("\n file name = |%s| \n",l_ori_filepath_1);
					
					if ((l_ptr_new_912 = fopen(l_ori_filepath_1,"w")) == NULL)
						{
							return(APL_FAILURE);
						}

					sprintf(chr_l_headerline,"BtchId,SndrId,BrnchId,CntrlSctiesDpstryPtcptRole,TxnTyp,LineNb,SeqNm,SrcCntrlSctiesDpstryPtcpt,SrcClntIdOrBnfclOwnrId,ISIN,Qty,BuySellInd,OthrDpstryPtcpt,CntrBnfclOwnrId,CntrCMBPId,Xchg,ClrMmbId,MktTpAndId,SctiesSttlmTxId,OthrMktTpAndId,OthrSctiesSttlmTxId,ExecDt,TrdRsnCd,PlgRsnCd,FrzRsnCd,DISTpInd,DISSrlNb,MstrPwrOfAttnyId,CustdlTxnFlg,UnqClntId,UnqClrMmbId,BrkrId,CtdnPtcptId,Sgmt,ClrSysId,UnqEXId,MkrOprId,ChckrOprtrId,VrfrOprtId,ReqRcvdDtFrBO,Rmks,MdOfPmt,PmtTxRefNb,PmtDt,Acct,BkNm,Brnch,EPAcct,AgrmtId,AllUnitsOrAmtInd,DRFNb,AuthntcnRefNb,EarlyPayInFlg,BlkInd,ClsrDt,PldgTp,Cnsdrtn,DrctPyotFlg,CuspaTxnFlg,CuspaNSDLClntId,CuspaNSDLDPId,DmsIndFlg,DrctPayInFlg,DISIssncDt,DISAlphaPart,DISBookltNb,DISBookltTp,DISCxlFlg,DISIssdToClntOrPwrOfAttnyHldr,DISSrlNbFr,DISSrlNbTo,ISTxTp,DISTxTp,NbOfSOA,NbOfRgs,RcrdTp,RcrdNb,FolioNb,CertNbFr,CertNbTo,DNRFr,DNRTo,DsptchDt,DsptchDocId,DsptchNm,DocRcvdDt,DocTp,NbOfInstrs,NbOfDISLeavs,OrgnlOrdrRefNb,LckInRsnCd,LckInAddtlInf,LckInXpryDt,IntlRefNb,TrfeeNm,PldgSubTp,FreeOrLckInFlg,LckInId,PldgReqFormNb,Val,PldgrIntlRef,PldgeeIntlRef,PldgIdr,MrgnPldgSeqNb,PartCntr,OthrDpstryFlg,FrzTp,FrzLvl,FrzInittdBy,FrzSubOptn,FrznFor,FrzActvtnTp,FrzActvtnDt,FrzXpryDt,FrzRsnDesc,FrzQtyTp,FrzInstrId,RmtFlg,RRFNb,MtlFndTp,MtlFndAmt,MtlFndInd,TxId,TtlNbOfTrfeeBnfclOwnrs,MltplQty,IsseFlg,FlgOfLooseSlip,AcctClsrFlg,ChanlInd,IrrvsblRsnCd1,IrrvsblRsnCd2,IrrvsblRsnCd3,IrrvsblRsnCd4,OthrDpstryClntCdOfFrstNmnee,OthrDpstryClntCdOfScndNmnee,OthrDpstryClntCdOfThrdNmnee,OthrDpstryFlgOfFrstNmnee,OthrDpstryFlgOfScndNmnee,OtherDpstryFlgOfThrdNmnee,OthrClntIdOfFrstNmnee,OthrClntIdOfScndNmnee,OthrClntIdOfThrdNmnee,OthrDpstryPtcptIdOfFrstNmnee,OthrDpstryPtcptIdOfScndNmnee,OthrDpstryPtcptIdOfThrdNmnee,PctgShrOfFrstNmnee,PctgShrOfScndNmnee,PctgShrOfThrdNmnee,Prty,RjctnRsnCd1,RjctnRsnCd2,RjctnRsnCd3,RjctnRsnCd4,SndrRefNb1,SndrRefNb2,StmpDtyInd,StsChngRsn,PANAndHldgPttrnMtcgh,WthtCnsdrtnFlg,TrnsmssnRsn,OthrDpstryClntCd,OthrDpstryId,TxUnqId,BuyPrTrd,MstSrcCntrlSctiesDpstryPtcpt,Rsn,CrtDnm,ConfAmt,DISISDTxTp,Rsvd1,Rsvd2,Rsvd3,Rsvd4");
					fprintf(l_ptr_new_912,"%s",chr_l_headerline);
					fprintf(l_ptr_new_912,"\n");
					fflush(l_ptr_new_912);
					strcpy(l_intl_rept_struct_ha->report_name, l_ori_file);
					strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
					strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
					l_intl_rept_struct_ha->report_width = 100;
					strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
					strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
					strcpy(l_intl_rept_struct_ha->usr, argv[3]);
						

					if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
					{
						APL_GOBACK_FAIL
					}
					
					CMEMSET(l_header_dpid);
                	CMEMSET(pro_sys_date);
					EXEC SQL SELECT DP_ID,TO_CHAR(E.SYS_DATE, 'YYYY-MM-DD')
		            INTO :l_header_dpid:i_header_dpid,:pro_sys_date:i_pro_sys_date
		            FROM DL_DPINSTR_HDR,PRO_SYS_DATE E
		            WHERE BATCH_NO = :chr_p_batch_no
		            AND STATUS = 'G';
					IS_ANY_ORA_ERROR

			
	       }
     
	/* Added for ISKB_3298 Changes (912 frmt chgs) - Start - Nov2010 - Naren V */
	/* Getting the parameters for framing the Header Record of 912 file        */

	CMEMSET( chr_l_batch_no );
	CMEMSET( chr_l_batchno  );

	EXEC SQL SELECT DL_DPINSTRSEQ.NEXTVAL,
			SUBSTR(LPAD(TO_CHAR(DL_DPINSTRSEQ.NEXTVAL),:g_i_batch_no_len,'0'),1,:g_i_batch_no_len) 
		   INTO :chr_l_batchno:i_batch_no,
			:chr_l_batch_no
		   FROM DUAL;
	IS_ANY_ORA_ERROR

	printf("\n 912-chr_l_batch_no next val=|%s||%s| \n",chr_l_batch_no,chr_l_batchno);
	fflush(stdout);

	EXEC SQL SELECT COUNT(*) 
		   INTO :l_ido_record_count 
	    	   FROM DL_DPINSTRS a, MT_CLI_DEPO_MAP b
	   	  WHERE batch_no          =  :chr_p_batch_no
	     	    AND a.client          =  b.cln_depo_map_client_id
	     	    AND a.depo_ind        =  b.cln_depo_code
	     	    AND NVL(a.status,'N') =  :chr_p_status_ind;

	IS_ANY_ORA_ERROR

	printf("\n l_ido_record_count = |%d| \n", l_ido_record_count);
	fflush(stdout);

	/*--------------------------------------------------------------------------------------*
	 * Printing The Header Record For Irreversible Delivery Out Instructions NDSL File (912)*
	 *--------------------------------------------------------------------------------------*/

	EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(:chr_l_batch_no), :g_i_batch_no_len, '0'),
			       1, :g_i_batch_no_len)                                           ||
			SUBSTR(LPAD(TO_CHAR(RECORD_TYPE),2,'0'),1,2)                           ||     
			SUBSTR(NVL(LPAD('000',6,'0'),'000000'),1,6)                            ||
			SUBSTR(NVL(LPAD(DP_ID,8,' '),'        '),1,8)                          ||
			SUBSTR(LPAD(TO_CHAR(DP_ROLE),2,'0'),1,2)                               ||
			SUBSTR(LPAD(TO_CHAR(:l_ido_record_count), :g_i_no_of_recs_len, '0'),
			       1, :g_i_no_of_recs_len)                                         ||
			SUBSTR(TO_CHAR(MAKER_DATE,'YYYYMMDD'),1,8)                             ||
			SUBSTR(NVL(LPAD('',8,' '),'        '),1,8)                             ||
			'  '  
		   INTO :chr_l_header:i_header
		   FROM DL_DPINSTR_HDR
		  WHERE BATCH_NO = :chr_p_batch_no
		    AND STATUS   = :chr_l_status_ind;


	IS_ANY_ORA_ERROR

	printf("\n 912_header = |%s| \n", chr_l_header);
	fflush(stdout);

	fprintf(p_ptr_IDO_file, "%s", chr_l_header);
	fprintf(p_ptr_IDO_file,"\n");
	fflush(p_ptr_IDO_file);
	/********* 912 Header Ends Here ********/

	/* End of ISKB_3298 Changes (912 frmt chgs) - Nov2010 - Naren V           */

	/* EXEC SQL DECLARE cur_l_ido_details CURSOR FOR
	SELECT DISTINCT SUBSTR(LPAD(TO_CHAR(batch_no),7,'0'),1,7) batch_no,
		'02',
		SUBSTR(LPAD(TO_CHAR(serial_no),5,'0'),1,5) serial_no,
		'912',
		'A',
		'       ' as Filler7,
		SUBSTR(LPAD(TO_CHAR(client),8,' '),1,8) client,
		SUBSTR(NVL(RPAD(isin_cd,12,' '),'            '),1,12) isin_cd,
		SUBSTR(NVL(LPAD(TO_CHAR(qty*1000),15,'0'),'0000000000000000'),1,15) qty,
		'          ' as Filler10,
		SUBSTR(NVL(LPAD(TO_CHAR(mkt_type),2,'0'),'00'),1,2) mkt_type,
		SUBSTR(NVL(RPAD(settlement_no,7,' '),'       '),1,7) settlement_no,
		'      ' as Filler6,
		'0000' as irr_res_cd,
		'                   ' as Filler19,
		SUBSTR(NVL(RPAD(internal_ref_no,20,' '),'                    '),1,20) internal_ref_no,
		SUBSTR(NVL(RPAD(send_ref_1,35,' '),'                                   '),1,35) send_ref_1,
		SUBSTR(NVL(RPAD(send_ref_2,35,' '),'                                   '),1,35) send_ref_2,
		SUBSTR('                                      ',1,38) filler38
	FROM DL_DPINSTRS a,MT_CLI_DEPO_MAP b
	WHERE batch_no =:chr_p_batch_no
	AND a.client=b.cln_depo_map_client_id
	AND a.depo_ind=b.cln_depo_code
	AND NVL(a.status,'N')=:chr_p_status_ind
	ORDER BY serial_no;
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

	/* -------------------------------------------------------------------------------
	   Summary Of ISKB_3298 Changes for The Cursor Query & Subsequent Process (FETCH): 
	   1. Enhancement Changes: 
	      - Enh changes for the file format (Field lengths & Addition of few fields)
	   2. UAT Observation Changes For 912 format Nov2010:
	      - Seperate Batch No & Serial is derived for 912 cases.
	      - Clearing Member Client ID (OTHER_CLIENT_ID) is considered as Source Client
		ID instead of Benefitiary Client ID (CLIENT).
	      - INTERNAL_REF_NO, SEND_REF_1, SEND_REF_2 fields are removed from the cursor
		Query & are handled separately based on the new Batch No & Serial No.
 	      - Individual comments are minimized as the description is given in detail.	
	   ------------------------------------------------------------------------------- */

	/*Commented and Rewritten by Prateek on 03072014 For ISKB_6788(DIS Format Change)- START*/
	
		EXEC SQL DECLARE cur_l_ido_details CURSOR FOR
		SELECT '02'                                                             ,
		'912'                                                                   ,
		'A'                                                                     ,
		/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788 - Filler1 is splitted into 3 Parts with 3 Fields - START
		SUBSTR(:chr_g_format_filler, 1, 14) as DP_912_Filler1,*/
		SUBSTR(:chr_g_format_filler, 1, 12) as DP_912_Filler1,
		SUBSTR(:chr_g_format_filler, 1, 1) as DP_912_Filler8,
		(c.MAP_VAL) AS chr_dis_ind /*Filler1 part 3*/ ,
		/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788 - Filler1 is splitted into 3 Parts with 3 Fields - END*/
		SUBSTR(LPAD(TO_CHAR(a.OTHER_CLIENT_ID),8,' '),1,8) As CLIENT_ID         ,
		SUBSTR(NVL(RPAD(ISIN_CD,12,' '),:chr_g_format_filler),1,12) isin_cd     ,
		SUBSTR(NVL(LPAD(TO_CHAR(QTY*1000),:g_i_qty_digits_1,'0'),
			:chr_g_format_zeros),1,:g_i_qty_digits_1) qty                    ,
		/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788 - Filler2 is splitted into 2 Parts with 1 Field and 1 Filler - START
		SUBSTR(:chr_g_format_filler, 1, 10) as DP_912_Filler2,*/
		SUBSTR(:chr_g_format_filler, 1, 9) as DP_912_Filler2,
		SUBSTR(:chr_g_format_filler, 1, 1) as DP_912_Filler9 /*Flag of loose slip -1 space*/,
		/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788 - Filler2 is splitted into 2 Parts with 1 Field and 1 Filler - END*/
		SUBSTR(NVL(LPAD(TO_CHAR(MKT_TYPE),2,'0'),'00'),1,2) mkt_type            ,
		SUBSTR(NVL(RPAD(a.SETTLEMENT_NO,7,' '),:chr_g_format_filler),
			1,7) SETTLEMENT_NO                                               ,
		/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788 - Filler3 is splitted into 2 Parts with 1 Field and 1 Filler - START	
		SUBSTR(:chr_g_format_filler, 1,  7) as DP_912_Filler3 ,*/
		SUBSTR(:chr_g_format_filler, 1,  6) as DP_912_Filler3 /*No of Instruction*/,
		SUBSTR(:chr_g_format_filler, 1,  1) as DP_912_Filler10 /*Filler*/,
		/*Commented and Rewritten by Prateek on 01072014 for ISKB_6788 - Filler3 is splitted into 2 Parts with 1 Field and 1 Filler - END*/
		SUBSTR(:chr_g_format_filler, 1,  6) as DP_912_Filler4 /* New      */    ,
		'0000' as IRR_RES_CD            /* Append 1 * 4 Times In the file */    ,
		SUBSTR(:chr_g_format_filler, 1, 27) as DP_912_Filler5 /* New      */    ,
		SUBSTR(:chr_g_format_filler, 1, 35) as DP_912_Filler6 /* New      */    ,
		'1' as priority_flag                                                    ,
		SUBSTR(:chr_g_format_filler, 1, 24) as DP_912_Filler7,
		a.exch_code,a.mkt_type,TO_CHAR(a.qty,'FM999999999999.000')
		FROM DL_DPINSTRS a,MT_CLI_DEPO_MAP b,PRO_SGENSTAT c
		WHERE batch_no          =  :chr_p_batch_no
		AND a.client          =  b.cln_depo_map_client_id
		AND a.depo_ind        =  b.cln_depo_code
		AND NVL(a.status,'N') =  :chr_p_status_ind
//Commented on 11012016 -This join is not required       AND a.client_code=b.cln_code // PMS 06082015
		AND c.MAP_TYPE			= 'DIS_IND'
		ORDER BY serial_no;

	/*Commented and Rewritten by Prateek on 03072014 For ISKB_6788(DIS Format Change)- END*/


	 EXEC SQL OPEN cur_l_ido_details;
		
	 IS_ANY_ORA_ERROR
	 
	for(;;)
	{

		/* ISKB_3298 Changes - Start - Jun2010 - Naren V */	

		/* Memsetting IDO DP Variables Before Fetching from DB Cursor */

		CMEMSET( chr_l_rec_type        );
		CMEMSET( chr_l_serial_no       );
		CMEMSET( chr_l_trans_type      );
		CMEMSET( chr_l_trans_flg       );
		CMEMSET( chr_l_912_filler1     );
		CMEMSET( chr_l_912_filler8     );/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
		CMEMSET( chr_dis_ind	       );/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
		CMEMSET( chr_l_client          );
		CMEMSET( chr_l_isin_cd         );
		CMEMSET( chr_l_qty             );
		CMEMSET( chr_l_912_filler2     );
		CMEMSET( chr_l_912_filler9     );/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
		CMEMSET( chr_l_mkt_type        );
		CMEMSET( chr_l_settlement_no   );
		CMEMSET( chr_l_912_filler3     );
		CMEMSET( chr_l_912_filler10    );/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
		CMEMSET( chr_l_912_filler4     );
		CMEMSET( chr_l_irr_res_cd      );
		CMEMSET( chr_l_912_filler5     );
		CMEMSET( chr_l_internal_ref_no );
		CMEMSET( chr_l_send_ref_1      );
		CMEMSET( chr_l_send_ref_2      );
		CMEMSET( chr_l_912_filler6     );
		CMEMSET( chr_l_priority_flag   );
		CMEMSET( chr_l_912_filler7     );
        CMEMSET(chr_l_batchno_02);
			
CMEMSET(l_deal_ref_no);
	CMEMSET(l_reason_purpose);
	CMEMSET(l_mode_of_payment);
	CMEMSET(l_check_tran_ref_no);
	CMEMSET(l_payment_tran_date);
	CMEMSET(l_ransferee_name);
	CMEMSET(l_bank_ac_num);
	CMEMSET(l_bank_name);
	CMEMSET(l_branch_name);
	CMEMSET(l_deal_cd);
	CMEMSET(l_settl_no);
	CMEMSET(l_clh_flg);
	CMEMSET(l_client_cd);
	CMEMSET(l_other_dpid);
	CMEMSET(l_depo_ind);
	//CMEMSET(l_exch_code);
	//CMEMSET(l_mkt_type);
	//CMEMSET(l_qty);
	CMEMSET(l_off_mkt);
	CMEMSET(l_dom_cpclt);
	CMEMSET(chr_l_TxType);
	CMEMSET(l_client_id);
	CMEMSET(l_buysell);
	CMEMSET(othr_dpid);
	CMEMSET(l_otr_cmbpid);
	CMEMSET(l_counter_id);
	CMEMSET(l_early_payin);
	CMEMSET(chr_l_mkt);
	CMEMSET(otr_mkt_type);
	CMEMSET(l_settl_no1);
	CMEMSET(l_seg_code);
	CMEMSET(l_consideration_flg);
	
	CMEMSET(l_isin_cd);
	CMEMSET(l_trns_reasoncd);
	CMEMSET(l_cmid);
	CMEMSET(l_distyp_ind);
	CMEMSET(l_cp_code);
	CMEMSET(l_instr_type);
		/* End of ISKB_3298 Changes - Jun2010 - Naren V */

		/* EXEC SQL FETCH cur_l_ido_details INTO :chr_l_batch_no:i_batch_no,
			       				 :chr_l_rec_type,	
							 :chr_l_serial_no:i_serial_no,
							 :chr_l_trans_type,
							 :chr_l_trans_flg,
							 :chr_l_filler7,
							 :chr_l_client,
							 :chr_l_isin_cd,
							 :chr_l_qty,
							 :chr_l_filler10,
							 :chr_l_mkt_type,
							 :chr_l_settlement_no,
							 :chr_l_filler6,
							 :chr_l_irr_res_cd,
							 :chr_l_filler19,
							 :chr_l_internal_ref_no,
							 :chr_l_send_ref_1,
							 :chr_l_send_ref_2,
							 :chr_l_filler38;
		** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

		EXEC SQL FETCH cur_l_ido_details 
			  INTO :chr_l_rec_type                ,
			       :chr_l_trans_type              ,
			       :chr_l_trans_flg               ,
			       :chr_l_912_filler1             ,
			       :chr_l_912_filler8             ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
		           :chr_dis_ind                   ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
			       :chr_l_client                  ,
			       :chr_l_isin_cd                 ,
			       :chr_l_qty                     ,
			       :chr_l_912_filler2             ,
			       :chr_l_912_filler9             ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
			       :chr_l_mkt_type                ,
			       :chr_l_settlement_no           ,
			       :chr_l_912_filler3             ,
		           :chr_l_912_filler10             ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
			       :chr_l_912_filler4             ,
			       :chr_l_irr_res_cd              ,
			       :chr_l_912_filler5             ,
			       :chr_l_912_filler6             ,
			       :chr_l_priority_flag           ,
			       :chr_l_912_filler7             ,
				   :l_exch_code:i_exch_code       ,
				   :l_mkt_type:i_mkt_type         ,
				   :l_qty:i_qty;


		if(APL_ZERO_RESULT_SET)
		{
		   if(counter==0)
		   {
		     CO_ProcMonitor(g_logfile,"No Records Found in the cur_l_ido_details CURSOR" ,NULL,NULL);
		   }
		   break;
		}
		IS_ANY_ORA_ERROR
		
		counter++; /* Deriving the Serial No for 912 file based on the no. of recs */

		/* Added for ISKB_3298 Changes (912 frmt chgs) - Start - Nov2010 - Naren V */

		EXEC SQL SELECT SUBSTR(LPAD(TO_CHAR(:counter),:g_i_serial_no_len,'0'),
				       1,:g_i_serial_no_len)  SERIAL_NO                                     ,
				SUBSTR(NVL(RPAD(:chr_l_batchno||:counter, 35, ' '), :chr_g_format_filler),
				       1, 35)           INTERNAL_REF_NO                                     ,
				SUBSTR(NVL(RPAD(:chr_l_batchno||:counter, 50, ' '), :chr_g_format_filler),
				       1, 50)                SEND_REF_1                                     ,
				SUBSTR(NVL(RPAD(:chr_l_batchno||:counter, 50, ' '), :chr_g_format_filler),       
				       1, 50)                SEND_REF_2
			   INTO :chr_l_serial_no:i_serial_no,
				:chr_l_internal_ref_no      ,
				:chr_l_send_ref_1           ,
				:chr_l_send_ref_2
			   FROM DUAL;

		IS_ANY_ORA_ERROR

		/* End of ISKB_3298 Changes (912 frmt chgs) - Nov2010 - Naren V           */

							
		/* memset(chr_l_detail_rec,APL_NULL_CHAR,300); * Modified for ISKB_3298 Changes - UAT Fix - Nov2010 - Naren V */
		memset(chr_l_detail_rec,APL_NULL_CHAR,sizeof(chr_l_detail_rec));
		strcpy(chr_l_detail_rec,APL_NULL_STRING);

		printf("\n chr_l_batch_no=|%s| \n",chr_l_batch_no);
		printf("\n chr_l_rec_type=|%s| \n",chr_l_rec_type);
		printf("\n chr_l_serial_no=|%s| \n",chr_l_serial_no);
		printf("\n chr_l_trans_type=|%s| \n",chr_l_trans_type);
		printf("\n chr_l_trans_flg=|%s| \n",chr_l_trans_flg);
		printf("\n chr_dis_ind=|%s| \n",chr_dis_ind);/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
		printf("\n chr_l_client=|%s| \n",chr_l_client);
		printf("\n chr_l_isin_cd=|%s| \n",chr_l_isin_cd);
		printf("\n chr_l_qty=|%s| \n",chr_l_qty);
		printf("\n chr_l_mkt_type=|%s| \n",chr_l_mkt_type);
		printf("\n chr_l_settlement_no=|%s| \n",chr_l_settlement_no);
		printf("\n chr_l_irr_res_cd =|%s| \n",chr_l_irr_res_cd);
		printf("\n chr_l_internal_ref_no=|%s| \n",chr_l_internal_ref_no);
		printf("\n chr_l_send_ref_1=|%s| \n",chr_l_send_ref_1);
		printf("\n chr_l_send_ref_2=|%s| \n",chr_l_send_ref_2);
		/* printf("\n chr_l_filler38=|%s| \n",chr_l_filler38);
		** Doomed For RFS No: ISKB_3298 Changes - Jun2010 - Naren V */

		sprintf(chr_g_log_buffer,"chr_l_batch_no=|%s| \n",chr_l_batch_no);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_rec_type=|%s| \n",chr_l_rec_type);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_serial_no=|%s| \n",chr_l_serial_no);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_trans_type=|%s| \n",chr_l_trans_type);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_trans_flg=|%s| \n",chr_l_trans_flg);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-START*/
		sprintf(chr_g_log_buffer,"chr_dis_ind=|%s| \n",chr_dis_ind);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)-END*/
		sprintf(chr_g_log_buffer,"chr_l_client=|%s| \n",chr_l_client);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_isin_cd=|%s| \n",chr_l_isin_cd);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_qty=|%s| \n",chr_l_qty);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_mkt_type=|%s| \n",chr_l_mkt_type);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_settlement_no=|%s| \n",chr_l_settlement_no);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_irr_res_cd =|%s| \n",chr_l_irr_res_cd);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_internal_ref_no=|%s| \n",chr_l_internal_ref_no);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		printf(chr_g_log_buffer,"chr_l_send_ref_1=|%s| \n",chr_l_send_ref_1);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		sprintf(chr_g_log_buffer,"chr_l_send_ref_2=|%s| \n",chr_l_send_ref_2);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL);
		/* sprintf(chr_g_log_buffer,"chr_l_filler38=|%s| \n",chr_l_filler38);
		CO_ProcMonitor(g_logfile,chr_g_log_buffer,NULL,NULL); 
		** Doomed For RFS No: ISKB_3298 Changes - Jun2010 - Naren V */

		/* sprintf(chr_l_detail_rec,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",chr_l_batch_no,chr_l_rec_type,chr_l_serial_no,chr_l_trans_type,chr_l_trans_flg,chr_l_filler7,chr_l_client,chr_l_isin_cd,chr_l_qty,chr_l_filler10,chr_l_mkt_type,chr_l_settlement_no,chr_l_exec_date,chr_l_filler6,chr_l_irr_res_cd,chr_l_irr_res_cd,chr_l_irr_res_cd,chr_l_irr_res_cd,chr_l_filler19,chr_l_internal_ref_no,chr_l_send_ref_1,chr_l_send_ref_2,chr_l_filler38);
		** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

		sprintf(chr_l_detail_rec,
			"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
			chr_l_batch_no       ,
			chr_l_rec_type       ,
			chr_l_serial_no      ,
			chr_l_trans_type     ,
			chr_l_trans_flg      ,
			chr_l_912_filler1    ,
			chr_l_912_filler8    ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
			chr_dis_ind          ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
			chr_l_client         ,
			chr_l_isin_cd        ,
			chr_l_qty            ,
			chr_l_912_filler2    ,
			chr_l_912_filler9    ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
			chr_l_mkt_type       ,
			chr_l_settlement_no  ,
			chr_l_912_filler3    ,
			chr_l_912_filler10    ,/*Added by Prateek on 03072014 For ISKB_6788(DIS Format Change)*/
			chr_l_exec_date      ,
			chr_l_912_filler4    ,
			chr_l_irr_res_cd     ,
			chr_l_irr_res_cd     ,
			chr_l_irr_res_cd     ,
			chr_l_irr_res_cd     ,
			chr_l_912_filler5    ,
			chr_l_internal_ref_no,
			chr_l_send_ref_1     ,
			chr_l_send_ref_2     ,
			chr_l_912_filler6    ,
			chr_l_priority_flag  ,
			chr_l_912_filler7    );

		fprintf(p_ptr_IDO_file,"%s",chr_l_detail_rec);
			Alert("DEBUG -3 [%s]",chr_p_batch_no);
		
		    if(int_l_new_file_format > 0   &&  (strlen(file_name) >0) )
				
				{

	
strcpy(chr_l_TxType,"IDO");
strcpy(l_buysell,"");
strcpy(l_distyp_ind,"EDS");
strcpy(l_instr_type,"");
strcpy(l_early_payin,"");


EXEC SQL SELECT DECODE(:l_exch_code,
	'NSE',DECODE(:l_mkt_type,'4','RLA','14','AUN','33','OFS','35','OS2','26','CB','27','CB','28','CB','49','T1N','50','TT1','23','SBL','24','ST','25','SLA','39','BYB','40','TKO','55','T0N'),
	'BSE',DECODE(:l_mkt_type,'4','RLA','25','OFS','27','OS2','21','I0','22','I1','23','I2','41','T1R','17','T1R','18','SBL','19','SLR','20','SLA','31','BYB','32','TKO') ),DECODE(:l_mkt_type,'44','FO','CM'), TRIM(:chr_l_client),TRIM(:chr_l_isin_cd),TRIM(:chr_l_settlement_no),LPAD(regexp_REPLACE(LTRIM(TRIM(:chr_l_batch_no),'0'),'[a-zA-Z]',''),8,'0') INTO :chr_l_mkt,l_seg_code:i_seg_code,:l_client_cd:i_client_cd,:l_isin_cd:i_isin_cd,:l_settl_no:i_settl_no,:chr_l_batchno_02:i_l_batchno_02 FROM DUAL;

       sprintf(chr_l_detail_rec_nsdl,"%s,,000000,DP,%s,%d,,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,,,%s,%s,,,%s,,,CTR,,,,%s,%s,,%s,,,,,,%s,%s,%s,%s,%s,%s,,,,,,%s,,,,,,,,,,,,,,,,,,,%s,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HP,,,,,%s%d,%s%d,%s,,,%s,,,,,,,%s,,,,,,,",chr_l_batchno_02,chr_l_TxType,counter,l_header_dpid,l_client_cd,l_isin_cd,l_qty,l_buysell,othr_dpid,l_counter_id,l_otr_cmbpid,l_exch_code,l_cmid,chr_l_mkt,l_settl_no,pro_sys_date,l_trns_reasoncd,l_distyp_ind,l_cp_code,l_seg_code,l_exch_code,l_mode_of_payment,l_check_tran_ref_no,l_payment_tran_date,l_bank_ac_num,l_bank_name,l_branch_name,l_early_payin,l_instr_type,chr_l_batchno_02,counter,chr_l_batchno_02,counter,l_stamp_duty_ind,l_consideration_flg,l_reason_purpose);		
	
   fprintf(l_ptr_new_912,"%s",chr_l_detail_rec_nsdl);
   fprintf(l_ptr_new_912,"\n");
   fflush(l_ptr_new_912);


				}	
		//Changes done by shrinath for new File format 
			if(strcmp(chr_l_trans_type,"912") == 0)
			{
				fprintf(p_ptr_IDO_file,"%s",chr_l_filler400);
				Alert("400 fillers added ");
			}
		fprintf(p_ptr_IDO_file,"\n");

		printf("\n 912 Detail Rec done !!!");	
		fflush(stdout);

	} /* End of Cursor FETCH for() loop */

	EXEC SQL CLOSE cur_l_ido_details;
		
	IS_ANY_ORA_ERROR

	/* ---------------------------------------------------------------------------------
	   Printing The Trailer Record For Irreversible Delivery Out Instructions NDSL Files
	   --------------------------------------------------------------------------------- 
	                       ISKB_3298 Changes - Jun2010 - Naren V                         */
		
	fprintf(g_logfile,"Now Printing IDO File Trailer Records ... \n");
	fflush(g_logfile); /* Added for ISKB_3298 Changes - Jun2010 - Naren V */
			
	/* EXEC SQL SELECT substr(lpad(to_char(batch_no),7,'0'),1,7)||
	substr(lpad(to_char(record_type),2,'0'),1,2)||
	substr(nvl(lpad(BRANCH_CD,6,'0'),'000000'),1,6)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	'000000000000000'||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(TOT_QTY*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	substr(nvl(lpad(to_char(0*1000),15,'0'),'000000000000000'),1,15)||
	'000000000000000000000000000000'||
	substr(lpad(to_char(tot_qty*1000),15,'0'),1,15) INTO :chr_l_trail_rec
	from DL_DPINSTR_TRAIL
	where batch_no =:chr_p_batch_no
	AND status=:chr_p_status_ind;
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */

	/* Commented few '0' padding columns as these values are not required in 
	   the revised formats - ISKB_3298 Changes - UAT Fix - Nov2010 - Naren V */
			
	EXEC SQL SELECT :chr_l_batch_no                                                ||
			SUBSTR(LPAD(TO_CHAR(RECORD_TYPE),2,'0'),1,2)                   ||
			SUBSTR(NVL(LPAD(BRANCH_CD,6,'0'),'000000'),1,6)                ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, 15)  /* Filler1 */              || 
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(NVL(LPAD(TO_CHAR(TOT_QTY*1000), :g_i_qty_digits_1, '0'),
				   :chr_g_format_zeros), 1, :g_i_qty_digits_1)         ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||

		/*	SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              ||
			SUBSTR(:chr_g_format_zeros, 1, :g_i_qty_digits_1)              || */

			SUBSTR(:chr_g_format_zeros, 1, 30)  /* Filler2 */              || 
			SUBSTR(LPAD(TO_CHAR(TOT_QTY*1000), :g_i_qty_digits_1,'0'),
			       1, :g_i_qty_digits_1)	
   		   INTO :chr_l_trail_rec
   		   FROM DL_DPINSTR_TRAIL
  		  WHERE BATCH_NO  =  :chr_p_batch_no
    		    AND STATUS    =  :chr_p_status_ind;

	/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
	printf("\n IDO File Trailer Rec - Sql Code: [%d] \n", sqlca.sqlcode);
	fflush(stdout);
	/* End of ISKB_3298 Changes - Jun2010 - Naren V */
		
	IS_ANY_ORA_ERROR
									
	/* ISKB_3298 Changes - Start - Jun2010 - Naren V */
	chr_l_trail_rec[strlen(chr_l_trail_rec)] = '\0'; 
	printf("\n IDO File Trailer Rec : [%s] \n", chr_l_trail_rec);
	fflush(stdout);
	/* End of ISKB_3298 Changes - Jun2010 - Naren V */
			
	fprintf(p_ptr_IDO_file,"%s",chr_l_trail_rec);
	fflush(p_ptr_IDO_file); /* Added for ISKB_3298 Changes - Jun2010 - Naren V */
		
	printf("\n Now Printing Line Break \n");
	fflush(stdout);
	
	fprintf(p_ptr_IDO_file,"\n");
	fflush(p_ptr_IDO_file); /* Added for ISKB_3298 Changes - Jun2010 - Naren V */
			
	fclose(p_ptr_IDO_file);

	APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
	  {
		CO_ProcMonitor(g_logfile,"Leaving Proc_IDO_File With Success",NULL,NULL);
		return(APL_SUCCESS);
	  }
	   
 	  RETURN_FAILURE:
		  	  {
		CO_ProcMonitor(g_logfile,"Leaving Proc_IDO_File With Success",NULL,NULL);
		return(APL_FAILURE);
	  }

} /* End Of Function Proc_IDO_File() */


int New_format(char *New_dp_file,char *l_batch_no,char *p_trans_type ,char *l_client_detail,char **argv, DEBUG_INFO_STRUCT_H ** l_debug_info_ptr)
{
	
	Alert("DEBUG-1 NEW_FORMAT-  [%s],[%s]",l_batch_no,p_trans_type);
	Alert("l_client_detail[%s]",l_client_detail);
	
	char chr_l_batchno_02[11] =APL_NULL_STRING;
	char chr_l_batchno_01[11] =APL_NULL_STRING;
	static char l_trans_type [4]=APL_NULL_STRING;
	char l_deal_ref_no [40001]=APL_NULL_STRING;
	char l_reason_purpose [23]=APL_NULL_STRING;
	char l_mode_of_payment [3]=APL_NULL_STRING;
	char l_check_tran_ref_no [26]=APL_NULL_STRING;
	char l_payment_tran_date [21]=APL_NULL_STRING;
	char l_ransferee_name [136]=APL_NULL_STRING;
	char l_bank_ac_num [31]=APL_NULL_STRING;
	char l_bank_name [36]=APL_NULL_STRING;
	char l_branch_name [101]=APL_NULL_STRING;
	char l_deal_cd [2]=APL_NULL_STRING;
	char l_settl_no [16]=APL_NULL_STRING;
	char l_clh_flg [2]=APL_NULL_STRING;
	char l_client_cd [11]=APL_NULL_STRING;
	char l_other_dpid [21]=APL_NULL_STRING;
	char l_depo_ind [5]=APL_NULL_STRING;
	char l_exch_code [4]=APL_NULL_STRING;
	char l_mkt_type [4]=APL_NULL_STRING;
	char l_off_mkt [3]=APL_NULL_STRING;
	char l_off_mkt_1 [3]=APL_NULL_STRING;
	char l_dom_cpclt [11]=APL_NULL_STRING;
	char l_client_id [21]=APL_NULL_STRING;
	char othr_dpid [21]=APL_NULL_STRING;
	char l_otr_cmbpid [29]=APL_NULL_STRING;
	char l_counter_id [21]=APL_NULL_STRING;
	char l_early_payin [4]=APL_NULL_STRING;
	char chr_l_mkt [5]=APL_NULL_STRING;
	char otr_mkt_type [4]=APL_NULL_STRING;
	char l_settl_no1 [16]=APL_NULL_STRING;
	char l_seg_code [3]=APL_NULL_STRING;
	char l_consideration_flg [5]=APL_NULL_STRING;
	char l_header_dpid [20]=APL_NULL_STRING;
	char l_isin_cd [13]=APL_NULL_STRING;
	char l_stamp_duty_ind[3]=APL_NULL_STRING;
	char  chr_l_detail_rec_nsdl[2000] =APL_NULL_STRING;
	char chr_l_TxType[5]=APL_NULL_STRING;
    char l_buysell[5]=APL_NULL_STRING;
	char l_trns_reasoncd[5]=APL_NULL_STRING;
	char l_qty[29] =APL_NULL_STRING;
	char l_ori_filepath[PATH_LENGTH]=APL_NULL_STRING;
    char l_ori_file[PATH_LENGTH]=APL_NULL_STRING;
	char l_cmid [10]=APL_NULL_STRING;
	char l_cmid_1[10]=APL_NULL_STRING;
	char l_distyp_ind[5] = APL_NULL_STRING;
	char l_cp_code [15] =  APL_NULL_STRING;
	char l_instr_type [6] = APL_NULL_STRING;
	//static char l_trans_type[10]=APL_NULL_STRING;
	static int line_no=0;
	char l_ori_filepath_1[PATH_LENGTH]=APL_NULL_STRING;
    char l_ori_file_1[PATH_LENGTH]=APL_NULL_STRING;
	static char previous_file_name[PATH_LENGTH] =APL_NULL_STRING;
	char **temp_2= NULL;
    int int_num_2=0;
    char l_add_detail[500]=APL_NULL_STRING;
	char l_internal_ref_no [300]=APL_NULL_STRING;
	char  pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	char chr_l_headerline[2500]=APL_NULL_STRING;
	int l_error_flg=0;
	char l_cust_trntype[4]=APL_NULL_STRING;
	char l_chr_cmbp_id [10]=APL_NULL_STRING;
	char l_OthrDpstryId[21]=APL_NULL_STRING;
	char  chr_l_handoff_dir_new[PATH_LENGTH]= APL_NULL_STRING;
	char l_batch_filename[100]=APL_NULL_STRING;
	char chr_l_sysdate_1[20] = APL_NULL_STRING;
    FILE *l_ptr_ini_file_2=NULL;
   char chr_l_inifile_2[PATH_LENGTH]= APL_NULL_STRING;
   char l_trans_type_new [5]=APL_NULL_STRING;
   char l_internal_ref_no_temp [300]=APL_NULL_STRING;
   
	CMEMSET(chr_l_batchno_02);
    CMEMSET(chr_l_batchno_01);
	CMEMSET(l_deal_ref_no);
	CMEMSET(l_reason_purpose);
	CMEMSET(l_mode_of_payment);
	CMEMSET(l_check_tran_ref_no);
	CMEMSET(l_payment_tran_date);
	CMEMSET(l_ransferee_name);
	CMEMSET(l_bank_ac_num);
	CMEMSET(l_bank_name);
	CMEMSET(l_branch_name);
	CMEMSET(l_deal_cd);
	CMEMSET(l_settl_no);
	CMEMSET(l_clh_flg);
	CMEMSET(l_client_cd);
	CMEMSET(l_other_dpid);
	CMEMSET(l_depo_ind);
	CMEMSET(l_exch_code);
	CMEMSET(l_mkt_type);
	CMEMSET(l_qty);
	CMEMSET(l_off_mkt);
	CMEMSET(l_off_mkt_1);
	CMEMSET(l_dom_cpclt);
	CMEMSET(chr_l_TxType);
	CMEMSET(l_client_id);
	CMEMSET(l_buysell);
	CMEMSET(othr_dpid);
	CMEMSET(l_otr_cmbpid);
	CMEMSET(l_counter_id);
	CMEMSET(l_early_payin);
	CMEMSET(chr_l_mkt);
	CMEMSET(otr_mkt_type);
	CMEMSET(l_settl_no1);
	CMEMSET(l_seg_code);
	CMEMSET(l_consideration_flg);
	CMEMSET(l_header_dpid);
	CMEMSET(l_isin_cd);
	CMEMSET(l_trns_reasoncd);
	CMEMSET(l_cmid);
	CMEMSET(l_distyp_ind);
	CMEMSET(l_cp_code);
	CMEMSET(l_instr_type);
	CMEMSET(l_ori_filepath);
	CMEMSET(l_ori_file);
	CMEMSET(l_ori_filepath_1);
	CMEMSET(l_ori_file_1);
	CMEMSET(l_add_detail);
	CMEMSET(l_internal_ref_no);
	CMEMSET(pro_sys_date);
	CMEMSET(l_cmid_1);
	CMEMSET(chr_l_headerline);
	CMEMSET(l_cust_trntype);
	CMEMSET(l_chr_cmbp_id);
	CMEMSET(l_OthrDpstryId);
	CMEMSET(chr_l_handoff_dir_new);
	CMEMSET(l_batch_filename);
	CMEMSET(chr_l_sysdate_1);
	CMEMSET(chr_l_inifile_2);
	CMEMSET(l_trans_type_new);
	CMEMSET(l_internal_ref_no_temp);
	
	
	short i_deal_ref_no=0;
	short i_reason_purpose=0;
	short i_mode_of_payment=0;
	short i_check_tran_ref_no=0;
	short i_payment_tran_date=0;
	short i_ransferee_name=0;
	short i_bank_ac_num=0;
	short i_bank_name=0;
	short i_branch_name=0;
	short i_stamp_duty_ind=0;
	short i_deal_cd=0;
	short i_settl_no=0;
	short i_clh_flg=0;
	short i_client_cd=0;
	short i_other_dpid=0;
	short i_depo_ind=0;
	short i_exch_code=0;
	short i_mkt_type=0;
	short i_isin_cd =0;
	short i_client_id =0;
	short i_othr_dpid =0;
	short i_otr_cmbpid =0;
	short i_counter_id =0;
	short i_l_mkt =0;
	short i_qty =0;
	short i_header_dpid=0;
	short i_trns_reasoncd=0;
	short i_off_mkt=0;
	short i_off_mkt_1=0;
	short i_dom_cpclt=0;
    short i_cp_code=0;
	short i_buysell=0;
	short i_otr_mkt_type=0;
	short i_settl_no1=0;
	short i_consideration_flg=0;
	short i_cmid=0;
    short i_internal_ref_no=0;
    short i_seg_code=0;	
	short i_pro_sys_date=0;
	short i_instr_type=0;
	short i_cmid_1=0;
	short i_l_TxType;
	short i_cust_trntype=0;
    short i_batchno_01=0;
	short i_distyp_ind=0;	
	short i_batchno_02=0;
	short i_chr_cmbp_id=0;
	short i_OthrDpstryId=0;
	short i_batch_filename=0;
	
	    strcpy(l_add_detail,l_client_detail);
		if (APL_SUCCESS != CO_SplitStr(l_add_detail ,
					'|',
					&int_num_2,
					&temp_2 ))
	        {
		   Alert("Returns Unsuccessfully from CO_SplitStr\n");
		   APL_GOBACK_FAIL
	        }
  
	 if(strlen(temp_2[0]) >0)
	   strcpy(l_client_id,temp_2[0]);
   if(strlen(temp_2[1]) >0)
	    strcpy(othr_dpid,temp_2[1]);
   if(strlen(temp_2[2]) >0)
	    strcpy(l_counter_id,temp_2[2]);
   if(strlen(temp_2[3]) >0)	 
        strcpy(l_otr_cmbpid,temp_2[3]);
   if(strlen(temp_2[4]) >0)	 
        strcpy(l_internal_ref_no,temp_2[4]);	
   if(strlen(l_batch_no)>0)
                strcpy(chr_l_batchno_01,l_batch_no);
			
    if(strlen(New_dp_file) >0)
    strcpy(l_ori_filepath,New_dp_file);
    if(strcmp(l_trans_type,p_trans_type)==0 && strcmp(previous_file_name,l_ori_filepath)==0)
     {
		Alert("skipping creation ");
		++line_no;
     }
    else
	 {
		 
		INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha_1  =NULL;

		l_intl_rept_struct_ha_1   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha_1);
		
		Alert("DEBUG -new file creation");
	
		strcpy(chr_l_inifile_2,getenv("INTL_ROOT_PATH"));
		strcat(chr_l_inifile_2,"intl_sun.cfg");
			
		if ((l_ptr_ini_file_2 = fopen(chr_l_inifile_2,"r")) == NULL)
		  {
						//CO_ProcMonitor(g_logfile,"Failed to Open Config. File",NULL,NULL);
						APL_GOBACK_FAIL
		  }
					
		if (CO_ReadToken(l_ptr_ini_file_2,"INTL_HF_PATH",chr_l_handoff_dir_new,l_debug_info_ptr) != APL_SUCCESS)
		{
			return(APL_FAILURE);
		}
		CO_RtvSysDtTime(chr_l_sysdate_1,l_debug_info_ptr);
		++g_batchseq;
		Alert("chr_l_batchno_01[%s]",chr_l_batchno_01);
		Alert("chr_l_sysdate_1[%s]",chr_l_sysdate_1);
		strcpy(l_trans_type_new,p_trans_type);
		
		EXEC SQL SELECT DP_ID||'_'||to_Char(to_date(:chr_l_sysdate_1,'DD/MM/YYYY HH24:MI:SS'),'YYYYMMDDHH24MI')||'_'||trim(:l_trans_type_new)||LPAD(regexp_REPLACE(LTRIM(TRIM(BATCH_NO),'0'),'[a-zA-Z]',''),7,'0')INTO :l_batch_filename:i_batch_filename FROM dl_dpinstr_hdr , pro_sys_date 
		where BATCH_NO= LTRIM(TRIM(:chr_l_batchno_01),'0') ;
		Alert("DEBUG HDR sqlca.sqlcode[%d]",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
		
		
		
		
			if(sqlca.sqlcode == 1403)
					{			
							l_error_flg=1;
							Alert("No record found in header table [%s]",chr_l_batchno_01);
					}
	 if(l_error_flg==0)
	 {		 
		sprintf(l_ori_filepath_1,"%sTXN_UPLD_%s.csv",chr_l_handoff_dir_new,l_batch_filename);
		sprintf(l_ori_file_1,"TXN_UPLD_%s.csv",l_batch_filename);
		Alert("\n file name = |%s| \n",l_ori_file_1);
		Alert("\n file name = |%s| \n",l_ori_filepath_1);
		
		
		if ((l_ptr_new_file = fopen(l_ori_filepath_1,"w")) == NULL)
		   {
			   Alert("file creation is failed");
				return(APL_FAILURE);
		   }
		   
		   
			sprintf(chr_l_headerline,"BtchId,SndrId,BrnchId,CntrlSctiesDpstryPtcptRole,TxnTyp,LineNb,SeqNm,SrcCntrlSctiesDpstryPtcpt,SrcClntIdOrBnfclOwnrId,ISIN,Qty,BuySellInd,OthrDpstryPtcpt,CntrBnfclOwnrId,CntrCMBPId,Xchg,ClrMmbId,MktTpAndId,SctiesSttlmTxId,OthrMktTpAndId,OthrSctiesSttlmTxId,ExecDt,TrdRsnCd,PlgRsnCd,FrzRsnCd,DISTpInd,DISSrlNb,MstrPwrOfAttnyId,CustdlTxnFlg,UnqClntId,UnqClrMmbId,BrkrId,CtdnPtcptId,Sgmt,ClrSysId,UnqEXId,MkrOprId,ChckrOprtrId,VrfrOprtId,ReqRcvdDtFrBO,Rmks,MdOfPmt,PmtTxRefNb,PmtDt,Acct,BkNm,Brnch,EPAcct,AgrmtId,AllUnitsOrAmtInd,DRFNb,AuthntcnRefNb,EarlyPayInFlg,BlkInd,ClsrDt,PldgTp,Cnsdrtn,DrctPyotFlg,CuspaTxnFlg,CuspaNSDLClntId,CuspaNSDLDPId,DmsIndFlg,DrctPayInFlg,DISIssncDt,DISAlphaPart,DISBookltNb,DISBookltTp,DISCxlFlg,DISIssdToClntOrPwrOfAttnyHldr,DISSrlNbFr,DISSrlNbTo,ISTxTp,DISTxTp,NbOfSOA,NbOfRgs,RcrdTp,RcrdNb,FolioNb,CertNbFr,CertNbTo,DNRFr,DNRTo,DsptchDt,DsptchDocId,DsptchNm,DocRcvdDt,DocTp,NbOfInstrs,NbOfDISLeavs,OrgnlOrdrRefNb,LckInRsnCd,LckInAddtlInf,LckInXpryDt,IntlRefNb,TrfeeNm,PldgSubTp,FreeOrLckInFlg,LckInId,PldgReqFormNb,Val,PldgrIntlRef,PldgeeIntlRef,PldgIdr,MrgnPldgSeqNb,PartCntr,OthrDpstryFlg,FrzTp,FrzLvl,FrzInittdBy,FrzSubOptn,FrznFor,FrzActvtnTp,FrzActvtnDt,FrzXpryDt,FrzRsnDesc,FrzQtyTp,FrzInstrId,RmtFlg,RRFNb,MtlFndTp,MtlFndAmt,MtlFndInd,TxId,TtlNbOfTrfeeBnfclOwnrs,MltplQty,IsseFlg,FlgOfLooseSlip,AcctClsrFlg,ChanlInd,IrrvsblRsnCd1,IrrvsblRsnCd2,IrrvsblRsnCd3,IrrvsblRsnCd4,OthrDpstryClntCdOfFrstNmnee,OthrDpstryClntCdOfScndNmnee,OthrDpstryClntCdOfThrdNmnee,OthrDpstryFlgOfFrstNmnee,OthrDpstryFlgOfScndNmnee,OtherDpstryFlgOfThrdNmnee,OthrClntIdOfFrstNmnee,OthrClntIdOfScndNmnee,OthrClntIdOfThrdNmnee,OthrDpstryPtcptIdOfFrstNmnee,OthrDpstryPtcptIdOfScndNmnee,OthrDpstryPtcptIdOfThrdNmnee,PctgShrOfFrstNmnee,PctgShrOfScndNmnee,PctgShrOfThrdNmnee,Prty,RjctnRsnCd1,RjctnRsnCd2,RjctnRsnCd3,RjctnRsnCd4,SndrRefNb1,SndrRefNb2,StmpDtyInd,StsChngRsn,PANAndHldgPttrnMtcgh,WthtCnsdrtnFlg,TrnsmssnRsn,OthrDpstryClntCd,OthrDpstryId,TxUnqId,BuyPrTrd,MstSrcCntrlSctiesDpstryPtcpt,Rsn,CrtDnm,ConfAmt,DISISDTxTp,Rsvd1,Rsvd2,Rsvd3,Rsvd4");
			fprintf(l_ptr_new_file,"%s",chr_l_headerline);
            fprintf(l_ptr_new_file,"\n");
            fflush(l_ptr_new_file);
		strcpy(l_intl_rept_struct_ha_1->report_name, l_ori_file_1);
		strcpy(l_intl_rept_struct_ha_1->report_desc, APL_HOFF_FILE_DESC);
		strcpy(l_intl_rept_struct_ha_1->report_date, argv[2]);
		l_intl_rept_struct_ha_1->report_width = 100;
		strcpy(l_intl_rept_struct_ha_1->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha_1->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha_1->usr, argv[3]);
		if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha_1, l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		CMEMSET(l_trans_type);
		strcpy(l_trans_type,p_trans_type);
		strcpy(previous_file_name,l_ori_filepath);
		line_no=1;
		   
	   }
	 }	
		
	  
	  
 Alert("l_internal_ref_no[%s]",l_internal_ref_no);
 	EXEC SQL SELECT D.EX_ARENA,DOMESTIC_CPCLT INTO :l_off_mkt_1:i_off_mkt_1,:l_dom_cpclt:i_dom_cpclt 
                FROM DL_DEAL D,DL_DPINSTRS A
                WHERE A.batch_no = LTRIM(TRIM(:chr_l_batchno_01),'0')
		and A.INTERNAL_REF_NO =LTRIM(TRIM(:l_internal_ref_no),'0')
		and A.trans_type =DECODE(:l_trans_type,'926','CN5',:l_trans_type)
		and IDENTIY_NO = substr(DEAL_REF_NOS,1,instr(DEAL_REF_NOS,',') -1) 
		and D.client=A.CLIENT_CODE
		and D.DEAL_CD=A.DEAL_CD
		and D.INSTR_CODE=A.INSTR_CODE;
		IS_ANY_ORA_ERROR
		 
	if(sqlca.sqlcode == 1403)
					{			//For New Upload PMS case 
				            EXEC SQL SELECT DISTINCT D.EX_ARENA,DOMESTIC_CPCLT INTO :l_off_mkt_1:i_off_mkt_1,:l_dom_cpclt:i_dom_cpclt 
							FROM DL_DEAL D,DL_DPINSTRS A
							WHERE A.batch_no = LTRIM(TRIM(:chr_l_batchno_01),'0')
							and A.INTERNAL_REF_NO =LTRIM(TRIM(:l_internal_ref_no),'0')
							and A.trans_type =DECODE(:l_trans_type,'926','CN5',:l_trans_type)
							and IDENTIY_NO in ( select distinct identiy_no from dl_deal_temp_his H where batch_no in (
                                                select batch_no from dl_deal_temp_his where identiy_no=substr(DEAL_REF_NOS,1,instr(DEAL_REF_NOS,',') -1) ) 
												and H.CLN_CODE=A.CLIENT_CODE
												and H.DEAL_CD=A.DEAL_CD
												and H.instr_cd=A.INSTR_CODE
												)
							and D.client=A.CLIENT_CODE
							and D.DEAL_CD=A.DEAL_CD
							and D.INSTR_CODE=A.INSTR_CODE;
							
							IS_ANY_ORA_ERROR

		
				          if(sqlca.sqlcode == 1403)
					        {
							 l_error_flg=1;
							 Alert("No record found batch no [%s]",chr_l_batchno_01);
						    }
				   }
					
					
		EXEC SQL SELECT LTRIM(TRIM(:l_client_id),'0'),LTRIM(TRIM(:othr_dpid),'0'),LTRIM(TRIM(:l_counter_id),'0'),LTRIM(TRIM(:l_otr_cmbpid),'0'),LTRIM(TRIM(:l_internal_ref_no),'0'),LTRIM(TRIM(:chr_l_batchno_01),'0'),LPAD(regexp_REPLACE(LTRIM(TRIM(:chr_l_batchno_01),'0'),'[a-zA-Z]',''),8,'0') INTO :l_client_id:i_client_id,:othr_dpid:i_othr_dpid,:l_counter_id:i_counter_id,:l_otr_cmbpid:i_otr_cmbpid,:l_internal_ref_no:i_internal_ref_no,:chr_l_batchno_01:i_batchno_01,:chr_l_batchno_02:i_batchno_02
                FROM DUAL;
				
	
	IS_ANY_ORA_ERROR
Alert("Ex areana[%s],cpt[%s]",l_off_mkt_1,l_dom_cpclt);


	EXEC SQL SELECT 
	DEAL_REF_NOS,
	REASON_PURPOSE,
	MODE_OF_PAYMENT,
	CHEQUE_TRAN_REF_NO,
	PAYMENT_TRAN_DATE,
	TRANSFEREE_NAME,
	BANK_AC_NUMBER,
	BANK_NAME,
	BRANCH_NAME,
	TO_CHAR(STAMP_DUTY_PAY_IND),
	DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B'),
	A.SETTLEMENT_NO,
	CLH_DVP,
	CLIENT_CODE,
	OTHER_DP_ID,
	DEPO_IND,
	A.EXCH_CODE,
	ISIN_CD,
	TO_CHAR(A.QTY,'FM999999999999.000'),
	DECODE(:l_off_mkt_1,'2',
	DECODE(TRANSFER_REASON_CODE, '01' ,'OSP','03','MRS','04','TOA','12','FBB','13'	,'OOA','14'	,'RMF','15'	,'TRN','16'	,'MDC','17'	,'DRW','18'	,'CDR','19'	,'TBH','21'	,'TNH','23'	,'TPM','24'	,'MTC','25'	,'MRC','26'	,'DNS','27'	,'OSW','28'	,'DEL','29'	,'STE','30'	,'TCE','31'	,'TRC','88'	,'TMG','89'	,'TFM','90'	,'PDC','92'	,'GFT','93'	,'DON','94'	,'RSI','95'	,'ESO','96'	,'GRO','97'	,'ERT','10'	,'MII'),
	''),
	A.MKT_TYPE,
	B.DP_ID,
	C.CLN_EXCH_MAP_CODE, 
	DECODE(A.DEAL_CD,1,'SELL',2,'BUY',3,'SELL',4,'BUY'),
	DECODE(trans_type,'934',A.MKT_TYPE,'') ,
	DECODE(trans_type,'934',A.SETTLEMENT_NO,'') ,
	DECODE(A.EXCH_CODE,
	'NSE',DECODE(A.MKT_TYPE,'4','RLA','14','AUN','33','OFS','35','OS2','26','CB','27','CB','28','CB','49','T1N','50','TT1','23','SBL','24','ST','25','SLA','39','BYB','40','TKO','55','T0N'),
	'BSE',DECODE(A.MKT_TYPE,'4','RLA','25','OFS','27','OS2','21','I0','22','I1','23','I2','41','T1R','17','T1R','18','SBL','19','SLR','20','SLA','31','BYB','32','TKO') ),
	DECODE(A.trans_type,'934',D.CMBP_ID,''),
	DECODE(:l_trans_type,'904','',''),
	TO_CHAR(E.SYS_DATE, 'YYYY-MM-DD'),
	DECODE(:l_trans_type,'904','DFP','905','RFP','934','CMD','925','IDD','NCE','IDD','CN5','RFP','926','RFP','NC2','IDD','NC3','IDD'),
	DECODE( :l_off_mkt_1,'1','N','Y') OFF_MKT,
	DECODE(:l_off_mkt_1,'1',DECODE(A.MKT_TYPE,'44','FO','CM')) ,
	DECODE(:l_trans_type,
	'925','CANR',
	'NCE','CANR',
	'CN5','CANR',
	'NC2','CANR',
	'NC3','CANR',
	'926','CANR'),
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type,
	'1SC904',D.CLN_DEPO_MAP_CLIENT_ID,
	'1BC904',G.CLN_ID,
	'1BC905',D.CLN_DEPO_MAP_CLIENT_ID,
	'1SD904',:l_client_id,
	'2SD904',D.CLN_DEPO_MAP_CLIENT_ID,
	'2BD905',D.CLN_DEPO_MAP_CLIENT_ID,
	'2BD926',D.CLN_DEPO_MAP_CLIENT_ID,
	'1SD934',D.CLN_DEPO_MAP_CLIENT_ID,
	'1SC934',D.CLN_DEPO_MAP_CLIENT_ID,
	'1BC934',G.CLN_ID,
	:l_client_id) as Client_ID,
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type,
	'1SC904',G.DP_ID,
	'1BC904',D.CLN_DEPO_MAP_DP_ID,
	'1BC934',D.CLN_DEPO_MAP_DP_ID,
	'1BC905',G.DP_ID,
	'1SD904',:othr_dpid,
	'2SD904',I.CP_DP_ID,
	'2BD905',I.CP_DP_ID,
	'2BD926',I.CP_DP_ID,
	'1SD934',H.PTY_DEPO_MAP_DP_ID,
	'1SC934',G.DEPO_PART_CODE,
	'1SD934',H.PTY_DEPO_MAP_DP_ID,
	'1SC934',G.DP_ID,
	:othr_dpid) As Other_DP_id,
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type,
	'1SC904','',
	'1BC904',D.CLN_DEPO_MAP_CLIENT_ID,
	'1BC934','',
	'1BC905','',
	'1SD904',:l_counter_id,
	'2SD904',I.CP_CLIENT_ID,
	'2BD905',I.CP_CLIENT_ID,
	'2BD926',I.CP_CLIENT_ID,
	'1SD934','',
	'1SC934','',
	:l_counter_id) as counterBOID_or_Othclnid,
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type,
	'1SC904',G.CM_CC_ID,
	'1BC904','',
	'1BC934',D.CMBP_ID,
	'1BC905',G.CM_CC_ID,
	'1SD904',:l_otr_cmbpid,
	'2SD904','',
	'2BD905','',
	'2BD926','',
	'1SD934',H.CMBP_ID,
	'1SC934',G.CM_CC_ID,
	:l_otr_cmbpid) as CMDP_ID,
	DECODE(:l_trans_type,'904','CTR','905','CTR','934','CTR','925','CTR','NCE','CTR','CN5','CTR','NC2','CTR','NC3','CTR'),
	'EDS' as distype_ind,
	D.CMBP_ID ,
	DECODE(:l_trans_type,
	'925','IN000026',
	'NCE','IN000026',
	'CN5','IN000026',
	'NC2','IN000026',
	'NC3','IN000026',
	'926','IN000026')
		INTO 
		:l_deal_ref_no :i_deal_ref_no , 
		:l_reason_purpose :i_reason_purpose,
		:l_mode_of_payment :i_mode_of_payment,
		:l_check_tran_ref_no :i_check_tran_ref_no,
		:l_payment_tran_date :i_payment_tran_date,
		:l_ransferee_name :i_ransferee_name,
		:l_bank_ac_num :i_bank_ac_num,
		:l_bank_name :i_bank_name,
		:l_branch_name :i_branch_name,
		:l_stamp_duty_ind :i_stamp_duty_ind,
		:l_deal_cd :i_deal_cd,
		:l_settl_no :i_settl_no,
		:l_clh_flg :i_clh_flg,
		:l_client_cd :i_client_cd,
		:l_other_dpid :i_other_dpid,
		:l_depo_ind :i_depo_ind,
		:l_exch_code :i_exch_code,
		:l_isin_cd :i_isin_cd,
		:l_qty :i_qty,
		:l_trns_reasoncd :i_trns_reasoncd,
		:l_mkt_type:i_mkt_type,
		:l_header_dpid:i_header_dpid,
		:l_cp_code:i_cp_code,
		:l_buysell:i_buysell,
		:otr_mkt_type:i_otr_mkt_type,
		:l_settl_no1:i_settl_no1,
		:chr_l_mkt:i_l_mkt,
		:l_cmid_1:i_cmid_1,
		:l_instr_type:i_instr_type,
		:pro_sys_date:i_pro_sys_date,
		:chr_l_TxType:i_l_TxType,
		:l_off_mkt:i_off_mkt,
		:l_seg_code:i_seg_code,
		:l_consideration_flg:i_consideration_flg,
		:l_client_id:i_client_id,
		:othr_dpid:i_othr_dpid,
		:l_counter_id:i_counter_id,
		:l_otr_cmbpid:i_otr_cmbpid,
		:l_cust_trntype:i_cust_trntype,
		:l_distyp_ind:i_distyp_ind,
		:l_chr_cmbp_id:i_chr_cmbp_id,
		:l_OthrDpstryId:i_OthrDpstryId
		FROM DL_DPINSTRS A,dl_dpinstr_hdr B,mt_cli_exch_map C,mt_cli_depo_map D,PRO_SYS_DATE E,mt_exch_depo G ,MT_PTY_DEPO_MAP H,dl_single_prematch I 
		WHERE A.batch_no = :chr_l_batchno_01
		and INTERNAL_REF_NO =:l_internal_ref_no 
		and trans_type =DECODE(:l_trans_type,'926','CN5',:l_trans_type)
		and A.batch_no=B.batch_no
		and C.CLN_CODE(+) =A.CLIENT_CODE 
		and C.CLN_EXCH_CODE(+) =A.EXCH_CODE
		and D.CLN_CODE(+)=A.CLIENT_CODE
		and D.CLN_DEPO_CODE(+) =A.DEPO_IND
		and G.DEPO_PART_CODE(+)=A.OTHER_DP_ID
		and G.DEPO_CODE (+)=A.DEPO_IND
		and G.EXCH_CODE (+)= A.EXCH_CODE
		and H.PTY_CODE (+)=:l_dom_cpclt
		and H.DEPO_CODE(+)=A.DEPO_IND
		and H.EXCH_CODE(+) =A.EXCH_CODE
		and I.IDENTIY_NO(+)=substr(DEAL_REF_NOS,1,instr(DEAL_REF_NOS,',') -1)
		and I.DL_CLIENT (+) =A.CLIENT_CODE;
		Alert("DEBUG DP sqlca.sqlcode[%d]",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
		if(sqlca.sqlcode == 1403)
					{			
							l_error_flg=1;
							Alert("No record found batch no [%s]",chr_l_batchno_01);
					}

  
if (l_error_flg==0)
{	
   
	if(strcmp(l_off_mkt,"N")==0 && (strcmp(l_trans_type,"925")==0 || strcmp(l_trans_type,"NC2")==0 ||strcmp(l_trans_type,"NC3")==0 ||strcmp(l_trans_type,"CN5")==0 || strcmp(l_trans_type,"NCE")==0  ) &&  ((strcmp(l_deal_cd,"S")==0 &&  strcmp(l_clh_flg,"D")==0) || (strcmp(l_deal_cd,"B")==0 &&  strcmp(l_clh_flg,"C")==0) ) )
      strcpy(chr_l_TxType,"IDD");
	if(strcmp(l_off_mkt,"N")==0 && strcmp(l_trans_type,"912")==0 &&  strcmp(l_deal_cd,"S") ==0 && strcmp(l_clh_flg,"C")==0)
		 strcpy(chr_l_TxType,"IDO");
	if(strcmp(l_off_mkt,"Y")==0 && strcmp(l_trans_type,"905")==0 && (strcmp(l_deal_cd,"B") ==0 ))
		  strcpy(chr_l_TxType,"RFP");
	if(strcmp(l_trans_type,"934")==0 && strcmp(l_off_mkt,"N")==0 && strcmp(l_deal_cd,"S")==0 && strlen(l_cmid_1)>0 && (strcmp(l_clh_flg,"D")==0 || strcmp(l_clh_flg,"C")==0))
	       strcpy(chr_l_TxType,"CMD");
	if(strcmp(l_off_mkt,"Y")==0 && strcmp(l_trans_type,"904")==0 && (strcmp(l_deal_cd,"S") ==0 )) 
	       strcpy(chr_l_TxType,"DFP");
	if(strcmp(l_trans_type,"925")==0 || strcmp(l_trans_type,"NC2")==0 ||strcmp(l_trans_type,"NC3")==0 || strcmp(l_trans_type,"NCE")==0 ||strcmp(l_trans_type,"CN5")==0  )
		strcpy(othr_dpid,"");
	 if(strcmp(l_off_mkt,"N")==0 && strcmp(l_clh_flg,"C")==0 && (strcmp(l_deal_cd,"S")==0) && strcmp(l_trans_type,"904")==0)
			strcpy(l_early_payin,"YES");
	 if(strcmp(l_trans_type,"934")==0)
				strcpy(otr_mkt_type,chr_l_mkt);

	 if(strcmp(l_off_mkt,"N")==0 && strcmp(l_clh_flg,"C")==0 && (strcmp(l_deal_cd,"B")==0) && strcmp(l_trans_type,"904")==0)
	   {
		   Alert("int_num_2 [%d]",int_num_2);
			  if(int_num_2>6 && strlen(temp_2[5]) >0 && strlen(temp_2[6]) >0)	//specially for kotak .
			  {				  
				strcpy(chr_l_batchno_02,temp_2[5]);
				strcpy(l_internal_ref_no_temp,temp_2[6]);
				EXEC SQL SELECT LPAD(regexp_REPLACE(LTRIM(TRIM(:chr_l_batchno_02),'0'),'[a-zA-Z]',''),8,'0'),LTRIM(TRIM(:l_internal_ref_no_temp),'0') INTO :chr_l_batchno_02:i_batchno_02,:l_internal_ref_no:i_internal_ref_no FROM DUAL;
				IS_ANY_ORA_ERROR
			  }
	   }
	
	
strcpy(l_exch_code,"");
strcpy(l_deal_cd,"");
	     	  
 Alert("chr_l_batchno_01[%s]",chr_l_batchno_02);
 Alert("l_internal_ref_no[%s]",l_internal_ref_no);
 Alert("chr_l_TxType[%s]",chr_l_TxType);
 Alert("l_header_dpid[%s]",l_header_dpid);
 Alert("l_client_id[%s]",l_client_id);
 Alert("l_isin_cd[%s]",l_isin_cd);
 Alert("l_qty[%s]",l_qty);
 Alert("l_buysell[%s]",l_buysell);
 Alert("othr_dpid[%s]",othr_dpid);
 Alert("l_counter_id[%s]",l_counter_id);
 Alert("l_otr_cmbpid[%s]",l_otr_cmbpid);
 Alert("l_exch_code[%s]",l_exch_code);
 Alert("l_cmid[%s]",l_cmid);
 Alert("chr_l_mkt[%s]",chr_l_mkt);
 Alert("l_settl_no[%s]",l_settl_no);
 Alert("otr_mkt_type[%s]",otr_mkt_type);
 Alert("l_settl_no1[%s]",l_settl_no1);
 Alert("l_trns_reasoncd[%s]",l_trns_reasoncd);
 Alert("l_distyp_ind[%s]",l_distyp_ind);
 Alert("l_cp_code[%s]",l_cp_code);
 Alert("l_seg_code[%s]",l_seg_code);
 Alert("l_exch_code[%s]",l_exch_code);
 Alert("l_mode_of_payment[%s]",l_mode_of_payment);
 Alert("l_check_tran_ref_no[%s]",l_check_tran_ref_no);
 Alert("l_payment_tran_date[%s]",l_payment_tran_date);
 Alert("l_bank_ac_num[%s]",l_bank_ac_num);
 Alert("l_bank_name[%s]",l_bank_name);
 Alert("l_branch_name[%s]",l_branch_name);
 Alert("l_early_payin[%s]",l_early_payin);
 Alert("l_instr_type[%s]",l_instr_type);
 Alert("line_no[%d]",line_no);
 Alert("l_stamp_duty_ind[%s]",l_stamp_duty_ind);
 Alert("l_stamp_duty_ind[%s]",l_consideration_flg);
 Alert("l_stamp_duty_ind[%s]",l_reason_purpose);
 Alert("l_stamp_duty_ind[%s]",pro_sys_date);

    sprintf(chr_l_detail_rec_nsdl,"%s,,000000,DP,%s,%d,,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,,,%s,,,%s,,,,%s,%s,,%s,,,,,,%s,%s,%s,%s,%s,%s,,,,,,%s,,,,,,,,,,,,,,,,,,,%s,,,,,,,,,,,,,,,,,,,,,,%s,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HP,,,,,%s%d,%s%d,%s,,,%s,,,%s,,,,%s,,,,,,,",chr_l_batchno_02,chr_l_TxType,line_no,l_header_dpid,l_client_id,l_isin_cd,l_qty,l_deal_cd,othr_dpid,l_counter_id,l_otr_cmbpid,l_exch_code,l_cmid,chr_l_mkt,l_settl_no,otr_mkt_type,l_settl_no1,pro_sys_date,l_trns_reasoncd,l_distyp_ind,l_cust_trntype,l_cp_code,l_seg_code,l_exch_code,l_mode_of_payment,l_check_tran_ref_no,l_payment_tran_date,l_bank_ac_num,l_bank_name,l_branch_name,l_early_payin,l_instr_type,l_internal_ref_no,chr_l_batchno_02,line_no,chr_l_batchno_02,line_no,l_stamp_duty_ind,l_consideration_flg,l_OthrDpstryId,l_reason_purpose);		
	
   fprintf(l_ptr_new_file,"%s",chr_l_detail_rec_nsdl);
   fprintf(l_ptr_new_file,"\n");
   fflush(l_ptr_new_file);
   Alert("Record successfully added in file !!! ...");
}
else
{
	--line_no;
	Alert("record skipped for this batch no and  [%s] ,internal ref No [%s],type [%s]",chr_l_batchno_01,l_internal_ref_no,l_trans_type);
}
	APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
	    {
			Alert("Return with the success");
		
		return(APL_SUCCESS);
	    }
	   
 	  RETURN_FAILURE:
        {
	   printf("\n Error Inside New_format:ORA|%d|\n",sqlca.sqlcode);
	   return(APL_FAILURE);	
	    }
	
}

int New_format_905(char *New_dp_file,char *l_batch_no,char *p_trans_type,char *l_batch_no_904,char *l_client_detail,char **argv, DEBUG_INFO_STRUCT_H ** l_debug_info_ptr)
{
	
	Alert("DEBUG-1 New_format_905 [%s],[%s]",l_batch_no,p_trans_type);
	Alert("l_client_detail[%s]",l_client_detail);
	
	char chr_l_batchno_02[11] =APL_NULL_STRING;
	char chr_l_batchno_temp[11] =APL_NULL_STRING;
	char chr_l_batchno_final[11] =APL_NULL_STRING;
	char chr_l_batchno_01[11] =APL_NULL_STRING;
	static char l_trans_type_904 [4]=APL_NULL_STRING;
	char l_deal_ref_no [40001]=APL_NULL_STRING;
	char l_reason_purpose [23]=APL_NULL_STRING;
	char l_mode_of_payment [3]=APL_NULL_STRING;
	char l_check_tran_ref_no [26]=APL_NULL_STRING;
	char l_payment_tran_date [21]=APL_NULL_STRING;
	char l_ransferee_name [136]=APL_NULL_STRING;
	char l_bank_ac_num [31]=APL_NULL_STRING;
	char l_bank_name [36]=APL_NULL_STRING;
	char l_branch_name [101]=APL_NULL_STRING;
	char l_deal_cd [2]=APL_NULL_STRING;
	char l_settl_no [16]=APL_NULL_STRING;
	char l_clh_flg [2]=APL_NULL_STRING;
	char l_client_cd [11]=APL_NULL_STRING;
	char l_other_dpid [21]=APL_NULL_STRING;
	char l_depo_ind [5]=APL_NULL_STRING;
	char l_exch_code [4]=APL_NULL_STRING;
	char l_mkt_type [4]=APL_NULL_STRING;
	char l_off_mkt [3]=APL_NULL_STRING;
	char l_off_mkt_1 [3]=APL_NULL_STRING;
	char l_dom_cpclt [11]=APL_NULL_STRING;
	char l_client_id [21]=APL_NULL_STRING;
	char othr_dpid [21]=APL_NULL_STRING;
	char l_otr_cmbpid [29]=APL_NULL_STRING;
	char l_counter_id [21]=APL_NULL_STRING;
	char l_early_payin [4]=APL_NULL_STRING;
	char chr_l_mkt [5]=APL_NULL_STRING;
	char otr_mkt_type [4]=APL_NULL_STRING;
	char l_settl_no1 [16]=APL_NULL_STRING;
	char l_seg_code [3]=APL_NULL_STRING;
	char l_consideration_flg [5]=APL_NULL_STRING;
	char l_header_dpid [20]=APL_NULL_STRING;
	char l_isin_cd [13]=APL_NULL_STRING;
	char l_stamp_duty_ind[3]=APL_NULL_STRING;
	char  chr_l_detail_rec_nsdl[2000] =APL_NULL_STRING;
	char chr_l_TxType[5]=APL_NULL_STRING;
    char l_buysell[5]=APL_NULL_STRING;
	char l_trns_reasoncd[5]=APL_NULL_STRING;
	char l_qty[29] =APL_NULL_STRING;
	char l_ori_filepath[PATH_LENGTH]=APL_NULL_STRING;
    char l_ori_file[PATH_LENGTH]=APL_NULL_STRING;
	char l_cmid [10]=APL_NULL_STRING;
	char l_cmid_1[10]=APL_NULL_STRING;
	char l_distyp_ind[5] = APL_NULL_STRING;
	char l_cp_code [15] =  APL_NULL_STRING;
	char l_instr_type [6] = APL_NULL_STRING;
	//static char l_trans_type_904[10]=APL_NULL_STRING;
	static int line_no_904=0;
	char l_ori_filepath_1[PATH_LENGTH]=APL_NULL_STRING;
    char l_ori_file_1[PATH_LENGTH]=APL_NULL_STRING;
	static char previous_file_name_904[PATH_LENGTH] =APL_NULL_STRING;
	char **temp_2= NULL;
    int int_num_2=0;
    char l_add_detail[500]=APL_NULL_STRING;
	char l_internal_ref_no [300]=APL_NULL_STRING;
	char  pro_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	char chr_l_headerline[2500]=APL_NULL_STRING;
	int l_error_flg=0;
	char l_cust_trntype[4]=APL_NULL_STRING;
	char l_chr_cmbp_id [10]=APL_NULL_STRING;
	char l_OthrDpstryId[21]=APL_NULL_STRING;
	char  chr_l_handoff_dir_new[PATH_LENGTH]= APL_NULL_STRING;
	char l_batch_filename[100]=APL_NULL_STRING;
	char chr_l_sysdate_1[20] = APL_NULL_STRING;
    FILE *l_ptr_ini_file_2=NULL;
   char chr_l_inifile_2[PATH_LENGTH]= APL_NULL_STRING;
   char l_trans_type_new [5]=APL_NULL_STRING;
   char l_internal_ref_no_new [300]=APL_NULL_STRING;
   char l_internal_ref_no_temp [300]=APL_NULL_STRING;
	
	CMEMSET(chr_l_batchno_02);
	CMEMSET(chr_l_batchno_temp);
	CMEMSET(chr_l_batchno_final);
    CMEMSET(chr_l_batchno_01);
	CMEMSET(l_deal_ref_no);
	CMEMSET(l_reason_purpose);
	CMEMSET(l_mode_of_payment);
	CMEMSET(l_check_tran_ref_no);
	CMEMSET(l_payment_tran_date);
	CMEMSET(l_ransferee_name);
	CMEMSET(l_bank_ac_num);
	CMEMSET(l_bank_name);
	CMEMSET(l_branch_name);
	CMEMSET(l_deal_cd);
	CMEMSET(l_settl_no);
	CMEMSET(l_clh_flg);
	CMEMSET(l_client_cd);
	CMEMSET(l_other_dpid);
	CMEMSET(l_depo_ind);
	CMEMSET(l_exch_code);
	CMEMSET(l_mkt_type);
	CMEMSET(l_qty);
	CMEMSET(l_off_mkt);
	CMEMSET(l_off_mkt_1);
	CMEMSET(l_dom_cpclt);
	CMEMSET(chr_l_TxType);
	CMEMSET(l_client_id);
	CMEMSET(l_buysell);
	CMEMSET(othr_dpid);
	CMEMSET(l_otr_cmbpid);
	CMEMSET(l_counter_id);
	CMEMSET(l_early_payin);
	CMEMSET(chr_l_mkt);
	CMEMSET(otr_mkt_type);
	CMEMSET(l_settl_no1);
	CMEMSET(l_seg_code);
	CMEMSET(l_consideration_flg);
	CMEMSET(l_header_dpid);
	CMEMSET(l_isin_cd);
	CMEMSET(l_trns_reasoncd);
	CMEMSET(l_cmid);
	CMEMSET(l_distyp_ind);
	CMEMSET(l_cp_code);
	CMEMSET(l_instr_type);
	CMEMSET(l_ori_filepath);
	CMEMSET(l_ori_file);
	CMEMSET(l_ori_filepath_1);
	CMEMSET(l_ori_file_1);
	CMEMSET(l_add_detail);
	CMEMSET(l_internal_ref_no);
	CMEMSET(pro_sys_date);
	CMEMSET(l_cmid_1);
	CMEMSET(chr_l_headerline);
	CMEMSET(l_cust_trntype);
	CMEMSET(l_chr_cmbp_id);
	CMEMSET(l_OthrDpstryId);
	CMEMSET(chr_l_handoff_dir_new);
	CMEMSET(l_batch_filename);
	CMEMSET(chr_l_sysdate_1);
	CMEMSET(chr_l_inifile_2);
	CMEMSET(l_trans_type_new);
	CMEMSET(l_internal_ref_no_temp);
	CMEMSET(l_internal_ref_no_new);
	
	short i_deal_ref_no=0;
	short i_reason_purpose=0;
	short i_mode_of_payment=0;
	short i_check_tran_ref_no=0;
	short i_payment_tran_date=0;
	short i_ransferee_name=0;
	short i_bank_ac_num=0;
	short i_bank_name=0;
	short i_branch_name=0;
	short i_stamp_duty_ind=0;
	short i_deal_cd=0;
	short i_settl_no=0;
	short i_clh_flg=0;
	short i_client_cd=0;
	short i_other_dpid=0;
	short i_depo_ind=0;
	short i_exch_code=0;
	short i_mkt_type=0;
	short i_isin_cd =0;
	short i_client_id =0;
	short i_othr_dpid =0;
	short i_otr_cmbpid =0;
	short i_counter_id =0;
	short i_l_mkt =0;
	short i_qty =0;
	short i_header_dpid=0;
	short i_trns_reasoncd=0;
	short i_off_mkt=0;
	short i_off_mkt_1=0;
	short i_dom_cpclt=0;
    short i_cp_code=0;
	short i_buysell=0;
	short i_otr_mkt_type=0;
	short i_settl_no1=0;
	short i_consideration_flg=0;
	short i_cmid=0;
    short i_internal_ref_no=0;
    short i_seg_code=0;	
	short i_pro_sys_date=0;
	short i_instr_type=0;
	short i_cmid_1=0;
	short i_l_TxType;
	short i_cust_trntype=0;
    short i_batchno_01=0;
	short i_distyp_ind=0;	
	short i_batchno_02=0;
	short i_batchno_final=0;
	short i_chr_cmbp_id=0;
	short i_OthrDpstryId=0;
	short i_batch_filename=0;
	short i_internal_ref_no_new=0;
	
	    strcpy(l_add_detail,l_client_detail);
		if (APL_SUCCESS != CO_SplitStr(l_add_detail ,
					'|',
					&int_num_2,
					&temp_2 ))
	        {
		   Alert("Returns Unsuccessfully from CO_SplitStr\n");
		   APL_GOBACK_FAIL
	        }
  
	 if(strlen(temp_2[0]) >0)
	   strcpy(l_client_id,temp_2[0]);
   if(strlen(temp_2[1]) >0)
	    strcpy(othr_dpid,temp_2[1]);
   if(strlen(temp_2[2]) >0)
	    strcpy(l_counter_id,temp_2[2]);
   if(strlen(temp_2[3]) >0)	 
        strcpy(l_otr_cmbpid,temp_2[3]);
   if(strlen(temp_2[4]) >0)	 
        strcpy(l_internal_ref_no,temp_2[4]);	
   if(strlen(l_batch_no)>0)
                strcpy(chr_l_batchno_01,l_batch_no);
			
    if(strlen(New_dp_file) >0)
    strcpy(l_ori_filepath,New_dp_file);
    if(strcmp(l_trans_type_904,p_trans_type)==0 && strcmp(previous_file_name_904,l_ori_filepath)==0)
     {
		Alert("skipping creation ");
		++line_no_904;
     }
    else
	 {
		 
		INTL_REPT_STRUCT_H            *l_intl_rept_struct_ha_1  =NULL;

		l_intl_rept_struct_ha_1   = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha_1);
		
		Alert("DEBUG -new file creation");
	
		strcpy(chr_l_inifile_2,getenv("INTL_ROOT_PATH"));
		strcat(chr_l_inifile_2,"intl_sun.cfg");
			
		if ((l_ptr_ini_file_2 = fopen(chr_l_inifile_2,"r")) == NULL)
		  {
						//CO_ProcMonitor(g_logfile,"Failed to Open Config. File",NULL,NULL);
						APL_GOBACK_FAIL
		  }
					
		if (CO_ReadToken(l_ptr_ini_file_2,"INTL_HF_PATH",chr_l_handoff_dir_new,l_debug_info_ptr) != APL_SUCCESS)
		{
			return(APL_FAILURE);
		}
		CO_RtvSysDtTime(chr_l_sysdate_1,l_debug_info_ptr);
		++g_batchseq;
		Alert("chr_l_batchno_01[%s]",chr_l_batchno_01);
		Alert("chr_l_sysdate_1[%s]",chr_l_sysdate_1);
		strcpy(l_trans_type_new,p_trans_type);

		EXEC SQL SELECT DP_ID||'_'||to_Char(to_date(:chr_l_sysdate_1,'DD/MM/YYYY HH24:MI:SS'),'YYYYMMDDHH24MI')||'_'||trim(:l_trans_type_new)||LPAD(regexp_REPLACE(LTRIM(TRIM(BATCH_NO),'0'),'[a-zA-Z]',''),7,'0') INTO :l_batch_filename:i_batch_filename FROM dl_dpinstr_hdr , pro_sys_date 
		where BATCH_NO= LTRIM(TRIM(:chr_l_batchno_01),'0') ;
		Alert("DEBUG HDR sqlca.sqlcode[%d]",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
			if(sqlca.sqlcode == 1403)
					{			
							l_error_flg=1;
							Alert("No record found in header table [%s]",chr_l_batchno_01);
					}
	 if(l_error_flg==0)
	 {		 
		sprintf(l_ori_filepath_1,"%sTXN_UPLD_%s.csv",chr_l_handoff_dir_new,l_batch_filename);
		sprintf(l_ori_file_1,"TXN_UPLD_%s.csv",l_batch_filename);
		Alert("\n file name = |%s| \n",l_ori_file_1);
		Alert("\n file name = |%s| \n",l_ori_filepath_1);
					
		if ((l_ptr_new_file_904 = fopen(l_ori_filepath_1,"w")) == NULL)
		   {
				return(APL_FAILURE);
		   }
			sprintf(chr_l_headerline,"BtchId,SndrId,BrnchId,CntrlSctiesDpstryPtcptRole,TxnTyp,LineNb,SeqNm,SrcCntrlSctiesDpstryPtcpt,SrcClntIdOrBnfclOwnrId,ISIN,Qty,BuySellInd,OthrDpstryPtcpt,CntrBnfclOwnrId,CntrCMBPId,Xchg,ClrMmbId,MktTpAndId,SctiesSttlmTxId,OthrMktTpAndId,OthrSctiesSttlmTxId,ExecDt,TrdRsnCd,PlgRsnCd,FrzRsnCd,DISTpInd,DISSrlNb,MstrPwrOfAttnyId,CustdlTxnFlg,UnqClntId,UnqClrMmbId,BrkrId,CtdnPtcptId,Sgmt,ClrSysId,UnqEXId,MkrOprId,ChckrOprtrId,VrfrOprtId,ReqRcvdDtFrBO,Rmks,MdOfPmt,PmtTxRefNb,PmtDt,Acct,BkNm,Brnch,EPAcct,AgrmtId,AllUnitsOrAmtInd,DRFNb,AuthntcnRefNb,EarlyPayInFlg,BlkInd,ClsrDt,PldgTp,Cnsdrtn,DrctPyotFlg,CuspaTxnFlg,CuspaNSDLClntId,CuspaNSDLDPId,DmsIndFlg,DrctPayInFlg,DISIssncDt,DISAlphaPart,DISBookltNb,DISBookltTp,DISCxlFlg,DISIssdToClntOrPwrOfAttnyHldr,DISSrlNbFr,DISSrlNbTo,ISTxTp,DISTxTp,NbOfSOA,NbOfRgs,RcrdTp,RcrdNb,FolioNb,CertNbFr,CertNbTo,DNRFr,DNRTo,DsptchDt,DsptchDocId,DsptchNm,DocRcvdDt,DocTp,NbOfInstrs,NbOfDISLeavs,OrgnlOrdrRefNb,LckInRsnCd,LckInAddtlInf,LckInXpryDt,IntlRefNb,TrfeeNm,PldgSubTp,FreeOrLckInFlg,LckInId,PldgReqFormNb,Val,PldgrIntlRef,PldgeeIntlRef,PldgIdr,MrgnPldgSeqNb,PartCntr,OthrDpstryFlg,FrzTp,FrzLvl,FrzInittdBy,FrzSubOptn,FrznFor,FrzActvtnTp,FrzActvtnDt,FrzXpryDt,FrzRsnDesc,FrzQtyTp,FrzInstrId,RmtFlg,RRFNb,MtlFndTp,MtlFndAmt,MtlFndInd,TxId,TtlNbOfTrfeeBnfclOwnrs,MltplQty,IsseFlg,FlgOfLooseSlip,AcctClsrFlg,ChanlInd,IrrvsblRsnCd1,IrrvsblRsnCd2,IrrvsblRsnCd3,IrrvsblRsnCd4,OthrDpstryClntCdOfFrstNmnee,OthrDpstryClntCdOfScndNmnee,OthrDpstryClntCdOfThrdNmnee,OthrDpstryFlgOfFrstNmnee,OthrDpstryFlgOfScndNmnee,OtherDpstryFlgOfThrdNmnee,OthrClntIdOfFrstNmnee,OthrClntIdOfScndNmnee,OthrClntIdOfThrdNmnee,OthrDpstryPtcptIdOfFrstNmnee,OthrDpstryPtcptIdOfScndNmnee,OthrDpstryPtcptIdOfThrdNmnee,PctgShrOfFrstNmnee,PctgShrOfScndNmnee,PctgShrOfThrdNmnee,Prty,RjctnRsnCd1,RjctnRsnCd2,RjctnRsnCd3,RjctnRsnCd4,SndrRefNb1,SndrRefNb2,StmpDtyInd,StsChngRsn,PANAndHldgPttrnMtcgh,WthtCnsdrtnFlg,TrnsmssnRsn,OthrDpstryClntCd,OthrDpstryId,TxUnqId,BuyPrTrd,MstSrcCntrlSctiesDpstryPtcpt,Rsn,CrtDnm,ConfAmt,DISISDTxTp,Rsvd1,Rsvd2,Rsvd3,Rsvd4");
			fprintf(l_ptr_new_file_904,"%s",chr_l_headerline);
            fprintf(l_ptr_new_file_904,"\n");
            fflush(l_ptr_new_file_904);
		strcpy(l_intl_rept_struct_ha_1->report_name, l_ori_file_1);
		strcpy(l_intl_rept_struct_ha_1->report_desc, APL_HOFF_FILE_DESC);
		strcpy(l_intl_rept_struct_ha_1->report_date, argv[2]);
		l_intl_rept_struct_ha_1->report_width = 100;
		strcpy(l_intl_rept_struct_ha_1->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha_1->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha_1->usr, argv[3]);
		if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha_1, l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		CMEMSET(l_trans_type_904);
		strcpy(l_trans_type_904,p_trans_type);
		strcpy(previous_file_name_904,l_ori_filepath);
		line_no_904=1;
        }
	 }	
		
	  
	  
 Alert("l_internal_ref_no[%s]",l_internal_ref_no);
 	
	EXEC SQL SELECT D.EX_ARENA,DOMESTIC_CPCLT INTO :l_off_mkt_1:i_off_mkt_1,:l_dom_cpclt:i_dom_cpclt 
                FROM DL_DEAL D,DL_DPINSTRS A
                WHERE A.batch_no = LTRIM(TRIM(:chr_l_batchno_01),'0')
		and A.INTERNAL_REF_NO =LTRIM(TRIM(:l_internal_ref_no),'0')
		and A.trans_type ='905' 
		and IDENTIY_NO = substr(DEAL_REF_NOS,1,instr(DEAL_REF_NOS,',') -1) 
		and D.client=A.CLIENT_CODE
		and D.DEAL_CD=A.DEAL_CD
		and D.INSTR_CODE=A.INSTR_CODE;
		IS_ANY_ORA_ERROR
		 
	if(sqlca.sqlcode == 1403)
					{			//For New Upload PMS case 
				            EXEC SQL SELECT DISTINCT D.EX_ARENA,DOMESTIC_CPCLT INTO :l_off_mkt_1:i_off_mkt_1,:l_dom_cpclt:i_dom_cpclt 
							FROM DL_DEAL D,DL_DPINSTRS A
							WHERE A.batch_no = LTRIM(TRIM(:chr_l_batchno_01),'0')
							and A.INTERNAL_REF_NO =LTRIM(TRIM(:l_internal_ref_no),'0')
							and A.trans_type ='905' 
							and IDENTIY_NO in ( select distinct identiy_no from dl_deal_temp_his H where batch_no in (
                                                select batch_no from dl_deal_temp_his where identiy_no=substr(DEAL_REF_NOS,1,instr(DEAL_REF_NOS,',') -1) ) 
												and H.CLN_CODE=A.CLIENT_CODE
												and H.DEAL_CD=A.DEAL_CD
												and H.instr_cd=A.INSTR_CODE
												)
							and D.client=A.CLIENT_CODE
							and D.DEAL_CD=A.DEAL_CD
							and D.INSTR_CODE=A.INSTR_CODE;
							
							IS_ANY_ORA_ERROR

		
				          if(sqlca.sqlcode == 1403)
					        {
							 l_error_flg=1;
							 Alert("No record found batch no [%s]",chr_l_batchno_01);
						    }
				   }
					
					
		EXEC SQL SELECT LTRIM(TRIM(:l_client_id),'0'),LTRIM(TRIM(:othr_dpid),'0'),LTRIM(TRIM(:l_counter_id),'0'),LTRIM(TRIM(:l_otr_cmbpid),'0'),LTRIM(TRIM(:l_internal_ref_no),'0'),LTRIM(TRIM(:chr_l_batchno_01),'0'),LPAD(regexp_REPLACE(LTRIM(TRIM(:chr_l_batchno_01),'0'),'[a-zA-Z]',''),8,'0') INTO :l_client_id:i_client_id,:othr_dpid:i_othr_dpid,:l_counter_id:i_counter_id,:l_otr_cmbpid:i_otr_cmbpid,:l_internal_ref_no:i_internal_ref_no,:chr_l_batchno_01:i_batchno_01,:chr_l_batchno_02:i_batchno_02
                FROM DUAL;
	IS_ANY_ORA_ERROR
	
	Alert("Ex areana[%s],cpt[%s]",l_off_mkt_1,l_dom_cpclt);
	
	EXEC SQL SELECT 
	DEAL_REF_NOS,
	REASON_PURPOSE,
	MODE_OF_PAYMENT,
	CHEQUE_TRAN_REF_NO,
	PAYMENT_TRAN_DATE,
	TRANSFEREE_NAME,
	BANK_AC_NUMBER,
	BANK_NAME,
	BRANCH_NAME,
	TO_CHAR(STAMP_DUTY_PAY_IND),
	DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B'),
	A.SETTLEMENT_NO,
	CLH_DVP,
	CLIENT_CODE,
	OTHER_DP_ID,
	DEPO_IND,
	A.EXCH_CODE,
	ISIN_CD,
	TO_CHAR(A.QTY,'FM999999999999.000'),
	DECODE(:l_off_mkt_1,'2',
	DECODE(TRANSFER_REASON_CODE, '01' ,'OSP','03','MRS','04','TOA','12','FBB','13'	,'OOA','14'	,'RMF','15'	,'TRN','16'	,'MDC','17'	,'DRW','18'	,'CDR','19'	,'TBH','21'	,'TNH','23'	,'TPM','24'	,'MTC','25'	,'MRC','26'	,'DNS','27'	,'OSW','28'	,'DEL','29'	,'STE','30'	,'TCE','31'	,'TRC','88'	,'TMG','89'	,'TFM','90'	,'PDC','92'	,'GFT','93'	,'DON','94'	,'RSI','95'	,'ESO','96'	,'GRO','97'	,'ERT','10'	,'MII'),
	''),
	A.MKT_TYPE,
	B.DP_ID,
	C.CLN_EXCH_MAP_CODE, 
	DECODE(A.DEAL_CD,1,'SELL',2,'BUY',3,'SELL',4,'BUY'),
	DECODE(trans_type,'934',A.MKT_TYPE,'') ,
	DECODE(trans_type,'934',A.SETTLEMENT_NO,'') ,
	DECODE(A.EXCH_CODE,
	'NSE',DECODE(A.MKT_TYPE,'4','RLA','14','AUN','33','OFS','35','OS2','26','CB','27','CB','28','CB','49','T1N','50','TT1','23','SBL','24','ST','25','SLA','39','BYB','40','TKO','55','T0N'),
	'BSE',DECODE(A.MKT_TYPE,'4','RLA','25','OFS','27','OS2','21','I0','22','I1','23','I2','41','T1R','17','T1R','18','SBL','19','SLR','20','SLA','31','BYB','32','TKO') ),
	DECODE(A.trans_type,'934',D.CMBP_ID,''),
	DECODE(:l_trans_type_904,'904','',''),
	TO_CHAR(E.SYS_DATE, 'YYYY-MM-DD'),
	DECODE(:l_trans_type_904,'904','DFP','905','RFP','934','CMD','925','IDD','NCE','IDD','CN5','RFP','926','RFP','NC2','IDD','NC3','IDD'),
	DECODE(:l_off_mkt_1,'1','N','Y') OFF_MKT,
	DECODE(:l_off_mkt_1,'1',DECODE(A.MKT_TYPE,'44','FO','CM')) ,
	DECODE(:l_trans_type_904,
	'925','CANR',
	'NCE','CANR',
	'CN5','CANR',
	'NC2','CANR',
	'NC3','CANR',
	'926','CANR'),
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type_904,
	'1SC904',D.CLN_DEPO_MAP_CLIENT_ID,
	'1BC904',G.CLN_ID,
	'1BC905',D.CLN_DEPO_MAP_CLIENT_ID,
	'1SD904',:l_client_id,
	'2SD904',D.CLN_DEPO_MAP_CLIENT_ID,
	'2BD905',D.CLN_DEPO_MAP_CLIENT_ID,
	'2BD926',D.CLN_DEPO_MAP_CLIENT_ID,
	'1SD934',D.CLN_DEPO_MAP_CLIENT_ID,
	'1SC934',D.CLN_DEPO_MAP_CLIENT_ID,
	'1BC934',G.CLN_ID,
	:l_client_id) as Client_ID,
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type_904,
	'1SC904',G.DP_ID,
	'1BC904',D.CLN_DEPO_MAP_DP_ID,
	'1BC934',D.CLN_DEPO_MAP_DP_ID,
	'1BC905',G.DP_ID,
	'1SD904',:othr_dpid,
	'2SD904',I.CP_DP_ID,
	'2BD905',I.CP_DP_ID,
	'2BD926','',
	'1SD934',H.PTY_DEPO_MAP_DP_ID,
	'1SC934',G.DEPO_PART_CODE,
	:othr_dpid) As Other_DP_id,
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type_904,
	'1SC904','',
	'1BC904',D.CLN_DEPO_MAP_CLIENT_ID,
	'1BC934','',
	'1BC905','',
	'1SD904',:l_counter_id,
	'2SD904',I.CP_CLIENT_ID,
	'2BD905',I.CP_CLIENT_ID,
	'2BD926',I.CP_CLIENT_ID,
	:l_counter_id) as counterBOID_or_Othclnid,
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type_904,
	'1SC904',G.CM_CC_ID,
	'1BC904','',
	'1BC934',D.CMBP_ID,
	'1BC905',G.CM_CC_ID,
	'1SD904',:l_otr_cmbpid,
	'2SD904','',
	'2BD905','',
	'2BD926','',
	'1SD934',H.CMBP_ID,
	'1SC934',G.CM_CC_ID,
	:l_otr_cmbpid) as CMDP_ID,
	DECODE(:l_trans_type_904,'904','CTR','905','CTR','934','CTR','925','CTR','NCE','CTR','CN5','CTR','NC2','CTR','NC3','CTR'),
	'EDS' as distype_ind,
	D.CMBP_ID ,
	DECODE(:l_off_mkt_1||DECODE(A.DEAL_CD,1,'S',2,'B',3,'S',4,'B')||nvl(CLH_DVP,'')||:l_trans_type_904,
	'925','IN000026',
	'NCE','IN000026',
	'CN5','IN000026',
	'NC2','IN000026',
	'NC3','IN000026',
	'926','IN000026')
		INTO 
		:l_deal_ref_no :i_deal_ref_no , 
		:l_reason_purpose :i_reason_purpose,
		:l_mode_of_payment :i_mode_of_payment,
		:l_check_tran_ref_no :i_check_tran_ref_no,
		:l_payment_tran_date :i_payment_tran_date,
		:l_ransferee_name :i_ransferee_name,
		:l_bank_ac_num :i_bank_ac_num,
		:l_bank_name :i_bank_name,
		:l_branch_name :i_branch_name,
		:l_stamp_duty_ind :i_stamp_duty_ind,
		:l_deal_cd :i_deal_cd,
		:l_settl_no :i_settl_no,
		:l_clh_flg :i_clh_flg,
		:l_client_cd :i_client_cd,
		:l_other_dpid :i_other_dpid,
		:l_depo_ind :i_depo_ind,
		:l_exch_code :i_exch_code,
		:l_isin_cd :i_isin_cd,
		:l_qty :i_qty,
		:l_trns_reasoncd :i_trns_reasoncd,
		:l_mkt_type:i_mkt_type,
		:l_header_dpid:i_header_dpid,
		:l_cp_code:i_cp_code,
		:l_buysell:i_buysell,
		:otr_mkt_type:i_otr_mkt_type,
		:l_settl_no1:i_settl_no1,
		:chr_l_mkt:i_l_mkt,
		:l_cmid_1:i_cmid_1,
		:l_instr_type:i_instr_type,
		:pro_sys_date:i_pro_sys_date,
		:chr_l_TxType:i_l_TxType,
		:l_off_mkt:i_off_mkt,
		:l_seg_code:i_seg_code,
		:l_consideration_flg:i_consideration_flg,
		:l_client_id:i_client_id,
		:othr_dpid:i_othr_dpid,
		:l_counter_id:i_counter_id,
		:l_otr_cmbpid:i_otr_cmbpid,
		:l_cust_trntype:i_cust_trntype,
		:l_distyp_ind:i_distyp_ind,
		:l_chr_cmbp_id:i_chr_cmbp_id,
		:l_OthrDpstryId:i_OthrDpstryId
		FROM DL_DPINSTRS A,dl_dpinstr_hdr B,mt_cli_exch_map C,mt_cli_depo_map D,PRO_SYS_DATE E,mt_exch_depo G ,MT_PTY_DEPO_MAP H,dl_single_prematch I 
		WHERE A.batch_no =LTRIM(TRIM(:chr_l_batchno_01),'0')
		and INTERNAL_REF_NO =LTRIM(TRIM(:l_internal_ref_no),'0')
		and trans_type ='905'
		and A.batch_no=B.batch_no
		and C.CLN_CODE(+) =A.CLIENT_CODE 
		and C.CLN_EXCH_CODE(+) =A.EXCH_CODE
		and D.CLN_CODE(+)=A.CLIENT_CODE
		and D.CLN_DEPO_CODE(+) =A.DEPO_IND
		and G.DEPO_PART_CODE(+)=A.OTHER_DP_ID
		and G.DEPO_CODE (+)=A.DEPO_IND
		and G.EXCH_CODE (+)= A.EXCH_CODE
		and H.PTY_CODE (+)=:l_dom_cpclt
		and H.DEPO_CODE(+)=A.DEPO_IND
		and H.EXCH_CODE(+) =A.EXCH_CODE
		and I.IDENTIY_NO(+)=substr(DEAL_REF_NOS,1,instr(DEAL_REF_NOS,',') -1)
		and I.DL_CLIENT (+) =A.CLIENT_CODE;
		
		Alert("DEBUG DP sqlca.sqlcode[%d]",sqlca.sqlcode);
		IS_ANY_ORA_ERROR
		if(sqlca.sqlcode == 1403)
					{			
							l_error_flg=1;
							Alert("No record found batch no [%s]",chr_l_batchno_01);
					}

if (l_error_flg==0)
{	
   
	if(strcmp(l_off_mkt,"N")==0 && (strcmp(l_trans_type_904,"925")==0 || strcmp(l_trans_type_904,"NC2")==0 ||strcmp(l_trans_type_904,"NC3")==0 || strcmp(l_trans_type_904,"NCE")==0 || strcmp(l_trans_type_904,"CN5")==0 ) &&  ((strcmp(l_deal_cd,"S")==0 &&  strcmp(l_clh_flg,"D")==0) || (strcmp(l_deal_cd,"B")==0 &&  strcmp(l_clh_flg,"C")==0) ) )
      strcpy(chr_l_TxType,"IDD");
	if(strcmp(l_off_mkt,"N")==0 && strcmp(l_trans_type_904,"912")==0 &&  strcmp(l_deal_cd,"S") ==0 && strcmp(l_clh_flg,"C")==0)
		 strcpy(chr_l_TxType,"IDO");
	if(strcmp(l_off_mkt,"Y")==0 && strcmp(l_trans_type_904,"905")==0 && (strcmp(l_deal_cd,"B") ==0 ))
		  strcpy(chr_l_TxType,"RFP");
	if(strcmp(l_trans_type_904,"934")==0 && strcmp(l_off_mkt,"N")==0 && strcmp(l_deal_cd,"S")==0 && strlen(l_cmid_1)>0 && (strcmp(l_clh_flg,"D")==0 || strcmp(l_clh_flg,"C")==0))
	       strcpy(chr_l_TxType,"CMD");
	if(strcmp(l_off_mkt,"Y")==0 && strcmp(l_trans_type_904,"904")==0 && (strcmp(l_deal_cd,"S") ==0 )) 
	       strcpy(chr_l_TxType,"DFP");
	 if(strcmp(l_trans_type_904,"925")==0 || strcmp(l_trans_type_904,"NC2")==0 ||strcmp(l_trans_type_904,"NC3")==0 || strcmp(l_trans_type_904,"NCE")==0 ||strcmp(l_trans_type_904,"CN5")==0  )
		strcpy(othr_dpid,"");
	 if(strcmp(l_off_mkt,"N")==0 && strcmp(l_clh_flg,"C")==0 && (strcmp(l_deal_cd,"S")==0) && strcmp(l_trans_type_904,"904")==0)
			strcpy(l_early_payin,"YES");
if(strcmp(l_trans_type_904,"934")==0)
				strcpy(otr_mkt_type,chr_l_mkt);
  Alert("int_num_2 [%d]",int_num_2);
     if(int_num_2>6 && strlen(temp_2[5]) >0 && strlen(temp_2[6]) >0)	 
	 {
		 
        strcpy(chr_l_batchno_temp,temp_2[5]);
		strcpy(l_internal_ref_no_temp,temp_2[6]);
	EXEC SQL SELECT LPAD(regexp_REPLACE(LTRIM(TRIM(:chr_l_batchno_temp),'0'),'[a-zA-Z]',''),8,'0'),LTRIM(TRIM(:l_internal_ref_no_temp),'0') INTO :chr_l_batchno_final:i_batchno_final,:l_internal_ref_no_new:i_internal_ref_no_new FROM DUAL;
	IS_ANY_ORA_ERROR
	 }
	   
strcpy(l_exch_code,"");
strcpy(l_deal_cd,"");
	     	  
 Alert("chr_l_batchno_01[%s]",chr_l_batchno_final);
 Alert("l_internal_ref_no_new[%s]",l_internal_ref_no_new);
 Alert("chr_l_TxType[%s]",chr_l_TxType);
 Alert("l_header_dpid[%s]",l_header_dpid);
 Alert("l_client_id[%s]",l_client_id);
 Alert("l_isin_cd[%s]",l_isin_cd);
 Alert("l_qty[%s]",l_qty);
 Alert("l_buysell[%s]",l_buysell);
 Alert("othr_dpid[%s]",othr_dpid);
 Alert("l_counter_id[%s]",l_counter_id);
 Alert("l_otr_cmbpid[%s]",l_otr_cmbpid);
 Alert("l_exch_code[%s]",l_exch_code);
 Alert("l_cmid[%s]",l_cmid);
 Alert("chr_l_mkt[%s]",chr_l_mkt);
 Alert("l_settl_no[%s]",l_settl_no);
 Alert("otr_mkt_type[%s]",otr_mkt_type);
 Alert("l_settl_no1[%s]",l_settl_no1);
 Alert("l_trns_reasoncd[%s]",l_trns_reasoncd);
 Alert("l_distyp_ind[%s]",l_distyp_ind);
 Alert("l_cp_code[%s]",l_cp_code);
 Alert("l_seg_code[%s]",l_seg_code);
 Alert("l_exch_code[%s]",l_exch_code);
 Alert("l_mode_of_payment[%s]",l_mode_of_payment);
 Alert("l_check_tran_ref_no[%s]",l_check_tran_ref_no);
 Alert("l_payment_tran_date[%s]",l_payment_tran_date);
 Alert("l_bank_ac_num[%s]",l_bank_ac_num);
 Alert("l_bank_name[%s]",l_bank_name);
 Alert("l_branch_name[%s]",l_branch_name);
 Alert("l_early_payin[%s]",l_early_payin);
 Alert("l_instr_type[%s]",l_instr_type);
 Alert("line_no_904[%d]",line_no_904);
 Alert("l_stamp_duty_ind[%s]",l_stamp_duty_ind);
 Alert("l_stamp_duty_ind[%s]",l_consideration_flg);
 Alert("l_stamp_duty_ind[%s]",l_reason_purpose);
 Alert("l_stamp_duty_ind[%s]",pro_sys_date);

    sprintf(chr_l_detail_rec_nsdl,"%s,,000000,DP,%s,%d,,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,,,%s,,,%s,,,,%s,%s,,%s,,,,,,%s,%s,%s,%s,%s,%s,,,,,,%s,,,,,,,,,,,,,,,,,,,%s,,,,,,,,,,,,,,,,,,,,,,%s,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HP,,,,,%s%d,%s%d,%s,,,%s,,,%s,,,,%s,,,,,,,",chr_l_batchno_final,chr_l_TxType,line_no_904,l_header_dpid,l_client_id,l_isin_cd,l_qty,l_deal_cd,othr_dpid,l_counter_id,l_otr_cmbpid,l_exch_code,l_cmid,chr_l_mkt,l_settl_no,otr_mkt_type,l_settl_no1,pro_sys_date,l_trns_reasoncd,l_distyp_ind,l_cust_trntype,l_cp_code,l_seg_code,l_exch_code,l_mode_of_payment,l_check_tran_ref_no,l_payment_tran_date,l_bank_ac_num,l_bank_name,l_branch_name,l_early_payin,l_instr_type,l_internal_ref_no_new,chr_l_batchno_final,line_no_904,chr_l_batchno_final,line_no_904,l_stamp_duty_ind,l_consideration_flg,l_OthrDpstryId,l_reason_purpose);		
	
   fprintf(l_ptr_new_file_904,"%s",chr_l_detail_rec_nsdl);
   fprintf(l_ptr_new_file_904,"\n");
   fflush(l_ptr_new_file_904);
   Alert("Record successfully added in file !!! ...");
}
else
{
	--line_no_904;
	Alert("record skipped for this batch no and  [%s] ,internal ref No [%s],type [905]",chr_l_batchno_final,l_internal_ref_no_new);
}
	APL_GOBACK_SUCCESS

	  RETURN_SUCCESS:
	    {
			Alert("Return with the success");
		
		return(APL_SUCCESS);
	    }
	   
 	  RETURN_FAILURE:
        {
	   printf("\n Error Inside New_format:ORA|%d|\n",sqlca.sqlcode);
	   return(APL_FAILURE);	
	    }
	
}




				/******* End Of File ********/
