/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Master Maintenance
 *
 * File Name           :      MT_DbProcRBIMonDet.pc
 *
 * Description         :      This file contains functions for updating
 *                            Master Details.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description       RFS No.
 * ---------   --------  ------------     -------------     ---------
 * 22/12/2005   1.0       Dnyanesh        New file          HDFCMT_014
 *
 *********************************************************************/


#include "CO_HostStructdef.h"
# define  NULLTERM(X)    X.arr[X.len] = '\0'

EXEC SQL INCLUDE SQLCA.H;




int MT_ModDBRBIMonDet(MT_RBIMONDET_STRUCT_H *p_mt_rbimondet_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
	/* Variable Declarations */
  MT_RBIMONDET_STRUCT_I *l_mt_rbimondet_struct_i;

  struct sqlca sqlca;

  char chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
  char chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
  char chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
  short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
  short p_i_access_stamp_compare;
  short p_i_status = 0;
  int int_error_flag = APL_SUCCESS;
  int int_l_rowexists = 0;
   char  *l_key_codes[2];
   char  *l_key_values[2];
   char  chr_l_table_name[50] = APL_NULL_STRING;
	  char  chr_l_field_val[40] = APL_NULL_STRING;

		int	int_retval = APL_SUCCESS;
#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	 APL_FUNCTION_ENTER(APL_OUT_FILE)

  l_mt_rbimondet_struct_i=(MT_RBIMONDET_STRUCT_I*)calloc(1,sizeof(MT_RBIMONDET_STRUCT_I));

  APL_MALLOC_FAIL(l_mt_rbimondet_struct_i)

  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;

 if (!strlen(p_mt_rbimondet_struct_h->h_instr_code)) l_mt_rbimondet_struct_i->i_instr_code =-1;
     else l_mt_rbimondet_struct_i->i_instr_code =0;
 if (!strlen(p_mt_rbimondet_struct_h->h_rbi_instr_code)) l_mt_rbimondet_struct_i->i_rbi_instr_code =-1; 
     else l_mt_rbimondet_struct_i->i_rbi_instr_code =0;
 if (!strlen(p_mt_rbimondet_struct_h->h_caution_flg)) l_mt_rbimondet_struct_i->i_caution_flg =-1; 
     else l_mt_rbimondet_struct_i->i_caution_flg =0;


	l_mt_rbimondet_struct_i->i_tpcapital =0;
	l_mt_rbimondet_struct_i->i_sng_fii_limit =0;
	l_mt_rbimondet_struct_i->i_ovr_fii_limit =0;
	l_mt_rbimondet_struct_i->i_sng_nriocb_limit =0;
	l_mt_rbimondet_struct_i->i_ovr_nriocb_limit =0;
	l_mt_rbimondet_struct_i->i_caution_fii =0;
	l_mt_rbimondet_struct_i->i_caution_nriocb =0;


 if (!strlen(p_mt_rbimondet_struct_h->h_maker)) l_mt_rbimondet_struct_i->i_maker =-1; 
     else l_mt_rbimondet_struct_i->i_maker =0;
 if (!strlen(p_mt_rbimondet_struct_h->h_maker_dt)) l_mt_rbimondet_struct_i->i_maker_dt =-1; 
     else l_mt_rbimondet_struct_i->i_maker_dt =0;
 if (!strlen(p_mt_rbimondet_struct_h->h_checker)) l_mt_rbimondet_struct_i->i_checker =-1; 
     else l_mt_rbimondet_struct_i->i_checker =0;
 if (!strlen(p_mt_rbimondet_struct_h->h_checker_dt)) l_mt_rbimondet_struct_i->i_checker_dt =-1; 
     else l_mt_rbimondet_struct_i->i_checker_dt =0;
 if (!strlen(p_mt_rbimondet_struct_h->h_access_stamp)) l_mt_rbimondet_struct_i->i_access_stamp =-1; 
     else l_mt_rbimondet_struct_i->i_access_stamp =0;
 if (!strlen(p_mt_rbimondet_struct_h->h_status)) l_mt_rbimondet_struct_i->i_status =-1;
        else l_mt_rbimondet_struct_i->i_status =0;

l_mt_rbimondet_struct_i->i_def_cln_type=0; // added by shyam for RBI MONITORY:: restrict for purchase

 if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}
	
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function MT_ModDBRBIMonDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

		strcpy(p_mt_rbimondet_struct_h->h_status,STATUS_UAUTH);
    l_mt_rbimondet_struct_i->i_status =0;
   	strcpy(p_mt_rbimondet_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_mt_rbimondet_struct_i->i_maker=0;
  	strcpy(p_mt_rbimondet_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_mt_rbimondet_struct_i->i_maker_dt=0;
		strcpy(p_mt_rbimondet_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_mt_rbimondet_struct_i->i_access_stamp =0;

		printf("shyam::h_def_cln_type<%s> ", p_mt_rbimondet_struct_h->h_def_cln_type);
	
		EXEC SQL INSERT INTO MT_RBI_MONITORY VALUES (:p_mt_rbimondet_struct_h:l_mt_rbimondet_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	}
	else
	{
    l_key_codes[0]="INSTR_CODE";
    l_key_codes[1]=APL_NULL_STRING;

    l_key_values[0]=p_mt_rbimondet_struct_h->h_instr_code;
    l_key_values[1] = APL_NULL_STRING;

	   strcpy(chr_l_table_name,"MT_RBI_MONITORY");

    int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "ACCESS_STAMP",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_acc_stamp_compare,chr_l_field_val);
    
		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "STATUS",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_status_compare,chr_l_field_val);
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
		strcpy(p_mt_rbimondet_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_rbimondet_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function MT_ModRBIMonDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

	   if (!strcmp(p_mt_rbimondet_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_mt_rbimondet_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_rbimondet_struct_i->i_access_stamp =0;
       strcpy(p_mt_rbimondet_struct_h->h_status,STATUS_UAUTH);
			l_mt_rbimondet_struct_i->i_status =0;
			
		EXEC SQL UPDATE MT_RBI_MONITORY SET 
            	MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					CHECKER =:p_mt_rbimondet_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_mt_rbimondet_struct_h->h_checker:p_i_checkerdt,
            	STATUS =:p_mt_rbimondet_struct_h->h_status:l_mt_rbimondet_struct_i->i_status,
					RBI_INSTR_CODE =:p_mt_rbimondet_struct_h->h_rbi_instr_code :l_mt_rbimondet_struct_i-> i_rbi_instr_code,
					TPCAPITAL =:p_mt_rbimondet_struct_h-> h_tpcapital :l_mt_rbimondet_struct_i-> i_tpcapital,
					SNG_FII_LIMIT =:p_mt_rbimondet_struct_h-> h_sng_fii_limit :l_mt_rbimondet_struct_i-> i_sng_fii_limit,
					OVR_FII_LIMIT =:p_mt_rbimondet_struct_h-> h_ovr_fii_limit :l_mt_rbimondet_struct_i-> i_ovr_fii_limit,
					SNG_NRIOCB_LIMIT =:p_mt_rbimondet_struct_h-> h_sng_nriocb_limit :l_mt_rbimondet_struct_i-> i_sng_nriocb_limit,
					OVR_NRIOCB_LIMIT =:p_mt_rbimondet_struct_h-> h_ovr_nriocb_limit :l_mt_rbimondet_struct_i-> i_ovr_nriocb_limit,
					CAUTION_FLG =:p_mt_rbimondet_struct_h-> h_caution_flg :l_mt_rbimondet_struct_i-> i_caution_flg,
					CAUTION_FII =:p_mt_rbimondet_struct_h-> h_caution_fii :l_mt_rbimondet_struct_i-> i_caution_fii,
					CAUTION_NRIOCB =:p_mt_rbimondet_struct_h-> h_caution_nriocb :l_mt_rbimondet_struct_i-> i_caution_nriocb,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
					DEF_CLN_TYPE =	:p_mt_rbimondet_struct_h->h_def_cln_type,
					FAR =:p_mt_rbimondet_struct_h->h_far :l_mt_rbimondet_struct_i-> i_far  /*T0 Enhancement */
	       	  	WHERE 
					INSTR_CODE =:p_mt_rbimondet_struct_h->h_instr_code; 
              
					IS_ANY_ORA_ERROR;	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered authorize of Function MT_ModDBRBIMonDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

		if (!strcmp(p_mt_rbimondet_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(strcmp(p_mt_rbimondet_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
	    		strcpy(p_mt_rbimondet_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_mt_rbimondet_struct_i->i_access_stamp =0;
   	    	strcpy(p_mt_rbimondet_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_mt_rbimondet_struct_i->i_checker=0;
  	    	strcpy(p_mt_rbimondet_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_mt_rbimondet_struct_i->i_checker_dt=0;
          strcpy(p_mt_rbimondet_struct_h->h_status,STATUS_AUTH);
	    		l_mt_rbimondet_struct_i->i_status =0;

	    		EXEC SQL UPDATE MT_RBI_MONITORY SET 
           	CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            	CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            	STATUS =:p_mt_rbimondet_struct_h->h_status:l_mt_rbimondet_struct_i->i_status
	       	  	WHERE 
					INSTR_CODE =:p_mt_rbimondet_struct_h->h_instr_code;

				IS_ANY_ORA_ERROR;	
			}
   	   else  
	    	{
	    		EXEC SQL DELETE MT_RBI_MONITORY 
	       	WHERE 
				INSTR_CODE =:p_mt_rbimondet_struct_h->h_instr_code;
          
			   IS_ANY_ORA_ERROR
	    	}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered reset of Function MT_ModDBRBIMonDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

		if (!strcmp(p_mt_rbimondet_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(!strcmp(p_mt_rbimondet_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
	    		strcpy(p_mt_rbimondet_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_mt_rbimondet_struct_i->i_access_stamp =0;
   	    	strcpy(p_mt_rbimondet_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_mt_rbimondet_struct_i->i_checker=0;
  	    	strcpy(p_mt_rbimondet_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_mt_rbimondet_struct_i->i_checker_dt=0;
          strcpy(p_mt_rbimondet_struct_h->h_status,STATUS_AUTH);
	    		l_mt_rbimondet_struct_i->i_status =0;

	    		EXEC SQL UPDATE MT_RBI_MONITORY SET 
           	CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            	CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            	STATUS =:p_mt_rbimondet_struct_h->h_status:l_mt_rbimondet_struct_i->i_status
	       	  	WHERE 
					INSTR_CODE =:p_mt_rbimondet_struct_h->h_instr_code;

				IS_ANY_ORA_ERROR;	
			}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
		strcpy(p_mt_rbimondet_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_mt_rbimondet_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered delete of Function MT_ModDBRBIMonDet\n",
													NULL,p_intl_envdatastruct_h);
 	}

	   if (!strcmp(p_mt_rbimondet_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_mt_rbimondet_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_rbimondet_struct_i->i_access_stamp =0;
       strcpy(p_mt_rbimondet_struct_h->h_status,STATUS_DEL_UAUTH);
			l_mt_rbimondet_struct_i->i_status =0;

			EXEC SQL UPDATE MT_RBI_MONITORY SET 
            	MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					CHECKER =:p_mt_rbimondet_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_mt_rbimondet_struct_h->h_checker:p_i_checkerdt,
            	STATUS =:p_mt_rbimondet_struct_h->h_status:l_mt_rbimondet_struct_i->i_status,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
	       	  	WHERE 
					INSTR_CODE =:p_mt_rbimondet_struct_h->h_instr_code;
              
					IS_ANY_ORA_ERROR;	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}


 if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
 APL_GOBACK_SUCCESS

 RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_mt_rbimondet_struct_i);
		return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_mt_rbimondet_struct_i);
		return(APL_FAILURE);
	}

}

