













 
#include "CR_Common.h"
#include "Intellect_Interface.h"
#include "IV_Control_A.h"
#include "MS_Swift.h"
#define S_FUNC_DESCRIPTION "ManMsgRep"
#define S_PAGE_LENGTH 30
#define S_MAN_DESC "Manual Message Report"
#define S_MAN_INP_DESC "Manual Msg Input Report"
#define S_MAN_AUT_DESC "Manual Msg Authorize Report"
EXEC SQL INCLUDE SQLCA.H;


static char chr_g_progname[41] = APL_NULL_STRING;
static char chr_g_key[41]= APL_NULL_STRING;
static char chr_g_startdate[APL_DATE_LEN]= APL_NULL_STRING;
static char chr_g_userid[APL_USERID_LEN]= APL_NULL_STRING;
	/* Added by kotubabu for Linux Migration -Start*/
    #ifdef OS_LINUX
    static FILE *chr_logfile = NULL;
    #else
    FILE *chr_logfile = APL_OUT_FILE;
    #endif
    /* Added by kotubabu for Linux Migration-End*/


int MS_Prnt_ManMsgRpt(int int_msgsrno,char **argv,char h_mode,INTL_ENV_DATA_STRUCT_H *p_intl_env_datastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

int MS_Prnt_ManMsgRpt(int int_msgsrno,char **argv,char h_mode,INTL_ENV_DATA_STRUCT_H *p_intl_env_datastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char h_dl_client[11];
	char chr_h_msg_type[2];
	int int_l_pageno;
	FILE *msgFile=NULL;
	char h_contactinfo[15];
	int int_l_srno_b=1;
	char chr_inifile[PATH_LENGTH];
	char chr_sesam_msg_data_dir[PATH_LENGTH];
	char chr_tempfilename[PATH_LENGTH];
	FILE *chr_finifile=NULL;
	char chr_tempbuff_a[101];
	short i_dl_client,i_msg_type,i_contactinfo;
	char chr_l_msgident[61];
	char chr_mmanualmsgno[7];
	char chr_mmanualmsgno1[7];
	char chr_mmanualmsgno_568[7];
	char chr_mmanualmsgno1_568[7];
	char *chr_l_str_func_desc;
	char chr_todaydate[APL_DATE_LEN];
	char chr_statinfo[60];
	char chr_citibankname[11];
	int_l_pageno=1;
 char l_temp_processing_status[51] = APL_NULL_STRING;

	EXEC SQL VAR chr_citibankname IS STRING;
	EXEC SQL VAR chr_g_progname IS STRING;
	EXEC SQL VAR chr_g_key IS STRING;
	EXEC SQL VAR chr_g_userid IS STRING;
	EXEC SQL VAR chr_g_startdate IS STRING;
	EXEC SQL VAR chr_statinfo IS STRING;
	EXEC SQL VAR h_dl_client IS STRING;
	EXEC SQL VAR chr_h_msg_type IS STRING;
	EXEC SQL VAR h_contactinfo IS STRING;
	EXEC SQL VAR chr_l_msgident IS STRING;
	EXEC SQL VAR chr_mmanualmsgno IS STRING;
	EXEC SQL VAR chr_mmanualmsgno1 IS STRING;
	EXEC SQL VAR chr_mmanualmsgno_568 IS STRING;
	EXEC SQL VAR chr_mmanualmsgno1_568 IS STRING;
	EXEC SQL VAR chr_tempfilename IS STRING;
	chr_l_str_func_desc=S_FUNC_DESCRIPTION;

	memset(chr_mmanualmsgno,APL_NULL_CHAR,7);
	memset(chr_mmanualmsgno1,APL_NULL_CHAR,7);
	memset(chr_mmanualmsgno_568,APL_NULL_CHAR,7);
	memset(chr_mmanualmsgno1_568,APL_NULL_CHAR,7);

	sprintf(chr_mmanualmsgno,"599MAN");
	sprintf(chr_mmanualmsgno1,"599");
	sprintf(chr_mmanualmsgno_568,"568MAN");
	sprintf(chr_mmanualmsgno1_568,"568");
	sprintf(chr_l_msgident,"%d",int_msgsrno);
	if(CO_RtvSysDt(chr_todaydate,l_debug_info_ptr)==APL_FAILURE)
		APL_GOBACK_FAIL
	chr_finifile=fopen(strcat(strcpy(chr_inifile,getenv("INTL_ROOT_PATH")),"/intl_sun.cfg"),"r");
	if(CO_ReadToken(chr_finifile,"INTL_MS_DATA_PATH",chr_sesam_msg_data_dir,l_debug_info_ptr)==APL_FAILURE)
		APL_GOBACK_FAIL
	fclose(chr_finifile);
	EXEC SQL SELECT INFO_FILE INTO :chr_tempfilename
		FROM MS_MSGENT
		WHERE SWIFT_MSG_SEQNO=:chr_l_msgident
		AND 	SWIFT_MSG_NO IN (:chr_mmanualmsgno,:chr_mmanualmsgno_568);
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING);
	chr_finifile=fopen(strcat(chr_sesam_msg_data_dir,chr_tempfilename),"r");
	EXEC SQL SELECT CUSTODY_CLT_CD INTO :chr_citibankname
		FROM MT_CORE_SYS_PARAMS;
	IS_ANY_ORA_ERROR
	EXEC SQL DECLARE msgCursor CURSOR FOR
		SELECT CLIENT,MESSAGE_CLASS,CONTACT_DETAILS
			FROM  MS_MSGLOG
				WHERE MESSAGE_IND=:chr_l_msgident
				AND	SWIFT_MSG_NO IN (:chr_mmanualmsgno1,:chr_mmanualmsgno1_568);

	IS_ANY_ORA_ERROR

	EXEC SQL OPEN msgCursor;
	IS_ANY_ORA_ERROR
	if(h_mode=='A') {
	if(CO_Rtv_RptFileName("MS",
							 S_MAN_AUT_DESC,
							100,
							p_intl_env_datastruct_h->processtion,
							argv,
							&msgFile,
							l_debug_info_ptr)==APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	} else {
	if(CO_Rtv_RptFileName("MM",
							 S_MAN_INP_DESC,
							100,
							p_intl_env_datastruct_h->processtion,
							argv,
							&msgFile,
							l_debug_info_ptr)==APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
	}
	if(h_mode=='A')
		fprintf(msgFile,"MANUAL MESSAGE AUTHORIZE\n");
	else 
		fprintf(msgFile,"MANUAL MESSAGE INPUT\n");
	fprintf(msgFile,"--------------------------------------------------------------------------------\n"); 
	while(fgets(chr_tempbuff_a,100,chr_finifile)!=NULL)
		fprintf(msgFile,"%s",chr_tempbuff_a);
	fclose(chr_finifile);
	fprintf(msgFile, "\f");
	if(h_mode=='A')
		fprintf(msgFile,"MANUAL MESSAGE AUTHORIZE\n");
	else 
		fprintf(msgFile,"MANUAL MESSAGE INPUT\n");
	fprintf(msgFile,"\n--------------------------------------------------------------------------------\n"); 
	fprintf(msgFile,"Date       : %.10s  %s		Page: %d\n",chr_todaydate,chr_citibankname,int_l_pageno);
	fprintf(msgFile,"Msg.Seq.No.: %d\n", int_msgsrno);
	fprintf(msgFile,"--------------------------------------------------------------------------------\n"); 
	fprintf(msgFile," %5s  %12s  %6s  %15s\n","Sr.#","Account","S/T/C","Address");
	fprintf(msgFile,"  ----       -------   -----          -------\n");
	while(1)
	{
		i_dl_client=i_msg_type=i_contactinfo=0;
		EXEC SQL FETCH msgCursor INTO :h_dl_client  :i_dl_client,
												:chr_h_msg_type :i_msg_type,
												:h_contactinfo  :i_contactinfo;
		IS_ANY_ORA_ERROR
		
		if(APL_ZERO_RESULT_SET)
		{
			break;
		}
		
		fprintf(msgFile," %5d  %12s",int_l_srno_b++,h_dl_client);
		if(h_mode=='A') 
		{
			fprintf(msgFile,"  %6s  %15s",chr_h_msg_type,h_contactinfo);
		}
		fprintf(msgFile,"\n");
		if(!((int_l_srno_b+6)%(S_PAGE_LENGTH)))
		{
			sprintf(chr_statinfo,"Processing record %d",int_l_srno_b);
			
			EXEC SQL UPDATE SYS_BATCHPROC
			SET STAT_DET=:chr_statinfo
			WHERE PROCESS_NAME=:chr_g_progname
			AND 	PROC_INIT=:chr_g_key
			AND   USR=:chr_g_userid
			AND 	STATUS='started'
			AND 	STARTDATE=:chr_g_startdate;
			IS_ANY_ORA_ERROR
			EXEC SQL COMMIT;
			IS_ANY_ORA_ERROR
			EXEC SQL SELECT PROCESSING_STATUS into :l_temp_processing_status
				FROM SYS_BATCHPROC
				WHERE PROCESS_NAME=:chr_g_progname
				AND 	PROC_INIT	  =:chr_g_key
				AND 	USR  =:chr_g_userid
				AND 	STATUS  ='started'
				AND 	STARTDATE=:chr_g_startdate
					FOR UPDATE OF STATUS,STAT_DET;
			IS_ANY_ORA_ERROR
			
		fprintf(msgFile, "\f");
		if(h_mode=='A')
			fprintf(msgFile,"MANUAL MESSAGE AUTHORIZE\n");
		else 
			fprintf(msgFile,"MANUAL MESSAGE INPUT\n");
		fprintf(msgFile,"--------------------------------------------------------------------------------\n"); 
		
		fprintf(msgFile,"Date       : %.10s  %s		Page: %d\n",chr_todaydate,chr_citibankname,++int_l_pageno);
		fprintf(msgFile,"Msg.Seq.No.: %d\n", int_msgsrno);
		fprintf(msgFile,"--------------------------------------------------------------------------------\n"); 
		fprintf(msgFile," %5s  %12s  %6s  %15s\n","Sr.#","Account","S/T/C","Address");
		fprintf(msgFile,"  ----       -------   -----          -------\n");
			}
			
	}
RETURN_SUCCESS:
{
	fclose(msgFile);
	EXEC SQL CLOSE msgCursor;
	return APL_SUCCESS;
}
RETURN_FAILURE:
{
	fclose(msgFile);
	EXEC SQL CLOSE msgCursor;
	return APL_FAILURE;
}
}

int main(int argc,char **argv)
{
	/* Added by kotubabu for Linux Migration -Start*/
   #ifdef OS_LINUX
     chr_logfile=APL_OUT_FILE;
   #endif
   /* Added by kotubabu for Linux Migration -END*/
	int int_msgsrno;
	INTL_ENV_DATA_STRUCT_H l_intl_environ_data_h;
	DEBUG_INFO_STRUCT_H *l_debuglist = NULL,**l_debug_info_ptr = NULL; 
	char chr_isauth;
	FILE *chr_inifile=NULL;
	char temp[PATH_LENGTH];
	char chr_db_id[APL_USERID_LEN];
	char chr_db_pwd[100];
	char chr_custody_id_b[APL_USERID_LEN];
 char l_temp_processing_status[51] = APL_NULL_STRING;

	EXEC SQL VAR chr_g_progname IS STRING;
	EXEC SQL VAR chr_g_key IS STRING;
	EXEC SQL VAR chr_g_startdate IS STRING;
	EXEC SQL VAR chr_db_id IS STRING;
	EXEC SQL VAR chr_db_pwd IS STRING;
	EXEC SQL VAR chr_custody_id_b IS STRING;
	EXEC SQL VAR chr_g_userid IS STRING;
	l_debug_info_ptr=&l_debuglist;
	chr_logfile=NULL;
	strcat(strcpy(temp,getenv("INTL_ROOT_PATH")),"/intl_sun.cfg");
	chr_inifile=fopen(temp,"r");
	strcpy(l_intl_environ_data_h.usr,argv[3]);
	strcpy(l_intl_environ_data_h.h_mode,argv[4]);
	strcpy(l_intl_environ_data_h.processtion,argv[5]);
	strcpy(l_intl_environ_data_h.auth_req,argv[6]);
	strcpy(l_intl_environ_data_h.subprocess,argv[7]);
	strcpy(l_intl_environ_data_h.h_process,argv[8]);
	strcpy(chr_g_progname,argv[0]);
	strcpy(chr_g_key,argv[1]);
	strcpy(chr_g_startdate,argv[2]);
	strcpy(chr_g_userid,argv[3]);
	APL_FETCH_DB_LOGIN_DETAILS(chr_inifile,chr_custody_id_b,chr_db_id,chr_db_pwd,APL_OUT_FILE,l_debug_info_ptr);
	fclose(chr_inifile);
	chr_inifile=NULL;
	EXEC SQL CONNECT :chr_db_id IDENTIFIED BY :chr_db_pwd;
	IS_ANY_ORA_ERROR

	if ( APL_FAILURE == CO_Rtv_RptFileName("4P", APL_LOGFILE_DESC, 100, 
					    argv[5], argv, &chr_logfile, 
					    l_debug_info_ptr) )
	{
		fprintf(APL_OUT_FILE,"Could not open chr_logfile\n");
		APL_GOBACK_FAIL
	}
	EXEC SQL COMMIT;
	EXEC SQL SELECT PROCESSING_STATUS into :l_temp_processing_status
		FROM SYS_BATCHPROC
		WHERE PROCESS_NAME=:chr_g_progname
		AND 	PROC_INIT	  =:chr_g_key
		AND 	USR  =:chr_g_userid
		AND 	STARTDATE=:chr_g_startdate
		AND 	STATUS	='started'
		FOR UPDATE OF STATUS,STAT_DET;
	IS_ANY_ORA_ERROR
	sscanf(argv[9]," %d | %c ",&int_msgsrno,&chr_isauth);
	if(MS_Prnt_ManMsgRpt(int_msgsrno,argv,chr_isauth,&l_intl_environ_data_h,l_debug_info_ptr)==APL_FAILURE)
		APL_GOBACK_FAIL
	RETURN_SUCCESS:
	{
		fclose(chr_inifile);
		CO_ProcMonitor(chr_logfile,"Leaving with success",l_debug_info_ptr,&l_intl_environ_data_h);
		fclose(chr_logfile);
		EXEC SQL UPDATE SYS_BATCHPROC
		SET STATUS='completed'
		WHERE PROCESS_NAME=:chr_g_progname
		AND 	PROC_INIT=:chr_g_key
		AND   USR=:chr_g_userid
		AND 	STATUS='started'
		AND 	STARTDATE=:chr_g_startdate;
		EXEC SQL COMMIT;
		exit(0);
	}
	RETURN_FAILURE:
	{
		CO_ProcMonitor(chr_logfile,"Leaving with failure",l_debug_info_ptr,&l_intl_environ_data_h);
		fclose(chr_logfile);
		fclose(chr_inifile);
		EXEC SQL ROLLBACK;
		exit(1);
	}
}
