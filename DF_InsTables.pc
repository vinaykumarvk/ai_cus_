





#include "stdio_64.h"
#include <stdlib.h>
#include <string.h>
#define DEALMS_LINK_SEQ_NAME   "CMSGLINK_SEQ"
#include "CR_Common.h"
#include "Intellect_Common.h"
#include "MS_Swift.h"
#include "Df_Fe.h"
#include "DL_Interface.h"

EXEC SQL INCLUDE SQLCA;
 

int InsCmsgLinkFn(char *p_str_client,char *p_str_refno,char *p_str_filename,char *p_str_msg_no,long p_lng_rpr_seqnum,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
//AIX Warning Removal
/*  DL_MSGLINK_STRUCT_H l_dl_msglink_struct_h = {APL_NULL_STRING, 0, APL_NULL_CHAR, 0, 0, 0, \
          APL_NULL_STRING, APL_NULL_STRING, APL_NULL_STRING}; AIX Warning Removal*/
  DL_MSGLINK_STRUCT_H l_dl_msglink_struct_h = {APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                                                   APL_NULL_STRING,APL_NULL_STRING, 0,0,APL_NULL_STRING,
                                                   APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING, APL_NULL_STRING,
                                                   APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING };
	DL_MSGLINK_STRUCT_I l_dl_msglink_struct_i={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}; 

	int			g_int_seq_num						=	0;
	FILE			*fp_SesamIni						=	(FILE *) NULL;
	FILE			*fp_msgfile 						=	(FILE *) NULL;
	char			l_str_msg_no[4]					=	APL_NULL_STRING;
	PRO_GSEQNUM_STRUCT_H	*l_progseqnum_struct_h			=	NULL;

	memset(&l_dl_msglink_struct_h, NULL, sizeof(DL_MSGLINK_STRUCT_H));


	if ( !strlen(p_str_client) )
	{
		APL_DATA_MISSING("Account", APL_NULL_STRING, APL_NULL_STRING)
		APL_GOBACK_FAIL
	}
   
	if ( !strlen(p_str_filename) )
	{ 
		APL_DATA_MISSING("Filename", APL_NULL_STRING, APL_NULL_STRING)
		APL_GOBACK_FAIL
	}

	if ( !strlen(p_str_refno) )
	{
		APL_DATA_MISSING("Reference no", APL_NULL_STRING, APL_NULL_STRING)
		APL_GOBACK_FAIL
	}
   
	APL_IF_DEBUG
	{
		printf("ACCOUNT is %s \n", p_str_client);
		printf("REF NO is %s \n",p_str_refno);
		printf("FILE  NAME is %s \n",p_str_filename);
	}

	strcpy(l_dl_msglink_struct_h.h_dl_client,p_str_client);
	strcpy(l_dl_msglink_struct_h.h_indentity_no,p_str_refno);

	l_progseqnum_struct_h = (PRO_GSEQNUM_STRUCT_H *)calloc(1,sizeof(PRO_GSEQNUM_STRUCT_H));
	APL_MALLOC_FAIL(l_progseqnum_struct_h);
	memset(l_progseqnum_struct_h,NULL,sizeof(PRO_GSEQNUM_STRUCT_H));
	strcpy(l_progseqnum_struct_h->sequencename ,DEALMS_LINK_SEQ_NAME);
	g_int_seq_num = CO_RtvNxtSeqNum(l_progseqnum_struct_h , l_debug_info_ptr);

	if (APL_FAILURE == g_int_seq_num)
	{
		printf("Failed To Get The Next Sequence Number For CMSGLINK\n");
		APL_GOBACK_FAIL
	}

	l_dl_msglink_struct_h.h_sequence_num=g_int_seq_num;
	if(strlen(p_str_filename) > 30)
	{
		strcpy(l_dl_msglink_struct_h.h_information,APL_NULL_STRING);
	}

	else
	{
     		strcpy(l_dl_msglink_struct_h.h_information,p_str_filename);
	} 
	strcpy(l_dl_msglink_struct_h.h_description,APL_NULL_STRING);
	strcpy(l_dl_msglink_struct_h.h_psetparty,APL_NULL_STRING);
	strcpy(l_dl_msglink_struct_h.h_place_cd,APL_NULL_STRING);

	  
	strncpy(l_str_msg_no,p_str_msg_no,3);
	l_str_msg_no[3] = '\0';
	strcpy(l_dl_msglink_struct_h.h_swift_msg_no,l_str_msg_no);

	if( (strcmp(l_str_msg_no,"540")==0) || (strcmp(l_str_msg_no,"541")==0) || (strcmp(l_str_msg_no,"542")==0) || (strcmp(l_str_msg_no,"543")==0))
	{
     		strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"I"); 
	}

	else 
	{
     		strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"X"); 
	}

	if (APL_FAILURE == CO_RtvMachDtTime(l_dl_msglink_struct_h.h_new_dt,l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL;
	}
     
	l_dl_msglink_struct_h.h_dlrep_sequencenum=p_lng_rpr_seqnum;
   
	if(APL_FAILURE==DL_Mod_DLLinkNew(&l_dl_msglink_struct_h,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL;
	}


	APL_GOBACK_SUCCESS
   
	RETURN_SUCCESS:
	APL_IF_DEBUG
		printf("\n Exiting Out Of InsCmsgLinkFn successfully \n");
	CO_ProcMonitor(APL_OUT_FILE, "\n Exiting Out Of InsCmsgLinkFn successfully \n",NULL, NULL);
	return(APL_SUCCESS);

	RETURN_FAILURE:
	APL_IF_DEBUG
		printf("\n Exiting Out Of InsCmsgLinkFn with errors \n");
	CO_ProcMonitor(APL_OUT_FILE, "\n Exiting Out Of InsCmsgLinkFn unsuccessfully \n",NULL, NULL);
	return(APL_FAILURE);
}



int InsComm_MsgRptFn(MESSAGE_STRUCT **p_msg_list,char *p_str_msg_name,char *p_str_fail_reason,char *p_str_msg_sts,char *p_str_filename,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{



	DF_COMMON_MSGRPT_STRUCT_H	*h_commmsgrept_struct			=	NULL;
	DF_COMMON_MSGRPT_STRUCT_I	i_commmsgrept_struct				={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	MESSAGE_STRUCT					**l_msg_list;
	DEBUG_INFO_STRUCT_H					**l_debuginfo;
	char								l_str_msg_sts[4]					=	APL_NULL_STRING;
	char								l_str_msg_name[7]					=	APL_NULL_STRING;
	char								l_str_msg_no[4]					=	APL_NULL_STRING;
	char								l_str_fail_reason[50]			=	APL_NULL_STRING;
	char								l_str_msg_refno[36]				=	APL_NULL_STRING;
	char								l_str_account[11]					=	APL_NULL_STRING;
	char								l_str_refno[17]					=	APL_NULL_STRING;
	char								l_str_swift[51]					=	APL_NULL_STRING;
	char								l_str_secode[9]					=	APL_NULL_STRING;
	char								l_str_isin[13]						=	APL_NULL_STRING;
	char								l_str_cntry_code[3]				=	APL_NULL_STRING;
	char								l_str_func_name[26]				=	APL_NULL_STRING;
	static	char					chr_l_str_filename[71]			=	APL_NULL_STRING;
	static	char					l_str_recvd_on[21]				=	APL_NULL_STRING;
	
	char								l_corp[21]							=	APL_NULL_STRING;
	char								chr_l_caid[21]						=	APL_NULL_STRING;
	char								chr_l_ce_type[3]					=	APL_NULL_STRING;
	char								l_caev[5]							=	APL_NULL_STRING;
	char								chr_l_msg_no[4]					=	APL_NULL_STRING;
	char        					l_str_clientcd[50]      		= APL_NULL_STRING;
	
	struct sqlca sqlca;

	h_commmsgrept_struct=(DF_COMMON_MSGRPT_STRUCT_H *)calloc(1,sizeof(DF_COMMON_MSGRPT_STRUCT_H));
	APL_MALLOC_FAIL(h_commmsgrept_struct);

	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR l_str_msg_name IS STRING;
	EXEC SQL VAR l_str_func_name IS STRING; 
	EXEC SQL VAR l_str_isin IS STRING; 
	EXEC SQL VAR l_str_secode IS STRING;
	EXEC SQL VAR l_str_swift IS STRING;
	EXEC SQL VAR h_commmsgrept_struct->h_rec_from_sent_to IS STRING;
	
	EXEC SQL VAR l_corp IS STRING;
   EXEC SQL VAR chr_l_caid IS STRING; 
   EXEC SQL VAR chr_l_ce_type IS STRING;
	EXEC SQL VAR l_caev IS STRING;
   EXEC SQL VAR chr_l_msg_no IS STRING;	
	EXEC SQL VAR l_str_clientcd IS STRING;	
	
	EXEC SQL END DECLARE SECTION;


	l_debuginfo = l_debug_info_ptr;
	l_msg_list = p_msg_list;
	strcpy(l_str_fail_reason,p_str_fail_reason);

	strcpy(l_str_msg_name,p_str_msg_name);
	/*
	strcpy(h_commmsgrept_struct->h_message_stat,p_str_msg_sts);
	*/
	strcpy(h_commmsgrept_struct->h_msgsts,p_str_msg_sts);
	
	APL_IF_DEBUG
		CO_ProcMonitor(APL_OUT_FILE, "\n Entered processtion InsComm_MsgRptFn \n", NULL, NULL );

	
	if ( !strlen(l_str_msg_name) )
   {
      APL_DATA_MISSING("Msg_no", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }

	if ( !strlen(p_str_filename) )
   {
      APL_DATA_MISSING("File_name", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }

	if ( !strlen(p_str_fail_reason) )
   {
      APL_DATA_MISSING("Failure_reason", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }


	if ( !strlen(p_str_msg_sts) )
   {
      APL_DATA_MISSING("msg_sts", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }

	if(strncmp(l_str_msg_name,"564",3) && strncmp(l_str_msg_name,"566",3))
	{
		EXEC SQL SELECT FUNCTION_NAME
		INTO :l_str_func_name
		FROM DFENVMAP
		WHERE FUNCTION_MODE = (SELECT DISTINCT FUNCTION_MODE
		FROM DFWRPMAP
		WHERE MSG_NAME = :l_str_msg_name);
	}
	else
	{
		
		if(!strcmp(l_str_msg_name,"564"))
			strcpy(l_str_func_name,"EVENT_MAINTENANCE");
		else if(!strcmp(l_str_msg_name,"564ENT"))
			{
			strcpy(l_str_func_name,"ENTITLEMENT_MAINTENANCE");
			}
		else if(!strncmp(l_str_msg_name,"566",3))
			strcpy(l_str_func_name,"PAYMENT_MAINTENANCE");
	}
		
	/*
	if ((!strcmp(l_str_msg_name,"564ENT")) || (!strcmp(l_str_msg_name,"566"))) 
	{
		APL_IF_DEBUG
			printf("Message Name here still is |%s|\n",l_str_msg_name);
	
   	if (I_GetVal(p_msg_list,":20C:",":CORP/",l_corp,"A","1")== APL_FAILURE)
      	APL_GOBACK_FAIL
   	else
      	{
      		EXEC SQL SELECT CORP_ID INTO :chr_l_caid
               		FROM CAIDMAP
               		WHERE CORP = :l_corp;
     
		 		IS_ANY_ORA_ERROR
      
				strcpy(h_commmsgrept_struct->h_corp_id,chr_l_caid);
      	}	
	}
	if ((!strcmp(l_str_msg_name,"564")) || (!strcmp(l_str_msg_name,"564ENT")) || (!strcmp(l_str_msg_name,"566")))
	{
		APL_IF_DEBUG
			printf("Message Name here still is |%s|\n",l_str_msg_name);

		if (I_GetVal(p_msg_list,":22F:",":CAEV/",l_caev,"A","1") == APL_FAILURE)
			{
				APL_GOBACK_FAIL
			}
		if ((!strcmp(l_str_msg_name,"564")) || (!strcmp(l_str_msg_name,"564ENT")))
			strcpy(chr_l_msg_no,"564");
		else if (!strcmp(l_str_msg_name,"566"))
			strcpy(chr_l_msg_no,"566");
	}
	EXEC SQL SELECT PROC_DATA_VAL INTO :chr_l_ce_type
            FROM DFCODEMAP
            WHERE H_CODE =   :l_caev
            AND   SWIFT_MSG_NO = :chr_l_msg_no;

   IS_ANY_ORA_ERROR */
	
	/*strcpy(h_commmsgrept_struct->h_evt_class,chr_l_ce_type);*/
	strcpy(h_commmsgrept_struct->h_event_type,APL_NULL_STRING);
	/*
	APL_IF_DEBUG
		printf("Message NAme === ||%s||\n",l_str_msg_name);
		printf("CORP == ||%s||\n",l_corp);
		printf("CE_TYP == ||%s||\n",chr_l_ce_type);
				
		
	if(sqlca.sqlcode==1403)
	{
		strcpy(h_commmsgrept_struct->h_msg_func,APL_NULL_STRING);
	}

	else
	{ 
		strcpy(h_commmsgrept_struct->h_msg_func,l_str_func_name);
	} */ /** CA won't be enabled now ****/

	strcpy(h_commmsgrept_struct->h_msg_func,l_str_func_name);
	APL_IF_DEBUG
		printf("h_commmsgrept_struct->h_msg_func = |%s|\n",h_commmsgrept_struct->h_msg_func);
		
	strncpy(l_str_msg_no,l_str_msg_name,3);
	l_str_msg_no[3]= APL_NULL_CHAR;

	strcpy(h_commmsgrept_struct->h_msg_no,l_str_msg_no);
	
	if((!strstr(l_str_msg_no, "53")) && (!strstr(l_str_msg_no, "51")))
	{
		
		if(I_GetVal(p_msg_list,":35B:","ISIN",l_str_isin,"B","1")== APL_FAILURE);
			/*APL_GOBACK_FAIL*/
		EXEC SQL SELECT INSTR_CODE 
		INTO :l_str_secode 
		FROM MT_INSTRUMENT WHERE INSTR_ISIN= :l_str_isin;
	}
	if(sqlca.sqlcode==1403)
	{
		strcpy(h_commmsgrept_struct->h_secode,APL_NULL_STRING);
	}
	else
	{
		strcpy(h_commmsgrept_struct->h_secode,l_str_secode);
	}
	
	
	if(strcmp(p_str_filename,chr_l_str_filename)==0)
	{
		strcpy(h_commmsgrept_struct->h_received_on,l_str_recvd_on);
	}
	else 
	{
		if (APL_FAILURE == CO_RtvSysDtTime(l_str_recvd_on,l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}
		strcpy(h_commmsgrept_struct->h_received_on,l_str_recvd_on);
	}


	strcpy(h_commmsgrept_struct->h_mis_info,APL_NULL_STRING);

	strcpy(h_commmsgrept_struct->h_file_name,p_str_filename);
	strcpy(chr_l_str_filename,p_str_filename);

	strcpy(h_commmsgrept_struct->h_failure_reason,l_str_fail_reason);
                
	strcpy(h_commmsgrept_struct->h_rep_flg,"N");


	if(GetDataFromHeader_Separator(l_msg_list,4,' ', 1, l_str_swift)== APL_FAILURE)
		APL_GOBACK_FAIL

	if((strcmp(l_str_msg_no,"540")==0) || (strcmp(l_str_msg_no,"541")==0) || (strcmp(l_str_msg_no,"542")==0) || (strcmp(l_str_msg_no,"543")==0)||(strcmp(l_str_msg_no,"515")==0))
	{
		EXEC SQL SELECT CLN_CODE INTO :h_commmsgrept_struct->h_rec_from_sent_to FROM MT_MSGADDRESS WHERE SWIFT_ADDR = :l_str_swift AND ROWNUM < 2;
		
		if(sqlca.sqlcode==1403)
		{
			strcpy(h_commmsgrept_struct->h_rec_from_sent_to,APL_NULL_STRING);
		}

	}
	/*
	else
	{
		EXEC SQL SELECT AGENTCODE INTO :h_commmsgrept_struct->h_rec_from_sent_to FROM CAGENT WHERE SWIFTADDR = :l_str_swift AND ROWNUM < 2;
		
		if(sqlca.sqlcode==1403)
                {
                        strcpy(h_commmsgrept_struct->h_rec_from_sent_to,APL_NULL_STRING);
                }
	}
	*/

	
	if(I_GetVal(l_msg_list,":20C:",":SEME/",l_str_msg_refno,"A","1") == APL_FAILURE);
		/*APL_GOBACK_FAIL*/
	l_msg_list = p_msg_list;
	strcpy(h_commmsgrept_struct->h_msg_refno,l_str_msg_refno);

	/*
	strcpy(h_commmsgrept_struct->h_msg_in_out_ind ,"X");
	*/
	strcpy(h_commmsgrept_struct->h_in_out ,"I");


	if((strcmp(l_str_msg_no,"540")==0) || (strcmp(l_str_msg_no, "541")==0)|| (strcmp(l_str_msg_no,"542")==0) || (strcmp(l_str_msg_no,"543")==0) || (strcmp(l_str_msg_no,"544")==0) || (strcmp(l_str_msg_no,"545")==0) || (strcmp(l_str_msg_no,"546")==0) || (strcmp(l_str_msg_no,"547")==0) || (strcmp(l_str_msg_no,"548")==0))

	{

		if(I_GetVal(l_msg_list,":97A:",":SAFE/",l_str_clientcd,"B","1") == APL_FAILURE);
		l_msg_list = p_msg_list;
		
		EXEC SQL SELECT CLN_CODE INTO :l_str_account from MT_CLI_EXCH_MAP where STATUS = 'AA' AND
			CLN_EXCH_MAP_CODE =:l_str_clientcd  and STATUS = 'AA' and rownum < 2 union select cln_code
			from mt_regdetails where cln_sebi_reg_no = :l_str_clientcd or cln_mapinid = :l_str_clientcd
			and rownum < 2;
		IS_ANY_ORA_ERROR
		strcpy(h_commmsgrept_struct->h_account,l_str_account);	
		
		/*
		if(strcmp(l_str_msg_no,"548")==0)
		{
			if(I_GetVal(l_msg_list,":97A:",":SAFE/",l_str_account,"B","1") == APL_FAILURE);
			l_msg_list = p_msg_list;
			strcpy(h_commmsgrept_struct->h_account,l_str_account);
		}

		else if(!strcmp(l_str_msg_no,"548")==0) 
		{
			if(I_GetVal(l_msg_list,":97A:",":SAFE/",l_str_account,"C","1") == APL_FAILURE);
			l_msg_list = p_msg_list;
			strcpy(h_commmsgrept_struct->h_account,l_str_account);
		}
		*/
	/*** Too many conditions .... we can use strncmp or message no like 540,541,542,543***/	
		if((strcmp(l_str_msg_name,"540N01")!=0) && (strcmp(l_str_msg_name, "541N01")!=0)&& (strcmp(l_str_msg_name,"542N0				1")!=0)	&& (strcmp(l_str_msg_name,"543N01")!=0) && (strcmp(l_str_msg_name,"540S01")!=0)
						&& (strcmp(l_str_msg_name,"541S01")!=0) && (strcmp(l_str_msg_name,"542S01")!=0)  
						&&  (strcmp(l_str_msg_name,"543S01")!=0) && (strcmp(l_str_msg_name,"540CS1")!=0)
						&& (strcmp(l_str_msg_name,"541CS1")!=0) && (strcmp(l_str_msg_name,"542CS1")!=0)
						&& (strcmp(l_str_msg_name,"543CS1")!=0 )
			)
		{
			if((strcmp(l_str_msg_no,"540")==0) || (strcmp(l_str_msg_no, "541")==0)|| (strcmp(l_str_msg_no,"542")==0) || (					strcmp(l_str_msg_no,"543")==0))
			{

				if(I_GetVal(l_msg_list,":20C:",":PREV/",l_str_refno,"A1","1,1") == APL_FAILURE);
					/*APL_GOBACK_FAIL*/
					l_msg_list = p_msg_list;
					strcpy(h_commmsgrept_struct->h_ref_no,l_str_refno);
			}

			else if ((strcmp(l_str_msg_no,"544")==0) || (strcmp(l_str_msg_no,"545")==0) || (strcmp(l_str_msg_no,"546")==0					) || (strcmp(l_str_msg_no,"547")==0) || (strcmp(l_str_msg_no,"548")==0))
			{
				if(I_GetVal(l_msg_list,":20C:",":RELA/",l_str_refno,"A1","1,1") == APL_FAILURE);
				/*	APL_GOBACK_FAIL*/
					l_msg_list = p_msg_list;
					strcpy(h_commmsgrept_struct->h_ref_no,l_str_refno);
			}

			strcpy(h_commmsgrept_struct->h_trd_ca ,"T");
			strcpy(h_commmsgrept_struct->h_event_type,APL_NULL_STRING);
			strcpy(h_commmsgrept_struct->h_ca_id,APL_NULL_STRING);

		}
		else
		{
			if(I_GetVal(l_msg_list,":20C:",":SEME/",l_str_refno,"A","1") == APL_FAILURE);
				/*APL_GOBACK_FAIL*/
				l_msg_list = p_msg_list;
				strncpy(h_commmsgrept_struct->h_ref_no,l_str_refno,16); /* In order to insert in DF_COMMON_MSGRPT table it's len should be 16 - By Chava */
			strcpy(h_commmsgrept_struct->h_trd_ca ,"T");
				printf("\n MSG REF NO IS [%s]\n",h_commmsgrept_struct->h_ref_no);
		}

	}
/*	APL_IF_DEBUG
	{
		printf("MSG NO IS %s\n",h_commmsgrept_struct->h_swift_msg_no);
		printf("ACCOUNT IS %s\n",h_commmsgrept_struct->h_dl_client);
		printf("REF NO IS %s\n",h_commmsgrept_struct->h_indentity_no);
		printf("FILE NAME IS %s\n",h_commmsgrept_struct->h_nameof_file);
		printf("FAIL REASON IS %s\n",h_commmsgrept_struct->h_failure_reason);
		printf("REP FLG IS %s\n",h_commmsgrept_struct->h_report_ind);
		printf("MIS INFO  IS %s\n",h_commmsgrept_struct->h_mis_info);
		printf("TRD CA IS %s\n",h_commmsgrept_struct->h_trd_ca);
		printf("EVENT TYPE IS %s\n",h_commmsgrept_struct->h_evt_class);
		printf("REC FROM IS %s\n",h_commmsgrept_struct->h_rec_from_sent_to);
		printf("MSG REF NO IS %s\n",h_commmsgrept_struct->h_msg_refno);
		printf("REC ON IS %s\n",h_commmsgrept_struct->h_received_on);
		printf("SECODE IS %s\n",h_commmsgrept_struct->h_securitycd);
		printf("IN OUT IS %s\n",h_commmsgrept_struct->h_msg_in_out_ind);
		printf("MSG FUNC IS %s\n",h_commmsgrept_struct->h_msg_func);
		printf("MSG STS IS %s\n",h_commmsgrept_struct->h_message_stat);
		printf("CA_ID IS  %s\n",h_commmsgrept_struct->h_corp_id);
	}*/
	EXEC SQL INSERT INTO DF_COMMON_MSGRPT VALUES(:h_commmsgrept_struct:i_commmsgrept_struct);
	IS_ANY_ORA_ERROR

	APL_GOBACK_SUCCESS

	RETURN_FAILURE:
	{
		APL_IF_DEBUG
			printf("\n Leaving processtion InsComm_MsgRptFn with errors \n");
		CO_ProcMonitor(APL_OUT_FILE, "\n Leaving processtion InsComm_MsgRptFn with errors \n",NULL,NULL);
		APL_FREE(h_commmsgrept_struct);
		return(APL_FAILURE);
	}

	RETURN_SUCCESS:
	{
		APL_IF_DEBUG
			printf("\n Leaving processtion InsComm_MsgRptFn successfully \n");
		CO_ProcMonitor(APL_OUT_FILE, "\n Leaving processtion InsComm_MsgRptFn successfully \n",NULL,NULL);
		APL_FREE(h_commmsgrept_struct);
		return(APL_SUCCESS);
	}
}







/*
int InsCmsgRepairFn(char *p_str_client,char *p_str_refno,char *p_str_paramstr,char *p_str_msg_name, long  p_lng_rpr_seqnum,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	CMSGREPAIR_STRUCT_H				*h_cmsgrepair_struct       = NULL;
	CMSGREPAIR_STRUCT_I				i_cmsgrepair_struct        = {0,0,0,0,0,0};
	char									l_str_account[11]				= APL_NULL_STRING;
	char									l_str_refno[17]				= APL_NULL_STRING;
	char									l_str_msg_no[4]				= APL_NULL_STRING;
	char									*l_str_msg_name				= p_str_msg_name;


	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR l_str_account IS STRING;
	EXEC SQL VAR l_str_refno IS STRING;
	EXEC SQL VAR h_cmsgrepair_struct->h_deal_status IS STRING;

	EXEC SQL END DECLARE SECTION;



	strncpy(l_str_msg_no,l_str_msg_name,3);
	l_str_msg_no[3] = '\0';



	h_cmsgrepair_struct = (CMSGREPAIR_STRUCT_H *)calloc(1,sizeof(CMSGREPAIR_STRUCT_H));
	APL_MALLOC_FAIL(h_cmsgrepair_struct);
	memset(h_cmsgrepair_struct,NULL,sizeof(CMSGREPAIR_STRUCT_H));

	APL_IF_DEBUG
		CO_ProcMonitor(APL_OUT_FILE, "\n Entered processtion CmsgRepairFn \n", NULL, NULL );

		
 

	if ( !strlen(p_str_client) )
   {
      APL_DATA_MISSING("Account", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }

	if ( !strlen(p_str_refno) )
   {
      APL_DATA_MISSING("Refno", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }

	if ( !strlen(p_str_paramstr) )
   {
      APL_DATA_MISSING("Param_str", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }

	if ( !strlen(p_str_msg_name) )
   {
      APL_DATA_MISSING("Msg_name", APL_NULL_STRING, APL_NULL_STRING)
      APL_GOBACK_FAIL
   }

	strcpy(l_str_account,p_str_client);
	strcpy(l_str_refno,p_str_refno);

	strcpy(h_cmsgrepair_struct->h_swift_msg_no,l_str_msg_no);
	strcpy(h_cmsgrepair_struct->h_dl_client,p_str_client);
	strcpy(h_cmsgrepair_struct->h_indentity_no,p_str_refno);
	strcpy(h_cmsgrepair_struct->chr_h_param_str,p_str_paramstr);
	h_cmsgrepair_struct->h_sequence_num= p_lng_rpr_seqnum;

	if((strcmp(l_str_msg_name,"540N01")==0) || (strcmp(l_str_msg_name,"541N01")==0) || (strcmp(l_str_msg_name,"542N01")==0) || (strcmp(l_str_msg_name,"543N01")==0))
		strcpy(h_cmsgrepair_struct->h_deal_status,"UU");
		
	else
	{
		EXEC SQL SELECT DEAL_STAT INTO :h_cmsgrepair_struct->h_deal_status FROM DL_DEAL WHERE CLIENT = :l_str_account AND IDENTIY_NO = :l_str_refno;
		IS_ANY_ORA_ERROR	
	}
		
	if((strcmp(p_str_msg_name,"540C01")==0) ||
	   (strcmp(p_str_msg_name,"541C01")==0) ||
	   (strcmp(p_str_msg_name,"542C01")==0) ||
	   (strcmp(p_str_msg_name,"543C01")==0))
	{
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T02"); 				
	}
	
	if((strcmp(p_str_msg_name,"544N01")==0) || (strcmp(p_str_msg_name,"545N01")==0) || (strcmp(p_str_msg_name,"546N01")==0) || (strcmp(p_str_msg_name,"547N01")==0))
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T03");


	if((strcmp(p_str_msg_name,"544R01")==0) || (strcmp(p_str_msg_name,"545R01")==0) || (strcmp(p_str_msg_name,"546R01")==0) || (strcmp(p_str_msg_name,"547R01")==0))

		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T04");

	if(strcmp(p_str_msg_name,"548N04")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T05");

	if(strcmp(p_str_msg_name,"548R04")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T06");

	if(strcmp(p_str_msg_name,"548N03")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T07");

	if(strcmp(p_str_msg_name,"548R03")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T08");

	if(strcmp(p_str_msg_name,"548N05")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T09");

	if(strcmp(p_str_msg_name,"548N06")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T10");

	if(strcmp(p_str_msg_name,"548N07")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T11");

		
	if(strcmp(p_str_msg_name,"578N01")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T12");
	
	if(strcmp(p_str_msg_name,"535N01")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T13");
	
	if(strcmp(p_str_msg_name,"536N01")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T14");
	
	if(strcmp(p_str_msg_name,"537N01")==0)
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T15");

	
	if((strcmp(p_str_msg_name,"540N01")==0) ||
			(strcmp(p_str_msg_name,"541N01")==0) ||
			(strcmp(p_str_msg_name,"542N01")==0) ||
			(strcmp(p_str_msg_name,"543N01")==0))
	{
		strcpy(h_cmsgrepair_struct->h_msgfunc_code,"T01");
	}
	
	
	EXEC SQL INSERT INTO CMSGREPAIR VALUES (:h_cmsgrepair_struct:i_cmsgrepair_struct);
	IS_ANY_ORA_ERROR



	APL_GOBACK_SUCCESS

	RETURN_FAILURE :
	{
		APL_IF_DEBUG
			printf("\n Leaving processtion InsCmsgRprFn with errors \n");
		CO_ProcMonitor(APL_OUT_FILE, "\n Leaving processtion InsCmsgRprFn with errors \n",NULL,NULL);
		APL_FREE(h_cmsgrepair_struct);
		return(APL_FAILURE);
	}

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
			printf("\n Leaving processtion InsCmsgRprFn successfully \n");
		CO_ProcMonitor(APL_OUT_FILE, "\n Leaving processtion InsCmsgRprFn successfully \n",NULL,NULL);
		APL_FREE(h_cmsgrepair_struct);
		return(APL_SUCCESS);
	}

}
*/
