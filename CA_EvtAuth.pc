/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 * Module Name         :      Corporate Actions
 *
 * File Name           :      CA_EvtAuth.pc
 *
 * Description         :      Contains Functions Related to Event Authorisation
 *
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author           Description        RFS No.
 * ---------   --------  ---------------  ------------------   ---------
 * 20/01/2006   1.2	   Smita Bhat     Added Fns 					 HDFCCA_027
 *					  								Related to Event Auth
 *					  								Changed Variables as per Coding Stds
 *	30/01/2006	 1.3		Smita Bhat		Added Chgs related		 HDFCCA_009
 *													to Buy Back
 *************************************************************************/
#include "CR_Common.h"
#include "CA_Common.h"
#define  MSG_PARAM_STRUCT_SEP ";"

EXEC SQL INCLUDE SQLCA.H;




static	int 	CA_EventAuth(  CA_CAEVNT_AUT_STRUCT_H    *p_ca_caevnt_aut_struct_h,
				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				);

static	int 	CA_EventRst(  CA_CAEVNT_AUT_STRUCT_H    *p_ca_caevnt_aut_struct_h,
				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				);

int CA_Mod_EventAuth(  CA_CAEVNT_AUT_STRUCT_H    *p_ca_caevnt_aut_struct_h,
                     INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
                     DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  )
{
	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered A_DbAuthEventFn",NULL,p_intlenv_data_struct_h);
	}
	if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_AUTHORISE)	)	)
	{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is Authorise",NULL,p_intlenv_data_struct_h);
			}
			if (	CA_EventAuth(	p_ca_caevnt_aut_struct_h,
											p_intlenv_data_struct_h,
											l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
	}

	else if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_RESET)	)	)
	{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is Reset",NULL,p_intlenv_data_struct_h);
			}
				if (	CA_EventRst		(p_ca_caevnt_aut_struct_h,
												p_intlenv_data_struct_h,
												l_debug_info_ptr
											) == APL_FAILURE)

				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
	}
	
	else
	{
            CO_InsertErr(l_debug_info_ptr,
                           ERR_INVALID_MODE,
									p_intlenv_data_struct_h->h_mode,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__
                           );
            APL_GOBACK_FAIL
	}
		
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting  CA_Mod_EventAuth successfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting  CA_Mod_EventAuth unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
	}
}

static	int CA_EventAuth(	CA_CAEVNT_AUT_STRUCT_H 	*p_ca_caevnt_aut_struct_h,
									INTL_ENV_DATA_STRUCT_H	*p_intlenv_data_struct_h,
					   			DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr
								)
{
	struct	sqlca	sqlca;
	char		h_ora_rowid[APL_ROWID_LEN] = APL_NULL_STRING;
	char		chr_h_rowidimg[APL_ROWID_LEN] = APL_NULL_STRING;
	char		h_instr_code[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short		i_instr_code=0;
	char		h_res_instr_code[APL_INSTRUMENTCODE_LEN] = APL_NULL_STRING;
	short		i_res_instr_code=0;
	char		chr_h_rtv_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short		i_rtv_access_stamp=0;
	char		chr_h_rtv_maker[APL_USERID_LEN] = APL_NULL_STRING;
	short		i_rtv_maker=0;
	char		chr_h_rtv_checker[APL_USERID_LEN] = APL_NULL_STRING;
	short		i_rtv_checker=0;
	char		h_evt_stat[APL_STATUS_LEN] = APL_NULL_STRING;
	short		i_evt_stat=0;
	char		chr_h_event_statimg[APL_STATUS_LEN] = APL_NULL_STRING;
	short		i_evnt_statimg=0;
 //AIX -Warning Removal
	//char		h_typeofinstr[APL_INSTRU_TYPE_LEN] = APL_NULL_STRING;
	//short		i_typeofinstr=0;
	int		int_h_counter=0;
	short		i_counter=0;
	int		int_h_pay_counter=0;
	int		int_h_glb_pay_counter=0;
	
	char		h_sys_dt[APL_DATE_LEN] = APL_NULL_STRING;
	short		i_sys_date=0;
	char		h_checker[APL_USERID_LEN] = APL_NULL_STRING;
	short		i_checker=0;
	char		chr_h_upd_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	//short		i_upd_access_stamp=0;	 //AIX -Warning Removal
	char		chr_h_upd_event_stat[APL_STATUS_LEN] = APL_NULL_STRING;
	short		i_upd_evnt_stat=0;
	char		chr_op_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	char		h_op_evt_class[3] = APL_NULL_STRING;

	char		h_evt_send_msg_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	short		i_evt_send_msg_ind = 0;
	
	
	char		h_evt_class[EVT_CLASS_] = APL_NULL_STRING;
	short		i_evt_class=0;
	short		i_op_evt_class=0;
	int      int_l_flg_mod_event = 0;		
	int		int_l_count_spayment = 0;	
	int		int_l_count_gpayment = 0;	

	char     chr_msg_param_struct[100]=APL_NULL_STRING;    
	short i_disp_of_fract = 0;
	short i_div_class = 0;
	short i_depo_part_code = 0;
  	short i_depo_code = 0;	
	/* Smita - Name Change Event - HDFCCA_027*/
	char    h_cmp_code[MT_CMP_CODE_LEN]=APL_NULL_STRING;
	char    h_res_cmp_code[MT_CMP_CODE_LEN]=APL_NULL_STRING;
	int	  int_retval = 0;
	/* Smita - Name Change Event - HDFCCA_027*/

	/* Smita - Buy Back  Event - HDFCCA_009*/
	char    h_depo_code[MT_DEPO_CODE_LEN]=APL_NULL_STRING;
	char    h_depo_part_code[MT_DEPO_PART_CODE_LEN]=APL_NULL_STRING;
	CA_CAEVENT_STRUCT_H        *l_ca_caevent_struct_h     = (CA_CAEVENT_STRUCT_H *)NULL;
	int int_p_result = 0; // AIX -Warnings Removal
	/* Smita - Buy Back  Event - HDFCCA_009*/

	/*Smita - HDFCCA_004 - Capital Reduction*/
	char h_disp_of_fract[CA_DISP_OF_FRACT_LEN]=APL_NULL_STRING;
	char h_div_class[CA_DIVIDEND_TYPE_LEN]=APL_NULL_STRING;
	/*Smita - HDFCCA_004 - Capital Reduction*/

	/* Chirag 02-12-2006 */
	short	i_inst_st_period = 0;
	char l_inst_st_period[APL_DATE_LEN] = APL_NULL_STRING;
	char l_old_lst_pydy[APL_DATE_LEN] = APL_NULL_STRING;
	short i_old_lst_pydy = 0; 
         /*Added by siva.ganapathi for ISKB_3110 -- Retro from HDFC on 30/11/2009 -- started*/
	char l_lst_pymt_dt[APL_DATE_LEN] = APL_NULL_STRING;
	short i_lst_pymt_dt = 0;
        /*Added by siva.ganapathi for ISKB_3110 -- Retro from HDFC on 30/11/2009 -- Ended*/
	/* Chirag 02-12-2006 */

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entering S_EventAuth",NULL,p_intlenv_data_struct_h);
	}	

	
	if(	!strlen(p_ca_caevnt_aut_struct_h->h_corp_id	)	)
		
			APL_DATA_MISSING("Corporate Action ID",APL_NULL_STRING,APL_NULL_STRING)

	if(	!strlen(p_ca_caevnt_aut_struct_h->h_access_stamp	)	)
			APL_DATA_MISSING("Access Stamp missing ",APL_NULL_STRING,APL_NULL_STRING)
 
	if	(	CO_ChkErr(*l_debug_info_ptr)	 == APL_SUCCESS	)
		APL_GOBACK_FAIL
	
	EXEC SQL VAR	h_instr_code is string;
	EXEC SQL VAR	h_res_instr_code is string;
	EXEC SQL VAR	chr_h_rtv_maker is string;
	EXEC SQL VAR	chr_h_rtv_checker is string;
	EXEC SQL VAR	h_op_evt_class is string;
		
	/* Smita - Buy Back  Event - HDFCCA_009*/
	l_ca_caevent_struct_h =  (CA_CAEVENT_STRUCT_H *)calloc(1,sizeof(CA_CAEVENT_STRUCT_H));
	memset(l_ca_caevent_struct_h,NULL,sizeof(CA_CAEVENT_STRUCT_H));
	/* Smita - Buy Back  Event - HDFCCA_009*/

	/*Smita - Changed Column Names - HDFCCA_027*/	
	EXEC SQL SELECT ROWID,
						instr_code,
						RES_INSTR_CODE,
						access_stamp,
						status,
						maker,
						checker,
						EVT_SEND_MSG_IND,
						CA_EVENT,
						OP_EVT_CLASS
						INTO	:h_ora_rowid,
								:h_instr_code:i_instr_code,
								:h_res_instr_code:i_res_instr_code,
								:chr_h_rtv_access_stamp:i_rtv_access_stamp,
								:h_evt_stat:i_evt_stat,
								:chr_h_rtv_maker:i_rtv_maker,
								:chr_h_rtv_checker:i_rtv_checker,
								:h_evt_send_msg_ind:i_evt_send_msg_ind,
								:h_evt_class:i_evt_class,
								:h_op_evt_class:i_op_evt_class
	FROM 		CAEVENT 
   WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id 
      	FOR UPDATE OF	CAEVENT.STATUS;
		
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_EVNT_NOTFND_A,
													APL_NULL_STRING,	
													APL_NULL_STRING,	
													APL_NULL_STRING
 												  )	

	if (i_res_instr_code == -1 )
		strcpy(h_res_instr_code,APL_NULL_STRING);
	
	APL_IF_DEBUG
	{
		printf("Access Stamp from Structure = |%s|\n",p_ca_caevnt_aut_struct_h->h_access_stamp);
		printf("Access Stamp From Table = |%s|\n",chr_h_rtv_access_stamp);
	}	
	if (strcmp(	p_ca_caevnt_aut_struct_h->h_access_stamp,
					chr_h_rtv_access_stamp))		
	{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
	}

	if	(	i_rtv_checker	!= -1	)
	{
				CO_InsertErr(l_debug_info_ptr,
									ERR_EVNT_AUTHORIZED,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
	}

	if	(	!strcmp(p_intlenv_data_struct_h->usr,chr_h_rtv_maker)	)
	{
				CO_InsertErr(l_debug_info_ptr,
									ERR_MAKER_CHECKER_SAME,
									p_intlenv_data_struct_h->usr,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
	}

	if	(	strcmp(h_evt_stat,APL_STATUS_UNAUTH)	)
	{
				EXEC SQL SELECT 	ROWID,
										status
				
				INTO					:chr_h_rowidimg,
										:chr_h_event_statimg:i_evnt_statimg
				FROM CAEVENTMG 
        		WHERE 
				CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id 
      		FOR UPDATE OF	CAEVENTMG.STATUS;
			
				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_EVNTIMG_NOTFND,
																	APL_NULL_STRING,	
																	APL_NULL_STRING,	
																	APL_NULL_STRING
																	)	
	}

   if ( !strcmp(h_evt_class,EVT_OFFER) )
	{
			strcpy(chr_op_ind,APL_YES_IND);
	}
	else
	{
			strcpy(chr_op_ind,APL_NO_IND);
	}


	if	(	CA_ChkInstr(	h_instr_code,
								h_res_instr_code,
								chr_op_ind,
								l_debug_info_ptr
							)	==	APL_FAILURE
		)
			APL_GOBACK_FAIL
	
	if	(	!strcmp(h_evt_stat,STATUS_REV_UAUTH)	)
	{
				EXEC SQL SELECT NVL(count(*),0) 
				INTO :int_h_counter:i_counter
		 		FROM CAENTITLEMENT
				WHERE 
						CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id  AND
						STATUS NOT IN ('DL','RV')	    AND /*Smita - Changed Col Name - HDFCCA_BaseVer*/
						rownum	<	2;
				
				IS_ANY_ORA_ERROR

				EXEC SQL SELECT NVL(count(*),0) 
				INTO :int_h_pay_counter
		 		FROM CACHEQUE
				WHERE 
						CORP_ID	=:p_ca_caevnt_aut_struct_h->h_corp_id	AND
						STAT_PYMT	NOT IN ('RV','DL')			AND
						rownum < 2;
				
				IS_ANY_ORA_ERROR
			
			
				EXEC SQL SELECT NVL(count(*),0) 
				INTO :int_h_glb_pay_counter
				FROM CAGLPYMT
				WHERE 
				CORP_ID	=:p_ca_caevnt_aut_struct_h->h_corp_id AND	
				STAT_PYMT	NOT IN ('AA')			AND
				rownum < 2;
				
				IS_ANY_ORA_ERROR
		
			if (	(int_h_counter != 0) ||
					(int_h_pay_counter != 0) ||					
					(int_h_glb_pay_counter != 0) 	
				)	
			{
 				if (int_h_counter != 0)			
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_UNREV_ENTITL_CANT_REV_EVNT,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);				
				}

				if (int_h_pay_counter != 0)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_UNREV_PYMT_CANT_REV_EVNT,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);				
				}

				if (int_h_glb_pay_counter != 0)
				{
					CO_InsertErr(l_debug_info_ptr,
										ERR_UNAUT_GPPYMT_CANT_REV_EVNT,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__
										);				
				}
					APL_GOBACK_FAIL

		}
 	}
   
  /*Smita - HDFCCA_027 - Name Change Event Related Chks*/ 
  if (strcmp(h_evt_class,EVT_NM_CHNG) == 0)
  {
	  APL_IF_DEBUG
	  {
		  printf("Checking Company Details in Event authorisation for Event = |%s|\n",h_evt_class);
	  }
	  EXEC SQL SELECT CMP_CODE,RES_CMP_CODE INTO :h_cmp_code,:h_res_cmp_code
		  			FROM CAEVENT
					WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id;

	  IS_ANY_ORA_ERROR
	
	  if (strlen(h_cmp_code)!=0)
	  {
		  int_retval = CA_ChkCmp(h_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);

		  if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL
	  }
	  if (strlen(h_res_cmp_code)!=0)
	  {
		  int_retval = CA_ChkCmp(h_res_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);
		  
		  if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL
	
	  }
  }	  
  /*Smita - HDFCCA_027 - Name Change Event Related Chks*/

  /*Smita - HDFCCA_009 - Buy Back Event Related Chks*/
  if (strcmp(h_evt_class,EVT_BUY_BACK) == 0)
  {
	APL_IF_DEBUG
	{
		printf("Checking Details for |%s| Event in Auth Mode \n",h_evt_class);
	}
		
		EXEC SQL SELECT DEPO_CODE,DEPO_PART_CODE INTO :h_depo_code:i_depo_code,:h_depo_part_code:i_depo_part_code		
					FROM CAEVENT
					WHERE CORP_ID =:p_ca_caevnt_aut_struct_h->h_corp_id;

		IS_ANY_ORA_ERROR
	/**if(i_depo_code == 0)**/
		strcpy(l_ca_caevent_struct_h->h_depo_code,h_depo_code);
	/**if(i_depo_part_code == 0)**/	
		strcpy(l_ca_caevent_struct_h->h_depo_part_code,h_depo_part_code);
		
		strcpy(l_ca_caevent_struct_h->h_evt_class,h_evt_class);

		int_retval = CA_ChkEventDetails( 	l_ca_caevent_struct_h,
						 								&int_p_result,
						 								p_intlenv_data_struct_h,
														l_debug_info_ptr);

		if (	(int_p_result == ERR_DEPO_PART_NOTFND) ||
			   (int_p_result == ERR_DEPO_PART_UNAUTH) ||
			   (int_p_result == ERR_INVALID_CODE)	)
			APL_GOBACK_FAIL
	}
  /*Smita - HDFCCA_009 - Buy Back Event Related Chks*/

  /*Smita - HDFCCA_004 - Added Checks related to Capital Reduction*/
  if (strcmp(h_evt_class,EVT_CAP_RED) == 0)
  {
	  APL_IF_DEBUG
	  {
		  printf("Checking Details for |%s||%s| Event in Auth Mode \n",h_evt_class,p_ca_caevnt_aut_struct_h->h_corp_id);
	  }
		EXEC SQL SELECT DISP_OF_FRACT,DIVIDEND_TYPE INTO :h_disp_of_fract:i_disp_of_fract,:h_div_class:i_div_class
  					FROM CAEVENT
					WHERE CORP_ID =:p_ca_caevnt_aut_struct_h->h_corp_id;

		IS_ANY_ORA_ERROR

		strcpy(l_ca_caevent_struct_h->h_div_class,h_div_class);
		strcpy(l_ca_caevent_struct_h->h_disp_of_fract,h_disp_of_fract);
		strcpy(l_ca_caevent_struct_h->h_evt_class,h_evt_class);

		if ( 	(strcmp(l_ca_caevent_struct_h->h_div_class,RED_TYP_UNITS)	!=0) 	&&
				(strcmp(l_ca_caevent_struct_h->h_div_class,RED_TYP_FACEVAL) !=0)	&&
				(strcmp(l_ca_caevent_struct_h->h_div_class,RED_TYP_BOTH) !=0)	)
		{
			APL_IF_DEBUG
			{
				printf("Reduction Type Not Valid\n");
			}
			int_p_result = ERR_INVALID_CODE;
			APL_GOBACK_FAIL
		}

		int_retval = CA_ChkEventDetails (	l_ca_caevent_struct_h,
														&int_p_result,
														p_intlenv_data_struct_h,
														l_debug_info_ptr);
		if (int_retval == ERR_INVALID_CODE)
			APL_GOBACK_FAIL
		else
			APL_IF_DEBUG
			{
				printf("Successfully Checked Event Details in Auth Mode\n");
			}
  }
  /*Smita - HDFCCA_004 - Added Checks related to Capital Reduction*/

 	/* Chirag 02-12-2006 */ 
	if((!strcmp(h_evt_class,EVT_BOND) || !strcmp(h_evt_class,EVT_CASH_DIV)) && strcmp(h_evt_stat,APL_STATUS_UNAUTH)) 
	{
		Alert("Evet |%s| found \n",p_ca_caevnt_aut_struct_h->h_corp_id);
		EXEC SQL SELECT OLD_LST_PAYDT INTO :l_old_lst_pydy:i_old_lst_pydy
					FROM MT_INSTRUMENT
					WHERE INSTR_CODE =:h_instr_code;
		IS_ANY_ORA_ERROR

		if(i_old_lst_pydy == 0)
		{
			Alert("OLD_LST_PAYDT |%s|\n",l_old_lst_pydy);
			strcpy(l_inst_st_period,l_old_lst_pydy);
			Alert("INST_START_PERIOD |%s|\n",l_inst_st_period);    
		}
		else
		{
			Alert("OLD_LST_PAYDT not available for INSTR_CODE |%s| \n",h_instr_code);
		}			
	}	
   /* Chirag 02-12-2006 */
 
	if (	CO_RtvSysDt(h_sys_dt,l_debug_info_ptr) == APL_FAILURE )
	{
				APL_GOBACK_FAIL
	}

	if (	CO_RtvSysDtTime(chr_h_upd_access_stamp,l_debug_info_ptr) == APL_FAILURE )
	{
			APL_GOBACK_FAIL
	}
	
	strcpy(h_checker,p_intlenv_data_struct_h->usr);
		
	if	(	!strcmp(h_evt_stat,STATUS_DEL_UNAUTH)	)
	{
		strcpy(chr_h_upd_event_stat,STATUS_DELETED_A);
	}

	if	( (!strcmp(h_evt_stat,APL_STATUS_UNAUTH))		||
			(!strcmp(h_evt_stat,STATUS_CHNG_RDY_INT))
		)
	{
		strcpy(chr_h_upd_event_stat,STATUS_RDY_INT);
	}

	if ( (!strcmp(h_evt_stat,STATUS_CHNG_PAID_CLSD)))//added by siva.ganapathi for HDFC Enh Log 28 on 27/12/2008 -- Retro Done by Sana for Rights Mod
	{
		/** Added to send event intimation of modify after event is marked CP **/
		EXEC SQL SELECT nvl(count(*),0) INTO :int_l_flg_mod_event
		FROM CACHGEVENT WHERE corp_id = :p_ca_caevnt_aut_struct_h->h_corp_id;
		IS_ANY_ORA_ERROR

		Alert("Debug : int_l_flg_mod_event = |%d|",int_l_flg_mod_event);
		fflush(stdout);

		if (int_l_flg_mod_event == 0)
		{
			Alert("Debug : Inserting into CACHGEVENT for event |%s|",p_ca_caevnt_aut_struct_h->h_corp_id);
			fflush(stdout);

			EXEC SQL INSERT INTO CACHGEVENT VALUES (:p_ca_caevnt_aut_struct_h->h_corp_id,:h_sys_dt:i_sys_date,NULL);
			IS_ANY_ORA_ERROR
		}

		int_l_flg_mod_event = 0;

		EXEC SQL SELECT nvl(count(*),0) INTO :int_l_flg_mod_event
		FROM CA_EVENTMESGSEND
		WHERE CORP_ID =:p_ca_caevnt_aut_struct_h->h_corp_id;
		IS_ANY_ORA_ERROR

		Alert("Debug : int_l_flg_mod_event = |%d|",int_l_flg_mod_event);
		fflush(stdout);

		if (int_l_flg_mod_event > 0)
		{
			Alert("Debug : Deleting from CA_EVENTMESGSEND for event |%s|",p_ca_caevnt_aut_struct_h->h_corp_id);
			fflush(stdout);

			EXEC SQL DELETE FROM CA_EVENTMESGSEND
			WHERE CORP_ID =:p_ca_caevnt_aut_struct_h->h_corp_id;
			IS_ANY_ORA_ERROR
		}

		strcpy(chr_h_upd_event_stat,STATUS_MSG_PAID_CLSD);
	}

   if (!strcmp(h_evt_stat,STATUS_CHNG_RDY_INT))
	{
			EXEC SQL DELETE CA_EVENTMESGSEND WHERE
			corp_id=:p_ca_caevnt_aut_struct_h->h_corp_id;
			IS_ANY_ORA_ERROR
        /*Added by siva.ganapathi for ISKB_3110 -- Retro from HDFC on 30/11/2009 -- Started*/
	/* HDFC Issue Log 340 - Fix By Yog on 26/09/2008 - Added logic for reverse of LAST_PYMT_DATE and Next Paymt Date - Start */

			EXEC SQL SELECT OLD_LST_PAYDT,LAST_PYMT_DATE
			INTO :l_old_lst_pydy:i_old_lst_pydy, :l_lst_pymt_dt:i_lst_pymt_dt
			FROM MT_INSTRUMENT
			WHERE INSTR_CODE =:h_instr_code;
			printf("\n Yog Select - sqlca.sqlcode = |%d|", sqlca.sqlcode);
			IS_ANY_ORA_ERROR

			printf("\n Yog1 - l_old_lst_pydy = |%s|, l_lst_pymt_dt = |%s| \n", l_old_lst_pydy, l_lst_pymt_dt);

			EXEC  SQL UPDATE  MT_INSTRUMENT
			SET  NEXT_PAY_DATE  =  :l_lst_pymt_dt,
			LAST_PYMT_DATE  = :l_old_lst_pydy
			WHERE  instr_code  = :h_instr_code;
			printf("\n Yog - Update - sqlca.sqlcode = |%d|", sqlca.sqlcode);
			IS_ANY_ORA_ERROR

       /* HDFC Issue Log 340 - Fix By Yog on 26/09/2008 - Added logic for reverse of LAST_PYMT_DATE and Next Paymt Date - End */
       /*Added by siva.ganapathi for ISKB_3110 -- Retro from HDFC on 30/11/2009 -- Ended*/
	}

	if	(	!strcmp(h_evt_stat,STATUS_FROZ_UAUTH_A)	)
	{
		if	(	!strcmp(chr_h_event_statimg,STATUS_RDY_INT)	)
			 strcpy(chr_h_upd_event_stat,STATUS_FROZ_IN);
			
		else	if	(	!strcmp(chr_h_event_statimg,STATUS_RDY_ENTL)	)
				 strcpy(chr_h_upd_event_stat,STATUS_FROZ_RE);
		
		else	if	(	!strcmp(chr_h_event_statimg,STATUS_MSG_SENT)	)
				 strcpy(chr_h_upd_event_stat,STATUS_FROZ_SN);
		
		else	if	(	!strcmp(chr_h_event_statimg,STATUS_RDY_PYMT)	)
				 strcpy(chr_h_upd_event_stat,STATUS_FROZ_RP);
			
	}
	if	(	!strcmp(h_evt_stat,STATUS_UNFRZ_UAUTH)	)
	{
		if	(	!strcmp(chr_h_event_statimg,STATUS_FROZ_IN)	)
			 strcpy(chr_h_upd_event_stat,STATUS_RDY_INT);
			
	   else	if	(	!strcmp(chr_h_event_statimg,STATUS_FROZ_RE)	)
			 strcpy(chr_h_upd_event_stat,STATUS_RDY_ENTL);
			   
		else	if	(	!strcmp(chr_h_event_statimg,STATUS_FROZ_SN)	)
			 strcpy(chr_h_upd_event_stat,STATUS_MSG_SENT);
					
		else	if	(	!strcmp(chr_h_event_statimg,STATUS_FROZ_RP)	)
			 strcpy(chr_h_upd_event_stat,STATUS_RDY_PYMT);
			
	}
	printf("\n CAImg Status:|%s|--Status:|%s|--Evt_Msg_Send_Flg:|%s|--Event:|%s|",chr_h_event_statimg,h_evt_stat,h_evt_send_msg_ind,h_evt_class);
   /* In below check Status "STATUS_RDY_APP" added for Event:BB/RT cancellation msg gen. on status "Ready for Application". */ 
	if	(	!strcmp(h_evt_stat,STATUS_REV_UAUTH)	)
	{
		if ( !strcmp(h_evt_send_msg_ind,APL_YES_IND) )
		{
			if	(	!strcmp(chr_h_event_statimg,STATUS_RDY_ENTL) ||
   	     		                !strcmp(chr_h_event_statimg,STATUS_MSG_SENT) ||
					!strcmp(chr_h_event_statimg,STATUS_RDY_PYMT) || 
                                        !strcmp(chr_h_event_statimg,STATUS_RDY_APP)
				)
				{
						memset(chr_msg_param_struct,APL_NULL_CHAR,100);
						strcpy(chr_msg_param_struct,p_ca_caevnt_aut_struct_h->h_corp_id);
						strcat(chr_msg_param_struct,p_ca_caevnt_aut_struct_h->h_access_stamp);
						strcat(chr_msg_param_struct,MSG_PARAM_STRUCT_SEP);
						strcat(chr_msg_param_struct,p_intlenv_data_struct_h->subprocess);
						strcat(chr_msg_param_struct,MSG_PARAM_STRUCT_SEP);
						
						if ( !strcmp(h_evt_class,EVT_OFFER)	)			
						{
							if	(	 GBDbInsIMSGENT(	EVT_OPREV_MSGNO, 
															p_ca_caevnt_aut_struct_h->h_corp_id, 
															APL_NULL_STRING, 
															APL_YES_FLAG,
															chr_msg_param_struct,
															l_debug_info_ptr)	==	APL_FAILURE
								)
									APL_GOBACK_FAIL

						}	
												
						else if ( !strcmp(h_evt_class,EVT_OTH))	
						{
							if	(	 GBDbInsIMSGENT(	EVT_OTREV_MSGNO, 
															p_ca_caevnt_aut_struct_h->h_corp_id, 
															APL_NULL_STRING, 
															APL_YES_FLAG,
															chr_msg_param_struct,
															l_debug_info_ptr)	==	APL_FAILURE
								)
									APL_GOBACK_FAIL

						}	
                                                /* VaibhavK I-SolveID:362 KOTAK_UAT */
						else if ( !strcmp(h_evt_class,EVT_MEETING))	
						{
							if	(	 GBDbInsIMSGENT(	EVT_REV_MSGNO_SM_EVT, 
															p_ca_caevnt_aut_struct_h->h_corp_id, 
															APL_NULL_STRING, 
															APL_YES_FLAG,
															chr_msg_param_struct,
															l_debug_info_ptr)	==	APL_FAILURE
								)
									APL_GOBACK_FAIL

						}	
                                                /* VaibhavK Buy-Back Cancellation Message KOTAK_UAT  */
						else if ( !strcmp(h_evt_class,EVT_BUY_BACK))	
						{
							if	(	 GBDbInsIMSGENT(	EVT_REV_MSGNO_BB_EVT, 
															p_ca_caevnt_aut_struct_h->h_corp_id, 
															APL_NULL_STRING, 
															APL_YES_FLAG,
															chr_msg_param_struct,
															l_debug_info_ptr)	==	APL_FAILURE
								)
									APL_GOBACK_FAIL

						}	
                                                /* VaibhavK Buy-Back Cancellation Message KOTAK_UAT */
						else
						{
							if	(	 GBDbInsIMSGENT(	EVT_REV_MSGNO, 
															p_ca_caevnt_aut_struct_h->h_corp_id, 
															APL_NULL_STRING, 
															APL_YES_FLAG,
															chr_msg_param_struct,
															l_debug_info_ptr)	==	APL_FAILURE
								)
									APL_GOBACK_FAIL
						}
				}
	 	}
               /*  VaibhavK I-SolveID:380    Kotak_Uat 23/Aug/2007 Start  */	
		/*if(( !strcmp(chr_h_event_statimg,STATUS_MSG_SENT) &&
			(!strcmp(h_evt_class,EVT_MEETING))))
		{
			strcpy(chr_h_upd_event_stat,STATUS_RDY_INT);
		}
		else
		{
			if (strcmp(p_intlenv_data_struct_h->subprocess,APL_NULL_STRING)==0)
				strcpy(chr_h_upd_event_stat,STATUS_REVERSED);
			else if(strcmp(p_intlenv_data_struct_h->subprocess,"1")==0)
				strcpy(chr_h_upd_event_stat,STATUS_WITHDRAWN);
   	} */
		if (strcmp(p_intlenv_data_struct_h->subprocess,APL_NULL_STRING)==0)
			strcpy(chr_h_upd_event_stat,STATUS_REVERSED);
		else if(strcmp(p_intlenv_data_struct_h->subprocess,"1")==0)
			strcpy(chr_h_upd_event_stat,STATUS_WITHDRAWN);
   	
               /*  VaibhavK I-SolveID:380    Kotak_Uat 23/Aug/2007 End  */   

   	EXEC SQL DELETE CA_EVENTMESGSEND WHERE
      	      corp_id=:p_ca_caevnt_aut_struct_h->h_corp_id;
   	IS_ANY_ORA_ERROR
                
		if ( strcmp(h_evt_class,EVT_MEETING) &&
	   	  strcmp(h_evt_class,EVT_BOND_REDMP) &&
	     	strcmp(h_evt_class,EVT_OTH)
			) 
		{	printf("************************************CA_CO_ModInstrRev Calling******************\n"); 
			if ( CA_CO_ModInstrRev(	h_evt_class,
											h_instr_code,
											chr_h_upd_access_stamp,
											l_debug_info_ptr) == APL_FAILURE
				)
			{
				APL_GOBACK_FAIL
			}
		}			
	}

	printf("\n Before going in if loop .. h_evt_stat is |%s|",h_evt_stat);
	printf("\n Before going in if loop .. h_op_evt_class is |%s|",h_op_evt_class);
   if (!strcmp(h_evt_stat,STATUS_CHNG_RDY_PYMT)) 
    {
			int_l_count_spayment = 0;
			int_l_count_gpayment = 0;

			EXEC SQL SELECT nvl(count(*),0) INTO :int_l_count_spayment FROM CACHEQUE
						WHERE  corp_id = :p_ca_caevnt_aut_struct_h->h_corp_id;

			IS_ANY_ORA_ERROR

			EXEC SQL SELECT nvl(count(*),0) INTO :int_l_count_gpayment FROM CAGLPYMT
						WHERE  corp_id = :p_ca_caevnt_aut_struct_h->h_corp_id;

			IS_ANY_ORA_ERROR

			printf("\n Inside if loop .. int_l_count_spayment is |%d|",int_l_count_spayment);
			printf("\n Inside if loop .. int_l_count_gpayment is |%d|",int_l_count_gpayment);
			if ((int_l_count_spayment == 0) && (int_l_count_gpayment == 0))
			{
				if (strcmp(h_op_evt_class,"TO")!=0)
				{
         		EXEC SQL SELECT nvl(count(*),0) INTO :int_l_flg_mod_event
         					FROM CACHGEVENT WHERE corp_id = :p_ca_caevnt_aut_struct_h->h_corp_id;
         		IS_ANY_ORA_ERROR
         		if (int_l_flg_mod_event == 0)
         		{
            		EXEC SQL INSERT INTO CACHGEVENT VALUES (:p_ca_caevnt_aut_struct_h->h_corp_id,:h_sys_dt:i_sys_date,NULL);
            		IS_ANY_ORA_ERROR

      				EXEC SQL UPDATE CAMESGLINK SET TYPEOF_MSG_LNK ='VX'
      				WHERE CORP_ID = :p_ca_caevnt_aut_struct_h->h_corp_id AND
    					TYPEOF_MSG_LNK = 'VN' AND
      				CLIENT IN
      				(
         				select client from DL_SAFEK where instr_code = :h_instr_code
         				group by client
         				having  nvl(sum(safekeep_pos)+sum(NVALRECEIVE)+sum(VAL_REC)-sum(NVALDELIVER)-sum(VAL_DEL),0) = 0
      				);
				      IS_ANY_ORA_ERROR;

      				EXEC SQL UPDATE CAMESGLINK SET TYPEOF_MSG_LNK ='TX'
      				WHERE CORP_ID = :p_ca_caevnt_aut_struct_h->h_corp_id AND
      				TYPEOF_MSG_LNK = 'TN' AND
      				CLIENT IN
      				(
         				select client from DL_SAFEK where instr_code = :h_instr_code
         				group by client
         				having  nvl(sum(safekeep_pos)+sum(NVALRECEIVE)+sum(VAL_REC)-sum(NVALDELIVER)-sum(VAL_DEL),0) = 0
      				);
      				IS_ANY_ORA_ERROR;

      				EXEC SQL UPDATE CAMESGLINK SET TYPEOF_MSG_LNK ='XC'
      				WHERE CORP_ID = :p_ca_caevnt_aut_struct_h->h_corp_id AND
      				TYPEOF_MSG_LNK = 'TC' AND
      				CLIENT IN
      				(
         				select client from DL_SAFEK where instr_code = :h_instr_code
         				group by client
         				having  nvl(sum(safekeep_pos)+sum(NVALRECEIVE)+sum(VAL_REC)-sum(NVALDELIVER)-sum(VAL_DEL),0) = 0
      				);
      				IS_ANY_ORA_ERROR;
         		}
				}
				
				if(strcmp(h_op_evt_class,"TO")==0)
				{
					printf("Deleteing records from aevntmsgsnd\n");
					EXEC SQL DELETE FROM CA_EVENTMESGSEND 
										 WHERE CORP_ID =:p_ca_caevnt_aut_struct_h->h_corp_id;
					IS_ANY_ORA_ERROR
		
				}
            	strcpy(chr_h_upd_event_stat,STATUS_RDY_PYMT);
			}	
			else
			{
				
            CO_InsertErr(l_debug_info_ptr,
                           ERR_UNPRO_PAY_EXST,
                           p_intlenv_data_struct_h->h_mode,
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__
                           );
            APL_GOBACK_FAIL
			}
   }
      
	if	(	!strcmp(chr_h_upd_event_stat,STATUS_DELETED_A)	)
	{
			EXEC SQL DELETE CANOTIFY
			WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id; 
				
			IS_ANY_ORA_ERROR

         EXEC SQL DELETE CAMESGLINK
         WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id;

         IS_ANY_ORA_ERROR
                                
         EXEC SQL DELETE CASYNDMEM
         WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id;

         IS_ANY_ORA_ERROR

			
			EXEC SQL DELETE CAEVENT
		   WHERE ROWID=:h_ora_rowid; 

			IS_ANY_ORA_ERROR	
	}
	else
	{
			/* INST_START_PERIOD =:l_inst_st_period:i_inst_st_period added for to copy old_last_paydt */
			/* Chirag 02-12-2006 from MT_INSTRUMENT when BI & CD event modify */
			EXEC SQL UPDATE CAEVENT
			SET
			CHECKER		=	:h_checker:i_checker,
			CHECKER_DT	=	:h_sys_dt:i_sys_date,		
			STATUS	=	:chr_h_upd_event_stat:i_upd_evnt_stat,			
			PROCESSED_DATE		=	:h_sys_dt:i_sys_date,
			ACCESS_STAMP	=:chr_h_upd_access_stamp,
			INST_START_PERIOD =:l_inst_st_period:i_inst_st_period
			WHERE
			ROWID			=	:h_ora_rowid;
		
			IS_ANY_ORA_ERROR
			/*(ISKB_8537) - Changes by Kunal - Starts*/
			if	(	!strcmp(chr_h_upd_event_stat,"RV")	)
			{
				printf("\nInside delete Condition");
				fflush(stdout);
				EXEC SQL DELETE
				FROM CACHGEVENT
				WHERE	CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id;	

				IS_ANY_ORA_ERROR
			}
			/*(ISKB_8537) - Changes by Kunal - Ends*/

	}

	if	(	strcmp(h_evt_stat,APL_STATUS_UNAUTH)	)
	{
			EXEC SQL DELETE
			FROM CAEVENTMG
			WHERE	ROWID=:chr_h_rowidimg;	
	
			IS_ANY_ORA_ERROR
	}

	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventAuth successfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventAuth unsuccessfully",NULL,p_intlenv_data_struct_h);
		   }	
			return (APL_FAILURE);
	}
}

static	int 	CA_EventRst(  CA_CAEVNT_AUT_STRUCT_H    *p_ca_caevnt_aut_struct_h,
				                  INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  	      				         DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
               				)
{
	CA_CAEVENT_STRUCT_H		*l_ca_caeventimg_struct_h		=	NULL;
	CA_CAEVENT_STRUCT_I		*l_ca_caevent_struct_i	=	NULL;
	char		h_ora_rowid[APL_ROWID_LEN] = APL_NULL_STRING;					
	char		chr_h_rowidimg[APL_ROWID_LEN] = APL_NULL_STRING;					
	char		chr_h_rtv_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short		i_rtv_access_stamp=0;
	char		chr_h_rtv_checker[APL_USERID_LEN] = APL_NULL_STRING;
	short		i_rtv_checker=0;
	char		chr_h_rtv_maker[APL_USERID_LEN] = APL_NULL_STRING;
	short		i_rtv_maker=0;
	char		chr_op_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	
	/* Smita - Name Change Event - HDFCCA_027*/
	char    h_cmp_code[MT_CMP_CODE_LEN]=APL_NULL_STRING;
	char    h_res_cmp_code[MT_CMP_CODE_LEN]=APL_NULL_STRING;
	char	  chr_h_rtv_evt_class[CA_CA_EVENT_LEN]=APL_NULL_STRING;
	short   i_rtv_evt_class = 0;
	int	  int_retval = 0;
	/* Smita - Name Change Event - HDFCCA_027*/

	/* Smita - Buy Back  Event - HDFCCA_009*/
	char    h_depo_code[MT_DEPO_CODE_LEN]=APL_NULL_STRING;
	char    h_depo_part_code[MT_DEPO_PART_CODE_LEN]=APL_NULL_STRING;
	CA_CAEVENT_STRUCT_H        *l_ca_caevent_struct_h     = (CA_CAEVENT_STRUCT_H *)NULL;
	int int_p_result = 0; // AIX -Warnings Removal
	/* Smita - Buy Back  Event - HDFCCA_009*/

	/*Smita - HDFCCA_004 - Capital Reduction*/
	char h_disp_of_fract[CA_DISP_OF_FRACT_LEN] = APL_NULL_STRING;
	char h_div_class[CA_DIVIDEND_TYPE_LEN] = APL_NULL_STRING;
	short i_disp_of_fract = 0;
	short i_div_class = 0;
	/*Smita - HDFCCA_004 - Capital Reduction*/

	#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entering S_EventReset",NULL,p_intlenv_data_struct_h);
	}	
	
	
	if(	!strlen(p_ca_caevnt_aut_struct_h->h_corp_id	)	)
			APL_DATA_MISSING("Corporate Action ID",APL_NULL_STRING,APL_NULL_STRING)
	
	if(	!strlen(p_ca_caevnt_aut_struct_h->h_access_stamp	)	)
			APL_DATA_MISSING("Access Stamp missing ",APL_NULL_STRING,APL_NULL_STRING)

	if	(	CO_ChkErr(*l_debug_info_ptr)	 == APL_SUCCESS	)
		APL_GOBACK_FAIL
	
	
	(l_ca_caeventimg_struct_h)	=	(CA_CAEVENT_STRUCT_H*)calloc(1,sizeof(CA_CAEVENT_STRUCT_H));
	APL_MALLOC_FAIL(l_ca_caeventimg_struct_h);
	
	(l_ca_caevent_struct_i)	=	(CA_CAEVENT_STRUCT_I*)calloc(1,sizeof(CA_CAEVENT_STRUCT_I));
	APL_MALLOC_FAIL(l_ca_caevent_struct_i);

	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_corp_id is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_instr_code is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_res_instr_code is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_contactinfo is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_info_nbr is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_entinfo_no is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_maker is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_checker is string;
	EXEC SQL VAR	l_ca_caeventimg_struct_h->h_proc_oth is string;
	EXEC SQL VAR	chr_h_rtv_maker is string;
	EXEC SQL VAR	chr_h_rtv_checker is string;

	/* Smita - Buy Back  Event - HDFCCA_009*/
	l_ca_caevent_struct_h =  (CA_CAEVENT_STRUCT_H *)calloc(1,sizeof(CA_CAEVENT_STRUCT_H));
	memset(l_ca_caevent_struct_h,NULL,sizeof(CA_CAEVENT_STRUCT_H));
	/* Smita - Buy Back  Event - HDFCCA_009*/

		
   /*Smita - Added Event Type in the Select Clause - HDFCCA_027*/	
	EXEC SQL SELECT 	ROWID,
							ACCESS_STAMP,
							MAKER,
							CHECKER,
							CA_EVENT
	INTO					:h_ora_rowid,
							:chr_h_rtv_access_stamp:i_rtv_access_stamp,
							:chr_h_rtv_maker:i_rtv_maker,	 
							:chr_h_rtv_checker:i_rtv_checker,	 
							:chr_h_rtv_evt_class:i_rtv_evt_class
	FROM CAEVENT 
  	WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id 
      	FOR UPDATE OF	CAEVENT.STATUS;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_EVNT_NOTFND_A,
													APL_NULL_STRING,	
													APL_NULL_STRING,	
													APL_NULL_STRING
													)	
	
	APL_IF_DEBUG
	{
		printf("Access Stamp From Structure = |%s|\n",p_ca_caevnt_aut_struct_h->h_access_stamp);
		printf("Access Stamp From Table = |%s|\n",chr_h_rtv_access_stamp);
	}

	if (strcmp(	p_ca_caevnt_aut_struct_h->h_access_stamp,
					chr_h_rtv_access_stamp))		
	{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
	}

	if	(	i_rtv_checker	!= -1	)
	{
				CO_InsertErr(l_debug_info_ptr,
									ERR_EVNT_AUTHORIZED,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
	}
		
	if	(	!strcmp(p_intlenv_data_struct_h->usr,chr_h_rtv_maker)	)
	{
			CO_InsertErr(l_debug_info_ptr,
									ERR_MAKER_CHECKER_SAME,
									p_intlenv_data_struct_h->usr,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
	}

	EXEC SQL SELECT 	ROWID,
							CAEVENTMG.* 
	INTO					:chr_h_rowidimg,
							:l_ca_caeventimg_struct_h:l_ca_caevent_struct_i	 
	FROM CAEVENTMG 
  	WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id 
      	FOR UPDATE OF	CAEVENTMG.STATUS; /*Smita - Changed Column Names - HDFCCA_027*/

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_EVNTIMG_NOTFND,
													APL_NULL_STRING,	
													APL_NULL_STRING,	
													APL_NULL_STRING
											     )	

	if ( l_ca_caevent_struct_i->i_res_instr_code == -1)
		strcpy(l_ca_caeventimg_struct_h->h_res_instr_code,APL_NULL_STRING);
	
	if ( !strcmp(l_ca_caeventimg_struct_h->h_evt_class,EVT_OFFER) )
		{
			strcpy(chr_op_ind,APL_YES_IND);
		}
	else
		{
			strcpy(chr_op_ind,APL_NO_IND);
		}

	if	(	CA_ChkInstr( 	l_ca_caeventimg_struct_h->h_instr_code,
								l_ca_caeventimg_struct_h->h_res_instr_code,
								chr_op_ind,
								l_debug_info_ptr
							)	==	APL_FAILURE
		)
			APL_GOBACK_FAIL

  /*Smita - HDFCCA_027 - Name Change Event Related Chks*/ 
  if (strcmp(chr_h_rtv_evt_class,EVT_NM_CHNG) == 0)
  {
	  APL_IF_DEBUG
	  {
		  printf("Checking Company Details in Event authorisation for Event = |%s|\n",chr_h_rtv_evt_class);
	  }
	  EXEC SQL SELECT CMP_CODE,RES_CMP_CODE INTO :h_cmp_code,:h_res_cmp_code
		  			FROM CAEVENT
					WHERE CORP_ID=:p_ca_caevnt_aut_struct_h->h_corp_id;

	  IS_ANY_ORA_ERROR
	
	  if (strlen(h_cmp_code)!=0)
	  {
		  int_retval = CA_ChkCmp(h_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);
		  
		  if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL
	  }
	  if (strlen(h_res_cmp_code)!=0)
	  {
		  int_retval = CA_ChkCmp(h_res_cmp_code,
					p_intlenv_data_struct_h,
					l_debug_info_ptr);
		  
		  if (int_retval == APL_FAILURE)
			APL_GOBACK_FAIL
	
	  }
  }	  
  /*Smita - HDFCCA_027 - Name Change Event Related Chks*/

  /*Smita - HDFCCA_009 - Buy Back Event Related Chks*/
  if (strcmp(chr_h_rtv_evt_class,EVT_BUY_BACK) == 0)
  {
	APL_IF_DEBUG
	{
		printf("Checking Details for |%s| Event in Auth Mode \n",chr_h_rtv_evt_class);
	}

		EXEC SQL SELECT DEPO_CODE,DEPO_PART_CODE INTO :h_depo_code,:h_depo_part_code		
					FROM CAEVENT
					WHERE CORP_ID =:p_ca_caevnt_aut_struct_h->h_corp_id;

		IS_ANY_ORA_ERROR

		strcpy(l_ca_caevent_struct_h->h_depo_code,h_depo_code);
		strcpy(l_ca_caevent_struct_h->h_depo_part_code,h_depo_part_code);
		strcpy(l_ca_caevent_struct_h->h_evt_class,chr_h_rtv_evt_class);

		int_retval = CA_ChkEventDetails( 	l_ca_caevent_struct_h,
						 								&int_p_result,
						 								p_intlenv_data_struct_h,
														l_debug_info_ptr);

		if (	(int_p_result == ERR_DEPO_PART_NOTFND) ||
			   (int_p_result == ERR_DEPO_PART_UNAUTH) ||
			   (int_p_result == ERR_INVALID_CODE)	)
			APL_GOBACK_FAIL
	}
  /*Smita - HDFCCA_009 - Buy Back Event Related Chks*/

  /*Smita - HDFCCA_004 - Capital Reduction Event*/
  if (strcmp(chr_h_rtv_evt_class,EVT_CAP_RED) == 0)
  {
	  APL_IF_DEBUG
	  {
		  printf("Checking Details for |%s| Event in Reset Mode \n",chr_h_rtv_evt_class);
	  }
	  EXEC SQL SELECT DISP_OF_FRACT,DIVIDEND_TYPE INTO :h_disp_of_fract:i_disp_of_fract,:h_div_class:i_div_class
		  			FROM CAEVENT
					WHERE CORP_ID =:p_ca_caevnt_aut_struct_h->h_corp_id;

	  IS_ANY_ORA_ERROR

	  strcpy(l_ca_caevent_struct_h->h_disp_of_fract,h_disp_of_fract);
	  strcpy(l_ca_caevent_struct_h->h_div_class,h_div_class);
	  strcpy(l_ca_caevent_struct_h->h_evt_class,chr_h_rtv_evt_class);

	  if (	(strcmp(l_ca_caevent_struct_h->h_div_class,RED_TYP_UNITS) 		!=0) 	&&
		  		(strcmp(l_ca_caevent_struct_h->h_div_class,RED_TYP_FACEVAL) 	!=0)	&&
				(strcmp(l_ca_caevent_struct_h->h_div_class,RED_TYP_BOTH)		!=0)	)
	  {
		  APL_IF_DEBUG
		  {
			  printf("Reduction Type Not Valid\n");
		  }
		  int_p_result = ERR_INVALID_CODE;
		  APL_GOBACK_FAIL		  
	  }
	  int_retval = CA_ChkEventDetails	(	l_ca_caevent_struct_h, // AIX - Warnings
			  											&int_p_result,
														p_intlenv_data_struct_h,
														l_debug_info_ptr);
	  if (int_retval == ERR_INVALID_CODE)
		  APL_GOBACK_FAIL
	  else
		  APL_IF_DEBUG
		  {
			  printf("Successfully checked Event Details\n");
		  }
  }
  /*Smita - HDFCCA_004 - Capital Reduction Event*/

	if	(	CA_Mod_EventRec(	l_ca_caeventimg_struct_h,
											l_ca_caevent_struct_i,
											h_ora_rowid,
											l_debug_info_ptr
										)	==	APL_FAILURE)
			APL_GOBACK_FAIL	

	EXEC SQL DELETE
	FROM CAEVENTMG
	WHERE ROWID=:chr_h_rowidimg;

	IS_ANY_ORA_ERROR

	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
	{
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);
			
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventRst successfully",NULL,p_intlenv_data_struct_h);
			}
			
			return (APL_SUCCESS);
	}
	RETURN_FAILURE	:
	{
			APL_FREE(l_ca_caeventimg_struct_h);
			APL_FREE(l_ca_caevent_struct_i);
			
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_EventRst unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			
			return (APL_FAILURE);
	}
}

