  /*Copyright 2005 Polaris Software Lab Limited. All rights reserved.
      These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 * Module Name         : MASTERS MAINTAINANCE
 *
 * File Name           : MT_DbUpdStlcal.pc
 *
 * Description         : This file contains all functions for maintenance of
 *                        Settlement Calendar details
 *
 *
 *
 *            Version Control Block
 *
 * Date                    Version               Author                    Description
 * ---------              --------              ---------------            ------------------------ 
 *14/12/2005              1.0                   Manik Trivedi              NEW FILE RFSNo HDFCMT_008
 *24/11/2011                                    shyam panchal              changes done for payin/payout modification
 *
 *********************************************************************/

#include  "CO_IndStructdef.h"
#include  "Intellect_Common.h"
#include  "MT_Interface.h"
#include  "sqlca.h"
#include  "CO_Commdef.h"
#include  "Intellect_Error.h" 
   
int MT_UpdSetlCalFn(MT_SETTLCAL_STRUCT_H *p_mt_settlcal_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

		  MT_SETTLCAL_STRUCT_I *l_mt_settlcal_struct_i;
		  struct sqlca sqlca;
		  char chr_acc_stamp_compare[APL_DATE_LEN];
		  char chr_sys_time_stamp[APL_DATE_LEN];
		  short l_maker, l_makerdt, l_checker, l_checkerdt, l_access_stamp;
		  short l_access_stamp_compare;
		  int int_error_flag = APL_SUCCESS;
		  int int_ret_val = 0;
                 /* Added by Gouse - ISKB_6114 - Unable to Auth deleted records - Start */
                   int int_rec_count = 0;
                 /* Added by Gouse - ISKB_6114 - Unable to Auth deleted records - End */

		  #ifdef APL_THREADS
		 		    APL_SET_CONTEXT
					 EXEC SQL CONTEXT USE :my_ctx_local;
		  #endif

		  l_mt_settlcal_struct_i =(MT_SETTLCAL_STRUCT_I *)calloc(1,sizeof(MT_SETTLCAL_STRUCT_I));
		  l_maker =0;
		  l_makerdt =0;
		  l_checker =0;
		  l_checkerdt =0;
		  l_access_stamp =0;
		  l_access_stamp_compare =0;

		  APL_IF_DEBUG
		  {
					 CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_UpdSetlCalFn\n",NULL,p_intl_envdatastruct_h);
		  }

		  if (!strlen(p_mt_settlcal_struct_h->h_exch_code)) l_mt_settlcal_struct_i->i_exch_code =-1;
		  else l_mt_settlcal_struct_i->i_exch_code =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_cc_id)) l_mt_settlcal_struct_i->i_cc_id =-1;
		  else l_mt_settlcal_struct_i->i_cc_id=0;
		  if (!strlen(p_mt_settlcal_struct_h->h_settl_type)) l_mt_settlcal_struct_i->i_settl_type =-1;
		  else l_mt_settlcal_struct_i->i_settl_type =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_start_date)) l_mt_settlcal_struct_i->i_start_date =-1;
		  else l_mt_settlcal_struct_i->i_start_date =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_end_date)) l_mt_settlcal_struct_i->i_end_date =-1;
		  else l_mt_settlcal_struct_i->i_end_date=0;
		  if (!strlen(p_mt_settlcal_struct_h->h_nsdl_deadline_dt)) l_mt_settlcal_struct_i->i_nsdl_deadline_dt =-1;
		  else l_mt_settlcal_struct_i->i_nsdl_deadline_dt =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_nsdl_deadline_tm)) l_mt_settlcal_struct_i->i_nsdl_deadline_tm=-1;
		  else l_mt_settlcal_struct_i->i_nsdl_deadline_tm =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_pay_in_dt)) l_mt_settlcal_struct_i->i_pay_in_dt=-1;
		  else l_mt_settlcal_struct_i->i_pay_in_dt=0;
		  if (!strlen(p_mt_settlcal_struct_h->h_pay_out_dt)) l_mt_settlcal_struct_i->i_pay_out_dt =-1;
		  else l_mt_settlcal_struct_i->i_pay_out_dt =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_auction_dt)) l_mt_settlcal_struct_i->i_auction_dt=-1;
		  else l_mt_settlcal_struct_i->i_auction_dt =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_maker)) l_mt_settlcal_struct_i->i_maker =-1;
		  else l_mt_settlcal_struct_i->i_maker =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_maker_dt)) l_mt_settlcal_struct_i->i_maker_dt =-1;
		  else l_mt_settlcal_struct_i->i_maker_dt =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_access_stamp)) l_mt_settlcal_struct_i->i_access_stamp =-1;
		  else l_mt_settlcal_struct_i->i_access_stamp =0;
		  if (!strlen(p_mt_settlcal_struct_h->h_status)) l_mt_settlcal_struct_i->i_status =-1;
		  else l_mt_settlcal_struct_i->i_status =0;

		  if(CO_RtvSysDtTime(chr_sys_time_stamp,l_debug_info_ptr) !=APL_SUCCESS)
		  {
					 APL_GOBACK_FAIL
		  }

		  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
		  {
					 APL_IF_DEBUG
					 {
								CO_ProcMonitor(APL_OUT_FILE, "Entered Input h_mode of Function MT_UpdSetlCalFn\n",
													 NULL,p_intl_envdatastruct_h);
					 }

					 /*Amol ---File Upload*/

					 if(strcmp(p_intl_envdatastruct_h->usr,"GFU"))
					 {
						 strcpy(p_mt_settlcal_struct_h->h_status,STATUS_UAUTH);
						 l_mt_settlcal_struct_i->i_status =0;
						 strcpy(p_mt_settlcal_struct_h->h_maker,p_intl_envdatastruct_h->usr);
						 l_mt_settlcal_struct_i->i_maker =0;
						 strcpy(p_mt_settlcal_struct_h->h_maker_dt,chr_sys_time_stamp);
						 l_mt_settlcal_struct_i->i_maker_dt =0;
						 strcpy(p_mt_settlcal_struct_h->h_access_stamp,chr_sys_time_stamp);
						 l_mt_settlcal_struct_i->i_access_stamp =0;
						 strcpy(p_mt_settlcal_struct_h->h_checker,APL_NULL_STRING);
						 strcpy(p_mt_settlcal_struct_h->h_checker_dt,APL_NULL_STRING);
					}

					 APL_IF_DEBUG
					 {	
								printf(" p_mt_settlcal_struct_h->h_exch_code %s ",p_mt_settlcal_struct_h->h_exch_code);
								printf(" p_mt_settlcal_struct_h->h_settl_no %s ",p_mt_settlcal_struct_h->h_settl_no);
								printf(" p_mt_settlcal_struct_h->h_cc_id %s ",p_mt_settlcal_struct_h->h_cc_id);
								printf(" p_mt_settlcal_struct_h->h_settl_type %s ",p_mt_settlcal_struct_h->h_settl_type);
								printf(" p_mt_settlcal_struct_h->h_start_date %s ",p_mt_settlcal_struct_h->h_start_date);
								printf(" p_mt_settlcal_struct_h->h_end_date %s ",p_mt_settlcal_struct_h->h_end_date);
								printf(" p_mt_settlcal_struct_h->h_nsdl_deadline_dt %s ",p_mt_settlcal_struct_h->h_nsdl_deadline_dt);
								printf(" p_mt_settlcal_struct_h->h_nsdl_deadline_tm %s ",p_mt_settlcal_struct_h->h_nsdl_deadline_tm);
								printf(" p_mt_settlcal_struct_h->h_pay_in_dt %s ",p_mt_settlcal_struct_h->h_pay_in_dt);
								printf(" p_mt_settlcal_struct_h->h_pay_out_dt %s ",p_mt_settlcal_struct_h->h_pay_out_dt);
								printf(" p_mt_settlcal_struct_h->h_auction_dt %s ",p_mt_settlcal_struct_h->h_auction_dt);
								printf(" p_mt_settlcal_struct_h->h_maker %s ",p_mt_settlcal_struct_h->h_maker);
								printf(" p_mt_settlcal_struct_h->h_maker_dt %s ",p_mt_settlcal_struct_h->h_maker_dt);
								printf(" p_mt_settlcal_struct_h->h_access_stamp %s ",p_mt_settlcal_struct_h->h_access_stamp);
								printf(" p_mt_settlcal_struct_h->h_checker %s ",p_mt_settlcal_struct_h->h_checker);
								printf(" p_mt_settlcal_struct_h->h_checker_dt %s ",p_mt_settlcal_struct_h->h_checker_dt);
								printf(" p_mt_settlcal_struct_h->h_status %s ",p_mt_settlcal_struct_h->h_status);

					 }
                                         /* Added by Gouse - ISKB_6114 - Unable to Auth deleted records - Start */
                                           EXEC SQL select NVL(count(*),0) into :int_rec_count from MT_SETTL_CAL
						  where EXCH_CODE =:p_mt_settlcal_struct_h->h_exch_code
						  AND SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no AND SETTL_TYPE =:p_mt_settlcal_struct_h->h_settl_type;
					IS_ANY_ORA_ERROR

					if(int_rec_count>0)
					{
						printf("Inside Count > 0 : Count is %d ",int_rec_count);
						if (CO_InsertErr(l_debug_info_ptr,
								ERR_STLMENTCAL_EXISTS,
                                                                p_mt_settlcal_struct_h->h_exch_code,
							        p_mt_settlcal_struct_h->h_settl_no,	
								p_mt_settlcal_struct_h->h_settl_type,
								__LINE__,
								__FILE__
								) != APL_SUCCESS)
						APL_GOBACK_FAIL
					}
					else
					{
					/* Added by Gouse - ISKB_6114 - Unable to Auth deleted records - End */
					 EXEC SQL INSERT INTO MT_SETTL_CAL VALUES (:p_mt_settlcal_struct_h:l_mt_settlcal_struct_i);
					 IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_STLMENTCAL_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
					}

/*Added by siva.ganapthi for the Issue ISKB_3049 on 24/11/2009 started */

/* Added in Kotak to insert record for T2T by default - JC - 18-04-2008 -- Start */
/* RETRO FROM EMERFIX TO DEV - HDFC - BY AMISH  10/02/2007 */
         /* Begining of HDFC specific condition check block: Add by ASHISH KUMAR VASISTH, 19 Dec,2006 -HBDL_008 */

         IF_COND_EXISTS("MARKET_TYPE","MKT_TYPE") 
         {      
                /* Comarision of exchange code with BSE or NSE */
		
			if(!strcmp(p_intl_envdatastruct_h->usr,"GFU"))
			 {
				Alert("\n before inserting one more record for t2t market type\n");

			/* Condition of previus market type addition : ASHISH 05-04-2007 */
			/* changes by amish -- 07/08/2007  - start*/
				if( (!strcmp(p_mt_settlcal_struct_h->h_exch_code,"BSE") && (strcmp(p_mt_settlcal_struct_h->h_settl_type,"5")==0 || strcmp(p_mt_settlcal_struct_h->h_settl_type,"41")==0)) || (!strcmp(p_mt_settlcal_struct_h->h_exch_code,"NSE") && (strcmp(p_mt_settlcal_struct_h->h_settl_type,"13")==0  || strcmp(p_mt_settlcal_struct_h->h_settl_type,"49")==0)) || (!strcmp(p_mt_settlcal_struct_h->h_exch_code,"MCS") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"01")==0)  || (strcmp(p_mt_settlcal_struct_h->h_settl_type,"55")==0) || (strcmp(p_mt_settlcal_struct_h->h_settl_type,"45")==0) )   /*Priyanka - MCS-SX Enhancement */
				{

					  if(!strcmp(p_mt_settlcal_struct_h->h_exch_code,"BSE") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"5")==0) /* When exchange code is BSE */
					  {
								strcpy(p_mt_settlcal_struct_h->h_settl_type,"16"); /* Market type for BSE=16 */
					  }
					  if(!strcmp(p_mt_settlcal_struct_h->h_exch_code,"BSE") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"41")==0) /* When exchange code is BSE */
					  {
						  
								strcpy(p_mt_settlcal_struct_h->h_settl_type,"17"); /* Market type for BSE=16 */
					  }


					 if(!strcmp(p_mt_settlcal_struct_h->h_exch_code,"NSE") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"13")==0) /* When exchange code is NSE */
					  {
								strcpy(p_mt_settlcal_struct_h->h_settl_type,"22");  /* Market type for  NSE=22 */
					  }	
                      if(!strcmp(p_mt_settlcal_struct_h->h_exch_code,"NSE") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"49")==0) /* When exchange code is NSE */
					  {
						   
								strcpy(p_mt_settlcal_struct_h->h_settl_type,"50");  /* Market type for  NSE=22 */
					  }
					  
					  if(!strcmp(p_mt_settlcal_struct_h->h_exch_code,"BSE") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"45")==0) /* When exchange code is BSE for T0 */
					  {
								strcpy(p_mt_settlcal_struct_h->h_settl_type,"57"); /* Changes by rahul6 for T0 */
					  }
					  
					   if(!strcmp(p_mt_settlcal_struct_h->h_exch_code,"NSE") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"55")==0) /* When exchange code is NSE for T0 */
					  {
								strcpy(p_mt_settlcal_struct_h->h_settl_type,"56");  /* Changes by rahul6 for T0 */
					  }
					  /*Priyanka - MCS-SX Enhancement -start*/
				     if(!strcmp(p_mt_settlcal_struct_h->h_exch_code,"MCS") && strcmp(p_mt_settlcal_struct_h->h_settl_type,"01")==0) 
					  {
						 strcpy(p_mt_settlcal_struct_h->h_settl_type,"03"); 
					  }
					  /*Priyanka - MCS-SX Enhancement - end*/

							   /* End of exchange code comparision */
	 
					/* Reinsertion of exchange code values for HDFC specific */
		 
					EXEC SQL INSERT INTO MT_SETTL_CAL VALUES (:p_mt_settlcal_struct_h:l_mt_settlcal_struct_i);
					 printf("\n after inserting one more record for t2t market type sqlca.sqlcode is |%d|\n",sqlca.sqlcode);

					//	IS_ANY_ORA_ERROR

					 IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_STLMENTCAL_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
				}
				/* changes by amish -- 07/08/2007 - end */
			}
         }
           
     /* End of HDFC specific condition block */

/* Added in Kotak to insert record for T2T by default - JC - 18-04-2008 -- End */

/*Added by siva.ganapthi for the Issue ISKB_3049 on 24/11/2009 Ended */
		  }

		  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
		  {
					 l_checker =-1;
					 l_checkerdt =-1;
					 strcpy(p_mt_settlcal_struct_h->h_checker,APL_NULL_STRING);
					 strcpy(p_mt_settlcal_struct_h->h_checker_dt,APL_NULL_STRING);
					 CO_ProcMonitor(APL_OUT_FILE, "Entered Modify h_mode of Function  MT_UpdSetlCalFn\n",NULL,p_intl_envdatastruct_h);

        /***** Start : Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 *****/
        IF_COND_EXISTS("DL_SETTL_NO","SETTL_NO_VAL")
		{
			EXEC SQL 
			SELECT TO_CHAR(ACCESS_STAMP,'DD/MM/YYYY HH:MI:SS'), STATUS
			INTO :chr_acc_stamp_compare:l_access_stamp_compare, :p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status
			FROM  MT_SETTL_CAL
			WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no 
				AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code 
				AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type 
			FOR UPDATE;
			
			IS_ANY_ORA_ERROR;
			printf("\nAccess stamp and status selected after considering Market or Settlement type");
		}
		else
		{
	          /***** End : Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 *****/
					 EXEC SQL SELECT TO_CHAR(ACCESS_STAMP,'DD/MM/YYYY HH:MI:SS'), STATUS
								INTO   :chr_acc_stamp_compare:l_access_stamp_compare,
										 :p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status
													FROM  MT_SETTL_CAL
                                          WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no 
											AND  EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code

													FOR UPDATE;
					 IS_ANY_ORA_ERROR;
		}
               
					 if (!strcmp(p_mt_settlcal_struct_h->h_access_stamp,chr_acc_stamp_compare))
					 {
								if(strcmp(p_mt_settlcal_struct_h->h_status,STATUS_DEL_UAUTH))
								{
										  strcpy(p_mt_settlcal_struct_h->h_access_stamp,chr_sys_time_stamp);
										  l_mt_settlcal_struct_i->i_access_stamp =0;
										  strcpy(p_mt_settlcal_struct_h->h_status,STATUS_UAUTH);
										  l_mt_settlcal_struct_i->i_status =0;
										  strcpy(p_mt_settlcal_struct_h->h_maker,p_intl_envdatastruct_h->usr);
										  l_mt_settlcal_struct_i->i_maker =0;

										  EXEC SQL UPDATE MT_SETTL_CAL SET 
													 CC_ID=:p_mt_settlcal_struct_h->h_cc_id:l_mt_settlcal_struct_i->i_cc_id,
													 SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type:l_mt_settlcal_struct_i->i_settl_type,
													 START_DATE =:p_mt_settlcal_struct_h->h_start_date:l_mt_settlcal_struct_i->i_start_date,
													 END_DATE=:p_mt_settlcal_struct_h->h_end_date:l_mt_settlcal_struct_i->i_end_date,
													 NSDL_DEADLINE_DT=:p_mt_settlcal_struct_h->h_nsdl_deadline_dt:l_mt_settlcal_struct_i->i_nsdl_deadline_dt,
													 NSDL_DEADLINE_TM=:p_mt_settlcal_struct_h->h_nsdl_deadline_tm:l_mt_settlcal_struct_i->i_nsdl_deadline_tm,
													 PAY_IN_DT=:p_mt_settlcal_struct_h->h_pay_in_dt:l_mt_settlcal_struct_i->i_pay_in_dt,
													 PAY_OUT_DT=:p_mt_settlcal_struct_h->h_pay_out_dt:l_mt_settlcal_struct_i->i_pay_out_dt,
													 AUCTION_DT=:p_mt_settlcal_struct_h->h_auction_dt:l_mt_settlcal_struct_i->i_auction_dt,
													 MAKER =:p_intl_envdatastruct_h->usr:l_maker,
													 MAKER_DT =:chr_sys_time_stamp:l_makerdt,
													 CHECKER =:p_mt_settlcal_struct_h->h_checker:l_checker,
													 CHECKER_DT =:p_mt_settlcal_struct_h->h_checker_dt:l_checkerdt,
													 STATUS =:p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status,
													 ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp
																WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no
                                           AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code  
										   AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type; /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007*/
										  IS_ANY_ORA_ERROR;
								}
								else
								{
										  if (CO_InsertErr
																(l_debug_info_ptr,
																 ERR_STLMENTCALMOD_NOTALLOWED,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 __LINE__,
																 __FILE__
																) != APL_SUCCESS)
																APL_GOBACK_FAIL
								}
					 }
					 else
					 {
								if (CO_InsertErr
													 (l_debug_info_ptr,
													  ERR_ACCESSSTAMP_CHGD,
													  APL_NULL_STRING,
													  APL_NULL_STRING,
													  APL_NULL_STRING,
													  __LINE__,
													  __FILE__
													 ) != APL_SUCCESS)
													 APL_GOBACK_FAIL
					 }
		  }
		  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
		  {
					 APL_IF_DEBUG
					 {
								CO_ProcMonitor(APL_OUT_FILE, "Entered Authorize h_mode of Function MT_UpdSetlCalFn\n",
													 NULL,p_intl_envdatastruct_h);
					 }
					 memset(p_mt_settlcal_struct_h->h_status, NULL, APL_STATUS_LEN);

					 EXEC SQL SELECT TO_CHAR(ACCESS_STAMP,'DD/MM/YYYY HH:MI:SS'), STATUS
								INTO   :chr_acc_stamp_compare:l_access_stamp_compare,
										 :p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status
													FROM  MT_SETTL_CAL
													WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no
                                     AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code
													AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type  /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */
													FOR UPDATE;
					 IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_STLMENTCAL_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
								IS_ANY_ORA_ERROR
								if (!strcmp(p_mt_settlcal_struct_h->h_access_stamp,chr_acc_stamp_compare))
								{
										  if(strcmp(p_mt_settlcal_struct_h->h_status,STATUS_DEL_UAUTH))
										  {
													 strcpy(p_mt_settlcal_struct_h->h_access_stamp,chr_sys_time_stamp);
													 l_mt_settlcal_struct_i->i_access_stamp =0;
													 strcpy(p_mt_settlcal_struct_h->h_checker,p_intl_envdatastruct_h->usr);
													 l_mt_settlcal_struct_i->i_checker=0;
													 strcpy(p_mt_settlcal_struct_h->h_checker_dt,chr_sys_time_stamp);
													 l_mt_settlcal_struct_i->i_checker_dt=0;
													 strcpy(p_mt_settlcal_struct_h->h_status,STATUS_AUTH);
													 l_mt_settlcal_struct_i->i_status =0;
													 EXEC SQL UPDATE MT_SETTL_CAL SET
																CHECKER =:p_intl_envdatastruct_h->usr:l_checker,
																		  CHECKER_DT =:chr_sys_time_stamp:l_checkerdt,
																		  ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp,
																		  STATUS =:p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status
																					 WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no
                                           AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code 
															AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type;  /* Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */
													 IS_ANY_ORA_ERROR;
				printf("Gouse :: p_mt_settlcal_struct_h->h_settl_no is |%s|\n",p_mt_settlcal_struct_h->h_settl_no);
printf("Gouse :: p_mt_settlcal_struct_h->h_exch_code is |%s|\n",p_mt_settlcal_struct_h->h_exch_code);
printf("Gouse :: p_mt_settlcal_struct_h->h_settl_type is |%s|\n",p_mt_settlcal_struct_h->h_settl_type);
                                                     
                                                     /* added by shyam for payin and payout date modification on 24/11/11 */
                                                     if(APL_SUCCESS == UpdDealPayInPayOutDt(p_mt_settlcal_struct_h,p_intl_envdatastruct_h ,l_debug_info_ptr))
                                                     {
                                                        CO_ProcMonitor(APL_OUT_FILE, "PAYIN/PAYOUT dates of Corresponding Deals of DL_DEAL and DL_SQOFF tables are updated.\n",NULL,NULL);
                                                     }
													                                                      
										  }
										  else
										  {
													 EXEC SQL DELETE MT_SETTL_CAL
																WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code
														 AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type ;  /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */
													 IS_ANY_ORA_ERROR
										  }
								}
								else
								{
										  if (CO_InsertErr
																(l_debug_info_ptr,
																 ERR_ACCESSSTAMP_CHGD,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 __LINE__,
																 __FILE__
																) != APL_SUCCESS)
																APL_GOBACK_FAIL
								}
		  }
		  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
		  {
					 APL_IF_DEBUG
					 {
								CO_ProcMonitor(APL_OUT_FILE, "Entered Reset h_mode of Function MT_UpdSetlCalFn\n",
													 NULL,p_intl_envdatastruct_h);
					 }
					 	
			       memset(p_mt_settlcal_struct_h->h_status, NULL, APL_STATUS_LEN);

					 EXEC SQL SELECT TO_CHAR(ACCESS_STAMP,'DD/MM/YYYY HH:MI:SS'),STATUS
								INTO   :chr_acc_stamp_compare:l_access_stamp_compare,
										 :p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status
													FROM MT_SETTL_CAL
													WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no
													AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code
													AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type  /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */
													FOR UPDATE ;
					 IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_STLMENTCAL_EXISTS,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
								IS_ANY_ORA_ERROR

								if (!strcmp(p_mt_settlcal_struct_h->h_access_stamp,chr_acc_stamp_compare))
								{
										  
										  if(!strcmp(p_mt_settlcal_struct_h->h_status,STATUS_DEL_UAUTH))
										  {
 
													 strcpy(p_mt_settlcal_struct_h->h_access_stamp,chr_sys_time_stamp);
													 l_mt_settlcal_struct_i->i_access_stamp =0;
													 strcpy(p_mt_settlcal_struct_h->h_checker,p_intl_envdatastruct_h->usr);
													 l_mt_settlcal_struct_i->i_checker=0;
													 strcpy(p_mt_settlcal_struct_h->h_checker_dt,chr_sys_time_stamp);
													 l_mt_settlcal_struct_i->i_checker_dt=0;
													 strcpy(p_mt_settlcal_struct_h->h_status,STATUS_AUTH);
													 l_mt_settlcal_struct_i->i_status =0;
													 	
													 EXEC SQL UPDATE MT_SETTL_CAL SET
																CHECKER =:p_intl_envdatastruct_h->usr:l_checker,
															   CHECKER_DT =:chr_sys_time_stamp:l_checkerdt,
															   ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp,
															   STATUS =:p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no
                                           AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code 
															AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type ;  /*Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */
													 IS_ANY_ORA_ERROR;
										  }
										  else
										  {
													 if (CO_InsertErr
																		  (l_debug_info_ptr,
																			ERR_STLMENTCALRESET_NOTALLOWED,
																			APL_NULL_STRING,
																			APL_NULL_STRING,
																			APL_NULL_STRING,
																			__LINE__,
																			__FILE__
																		  ) != APL_SUCCESS)
																APL_GOBACK_FAIL
										  }
								}
								else
								{
										  if (CO_InsertErr
																(l_debug_info_ptr,
																 ERR_ACCESSSTAMP_CHGD,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 __LINE__,
																 __FILE__
																) != APL_SUCCESS)
													 APL_GOBACK_FAIL
								}
		  }

		  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
		  {
					 l_checker =-1;
					 l_checkerdt =-1;
					 strcpy(p_mt_settlcal_struct_h->h_checker,APL_NULL_STRING);
					 strcpy(p_mt_settlcal_struct_h->h_checker_dt,APL_NULL_STRING);
					 APL_IF_DEBUG
					 {
								CO_ProcMonitor(APL_OUT_FILE, "Entered Delete h_mode of Function  MT_UpdSetlCalFn\n",
													 NULL,p_intl_envdatastruct_h);
					 }
					 
					 EXEC SQL SELECT TO_CHAR(ACCESS_STAMP,'DD/MM/YYYY HH:MI:SS')
								INTO :chr_acc_stamp_compare:l_access_stamp_compare
								FROM MT_SETTL_CAL
								WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no 
                      AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code
								AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type  /* Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007*/
								FOR UPDATE ;
					 IS_ANY_ORA_ERROR
								if (!strcmp(p_mt_settlcal_struct_h->h_access_stamp,chr_acc_stamp_compare))
								{
										  strcpy(p_mt_settlcal_struct_h->h_access_stamp,chr_sys_time_stamp);
										  l_mt_settlcal_struct_i->i_access_stamp =0;
										  strcpy(p_mt_settlcal_struct_h->h_status,STATUS_DEL_UAUTH);
										  l_mt_settlcal_struct_i->i_status =0;
										  EXEC SQL UPDATE MT_SETTL_CAL SET
													 MAKER =:p_intl_envdatastruct_h->usr:l_maker,
															 MAKER_DT =:chr_sys_time_stamp:l_makerdt,
															 CHECKER =:p_intl_envdatastruct_h->usr:l_checker,
															 CHECKER_DT =:chr_sys_time_stamp:l_checkerdt,
															 ACCESS_STAMP =:chr_sys_time_stamp:l_access_stamp,
															 STATUS =:p_mt_settlcal_struct_h->h_status:l_mt_settlcal_struct_i->i_status WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no
                                           AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code 
															AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type ;  /* Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */
										  IS_ANY_ORA_ERROR
								}
								else
								{
										  if (CO_InsertErr
																(l_debug_info_ptr,
																 ERR_ACCESSSTAMP_CHGD,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 APL_NULL_STRING,
																 __LINE__,
																 __FILE__
																) != APL_SUCCESS)
													 APL_GOBACK_FAIL
								}
		  }          
		  
		  if (int_error_flag == APL_FAILURE)
		  {
					 APL_GOBACK_FAIL
		  }
		  APL_GOBACK_SUCCESS
 		  
		  RETURN_SUCCESS :
 	     {
								CO_ProcMonitor(APL_OUT_FILE, "Function MT_UpdSetlCalFn successful\n",NULL,p_intl_envdatastruct_h);
								free(l_mt_settlcal_struct_i);
								return(APL_SUCCESS);
		  }
		  
        RETURN_FAILURE :
		  {
					 CO_ProcMonitor(APL_OUT_FILE, "Function MT_UpdSetlCalFn successful\n",NULL,p_intl_envdatastruct_h);
					 free(l_mt_settlcal_struct_i);
					 return(APL_FAILURE);
		  }
}


int MT_MkrChkr_Stlment(char *p_settl_no,char *p_exch_code,char *p_settl_type,char *p_user,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)  /* RETRO FROM EMERFIX TO DEV - HDFC - BY AMISH  10/02/2007  */
{
		  struct sqlca sqlca;
		  char l_maker[15];
		  short i_maker = 0;
		  int int_error_flag = APL_SUCCESS;

		  #ifdef APL_THREADS
		  			 APL_SET_CONTEXT
					 EXEC SQL CONTEXT USE :my_ctx_local;
		  #endif

		  APL_IF_DEBUG
		  {
					 CO_ProcMonitor(APL_OUT_FILE, "Entered Function MT_MkrChkr_Stlment\n",NULL,NULL);
		  }


		  if (!strlen(p_settl_no))
		  {
					 APL_DATA_MISSING("Settlement Number",APL_NULL_STRING,APL_NULL_STRING);
					 int_error_flag = APL_FAILURE;
		  }

		  if (!strlen(p_user))
		  {
					 APL_DATA_MISSING("User",APL_NULL_STRING,APL_NULL_STRING);
					 int_error_flag = APL_FAILURE;
		  }


		  if (int_error_flag == APL_FAILURE)
		  {
					 APL_GOBACK_FAIL
		  } 
        /***** Start : Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 *****/
		IF_COND_EXISTS("DL_SETTL_NO","SETTL_NO_VAL")
		{
		  EXEC SQL VAR l_maker IS STRING(15);
		  EXEC SQL SELECT MAKER
					 INTO :l_maker:i_maker
					 FROM MT_SETTL_CAL
					 WHERE SETTL_NO =:p_settl_no  AND EXCH_CODE=:p_exch_code AND SETTL_TYPE=:p_settl_type;

		  IS_ANY_ORA_ERROR
		}
		else
		{
                 /***** End : Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 *****/			
		  EXEC SQL VAR l_maker IS STRING(15);
		  EXEC SQL SELECT MAKER
					 INTO :l_maker:i_maker
					 FROM MT_SETTL_CAL
					 WHERE SETTL_NO =:p_settl_no  AND EXCH_CODE=:p_exch_code;

		  IS_ANY_ORA_ERROR
		} 




					 if (strcmp(p_user,l_maker)==0)
					 {
								if (CO_InsertErr
													 (l_debug_info_ptr,
													  ERR_MAKER_CHECKER_SAME,
													  APL_NULL_STRING,
													  APL_NULL_STRING,
													  APL_NULL_STRING,
													  __LINE__,
													  __FILE__
													 ) == APL_SUCCESS)
										  APL_GOBACK_FAIL
													 int_error_flag = APL_FAILURE;
					 }

		  if (int_error_flag == APL_FAILURE)
		  {
					 APL_GOBACK_FAIL
		  }

		  APL_GOBACK_SUCCESS


		 RETURN_SUCCESS :
		 {
								APL_IF_DEBUG
								{
										  CO_ProcMonitor(APL_OUT_FILE, "MT_MkrChkr_Stlment Successful\n",NULL,NULL);
								}

								return(APL_SUCCESS);
		 }

		  RETURN_FAILURE :
		  {
					 APL_IF_DEBUG
					 {
								CO_ProcMonitor(APL_OUT_FILE, "MT_MkrChkr_Stlment unsuccessful\n",NULL,NULL);
					 }

					 return(APL_FAILURE);
		  }


} 

int ChkStlmentCal(MT_SETTLCAL_STRUCT_H *p_mt_settlcal_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		  struct sqlca   sqlca;
		  int      l_instr_count = 0;



		  #ifdef APL_THREADS
		          APL_SET_CONTEXT
					 EXEC SQL CONTEXT USE :my_ctx_local;
        #endif

		  APL_IF_DEBUG
		  {
					 CO_ProcMonitor(APL_OUT_FILE,"Entered Processation ChkStlmentCal \n",NULL,NULL);
		  }

		  sqlca.sqlcode = 0;

		  EXEC SQL SELECT NVL(COUNT(*),0) INTO :l_instr_count
					 FROM  MT_SETTL_CAL
					 WHERE SETTL_NO =:p_mt_settlcal_struct_h->h_settl_no 
					AND SETTL_TYPE=:p_mt_settlcal_struct_h->h_settl_type 
					AND EXCH_CODE=:p_mt_settlcal_struct_h->h_exch_code;  /* Retro with HDFC to add Settl Type in Query - Rahul - 01-Apr-2007 */

		  if (l_instr_count == 0)
		  {
					 if(CO_InsertErr(
													 l_debug_info_ptr,
													 ERR_STLMENTCAL_NOTFND,
													 APL_NULL_STRING,
													 APL_NULL_STRING,
													 APL_NULL_STRING,
													 __LINE__,
													 __FILE__
										 ) != APL_SUCCESS)
								APL_GOBACK_FAIL
		  }

		  if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
		  {
					 APL_GOBACK_FAIL
		  }
		  else
					 APL_GOBACK_SUCCESS


								RETURN_SUCCESS :
								{
										  APL_IF_DEBUG
													 CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion ChkStlmentCal with Success\n",NULL,p_intl_envdatastruct_h);
										  return(APL_SUCCESS);
								}

RETURN_FAILURE :
		  {
					 APL_IF_DEBUG
								CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion ChkStlmentCal with Failure\n",NULL,p_intl_envdatastruct_h);
					 return(APL_FAILURE);
		  }
}

/* added by shyam for payin/payout date modification on 24/11/11*/
int UpdDealPayInPayOutDt(MT_SETTLCAL_STRUCT_H *p_mt_settlcal_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
    struct  sqlca   sqlca;
    sqlca.sqlcode   = 0;
    
    int     l_cnt   = 0;
    short   l_cnt_i = 0;
    
    APL_IF_DEBUG
	{
        CO_ProcMonitor(APL_OUT_FILE,"Entered Processation UpdDealPayInPayOutDt \n",NULL,NULL);
	}
    
    //code for dl_deal table
    //Chgs done by Gouse for Updating MS & SS status deals also
    EXEC SQL SELECT count(*) INTO :l_cnt:l_cnt_i FROM dl_deal where settlement_no   = :p_mt_settlcal_struct_h->h_settl_no 
                                                                   and exch_code     = :p_mt_settlcal_struct_h->h_exch_code
                                                                   and mkt_type      = :p_mt_settlcal_struct_h->h_settl_type
                                                                   and deal_stat not in ('CS');
	printf("Gouse :: p_mt_settlcal_struct_h->h_settl_no is |%s|\n",p_mt_settlcal_struct_h->h_settl_no);
	printf("Gouse :: p_mt_settlcal_struct_h->h_exch_code is |%s|\n",p_mt_settlcal_struct_h->h_exch_code);
	printf("Gouse :: p_mt_settlcal_struct_h->h_settl_type is |%s|\n",p_mt_settlcal_struct_h->h_settl_type);
	printf("Gouse :: l_cnt ->is |%d|\n",l_cnt);
    IS_ANY_ORA_ERROR;
    
    if(l_cnt != 0)
    {
        CO_ProcMonitor(APL_OUT_FILE,"Updating dl_deal table for payin/payout date changed in function UpdDealPayInPayOutDt.\n",NULL,NULL);
        
        EXEC SQL UPDATE dl_deal
                    set payin_dt  = :p_mt_settlcal_struct_h->h_pay_in_dt,
                        payout_dt = :p_mt_settlcal_struct_h->h_pay_out_dt
                where settlement_no   = :p_mt_settlcal_struct_h->h_settl_no 
                    and exch_code     = :p_mt_settlcal_struct_h->h_exch_code
                    and mkt_type      = :p_mt_settlcal_struct_h->h_settl_type
                    and deal_stat not in ('CS');
        IS_ANY_ORA_ERROR;
    }
    else
        CO_ProcMonitor(APL_OUT_FILE,"Deals not found for Settlement number in dl_deal table.\n",NULL,NULL);
    
    //code for  dl_sqoff table
    l_cnt   = 0;
    l_cnt_i = 0;
    
    EXEC SQL SELECT count(*) INTO :l_cnt:l_cnt_i FROM dl_sqoff where settlemt_no    = :p_mt_settlcal_struct_h->h_settl_no 
                                                                   and exch_code    = :p_mt_settlcal_struct_h->h_exch_code;
    IS_ANY_ORA_ERROR;
    
    if(l_cnt != 0)
    {
        CO_ProcMonitor(APL_OUT_FILE,"Updating dl_sqoff table for payin/payout date changed in function UpdDealPayInPayOutDt.\n",NULL,NULL);
        
        EXEC SQL UPDATE dl_sqoff
                    set payin_dt  = :p_mt_settlcal_struct_h->h_pay_in_dt,
                        payout_dt = :p_mt_settlcal_struct_h->h_pay_out_dt
                where settlemt_no   = :p_mt_settlcal_struct_h->h_settl_no 
                    and exch_code   = :p_mt_settlcal_struct_h->h_exch_code;
        IS_ANY_ORA_ERROR;
    }
    else
        CO_ProcMonitor(APL_OUT_FILE,"Deals not found for Settlement number in dl_sqoff table.\n",NULL,NULL);
    
    RETURN_SUCCESS :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion UpdDealPayInPayOutDt with Success\n",NULL,p_intl_envdatastruct_h);
		return(APL_SUCCESS);
	}
    
    RETURN_FAILURE :
    {
        APL_IF_DEBUG
            CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion UpdDealPayInPayOutDt with Failure\n",NULL,p_intl_envdatastruct_h);
		return(APL_FAILURE);
	}
}
