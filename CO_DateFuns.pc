#include <CO_HostStructdef.h>
#include <strings.h>

EXEC SQL INCLUDE sqlca;

int Rtv_Nxt_BussDate(	char *p_current_date,
		 						char *p_nxt_date,
								char *p_exch_code,
		 						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
   struct sqlca         sqlca;
   char                 l_nxt_date[APL_DATE_LEN] = APL_NULL_STRING;
   int                  l_flag = 0;

	APL_FUNCTION_ENTER(APL_OUT_FILE)	
   sqlca.sqlcode = 0;
	
	printf("\n Inside Rtv_Nxt_BussDate Exchange Code=|%s| \n",p_exch_code);

	
	if(!strlen(p_current_date))
	{
		EXEC SQL SELECT TO_CHAR(SYS_DATE + 1,'DD/MM/YYYY HH24:MI:SS')
			INTO :l_nxt_date
			FROM PRO_SYS_DATE;
	}
	else
	{
   	EXEC SQL SELECT TO_CHAR(TO_DATE(:p_current_date,'DD/MM/YYYY HH24:MI:SS') +	1,'DD/MM/YYYY HH24:MI:SS')
   	INTO :l_nxt_date
   	FROM PRO_SYS_DATE;
	}

   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	printf("\n 31, ***** %s  ****\n",l_nxt_date); 

   while(1)
   {
      if (CO_Chk_Holiday(	l_nxt_date,
							&l_flag,
							l_debug_info_ptr,
							p_exch_code) != APL_SUCCESS)
         APL_GOBACK_FAIL
	
				printf("\n ******* 41, %d \n", l_flag );
      if (l_flag == 0)
         break;
      else
      {
         EXEC SQL SELECT TO_CHAR(TO_DATE(:l_nxt_date,'DD/MM/YYYY HH24:MI:SS')+1,'DD/MM/YYYY HH24:MI:SS')
         INTO :l_nxt_date         FROM DUAL;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
      }
   }
	printf("\n 52, %d \n", sqlca.sqlcode );
   strcpy(p_nxt_date,l_nxt_date);
   APL_GOBACK_SUCCESS
RETURN_SUCCESS:
   APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
RETURN_FAILURE:
   APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
}

int Rtv_Last_BussDate(	char *p_current_date,
		 						char *p_last_date,
		 						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
   struct sqlca         sqlca;
   char                 l_last_date[APL_DATE_LEN] = APL_NULL_STRING;
   int                  l_flag = 0;

	APL_FUNCTION_ENTER(APL_OUT_FILE)	
   sqlca.sqlcode = 0;
	
	if(!strlen(p_current_date))
	{
		EXEC SQL SELECT TO_CHAR(SYS_DATE-1,'DD/MM/YYYY HH24:MI:SS')
			INTO :l_last_date
			FROM PRO_SYS_DATE;
	}
	else
	{
   	EXEC SQL SELECT TO_CHAR(TO_DATE(:p_current_date,'DD/MM/YYYY HH24:MI:SS') -	1,'DD/MM/YYYY HH24:MI:SS')
   	INTO :l_last_date
   	FROM PRO_SYS_DATE;
	}

   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

   while(1)
   {
      if (CO_Chk_Holiday(	l_last_date,
							&l_flag,
							l_debug_info_ptr,
							APL_NULL_STRING) != APL_SUCCESS)
         APL_GOBACK_FAIL

      if (l_flag == 0)
         break;
      else
      {
         EXEC SQL SELECT TO_CHAR(TO_DATE(:l_last_date,'DD/MM/YYYY HH24:MI:SS')-1,'DD/MM/YYYY HH24:MI:SS')
         INTO :l_last_date         FROM DUAL;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
      }
   }
   strcpy(p_last_date,l_last_date);
   APL_GOBACK_SUCCESS
RETURN_SUCCESS:
   APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
RETURN_FAILURE:
   APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
}

int Chk_Holiday( char *p_date,
				 char *p_type,
				 int *p_exist,
				 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	int l_exist = 0;
	APL_FUNCTION_ENTER(APL_OUT_FILE)	

	EXEC SQL SELECT NVL(COUNT(*),0)
				INTO :p_exist
				FROM MT_HOLIDAY
				WHERE H_DATE = :p_date
				AND STATUS = 'AA'
				AND H_CLASS = :p_type;
	IS_ANY_ORA_ERROR
	*p_exist = l_exist;

APL_GOBACK_SUCCESS  // AIX -Warnings Removal
RETURN_SUCCESS:
   APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)

RETURN_FAILURE:
   APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
}
int Rtv_Nxt_Date(	char *p_ex_ph,  
						char *p_ex_wh,
						char *p_date,
						char *p_nxt_date,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	int l_exist_ph = 0;
	int l_exist_wh = 0;
	char l_nxt_date[APL_DATE_LEN] = APL_NULL_STRING;

	APL_FUNCTION_ENTER(APL_OUT_FILE)	
	
	EXEC SQL SELECT TO_DATE(:p_date,'DD/MM/YYYY HH24:MI:SS') + 1 
					INTO :l_nxt_date
					FROM DUAL;
	IS_ANY_ORA_ERROR
	printf("%s|%s| Sql |%d| bef while\n",p_date,l_nxt_date,sqlca.sqlcode);
	while(1)
	{
		if(p_ex_ph[0] == 'Y')
		{	
			if(Chk_Holiday(	l_nxt_date,
									"PH",
									&l_exist_ph,
							l_debug_info_ptr) == APL_FAILURE)
				APL_GOBACK_FAIL
		}
		if(p_ex_wh[0] == 'Y')
		{	
			if(Chk_Holiday(	l_nxt_date,
									"WH",
									&l_exist_wh,
				l_debug_info_ptr) == APL_FAILURE)
				APL_GOBACK_FAIL
		}
		if(!l_exist_ph && !l_exist_wh)
			break;
		else
		{
			EXEC SQL SELECT TO_DATE(:l_nxt_date,'DD/MM/YYYY HH24:MI:SS') + 1 
				INTO :p_nxt_date
				FROM DUAL;
			IS_ANY_ORA_ERROR
		}

	}
	strcpy(p_nxt_date,l_nxt_date);
	printf("|%s| Sql |%d|\n",p_nxt_date,sqlca.sqlcode);

APL_GOBACK_SUCCESS  // AIX -Warnings Removal
RETURN_SUCCESS:
   APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)

RETURN_FAILURE:
   APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)

}
int Rtv_Prev_Date(	char *p_ex_ph,
						char *p_ex_wh,
						char *p_date,
						char *p_lst_date,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca sqlca;
	int l_exist_ph = 0;
	int l_exist_wh = 0;
	char l_last_date[APL_DATE_LEN] = APL_NULL_STRING;

	APL_FUNCTION_ENTER(APL_OUT_FILE)	
	fprintf(APL_OUT_FILE,"Date |%s| \n",p_date);
	EXEC SQL SELECT TO_DATE(:p_date,'DD/MM/YYYY HH24:MI:SS') - 1 
					INTO :l_last_date
					FROM DUAL;
	IS_ANY_ORA_ERROR

		fprintf(APL_OUT_FILE,"Last Date |%s| \n",l_last_date);
	while(1)
	{
		fprintf(APL_OUT_FILE,"Last Date |%s| \n",l_last_date);
		if(p_ex_ph[0] == 'Y')
		{	
			if(Chk_Holiday(	l_last_date,
									"PH",
									&l_exist_ph,
							l_debug_info_ptr) == APL_FAILURE)
				APL_GOBACK_FAIL
		}
		if(p_ex_wh[0] == 'Y')
		{	
			if(Chk_Holiday(	l_last_date,
									"WH",
									&l_exist_wh,
				l_debug_info_ptr) == APL_FAILURE)
				APL_GOBACK_FAIL
		}
		if(!l_exist_ph && !l_exist_wh)
			break;
		else
		{
			EXEC SQL SELECT TO_DATE(:l_last_date,'DD/MM/YYYY HH24:MI:SS') - 1 
				INTO :l_last_date
				FROM DUAL;
			IS_ANY_ORA_ERROR
		}
	}
	strcpy(p_lst_date,l_last_date);
	fprintf(APL_OUT_FILE,"Last Date |%s| \n",p_lst_date);

APL_GOBACK_SUCCESS  // AIX -Warnings Removal
RETURN_SUCCESS:
   APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)

RETURN_FAILURE:
   APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)

}



int Rtv_Last_Date(			char *p_current_date,
							char *p_last_date,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
   struct sqlca         sqlca;
   char                 l_last_date[APL_DATE_LEN] = APL_NULL_STRING;
   int                  l_flag = 0;

	APL_FUNCTION_ENTER(APL_OUT_FILE)	
	sqlca.sqlcode = 0;
	
	if(!strlen(p_current_date))
	{
		EXEC SQL SELECT TO_CHAR(SYS_DATE-1,'DD/MM/YYYY HH24:MI:SS')
			INTO :l_last_date
			FROM PRO_SYS_DATE;
	}
	else
	{
		EXEC SQL SELECT TO_CHAR(TO_DATE(:p_current_date,'DD/MM/YYYY HH24:MI:SS') - 1,'DD/MM/YYYY HH24:MI:SS')
			INTO :l_last_date
			FROM PRO_SYS_DATE;
	}

   IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DATE_NOT_SET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

   APL_GOBACK_SUCCESS
RETURN_SUCCESS:
   APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
RETURN_FAILURE:
   APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
}
