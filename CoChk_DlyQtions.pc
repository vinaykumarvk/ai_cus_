/*copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 * Module Name         : MASTERS MAINTAINANCE
 *
 * File Name           : CoChk_DlyQtions.pc
 *
 * Description         : This file contains validations for Daily Quotations in different modes
 *
 *
 *
 *            Version Control Block
 *
 * Date        Version          Author               Description
 * ---------   --------  ---------------  ---------------------------
 * 26/11/2005   1.0           ANIL          NEW FILE  RFS NO HDFCMT_009
 *
 *********************************************************************/

#include "CO_HostStructdef.h"
#include "sqlca.h"

int MTValDlyQtionsFn(char *p_exch_code,char *p_instr_code,char *p_quot_date,char p_exist,char p_auth,char p_del,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca sqlca;
   char chr_p_pcstatus[3];
   short l_Status;
   int int_exist;
   int int_error_flag = APL_SUCCESS;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

APL_IF_DEBUG
 {
  CO_ProcMonitor(APL_OUT_FILE, "Entered Function MTValDlyQtionsFn\n",NULL,NULL);
 }

  l_Status =0;
  int_exist =0;

  memset(chr_p_pcstatus,NULL,3);

  if (!strlen(p_exch_code))
        {
        APL_DATA_MISSING("Exchange Code", APL_NULL_STRING, APL_NULL_STRING);
        int_error_flag = APL_FAILURE;
        }
  if (!strlen(p_instr_code))
        {
        APL_DATA_MISSING("Instrument Code", APL_NULL_STRING, APL_NULL_STRING);
        int_error_flag = APL_FAILURE;
        }
  if (!strlen(p_quot_date))
        {
        APL_DATA_MISSING("Quote Date", APL_NULL_STRING, APL_NULL_STRING);
        int_error_flag = APL_FAILURE;
        }

  if (int_error_flag == APL_FAILURE)
        {
//AIX- Warnings Removal
        int_error_flag = APL_FAILURE;
        APL_GOBACK_FAIL
        }

  EXEC SQL SELECT NVL(COUNT(*),0) into int_exist
                FROM MT_DAILY_QUOT
                WHERE EXCH_CODE =:p_exch_code
                AND   INSTR_CODE =:p_instr_code
                AND   QUOT_DATE =:p_quot_date;
                IS_ANY_ORA_ERROR

  EXEC SQL SELECT STATUS into :chr_p_pcstatus:l_Status
                FROM MT_DAILY_QUOT
                WHERE EXCH_CODE =:p_exch_code
                AND   INSTR_CODE =:p_instr_code
                AND   QUOT_DATE =:p_quot_date;
                IS_ANY_ORA_ERROR
  chr_p_pcstatus[2] = '\0' ;
  if (p_exist =='Y')
        {
        if (int_exist == 0)
           {
                        if(CO_InsertErr(
                        l_debug_info_ptr,
                        ERR_DAILYQUOTATION_NOTFND,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        int_error_flag = APL_FAILURE;
           }
        }
   if (p_exist =='N')
        {
        if (int_exist != 0)
           {
                if(CO_InsertErr(
                        l_debug_info_ptr,
                        ERR_DAILYQUOTATION_EXISTS,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        int_error_flag = APL_FAILURE;
           }
        }

  if (int_error_flag == APL_FAILURE)
        {
        APL_GOBACK_FAIL
        }
   if (p_auth =='N')
        {
        if (!strcmp(chr_p_pcstatus,STATUS_AUTH))
           {
                        if(CO_InsertErr(
                        l_debug_info_ptr,
                        ERR_DAILYQUOTATION_AUTHORIZED,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        int_error_flag = APL_FAILURE;
           }
       }

    if (p_auth =='Y')
        {
        if (strcmp(chr_p_pcstatus,STATUS_AUTH))
           {
                        if(CO_InsertErr(
                        l_debug_info_ptr,
                        ERR_DAILYQUOTATION_NOT_AUTHORIZED,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        int_error_flag = APL_FAILURE;
           }
        }
    if (p_del =='N')
        {
        if (!strcmp(chr_p_pcstatus,STATUS_DEL_UAUTH))
              {
                        if(CO_InsertErr(
                        l_debug_info_ptr,
                        ERR_DAILYQUOTATION_MARKED_DEL,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        int_error_flag = APL_FAILURE;
              }
        }
if (p_del =='Y')
        {
        if (strcmp(chr_p_pcstatus,STATUS_DEL_UAUTH))
           {
                        if(CO_InsertErr(
                        l_debug_info_ptr,
                        ERR_DAILYQUOTATION_NOTMARKED_DEL,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        APL_NULL_STRING,
                        __LINE__,
                        __FILE__
                        ) != APL_SUCCESS)
                        APL_GOBACK_FAIL
                        int_error_flag = APL_FAILURE;
           }
        }
if (int_error_flag == APL_FAILURE)
        {
        APL_GOBACK_FAIL
        }
   else APL_GOBACK_SUCCESS
 RETURN_SUCCESS :
        {
    APL_IF_DEBUG
         {
  CO_ProcMonitor(APL_OUT_FILE, "Success in MTValDlyQtionsFn Getting out\n",NULL,NULL);
         }
        return(APL_SUCCESS);
       }
RETURN_FAILURE :
        {
     APL_IF_DEBUG
          {
  CO_ProcMonitor(APL_OUT_FILE, "Failed in MTValDlyQtionsFn Going out\n",NULL,NULL);
          }
  return(APL_FAILURE);
        }
}

