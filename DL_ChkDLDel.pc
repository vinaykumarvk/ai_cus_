





#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;



int DL_Rtv_DLDropToHis(	char 		*p_instrdate,
							char 		*p_moneydate,
							char 		*p_posnstatus,
							char 		 p_trcode,
							double 	*p_mcomplqty,
							double 	*p_complqty,
							double 	*p_qty,
							char	 	*p_candropdate_a,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{
	struct sqlca sqlca;
	char chr_l_sysdate[APL_DATE_LEN] = APL_NULL_STRING; 
	char chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	short success_flg = APL_SUCCESS;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0;

	APL_IF_DEBUG 
	{
		CO_ProcMonitor(	APL_OUT_FILE, 
						"Entered Function DL_Rtv_DLDropToHis\n",
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf, 
					"The Instrurity Settlement Date is : %s\n", 
					p_instrdate);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf,
					"The Money Settlement Date is : %s\n",
					p_moneydate);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( chr_l_buf,
					"The Trade Code is : %c\n",
					p_trcode);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf,
					"The Marked Completed Quantity is : %f\n",
					*p_mcomplqty);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( chr_l_buf,
					"The Completed Quantity is : %f\n",
					*p_complqty);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(	chr_l_buf,
					"The Trade Quantity is : %f\n",
					*p_qty);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
						NULL);
	}
 
	strcpy(p_candropdate_a, chr_l_sysdate);

	if ( p_trcode == APL_NULL_CHAR )
	{
		APL_DATA_MISSING( "Trade Code",
								APL_NULL_STRING,
								APL_NULL_STRING );
		success_flg = APL_FAILURE;
	}

	if (( *p_qty == 0 ) && (p_trcode != '5') && (p_trcode != '6'))
	{
		APL_DATA_MISSING( "Trade Quantity",
								APL_NULL_STRING,
								APL_NULL_STRING );
		success_flg = APL_FAILURE;
	}

	if ( success_flg == APL_FAILURE )
	{
		APL_GOBACK_FAIL;
	}

	if ( APL_FAILURE == CO_RtvSysDt( chr_l_sysdate, l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL;
	}

 	if ( ( l_mt_core_sys_params_struct_h.proc_reg_ind[0] == 'Y' ) && 
		  ( p_trcode == '2' || p_trcode == '4' ) )
	{
		if ( strcmp(p_posnstatus, "003") )
		{
			if ( *p_mcomplqty + *p_complqty == *p_qty )
			{
				strcpy(p_candropdate_a, chr_l_sysdate);
			}
		}
		else
		{
			if ( strcmp( p_instrdate, APL_NULL_STRING ) &&
				  ( ( p_trcode == '2' ) || 
						strcmp( p_moneydate, APL_NULL_STRING ) ) )
			{
				strcpy(p_candropdate_a, chr_l_sysdate);
			}
		}
	}
 	else
	{
		if ( strcmp( p_instrdate, APL_NULL_STRING ) &&
			  ( ( p_trcode == '1' || p_trcode == '2' ) || 
					strcmp( p_moneydate, APL_NULL_STRING ) ) )
		{
			strcpy(p_candropdate_a, chr_l_sysdate);
		} 
	}

	APL_GOBACK_SUCCESS;

	RETURN_SUCCESS :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function DL_Rtv_DLDropToHis with Success\n",
							NULL,
							NULL);
		}
		return(APL_SUCCESS);

	RETURN_FAILURE :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function DL_Rtv_DLDropToHis with Errors\n",
							NULL,
							NULL);
		}
		return(APL_FAILURE);
}
