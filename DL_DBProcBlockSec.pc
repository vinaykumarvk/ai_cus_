/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Master Maintenance
 *
 * File Name           :      DL_DBProcBlockSec.pc
 *
 * Description         :      This file contains db functions for updating
 *                            Master Details.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description       RFS No.
 * ---------   --------  ------------     -------------     ---------
 * 27/01/2006   1.0       Manik_Trivedi        New file       HDFCDL-026
 *
 *********************************************************************/


#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

extern  char    *g_l_chld_table_names[];
extern  char    g_l_mst_table_name[];
extern  char    p_status[APL_STATUS_LEN];


int DL_ModDBBlockSec(DL_BLK_SEC_STRUCT_H *p_dl_blk_sec_struct_h,char *p_blk_ref_no,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
	/* Variable Declarations */
  DL_BLK_SEC_STRUCT_I *l_dl_blk_sec_struct_i;

  struct sqlca sqlca;

  char  chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
  char  chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
  char  chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
  short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
  short p_i_access_stamp_compare;
  short p_i_status=0;
  int   int_error_flag = APL_SUCCESS;
  int   int_l_rowexists = 0;
  char  *l_key_codes[2];
  char  *l_key_values[2];
  char  chr_l_table_name[50] = APL_NULL_STRING;
  char  chr_l_field_val[40] = APL_NULL_STRING;
  char  l_seq_val[10]= APL_NULL_STRING;
  int	int_retval = APL_SUCCESS;
#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  EXEC SQL VAR l_seq_val IS STRING;

  APL_FUNCTION_ENTER(APL_OUT_FILE)

  l_dl_blk_sec_struct_i=(DL_BLK_SEC_STRUCT_I*)calloc(1,sizeof(DL_BLK_SEC_STRUCT_I));

  APL_MALLOC_FAIL(l_dl_blk_sec_struct_i)

  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;


 	if (!strlen(p_dl_blk_sec_struct_h->h_client)) l_dl_blk_sec_struct_i->i_client =-1;
     else l_dl_blk_sec_struct_i->i_client =0;
 
	  
 	if (!strlen(p_dl_blk_sec_struct_h->h_remarks)) l_dl_blk_sec_struct_i->i_remarks =-1;
     else l_dl_blk_sec_struct_i->i_remarks =0;
 
 	if (!strlen(p_dl_blk_sec_struct_h->h_status)) l_dl_blk_sec_struct_i->i_status =-1;
     else l_dl_blk_sec_struct_i->i_status =0;
 
	  
 	if (!strlen(p_dl_blk_sec_struct_h->h_maker)) l_dl_blk_sec_struct_i->i_maker =-1;
     else l_dl_blk_sec_struct_i->i_maker =0;
 
	
 	if (!strlen(p_dl_blk_sec_struct_h->h_maker_dt)) l_dl_blk_sec_struct_i->i_maker_dt =-1;
     else l_dl_blk_sec_struct_i->i_maker_dt =0;
 
	  
 	if (!strlen(p_dl_blk_sec_struct_h->h_access_stamp)) l_dl_blk_sec_struct_i->i_access_stamp =-1;
     else l_dl_blk_sec_struct_i->i_access_stamp =0;
 
	  
 	if (!strlen(p_dl_blk_sec_struct_h->h_checker_dt)) l_dl_blk_sec_struct_i->i_checker_dt =-1;
     else l_dl_blk_sec_struct_i->i_checker_dt =0;
	  

 	if (!strlen(p_dl_blk_sec_struct_h->h_checker)) l_dl_blk_sec_struct_i->i_checker =-1;
     else l_dl_blk_sec_struct_i->i_checker =0;


   if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
   {
		APL_GOBACK_FAIL
   }
	
   if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{

		APL_IF_DEBUG
 		{
  			CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function DL_ModDBBlockSec\n",NULL,p_intl_envdatastruct_h);
 		}

		EXEC SQL SELECT blk_sec.nextval INTO :l_seq_val FROM DUAL;
		IS_ANY_ORA_ERROR


		strcpy(p_dl_blk_sec_struct_h->h_blk_ref_no,"BR");
		strcat(p_dl_blk_sec_struct_h->h_blk_ref_no,l_seq_val);
		strcpy(p_dl_blk_sec_struct_h->h_status,STATUS_UAUTH);
    	l_dl_blk_sec_struct_i->i_status =0;
   	strcpy(p_dl_blk_sec_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_dl_blk_sec_struct_i->i_maker=0;
  		strcpy(p_dl_blk_sec_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_dl_blk_sec_struct_i->i_maker_dt=0;
		strcpy(p_dl_blk_sec_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_dl_blk_sec_struct_i->i_access_stamp =0;

		EXEC SQL INSERT INTO DL_BLK_SEC VALUES (:p_dl_blk_sec_struct_h:l_dl_blk_sec_struct_i);
		IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
		
		strcat(p_blk_ref_no,"|");
		strcat(p_blk_ref_no,p_dl_blk_sec_struct_h->h_blk_ref_no);

	}
	else
	{

	l_key_codes[0] = "BLK_REF_NO";
	l_key_codes[1] = APL_NULL_STRING;
	
	l_key_values[0] = p_dl_blk_sec_struct_h -> h_blk_ref_no;
	l_key_values[1] = APL_NULL_STRING;

   strcpy(chr_l_table_name,"DL_BLK_SEC");

   int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "ACCESS_STAMP",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

	strcpy(chr_acc_stamp_compare,chr_l_field_val);
    
	int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "STATUS",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_status_compare,chr_l_field_val);
	}

 	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
	{
  		p_i_checker =-1;
  		p_i_checkerdt =-1;
		strcpy(p_dl_blk_sec_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_dl_blk_sec_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
 		{
  			CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function DL_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 		}

	   if (!strcmp(p_dl_blk_sec_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_dl_blk_sec_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_dl_blk_sec_struct_i->i_access_stamp =0;
       	strcpy(p_dl_blk_sec_struct_h->h_status,STATUS_UAUTH);
			l_dl_blk_sec_struct_i->i_status =0;

			EXEC SQL UPDATE DL_BLK_SEC  SET 
            	MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					CHECKER =:p_dl_blk_sec_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_dl_blk_sec_struct_h->h_checker_dt:p_i_checkerdt,
            	STATUS =:p_dl_blk_sec_struct_h->h_status:l_dl_blk_sec_struct_i->i_status,
            	ACCESS_STAMP =:p_dl_blk_sec_struct_h->h_access_stamp:l_dl_blk_sec_struct_i->i_access_stamp,
					REMARKS =:p_dl_blk_sec_struct_h->h_remarks:l_dl_blk_sec_struct_i->i_remarks,
					CLIENT =:p_dl_blk_sec_struct_h->h_client:l_dl_blk_sec_struct_i->i_client
				WHERE 
					BLK_REF_NO =:p_dl_blk_sec_struct_h->h_blk_ref_no; 
			IS_ANY_ORA_ERROR;	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}

	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
	{

		APL_IF_DEBUG
 		{
  			CO_ProcMonitor(APL_OUT_FILE, "Entered authorize of Function DL_ModDBNoDlvDet\n",
													NULL,p_intl_envdatastruct_h);
 		}

		if (!strcmp(p_dl_blk_sec_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(strcmp(p_dl_blk_sec_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
	    		strcpy(p_dl_blk_sec_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_dl_blk_sec_struct_i->i_access_stamp =0;
   	    	strcpy(p_dl_blk_sec_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_dl_blk_sec_struct_i->i_checker=0;
  	    		strcpy(p_dl_blk_sec_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_dl_blk_sec_struct_i->i_checker_dt=0;
          	strcpy(p_dl_blk_sec_struct_h->h_status,STATUS_AUTH);
	    		l_dl_blk_sec_struct_i->i_status =0;

	    		EXEC SQL UPDATE DL_BLK_SEC SET 
           		CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            	CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            	STATUS =:p_dl_blk_sec_struct_h->h_status:l_dl_blk_sec_struct_i->i_status
				WHERE 
					BLK_REF_NO =:p_dl_blk_sec_struct_h->h_blk_ref_no; 

				IS_ANY_ORA_ERROR;	
			}
   	   else  
	    	{
	    		EXEC SQL DELETE DL_BLK_SEC 
				WHERE 
					BLK_REF_NO =:p_dl_blk_sec_struct_h->h_blk_ref_no; 
          
			   IS_ANY_ORA_ERROR
	    	}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}

 
 	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
 	{

		APL_IF_DEBUG
 		{
  			CO_ProcMonitor(APL_OUT_FILE, "Entered reset of Function DL_ModDBNoDlvDet\n",NULL,p_intl_envdatastruct_h);
 		}

		if (!strcmp(p_dl_blk_sec_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(!strcmp(p_dl_blk_sec_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
	    		strcpy(p_dl_blk_sec_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_dl_blk_sec_struct_i->i_access_stamp =0;
   	    	strcpy(p_dl_blk_sec_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_dl_blk_sec_struct_i->i_checker=0;
  	    		strcpy(p_dl_blk_sec_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_dl_blk_sec_struct_i->i_checker_dt=0;
          	strcpy(p_dl_blk_sec_struct_h->h_status,STATUS_AUTH);
	    		l_dl_blk_sec_struct_i->i_status =0;

	    		EXEC SQL UPDATE DL_BLK_SEC SET 
           		CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            	CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            	STATUS =:p_dl_blk_sec_struct_h->h_status:l_dl_blk_sec_struct_i->i_status
				WHERE 
					BLK_REF_NO =:p_dl_blk_sec_struct_h->h_blk_ref_no; 

				IS_ANY_ORA_ERROR;	
			}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
	{
  		p_i_checker =-1;
  		p_i_checkerdt =-1;
		strcpy(p_dl_blk_sec_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_dl_blk_sec_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG
 		{
  			CO_ProcMonitor(APL_OUT_FILE, "Entered delete of Function DL_ModDBNoDlvDet\n",NULL,p_intl_envdatastruct_h);
 		}

	   if (!strcmp(p_dl_blk_sec_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_dl_blk_sec_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_dl_blk_sec_struct_i->i_access_stamp =0;
       	strcpy(p_dl_blk_sec_struct_h->h_status,STATUS_DEL_UAUTH);
			l_dl_blk_sec_struct_i->i_status =0;

			EXEC SQL UPDATE DL_BLK_SEC SET 
            	MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					CHECKER =:p_dl_blk_sec_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_dl_blk_sec_struct_h->h_checker_dt:p_i_checkerdt,
            	STATUS =:p_dl_blk_sec_struct_h->h_status:l_dl_blk_sec_struct_i->i_status,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
				WHERE 
					BLK_REF_NO =:p_dl_blk_sec_struct_h->h_blk_ref_no; 
					IS_ANY_ORA_ERROR;	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
	   } 
	}
  		
   if(strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
   {	
		
		l_key_codes[0]= "BLK_REF_NO";
 	   l_key_codes[1]= APL_NULL_STRING;

 		l_key_values[0]= p_dl_blk_sec_struct_h->h_blk_ref_no;
 		l_key_values[1]= APL_NULL_STRING;

 		int_retval = CR_Mod_UpdMastStatus(
		 l_key_codes,
		 l_key_values,
		 g_l_mst_table_name,
		 g_l_chld_table_names,
		 APL_MASTER_IND,
		 p_status,
		 chr_sys_access_stamp,
		 p_intl_envdatastruct_h,
		 l_debug_info_ptr);			  

		 if(strcmp(p_status,STATUS_AUTH)==0)
		 {
			if(APL_FAILURE==createTrdForBlkSec(p_dl_blk_sec_struct_h,p_intl_envdatastruct_h,l_debug_info_ptr))
			{
				int_retval = APL_FAILURE;
			}
		}
	}

   if(int_retval == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
 
	APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
  {
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_dl_blk_sec_struct_i);
		return(APL_SUCCESS);
  }
  
  RETURN_FAILURE :
  {
 		APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_dl_blk_sec_struct_i);
		return(APL_FAILURE);
  }

}

int DL_ModDBlockSecDet(DL_BLK_SEC_DET_STRUCT_H *p_dl_blk_sec_det_struct_h,char *p_access_stamp,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/* Variable Declarations */
	DL_BLK_SEC_DET_STRUCT_I *l_dl_blk_sec_det_struct_i;

	struct sqlca sqlca;

	char  chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
	char  chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
	char  chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
	short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
	short p_i_access_stamp_compare;
	short p_i_status = 0;
	int   int_error_flag = APL_SUCCESS;
	int   int_l_rowexists = 0;
	char  *l_key_codes[5];
	char  *l_key_values[5];
	char  chr_l_table_name[50] = APL_NULL_STRING;
	char  chr_l_field_val[40] = APL_NULL_STRING;
	int   int_retval = APL_SUCCESS;

#ifdef APL_THREADS
	APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
#endif

	APL_FUNCTION_ENTER(APL_OUT_FILE)

	l_dl_blk_sec_det_struct_i=(DL_BLK_SEC_DET_STRUCT_I*)calloc(1,sizeof(DL_BLK_SEC_DET_STRUCT_I));

	APL_MALLOC_FAIL(l_dl_blk_sec_det_struct_i)

	p_i_makerdt =0;
	p_i_checker =0;
	p_i_checkerdt =0;
	p_i_access_stamp =0;
	p_i_access_stamp_compare =0;

	if (!strlen(p_dl_blk_sec_det_struct_h->h_blk_ref_no)) l_dl_blk_sec_det_struct_i->i_blk_ref_no =-1;
	else l_dl_blk_sec_det_struct_i->i_blk_ref_no =0;

	if (!strlen(p_dl_blk_sec_det_struct_h->h_instr_code)) l_dl_blk_sec_det_struct_i->i_instr_code =-1;
	else l_dl_blk_sec_det_struct_i->i_instr_code =0;
	

	if (!strlen(p_dl_blk_sec_det_struct_h->h_depo_code)) l_dl_blk_sec_det_struct_i->i_depo_code =-1;
	else l_dl_blk_sec_det_struct_i->i_depo_code =0;

	if (!strlen(p_dl_blk_sec_det_struct_h->h_blk_date)) l_dl_blk_sec_det_struct_i->i_blk_date =-1;
	else l_dl_blk_sec_det_struct_i->i_blk_date =0;
	
	
	if (!strlen(p_dl_blk_sec_det_struct_h->h_blk_type)) l_dl_blk_sec_det_struct_i->i_blk_type =-1;
	else l_dl_blk_sec_det_struct_i->i_blk_type =0;


	if (!p_dl_blk_sec_det_struct_h->h_bal_qty) l_dl_blk_sec_det_struct_i->i_bal_qty =-1;
	else l_dl_blk_sec_det_struct_i->i_bal_qty =0;


	if (!strlen(p_dl_blk_sec_det_struct_h->h_un_blk_date)) l_dl_blk_sec_det_struct_i->i_un_blk_date =-1;
	else l_dl_blk_sec_det_struct_i->i_un_blk_date =0;


	if (!p_dl_blk_sec_det_struct_h->h_un_blk_qty) l_dl_blk_sec_det_struct_i->i_un_blk_qty =-1;
	else l_dl_blk_sec_det_struct_i->i_un_blk_qty =0;


	if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}

	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function MT_ModDBBlockSecDet\n",
					NULL,p_intl_envdatastruct_h);
		}

		strcpy(p_dl_blk_sec_det_struct_h->h_status,STATUS_UAUTH);

		l_dl_blk_sec_det_struct_i->i_status =0;
		strcpy(p_dl_blk_sec_det_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_dl_blk_sec_det_struct_i->i_maker=0;
		strcpy(p_dl_blk_sec_det_struct_h->h_maker_dt,chr_sys_access_stamp);
	
		if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
		{
			APL_GOBACK_FAIL
		}	

		if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
		{

			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function MT_ModDBBlockSecDet\n",
					NULL,p_intl_envdatastruct_h);
			}

			strcpy(p_dl_blk_sec_det_struct_h->h_status,STATUS_UAUTH);
	
			l_dl_blk_sec_det_struct_i->i_status =0;
			strcpy(p_dl_blk_sec_det_struct_h->h_maker,p_intl_envdatastruct_h->usr);
			l_dl_blk_sec_det_struct_i->i_maker=0;
			strcpy(p_dl_blk_sec_det_struct_h->h_maker_dt,chr_sys_access_stamp);
			l_dl_blk_sec_det_struct_i->i_maker_dt=0;
			strcpy(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_dl_blk_sec_det_struct_i->i_access_stamp =0;

			EXEC SQL INSERT INTO DL_BLK_SEC_DET VALUES (:p_dl_blk_sec_det_struct_h:l_dl_blk_sec_det_struct_i);

			IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
		}
	}
	else
	{

		l_key_codes[0]="BLK_REF_NO";
		l_key_codes[1]="INSTR_CODE";
		l_key_codes[2]="DEPO_CODE";
		l_key_codes[3]=APL_NULL_STRING;

		l_key_values[0]=p_dl_blk_sec_det_struct_h -> h_blk_ref_no;
		l_key_values[1]=p_dl_blk_sec_det_struct_h -> h_instr_code;
		l_key_values[2]=p_dl_blk_sec_det_struct_h -> h_depo_code;
		l_key_values[3]=APL_NULL_STRING;

		strcpy(chr_l_table_name,"DL_BLK_SEC_DET");

		int_retval = CR_Rtv_MastChldChrVal( 
				l_key_codes,
				l_key_values,
				chr_l_table_name,
				"ACCESS_STAMP",
				chr_l_field_val,
				l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

		strcpy(chr_acc_stamp_compare,chr_l_field_val);

		int_retval = CR_Rtv_MastChldChrVal( 
				l_key_codes,
				l_key_values,
				chr_l_table_name,
				"STATUS",
				chr_l_field_val,
				l_debug_info_ptr);

			if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

			strcpy(chr_status_compare,chr_l_field_val);
	}

	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
	{
		p_i_checker =-1;
		p_i_checkerdt =-1;
		strcpy(p_dl_blk_sec_det_struct_h->h_checker,APL_NULL_STRING);
		strcpy(p_dl_blk_sec_det_struct_h->h_checker_dt,APL_NULL_STRING);

		APL_IF_DEBUG		 
  		{
	  			CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function MT_ModDBNoDlvDet\n",NULL,p_intl_envdatastruct_h);
  		}

		if (!strcmp(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			strcpy(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_dl_blk_sec_det_struct_i->i_access_stamp =0;
			strcpy(p_dl_blk_sec_det_struct_h->h_status,STATUS_UAUTH);
			l_dl_blk_sec_det_struct_i->i_status =0;

			EXEC SQL UPDATE DL_BLK_SEC_DET  SET
				MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
				MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
				CHECKER =:p_dl_blk_sec_det_struct_h->h_checker:p_i_checker,
				CHECKER_DT =:p_dl_blk_sec_det_struct_h->h_checker_dt:p_i_checkerdt,
				STATUS =:p_dl_blk_sec_det_struct_h->h_status:l_dl_blk_sec_det_struct_i->i_status,
				ACCESS_STAMP =:p_dl_blk_sec_det_struct_h->h_access_stamp:l_dl_blk_sec_det_struct_i->i_access_stamp,
				BLK_DATE =:p_dl_blk_sec_det_struct_h->h_blk_date :l_dl_blk_sec_det_struct_i-> i_blk_date,
				BLK_TYPE =:p_dl_blk_sec_det_struct_h->h_blk_type :l_dl_blk_sec_det_struct_i-> i_blk_type,
				QTY =:p_dl_blk_sec_det_struct_h->h_qty :l_dl_blk_sec_det_struct_i-> i_qty,
				BAL_QTY =:p_dl_blk_sec_det_struct_h->h_bal_qty :l_dl_blk_sec_det_struct_i-> i_bal_qty,
				UN_BLK_DATE =:p_dl_blk_sec_det_struct_h->h_un_blk_date :l_dl_blk_sec_det_struct_i-> i_un_blk_date,
				UN_BLK_QTY =:p_dl_blk_sec_det_struct_h->h_un_blk_qty :l_dl_blk_sec_det_struct_i-> i_un_blk_qty,
				CUSTO_REF_NO =:p_dl_blk_sec_det_struct_h->h_custo_ref_no:l_dl_blk_sec_det_struct_i->i_custo_ref_no
			WHERE
				BLK_REF_NO =:p_dl_blk_sec_det_struct_h->h_blk_ref_no AND
				INSTR_CODE =:p_dl_blk_sec_det_struct_h->h_instr_code AND
				DEPO_CODE  =:p_dl_blk_sec_det_struct_h->h_depo_code; 
			
			IS_ANY_ORA_ERROR;
		}
		else
		{
			if (CO_InsertErr
					(l_debug_info_ptr,
					 ERR_ACCESSSTAMP_CHGD,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 __LINE__,
					 __FILE__
					) != APL_SUCCESS)
					APL_GOBACK_FAIL
		}
	}

	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
	{

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered authorize of Function MT_ModDBNoDlvDet\n",
					NULL,p_intl_envdatastruct_h);
		}

		if (!strcmp(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			if(strcmp(p_dl_blk_sec_det_struct_h->h_status,STATUS_DEL_UAUTH))
			{
				strcpy(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_dl_blk_sec_det_struct_i->i_access_stamp =0;
				strcpy(p_dl_blk_sec_det_struct_h->h_checker,p_intl_envdatastruct_h->usr);
				l_dl_blk_sec_det_struct_i->i_checker=0;

				strcpy(p_dl_blk_sec_det_struct_h->h_checker_dt,chr_sys_access_stamp);
				l_dl_blk_sec_det_struct_i->i_checker_dt=0;
				strcpy(p_dl_blk_sec_det_struct_h->h_status,STATUS_AUTH);
				l_dl_blk_sec_det_struct_i->i_status =0;

				EXEC SQL UPDATE DL_BLK_SEC_DET SET
						  CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
						  CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
						  ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
						  STATUS =:p_dl_blk_sec_det_struct_h->h_status:l_dl_blk_sec_det_struct_i->i_status
			   WHERE
						 BLK_REF_NO =:p_dl_blk_sec_det_struct_h->h_blk_ref_no AND
						 INSTR_CODE =:p_dl_blk_sec_det_struct_h->h_instr_code AND
						 DEPO_CODE  =:p_dl_blk_sec_det_struct_h->h_depo_code; 

				IS_ANY_ORA_ERROR;
			}
			else
			{
				EXEC SQL DELETE DL_BLK_SEC_DET
					WHERE
				BLK_REF_NO =:p_dl_blk_sec_det_struct_h->h_blk_ref_no AND
				INSTR_CODE =:p_dl_blk_sec_det_struct_h->h_instr_code AND
				DEPO_CODE  =:p_dl_blk_sec_det_struct_h->h_depo_code; 

				IS_ANY_ORA_ERROR
			}
		}
		else
		{
				if (CO_InsertErr
						(l_debug_info_ptr,
						 ERR_ACCESSSTAMP_CHGD,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 APL_NULL_STRING,
						 __LINE__,
						 __FILE__
						) != APL_SUCCESS)
						APL_GOBACK_FAIL
		}
	}

	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
	{

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Entered reset of Function MT_ModDBNoDlvDet\n",
					NULL,p_intl_envdatastruct_h);
		}

		if (!strcmp(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			if(!strcmp(p_dl_blk_sec_det_struct_h->h_status,STATUS_DEL_UAUTH))
			{
				strcpy(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_sys_access_stamp);
				l_dl_blk_sec_det_struct_i->i_access_stamp =0;
				strcpy(p_dl_blk_sec_det_struct_h->h_checker,p_intl_envdatastruct_h->usr);
				l_dl_blk_sec_det_struct_i->i_checker=0;
				strcpy(p_dl_blk_sec_det_struct_h->h_checker_dt,chr_sys_access_stamp);

				l_dl_blk_sec_det_struct_i->i_checker_dt=0;
				strcpy(p_dl_blk_sec_det_struct_h->h_status,STATUS_AUTH);
				l_dl_blk_sec_det_struct_i->i_status =0;

				EXEC SQL UPDATE DL_BLK_SEC_DET SET
					CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
				   CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
				   ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
				   STATUS =:p_dl_blk_sec_det_struct_h->h_status:l_dl_blk_sec_det_struct_i->i_status
			   WHERE
					BLK_REF_NO =:p_dl_blk_sec_det_struct_h->h_blk_ref_no AND
					INSTR_CODE =:p_dl_blk_sec_det_struct_h->h_instr_code AND
					DEPO_CODE  =:p_dl_blk_sec_det_struct_h->h_depo_code; 

				IS_ANY_ORA_ERROR;
			}
		}
		else
		{
			if (CO_InsertErr
					(l_debug_info_ptr,
					 ERR_ACCESSSTAMP_CHGD,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 __LINE__,
					 __FILE__
					) != APL_SUCCESS)
				   APL_GOBACK_FAIL
	     }
 	}

 	if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
  	{
	   p_i_checker =-1;
      p_i_checkerdt =-1;
      strcpy(p_dl_blk_sec_det_struct_h->h_checker,APL_NULL_STRING);
      strcpy(p_dl_blk_sec_det_struct_h->h_checker_dt,APL_NULL_STRING);

      APL_IF_DEBUG
      {
		  CO_ProcMonitor(APL_OUT_FILE, "Entered delete of Function MT_ModDBNoDlvDet\n",
				  NULL,p_intl_envdatastruct_h);
	   }

		if (!strcmp(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_acc_stamp_compare))
		{
			strcpy(p_dl_blk_sec_det_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_dl_blk_sec_det_struct_i->i_access_stamp =0;
			strcpy(p_dl_blk_sec_det_struct_h->h_status,STATUS_DEL_UAUTH);
			l_dl_blk_sec_det_struct_i->i_status =0;

			EXEC SQL UPDATE DL_BLK_SEC_DET SET
				MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
				MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
				CHECKER =:p_dl_blk_sec_det_struct_h->h_checker:p_i_checker,
				CHECKER_DT =:p_dl_blk_sec_det_struct_h->h_checker_dt:p_i_checkerdt,
				STATUS =:p_dl_blk_sec_det_struct_h->h_status:l_dl_blk_sec_det_struct_i->i_status,
				ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
			WHERE
				BLK_REF_NO =:p_dl_blk_sec_det_struct_h->h_blk_ref_no AND
				INSTR_CODE =:p_dl_blk_sec_det_struct_h->h_instr_code AND
				DEPO_CODE  =:p_dl_blk_sec_det_struct_h->h_depo_code; 
			IS_ANY_ORA_ERROR;
		}
		else
		{
			if (CO_InsertErr
					(l_debug_info_ptr,
					 ERR_ACCESSSTAMP_CHGD,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 APL_NULL_STRING,
					 __LINE__,
					 __FILE__
					) != APL_SUCCESS)
					APL_GOBACK_FAIL
		}
	 }

	 if (strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
 	 {

	 	l_key_codes[0]="BLK_REF_NO";
	 	l_key_codes[1]=APL_NULL_STRING;

	 	l_key_values[0]= p_dl_blk_sec_det_struct_h->h_blk_ref_no;
	 	l_key_values[1] = APL_NULL_STRING;

	 	int_retval = CR_Mod_UpdMastStatus(
			 l_key_codes,
			 l_key_values,
			 g_l_mst_table_name,
			 g_l_chld_table_names,
			 APL_MASTER_IND,
			 p_status,
			 chr_sys_access_stamp,
			 p_intl_envdatastruct_h,
			 l_debug_info_ptr);

	 		APL_IF_DEBUG
	 		{
				 printf("Returned Status Value = |%s|\n",p_status);
	 		}	  
 			
			strcpy(p_access_stamp,p_dl_blk_sec_det_struct_h->h_access_stamp);

   	}
 		
	 	if (int_retval  == APL_FAILURE)
 		{
	 		APL_GOBACK_FAIL
 		}

		
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		 APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		 free(l_dl_blk_sec_det_struct_i);
		 return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
 	{
	 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_dl_blk_sec_det_struct_i);
		return(APL_FAILURE);
 	}

}

int CO_Chk_ValidBlk(DL_BLK_SEC_STRUCT_H *p_dl_blk_sec_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	char l_chr_p_Clstatus[3]=APL_NULL_STRING;
	short  l_i_CStatus=0;
   int int_error_flag=0;

	EXEC SQL VAR l_chr_p_Clstatus IS STRING;
	
	memset(l_chr_p_Clstatus,NULL,3);
	
	EXEC SQL SELECT STATUS 
	INTO :l_chr_p_Clstatus:l_i_CStatus
	FROM MT_CLIENT
	WHERE 
	CLN_CODE =:p_dl_blk_sec_struct_h->h_client;
	IS_ANY_ORA_ERROR

	if(strcmp(l_chr_p_Clstatus,STATUS_AUTH))
	{
			if(CO_InsertErr(l_debug_info_ptr,
						ERR_UNAUTH_CLIENT,
						APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						) == APL_SUCCESS)
				int_error_flag = APL_FAILURE;
	}

	if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}

	RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
			return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
			return(APL_FAILURE);
	}

}

int CO_Chk_ValidBlkDet(DL_BLK_SEC_DET_STRUCT_H *p_dl_blk_sec_det_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

		char  l_chr_p_Instatus[3]=APL_NULL_STRING;
		short l_i_InStatus=0;
		int   int_l_chkflg=0;
      int   int_error_flag=0;
      int   int_retval=0;

		EXEC SQL VAR l_chr_p_Instatus IS STRING;

		memset(l_chr_p_Instatus,NULL,3);

		APL_FUNCTION_ENTER(APL_OUT_FILE)

		EXEC SQL SELECT STATUS INTO :l_chr_p_Instatus:l_i_InStatus
		FROM MT_INSTRUMENT
		WHERE INSTR_CODE =:p_dl_blk_sec_det_struct_h->h_instr_code;
		IS_ANY_ORA_ERROR

		if(strcmp(l_chr_p_Instatus,STATUS_AUTH))
		{
			if(CO_InsertErr(l_debug_info_ptr,
						ERR_UNAUTH_INSTR,
						APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						) == APL_SUCCESS)
				int_error_flag = APL_FAILURE;
		}

		if (strlen(p_dl_blk_sec_det_struct_h->h_depo_code))
		{
			int_retval = CO_Chk_CodeValid("DEPOSITORY",p_dl_blk_sec_det_struct_h->h_depo_code,(char *)g_mt_commonsys_params_struct_h.nation_code,l_debug_info_ptr);

			if (int_retval != APL_SUCCESS)
			{
				CO_InsertErr( l_debug_info_ptr,
						ERR_INVALID_CODE,
						"DEPOSITORY",
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__);
				int_error_flag = APL_FAILURE;		
			}
		}
		
		if (APL_SUCCESS == CO_Chk_Holiday(p_dl_blk_sec_det_struct_h->h_blk_date,&int_l_chkflg,l_debug_info_ptr,APL_NULL_STRING))
		{
			if(int_l_chkflg==1)
			{	
				if(CO_InsertErr(
						l_debug_info_ptr,
						ERR_DATE_IS_HOLIDAY,
						"BLOCK DATE",
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						) == APL_SUCCESS)
				int_error_flag = APL_FAILURE;		
			}
		}
		else
		{
			int_error_flag = APL_FAILURE;
		}

		if(strlen(p_dl_blk_sec_det_struct_h->h_un_blk_date))
		{
			int_l_chkflg=0;
	
			if(APL_FAILURE == CO_Chk_Holiday(p_dl_blk_sec_det_struct_h->h_un_blk_date,&int_l_chkflg,l_debug_info_ptr,APL_NULL_STRING))
	   	{

				if(int_l_chkflg==1)
				{
					if(CO_InsertErr(
						l_debug_info_ptr,
						ERR_DATE_IS_HOLIDAY,
						"UNBLOCK DATE",
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__
						) == APL_SUCCESS)
					   int_error_flag = APL_FAILURE;
     			}						
     		}						
     	}						

		if (int_error_flag == APL_FAILURE)
		{
			APL_GOBACK_FAIL
		}

		RETURN_SUCCESS:
		{
			APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
				return(APL_SUCCESS);
		}

		RETURN_FAILURE:
		{
			APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
				return(APL_FAILURE);
		}
}

int createTrdForBlkSec(DL_BLK_SEC_STRUCT_H *p_dl_blk_sec_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	SYS_DL_DEAL_STRUCT_H   		*l_sys_dl_deal_struct_is;
	DL_BLK_SEC_DET_STRUCT_H   	l_dl_blk_sec_det_struct_h;
	DL_BLK_SEC_DET_STRUCT_I    l_dl_blk_sec_det_struct_i;
	double l_dbl_qty=0.0;

	EXEC SQL VAR p_dl_blk_sec_struct_h->h_blk_ref_no IS STRING;

	APL_FUNCTION_ENTER(APL_OUT_FILE);

	l_sys_dl_deal_struct_is=(SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));

	memset(&l_dl_blk_sec_det_struct_i, NULL, sizeof(DL_BLK_SEC_STRUCT_H));
	memset(&l_dl_blk_sec_det_struct_h, NULL, sizeof(DL_BLK_SEC_STRUCT_H));


	EXEC SQL DECLARE qty_cur CURSOR FOR SELECT *  FROM DL_BLK_SEC WHERE BLK_REF_NO=:p_dl_blk_sec_struct_h->h_blk_ref_no;

	EXEC SQL OPEN qty_cur;

	for(;;)
	{
			EXEC SQL FETCH qty_cur INTO :l_dl_blk_sec_det_struct_h:l_dl_blk_sec_det_struct_i;
			IS_ANY_ORA_ERROR

			if (sqlca.sqlcode == 1403 )
			{
				break;
	    	}

	    	strcpy(l_sys_dl_deal_struct_is->h_indentity_no,p_dl_blk_sec_struct_h->h_blk_ref_no);

	    	strcat(l_sys_dl_deal_struct_is->h_indentity_no,l_dl_blk_sec_det_struct_h.h_instr_code);

		 	strcpy(l_sys_dl_deal_struct_is->h_dlt,l_dl_blk_sec_det_struct_h.h_blk_date);

		 	l_sys_dl_deal_struct_is->h_qty=l_dl_blk_sec_det_struct_h.h_qty;

		 	strcpy(l_sys_dl_deal_struct_is->h_classofdl,DL_BLOCK_INDENT);

		 	strcpy(l_sys_dl_deal_struct_is->h_instr_code,l_dl_blk_sec_det_struct_h.h_instr_code);

		 	strcpy(l_sys_dl_deal_struct_is->h_loccode,l_dl_blk_sec_det_struct_h.h_depo_code);

			if(strcmp(p_dl_blk_sec_struct_h->h_client,APL_NULL_STRING)!=0)
			{

	   		strcpy(l_sys_dl_deal_struct_is->h_info1,"Deliever Free Trade Created For Block Securities Transfer");
				strcpy(l_sys_dl_deal_struct_is->h_dl_client,p_dl_blk_sec_struct_h->h_client);
	
				strcpy(l_sys_dl_deal_struct_is->h_dealcd,APL_DEAL_DF);

				APL_IF_DEBUG
				{
	   			printf("l_sys_dl_deal_struct_is->h_instr_code |%s|",l_sys_dl_deal_struct_is->h_instr_code);
	   			printf("l_sys_dl_deal_struct_is->h_dl_client |%s|",l_sys_dl_deal_struct_is->h_dl_client);
					printf("l_sys_dl_deal_struct_is->h_qty |%lf|",l_sys_dl_deal_struct_is->h_qty);
					printf("l_sys_dl_deal_struct_is->h_loccode |%s|",l_sys_dl_deal_struct_is->h_loccode);
				}
              
				if(APL_FAILURE==DL_Mod_DefDl_Intrsch_Blck(l_sys_dl_deal_struct_is,p_intl_envdatastruct_h,l_debug_info_ptr))
				{
					APL_GOBACK_FAIL;
				}
		 	}

			strcpy(l_sys_dl_deal_struct_is->h_info1,"Receive Free Trade Created For Block Securities Transfer");

			strcpy(l_sys_dl_deal_struct_is->h_dl_client,p_dl_blk_sec_struct_h->h_client);

			strcpy(l_sys_dl_deal_struct_is->h_dealcd,APL_DEAL_RF);

			if(APL_FAILURE==DL_Mod_DefDl_Intrsch_Blck(l_sys_dl_deal_struct_is,p_intl_envdatastruct_h,l_debug_info_ptr))
			{
				APL_GOBACK_FAIL;
			}
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_sys_dl_deal_struct_is);
		return(APL_SUCCESS);
	}
      
   RETURN_FAILURE :
   {
	    APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
	    free(l_sys_dl_deal_struct_is);
	    return(APL_FAILURE);
   }	
}
