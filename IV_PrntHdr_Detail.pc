



#include <CO_Commdef.h> 
#include <string.h>
#include "IV_Control_A.h"
EXEC SQL INCLUDE SQLCA.H;


int IV_Proc_PrnHeaderDETINV(FILE *bill,
					 FILE *fl_userlog,	
					char *chr_p_billdt,
					char *chr_p_client,
					SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
					IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct ,
					char p_mastsub,
					int  *int_currpos,
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{


char *chr_dupaddr;

char chr_tmpaddr[181]; 
char chr_l_h_corporate_addr[321];
int int_ilen;
int i;
int int_newlen =0;
char chr_t_billdt[11];
char chr_t_prevbilldt[APL_DATE_LEN];
char chr_f_prevbilldt[APL_DATE_LEN];
char chr_l_sysdate_b[APL_DATE_LEN];
char chr_t_nxtbilldt[11];
double dbl_i_outstanding=0;

double h_bill_os_amount = 0;
char *chr_f_outst;
int int_headerlen = 15;
int int_ret= 0;
int int_outstret = 0;
int int_retstat =0;
char chr_l_cname[CNAME_LEN_A]; 
char chr_l_cname1[CNAME_LEN_A]; 
char chr_l_cname2[CNAME_LEN_A]; 
int int_nlength = 0;
char chr_prev[1];
int int_icount;
int int_jcount;
char chr_new[CNAME_LEN_A];
double int_num = 20;
double roundedoutst = 0.0;
char chr_f_outst_str[30];
static int int_l_populated = 0;  
char **chr_l_tmpaddr  = NULL;
int  number_a = 0;
int int_l_lines = 0;
char chr_l_codedesc[41];

EXEC SQL BEGIN DECLARE SECTION;
	char chr_p_dismast[APL_CLIENT_LENGTH];
	char chr_p_dismast2[APL_CLIENT_LENGTH];
	int     int_p_diff =0;
	int 	  int_p_diff1	= 0;	
	short i_mstclt;
	short i_diff;


EXEC SQL VAR l_sys_ivcntl_param_struct.b_prev_date IS STRING;
EXEC SQL VAR chr_p_dismast IS STRING;
EXEC SQL VAR chr_p_dismast2 IS STRING;
EXEC SQL VAR l_sys_ivcntl_param_struct.b_upto_date IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.client IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.b_ccycd IS STRING;
EXEC SQL VAR chr_l_h_corporate_addr IS STRING; 
EXEC SQL VAR chr_l_cname2 IS STRING;


EXEC SQL END DECLARE SECTION;

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entering IV_Proc_PrnHeader\n",NULL,NULL);
	}



chr_f_outst = (char *)calloc(20,sizeof(char));

	
	EXEC SQL SELECT REPLACE(REPLACE(ca_address,CHR(13),'|') ,CHR(10),'|') || '|' as corporate 
	INTO :chr_l_h_corporate_addr 
	FROM MT_COMMON_SYS_PARAMS;

	IS_ANY_ORA_ERROR

	if (APL_FAILURE == CO_SplitStr( chr_l_h_corporate_addr,'|',&number_a, &chr_l_tmpaddr))
	{
		fprintf(fl_userlog,"Failure  while splitting %s \n",chr_l_h_corporate_addr);
      APL_GOBACK_FAIL
   }	
	fprintf(fl_userlog,"num1 chr_value is: %d\n",number_a);
	
	int_l_lines = number_a/2;
	int_l_lines = int_l_lines+1;
	fprintf(fl_userlog,"l_lines chr_value is: %d\n",int_l_lines);

	
	
	memset(chr_l_cname, APL_NULL_CHAR, CNAME_LEN_A);
	memset(chr_l_cname1, APL_NULL_CHAR, CNAME_LEN_A);
	memset(chr_l_cname2, APL_NULL_CHAR, CNAME_LEN_A);
	memset(chr_new, APL_NULL_CHAR, CNAME_LEN_A);

	EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_p_billdt,'dd/mm/chr_yyyy hh:mi:ss'),'dd/mm/yyyy') INTO :chr_l_sysdate_b  FROM DUAL;

	fprintf(bill,"\n STATEMENT\t\t\t\t%s\n\n",chr_l_sysdate_b);			
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;
	if (l_iv_clt_setup_struct.send_to_master_ind =='S')
	{
		if ( APL_FAILURE == IV_Rtv_GetCname(chr_p_client, chr_l_cname, &int_retstat, 
												  l_debug_info_ptr) )
		{
			fprintf(stderr, "Cannot get Corporate Name for %s\n", chr_p_client);
			APL_GOBACK_FAIL
		}
		
		int_nlength = strlen(chr_l_cname); 
      for (int_icount=0,int_jcount=0;int_icount<=int_nlength;)
      {
      	if (chr_l_cname[int_icount] == ' ' )
      	{
         	if (chr_prev[0] != ' ')
         	{
            	chr_new[int_jcount]=chr_l_cname[int_icount];
            	int_jcount=int_jcount+1;
         	}
         	chr_prev[0] = chr_l_cname[int_icount];
         	chr_prev[1] = '\0';
      	}
      	else
      	{
         	chr_new[int_jcount] = chr_l_cname[int_icount];
         	chr_prev[0] = 'u';
         	chr_prev[1] = '\0';
         	int_jcount=int_jcount+1;
      	}
      	int_icount= int_icount+1;
   	}
      sprintf(chr_l_cname1,"%s",chr_new);
		fprintf(bill,"ANALYSIS REPORT FOR\t%s\n",chr_l_cname1);
		(*int_currpos)++;
	}
	else 
	{

		

		if (APL_FAILURE == IV_Rtv_Dist_MastAcc(chr_p_client,chr_p_dismast,chr_p_billdt,&int_retstat,l_debug_info_ptr))
		{
			
			if (int_retstat == IV_CRITCAL_ERROR_IND)
			{
				APL_GOBACK_FAIL
			}
			else if (int_retstat == IV_NO_DATA_FOUND_ERR)
			{
				EXEC SQL SELECT cln_master into :chr_p_dismast
							  FROM MT_CLIENT
                      WHERE cln_code = :chr_p_client ;
				
				IS_ANY_ORA_ERROR
			}
		}

		 
		if ( APL_FAILURE == IV_Rtv_GetCname(chr_p_dismast, chr_l_cname, &int_retstat, 
												  l_debug_info_ptr) )
		{
			fprintf(stderr, "Cannot get Corporate Name for %s\n", chr_p_dismast);
			APL_GOBACK_FAIL
		}

      int_nlength = strlen(chr_l_cname);
      for (int_icount=0,int_jcount=0;int_icount<=int_nlength;)
      {
         if (chr_l_cname[int_icount] == ' ' )
         {
            if (chr_prev[0] != ' ')
            {
               chr_new[int_jcount]=chr_l_cname[int_icount];
               int_jcount=int_jcount+1;
            }
            chr_prev[0] = chr_l_cname[int_icount];
            chr_prev[1] = '\0';
         }
         else
         {
            chr_new[int_jcount] = chr_l_cname[int_icount];
            chr_prev[0] = 'u';
            chr_prev[1] = '\0';
            int_jcount=int_jcount+1;
         }
         int_icount= int_icount+1;
      }
      sprintf(chr_l_cname1,"%s",chr_new);
		fprintf(bill,"ANALYSIS REPORT FOR\t%s\n\n",chr_l_cname1);
      (*int_currpos)++;
      (*int_currpos)++;
		
	}

	EXEC SQL SELECT cln_code, rtrim(SUBSTR(cln_name,1,35)) INTO :chr_p_dismast2, :chr_l_cname2
		      FROM MT_CLIENT
		     WHERE cln_code = :chr_p_client;
   IS_ANY_ORA_ERROR
	
   EXEC SQL SELECT MAP_DESC INTO :chr_l_codedesc
				  FROM PRO_SGENSTAT A, MT_COMMON_SYS_PARAMS B
			    WHERE A.MAP_TYPE='ISOCOUNTRY'
					AND A.MAP_VAL = B.NATION_CODE
					AND A.NATION_CODE='XX';

   IS_ANY_ORA_ERROR
	
	fprintf(bill,"ACCOUNT NUMBER\t'%s                                      \n",chr_p_client);
	fprintf(bill,"ACCOUNT NAME\t%s\n",chr_l_cname2);
	fprintf(bill,"COUNTRY\t %s\n",chr_l_codedesc);
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;

	if (APL_FAILURE == CO_Pro_DateComp(l_sys_ivcntl_param_struct.b_prev_date,chr_p_billdt,&int_p_diff,l_debug_info_ptr))
	{	
		fprintf(fl_userlog,"Failed to compare bill prv chr_date and input chr_date\n");	
      APL_GOBACK_FAIL
	}
	
	if (int_p_diff <=0)
	{
		fprintf(bill,"PERIOD INVOICED");
		strncpy(chr_t_billdt,chr_p_billdt,10);
		chr_t_billdt[10] = '\0';
		fprintf(bill,"\t%s\n",chr_t_billdt);
		(*int_currpos)++;
	}
	else
	{
      fprintf(bill,"PERIOD INVOICED");

		
		if (APL_FAILURE == CO_Pro_AddDate(l_sys_ivcntl_param_struct.b_prev_date,1,chr_f_prevbilldt,l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Failed to add to bill prv chr_date\n");	
			APL_GOBACK_FAIL
		}
		strncpy(chr_t_prevbilldt,chr_f_prevbilldt,10);
		chr_t_prevbilldt[10] ='\0';
		strncpy(chr_t_nxtbilldt,l_sys_ivcntl_param_struct.b_upto_date,10);
		chr_t_nxtbilldt[10] = '\0';
		fprintf(bill,"\t%s     -      %s\n",chr_t_prevbilldt,chr_t_nxtbilldt);
		(*int_currpos)++;
	}

	fprintf(bill,"\nCURRENT PROCEEDS\n\n");
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;





	{
	RETURN_SUCCESS:
        APL_IF_DEBUG
		  {
				CO_ProcMonitor(APL_OUT_FILE,"Exiting peacefully out of IV_Proc_PrnHeader\n",NULL,NULL);
		  }
        	return(APL_SUCCESS);

	RETURN_FAILURE:
        APL_IF_DEBUG
		  {
				CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of IV_Proc_PrnHeader\n",NULL,NULL);

		  }
       		return (APL_FAILURE);
	}

}
int IV_Rtv_GetCname(char *chr_p_client, char *chr_p_cname, int *int_p_retstat, DEBUG_INFO_STRUCT_H *l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

		char h_clnt_clr_name[CNAME_LEN_A];
		short int i_clnt_clr_name = 0;
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	memset(h_clnt_clr_name, APL_NULL_CHAR, CNAME_LEN_A);

	EXEC SQL SELECT CLN_NAME
				INTO :h_clnt_clr_name INDICATOR :i_clnt_clr_name
				FROM MT_CLIENT
				WHERE CLN_CODE = :chr_p_client;

	if ( sqlca.sqlcode < 0 )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
	}

	IS_ANY_ORA_ERROR

	if ( APL_ZERO_RESULT_SET )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;		
		APL_GOBACK_FAIL
	}

	strcpy(chr_p_cname, h_clnt_clr_name);
	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		return APL_SUCCESS;

	RETURN_FAILURE:

		return APL_FAILURE;
}
