/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
*/
/*********************************************************************
 *
 * Module Name         :      Master Maintenance
 *
 * File Name           :      MT_DbProcDepoPart.pc
 *
 * Description         :      This file contains functions for updating
 *                            Master Details.
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author         Description       RFS No.
 * ---------   --------  ------------     -------------     ---------
 * 30/12/2005   1.0        Kouser Begum   New file          HDFCMT_010
 *
 *********************************************************************/


#include "CO_HostStructdef.h"
EXEC SQL INCLUDE SQLCA.H;

/*char        p_cln_field_name[25] = "CLN_SEQ_NUM";*/

extern  char    *g_l_chld_table_names[];
extern  char    g_l_mst_table_name[];
char p_status[APL_STATUS_LEN];

int MT_Mod_DBDepoPart(MT_DEPO_PART_STRUCT_H *p_mt_depo_part_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

  /* Variable Declarations */

  MT_DEPO_PART_STRUCT_I *l_mt_depo_part_struct_i;

  char p_status[APL_STATUS_LEN] = APL_NULL_STRING;

  struct sqlca sqlca;

  char chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
  char chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
  char chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
  short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
  short p_i_access_stamp_compare;
  short p_i_status = 0;
  int int_error_flag = APL_SUCCESS;
  int int_l_rowexists = 0;

   char  *l_key_codes[3];
   char  *l_key_values[3];

   char  chr_l_table_name[50] = APL_NULL_STRING;

   char  chr_l_field_val[40] = APL_NULL_STRING;

   int     int_retval = APL_SUCCESS;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

 APL_FUNCTION_ENTER(APL_OUT_FILE)

  l_mt_depo_part_struct_i=(MT_DEPO_PART_STRUCT_I*)calloc(1,sizeof(MT_DEPO_PART_STRUCT_I));

  APL_MALLOC_FAIL(l_mt_depo_part_struct_i)

  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_code)) l_mt_depo_part_struct_i->i_depo_code =-1;
     else l_mt_depo_part_struct_i->i_depo_code =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_code)) l_mt_depo_part_struct_i->i_depo_part_code =-1;
     else l_mt_depo_part_struct_i->i_depo_part_code =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_contact1)) l_mt_depo_part_struct_i->i_depo_part_contact1 =-1;
     else l_mt_depo_part_struct_i->i_depo_part_contact1 =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_add_1)) l_mt_depo_part_struct_i->i_depo_part_add_1 =-1;
     else l_mt_depo_part_struct_i->i_depo_part_add_1 =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_add_2)) l_mt_depo_part_struct_i->i_depo_part_add_2 =-1;
     else l_mt_depo_part_struct_i->i_depo_part_add_2 =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_add_city)) l_mt_depo_part_struct_i->i_depo_part_add_city =-1;
     else l_mt_depo_part_struct_i->i_depo_part_add_city =0;


 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_add_state)) l_mt_depo_part_struct_i->i_depo_part_add_state =-1;
     else l_mt_depo_part_struct_i->i_depo_part_add_state =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_add_cnt)) l_mt_depo_part_struct_i->i_depo_part_add_cnt =-1;
     else l_mt_depo_part_struct_i->i_depo_part_add_cnt =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_add_pin)) l_mt_depo_part_struct_i->i_depo_part_add_pin =-1;
     else l_mt_depo_part_struct_i->i_depo_part_add_pin =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_tel)) l_mt_depo_part_struct_i->i_depo_part_tel =-1;
     else l_mt_depo_part_struct_i->i_depo_part_tel =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_fax)) l_mt_depo_part_struct_i->i_depo_part_fax =-1;
     else l_mt_depo_part_struct_i->i_depo_part_fax =0;

 if (!strlen(p_mt_depo_part_struct_h->h_depo_part_email)) l_mt_depo_part_struct_i->i_depo_part_email =-1;
     else l_mt_depo_part_struct_i->i_depo_part_email =0;


 if (!strlen(p_mt_depo_part_struct_h->h_maker)) l_mt_depo_part_struct_i->i_maker =-1; 
     else l_mt_depo_part_struct_i->i_maker =0;


 if (!strlen(p_mt_depo_part_struct_h->h_maker_dt)) l_mt_depo_part_struct_i->i_maker_dt =-1; 
     else l_mt_depo_part_struct_i->i_maker_dt =0;

 if (!strlen(p_mt_depo_part_struct_h->h_access_stamp)) l_mt_depo_part_struct_i->i_access_stamp =-1; 
     else l_mt_depo_part_struct_i->i_access_stamp =0;

 if (!strlen(p_mt_depo_part_struct_h->h_checker)) l_mt_depo_part_struct_i->i_checker =-1; 
     else l_mt_depo_part_struct_i->i_checker =0;

 if (!strlen(p_mt_depo_part_struct_h->h_checker_dt)) l_mt_depo_part_struct_i->i_checker_dt =-1; 
     else l_mt_depo_part_struct_i->i_checker_dt =0;

 if (!strlen(p_mt_depo_part_struct_h->h_status)) l_mt_depo_part_struct_i->i_status =-1; 
     else l_mt_depo_part_struct_i->i_status =0;
 if (!strlen(p_mt_depo_part_struct_h->h_depo_name)) l_mt_depo_part_struct_i->i_depo_name =-1;
     else l_mt_depo_part_struct_i->i_depo_name =0; /* Depo Participant Name in Depo Participant Master - by Gouse */

 if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
	{
		APL_GOBACK_FAIL
	}
	
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
	{

		APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function MT_Mod_DBDepoPart\n",
													NULL,p_intl_envdatastruct_h);
 	}

		strcpy(p_mt_depo_part_struct_h->h_status,STATUS_UAUTH);
      l_mt_depo_part_struct_i->i_status =0;
   	strcpy(p_mt_depo_part_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_mt_depo_part_struct_i->i_maker=0;
    	strcpy(p_mt_depo_part_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_mt_depo_part_struct_i->i_maker_dt=0;
		strcpy(p_mt_depo_part_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_mt_depo_part_struct_i->i_access_stamp =0;

		printf("p_mt_depo_part_struct_h.h_depo_code is |%s|\n",p_mt_depo_part_struct_h->h_depo_code);
		printf("p_mt_depo_part_struct_h.h_depo_part_code is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_code);
		printf("p_mt_depo_part_struct_h.h_depo_part_contact1 is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_contact1);
		printf("p_mt_depo_part_struct_h.h_depo_part_add_1 is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_add_1);
		printf("p_mt_depo_part_struct_h.h_depo_part_add_2 is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_add_2);
		printf("p_mt_depo_part_struct_h.h_depo_part_add_city is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_add_city);
		printf("p_mt_depo_part_struct_h.h_depo_part_add_state is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_add_state);
		printf("p_mt_depo_part_struct_h.h_depo_part_add_cnt is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_add_cnt);
		printf("p_mt_depo_part_struct_h.h_depo_part_add_pin is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_add_pin);
		printf("p_mt_depo_part_struct_h.h_depo_part_tel is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_tel);
		printf("p_mt_depo_part_struct_h.h_depo_part_fax is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_fax);
		printf("p_mt_depo_part_struct_h.h_depo_part_email is |%s|\n",p_mt_depo_part_struct_h->h_depo_part_email);
		printf("p_mt_depo_part_struct_h.h_maker is |%s|\n",p_mt_depo_part_struct_h->h_maker);
		printf("p_mt_depo_part_struct_h.h_maker_dt is |%s|\n",p_mt_depo_part_struct_h->h_maker_dt);
		printf("p_mt_depo_part_struct_h.h_access_stamp is |%s|\n",p_mt_depo_part_struct_h->h_access_stamp);
		printf("p_mt_depo_part_struct_h.h_checker is |%s|\n",p_mt_depo_part_struct_h->h_checker);
		printf("p_mt_depo_part_struct_h.h_checker_dt is |%s|\n",p_mt_depo_part_struct_h->h_checker_dt);
		printf("p_mt_depo_part_struct_h.h_status is |%s|\n",p_mt_depo_part_struct_h->h_status);
        printf("p_mt_depo_part_struct_h.h_depo_name is |%s|\n",p_mt_depo_part_struct_h->h_depo_name);/* Depo Participant Name in Depo Participant Master - by Gouse */

		EXEC SQL INSERT INTO MT_DEPO_PART VALUES (:p_mt_depo_part_struct_h:l_mt_depo_part_struct_i);
		IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	}
	else
	{
		
      l_key_codes[0]="DEPO_CODE";
      l_key_codes[1]="DEPO_PART_CODE";
      l_key_codes[2]=APL_NULL_STRING;

      l_key_values[0]=p_mt_depo_part_struct_h->h_depo_code;
      l_key_values[1]=p_mt_depo_part_struct_h->h_depo_part_code;
      l_key_values[2] = APL_NULL_STRING;


	   strcpy(chr_l_table_name,"MT_DEPO_PART");

    int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "ACCESS_STAMP",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_acc_stamp_compare,chr_l_field_val);
    
		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "STATUS",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

    if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL

		strcpy(chr_status_compare,chr_l_field_val);
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
 {
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
	strcpy(p_mt_depo_part_struct_h->h_checker,APL_NULL_STRING);
	strcpy(p_mt_depo_part_struct_h->h_checker_dt,APL_NULL_STRING);

	APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function MT_Mod_DBDepoPart\n",
				                                          NULL,p_intl_envdatastruct_h);
 	}

	   if (!strcmp(p_mt_depo_part_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_mt_depo_part_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_depo_part_struct_i->i_access_stamp =0;
         strcpy(p_mt_depo_part_struct_h->h_status,STATUS_UAUTH);
			l_mt_depo_part_struct_i->i_status =0;

			      EXEC SQL UPDATE MT_DEPO_PART SET 
            	DEPO_PART_CONTACT =:p_mt_depo_part_struct_h->h_depo_part_contact1:l_mt_depo_part_struct_i->i_depo_part_contact1,
            	DEPO_PART_ADD1 =:p_mt_depo_part_struct_h->h_depo_part_add_1:l_mt_depo_part_struct_i->i_depo_part_add_1,
            	DEPO_PART_ADD2 =:p_mt_depo_part_struct_h->h_depo_part_add_2:l_mt_depo_part_struct_i->i_depo_part_add_2,
            	CITY=:p_mt_depo_part_struct_h->h_depo_part_add_city:l_mt_depo_part_struct_i->i_depo_part_add_city,
            	STATE =:p_mt_depo_part_struct_h->h_depo_part_add_state:l_mt_depo_part_struct_i->i_depo_part_add_state,
               COUNTRY =:p_mt_depo_part_struct_h->h_depo_part_add_cnt:l_mt_depo_part_struct_i->i_depo_part_add_cnt,
            	DEPO_PART_ADD_PIN =:p_mt_depo_part_struct_h->h_depo_part_add_pin:l_mt_depo_part_struct_i->i_depo_part_add_pin,
            	DEPO_PART_TEL =:p_mt_depo_part_struct_h->h_depo_part_tel:l_mt_depo_part_struct_i->i_depo_part_tel,
            	DEPO_PART_FAX =:p_mt_depo_part_struct_h->h_depo_part_fax:l_mt_depo_part_struct_i->i_depo_part_fax,
            	DEPO_PART_EMAIL =:p_mt_depo_part_struct_h->h_depo_part_email:l_mt_depo_part_struct_i->i_depo_part_email,
            	MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
					CHECKER =:p_mt_depo_part_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_mt_depo_part_struct_h->h_checker_dt:p_i_checkerdt,
            	STATUS =:p_mt_depo_part_struct_h->h_status:l_mt_depo_part_struct_i->i_status,
                DEPO_NAME =:p_mt_depo_part_struct_h->h_depo_name:l_mt_depo_part_struct_i->i_depo_name/*Depo Participant Name in Depo Participant Master - by Gouse*/
	       	  	WHERE 
				   DEPO_CODE	 =:p_mt_depo_part_struct_h->h_depo_code 
					AND DEPO_PART_CODE	 =:p_mt_depo_part_struct_h->h_depo_part_code;
              
					IS_ANY_ORA_ERROR	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}


  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
  {
	APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered authorize of Function MT_Mod_DBDepoPart\n",
													NULL,p_intl_envdatastruct_h);
 	}

		if (!strcmp(p_mt_depo_part_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(strcmp(p_mt_depo_part_struct_h->h_status,STATUS_DEL_UAUTH))
	       {
	    		strcpy(p_mt_depo_part_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_mt_depo_part_struct_i->i_access_stamp =0;
   	    	strcpy(p_mt_depo_part_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_mt_depo_part_struct_i->i_checker=0;
    	    	strcpy(p_mt_depo_part_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_mt_depo_part_struct_i->i_checker_dt=0;
            strcpy(p_mt_depo_part_struct_h->h_status,STATUS_AUTH);
	    		l_mt_depo_part_struct_i->i_status =0;

	    		EXEC SQL UPDATE MT_DEPO_PART SET 
           	CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
           	CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
				ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
           	/*STATUS =:p_mt_depo_part_struct_h->h_status:l_mt_depo_part_struct_i->i_status*/
	        	WHERE 
				DEPO_CODE =:p_mt_depo_part_struct_h->h_depo_code AND 
				DEPO_PART_CODE =:p_mt_depo_part_struct_h->h_depo_part_code; 

				IS_ANY_ORA_ERROR
          }
       else 
       {
       EXEC SQL DELETE MT_DEPO_PART
       WHERE
       DEPO_CODE =:p_mt_depo_part_struct_h->h_depo_code AND
       DEPO_PART_CODE =:p_mt_depo_part_struct_h->h_depo_part_code;
             
       IS_ANY_ORA_ERROR   
       }
     }        
      
          else
           {
            if (CO_InsertErr
             (l_debug_info_ptr,
              ERR_ACCESSSTAMP_CHGD,
              APL_NULL_STRING,
              APL_NULL_STRING,
             APL_NULL_STRING,
              __LINE__,
               __FILE__
              ) != APL_SUCCESS)
              APL_GOBACK_FAIL
             APL_GOBACK_FAIL
         }
    } 
  if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
   {

      APL_IF_DEBUG
      {
           CO_ProcMonitor(APL_OUT_FILE, "Entered reset of Function MT_Mod_DBDepoPart\n",
                                       NULL,p_intl_envdatastruct_h);
      }

      if (!strcmp(p_mt_depo_part_struct_h->h_access_stamp,chr_acc_stamp_compare))
      {
         if(!strcmp(p_mt_depo_part_struct_h->h_status,STATUS_DEL_UAUTH))
         {
            strcpy(p_mt_depo_part_struct_h->h_access_stamp,chr_sys_access_stamp);
            l_mt_depo_part_struct_i->i_access_stamp =0;
            strcpy(p_mt_depo_part_struct_h->h_checker,p_intl_envdatastruct_h->usr);
            l_mt_depo_part_struct_i->i_checker=0;
            strcpy(p_mt_depo_part_struct_h->h_checker_dt,chr_sys_access_stamp);
            l_mt_depo_part_struct_i->i_checker_dt=0;
            strcpy(p_mt_depo_part_struct_h->h_status,STATUS_AUTH);
            l_mt_depo_part_struct_i->i_status =0;

            EXEC SQL UPDATE MT_DEPO_PART SET
            CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
            ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
            /* STATUS =:p_mt_depo_part_struct_h->h_status:l_mt_depo_part_struct_i->i_status */
            WHERE
            DEPO_CODE    =:p_mt_depo_part_struct_h->h_depo_code AND
            DEPO_PART_CODE  =:p_mt_depo_part_struct_h->h_depo_part_code;
            
            IS_ANY_ORA_ERROR
         }
      }
      else
      {
         if (CO_InsertErr
         (l_debug_info_ptr,
          ERR_ACCESSSTAMP_CHGD,
          APL_NULL_STRING,
          APL_NULL_STRING,
          APL_NULL_STRING,
          __LINE__,
          __FILE__
         ) != APL_SUCCESS)
         APL_GOBACK_FAIL
         APL_GOBACK_FAIL
      }
   }
 
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
 {
   printf("Entered Into DEPO PART Mode\n");
   p_i_checker =-1;
   p_i_checkerdt =-1;
   strcpy(p_mt_depo_part_struct_h->h_checker,APL_NULL_STRING);
   strcpy(p_mt_depo_part_struct_h->h_checker_dt,APL_NULL_STRING);
   printf("Entered Into DEpao Part II\n");

   APL_IF_DEBUG
   {
      CO_ProcMonitor(APL_OUT_FILE, "Entered delete of Function MT_Mod_DBDepoPart\n",
                                       NULL,p_intl_envdatastruct_h);
   }

      if (!strcmp(p_mt_depo_part_struct_h->h_access_stamp,chr_acc_stamp_compare))
      {
         strcpy(p_mt_depo_part_struct_h->h_access_stamp,chr_sys_access_stamp);
         l_mt_depo_part_struct_i->i_access_stamp =0;
         strcpy(p_mt_depo_part_struct_h->h_status,STATUS_DEL_UAUTH);
         l_mt_depo_part_struct_i->i_status =0;


               EXEC SQL UPDATE MT_DEPO_PART SET
               MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
               MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
               CHECKER =:p_mt_depo_part_struct_h->h_checker:p_i_checker,
               CHECKER_DT =:p_mt_depo_part_struct_h->h_checker_dt:p_i_checkerdt,
               /* STATUS =:p_mt_depo_part_struct_h->h_status:l_mt_depo_part_struct_i->i_status, */
               ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
               WHERE
               DEPO_CODE    =:p_mt_depo_part_struct_h->h_depo_code AND
               DEPO_PART_CODE  =:p_mt_depo_part_struct_h->h_depo_part_code;

	            IS_ANY_ORA_ERROR
      }
      else
      {
         if (CO_InsertErr
         (l_debug_info_ptr,
          ERR_ACCESSSTAMP_CHGD,
          APL_NULL_STRING,
          APL_NULL_STRING,
          APL_NULL_STRING,
          __LINE__,
          __FILE__
         ) != APL_SUCCESS)
         APL_GOBACK_FAIL
         APL_GOBACK_FAIL
      }
  } 

             l_key_codes[0]="DEPO_CODE";
             l_key_codes[1]="DEPO_PART_CODE";
             l_key_codes[2]=APL_NULL_STRING;
   
             l_key_values[0]=p_mt_depo_part_struct_h->h_depo_code;
             l_key_values[1]=p_mt_depo_part_struct_h->h_depo_part_code;
             l_key_values[2] = APL_NULL_STRING;
   
             int_retval = CR_Mod_UpdMastStatus(l_key_codes,
                                               l_key_values,
                                               g_l_mst_table_name,
                                               g_l_chld_table_names,
                                               APL_MASTER_IND,
                                               p_status,
                                               chr_sys_access_stamp,
                                               p_intl_envdatastruct_h,
                                               l_debug_info_ptr);

  APL_IF_DEBUG
  {
            printf("Returned Status Value = |%s|\n",p_status);
  }
   
  if (int_retval != APL_SUCCESS)
        APL_GOBACK_FAIL
 
 if (int_error_flag == APL_FAILURE)
 {
		APL_GOBACK_FAIL
 }

 APL_GOBACK_SUCCESS

 RETURN_SUCCESS :
	{
		free(l_mt_depo_part_struct_i);
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
	}

  RETURN_FAILURE :
	{
		free(l_mt_depo_part_struct_i);
 		APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
	}

} 

  int MT_Mod_DBExchDepo(MT_EXCH_DEPO_STRUCT_H *p_mt_exch_depo_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

  /* Variable Declarations */

  MT_EXCH_DEPO_STRUCT_I *l_mt_exch_depo_struct_i;

  char p_status[APL_STATUS_LEN] = APL_NULL_STRING;

  struct sqlca sqlca;

  char chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;
  char chr_status_compare[APL_STATUS_LEN] = APL_NULL_STRING;
  char chr_sys_access_stamp[APL_DATE_LEN] = APL_NULL_STRING;
  short p_i_maker, p_i_makerdt, p_i_checker, p_i_checkerdt, p_i_access_stamp;
  short p_i_access_stamp_compare;
  short p_i_status = 0;
  int int_error_flag = APL_SUCCESS;
  int int_l_rowexists = 0;
  int     int_retval = APL_SUCCESS;

  char  *l_key_codes[4];
  char  *l_key_values[4];
  char  chr_l_table_name[50] = APL_NULL_STRING;
  char  chr_l_field_val[40] = APL_NULL_STRING;

#ifdef APL_THREADS
    APL_SET_CONTEXT
    EXEC SQL CONTEXT USE :my_ctx_local;
#endif

 APL_FUNCTION_ENTER(APL_OUT_FILE)

  l_mt_exch_depo_struct_i=(MT_EXCH_DEPO_STRUCT_I*)calloc(1,sizeof(MT_EXCH_DEPO_STRUCT_I));

  APL_MALLOC_FAIL(l_mt_exch_depo_struct_i)

  p_i_maker =0;
  p_i_makerdt =0;
  p_i_checker =0;
  p_i_checkerdt =0;
  p_i_access_stamp =0;
  p_i_access_stamp_compare =0;


 if (!strlen(p_mt_exch_depo_struct_h->h_depo_code)) l_mt_exch_depo_struct_i->i_depo_code =-1;
     else l_mt_exch_depo_struct_i->i_depo_code =0;


 if (!strlen(p_mt_exch_depo_struct_h->h_depo_part_code)) l_mt_exch_depo_struct_i->i_depo_part_code =-1;
     else l_mt_exch_depo_struct_i->i_depo_part_code =0;


 if (!strlen(p_mt_exch_depo_struct_h->h_exch_code)) l_mt_exch_depo_struct_i->i_exch_code =-1;
     else l_mt_exch_depo_struct_i->i_exch_code =0;


 if (!strlen(p_mt_exch_depo_struct_h->h_cc_id)) l_mt_exch_depo_struct_i->i_cc_id =-1;
     else l_mt_exch_depo_struct_i->i_cc_id =0;


 if (!strlen(p_mt_exch_depo_struct_h->h_cm_cc_id)) l_mt_exch_depo_struct_i->i_cm_cc_id =-1;
     else l_mt_exch_depo_struct_i->i_cm_cc_id =0;

 if (!strlen(p_mt_exch_depo_struct_h->h_cln_id)) l_mt_exch_depo_struct_i->i_cln_id =-1;
     else l_mt_exch_depo_struct_i->i_cln_id =0;

 if (!strlen(p_mt_exch_depo_struct_h->h_dp_id)) l_mt_exch_depo_struct_i->i_dp_id =-1;
     else l_mt_exch_depo_struct_i->i_dp_id =0;



 if (!strlen(p_mt_exch_depo_struct_h->h_maker)) l_mt_exch_depo_struct_i->i_maker =-1;
     else l_mt_exch_depo_struct_i->i_maker =0;

 if (!strlen(p_mt_exch_depo_struct_h->h_maker_dt)) l_mt_exch_depo_struct_i->i_maker_dt =-1;
     else l_mt_exch_depo_struct_i->i_maker_dt =0;


 if (!strlen(p_mt_exch_depo_struct_h->h_access_stamp)) l_mt_exch_depo_struct_i->i_access_stamp =-1;
     else l_mt_exch_depo_struct_i->i_access_stamp =0;

 if (!strlen(p_mt_exch_depo_struct_h->h_checker)) l_mt_exch_depo_struct_i->i_checker =-1;
     else l_mt_exch_depo_struct_i->i_checker =0;

 if (!strlen(p_mt_exch_depo_struct_h->h_checker_dt)) l_mt_exch_depo_struct_i->i_checker_dt =-1;
     else l_mt_exch_depo_struct_i->i_checker_dt =0;


 if (!strlen(p_mt_exch_depo_struct_h->h_status)) l_mt_exch_depo_struct_i->i_status =-1;
     else l_mt_exch_depo_struct_i->i_status =0;

 if(CO_RtvSysDtTime(chr_sys_access_stamp,l_debug_info_ptr) !=APL_SUCCESS)
 {
		APL_GOBACK_FAIL
 }
	
 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_INPUT))
 {
	APL_IF_DEBUG
 {
 	CO_ProcMonitor(APL_OUT_FILE, "Entered Input of Function MT_Mod_DBExchDepo\n",
													NULL,p_intl_envdatastruct_h);
 }
		strcpy(p_mt_exch_depo_struct_h->h_status,STATUS_UAUTH);
      l_mt_exch_depo_struct_i->i_status =0;
   	strcpy(p_mt_exch_depo_struct_h->h_maker,p_intl_envdatastruct_h->usr);
		l_mt_exch_depo_struct_i->i_maker=0;
    	strcpy(p_mt_exch_depo_struct_h->h_maker_dt,chr_sys_access_stamp);
		l_mt_exch_depo_struct_i->i_maker_dt=0;
		strcpy(p_mt_exch_depo_struct_h->h_access_stamp,chr_sys_access_stamp);
		l_mt_exch_depo_struct_i->i_access_stamp =0;

		EXEC SQL INSERT INTO MT_EXCH_DEPO VALUES (:p_mt_exch_depo_struct_h:l_mt_exch_depo_struct_i);

		IS_ANY_ORA_ERROR_AND_DUPLICATE(MAP_DET_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	}
	else
	{
      l_key_codes[0]="DEPO_CODE";
      l_key_codes[1]="DEPO_PART_CODE";
      l_key_codes[2]="EXCH_CODE";
      l_key_codes[3]=APL_NULL_STRING;

      l_key_values[0]=p_mt_exch_depo_struct_h -> h_depo_code;
      l_key_values[1]=p_mt_exch_depo_struct_h -> h_depo_part_code;
      l_key_values[2]=p_mt_exch_depo_struct_h -> h_exch_code;
      l_key_values[3] = APL_NULL_STRING;

	   strcpy(chr_l_table_name,"MT_EXCH_DEPO");

      int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                          l_key_values,
                                          chr_l_table_name,
                                          "ACCESS_STAMP",
                                          chr_l_field_val,
                                          l_debug_info_ptr);

      if (int_retval != APL_SUCCESS)
             APL_GOBACK_FAIL

		strcpy(chr_acc_stamp_compare,chr_l_field_val);
    
		int_retval = CR_Rtv_MastChldChrVal( l_key_codes,
                                        l_key_values,
                                        chr_l_table_name,
                                        "STATUS",
                                        chr_l_field_val,
                                        l_debug_info_ptr);

      if (int_retval != APL_SUCCESS)
              APL_GOBACK_FAIL

		strcpy(chr_status_compare,chr_l_field_val);
	 }

   if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_MODIFY))
	{
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
	strcpy(p_mt_exch_depo_struct_h->h_checker,APL_NULL_STRING);
   strcpy(p_mt_exch_depo_struct_h->h_checker_dt,APL_NULL_STRING);

	APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered modify of Function MT_Mod_DBExchDepo\n",
													NULL,p_intl_envdatastruct_h);
 	}

	   if (!strcmp(p_mt_exch_depo_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_mt_exch_depo_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_exch_depo_struct_i->i_access_stamp =0;
       strcpy(p_mt_exch_depo_struct_h->h_status,STATUS_UAUTH);
			l_mt_exch_depo_struct_i->i_status =0;

			EXEC SQL UPDATE MT_EXCH_DEPO SET 
         CC_ID =:p_mt_exch_depo_struct_h->h_cc_id:l_mt_exch_depo_struct_i->i_cc_id,
         CM_CC_ID =:p_mt_exch_depo_struct_h->h_cm_cc_id:l_mt_exch_depo_struct_i->i_cm_cc_id,
         CLN_ID =:p_mt_exch_depo_struct_h->h_cln_id:l_mt_exch_depo_struct_i->i_cln_id,
         DP_ID =:p_mt_exch_depo_struct_h->h_dp_id:l_mt_exch_depo_struct_i->i_dp_id,
         MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
			MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
			ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
			CHECKER =:p_mt_exch_depo_struct_h->h_checker:p_i_checker,
			CHECKER_DT =:p_mt_exch_depo_struct_h->h_checker_dt:p_i_checkerdt,
        	STATUS =:p_mt_exch_depo_struct_h->h_status:l_mt_exch_depo_struct_i->i_status
	      WHERE 
		   DEPO_CODE	 =:p_mt_exch_depo_struct_h->h_depo_code AND
		   DEPO_PART_CODE	 =:p_mt_exch_depo_struct_h->h_depo_part_code AND
		   EXCH_CODE  =:p_mt_exch_depo_struct_h->h_exch_code;
              
			IS_ANY_ORA_ERROR	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}


   if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_AUTHORISE))
	{

		APL_IF_DEBUG
 	   {
  		    CO_ProcMonitor(APL_OUT_FILE, "Entered authorize of Function MT_Mod_DBExchDepo\n",
													NULL,p_intl_envdatastruct_h);
 	   }

		if (!strcmp(p_mt_exch_depo_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(strcmp(p_mt_exch_depo_struct_h->h_status,STATUS_DEL_UAUTH))
	    	{
	    		strcpy(p_mt_exch_depo_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_mt_exch_depo_struct_i->i_access_stamp =0;
   	    	strcpy(p_mt_exch_depo_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_mt_exch_depo_struct_i->i_checker=0;
  	    	   strcpy(p_mt_exch_depo_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_mt_exch_depo_struct_i->i_checker_dt=0;
            strcpy(p_mt_exch_depo_struct_h->h_status,STATUS_AUTH);
            l_mt_exch_depo_struct_i->i_status =0;

	    		EXEC SQL UPDATE MT_EXCH_DEPO SET 
           	CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
           	CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
				ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
           	STATUS =:p_mt_exch_depo_struct_h->h_status:l_mt_exch_depo_struct_i->i_status
	        	WHERE 
            DEPO_CODE    =:p_mt_exch_depo_struct_h->h_depo_code AND
            DEPO_PART_CODE  =:p_mt_exch_depo_struct_h->h_depo_part_code AND
            EXCH_CODE  =:p_mt_exch_depo_struct_h->h_exch_code;

            IS_ANY_ORA_ERROR 
			}
   	   else  
	    	{
	    		EXEC SQL DELETE MT_EXCH_DEPO 
	       	  	WHERE 
               DEPO_CODE    =:p_mt_exch_depo_struct_h->h_depo_code AND
               DEPO_PART_CODE  =:p_mt_exch_depo_struct_h->h_depo_part_code AND
               EXCH_CODE  =:p_mt_exch_depo_struct_h->h_exch_code;                    

			   IS_ANY_ORA_ERROR
	    	}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_RESET))
	{

		APL_IF_DEBUG
 	   {
  		     CO_ProcMonitor(APL_OUT_FILE, "Entered reset of Function MT_Mod_DBExchDepo\n",
													NULL,p_intl_envdatastruct_h);
 	   }

		if (!strcmp(p_mt_exch_depo_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
   		if(!strcmp(p_mt_exch_depo_struct_h->h_status,STATUS_DEL_UAUTH))
           {
	    		strcpy(p_mt_exch_depo_struct_h->h_access_stamp,chr_sys_access_stamp);
	    		l_mt_exch_depo_struct_i->i_access_stamp =0;
   	    	strcpy(p_mt_exch_depo_struct_h->h_checker,p_intl_envdatastruct_h->usr);
	    		l_mt_exch_depo_struct_i->i_checker=0;
  	      	strcpy(p_mt_exch_depo_struct_h->h_checker_dt,chr_sys_access_stamp);
	    		l_mt_exch_depo_struct_i->i_checker_dt=0;
            strcpy(p_mt_exch_depo_struct_h->h_status,STATUS_AUTH);
	    		l_mt_exch_depo_struct_i->i_status =0;

	    		EXEC SQL UPDATE MT_EXCH_DEPO SET 
           	CHECKER =:p_intl_envdatastruct_h->usr:p_i_checker,
            CHECKER_DT =:chr_sys_access_stamp:p_i_access_stamp,
			   ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp,
            STATUS =:p_mt_exch_depo_struct_h->h_status:l_mt_exch_depo_struct_i->i_status
	        	WHERE 
            DEPO_CODE    =:p_mt_exch_depo_struct_h->h_depo_code AND
            DEPO_PART_CODE  =:p_mt_exch_depo_struct_h->h_depo_part_code AND
            EXCH_CODE  =:p_mt_exch_depo_struct_h->h_exch_code; 

				IS_ANY_ORA_ERROR	
			}
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

 if (!strcmp(p_intl_envdatastruct_h->h_mode,APL_FUNC_DELETE))
 {
  	p_i_checker =-1;
  	p_i_checkerdt =-1;
   strcpy(p_mt_exch_depo_struct_h->h_checker,APL_NULL_STRING);
   strcpy(p_mt_exch_depo_struct_h->h_checker_dt,APL_NULL_STRING);

   APL_IF_DEBUG
 	{
  		CO_ProcMonitor(APL_OUT_FILE, "Entered delete of Function MT_Mod_DBExchDepo\n",
													NULL,p_intl_envdatastruct_h);
 	}

	   if (!strcmp(p_mt_exch_depo_struct_h->h_access_stamp,chr_acc_stamp_compare))
	   {
			strcpy(p_mt_exch_depo_struct_h->h_access_stamp,chr_sys_access_stamp);
			l_mt_exch_depo_struct_i->i_access_stamp =0;
         strcpy(p_mt_exch_depo_struct_h->h_status,STATUS_DEL_UAUTH);
			l_mt_exch_depo_struct_i->i_status =0;

			      EXEC SQL UPDATE MT_EXCH_DEPO SET 
            	MAKER =:p_intl_envdatastruct_h->usr:p_i_maker,
					MAKER_DT =:chr_sys_access_stamp:p_i_makerdt,
					CHECKER =:p_mt_exch_depo_struct_h->h_checker:p_i_checker,
					CHECKER_DT =:p_mt_exch_depo_struct_h->h_checker_dt:p_i_checkerdt,
            	STATUS =:p_mt_exch_depo_struct_h->h_status:l_mt_exch_depo_struct_i->i_status,
					ACCESS_STAMP =:chr_sys_access_stamp:p_i_access_stamp
	       	  	WHERE 
               DEPO_CODE    =:p_mt_exch_depo_struct_h->h_depo_code AND
               DEPO_PART_CODE  =:p_mt_exch_depo_struct_h->h_depo_part_code AND
               EXCH_CODE  =:p_mt_exch_depo_struct_h->h_exch_code;

					IS_ANY_ORA_ERROR	
	   }
		else 
	   {
			if (CO_InsertErr
			(l_debug_info_ptr,
			 ERR_ACCESSSTAMP_CHGD, 
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 APL_NULL_STRING,
			 __LINE__,
			 __FILE__
			) != APL_SUCCESS)
			APL_GOBACK_FAIL
			APL_GOBACK_FAIL
	   } 
	}

   l_key_codes[0]="DEPO_CODE";
   l_key_codes[1]="DEPO_PART_CODE";
   l_key_codes[2]=APL_NULL_STRING;

   l_key_values[0]=p_mt_exch_depo_struct_h->h_depo_code;
   l_key_values[1]=p_mt_exch_depo_struct_h->h_depo_part_code;
   l_key_values[2] = APL_NULL_STRING;
   
	int_retval = CR_Mod_UpdMastStatus(  l_key_codes,
                                       l_key_values,
                                       g_l_mst_table_name,
                                       g_l_chld_table_names,
                                       APL_CHILD_IND,
                                       p_status,
                                       chr_sys_access_stamp,
                                       p_intl_envdatastruct_h,
                                       l_debug_info_ptr);
 
      APL_IF_DEBUG
      {
        printf("Returned Status Value = |%s|\n",p_status);
      }
 
          if (int_retval != APL_SUCCESS)
               APL_GOBACK_FAIL





 if (int_error_flag == APL_FAILURE)
	{
		APL_GOBACK_FAIL
	}
 APL_GOBACK_SUCCESS

 RETURN_SUCCESS :
	{
		APL_FUNCTION_RET_SUCCESS(APL_OUT_FILE)
		free(l_mt_exch_depo_struct_i);
		return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
 	APL_FUNCTION_RET_FAILURE(APL_OUT_FILE)
		free(l_mt_exch_depo_struct_i);
		return(APL_FAILURE);
	}

} 

