




#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int DL_Rtv_DLPmtRst(char *p_client,char *p_indentity_no,DL_DEAL_RSTPMT_STRUCT_H *l_dl_deal_rstpmt_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
  struct sqlca sqlca;

  char chr_p_confdt[APL_DATE_LEN];
  char p_setldt[APL_DATE_LEN];

  int int_p_diff =0;

  short p_i_rowid =0;
  short p_i_maker =0;
  short p_i_accstmp_cmp =0;
  short p_i_locncode =0;
  short p_i_status =0;
  short p_i_qty =0;
  short p_i_confdt =0;
  short p_i_settledt =0;
  short p_i_orefretval =0;
  short p_i_delrecdt =0;
  short p_i_instr_dt =0;
  short p_i_moneydt =0;
  short p_i_instr_code =0;
  short p_i_ccycode =0;
  short p_i_posnstatus =0;
  short p_i_trcode =0;
  short p_i_failcode =0;
  short p_i_trdfromord =0;

#ifdef APL_THREADS
	APL_SET_CONTEXT
	EXEC SQL CONTEXT USE :my_ctx_local;
#endif

  sqlca.sqlcode =0;

  strcpy(chr_p_confdt,APL_NULL_STRING); 
  strcpy(p_setldt,APL_NULL_STRING); 


#ifdef SYS_DEBUG
	fprintf(APL_OUT_FILE, "Entered Function DL_Rtv_DLPmtRst. Going for mandatory checks\n");
#endif
	
	if (!strlen(p_client)) APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING);
  	if (!strlen(p_indentity_no)) APL_DATA_MISSING("Reference Number",APL_NULL_STRING,APL_NULL_STRING);
  
   if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}

  
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_maker IS STRING(15); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_cltstmp_cmp IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_loccode IS STRING(5); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_status_ind IS STRING(3); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_dt IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_orefretval IS STRING(17); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_delrecdate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_instrdate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_moneydate IS STRING(20); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_instr_code IS STRING(9); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_currencycode IS STRING(4); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_posnstatus_ind IS STRING(4); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_failreas_cd IS STRING(3); 
   EXEC SQL VAR l_dl_deal_rstpmt_struct_h->p_dlfromord IS STRING(2);

   EXEC SQL VAR chr_p_confdt IS STRING(20); 
   EXEC SQL VAR p_setldt IS STRING(20); 

   EXEC SQL SELECT 	ROWID,
			MAKER,
			ACCESS_STAMP,
			LOCATION_CD, 
			DEAL_STAT, 
			QTY,
			VAL_FDT,
			SETL_DATE,
			ORIG_REFNO,
			DEL_REC_DATE,
			INSTRUMENT_DT,
			MONEY_SETL_DT,
			INSTR_CODE,
			CURRENCY_CD,
			STATUS_POS,
			DEAL_CD,
			FAILREASON_CD,
			DEAL_FRM_ORD 
	INTO 		:l_dl_deal_rstpmt_struct_h->p_ora_rowid:p_i_rowid,
			:l_dl_deal_rstpmt_struct_h->p_maker:p_i_maker, 
			:l_dl_deal_rstpmt_struct_h->p_cltstmp_cmp:p_i_accstmp_cmp,
			:l_dl_deal_rstpmt_struct_h->p_loccode:p_i_locncode,
			:l_dl_deal_rstpmt_struct_h->p_status_ind:p_i_status,
			:l_dl_deal_rstpmt_struct_h->p_quantity:p_i_qty,
			:chr_p_confdt:p_i_confdt,
			:p_setldt:p_i_settledt,
			:l_dl_deal_rstpmt_struct_h->p_orefretval:p_i_orefretval,
			:l_dl_deal_rstpmt_struct_h->p_delrecdate:p_i_delrecdt,
			:l_dl_deal_rstpmt_struct_h->p_instrdate:p_i_instr_dt,
			:l_dl_deal_rstpmt_struct_h->p_moneydate:p_i_moneydt,
			:l_dl_deal_rstpmt_struct_h->p_instr_code:p_i_instr_code,
			:l_dl_deal_rstpmt_struct_h->p_currencycode:p_i_ccycode,
			:l_dl_deal_rstpmt_struct_h->p_posnstatus_ind:p_i_posnstatus,
			:l_dl_deal_rstpmt_struct_h->p_dealcd:p_i_trcode ,
			:l_dl_deal_rstpmt_struct_h->p_failreas_cd:p_i_failcode,
			:l_dl_deal_rstpmt_struct_h->p_dlfromord:p_i_trdfromord 
        FROM DL_DEAL
   		WHERE CLIENT =:p_client AND 
	        	IDENTIY_NO =:p_indentity_no 
			FOR UPDATE OF ACCESS_STAMP;
	
  	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
														p_client,
														p_indentity_no,
														APL_NULL_STRING )

  if(strlen(chr_p_confdt))
    {
    if (APL_SUCCESS == CO_Pro_DateComp(chr_p_confdt,p_setldt,&int_p_diff,l_debug_info_ptr))
     {
      if (int_p_diff >0)
	{
	strcpy(l_dl_deal_rstpmt_struct_h->p_dt,p_setldt);
	}
    else 
	{
        strcpy(l_dl_deal_rstpmt_struct_h->p_dt,chr_p_confdt);
	}
      }
    else if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
      {
      APL_GOBACK_FAIL
      }
    }
  else 
    {
    strcpy(l_dl_deal_rstpmt_struct_h->p_dt,p_setldt);
    }



 if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	{
	APL_GOBACK_FAIL
	}


  APL_GOBACK_SUCCESS

  RETURN_SUCCESS :
	{
#ifdef SYS_DEBUG
	fprintf(APL_OUT_FILE, "Leaving Function CDBRstPmTFn. Successful\n");
#endif
	return(APL_SUCCESS);
	}
  RETURN_FAILURE :
	{
#ifdef SYS_DEBUG
	fprintf(APL_OUT_FILE, "Leaving Function CDBRstPmTFn. Failed\n");
#endif
	return(APL_FAILURE);
	}

}

int CR_Chk_EMUConv(	char *chr_p_client,
							char *chr_p_refno,
							int  *p_flg,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr )
{
	int		int_l_flg								= 0;
	int		int_l_h_count						= 0;
	char		chr_l_h_confdt[APL_DATE_LEN]	= APL_NULL_STRING;
	short		l_i_confdt						= 0;
	short		l_i_count						= 0;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	

	EXEC SQL SELECT VAL_FDT
	INTO :chr_l_h_confdt:l_i_confdt
	FROM DL_DEAL
	WHERE CLIENT = RTRIM(:chr_p_client)
	AND	IDENTIY_NO	  = RTRIM(:chr_p_refno);

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
														chr_p_client,
														chr_p_refno,
														APL_NULL_STRING )

	if (APL_FAILURE == CO_Chk_EMU_Period(	chr_l_h_confdt,
													&int_l_flg,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	if (int_l_flg==2)
	{
		

		EXEC SQL SELECT NVL(COUNT(*),0)
		INTO :int_l_h_count:l_i_count
		FROM PRO_EURO_TEMP
		WHERE CLIENT = RTRIM(:chr_p_client)
		AND	DF_IDENTNO = RTRIM(:chr_p_refno)
		AND	PROC_AREA = 'CONV';

		IS_ANY_ORA_ERROR

		if (int_l_h_count)
		{
			*p_flg = 1;
		}
		else
		{
			*p_flg = 0;
		}
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
		fprintf(APL_OUT_FILE, "Leaving Function CR_Chk_EMUConv Successful\n");
		return(APL_SUCCESS);
	RETURN_FAILURE :
		fprintf(APL_OUT_FILE, "Leaving Function CR_Chk_EMUConv Failed\n");
		return(APL_FAILURE);
}
