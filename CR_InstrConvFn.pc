


   
   
   
   
   
   
   
   
   
   
   
   




#include <CO_HostStructdef.h>

EXEC SQL INCLUDE sqlca;



int CR_Mod_InstrConv(DL_INSTRUMENTCONV_OTH_STRUCT_H *p_dl_instrumentconv_oth_struct_h,char *p_row_id_from_instr,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca 		  		sqlca;
	int     		 		  		i;
	int							int_l_noelements = 0;
	char							chr_l_buf[BUFFER_LEN];
	char							chr_h_sys_access_stamp[APL_DATE_LEN];
	char							**chr_l_acc_arr = NULL;
	short							i_to_instrurity;
	short							i_user;
	short							i_sys_access_stamp;
	DL_INSTRUMENTCONV_STRUCT_H			*l_dl_instrumentconv_struct_ha=NULL;
	DL_INSTRUMENTCONV_STRUCT_I			*l_dl_instrumentconv_struct_ia=NULL;
	
	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0;

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Mod_InstrConv \n",NULL,p_intl_env_data_struct_h_d);

		memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
		sprintf(chr_l_buf,"From instrument is %s \n",p_dl_instrumentconv_oth_struct_h->h_frm_instr_code);
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,p_intl_env_data_struct_h_d);
		
		memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
		sprintf(chr_l_buf,"To instrument is %s \n",p_dl_instrumentconv_oth_struct_h->h_to_instrurity);
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,p_intl_env_data_struct_h_d);
	}

	

	l_dl_instrumentconv_struct_ha = (DL_INSTRUMENTCONV_STRUCT_H *)calloc(1,sizeof(DL_INSTRUMENTCONV_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_instrumentconv_struct_ha)

	
	

	l_dl_instrumentconv_struct_ia = (DL_INSTRUMENTCONV_STRUCT_I *)calloc(1,sizeof(DL_INSTRUMENTCONV_STRUCT_I));
	APL_MALLOC_FAIL(l_dl_instrumentconv_struct_ia)

  

	if (CO_RtvSysDtTime(chr_h_sys_access_stamp, l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	i_to_instrurity = 0;
	i_user = 0;
	i_sys_access_stamp = 0;
		
	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
		APL_GOBACK_FAIL

	EXEC SQL UPDATE MT_INSTRUMENT
	SET NEW_CD = :p_dl_instrumentconv_oth_struct_h->h_to_instrurity:i_to_instrurity,
		 NEW_MAKER = :p_intl_env_data_struct_h_d->usr:i_user,
		 access_stamp = :chr_h_sys_access_stamp:i_sys_access_stamp
	WHERE ROWID = :p_row_id_from_instr;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	if (p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr > 0)
	{
		if ( APL_FAILURE == CO_SplitStr( 	p_dl_instrumentconv_oth_struct_h->h_cltt_arr,
														';',
														&int_l_noelements,
														&chr_l_acc_arr ) )
		{
			APL_GOBACK_FAIL;
		}

		if ( int_l_noelements != p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr)
		{
			CO_InsertErr( 	l_debug_info_ptr,
									ERR_DATA_INTEGRITY,
									"No. Of Accounts",
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__ );
			APL_GOBACK_FAIL;
		}

		for(i=0;i<p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr;i++)
		{
			strcpy(l_dl_instrumentconv_struct_ha->h_frm_instr_code, p_dl_instrumentconv_oth_struct_h->h_frm_instr_code);
			strcpy(l_dl_instrumentconv_struct_ha->h_to_instrurity, p_dl_instrumentconv_oth_struct_h->h_to_instrurity);
			strcpy(l_dl_instrumentconv_struct_ha->h_dl_client, chr_l_acc_arr[i]);
			strcpy(l_dl_instrumentconv_struct_ha->h_conv_dt, APL_NULL_STRING);

			
	
			if(strlen(l_dl_instrumentconv_struct_ha->h_dl_client) == 0)
				l_dl_instrumentconv_struct_ia->i_dl_client = -1;
			else
				l_dl_instrumentconv_struct_ia->i_dl_client = 0;

			if(strlen(l_dl_instrumentconv_struct_ha->h_conv_dt) == 0)
				l_dl_instrumentconv_struct_ia->i_conv_dt = -1;
			else
				l_dl_instrumentconv_struct_ia->i_conv_dt = 0;
	
			
			l_dl_instrumentconv_struct_ia->i_frm_instr_code = 0;
			l_dl_instrumentconv_struct_ia->i_to_instrurity = 0;

			if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
				APL_GOBACK_FAIL

			EXEC SQL INSERT INTO DL_INSTRUMENTCONV
			VALUES (:l_dl_instrumentconv_struct_ha:l_dl_instrumentconv_struct_ia   
					 );
	
			IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		}
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_FREE(l_dl_instrumentconv_struct_ha)
		
		APL_FREE(l_dl_instrumentconv_struct_ia)

		APL_FREE(chr_l_acc_arr);

		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CR_Mod_InstrConv \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		APL_FREE(l_dl_instrumentconv_struct_ha)
		
		APL_FREE(l_dl_instrumentconv_struct_ia)

		APL_FREE(chr_l_acc_arr);
		
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CR_Mod_InstrConv \n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int CR_Chk_InstrConvCyclic(char *p_from_instr,char *p_row_id_to_instr,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca					sqlca;
	char								h_new_cd[9];
	short								i_new_cd;

	EXEC SQL VAR h_new_cd IS STRING;
	
	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0;
	
	APL_IF_DEBUG
		CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvCyclic \n",NULL,NULL);
	EXEC SQL SELECT NEW_CD
	INTO h_new_cd:i_new_cd
	FROM MT_INSTRUMENT
	WHERE ROWID = :p_row_id_to_instr;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	if (strcmp(h_new_cd,p_from_instr) != 0)
		APL_GOBACK_SUCCESS
	else
		APL_GOBACK_FAIL

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvCyclic \n",NULL,NULL);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvCyclic \n",NULL,NULL);
		if (sqlca.sqlcode == 0)
			return(ERR_INSTRCYCLIC_CONV);
		else
			return(APL_FAILURE);
	}
}



 int CR_Chk_InstrConvClass(DL_INSTRUMENTCONV_OTH_STRUCT_H *p_dl_instrumentconv_oth_struct_h,char *p_row_id_from_instr,char *p_row_id_to_instr,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
	struct sqlca 	sqlca;
	int			 	int_retval;
	char				chr_h_from_clscode[5];
	short				i_from_clscode;
	char				chr_h_to_clscode[5];
	short				i_to_clscode;
	char				chr_mainfuncarea[APL_MAINFUNCAREA_LEN];
	char				chr_l_condid[APL_CONDID_LEN];
	short				int_l_condexists;

	EXEC SQL VAR chr_h_from_clscode IS STRING;
	EXEC SQL VAR chr_h_to_clscode IS STRING;
	
	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0;
	
	APL_IF_DEBUG
		CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvClass \n",NULL,NULL);
	EXEC SQL SELECT CLASSCD
	INTO :chr_h_from_clscode:i_from_clscode
	FROM MT_INSTRUMENT
	WHERE ROWID = :p_row_id_from_instr;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	
	EXEC SQL SELECT CLASSCD
	INTO :chr_h_to_clscode:i_to_clscode
	FROM MT_INSTRUMENT
	WHERE ROWID = :p_row_id_to_instr;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	strcpy(chr_mainfuncarea, "INSTR_CONV");
	strcpy(chr_l_condid, "CLSCODE_CHK_FOR_HS");

	int_retval = CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condid,&int_l_condexists,l_debug_info_ptr);
	if (int_retval != APL_SUCCESS)
		APL_GOBACK_FAIL

	if (int_l_condexists > 0)
	{
		if ((strcmp(chr_h_from_clscode, "HS") == 0) &&
			 (strcmp(chr_h_to_clscode, "HS") != 0)) 
		{
			int_retval = CR_Chk_InstrConvOrd(p_dl_instrumentconv_oth_struct_h,l_debug_info_ptr);
			if (int_retval == APL_RECS_EXIST)
				CO_InsertErr(l_debug_info_ptr,ERR_ORDEXIST_CANT_CONV_INSTR,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			else if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL
		}
	}
 
	
   memset(chr_mainfuncarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
   memset(chr_l_condid,APL_NULL_CHAR,APL_CONDID_LEN);
   int_l_condexists = 0;	

	strcpy(chr_mainfuncarea, "INSTR_CONV");
	strcpy(chr_l_condid, "CLSCODE_CHK_FOR_NTRD");
	
	int_retval = CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condid,&int_l_condexists,l_debug_info_ptr);
   if (int_retval != APL_SUCCESS)
      APL_GOBACK_FAIL

   if (int_l_condexists > 0)
   {
		if (strcmp(chr_h_from_clscode,"NTRD") == 0)
		{
			CO_InsertErr(l_debug_info_ptr,ERR_NTRDTYPE_INSTR_NOTALLOWED,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			APL_GOBACK_FAIL	
		}
      if ((strcmp(chr_h_from_clscode, "NTRD") !=0) && (strcmp(chr_h_to_clscode, "NTRD") == 0))
		{
			int_retval = CR_Chk_InstrConvDelDL(p_dl_instrumentconv_oth_struct_h,l_debug_info_ptr);
         if (int_retval == APL_RECS_EXIST)
			{
            CO_InsertErr(l_debug_info_ptr,ERR_DLVTRDEXIST_CANT_CONVERTINSTR,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
				APL_GOBACK_FAIL
			}
			else if (int_retval == APL_FAILURE)
            APL_GOBACK_FAIL
		}
   }
	
	 memset(chr_mainfuncarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
   memset(chr_l_condid,APL_NULL_CHAR,APL_CONDID_LEN);
   int_l_condexists = 0;
	
	
	strcpy(chr_mainfuncarea, "INSTR_CONV");
	strcpy(chr_l_condid, "CLSCODE_CHK_FOR_MIN");

	int_retval = CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condid,&int_l_condexists,l_debug_info_ptr);
	if (int_retval != APL_SUCCESS)
		APL_GOBACK_FAIL

	if (int_l_condexists > 0)
	{
		if ((strcmp(chr_h_from_clscode, "MIN") != 0) &&
			 (strcmp(chr_h_to_clscode, "MIN") == 0)) 
		{
			int_retval = CR_Chk_VerPymtTrd(p_dl_instrumentconv_oth_struct_h,l_debug_info_ptr);
			if (int_retval == APL_RECS_EXIST)
				CO_InsertErr(l_debug_info_ptr,ERR_PYMNTTRDEXIST_CANT_CONV_INSTR,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			else if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL

			
			int_retval = CR_Chk_InstrConvOrd(p_dl_instrumentconv_oth_struct_h,l_debug_info_ptr);
			if (int_retval == APL_RECS_EXIST)
				CO_InsertErr(l_debug_info_ptr,ERR_ORDEXIST_CANT_CONV_INSTR,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			else if (int_retval == APL_FAILURE)
				APL_GOBACK_FAIL
	
		}
	}
	
	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
		APL_GOBACK_FAIL

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvClass \n",NULL,NULL);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvClass \n",NULL,NULL);
		return(APL_FAILURE);
	}
}




int CR_Chk_InstrConvOrd(DL_INSTRUMENTCONV_OTH_STRUCT_H *p_dl_instrumentconv_oth_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

	struct sqlca sqlca;
	int			 int_l_num_rows = 0;
	int			 i;
	int			 int_l_noelements = 0;
	char			 **chr_l_acc_arr = NULL;
	
	EXEC SQL END DECLARE SECTION;
	
	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0;
		
	APL_IF_DEBUG
		CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvOrd \n",NULL,NULL);

	if(p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr == 0)
	{
		EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_num_rows
		FROM OR_ORDERDETAILS
		WHERE instr_code = :p_dl_instrumentconv_oth_struct_h->h_frm_instr_code;

		IS_ANY_ORA_ERROR

		if (int_l_num_rows > 0)
			APL_GOBACK_FAIL
	}
	else
	{
		if ( APL_FAILURE == CO_SplitStr( 	p_dl_instrumentconv_oth_struct_h->h_cltt_arr,
														';',
														&int_l_noelements,
														&chr_l_acc_arr ) )
		{
			APL_GOBACK_FAIL;
		}

		if ( int_l_noelements != p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr)
		{
			CO_InsertErr( 	l_debug_info_ptr,
									ERR_DATA_INTEGRITY,
									"No. Of Accounts",
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__ );
			APL_GOBACK_FAIL;
		}

		for(i=0;i<p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr;i++)
		{
			EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_num_rows
			FROM OR_ORDERDETAILS
			WHERE instr_code = :p_dl_instrumentconv_oth_struct_h->h_frm_instr_code
			AND client = :chr_l_acc_arr[i];

			IS_ANY_ORA_ERROR

			if (int_l_num_rows > 0)
				APL_GOBACK_FAIL
		}
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvOrd \n",NULL,NULL);

		APL_FREE(chr_l_acc_arr);
		return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvOrd \n",NULL,NULL);
		
		APL_FREE(chr_l_acc_arr);
		if (sqlca.sqlcode == 0)
			return(APL_RECS_EXIST);
		else
			return(APL_FAILURE);
	}
}



int CR_Chk_VerPymtTrd(DL_INSTRUMENTCONV_OTH_STRUCT_H *p_dl_instrumentconv_oth_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

	struct sqlca sqlca;
	int			 int_l_num_rows = 0;
	int			 i;
	int			 int_l_noelements = 0;
	char			 **chr_l_acc_arr = NULL;
	
	EXEC SQL END DECLARE SECTION;
	
	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0;
		
	APL_IF_DEBUG
		CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_VerPymtTrd \n",NULL,NULL);

	if(p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr == 0)
	{
		EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_num_rows
		FROM DL_DEAL
		WHERE instr_code = :p_dl_instrumentconv_oth_struct_h->h_frm_instr_code
		AND deal_cd IN ('3','4','5','6','7','8');

		IS_ANY_ORA_ERROR

		if (int_l_num_rows > 0)
			APL_GOBACK_FAIL
	}
	else
	{
		if ( APL_FAILURE == CO_SplitStr( 	p_dl_instrumentconv_oth_struct_h->h_cltt_arr,
														';',
														&int_l_noelements,
														&chr_l_acc_arr ) )
		{
			APL_GOBACK_FAIL;
		}

		if ( int_l_noelements != p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr)
		{
			CO_InsertErr( 	l_debug_info_ptr,
									ERR_DATA_INTEGRITY,
									"No. Of Accounts",
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__ );
			APL_GOBACK_FAIL;
		}

		for(i=0;i<p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr;i++)
		{
			EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_num_rows
			FROM DL_DEAL
			WHERE instr_code = :p_dl_instrumentconv_oth_struct_h->h_frm_instr_code
			AND client = :chr_l_acc_arr[i]
			AND deal_cd IN ('3','4','5','6','7','8');

			IS_ANY_ORA_ERROR

			if (int_l_num_rows > 0)
				APL_GOBACK_FAIL
		}
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_VerPymtTrd \n",NULL,NULL);
		APL_FREE(chr_l_acc_arr);

		return(APL_SUCCESS);
	}
	
	RETURN_FAILURE :
	{
		APL_IF_DEBUG
			CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_VerPymtTrd \n",NULL,NULL);

		APL_FREE(chr_l_acc_arr);
	
		if (sqlca.sqlcode == 0)
			return(APL_RECS_EXIST);
		else
			return(APL_FAILURE);
	}
}



int CR_Chk_InstrConvDelDL(DL_INSTRUMENTCONV_OTH_STRUCT_H *p_dl_instrumentconv_oth_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   EXEC SQL BEGIN DECLARE SECTION;
	struct sqlca sqlca;
   int          int_l_num_rows = 0;
   int          i;
   int          int_l_noelements = 0;
   char         **chr_l_acc_arr = NULL;

   EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

   sqlca.sqlcode = 0;

   APL_IF_DEBUG
      CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvDelDL \n",NULL,NULL);

   if(p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr != 0)
	{
		if ( APL_FAILURE == CO_SplitStr(   p_dl_instrumentconv_oth_struct_h->h_cltt_arr,
                                          ';',
                                          &int_l_noelements,
                                          &chr_l_acc_arr ) )
      {
         APL_GOBACK_FAIL;
      }

      if ( int_l_noelements != p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr)
      {
         CO_InsertErr(   l_debug_info_ptr,
                           ERR_DATA_INTEGRITY,
                           "No. Of Accounts",
                           APL_NULL_STRING,
                           APL_NULL_STRING,
                           __LINE__,
                           __FILE__ );
         APL_GOBACK_FAIL;
      }

		for(i=0;i<p_dl_instrumentconv_oth_struct_h->h_noelements_cltt_arr;i++)
      {
         EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_num_rows
         FROM DL_DEAL
         WHERE instr_code = :p_dl_instrumentconv_oth_struct_h->h_frm_instr_code
         AND client = :chr_l_acc_arr[i]
         AND (deal_cd = '1' or deal_cd = '3' or deal_cd = '5' or deal_cd = '7');

         IS_ANY_ORA_ERROR

         if (int_l_num_rows > 0)
            APL_GOBACK_FAIL
      }
   }
	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvDelDL \n",NULL,NULL);
      APL_FREE(chr_l_acc_arr);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
	{
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Chk_InstrConvDelDL \n",NULL,NULL);
      APL_FREE(chr_l_acc_arr);
		
		if (sqlca.sqlcode == 0)
         return(APL_RECS_EXIST);
      else
         return(APL_FAILURE);
   }
}
