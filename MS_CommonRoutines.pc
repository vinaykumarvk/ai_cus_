


















 

#include "CR_Common.h"
#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "IV_Control_A.h"
#include "MS_Swift.h"
#include "DL_Interface.h"
#include "CO_HostStructdef.h"
#include "CO_Commdef.h" 

#define   APL_REFNO_LENGTH 17;
#define  APL_DOMICILE_LOCAL '1'
#define  BOG_DLCD_A		"00731"	
#define  BOG_DLCD_B		"00090"	
#define  BOG_DLCD_C		"00050"	 
#define  BOG_DLCD_D		"07322"	 
EXEC SQL INCLUDE SQLCA;


int   MT_Rtv_Acc(char		*chr_p_client,
							 char		*p_cubk,
							 char  	*p_orderac,
							 char		*p_checker,
							 int		*int_p_retstat,
							 DEBUG_INFO_STRUCT_H  **l_debug_info_ptr)
{

 char		h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
 char	   h_clt_brk_all[2] = APL_NULL_STRING;
 char		h_ord_clt[2] = APL_NULL_STRING;
 char		h_checker[APL_USERID_LEN] = APL_NULL_STRING;	

	EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL VAR h_dl_client IS STRING;
	EXEC SQL VAR h_ord_clt IS STRING;
	EXEC SQL VAR h_checker IS STRING;
	struct	sqlca	sqlca;

	EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
   APL_SET_CONTEXT
   EXEC SQL CONTEXT USE :my_ctx_local;
#endif


	strcpy(h_dl_client,chr_p_client);

	EXEC SQL SELECT CLN_BRK_ALL,CLN_ORD_CLT,checker
				INTO :h_clt_brk_all,:h_ord_clt,:h_checker
				FROM MT_CLIENT
				WHERE CLN_CODE=:h_dl_client;

	
	if (sqlca.sqlcode < 0)
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
		APL_GOBACK_FAIL
	}
	if (sqlca.sqlcode == 1403)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL

	}
	
	strcpy(p_cubk,h_clt_brk_all);
	strcpy(p_orderac,h_ord_clt);
	strcpy(p_checker,h_checker);
	
	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS;

	

	RETURN_SUCCESS:
		
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of BBDbSelCACCOUNT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
   }

   return APL_SUCCESS;

   RETURN_FAILURE:

      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of BBDbSelCACCOUNT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }
		return APL_FAILURE;
}


int IV_Rtv_CntDL(  char	*chr_p_client,
		    				 char *chr_p_refno,		
				   		 int  *int_p_retstat,
					   	 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	char    h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	char	  h_indentity_no[17] 					  = APL_NULL_STRING;

	int	 int_h_count =0;

	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR h_dl_client IS STRING;
	EXEC SQL VAR h_indentity_no IS STRING;

	struct	sqlca	sqlca;

	EXEC SQL END DECLARE SECTION;


#ifdef APL_THREADS
   APL_SET_CONTEXT
   EXEC SQL CONTEXT USE :my_ctx_local;
#endif


	strcpy(h_dl_client,chr_p_client);
	strcpy(h_indentity_no,chr_p_refno);

	EXEC SQL SELECT COUNT(*) 
				INTO :int_h_count 
				FROM DL_DEAL 
				WHERE CLIENT	=	:h_dl_client 	
						AND IDENTIY_NO = :h_indentity_no;

	if (sqlca.sqlcode <0)
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
		APL_GOBACK_FAIL
	}
	if (APL_ZERO_RESULT_SET)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL
	}
	if (int_h_count == 0)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS;

	

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of BBDbSelDetINSTRUMENT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
   }
   return APL_SUCCESS;

   RETURN_FAILURE:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of BBDbSelDetINSTRUMENT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }
		return APL_FAILURE;
}



int MT_Rtv_InstrDet(char	*p_instr_code,
								char	*p_statusus,
								char	*p_loccode,
								char	*p_ex_arena,
								char	*p_currencycode,
								char	*chr_p_regbrind,
								char  *p_canrf,
								char  *p_canrvp,
								char  *p_candf,
								char	*p_candvp,
								int	*int_p_retstat,
								DEBUG_INFO_STRUCT_H	**l_debug_info_ptr)
{

char 	h_instr_code[APL_INSTRUMENTCODE_LEN]  = APL_NULL_STRING;
char	h_status[3] 			  = APL_NULL_STRING;
char	h_loccode[5] 				  = APL_NULL_STRING;
char	h_ex_arena[3]				  = APL_NULL_STRING;
char	h_currencycode[APL_CCYCODE_LEN]= APL_NULL_STRING;
char	h_regbrflag[3]				  = APL_NULL_STRING;	
char  h_allow_rf[2]						= APL_NULL_STRING;
char  h_allow_df[2]						= APL_NULL_STRING;
char  h_allow_rvp[2]						= APL_NULL_STRING;
char  h_allow_dvp[2]						= APL_NULL_STRING;
short l_i_locncode = 0; 




EXEC SQL BEGIN DECLARE SECTION;

EXEC SQL VAR h_instr_code 		IS STRING;
EXEC SQL VAR h_status 	IS STRING;
EXEC SQL VAR h_loccode 	IS STRING;
EXEC SQL VAR h_ex_arena 		IS STRING;
EXEC SQL VAR h_currencycode 		IS STRING;
EXEC SQL VAR h_regbrflag		IS STRING;
EXEC SQL VAR h_allow_rf       IS STRING;
EXEC SQL VAR h_allow_df       IS STRING;
EXEC SQL VAR h_allow_rvp       IS STRING;
EXEC SQL VAR h_allow_dvp       IS STRING;

struct	sqlca sqlca;

EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
   APL_SET_CONTEXT
   EXEC SQL CONTEXT USE :my_ctx_local;
#endif


strcpy(h_instr_code,p_instr_code);


EXEC SQL SELECT STATUS , 
					 LOCATION_CD , 
					 EX_ARENA, 
					 CURRENCY_CD,
					 REG_BR_IND ,
					 ALLOW_RF , 
					 ALLOW_DF, 
					 ALLOW_RVP , 
					 ALLOW_DVP
			INTO  :h_status, 
					:h_loccode:l_i_locncode, 
					:h_ex_arena, 
					:h_currencycode, 
					:h_regbrflag ,
					:h_allow_rf, 
					:h_allow_df, 
					:h_allow_rvp ,
					:h_allow_dvp
			FROM MT_INSTRUMENT
			WHERE INSTR_CODE = :h_instr_code;

	if (sqlca.sqlcode <0 )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
		APL_GOBACK_FAIL

	}
	if (sqlca.sqlcode == 1403)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL
	}

	strcpy(p_statusus,h_status);
	strcpy(p_loccode,h_loccode);
	strcpy(p_ex_arena, h_ex_arena);
	strcpy(p_currencycode, h_currencycode);
	strcpy(chr_p_regbrind, h_regbrflag);
	strcpy(p_canrf, h_allow_rf);
	strcpy(p_candf, h_allow_df);
	strcpy(p_canrvp, h_allow_rvp);
	strcpy(p_candvp, h_allow_dvp);


	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS;

	

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of BBDbSelDetINSTRUMENT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
   }
   return APL_SUCCESS;

   RETURN_FAILURE:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of BBDbSelDetINSTRUMENT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }
		return APL_FAILURE;
}



int  MT_Rtv_AccDet_A(char	*chr_p_client,
								char	*chr_p_cname,
								char	*p_domicile,
								char	*p_fxsalesflg,
								char	*p_fxpurchflg,
								char	*p_spotdealflg,
								int	*int_p_retstat,
								DEBUG_INFO_STRUCT_H	**l_debug_info_ptr)
{



char	h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char	h_clnt_clr_name[66]						= APL_NULL_STRING;
char	h_domestic[2]					= APL_NULL_STRING;
char	h_fx_sell_flag[2]				= APL_NULL_STRING;
char	h_fx_buy_flag[2]				= APL_NULL_STRING;
char	h_spotdlflg[2]				= APL_NULL_STRING;


EXEC SQL BEGIN DECLARE SECTION;

EXEC SQL VAR h_dl_client 		IS STRING;
EXEC SQL VAR h_clnt_clr_name 		IS STRING;
EXEC SQL VAR h_domestic 	IS STRING;
EXEC SQL VAR h_fx_sell_flag 	IS STRING;
EXEC SQL VAR h_fx_buy_flag 	IS STRING;
EXEC SQL VAR h_spotdlflg 	IS STRING;

struct sqlca sqlca;

EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
   APL_SET_CONTEXT
   EXEC SQL CONTEXT USE :my_ctx_local;
#endif



strcpy(h_dl_client,chr_p_client);

EXEC SQL SELECT CLN_NAME,CLN_DOMICILE,CLN_FX_SELL_IND,
					 CLN_FX_BUY_IND,CLN_SPOT_DL_IND
					 INTO	:h_clnt_clr_name,:h_domestic,:h_fx_sell_flag ,
					 		:h_fx_buy_flag ,:h_spotdlflg
					 FROM MT_CLIENT 
					 WHERE CLN_CODE = :h_dl_client;

if (sqlca.sqlcode < 0)
{
	*int_p_retstat = IV_CRITCAL_ERROR_IND;
	APL_GOBACK_FAIL
}
if (APL_ZERO_RESULT_SET)
{
	*int_p_retstat = IV_NO_DATA_FOUND_ERR;
	APL_GOBACK_FAIL
}

strcpy(chr_p_cname,h_clnt_clr_name);
strcpy(p_domicile,h_domestic);
strcpy(p_fxsalesflg,h_fx_sell_flag);
strcpy(p_fxpurchflg,h_fx_buy_flag);
strcpy(p_spotdealflg,h_spotdlflg);

APL_GOBACK_SUCCESS;

	
	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of MT_Rtv_AccDet_A Successfully\n",NULL,NULL);

	}
	return APL_SUCCESS;


	RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of MT_Rtv_AccDet_A unsccessfully\n",NULL,NULL);

	}
	return APL_FAILURE;

}



int   IV_Rtv_BICCDAcc(  char           *p_bic_code,
                                 char           *chr_p_client,
                                 char           *chr_p_cname,
											int				*int_p_retstat,
                                 DEBUG_INFO_STRUCT_H      **l_debug_info_ptr)
{
   

   EXEC SQL BEGIN DECLARE SECTION;
   char  brk_cd[13];             
   char  h_dl_client[APL_CLIENT_LENGTH]; 
   char  h_clnt_clr_name[66];                
   short i_clnt_clr_name                    = 0;
   short i_dl_client                  = 0;
   short i_brk_cd                 = 0;



   EXEC SQL VAR brk_cd    IS STRING;
   EXEC SQL VAR h_dl_client     IS STRING;
   EXEC SQL VAR h_clnt_clr_name       IS STRING;

   struct   sqlca sqlca;

EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      SQL CONTEXT USE :my_ctx_local;
   #endif


	memset(brk_cd, APL_NULL_CHAR, 13);
	memset(h_dl_client, APL_NULL_CHAR,APL_CLIENT_LENGTH );
	memset(h_clnt_clr_name, APL_NULL_CHAR, 66  );

	strcpy(brk_cd, p_bic_code);
	APL_IF_DEBUG
	{
	printf("the brk_cd is (%s)\n", brk_cd);
	}
	

	

   EXEC SQL SELECT CLN_CODE, CLN_NAME
            INTO  :h_dl_client:i_dl_client, :h_clnt_clr_name:i_clnt_clr_name
   FROM MT_CLIENT
   WHERE substr(CLN_BRK_CD,1,8) = substr(:brk_cd:i_brk_cd,1,8) 
		AND ROWNUM < 2;

	IS_ANY_ORA_ERROR

   

   if (APL_ZERO_RESULT_SET)
   {
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL
   }

   strcpy(chr_p_client,h_dl_client);
   strcpy(chr_p_cname,h_clnt_clr_name);

   APL_GOBACK_SUCCESS

   
      RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_BICCDAcc successfully\n",
                  NULL, NULL);

      }
      return APL_SUCCESS;

      RETURN_FAILURE:
      APL_IF_DEBUG
      {
      CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_BICCDAcc unsuccessfully\n",
               NULL, NULL);

      }
      return APL_FAILURE;
}


			

int   IV_Rtv_CntAcc(  char           *p_bic_code,
                                 char           *chr_p_client,
                                 char           *chr_p_cname,
                                 int             *int_p_retstat,
                                 DEBUG_INFO_STRUCT_H      **l_debug_info_ptr)
{
   

   EXEC SQL BEGIN DECLARE SECTION;
   char  brk_cd[13];
   char  h_dl_client[APL_CLIENT_LENGTH];
   char  h_clnt_clr_name[66];
   short i_clnt_clr_name                    = 0;
   short i_dl_client                  = 0;
   short i_brk_cd                 = 0;



   EXEC SQL VAR brk_cd    IS STRING;
   EXEC SQL VAR h_dl_client     IS STRING;
   EXEC SQL VAR h_clnt_clr_name       IS STRING;

   struct   sqlca sqlca;

EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      SQL CONTEXT USE :my_ctx_local;
   #endif


        memset(brk_cd, APL_NULL_CHAR, 13);
        memset(h_dl_client, APL_NULL_CHAR,APL_CLIENT_LENGTH );
        memset(h_clnt_clr_name, APL_NULL_CHAR, 66  );

        strcpy(brk_cd, p_bic_code);
        APL_IF_DEBUG
        {
        printf("the brk_cd is (%s)\n", brk_cd);
        }
        

   EXEC SQL SELECT CLN_CODE, CLN_NAME
            INTO  :h_dl_client:i_dl_client, :h_clnt_clr_name:i_clnt_clr_name
   FROM MT_CLIENT
   WHERE CLN_SHORTNM = substr(:brk_cd:i_brk_cd,1,8) AND
                        ROWNUM < 2;

        IS_ANY_ORA_ERROR

   

   if (APL_ZERO_RESULT_SET)
   {
                *int_p_retstat = IV_NO_DATA_FOUND_ERR;
                APL_GOBACK_FAIL
   }

   strcpy(chr_p_client,h_dl_client);
   strcpy(chr_p_cname,h_clnt_clr_name);

   APL_GOBACK_SUCCESS

   
      RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_CntAcc successfully\n",
                  NULL, NULL);

      }
      return APL_SUCCESS;


      RETURN_FAILURE:
      APL_IF_DEBUG
      {
      CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_CntAcc unsuccessfully\n",
               NULL, NULL);

      }
      return APL_FAILURE;
}





int   IV_Rtv_InstrFromISIN(char               *chr_p_isin,
                           char              *p_instr_code,
                           int               *int_p_retstat,
                           DEBUG_INFO_STRUCT_H      **l_debug_info_ptr)
{




EXEC SQL BEGIN DECLARE SECTION;

char  h_instr_isin[13];
char  h_instr_code[APL_INSTRUMENTCODE_LEN];

short i_instr_isin = 0;

EXEC SQL VAR h_instr_isin        IS STRING;
EXEC SQL VAR h_instr_code      IS STRING;

struct   sqlca sqlca;
EXEC SQL END DECLARE SECTION;


#ifdef APL_THREADS
   APL_SET_CONTEXT
   SQL CONTEXT USE :my_ctx_local;
#endif


strcpy(h_instr_isin,chr_p_isin);

EXEC SQL SELECT INSTR_CODE
         INTO  :h_instr_code
			FROM MT_INSTRUMENT 
         WHERE INSTR_ISIN = :h_instr_isin:i_instr_isin;

if (sqlca.sqlcode == 1403)
{
      *int_p_retstat = IV_NO_DATA_FOUND_ERR ;
      APL_GOBACK_FAIL
}

else if( sqlca.sqlcode == MORE_THAN_ONE_ROW )
{
      *int_p_retstat =  MORE_THAN_ONE_ROW_FOUND;
      APL_GOBACK_FAIL
}
else if (sqlca.sqlcode < 0)
{
      char chr_l_buffer[KEY_LENGTH];

      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

      ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

      *int_p_retstat = IV_CRITCAL_ERROR_IND;

      CO_InsertErr(l_debug_info_ptr, 
							DB_ERR_NO, 
							chr_l_buffer,
                		APL_NULL_STRING, 
							APL_NULL_STRING,
               		 __LINE__, 
							 __FILE__);
      APL_GOBACK_FAIL
}


strcpy(p_instr_code,h_instr_code);

APL_GOBACK_SUCCESS



      RETURN_SUCCESS:
         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of IBDbSelISININSTRUMENT\n",NULL,NULL);
         }
        return APL_SUCCESS;

      RETURN_FAILURE:

         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of BBDbSelISININSTRUMENT\n",NULL,NULL);
         }
         return APL_FAILURE;

}



int   IV_Rtv_CNameAcc(char               *chr_p_client,
                              char              *chr_p_cname,
                              int               *int_p_retstat,
                              DEBUG_INFO_STRUCT_H      **l_debug_info_ptr)
{




EXEC SQL BEGIN DECLARE SECTION;

char  h_dl_client[APL_CLIENT_LENGTH];
char  h_clnt_clr_name[66];

short    i_clnt_clr_name = 0;

EXEC SQL VAR h_dl_client        IS STRING;
EXEC SQL VAR h_clnt_clr_name       IS STRING;

struct   sqlca sqlca;
EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
   APL_SET_CONTEXT
   SQL CONTEXT USE :my_ctx_local;
#endif

memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
memset(h_clnt_clr_name,APL_NULL_CHAR,66);
strcpy(h_dl_client,chr_p_client);
APL_IF_DEBUG
{
printf("the h_dl_client that i am going to sarch for in MT_CLIENT is (%s)\n",h_dl_client);
}
EXEC SQL SELECT CLN_NAME
         INTO  :h_clnt_clr_name:i_clnt_clr_name
			FROM MT_CLIENT
         WHERE CLN_CODE = :h_dl_client;
			


if( sqlca.sqlcode == MORE_THAN_ONE_ROW )
{
      *int_p_retstat =  MORE_THAN_ONE_ROW_FOUND;
      APL_GOBACK_FAIL
}
else if (sqlca.sqlcode < 0)
{
      char chr_l_buffer[KEY_LENGTH];

      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

      ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

      *int_p_retstat = IV_CRITCAL_ERROR_IND;

      CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
                APL_NULL_STRING, APL_NULL_STRING,
                __LINE__, __FILE__);
      APL_GOBACK_FAIL
}
else if (sqlca.sqlcode == 1403)
{
      *int_p_retstat = IV_NO_DATA_FOUND_ERR ;

      APL_GOBACK_FAIL
}

strcpy(chr_p_cname, h_clnt_clr_name);

APL_GOBACK_SUCCESS



      RETURN_SUCCESS:
         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of IBDbSelCNAMECACCOUNT\n",NULL,NULL);
         }
        return APL_SUCCESS;

      RETURN_FAILURE:

         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of BBDbSelCNAMECACCOUNT\n",NULL,NULL);
         }
         return APL_FAILURE;

}




int MT_Rtv_Trd(char							*chr_p_client,
						  char							*chr_p_refno,
						  SYS_DL_DEAL_STRUCT_H		*p_sys_dl_deal_struct_h_e,
						  char							*p_ora_rowid,
						  int								*int_p_retstat,
						  DEBUG_INFO_STRUCT_H					**l_debug_info_ptr)
{


SYS_DL_DEAL_STRUCT_H		*l_sys_dl_deal_struct_ho		= NULL;	
SYS_DL_DEAL_STRUCT_I  	*l_sys_dl_deal_struct_iq    = NULL;

char							h_dl_client[APL_CLIENT_LENGTH];
char							h_indentity_no[17];
char							h_ora_rowid[APL_ROWID_LEN];



EXEC SQL BEGIN DECLARE SECTION;
	EXEC SQL VAR h_ora_rowid IS STRING;

	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dl_client           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_indentity_no             IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dlt              IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_setldt          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ex_arena           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instrdate             IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_moneydate           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_domcpclt_cd           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_isspotdl         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dlfromord        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_entry         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_reapired_ind         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_domcp_custodyclt        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_countclt          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_countcltnm        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_clientof         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_custinfo          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_fx_reqd            IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ispymtlocal        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_verfied_with           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_brkrno          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_fail_cd          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_failinfo          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ispart_         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_report_at_eom_ind          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_billdate            IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_locindentity_no          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instruct_person         IS STRING;

	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dealcd            IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instr_code            IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_currencycode           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_classofdl         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_origindentity_no         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_newdt           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_maker             IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_maker_dt           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_deal_status      IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_access_stamp      IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_info1             IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_loccode          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_reginstr_ind          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_pos_stat       IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_status_reg         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_confdate            IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_matchindentity_no        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_markfaildate        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_candropdate         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_checker           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_checker_dt         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instrconv_ind         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ndsbldate           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lrdltype         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ndsdate             IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ublckdate           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_delrecdate          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lastregdate         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_chkdate          IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_confdate         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_instrdate          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_tmpoutdate          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_tmpretdate          IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_transmitdate        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_hostdate            IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_ndsbldate        IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ndsdate             IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ublckdate           IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_clt_reqdel_flag    IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_mod_hispos_ind      IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_updhispos_date      IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_cash_client      IS STRING; 
		
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instruct_personnm			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_clientofcode		IS STRING;
		
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_inter_med_person         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_inter_med_personnm       IS STRING;
   
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_fxccy        IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_uniq_ident_no    IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_misinfo           IS STRING; 
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_exp_setl_date       IS STRING; 
	struct	sqlca	sqlca;	

	EXEC SQL END DECLARE SECTION;
	#ifdef APL_THREADS
   	APL_SET_CONTEXT
   	SQL CONTEXT USE :my_ctx_local;
	#endif

	l_sys_dl_deal_struct_ho   = (SYS_DL_DEAL_STRUCT_H *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_H));
	l_sys_dl_deal_struct_iq   = (SYS_DL_DEAL_STRUCT_I *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_I));

	APL_MALLOC_FAIL(l_sys_dl_deal_struct_ho);
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_iq);


	strcpy(h_dl_client,chr_p_client);
	strcpy(h_indentity_no,chr_p_refno);

	EXEC SQL SELECT * 
				INTO	:l_sys_dl_deal_struct_ho:l_sys_dl_deal_struct_iq 
			   FROM DL_DEAL
				WHERE CLIENT = :h_dl_client
						AND IDENTIY_NO = :h_indentity_no;

	IS_ANY_ORA_ERROR

	if (sqlca.sqlcode == 1403)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL;
	}

	

	
	EXEC SQL SELECT  ROWID 
				INTO	: h_ora_rowid
			   FROM DL_DEAL
				WHERE CLIENT = :h_dl_client
						AND IDENTIY_NO = :h_indentity_no;

	IS_ANY_ORA_ERROR

	if (sqlca.sqlcode == 1403)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL;
	}

	strcpy(p_ora_rowid, h_ora_rowid);
	*p_sys_dl_deal_struct_h_e = *l_sys_dl_deal_struct_ho;
		
 RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE,"Exiting out of I_SelCTRADEFn sucessfully\n",
                  NULL, NULL);

      }
      return (APL_SUCCESS);
      RETURN_FAILURE:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE,"Exiting out of I_SelCTRADEFn unsucessfully\n",
                  NULL, NULL);
      }
      return (APL_FAILURE);
}



int MT_Rtv_TrdRpr(char	*chr_p_client,
							char	*chr_p_refno,
							char	*p_ora_rowid,
							double	*p_quantity,
							double	*p_amt,
							char		*p_tr_date,
							char		*p_loccode,
							char		*p_instr_code,
							int	*int_p_retstat,
							DEBUG_INFO_STRUCT_H  **l_debug_info_ptr) 
{
char h_dl_client[APL_CLIENT_LENGTH]		= APL_NULL_STRING;
char h_indentity_no[17]							= APL_NULL_STRING;

char h_ora_rowid[APL_ROWID_LEN]			= APL_NULL_STRING;
double	h_qty = 0.0;
double	h_amt = 0.0;
char    chr_h_tr_dt[APL_DATE_LEN];
char		h_loccode[5];
char		h_instr_code[APL_INSTRUMENTCODE_LEN];


short	i_ora_rowid = 0;
short l_i_locncode = 0; 

EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR h_indentity_no	  IS STRING;
EXEC SQL VAR h_ora_rowid	  IS STRING;
struct sqlca sqlca;

#ifdef APL_THREADS
        APL_SET_CONTEXT
 		EXEC SQL CONTEXT USE :my_ctx_local;
#endif


strcpy(h_dl_client,chr_p_client);
strcpy(h_indentity_no, chr_p_refno);


if (!strcmp(h_dl_client , APL_NULL_STRING) )
	APL_DATA_MISSING("CLIENT", APL_NULL_STRING, APL_NULL_STRING)

if (!strcmp(h_indentity_no, APL_NULL_STRING) )
	APL_DATA_MISSING("REFERENCE NUMBER", APL_NULL_STRING, APL_NULL_STRING)


EXEC SQL SELECT ROWID ,NVL(QTY,0), NVL(AMOUNT,0), NVL(TO_CHAR(DEAL_DATE),' '), NVL(LOCATION_CD,' '), NVL(INSTR_CODE,' ')
			INTO :h_ora_rowid:i_ora_rowid , :h_qty, :h_amt, :chr_h_tr_dt ,:h_loccode:l_i_locncode, :h_instr_code
			FROM DL_DEALREPAIR
			WHERE CLIENT = :h_dl_client
					AND IDENTIY_NO = :h_indentity_no;

if (sqlca.sqlcode < 0)
{
	*int_p_retstat = IV_CRITCAL_ERROR_IND;
	APL_GOBACK_FAIL
}

if (APL_ZERO_RESULT_SET)
{
	*int_p_retstat = IV_NO_DATA_FOUND_ERR;
	APL_GOBACK_FAIL
}

strcpy(p_ora_rowid, h_ora_rowid);
*p_quantity = h_qty;
*p_amt = h_amt;
strcpy(chr_h_tr_dt, p_tr_date);
strcpy(h_loccode, p_loccode);
strcpy(h_instr_code , p_instr_code);


APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting Out Of MT_Rtv_TrdRpr successfully\n",
					NULL, NULL );
	}
   return APL_SUCCESS;

   RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting Out Of MT_Rtv_TrdRpr unsuccessfully\n",
					NULL, NULL );
	}
   return APL_FAILURE;	
}



int	DL_Mod_TrdRprDel(char	*p_ora_rowid,
								int	*int_p_retstat,
								DEBUG_INFO_STRUCT_H	**l_debug_info_ptr)
{

char h_ora_rowid[APL_ROWID_LEN]	= APL_NULL_STRING;


char  chr_mainfuncarea[APL_MAINFUNCAREA_LEN]= APL_NULL_STRING;
char  chr_l_condident[APL_CONDID_LEN]         = APL_NULL_STRING;
int   int_l_cond_exists                       = 0;
char  chr_h_sysdate1[APL_DATE_LEN]             = APL_NULL_STRING;
char chr_l_client_a[11] = APL_NULL_STRING;
char chr_l_refno_a[17] = APL_NULL_STRING;

short i_dl_client=0;
short i_indentity_no=0;

EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL VAR h_ora_rowid IS STRING;
struct sqlca sqlca;
EXEC SQL VAR chr_mainfuncarea IS STRING;
EXEC SQL VAR chr_l_condident IS STRING;
EXEC SQL VAR chr_l_client_a IS STRING;
EXEC SQL VAR chr_l_refno_a IS STRING;
EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
        APL_SET_CONTEXT
 		EXEC SQL CONTEXT USE :my_ctx_local;
#endif

strcpy(h_ora_rowid, p_ora_rowid);

if (!strcmp(h_ora_rowid , APL_NULL_STRING))
	APL_DATA_MISSING(h_ora_rowid, APL_NULL_STRING, APL_NULL_STRING)


memset(chr_mainfuncarea, APL_NULL_CHAR, APL_MAINFUNCAREA_LEN);
memset(chr_l_condident, APL_NULL_CHAR, APL_CONDID_LEN);

	  
     EXEC SQL SELECT SYS_DATE INTO :chr_h_sysdate1
	  FROM PRO_SYS_DATE;
	 
		 
	  
	  EXEC SQL SELECT CLIENT, IDENTIY_NO INTO :chr_l_client_a:i_dl_client,:chr_l_refno_a:i_indentity_no
     FROM DL_DEALREPAIR
     WHERE DEAL_STAT='UU' AND 
		ROWID = :h_ora_rowid; 
		
		if (APL_ZERO_RESULT_SET)
		{
			*int_p_retstat = IV_NO_DATA_FOUND_ERR;
			APL_GOBACK_FAIL
		}		
     
		EXEC SQL UPDATE DL_DEALREPAIR
				  SET DEAL_STAT = 'DD',
				  MAKER_DT = :chr_h_sysdate1 ,
				  DEL_REC_DATE = :chr_h_sysdate1
			     WHERE ROWID = :h_ora_rowid;

		if(   APL_FAILURE == GBDbInsIMSGENT( "596P",
                                           chr_l_refno_a,
                                           chr_l_client_a,
                                           'Y',
                                           APL_NULL_STRING,
                                           l_debug_info_ptr ) )
		{
   		CO_ProcMonitor(APL_OUT_FILE, "Failed To Insert into IMSGENT table\n",NULL,NULL);
   		APL_GOBACK_FAIL
		}


if (sqlca.sqlcode < 0)
{
	*int_p_retstat = IV_CRITCAL_ERROR_IND;
	APL_GOBACK_FAIL

}

if (APL_ZERO_RESULT_SET)
{
	*int_p_retstat = IV_NO_DATA_FOUND_ERR;
	APL_GOBACK_FAIL

}

APL_GOBACK_SUCCESS;


	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting Out Of DL_Mod_TrdRprDel successfully\n",
					NULL, NULL );
	}
   return APL_SUCCESS;

   RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting Out Of DL_Mod_TrdRprDel unsuccessfully\n",
					NULL, NULL );
	}
   return APL_FAILURE;	
}

int DL_Mod_TrdRprNew( DL_DEALREPAIR_STRUCT_H		*p_dl_dealrepair_struct_h,
							 int								*int_p_retstat,
							 FILE								*fl_userlog,
							 DEBUG_INFO_STRUCT_H					**l_debug_info_ptr)
{

char	chr_l_buffer[KEY_LENGTH];

   
   char chr_l_refno_a[17] = APL_NULL_STRING;
   char chr_l_countaccnm[66] = APL_NULL_STRING;
   char chr_l_clientof[66] = APL_NULL_STRING;
   char chr_l_accname[66] = APL_NULL_STRING;
   char chr_l_note1[261] =  APL_NULL_STRING;

EXEC SQL BEGIN DECLARE SECTION;

DL_DEALREPAIR_STRUCT_H			l_dl_dealrepair_struct_he;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_client 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_identiy_no 				IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_deal_cd 				IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_deal_date 				IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_setl_date 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_instr_code	 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_currency_cd 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_domestic_cpclt 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_dl_class 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_ex_arena  			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_spottrd_ind 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_entry 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_maker	 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_maker_dt	 			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_access_stamp	 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_domcp_custodyclt		 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_cp_clt		 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_cp_cltname		 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_clientof		 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_info1			 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_fx_reqd			 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_instr_name			 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_cp_cltname			 	IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_gl_client	 	IS STRING; 


EXEC SQL VAR l_dl_dealrepair_struct_he.h_instruct_person			IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_clientof_cd		IS STRING;

EXEC SQL VAR l_dl_dealrepair_struct_he.h_inter_med_person        IS STRING;
EXEC SQL VAR l_dl_dealrepair_struct_he.h_inter_med_personnm      IS STRING; 
EXEC SQL VAR l_dl_dealrepair_struct_he.h_fxccy       IS STRING; 
EXEC SQL VAR l_dl_dealrepair_struct_he.h_uniq_ident_no   IS STRING; 
EXEC SQL VAR l_dl_dealrepair_struct_he.h_related_ident_no   IS STRING; 



   EXEC SQL VAR chr_l_refno_a IS STRING;
   EXEC SQL VAR chr_l_countaccnm IS STRING;
   EXEC SQL VAR chr_l_accname IS STRING;
   EXEC SQL VAR chr_l_clientof IS STRING;
   EXEC SQL VAR chr_l_note1 IS STRING;

DL_DEALREPAIR_STRUCT_I			l_dl_dealrepair_struct_i  = { 0,0,0,0,0,0,0, 
																	  		0,0,0,0,0,0,0,	
																	 	 	0,0,0,0,0,0,0,
																	  		0,0,0,0,0,0,0,
	    																	0,0,0,0,0,0,0,
	    																	0,0,0,0,0,0,0,
																			0,0,0,0}; 



struct sqlca sqlca;
EXEC SQL END DECLARE SECTION;



#ifdef APL_THREADS
        APL_SET_CONTEXT
 		EXEC SQL CONTEXT USE :my_ctx_local;
#endif

 
l_dl_dealrepair_struct_he	= *p_dl_dealrepair_struct_h;




	if (l_dl_dealrepair_struct_he.h_dl_rep_identno == 0)
	{
		APL_DATA_MISSING("TRADE REPAIR SEQUENCE NUM", APL_NULL_STRING, APL_NULL_STRING)
		APL_GOBACK_FAIL
	}

	if ( !strlen(l_dl_dealrepair_struct_he.h_deal_cd ))
	{
		APL_DATA_MISSING("TRADE CODE", APL_NULL_STRING,APL_NULL_STRING)
		APL_GOBACK_FAIL	
	}
	if ( !strlen(l_dl_dealrepair_struct_he.h_entry ))
	{
		APL_DATA_MISSING("ENTRY TYPE", APL_NULL_STRING,APL_NULL_STRING)
		APL_GOBACK_FAIL	
	}
	if ( !strlen(l_dl_dealrepair_struct_he.h_maker ))
	{
		APL_DATA_MISSING("MAKER ", APL_NULL_STRING,APL_NULL_STRING)
		APL_GOBACK_FAIL	
	}
	if ( !strlen(l_dl_dealrepair_struct_he.h_maker_dt ))
	{
		APL_DATA_MISSING("MAKER DATE", APL_NULL_STRING,APL_NULL_STRING)
		APL_GOBACK_FAIL	
	}
	if ( !strlen(l_dl_dealrepair_struct_he.h_deal_stat ))
	{
		APL_DATA_MISSING("TRADE  STATUS ", APL_NULL_STRING,APL_NULL_STRING)
		APL_GOBACK_FAIL	
	}
	if ( !strlen(l_dl_dealrepair_struct_he.h_access_stamp ))
	{
		APL_DATA_MISSING("ACCESS STAMP", APL_NULL_STRING,APL_NULL_STRING)
		APL_GOBACK_FAIL	
	}

	if (!strcmp(l_dl_dealrepair_struct_he.h_client , APL_NULL_STRING) )
		l_dl_dealrepair_struct_i.i_client = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_identiy_no , APL_NULL_STRING) )
		l_dl_dealrepair_struct_i.i_identiy_no = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_deal_date, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_deal_date  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_setl_date, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_setl_date  = -1;

	if (l_dl_dealrepair_struct_he.h_qty == 0)
		l_dl_dealrepair_struct_i.i_qty = -1;
	
	if (!strcmp(l_dl_dealrepair_struct_he.h_instr_code, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_instr_code  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_currency_cd, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_currency_cd  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_domestic_cpclt, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_domestic_cpclt  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_dl_class, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_dl_class  = -1;

	if (l_dl_dealrepair_struct_he.h_cost == 0)
		l_dl_dealrepair_struct_i.i_cost = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_ex_arena, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_ex_arena  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_spottrd_ind, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_spottrd_ind  = -1;

	if (l_dl_dealrepair_struct_he.h_amount == 0)
		l_dl_dealrepair_struct_i.i_amount = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_domcp_custodyclt, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_domcp_custodyclt  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_cp_clt, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_cp_clt  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_cp_cltname, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_cp_cltname  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_clientof, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_clientof  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_info1, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_info1  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_fx_reqd, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_fx_reqd  = -1;


	if (l_dl_dealrepair_struct_he.h_custodycomm == 0)
		l_dl_dealrepair_struct_i.i_custodycomm = -1;

	if (l_dl_dealrepair_struct_he.h_brokercomm == 0)
		l_dl_dealrepair_struct_i.i_brokercomm = -1;

	if (l_dl_dealrepair_struct_he.h_stx_comm == 0)
		l_dl_dealrepair_struct_i.i_stx_comm = -1;

	if (l_dl_dealrepair_struct_he.h_oth_comm == 0)
		l_dl_dealrepair_struct_i.i_oth_comm = -1;

	

	if (!strcmp(l_dl_dealrepair_struct_he.h_instr_name, APL_NULL_STRING))
		l_dl_dealrepair_struct_i.i_instr_name  = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_cp_cltname , APL_NULL_STRING) )
		l_dl_dealrepair_struct_i.i_cp_cltname = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_domesticcp_name , APL_NULL_STRING) )
		l_dl_dealrepair_struct_i.i_domesticcp_name = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_brk_no , APL_NULL_STRING) )
		l_dl_dealrepair_struct_i.i_brk_no = -1;

	if (!strcmp(l_dl_dealrepair_struct_he.h_related_ident_no, APL_NULL_STRING)) 
		l_dl_dealrepair_struct_i.i_related_ident_no  = -1;

	

	if (!strcmp(l_dl_dealrepair_struct_he.h_gl_client , APL_NULL_STRING) )
		l_dl_dealrepair_struct_i.i_gl_client = -1;

		
   if (!strcmp(l_dl_dealrepair_struct_he.h_inter_med_person, APL_NULL_STRING))
      l_dl_dealrepair_struct_i.i_inter_med_person  = -1;

   if (!strcmp(l_dl_dealrepair_struct_he.h_inter_med_personnm, APL_NULL_STRING))
      l_dl_dealrepair_struct_i.i_inter_med_personnm  = -1;
      
   if (l_dl_dealrepair_struct_i.i_identiy_no != -1)
      {
      EXEC SQL SELECT UPPER(:l_dl_dealrepair_struct_he.h_identiy_no) into :chr_l_refno_a from dual;
      IS_ANY_ORA_ERROR
      strcpy(l_dl_dealrepair_struct_he.h_identiy_no,chr_l_refno_a);
      }
   if (l_dl_dealrepair_struct_i.i_cp_cltname != -1)
      {
      EXEC SQL SELECT UPPER(:l_dl_dealrepair_struct_he.h_cp_cltname) into :chr_l_countaccnm from dual;
      IS_ANY_ORA_ERROR
      strcpy(l_dl_dealrepair_struct_he.h_cp_cltname,chr_l_countaccnm);
      }
   if (l_dl_dealrepair_struct_i.i_clientof != -1)
      {
      EXEC SQL SELECT UPPER(:l_dl_dealrepair_struct_he.h_clientof) into :chr_l_clientof from dual;
      IS_ANY_ORA_ERROR
      strcpy(l_dl_dealrepair_struct_he.h_clientof,chr_l_clientof);
      }
   if (l_dl_dealrepair_struct_i.i_cp_cltname != -1)
      {
      EXEC SQL SELECT UPPER(:l_dl_dealrepair_struct_he.h_cp_cltname) into :chr_l_accname from dual;
      IS_ANY_ORA_ERROR
      strcpy(l_dl_dealrepair_struct_he.h_cp_cltname,chr_l_accname);
      }
   if (l_dl_dealrepair_struct_i.i_info1 != -1)
      {
      EXEC SQL SELECT UPPER(:l_dl_dealrepair_struct_he.h_info1) into :chr_l_note1 from dual;
      IS_ANY_ORA_ERROR
      strcpy(l_dl_dealrepair_struct_he.h_info1,chr_l_note1);
      }
		
	EXEC SQL INSERT INTO DL_DEALREPAIR
				VALUES (:l_dl_dealrepair_struct_he :l_dl_dealrepair_struct_i);

	
	if (sqlca.sqlcode < 0)
	{
		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

      *int_p_retstat = IV_CRITCAL_ERROR_IND;

		fprintf(fl_userlog,"Fatal Error Encounterd in inserting Into Trade repair table %s \n",chr_l_buffer);

      CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
                APL_NULL_STRING, APL_NULL_STRING,
                __LINE__, __FILE__);

      APL_GOBACK_FAIL

	}
	


	APL_GOBACK_SUCCESS

	
	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting Out Of DL_Mod_TrdRprNew successfully\n",
					NULL, NULL );
	}
   return APL_SUCCESS;

   RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting Out Of DL_Mod_TrdRprNew unsuccessfully\n",
					NULL, NULL );
	}
   return APL_FAILURE;	
}



int MT_Rtv_DomAcc(char	*chr_p_client,
						 	char  *p_domicile,		
							int	*int_p_retstat,
						 	DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	char    h_dl_client[APL_CLIENT_LENGTH] = APL_NULL_STRING;
	char    h_domestic[2]				 = APL_NULL_STRING;
		
	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR h_dl_client IS STRING;
	EXEC SQL VAR h_domestic IS STRING;
	struct	sqlca	sqlca;

	EXEC SQL END DECLARE SECTION;


	#ifdef APL_THREADS
   	APL_SET_CONTEXT
   	EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	strcpy(h_dl_client,chr_p_client);

	EXEC SQL SELECT CLN_DOMICILE 
				INTO :h_domestic
				FROM MT_CLIENT 
				WHERE CLN_CODE	=	:h_dl_client;

	if (sqlca.sqlcode <0)
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
		APL_GOBACK_FAIL
	}
	if (sqlca.sqlcode == 1403)
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;
		APL_GOBACK_FAIL
	}
	strcpy(p_domicile, h_domestic);
	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS;

	

	RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of BBDbCountCACCOUNT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
   }
   return APL_SUCCESS;

   RETURN_FAILURE:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of BBDbCountCACCOUNT().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }
		return APL_FAILURE;
}


	

	int	MT_Rtv_Loc( char		*p_loccode,
									char		*p_loc_posn_status,
									int		*int_p_retstat,
									DEBUG_INFO_STRUCT_H	**l_debug_info_ptr)
	{
		
		char 	h_loccode[5]			= APL_NULL_STRING;
		char	chr_h_loc_posn_status[4]	= APL_NULL_STRING;

		EXEC SQL BEGIN DECLARE SECTION ;
		EXEC SQL VAR h_loccode 			IS STRING;
		EXEC SQL VAR chr_h_loc_posn_status 	IS STRING;
		short		i_loc_posn_status 		= 0;
		struct	sqlca sqlca;
		EXEC SQL END DECLARE SECTION;
		
		#ifdef APL_THREADS
   		APL_SET_CONTEXT
   		EXEC SQL CONTEXT USE :my_ctx_local;
		#endif
	
		strcpy(h_loccode, p_loccode);

		EXEC SQL SELECT STATUS_POS
					INTO	:chr_h_loc_posn_status :i_loc_posn_status
					FROM MT_LOCATION
					WHERE LOCATION_CD	= :h_loccode ;
		if (sqlca.sqlcode < 0)
		{
			*int_p_retstat = IV_CRITCAL_ERROR_IND;
			APL_GOBACK_FAIL
		}
		if (APL_ZERO_RESULT_SET)
		{
			*int_p_retstat = IV_NO_DATA_FOUND_ERR;
			APL_GOBACK_FAIL
		}
		if (i_loc_posn_status == -1)
		{
			*int_p_retstat = IV_COLUMN_NULL_ERR;
			APL_GOBACK_FAIL
		}
		
		strcpy(p_loc_posn_status, chr_h_loc_posn_status);

		APL_GOBACK_SUCCESS

		
		RETURN_SUCCESS:
		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, 
						"Exiting successfully out of MT_Rtv_Loc().\n", 
						(DEBUG_INFO_STRUCT_H **)NULL, 
						(INTL_ENV_DATA_STRUCT_H *)NULL);
   	}
   	return APL_SUCCESS;

	   RETURN_FAILURE:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, 
						"Exiting unsuccessfully out of MT_Rtv_Loc().\n", 
						(DEBUG_INFO_STRUCT_H **)NULL, 
						(INTL_ENV_DATA_STRUCT_H *)NULL);
      }
		return APL_FAILURE;
	}



	




int DL_Rtv_BOGTxn(char *chr_p_client,char *p_domcpac,char *p_instr_code,char *p_bog,int *p_clt_found,DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{
	char chr_l_domcp_found = 'N';
	char chr_l_instr_found = 'N';

	EXEC SQL BEGIN DECLARE SECTION;

		char h_ibbsclt[APL_CLIENT_LENGTH];
		char h_clt_brk_all[2];
		char h_domestic[2];
		char h_typeofinstr[TYPEOF_INSTR_LEN];
		char h_prodateype[4];				
		EXEC SQL VAR h_ibbsclt IS STRING;
		EXEC SQL VAR h_clt_brk_all IS STRING;
	   EXEC SQL VAR h_domestic IS STRING;
	   EXEC SQL VAR h_prodateype IS STRING;	
		short int i_ibbsclt = 0;
		short int i_domestic = 0;
		short int i_clt_brk_all = 0;
		short int i_typeofinstr = 0;
		short int i_prodateype = 0;
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	sqlca.sqlcode = 0L;

	

	
	
	

	*p_clt_found = 0;



	if ( strlen(p_instr_code) )
	{
		memset(h_typeofinstr, APL_NULL_CHAR, TYPEOF_INSTR_LEN);
		memset(h_prodateype, APL_NULL_CHAR, 4);
		
		
		EXEC SQL SELECT INSTR_TYPE,PROD_CLASS
					INTO :h_typeofinstr:i_typeofinstr,:h_prodateype:i_prodateype
					FROM MT_INSTRUMENT
					WHERE INSTR_CODE = :p_instr_code;

		IS_ANY_ORA_ERROR;

		if ( APL_ZERO_RESULT_SET )
		{
			chr_l_instr_found = 'N';
		}
		else
		{
			chr_l_instr_found = 'Y';
		}
	}
	else
	{
			chr_l_instr_found = 'N';
	}

	if ( !strcmp(h_typeofinstr, TYPOF_INSTR_SHS))
	{
		strcpy(p_bog, BOG_DLCD_C);	
		APL_GOBACK_SUCCESS
	}
	
   
   if ( !strcmp(h_prodateype, "2"))
	{
		strcpy(p_bog, BOG_DLCD_D);	
		APL_GOBACK_SUCCESS
	}

	if ( !strcmp(p_domcpac, l_mt_core_sys_params_struct_h.custody_clt_cd) )
	{
		strcpy(p_bog, BOG_DLCD_B);
		APL_GOBACK_SUCCESS
	}

	memset(h_clt_brk_all,APL_NULL_CHAR,2);
	memset(h_ibbsclt,APL_NULL_CHAR,APL_CLIENT_LENGTH);

	if ( strlen(p_domcpac) )
	{
		EXEC SQL SELECT CLN_BRK_ALL,CLN_GL_ACCOUNT
					INTO :h_clt_brk_all:i_clt_brk_all,
						  :h_ibbsclt:i_ibbsclt
					FROM MT_CLIENT
					WHERE CLN_CODE = :p_domcpac;
		IS_ANY_ORA_ERROR

		if ( APL_ZERO_RESULT_SET )
		{
			chr_l_domcp_found = 'N';
		}
		else
		{
			chr_l_domcp_found = 'Y';
		}
	}
	else
	{
			chr_l_domcp_found = 'N';
	}

	if ( (chr_l_instr_found == 'Y') && (chr_l_domcp_found == 'Y') && (h_clt_brk_all[0] == 'B') )
	{
		if ( !strcmp(h_typeofinstr, TYPEOFINSTR_FMT) )
		{
			strcpy(p_bog, BOG_DLCD_C);
			APL_GOBACK_SUCCESS
		}
		else if ( !strcmp(h_typeofinstr, DEALCD_RTS) )
		{
			strcpy(p_bog, BOG_DLCD_A);
			APL_GOBACK_SUCCESS
		}
	}

	memset(h_domestic,APL_NULL_CHAR,2);
	EXEC SQL SELECT CLN_DOMICILE
				INTO :h_domestic:i_domestic
				FROM MT_CLIENT
				WHERE CLN_CODE = :chr_p_client;
	IS_ANY_ORA_ERROR;

	if (APL_ZERO_RESULT_SET)
	{
		*p_clt_found = 0;

		if (chr_l_domcp_found == 'N')
		{
			strcpy(p_bog,BOG_DLCD_A);	
		}
		else 
		if ((h_clt_brk_all[0]=='B')&&(h_ibbsclt[0]!='0')&&(strcmp(p_domcpac,l_mt_core_sys_params_struct_h.custody_clt_cd)!=0))
		{
			strcpy(p_bog,BOG_DLCD_B);
		}
		else
		{
			strcpy(p_bog,BOG_DLCD_A);
		}
	}
	else
	{
		*p_clt_found = 1;

		if (h_domestic[0] == APL_DOMICILE_LOCAL)
		{
			strcpy(p_bog,BOG_DLCD_A);
		}
		else 
		{
			strcpy(p_bog,BOG_DLCD_B);
		}
	}
	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting From DL_Rtv_BOGTxn successfully\n",
					(DEBUG_INFO_STRUCT_H **)NULL,
					(INTL_ENV_DATA_STRUCT_H *)NULL);
	}
	return APL_SUCCESS;

	RETURN_FAILURE :
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,
					"Exiting From DL_Rtv_BOGTxn with errors\n",
					(DEBUG_INFO_STRUCT_H **)NULL,
					(INTL_ENV_DATA_STRUCT_H *)NULL);
	}
	return APL_FAILURE;

}



int MT_Chk_CashAcc(const char *p_client, const char *p_cashclient, 
						 const char *p_ccycode_a, int *int_p_retstat, 
						 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

  

   char chr_h_core[APL_MAINFUNCAREA_LEN]   = APL_NULL_STRING;
   char chr_l_main_funcarea[APL_MAINFUNCAREA_LEN] = APL_NULL_STRING;
   char chr_l_subfunc[APL_MAINFUNCAREA_LEN]   = APL_NULL_STRING;
   char chr_l_nondefflg[APL_MAINFUNCAREA_LEN] = APL_NULL_STRING;
   char chr_l_defflg[APL_MAINFUNCAREA_LEN] = APL_NULL_STRING;
   char chr_l_cashaccount[APL_IBANACC_LEN] = APL_NULL_STRING; 
   char l_temp_cln_code[11] = APL_NULL_STRING; 
   char l_temp_defccy[2] = APL_NULL_STRING; 

   static char chr_h_defccyflg[APL_MAINFUNCAREA_LEN]=APL_NULL_STRING;
   static char chr_h_nondefccyflg[APL_MAINFUNCAREA_LEN]=APL_NULL_STRING;
   short l_iban_cashacc = 0; 


	EXEC SQL BEGIN DECLARE SECTION;

	EXEC SQL VAR chr_h_defccyflg IS STRING;
   EXEC SQL VAR chr_h_nondefccyflg IS STRING;
   EXEC SQL VAR chr_l_cashaccount IS STRING; 

		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0L;


   if (APL_FAILURE == CO_Chk_CntryEnabled(  "INCOMING_MSG",
                                          "VAL_IBAN_CASHACC",
                                          &l_iban_cashacc,
                                          l_debug_info_ptr ))
  {
      APL_GOBACK_FAIL
  }
  if (l_iban_cashacc > 0 && strlen(p_cashclient) > 10)
  {
     EXEC SQL SELECT * into :chr_l_cashaccount FROM 
              (SELECT GL_ACCOUNT 
              FROM DL_CASHCLT
              WHERE (CLIENT = :p_client AND
              IBAN_CLT = :p_cashclient) AND
              DEFAULT_CCY in ('Y','N') ORDER BY DEFAULT_CCY DESC)
              WHERE ROWNUM < 2;

     IS_ANY_ORA_ERROR

	  printf("Inside Validation IBBSACCOUNT for IBAN = %s\n",chr_l_cashaccount);

     if(sqlca.sqlcode == 1403)
	  {
		  *int_p_retstat = IV_NO_DATA_FOUND_ERR;

		  CO_ProcMonitor(APL_OUT_FILE,
		           "IBBS Cash Account Not int_found for IBAN Cash Acc\n",
						(DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);

		  APL_GOBACK_FAIL
	  }
  }
  else
  {
     strncpy(chr_l_cashaccount,p_cashclient,10);
	  chr_l_cashaccount[10] = APL_NULL_CHAR;
	  printf("Inside Validation IBBSACCOUNT = %s\n",chr_l_cashaccount);

  }


	EXEC SQL SELECT CLN_CODE into :l_temp_cln_code
				FROM MT_CLIENT
				WHERE (CLN_CODE = :p_client AND
						 CLN_GL_ACCOUNT = :chr_l_cashaccount);

	if ( sqlca.sqlcode < 0 )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

		APL_GOBACK_FAIL
	}

	if ( !sqlca.sqlcode )
	{
		*int_p_retstat = APL_SUCCESS;

		APL_GOBACK_SUCCESS
	}


  if((strlen(chr_h_defccyflg)== 0 )|| (strlen(chr_h_nondefccyflg) ==  0))
   {
      strcpy(chr_h_core,SETTLEMENT);

      memset(chr_h_defccyflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_h_nondefccyflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      memset(chr_l_main_funcarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_subfunc,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_defflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      strcpy(chr_l_main_funcarea,"DEF_CASHACC_FLG");
      strcpy(chr_l_subfunc,chr_h_core);

      if (APL_FAILURE == CO_Rtv_FldVal(chr_l_main_funcarea,chr_l_subfunc,chr_l_defflg,l_debug_info_ptr))
      {
         *int_p_retstat = IV_NO_DATA_FOUND_ERR;
      }

      memset(chr_l_main_funcarea,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_subfunc,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);
      memset(chr_l_nondefflg,APL_NULL_CHAR,APL_MAINFUNCAREA_LEN);

      strcpy(chr_l_main_funcarea,"NONDEF_CASHACC_FLG");
      strcpy(chr_l_subfunc,chr_h_core);

      if (APL_FAILURE == CO_Rtv_FldVal(chr_l_main_funcarea,chr_l_subfunc,chr_l_nondefflg,l_debug_info_ptr))
      {
         *int_p_retstat = IV_NO_DATA_FOUND_ERR ;
      }

      strcpy(chr_h_defccyflg,chr_l_defflg);
      strcpy(chr_h_nondefccyflg,chr_l_nondefflg);
	}
	
	if ( !strlen(p_ccycode_a) )
	{
		
		EXEC SQL SELECT DEFAULT_CCY into :l_temp_defccy
					FROM DL_CASHCLT
					WHERE ((CLIENT = :p_client) AND
							 (GL_ACCOUNT = :chr_l_cashaccount) AND
							 (DEFAULT_CCY  IN (:chr_h_defccyflg,:chr_h_nondefccyflg)));


		if ( sqlca.sqlcode < 0 )
		{
			*int_p_retstat = IV_CRITCAL_ERROR_IND;

			APL_GOBACK_FAIL
		}
		else if ( APL_ZERO_RESULT_SET )
		{
			*int_p_retstat = IV_NO_DATA_FOUND_ERR;

			APL_GOBACK_FAIL
		}
	}
	else
	{
	
		EXEC SQL SELECT DEFAULT_CCY into :l_temp_defccy
					FROM DL_CASHCLT
					WHERE ((CLIENT = :p_client) AND
							 (GL_ACCOUNT = :chr_l_cashaccount) AND
							 (CURRENCY_CD = :p_ccycode_a) AND
							 (DEFAULT_CCY IN (:chr_h_defccyflg,:chr_h_nondefccyflg)));


		if ( sqlca.sqlcode < 0 )
		{
			*int_p_retstat = IV_CRITCAL_ERROR_IND;

			APL_GOBACK_FAIL
		}
		else if ( APL_ZERO_RESULT_SET )
		{
			*int_p_retstat = IV_NO_DATA_FOUND_ERR;

			APL_GOBACK_FAIL
		}
	}

	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of \
MT_Chk_CashAcc().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_SUCCESS;

	RETURN_FAILURE:

		APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of\
MT_Chk_CashAcc().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
		}

		return APL_FAILURE;
}




int   IV_Rtv_BICCDAccNew(  char           *p_bic_code,
                                 char           *chr_p_client,
                                 char           *chr_p_cname,
                                 int            *int_p_retstat,
                                 DEBUG_INFO_STRUCT_H      **l_debug_info_ptr)
{
   

   EXEC SQL BEGIN DECLARE SECTION;
   char  brk_cd[13];
   char  h_dl_client[APL_CLIENT_LENGTH];
   char  h_clnt_clr_name[66];
	char	h_mstclt[APL_CLIENT_LENGTH];
   short i_clnt_clr_name                    = 0;
   short i_dl_client                  = 0;
   short i_brk_cd                 = 0;
	short i_mstclt							= 0;
   int int_h_count =0;

   EXEC SQL VAR brk_cd    IS STRING;
   EXEC SQL VAR h_dl_client     IS STRING;
   EXEC SQL VAR h_clnt_clr_name       IS STRING;
   EXEC SQL VAR h_mstclt      IS STRING;
   struct   sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      SQL CONTEXT USE :my_ctx_local;
   #endif


   memset(brk_cd, APL_NULL_CHAR, 13);
   memset(h_dl_client, APL_NULL_CHAR,APL_CLIENT_LENGTH );
   memset(h_clnt_clr_name, APL_NULL_CHAR, 66  );
	memset(h_mstclt,APL_NULL_CHAR,APL_CLIENT_LENGTH);

   strcpy(brk_cd, p_bic_code);
   APL_IF_DEBUG
   {
   printf("the brk_cd is (%s)\n", brk_cd);
   }
   


   EXEC SQL SELECT CLN_CODE, CLN_NAME,CLN_MASTER
            INTO  :h_dl_client:i_dl_client, :h_clnt_clr_name:i_clnt_clr_name,:h_mstclt:i_mstclt
   FROM MT_CLIENT
   WHERE substr(CLN_BRK_CD,1,8) = substr(:brk_cd:i_brk_cd,1,8);


   


   if (APL_ZERO_RESULT_SET)
   {
      *int_p_retstat = IV_NO_DATA_FOUND_ERR;
      APL_GOBACK_FAIL
   }
	else if(sqlca.sqlcode== -2112)
	{
		*int_p_retstat	= MORE_THAN_ONE_ROW_FOUND;
		APL_GOBACK_FAIL
	}
	
	else if(sqlca.sqlcode==0)
	{
   	strcpy(chr_p_client,h_dl_client);
   	strcpy(chr_p_cname,h_clnt_clr_name);
	}
	else 
		APL_GOBACK_FAIL

   APL_GOBACK_SUCCESS

   
      RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_BICCDAccNew successfully\n",
                  NULL, NULL);

      }
      return APL_SUCCESS;

      RETURN_FAILURE:
      APL_IF_DEBUG
      {
      CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_BICCDAccNew unsuccessfully\n",
               NULL, NULL);

      }
      return APL_FAILURE;
}


int   IV_Rtv_CNameAccNew(char               *chr_p_client,
                              char              *chr_p_cname,
                              int               *int_p_retstat,
                              DEBUG_INFO_STRUCT_H      **l_debug_info_ptr)
{




EXEC SQL BEGIN DECLARE SECTION;

char  h_dl_client[APL_CLIENT_LENGTH];
char  h_clnt_clr_name[66];
int   int_h_count = 0;
char chr_l_buffer[KEY_LENGTH];
char h_mstclt[APL_CLIENT_LENGTH];

short    i_clnt_clr_name = 0;
short    i_mstclt=0;

EXEC SQL VAR h_dl_client        IS STRING;
EXEC SQL VAR h_clnt_clr_name       IS STRING;
EXEC SQL VAR h_mstclt      IS STRING;

struct   sqlca sqlca;
EXEC SQL END DECLARE SECTION;

#ifdef APL_THREADS
   APL_SET_CONTEXT
   SQL CONTEXT USE :my_ctx_local;
#endif

memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
memset(h_clnt_clr_name,APL_NULL_CHAR,66);
strcpy(h_dl_client,chr_p_client);
memset(h_mstclt, APL_NULL_CHAR, APL_CLIENT_LENGTH);
APL_IF_DEBUG
{
printf("the h_dl_client that i am going to sarch for in MT_CLIENT is (%s)\n",h_dl_client);
}


EXEC SQL SELECT CLN_NAME, CLN_MASTER
         INTO  :h_clnt_clr_name:i_clnt_clr_name, :h_mstclt:i_mstclt
	  FROM MT_CLIENT
         WHERE CLN_CODE = :h_dl_client;
			

if (sqlca.sqlcode == 1403)
{
      *int_p_retstat = IV_NO_DATA_FOUND_ERR ;

      APL_GOBACK_FAIL
}
else if(sqlca.sqlcode== -2112)
{
      *int_p_retstat      = MORE_THAN_ONE_ROW_FOUND;
      APL_GOBACK_FAIL
}

else if(sqlca.sqlcode==0)
{
     strcpy(chr_p_cname,h_clnt_clr_name);
}
else
{
      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);
      ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);
      *int_p_retstat = IV_CRITCAL_ERROR_IND;
      CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
                APL_NULL_STRING, APL_NULL_STRING,
                __LINE__, __FILE__);
      APL_GOBACK_FAIL
 } 

APL_GOBACK_SUCCESS



      RETURN_SUCCESS:
         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully out of IBDbSelCNAMECACCOUNT_new\n",NULL,NULL);
         }
        return APL_SUCCESS;

      RETURN_FAILURE:

         APL_IF_DEBUG
         {
            CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of BBDbSelCNAMECACCOUNT_new\n",NULL,NULL);
         }
         return APL_FAILURE;

}




int   IV_Rtv_MultBicCdAcc(  char           *p_bic_code,
                                 char           *p_domcpac,
                                 char           *chr_p_client,
                                 char           *chr_p_cname,
                                 char           *p_multimstclt_found,
                                 int            *int_p_retstat,
                                 DEBUG_INFO_STRUCT_H      **l_debug_info_ptr)
{
   

   EXEC SQL BEGIN DECLARE SECTION;
   char  brk_cd[13];
   char  h_domcpclt_cd[APL_CLIENT_LENGTH];
   char  h_dl_client[APL_CLIENT_LENGTH];
   char  h_clnt_clr_name[66];
	char	h_mstclt[APL_CLIENT_LENGTH];
   short i_clnt_clr_name                    = 0;
   short i_dl_client                  = 0;
   short i_brk_cd                 = 0;
	short i_mstclt							= 0;
   int int_h_count =0;

   EXEC SQL VAR brk_cd    IS STRING;
   EXEC SQL VAR h_dl_client     IS STRING;
   EXEC SQL VAR h_domcpclt_cd     IS STRING;
   EXEC SQL VAR h_clnt_clr_name       IS STRING;
   EXEC SQL VAR h_mstclt      IS STRING;
   struct   sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      SQL CONTEXT USE :my_ctx_local;
   #endif


   memset(brk_cd, APL_NULL_CHAR, 13);
	memset(h_domcpclt_cd,APL_NULL_CHAR,APL_CLIENT_LENGTH);
   memset(h_dl_client, APL_NULL_CHAR,APL_CLIENT_LENGTH );
   memset(h_clnt_clr_name, APL_NULL_CHAR, 66  );
	memset(h_mstclt,APL_NULL_CHAR,APL_CLIENT_LENGTH);

   strcpy(brk_cd, p_bic_code);
   strcpy(h_domcpclt_cd, p_domcpac);

   APL_IF_DEBUG
   {
   printf("The brk_cd in IV_Rtv_MultBicCdAcc is (%s)\n", brk_cd);
   printf("Is it a Internal Txn if p_domcpac '%s' = core internal citi clt '%s' \n", h_domcpclt_cd, l_mt_core_sys_params_struct_h.custody_clt_cd);
   }
   

   EXEC SQL SELECT NVL(COUNT(distinct CLN_CODE),0) INTO :int_h_count FROM MT_CLIENT
   WHERE substr(CLN_BRK_CD,1,8) = substr(:brk_cd:i_brk_cd,1,8);

	IS_ANY_ORA_ERROR

	if(int_h_count == 0)
	{
      *int_p_retstat = IV_NO_DATA_FOUND_ERR;
      APL_GOBACK_FAIL
	}
	else if (int_h_count == 1)
	{
		EXEC SQL SELECT CLN_CODE, CLN_NAME 
					INTO :h_dl_client:i_dl_client, :h_clnt_clr_name:i_clnt_clr_name
		FROM MT_CLIENT WHERE
		substr(CLN_BRK_CD,1,8) = substr(:brk_cd:i_brk_cd,1,8)
		AND STATUS = 'AA'
		ORDER BY CLN_CODE;
	}
	else if (int_h_count > 1)
	{
   EXEC SQL SELECT DISTINCT A.CLN_MASTER, B.CLN_NAME 
            INTO  :h_mstclt:i_mstclt, :h_clnt_clr_name:i_clnt_clr_name
   FROM MT_CLIENT A, MT_CLIENT B
   WHERE substr(A.CLN_BRK_CD,1,8) = substr(:brk_cd:i_brk_cd,1,8)
	AND A.CLN_MASTER = B.CLN_CODE
	AND B.STATUS = 'AA'
	AND ROWNUM < 2 ORDER BY A.CLN_MASTER;
	}
	
   
   strcpy(chr_p_client, APL_NULL_STRING );
   strcpy(chr_p_cname, APL_NULL_STRING );

	IS_ANY_ORA_ERROR

	if (int_h_count > 1 )
	{
		if( strcmp(l_mt_core_sys_params_struct_h.custody_clt_cd, h_domcpclt_cd)== 0)
		{
			strcpy(p_multimstclt_found, "M"); 
   		strcpy(chr_p_client,h_mstclt);
  			strcpy(chr_p_cname,h_clnt_clr_name);
		}
	}
	else if (int_h_count == 1)
	{
   	strcpy(chr_p_client,h_dl_client);
  		strcpy(chr_p_cname,h_clnt_clr_name);
		if( strcmp(l_mt_core_sys_params_struct_h.custody_clt_cd, h_domcpclt_cd)== 0)
		{
			strcpy(p_multimstclt_found, "N"); 
		}
	}

   APL_GOBACK_SUCCESS

   
      RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_MultBicCdAcc successfully\n",
                  NULL, NULL);

      }
      return APL_SUCCESS;

      RETURN_FAILURE:
      APL_IF_DEBUG
      {
      CO_ProcMonitor(APL_OUT_FILE,"Exiting Out of IV_Rtv_MultBicCdAcc unsuccessfully\n",
               NULL, NULL);

      }
      return APL_FAILURE;
} 

