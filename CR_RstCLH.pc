


   
   
   
   
   
   
   
   
   
   
   
   




#include <CO_HostStructdef.h>
#include "Intellect_Common.h"

EXEC SQL INCLUDE sqlca;



int CR_Proc_DBCLHRstSingle(char *chr_p_client,char *chr_p_refno,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca 		  	sqlca;
	int     		 		  	int_retval = 0;
	short					  	int_l_condexists = 0;
	short					  	l_CondExists1= 0;		
	char					  	chr_mainfuncarea[APL_MAINFUNCAREA_LEN] = APL_NULL_STRING;
	char					  	chr_l_condid[APL_CONDID_LEN] = APL_NULL_STRING;
	char					  	h_instr_code[9] = APL_NULL_STRING;
	short					  	i_instr_code = 0;
	char					  	h_clhclient[16] = APL_NULL_STRING;
	short					  	i_clhclient = 0;
	char 					  	h_confdate[APL_DATE_LEN] = APL_NULL_STRING;
	short					  	i_confdate = 0;
	char 					  	h_dealcd[2] = APL_NULL_STRING;
	short 				  	i_dealcd = 0;
	char					  	h_indentity_no[17] = APL_NULL_STRING;
	short					  	i_indentity_no = 0;
	char					  	h_transmitdate[20] = APL_NULL_STRING;
	short					  	i_transmitdate = 0;
	char					  	h_locindentity_no[APL_TXNREFNO_LEN] = APL_NULL_STRING;
	short					  	i_locindentity_no = 0;
	char						h_dlfromord[2] = APL_NULL_STRING;
	short						i_dlfromord = 0;
	double				  	h_qty = 0.0;
	short					  	i_qty = 0;
	FILE                	*l_clh_rst_rpt_file = NULL;
	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_h  = NULL;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	sqlca.sqlcode = 0;

	printf("Entered Anand's processtion.\n");
	fflush(stdout);

	l_dl_dealaudit_struct_h = (DL_DEALAUDIT_STRUCT_H *)calloc(1, sizeof(DL_DEALAUDIT_STRUCT_H));

   APL_MALLOC_FAIL(l_dl_dealaudit_struct_h);


	APL_IF_DEBUG
		CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CR_Proc_DBCLHRstSingle \n",NULL,p_intl_env_data_struct_h_d);

	EXEC SQL SELECT IDENTIY_NO
	INTO :h_indentity_no:i_indentity_no
	FROM DL_DEAL
	WHERE client = :chr_p_client
	AND   IDENTIY_NO   = :chr_p_refno;

	IS_ANY_ORA_ERROR

	if (sqlca.sqlcode == 1403)
	{
		CO_InsertErr(l_debug_info_ptr,ERR_DEAL_NF,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
		
		APL_GOBACK_FAIL
	}

	

	EXEC SQL SELECT instr_code,VAL_FDT,deal_cd,trans_date,lcl_identno,QTY,DEAL_FRM_ORD
	INTO 	:h_instr_code:i_instr_code,
			:h_confdate:i_confdate,
			:h_dealcd:i_dealcd,
			:h_transmitdate:i_transmitdate,
		  	:h_locindentity_no:i_locindentity_no,
			:h_qty:i_qty,
			:h_dlfromord:i_dlfromord
	FROM DL_DEAL
	WHERE client = :chr_p_client
	AND   IDENTIY_NO = :chr_p_refno
	AND	DEAL_STAT <> 'CS';

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_DEAL_NF,chr_p_client,chr_p_refno,APL_NULL_STRING)

	int_l_condexists = 0;
	if (APL_FAILURE == CO_Chk_CntryEnabled(	"MENU_NAME_CHANGE",
														"BOG_MSG_RESET",
														&int_l_condexists,
														l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}
	
	if (int_l_condexists)		
	{
		if ((i_transmitdate == -1) && (i_locindentity_no == -1))
		{
			CO_InsertErr(l_debug_info_ptr,ERR_NOTHING_RESET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			
			APL_GOBACK_FAIL
		}
	}
	else
	{
		if (i_transmitdate == -1)
		{
			CO_InsertErr(l_debug_info_ptr,ERR_NOTHING_RESET,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			
			APL_GOBACK_FAIL
		}
	}

	strcpy(chr_mainfuncarea,"CLG_HOUSE_RST");
	strcpy(chr_l_condid,"LOCREFNO_NULL");

	int_l_condexists = 0;
	int_retval = CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condid,&int_l_condexists,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		APL_GOBACK_FAIL

	if (int_l_condexists > 0)
	{
		EXEC SQL UPDATE DL_DEAL
		SET trans_date = NULL,
			 lcl_identno = NULL,
			 LRNDS_DATE = NULL 
		WHERE client = :chr_p_client
		AND   IDENTIY_NO = :chr_p_refno;
	}
	else
	{
		EXEC SQL UPDATE DL_DEAL
		SET trans_date = NULL
		WHERE client = :chr_p_client
		AND   IDENTIY_NO = :chr_p_refno;
	}
	
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	
	strcpy(chr_mainfuncarea,"CLG_HOUSE_RST");
	strcpy(chr_l_condid,"LOC_REF_NO");

	int_l_condexists = 0;

	int_retval = CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condid,&int_l_condexists,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		APL_GOBACK_FAIL
 
	
	strcpy(chr_mainfuncarea,"CLG_HOUSE_RST");
	strcpy(chr_l_condid,"CZ_REPORT");

	l_CondExists1 = 0;

	int_retval = CO_Chk_CntryEnabled(chr_mainfuncarea,chr_l_condid,&l_CondExists1,l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
		APL_GOBACK_FAIL
	
	

	if ((int_l_condexists > 0) || (l_CondExists1 > 0))     

	{

		EXEC SQL SELECT CLN_CLH 
		INTO :h_clhclient:i_clhclient
		FROM MT_CLIENT
		WHERE cln_code = :chr_p_client;

		IS_ANY_ORA_ERROR

		if(sqlca.sqlcode == 1403)
			{
				CO_InsertErr(l_debug_info_ptr,ERR_DEAL_NF,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
      
      		APL_GOBACK_FAIL
   		}


		int_retval = CO_Rtv_RptFileName("CR","Clearing House Reset - Single",135,p_intl_env_data_struct_h_d->processtion,NULL,&l_clh_rst_rpt_file,l_debug_info_ptr);

		if (int_retval != APL_SUCCESS)
   	{
      	
      	return(APL_FAILURE);
   	}
	
		printf("Now calling Report Header processtion.\n");
		fflush(stdout);

		int_retval = CR_Prnt_CLHRstRptHdrSingle(l_clh_rst_rpt_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);
		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL
			
		printf("Now calling Report Details processtion.\n");
		fflush(stdout);


		int_retval = CR_Prnt_CLHRstRptDetSingle(l_clh_rst_rpt_file,chr_p_client,h_clhclient,chr_p_refno,h_instr_code,h_confdate,h_dealcd,h_qty,p_intl_env_data_struct_h_d,l_debug_info_ptr);
		 if (int_retval != APL_SUCCESS)
         APL_GOBACK_FAIL
		printf("Now returned from  Report Details processtion.\n");
		fflush(stdout);


		}

			

			memset(l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
         strcpy(l_dl_dealaudit_struct_h->h_dl_client,chr_p_client);
         strcpy(l_dl_dealaudit_struct_h->h_indentity_no,chr_p_refno);
         strcpy(l_dl_dealaudit_struct_h->h_trail_for, "T");
         strcpy(l_dl_dealaudit_struct_h->h_processdetail,p_intl_env_data_struct_h_d->processtion);
         strcpy(l_dl_dealaudit_struct_h->h_proc_usr,p_intl_env_data_struct_h_d->usr);
         strcpy(l_dl_dealaudit_struct_h->h_subprocess,p_intl_env_data_struct_h_d->subprocess);
         strcpy(l_dl_dealaudit_struct_h->h_logdate,APL_NULL_STRING);
         strcpy(l_dl_dealaudit_struct_h->h_fail_cd,APL_NULL_STRING);
         l_dl_dealaudit_struct_h->h_qty = h_qty;
         strcpy(l_dl_dealaudit_struct_h->h_dlfromord,h_dlfromord);

			printf("Now updating Audit Trail\n");
			fflush(stdout);

         if (APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_h, l_debug_info_ptr))
         {
            APL_GOBACK_FAIL
         }
      
      if ((int_l_condexists > 0) || (l_CondExists1 > 0)) 
		{
		int_retval = CR_Prnt_CLHRstRptFtr(l_clh_rst_rpt_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);
      if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL

         int_retval = CO_Proc_RptClose(l_clh_rst_rpt_file,l_debug_info_ptr);

        if (int_retval != APL_SUCCESS)
			  APL_GOBACK_FAIL

		}

		APL_GOBACK_SUCCESS

		RETURN_SUCCESS :
		{

			APL_IF_DEBUG
				CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CR_Proc_DBCLHRstSingle \n",NULL,p_intl_env_data_struct_h_d);
			
			return(APL_SUCCESS);
		}

		RETURN_FAILURE :
		{
			APL_IF_DEBUG
				CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CR_Proc_DBCLHRstSingle \n",NULL,p_intl_env_data_struct_h_d);
		
			return(APL_FAILURE);
		}
}


//AIX -Warnings Removal
int CR_Prnt_CLHRstRptHdrSingle(FILE *fp,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

   struct sqlca sqlca;
   int i;
   char chr_p_corpname[41];
	char chr_l_sysdate_b[APL_DATE_LEN] = APL_NULL_STRING;
	
	 #ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif


   sqlca.sqlcode =0;
   memset (chr_p_corpname,APL_NULL_CHAR,41);

   fprintf(fp, "\n");
	
	for(i = 0; i < 43; i++)
		fprintf(fp," ");

	fprintf(fp,"Clearing House Hand-off File Consolidated Report");

	fprintf(fp,"\n");

	for(i = 0; i < 43; i++)
		fprintf(fp," ");

	for(i = 43; i < 91; i++)
		fprintf(fp,"-");

	fprintf(fp,"\n");

	if (CO_RtvSysDt(chr_l_sysdate_b,l_debug_info_ptr) == APL_FAILURE)
			APL_GOBACK_FAIL

	fprintf(fp,"%.10s",chr_l_sysdate_b); 

	for(i = 10; i < 57; i++)
		fprintf(fp," ");

   EXEC SQL VAR chr_p_corpname IS STRING;

   EXEC SQL SELECT CA_IDENTNAME INTO :chr_p_corpname FROM
            MT_COMMON_SYS_PARAMS;

	IS_ANY_ORA_ERROR
 
	if (sqlca.sqlcode == 1403) 
   {  
      CO_InsertErr(l_debug_info_ptr,ERR_DEAL_NF,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__); 

      APL_GOBACK_FAIL   
   }  
   
	fprintf(fp,"%s",chr_p_corpname);

	for (i = 77; i < 125; i++)
		fprintf(fp, " ");

	fprintf(fp,"Page");

	fprintf(fp,"  ");

	fprintf(fp,"0001");

   fprintf(fp,"\n");

   fprintf(fp,"\n");

	fprintf(fp,"Broker Handoff File Details");

   fprintf(fp,"\n");

	for (i = 0; i < 135; i++)
		fprintf(fp,"-");

   fprintf(fp,"\n");
	
	fprintf(fp,"Broker     CLH. Code        Reference No.   Instr. Code  Mkt.Code   Pre-Matched   Trade Code            Quantity" );

	fprintf(fp,"\n");
	
	for (i = 0; i < 135; i++)
		fprintf(fp,"-");

	fprintf(fp,"\n");

	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {

      return(APL_FAILURE); 
   }
}



int CR_Prnt_CLHRstRptDetSingle(FILE *fp, char *chr_p_client,char *p_clhclient,char *chr_p_refno,char *p_instr_code,char *chr_p_confdt,char *p_dealcd,double p_quantity,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)

{
	int i = 0;		
	char chr_tmp[4] = APL_NULL_STRING; 
	
	
	fprintf(fp,"%-10s",chr_p_client);

	for(i = 0;i < 2; i++)
		fprintf(fp," ");

	fprintf(fp,"%-15s",p_clhclient);

	fprintf(fp," ");

	fprintf(fp,"%-16s",chr_p_refno);

	for(i = 0;i < 2; i++)
		fprintf(fp," ");

	fprintf(fp,"%-8s",p_instr_code);

	for(i = 0;i < 4; i++)
		fprintf(fp," ");

	fprintf(fp,"NIL");

	for(i = 0;i < 6; i++)
		fprintf(fp," ");

	fprintf(fp,"%.10s",chr_p_confdt); 

	for(i = 0;i < 5; i++)
		fprintf(fp," ");

	if (strcmp(p_dealcd,"1") == 0)
		strcpy(chr_tmp," DF");

	if (strcmp(p_dealcd,"2") == 0)
		strcpy(chr_tmp," RF");

	if (strcmp(p_dealcd,"3") == 0)
		strcpy(chr_tmp,"DVP");

	if (strcmp(p_dealcd,"4") == 0)
		strcpy(chr_tmp,"RVP");

	if (strcmp(p_dealcd,"5") == 0)
		strcpy(chr_tmp," CD");

	if (strcmp(p_dealcd,"6") == 0)
		strcpy(chr_tmp," CR");

	if (strcmp(p_dealcd,"7") == 0)
		strcpy(chr_tmp,"DCD");

	if (strcmp(p_dealcd,"8") == 0)
		strcpy(chr_tmp,"RCR");

	fprintf(fp,"%s",chr_tmp);

	for(i = 0;i < 7; i++)
		fprintf(fp," ");

	fprintf(fp,"%18.2f",p_quantity);

	fprintf(fp,"\n");

 APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {

      return(APL_FAILURE);
   }


}




int CR_Prnt_CLHRstRptFtr(FILE *fp,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   int i;
		
   for (i=0;i<55;i++)
			fprintf(fp,"-");
	fprintf(fp,"End Of Report");
	for (i=68;i<135;i++)
			fprintf(fp,"-");

	return(APL_SUCCESS);

}
