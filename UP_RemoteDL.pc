


   
   
   
   
   
   
   
   
   
   
   
   




#include "CO_HostStructdef.h"
EXEC SQL INCLUDE sqlca;

#define REASON_LEN		70
#define LINEBUFFER_LEN	  300	
#define CLIENT_LEN_C		11
#define DL_DATE_LEN		   11	
#define DEAL_DATE_LEN		20
#define SETL_DATE_LEN_A		20
#define SEC_CD_LEN		 9
#define DOMCPCLT_LEN		11
#define CCY_LEN		    4
#define USERID_B		15
#define LOC_CD_LEN		 5
#define DEAL_IDENTITY_NO	 8
#define DEAL_TYPE_LEN	 10
#define SRLNO_LEN		 6
#define OPER_CD_LEN	11
#define SETLER_CODE_LEN	11
#define SAT_CODE_LEN			11
#define SAT_CLT_LEN			11
#define ASSIS_CD_LEN_A  	13 
#define INSTR_ISIN_LEN				13
#define SHORT_NAME_LEN_C		16
#define FX_REQD_IND_LEN		 	 2
#define FX_PUCHASE_IND_LEN	    2
#define FX_SALES_IND_LEN	    2
#define GL_CLT_LEN		11
#define DUMMYCLT_LEN			11
#define PART_IND_LEN	    2
#define REGBR_IND_LEN		    3
#define QTY_LEN_A		 		 9
#define AMOUNT_LEN		 	21
#define TYPEOF_DEAL_LEN 	 2
#define CURR_DATETIME_LEN 20

//main(int argc,char **argv)
int main(int argc,char **argv)//Changes done for AIX Migration
{
	DEBUG_INFO_STRUCT_H			*l_debug_info_ptr 		= NULL;
	FILE						*l_ptr_ini_file 	= NULL;
	FILE						*l_ptr_log_file 	= NULL;
	INTL_ENV_DATA_STRUCT_H	l_intl_envdatastruct_h;
	char						chr_l_inifile[PATH_LENGTH]  		= APL_NULL_STRING;
	char						chr_uname[APL_USERID_LEN]   		= APL_NULL_STRING;
	char						chr_passwd[APL_PASSWD_LEN]  		= APL_NULL_STRING;
	char						chr_custody_id_b[APL_USERID_LEN] 	 		= APL_NULL_STRING;
	char						chr_l_filename_c[FILE_NAME_LEN]  	= APL_NULL_STRING;
	char						chr_l_fnameprefix[5]  				= APL_NULL_STRING;
	char 						chr_l_uploaddir[PATH_LENGTH]		= APL_NULL_STRING;
	char						**temp = NULL ;
	char 						chr_l_typ_rem_trd[2]					= APL_NULL_STRING;
	char 						chr_l_action[2]							= APL_NULL_STRING;
	char 						chr_l_client_passed[11]				= APL_NULL_STRING;
	int 						int_num 									= 0;
	int						int_l_flg  								= 0;
	int						int_retval 								= 0;
	int						int_l_int_count 						= 0;
	char						chr_l_buf[BUFFER_LEN] 					= APL_NULL_STRING;
	struct sqlca			sqlca;

	memset(&l_intl_envdatastruct_h,NULL,sizeof(INTL_ENV_DATA_STRUCT_H));
	memset(chr_l_filename_c,APL_NULL_CHAR,FILE_NAME_LEN);
	memset(chr_l_fnameprefix,APL_NULL_CHAR,5);
	memset(chr_l_uploaddir,APL_NULL_CHAR,PATH_LENGTH);
	memset(chr_l_action,APL_NULL_CHAR,sizeof(chr_l_action));
	memset(chr_l_client_passed,APL_NULL_CHAR,sizeof(chr_l_client_passed));
	
	sqlca.sqlcode = 0;

	
	strcpy(l_intl_envdatastruct_h.usr, argv[3]);
	strcpy(l_intl_envdatastruct_h.h_mode, argv[4]);
	strcpy(l_intl_envdatastruct_h.processtion, argv[5]);
	strcpy(l_intl_envdatastruct_h.auth_req, argv[6]);
	strcpy(l_intl_envdatastruct_h.subprocess, argv[7]);
	strcpy(l_intl_envdatastruct_h.h_process, argv[8]);
	
	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		exit(-1);
	
	APL_FETCH_DB_LOGIN_DETAILS(l_ptr_ini_file,chr_custody_id_b,chr_uname,chr_passwd,APL_OUT_FILE,&l_debug_info_ptr)
	
	
	
	if (CO_Con_Db(chr_uname,chr_passwd,&l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	

	int_retval = CO_Rtv_RptFileName("3j",APL_LOGFILE_DESC,100,argv[5],argv,&l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

	

	EXEC SQL COMMIT WORK;
	
	if (sqlca.sqlcode != 0)
	{
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}
	
	memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
	sprintf(chr_l_buf,"Remote Trades Upload File - Greece");
	
	fprintf(l_ptr_log_file,"\n");
	fprintf(l_ptr_log_file,"    		%s\n",chr_l_buf);
	fprintf(l_ptr_log_file,"    		----------------------------------\n\n");

	

	if (CO_RtvSysParams(&l_debug_info_ptr) != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to get system parameters - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL	
	}

	
	
	int_retval = CO_Pro_LocRec(argv,l_ptr_log_file,&l_debug_info_ptr);
	 
	if (int_retval != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to lock BATCH_IN_PROC record - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

   if ( APL_FAILURE == CO_ReadToken(l_ptr_ini_file,"INTL_UPL_PATH",chr_l_uploaddir,&l_debug_info_ptr))
   {
		APL_GOBACK_FAIL
	}

	

	 fprintf(l_ptr_log_file, "argv[9]=(%s)\n",argv[9]);
	 fflush(l_ptr_log_file);

	 if (APL_FAILURE == CO_SplitStr( argv[9],'|',&int_num,&temp))
	 {
		fprintf(l_ptr_log_file, "\n\tString split processtion failed\n");
		APL_GOBACK_FAIL
	 }
	
	 if(int_num == 0)
	 {
		fprintf(l_ptr_log_file, "\n\tThere were no params. Mandatory data missing\n");
		APL_GOBACK_FAIL
	 }
	 fflush(l_ptr_log_file);

	 strcpy(chr_l_filename_c,temp[1]);
	 strcpy(chr_l_action,temp[2]);
	 strcpy(chr_l_client_passed,temp[3]);
	
	 fprintf(l_ptr_log_file,"l_filename=(%s), chr_l_action=(%s), chr_l_client_passed=(%s)\n\n", chr_l_filename_c,chr_l_action,chr_l_client_passed);
	 fflush(l_ptr_log_file);

	 if (!strlen(chr_l_filename_c))
	 {
		CO_InsertErr
		 (&l_debug_info_ptr,
		  ERR_FDFILE_NOTVALID,
		  APL_NULL_STRING,
		  APL_NULL_STRING,
		  APL_NULL_STRING,
		  __LINE__,
		  __FILE__
		 );
		
		CO_ProcMonitor(l_ptr_log_file,"No Upload File name given!!\n",&l_debug_info_ptr,&l_intl_envdatastruct_h);
      APL_GOBACK_FAIL
	 }

	 fflush(l_ptr_log_file);


	

  int_retval=0;

  if( strcmp(chr_l_action,"M") == 0 )
  {
	 int_retval=	Uplremotetrdfn_for578(argv,chr_l_filename_c,chr_l_uploaddir,chr_l_action,chr_l_client_passed,l_ptr_ini_file,l_ptr_log_file,&l_intl_envdatastruct_h,&l_debug_info_ptr);
  }
  else if( strcmp(chr_l_action,"T") == 0 )
  {
	 int_retval=	Uplremotetrdfn_forTrade(argv,chr_l_filename_c,chr_l_uploaddir,chr_l_action,chr_l_client_passed,l_ptr_ini_file,l_ptr_log_file,&l_intl_envdatastruct_h,&l_debug_info_ptr);
  }
  else
  {
		CO_ProcMonitor(l_ptr_log_file,"Incorect Action Passed !\n",&l_debug_info_ptr,&l_intl_envdatastruct_h);
      APL_GOBACK_FAIL
  }


  if( int_retval != APL_SUCCESS )
  {
		int_l_flg = 1;

	   CO_Mod_Batch_Status(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);
		
		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);
		}
		APL_GOBACK_FAIL	
	}
	else
	{
		int_l_flg = 0;

		CO_Mod_Batch_Status(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);

		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);
		}
		APL_GOBACK_SUCCESS
	}
	  
	APL_GOBACK_SUCCESS


	RETURN_SUCCESS	:
	{
		CO_ProcMonitor(l_ptr_log_file,"Exiting Main Function Successfully\n",NULL,NULL);
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);
		fclose(l_ptr_ini_file);
		exit(0);
	}

	RETURN_FAILURE	:
	{
		CO_ProcMonitor(l_ptr_log_file,"Exiting Main Function Unsuccessfully\n",NULL,NULL);
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);
		fclose(l_ptr_ini_file);
  		exit(-1);
	}
}
 



 
int Uplremotetrdfn(char **argv,char *chr_p_filename_a,char *p_uploaddir,char *p_typ_rem_deal,char *p_fnameprefix,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_e,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_hf;

 FILE *l_upl_file 							= NULL ;
 FILE *l_err_file 							= NULL ;
 char chr_l_uploadfilename[PATH_LENGTH] = APL_NULL_STRING ;
 char chr_l_linebuf[LINEBUFFER_LEN]			= APL_NULL_STRING ;
 int  int_l_retval 								= 0 ;
 int  int_l_reccount 								= 0 ;
 int  int_l_rpr_seq_num 							= 0 ;

 char chr_l_buf[BUFFER_LEN]							 = APL_NULL_STRING ;
 char chr_l_str_repname_a[PATH_LENGTH] 	       = APL_NULL_STRING ;
 char chr_l_str_fname[PATH_LENGTH] 	       	 = APL_NULL_STRING ;
 char chr_l_str_log_dir[PATH_LENGTH]	          = APL_NULL_STRING ;

 char chr_l_reason[REASON_LEN]					= APL_NULL_STRING ;
 char chr_l_client_a[CLIENT_LEN_C]				= APL_NULL_STRING ;
 char chr_l_trdt_a[DL_DATE_LEN]						= APL_NULL_STRING ;
 char chr_l_tradedt[DEAL_DATE_LEN]				= APL_NULL_STRING ;
 char chr_l_settledt_a[SETL_DATE_LEN_A]			= APL_NULL_STRING ;
 char chr_l_settledate[SETL_DATE_LEN_A]			= APL_NULL_STRING ;
 char chr_l_instrcode_a[SEC_CD_LEN]					= APL_NULL_STRING ;
 char int_l_domcpac[DOMCPCLT_LEN]				= APL_NULL_STRING ;
 char chr_l_ccy[CCY_LEN]							= APL_NULL_STRING ;
 char chr_l_userid[USERID_B]					= APL_NULL_STRING ;
 char chr_l_locncode_c[LOC_CD_LEN]			= APL_NULL_STRING ;
 char chr_l_grlocn[LOC_CD_LEN]				= APL_NULL_STRING ;
 char chr_l_transrefno[DEAL_IDENTITY_NO]		= APL_NULL_STRING ;
 char chr_l_transtype[DEAL_TYPE_LEN]			= APL_NULL_STRING ;
 char chr_l_serialno[SRLNO_LEN]			= APL_NULL_STRING ;
 char chr_l_operator_code[OPER_CD_LEN]= APL_NULL_STRING ;
 char chr_l_settler_code[SETLER_CODE_LEN]	= APL_NULL_STRING ;
 char chr_l_satcode[SAT_CODE_LEN]				= APL_NULL_STRING ;
 char chr_l_satacc[SAT_CLT_LEN]					= APL_NULL_STRING ;
 char chr_l_assis_code[ASSIS_CD_LEN_A]		= APL_NULL_STRING ;
 char chr_l_isin[INSTR_ISIN_LEN]						= APL_NULL_STRING ;
 char chr_l_short_name[SHORT_NAME_LEN_C]		= APL_NULL_STRING ;
 char chr_l_fxreqd[FX_REQD_IND_LEN]					= APL_NULL_STRING ;
 char chr_l_fxpurchflg[FX_PUCHASE_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_fxsalesflg[FX_SALES_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_glclient[GL_CLT_LEN]	= APL_NULL_STRING ;
 char chr_l_dummyacc[DUMMYCLT_LEN]			= APL_NULL_STRING ;
 char chr_l_partialflg[PART_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_regbrind_a[REGBR_IND_LEN]			= APL_NULL_STRING ;
 char chr_l_str_qty[QTY_LEN_A]					= APL_NULL_STRING ;
 char chr_l_str_amount[AMOUNT_LEN]			= APL_NULL_STRING ;
 double l_quantity     								= 0 ;
 double l_cost   								= 0 ;
 char chr_l_typeoftrans[TYPEOF_DEAL_LEN]	= APL_NULL_STRING ;
 double dbl_l_amount_a  								= 0 ;
 char chr_l_systemdatetime[CURR_DATETIME_LEN]= APL_NULL_STRING ;
 
 int int_l_ctr 			= 0;
 int int_l_int_count 	= 0;

 short l_i_account 		= 0 ; 
 short l_i_domcpac 		= 0 ;
 short l_i_instr_code  		= 0 ;
 short l_i_locncode  	= 0 ;
 short l_i_grlocn  		= 0 ;
 short l_i_ccy				= 0 ;
 short l_i_fxreqd			= 0 ;
 short l_i_fxpurchflg	= 0 ;
 short l_i_fxsalesflg	= 0 ;
 short l_i_ibbsaccount	= 0 ;
 short l_i_dummyacc		= 0 ;
 short l_i_partialflg	= 0 ;
 short l_i_regbrind		= 0 ;
 short l_i_tradedt		= 0 ;
 short l_i_settledate	= 0 ;

 INTL_REPT_STRUCT_H *l_intl_rept_struct_ha     = NULL;

 EXEC SQL VAR chr_l_client_a 		IS STRING ;
 EXEC SQL VAR int_l_domcpac 		IS STRING ;
 EXEC SQL VAR chr_l_instrcode_a  		IS STRING ;
 EXEC SQL VAR chr_l_locncode_c  		IS STRING ;
 EXEC SQL VAR chr_l_grlocn   		IS STRING ;
 EXEC SQL VAR chr_l_ccy  			IS STRING ;
 EXEC SQL VAR chr_l_fxreqd  		IS STRING ;
 EXEC SQL VAR chr_l_fxpurchflg  	IS STRING ;
 EXEC SQL VAR chr_l_fxsalesflg  	IS STRING ;
 EXEC SQL VAR chr_l_glclient 	IS STRING ;
 EXEC SQL VAR chr_l_dummyacc	 	IS STRING ;
 EXEC SQL VAR chr_l_partialflg 	IS STRING ;
 EXEC SQL VAR chr_l_regbrind_a 	 	IS STRING ;
 EXEC SQL VAR chr_l_tradedt 	 	IS STRING ;

memset(chr_l_reason,			APL_NULL_CHAR,		REASON_LEN);
memset(chr_l_client_a,			APL_NULL_CHAR,		CLIENT_LEN_C);
memset(chr_l_trdt_a,				APL_NULL_CHAR,		DL_DATE_LEN);
memset(chr_l_tradedt,			APL_NULL_CHAR,		DEAL_DATE_LEN);
memset(chr_l_settledt_a,		APL_NULL_CHAR,		SETL_DATE_LEN_A);
memset(chr_l_settledate,		APL_NULL_CHAR,		SETL_DATE_LEN_A);
memset(chr_l_instrcode_a,			APL_NULL_CHAR,		SEC_CD_LEN);
memset(int_l_domcpac,			APL_NULL_CHAR,		DOMCPCLT_LEN);
memset(chr_l_ccy,				APL_NULL_CHAR,		CCY_LEN);
memset(chr_l_userid,			APL_NULL_CHAR,		USERID_B);
memset(chr_l_locncode_c,		APL_NULL_CHAR,		LOC_CD_LEN);
memset(chr_l_grlocn,			APL_NULL_CHAR,		LOC_CD_LEN);
memset(chr_l_transrefno,		APL_NULL_CHAR,		DEAL_IDENTITY_NO);
memset(chr_l_transtype,		APL_NULL_CHAR,		DEAL_TYPE_LEN);	
memset(chr_l_serialno,		APL_NULL_CHAR,		SRLNO_LEN);
memset(chr_l_operator_code,	APL_NULL_CHAR,		OPER_CD_LEN);
memset(chr_l_settler_code,	APL_NULL_CHAR,		SETLER_CODE_LEN);
memset(chr_l_satcode,			APL_NULL_CHAR,		SAT_CODE_LEN);
memset(chr_l_satacc,			APL_NULL_CHAR,		SAT_CLT_LEN);
memset(chr_l_assis_code,		APL_NULL_CHAR,		ASSIS_CD_LEN_A);
memset(chr_l_isin,				APL_NULL_CHAR,		INSTR_ISIN_LEN);
memset(chr_l_short_name,		APL_NULL_CHAR,		SHORT_NAME_LEN_C);
memset(chr_l_fxreqd,			APL_NULL_CHAR,		FX_REQD_IND_LEN);
memset(chr_l_fxpurchflg,		APL_NULL_CHAR,		FX_PUCHASE_IND_LEN);
memset(chr_l_fxsalesflg,		APL_NULL_CHAR,		FX_SALES_IND_LEN);
memset(chr_l_glclient,	APL_NULL_CHAR,		GL_CLT_LEN);
memset(chr_l_dummyacc,		APL_NULL_CHAR,		DUMMYCLT_LEN);
memset(chr_l_partialflg,		APL_NULL_CHAR,		PART_IND_LEN);
memset(chr_l_regbrind_a,		APL_NULL_CHAR,		REGBR_IND_LEN);
memset(chr_l_str_qty,			APL_NULL_CHAR,		QTY_LEN_A);
memset(chr_l_str_amount,		APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_typeoftrans,	APL_NULL_CHAR,		TYPEOF_DEAL_LEN);
memset(chr_l_systemdatetime,APL_NULL_CHAR,		CURR_DATETIME_LEN);

 fprintf(p_ptr_log_file,"Entered processtion Uplremotetrdfn\n");
 strcpy(chr_l_userid,argv[3]);

 l_sys_dl_deal_struct_hf = (SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
 APL_MALLOC_FAIL(l_sys_dl_deal_struct_hf);

 l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
 APL_MALLOC_FAIL(l_intl_rept_struct_ha) ;
	
	if( !strcmp(p_typ_rem_deal,"50") || !strcmp(p_typ_rem_deal,"35") ) 
	 ;
   else
	{
		fprintf(p_ptr_log_file,"Error : Type Of Trade to be created should be either 35 or 50\n");
		APL_GOBACK_SUCCESS
	}

	if( !strcmp(p_typ_rem_deal,"50") )
	{
	 if( strcmp(p_fnameprefix,"PROP")!=0 )
	 {
			fprintf(p_ptr_log_file,"Error : File Name Prefix should be PROP , for  creation of Propreitary Trades!\n");
			APL_GOBACK_SUCCESS
	 }
   }

	if( !strcmp(p_typ_rem_deal,"35") )
	{
	 if( strcmp(p_fnameprefix,"NOPR")!=0  )
	 {
			fprintf(p_ptr_log_file,"Error : File Name Prefix should be NOPR , for  creation of Non-Propreitary Trades!\n");
			APL_GOBACK_SUCCESS
	 }
   }

 strcpy(chr_l_str_fname,"RM"); 

 if (genrmtfilename(chr_l_str_repname_a,chr_l_str_fname,l_debug_info_ptr) != APL_SUCCESS)
	return(APL_FAILURE);

 strcpy(l_intl_rept_struct_ha->report_name, chr_l_str_repname_a);
 strcpy(l_intl_rept_struct_ha->report_desc, "REMOTE TRADES ERROR FILE");
 strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
 l_intl_rept_struct_ha->report_width = 100 ;
 strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
 strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
 strcpy(l_intl_rept_struct_ha->usr, argv[3]);

 if (CO_ReadToken(p_ptr_ini_file,"INTL_LOG_PATH",chr_l_str_log_dir,l_debug_info_ptr) != APL_SUCCESS)
	return(APL_FAILURE);
	 

 strcat(chr_l_str_log_dir,chr_l_str_repname_a);

 fprintf(p_ptr_log_file,"Error File Name = %s\n",chr_l_str_log_dir);
 fflush(p_ptr_log_file);

 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
	return(APL_FAILURE);

  if((l_err_file = fopen(chr_l_str_log_dir,"w")) == NULL )
  {
   fprintf(p_ptr_log_file,"Error Opening the Error h_file into which the records with improper data are to be written\n");
   return(APL_FAILURE);
  }

 strcpy(chr_l_uploadfilename,p_uploaddir);
 strcat(chr_l_uploadfilename,chr_p_filename_a);

 l_upl_file = fopen(chr_l_uploadfilename,"r");

 fprintf(p_ptr_log_file,"Upload File Name = %s\n",chr_l_uploadfilename);

 if(l_upl_file==NULL)
 {
   fprintf(p_ptr_log_file,"Error Opening the Upload File\n");
   return(APL_FAILURE);
 }

	if(APL_FAILURE == CO_RtvSysDtTime(chr_l_systemdatetime,l_debug_info_ptr))
	{
		CO_ProcMonitor(p_ptr_log_file,"Error in retrieving the system chr_date time \n",l_debug_info_ptr,p_intl_env_data_struct_h_e);
		APL_GOBACK_FAIL
	}

	EXEC SQL select gen_fx_adv_ind into :chr_l_fxreqd:l_i_fxreqd from MT_MESSAGE_SYS_PARAMS ;
	IS_ANY_ORA_ERROR


 fprintf(p_ptr_log_file,"Starting Scanning Of the File\n");

 while(!feof(l_upl_file))
 {
	memset(chr_l_linebuf,APL_NULL_CHAR,LINEBUFFER_LEN);
	memset(l_sys_dl_deal_struct_hf,NULL,sizeof(SYS_DL_DEAL_STRUCT_H));
	fscanf(l_upl_file,"%[^\n]\n",chr_l_linebuf);

   if( !strlen(chr_l_linebuf) && !int_l_reccount ) 
   {
	 fprintf(l_err_file,"----------------NULL Records File Passed !------------------\n");
	 fprintf(p_ptr_log_file,"NULL Records File Passed !\n");
	 break;
   }

	int_l_reccount++ ;
	fprintf(p_ptr_log_file,"Scanned %d records\n",int_l_reccount);

	if( strlen(chr_l_linebuf) != 135 )
	{
		fprintf(p_ptr_log_file,"Record Line Length = %d\n",(int)strlen(chr_l_linebuf)); //AIX - Warnings Removal
		strcpy(chr_l_reason,"Data invalid! (Should contain 135 characters per h_line)");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
	}

	

	str_split_fn(chr_l_linebuf,chr_l_trdt_a				,1,8,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_settledt_a		,9,16,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_transrefno		,17,23,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_transtype		,24,24,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_serialno		,25,29,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_operator_code	,30,39,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_settler_code	,40,49,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_satcode			,50,59,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_satacc			,60,69,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_assis_code		,70,81,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_isin				,82,93,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_short_name		,94,108,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_str_qty			,109,116,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_typeoftrans	,117,117,l_debug_info_ptr);
	str_split_fn(chr_l_linebuf,chr_l_str_amount		,118,135,l_debug_info_ptr);

  
	
    if( strlen(chr_l_trdt_a) !=8 )  
	 {
		strcpy(chr_l_reason,"Trade Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_settledt_a) !=8 ) 
	 {
		strcpy(chr_l_reason,"Contractual Settlement Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

	EXEC SQL select to_char( to_date(:chr_l_trdt_a,'ddmmyyyy') , 'dd/chr_mm/chr_yyyy hh:mi:ss') 
	into :chr_l_tradedt:l_i_tradedt from dual ;
	
	if(sqlca.sqlcode != 0)
	{
		strcpy(chr_l_reason,"Trade Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
	}

	EXEC SQL select to_char( to_date(:chr_l_settledt_a,'ddmmyyyy') , 'dd/chr_mm/chr_yyyy hh:mi:ss') 
	into :chr_l_settledate:l_i_settledate from dual ;

	if(sqlca.sqlcode != 0)
	{
		strcpy(chr_l_reason,"Settlement Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
	}

    if( strlen(chr_l_transrefno) ==0 )
	 {
		strcpy(chr_l_reason,"Trans Refno Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_transtype) !=1 )  
	 {
		strcpy(chr_l_reason,"Transaction Type Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_operator_code) ==0 )  
	 {
		strcpy(chr_l_reason,"Operator Code Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_assis_code) ==0 )  
	 {
		strcpy(chr_l_reason,"Assis Code Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_isin) ==0 )  
	 {
		strcpy(chr_l_reason,"ISIN Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

	 l_quantity = atof(chr_l_str_qty);
	 dbl_l_amount_a = atof(chr_l_str_amount);

    if( strlen(chr_l_str_qty) ==0 || l_quantity == 0 )  
	 {
		strcpy(chr_l_reason,"Qty Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_str_amount) ==0 || dbl_l_amount_a == 0 )
	 {
		strcpy(chr_l_reason,"Amount Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

	l_cost = dbl_l_amount_a / l_quantity ;

	if(  !strcmp(p_typ_rem_deal,"35") )
	{
		if( !strcmp(chr_l_settler_code,chr_l_operator_code) ) 
		{
		fprintf(l_err_file,"Record No. %d For Non-Prop Trades , Broker SAT id(%s) and CLient SAT id(%s) should be different\n",int_l_reccount,chr_l_operator_code,chr_l_settler_code);
		continue;
		}
	}
	
	if(  !strcmp(p_typ_rem_deal,"50") )
	{
		if( strcmp(chr_l_settler_code,chr_l_operator_code) ) 
		{
		fprintf(l_err_file,"Record No. %d For Prop Trades , Broker SAT id(%s) and CLient SAT id(%s) should be the same\n",int_l_reccount,chr_l_operator_code,chr_l_settler_code);
		continue;
		}
	}

	EXEC SQL Select count(*) into :int_l_int_count from MHLP_CODE where LCL_OPCD = :chr_l_operator_code ;
	IS_ANY_ORA_ERROR

	if(!int_l_int_count)
	{
		fprintf(l_err_file,"Record No. %d LBRK Code Not Found = %s\n",int_l_reccount,chr_l_operator_code);
		continue;
	}

	EXEC SQL Select count(*) into :int_l_int_count from MHLP_CODE where MHLP_CODE = :chr_l_assis_code ;
	IS_ANY_ORA_ERROR

	if(!int_l_int_count)
	{
		fprintf(l_err_file,"Record No. %d Assis Code Not Found = %s\n",int_l_reccount,chr_l_assis_code);
		continue;
	}

	EXEC SQL Select client into :chr_l_client_a:l_i_account from MHLP_CODE 
	where MHLP_CODE = :chr_l_assis_code and LCL_OPCD = :chr_l_operator_code ;
	IS_ANY_ORA_ERROR

	if( APL_ZERO_RESULT_SET )
	{
		fprintf(l_err_file,"Record No. %d Account Not Found for Assis Code = %s , LBRK Code = %s\n",int_l_reccount,chr_l_assis_code,chr_l_operator_code);
		continue;
	}

	EXEC SQL SELECT FIELD_VAL into :int_l_domcpac:l_i_domcpac from PRO_GSSPLVAL
	where MAIN_FUN = 'REMOTE_TRADE' and SUB_PROCESS = 'BIC_CODE' 
	and NATION = 'GR' ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(p_ptr_log_file,"Domcpac Not Found %s\n" , int_l_domcpac);
		APL_GOBACK_FAIL
	}

	EXEC SQL SELECT instr_code into :chr_l_instrcode_a:l_i_instr_code from MT_INSTRUMENT
	where instr_isin = :chr_l_isin ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Instrode Not Found For ISIN = %s\n",int_l_reccount,chr_l_isin);
		continue;
	}

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT location_cd , currency_cd INTO :chr_l_locncode_c:l_i_locncode , :chr_l_ccy:l_i_ccy 
	FROM MT_INSTRUMENT
	WHERE INSTR_CODE=:chr_l_instrcode_a;
	IS_ANY_ORA_ERROR
	
	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Locncode/Currency Not Found For Instrode = %s\n",int_l_reccount,chr_l_instrcode_a);
		continue;
	}

	EXEC SQL SELECT CLN_PARTIAL_IND ,CLN_GL_ACCOUNT 
	into :chr_l_partialflg:l_i_partialflg , :chr_l_glclient:l_i_ibbsaccount 
	from MT_CLIENT where CLN_CODE = :chr_l_client_a ;
	IS_ANY_ORA_ERROR
	
	if( sqlca.sqlcode )
	{
		fprintf(p_ptr_log_file,"Record No. %d Partialflg Not Found For Account = %s\n",int_l_reccount,chr_l_client_a);
		APL_GOBACK_FAIL
	}

	EXEC SQL select GL_ACCOUNT into :chr_l_dummyacc:l_i_dummyacc from DL_CASHCLT
	where client = :chr_l_client_a and DEFAULT_CCY = 'U' ;
	IS_ANY_ORA_ERROR

	if( APL_ZERO_RESULT_SET )  
	{
		strcpy(chr_l_dummyacc,chr_l_glclient);
	}

	EXEC SQL SELECT CLN_FX_BUY_IND , CLN_FX_SELL_IND 
	into :chr_l_fxpurchflg:l_i_fxpurchflg , :chr_l_fxsalesflg:l_i_fxsalesflg
	from MT_CLIENT where CLN_CODE = :chr_l_client_a ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Purchflg/Salesflg Not Found For Account = %s\n",int_l_reccount,chr_l_client_a);
		APL_GOBACK_FAIL
	}

	EXEC SQL select REG_BR_IND into :chr_l_regbrind_a:l_i_regbrind from MT_INSTRUMENT
	where instr_code = :chr_l_instrcode_a ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(p_ptr_log_file,"Record No. %d RegBrind Not Found For Instrurity = %s\n",int_l_reccount,chr_l_instrcode_a);
		APL_GOBACK_FAIL
	}


	

	strcpy(l_sys_dl_deal_struct_hf->h_dl_client	,chr_l_client_a);
	strcpy(l_sys_dl_deal_struct_hf->h_dlt		,chr_l_tradedt);
	strcpy(l_sys_dl_deal_struct_hf->h_setldt,chr_l_settledate);
	strcpy(l_sys_dl_deal_struct_hf->h_instr_code	,chr_l_instrcode_a);
	strcpy(l_sys_dl_deal_struct_hf->h_domcpclt_cd	,int_l_domcpac);

	strcpy(l_sys_dl_deal_struct_hf->h_indentity_no	,chr_l_transrefno);
	strcpy(l_sys_dl_deal_struct_hf->h_classofdl,p_typ_rem_deal);
	l_sys_dl_deal_struct_hf->h_pr		=	l_cost;
	l_sys_dl_deal_struct_hf->h_amt	=	dbl_l_amount_a;       
	l_sys_dl_deal_struct_hf->h_qty		=	l_quantity;
   l_sys_dl_deal_struct_hf->h_stx_comm	=	0;
	l_sys_dl_deal_struct_hf->h_oth_comm	=	0;
	l_sys_dl_deal_struct_hf->h_diffamount	=	0;
	l_sys_dl_deal_struct_hf->h_fx_rt	=	0;
	l_sys_dl_deal_struct_hf->h_rec_int_000=	0;

	strcpy(l_sys_dl_deal_struct_hf->h_currencycode			,chr_l_ccy);
	strcpy(l_sys_dl_deal_struct_hf->h_entry		,"S") ; 

	EXEC SQL SELECT FIELD_VAL into :chr_l_grlocn:l_i_grlocn from PRO_GSSPLVAL
	where MAIN_FUN = 'TRADE_MAINT' and SUB_PROCESS = 'GROSS_AMT_LOCATION' 
			and FIELD_VAL=:l_sys_dl_deal_struct_hf->h_loccode;
	IS_ANY_ORA_ERROR 

	if( !strcmp(p_typ_rem_deal,"35") )
	{
		strcpy(l_sys_dl_deal_struct_hf->h_deal_status	,STATUS_AUTH);
		strcpy(l_sys_dl_deal_struct_hf->h_confdate			,APL_NULL_STRING);
		strcpy(l_sys_dl_deal_struct_hf->h_cash_client	,chr_l_glclient);
		l_sys_dl_deal_struct_hf->h_brokercomm  =  0; 
	}
   else
	{
		strcpy(l_sys_dl_deal_struct_hf->h_deal_status	,STATUS_CONF);
		strcpy(l_sys_dl_deal_struct_hf->h_confdate			,chr_l_tradedt);
		strcpy(l_sys_dl_deal_struct_hf->h_cash_client	,chr_l_dummyacc); 
		if( !strcmp(l_sys_dl_deal_struct_hf->h_loccode,chr_l_grlocn) )
			l_sys_dl_deal_struct_hf->h_brokercomm  =  dbl_l_amount_a; 
	}

	if( !strcmp(chr_l_transtype,"A") )	
		strcpy(l_sys_dl_deal_struct_hf->h_dealcd			,APL_DEAL_RVP);
	else
		strcpy(l_sys_dl_deal_struct_hf->h_dealcd			,APL_DEAL_DVP);

	strcpy(l_sys_dl_deal_struct_hf->h_lrdltype		,APL_NULL_STRING); 

	strcpy(l_sys_dl_deal_struct_hf->h_dlfromord		,APL_NO_IND);
	strcpy(l_sys_dl_deal_struct_hf->h_brkrno		,MS_SWIFT_BOGNO_0731);
	strcpy(l_sys_dl_deal_struct_hf->h_newdt			,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_maker_dt			,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_checker_dt		,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_access_stamp	,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_maker			,chr_l_userid);
	strcpy(l_sys_dl_deal_struct_hf->h_checker			,chr_l_userid);

	strcpy(l_sys_dl_deal_struct_hf->h_loccode		,chr_l_locncode_c);
	strcpy(l_sys_dl_deal_struct_hf->h_ex_arena			,"1");

	if( !strcmp(chr_l_regbrind_a,"RG") )
		strcpy(l_sys_dl_deal_struct_hf->h_reginstr_ind	,"Y");
	else
		strcpy(l_sys_dl_deal_struct_hf->h_reginstr_ind	,"N");

	strcpy(l_sys_dl_deal_struct_hf->h_ispymtlocal		,APL_NO_IND);

	strcpy(p_intl_env_data_struct_h_e->h_mode						,APL_FUNC_INPUT);
	strcpy(p_intl_env_data_struct_h_e->h_process					,"I"); 
	strcpy(l_sys_dl_deal_struct_hf->h_locindentity_no		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_origindentity_no		,APL_NULL_STRING);

	l_sys_dl_deal_struct_hf->h_origquantity = l_quantity ;
	l_sys_dl_deal_struct_hf->h_origamount = dbl_l_amount_a ;

	strcpy(l_sys_dl_deal_struct_hf->h_reapired_ind		,APL_NO_IND);
	strcpy(l_sys_dl_deal_struct_hf->h_countclt		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_countcltnm		,APL_NULL_STRING);

	strcpy(l_sys_dl_deal_struct_hf->h_custinfo		,APL_NULL_STRING);
	
	if( strlen(chr_l_fxreqd) )
	{
		if( !strcmp(chr_l_transtype,"A") )
			strcpy(l_sys_dl_deal_struct_hf->h_fx_reqd	,chr_l_fxpurchflg);
		else
			strcpy(l_sys_dl_deal_struct_hf->h_fx_reqd	,chr_l_fxsalesflg);
	}
	else
			strcpy(l_sys_dl_deal_struct_hf->h_fx_reqd	,"N");

	strcpy(l_sys_dl_deal_struct_hf->h_isspotdl		,APL_NO_IND);
	strcpy(l_sys_dl_deal_struct_hf->h_domcp_custodyclt		,int_l_domcpac);

	strcpy(l_sys_dl_deal_struct_hf->h_instrdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_moneydate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_status_reg		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_info1			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_moneydate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_countclt		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_countcltnm		,APL_NULL_STRING);
	
   strcpy(l_sys_dl_deal_struct_hf->h_custinfo		,APL_NULL_STRING);

	strcpy(l_sys_dl_deal_struct_hf->h_fail_cd		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_failinfo		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_fx_rt=0;
	l_sys_dl_deal_struct_hf->h_amend_count=0;
	l_sys_dl_deal_struct_hf->h_number_a=0;
	strcpy(l_sys_dl_deal_struct_hf->h_report_at_eom_ind		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_billdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_locindentity_no		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_instruct_person		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_rec_int_000=0;
	strcpy(l_sys_dl_deal_struct_hf->h_pos_stat	,APL_NULL_STRING);

	strcpy(l_sys_dl_deal_struct_hf->h_status_reg		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_matchindentity_no		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_markfaildate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_candropdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_instrconv_ind		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_ndsbldate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_ndsdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_ublckdate			,APL_NULL_STRING);

   l_sys_dl_deal_struct_hf->h_delta_000=0;
	l_sys_dl_deal_struct_hf->h_delta_001=0;
	l_sys_dl_deal_struct_hf->h_delta_002=0;
	strcpy(l_sys_dl_deal_struct_hf->h_delrecdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lastregdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_chkdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_confdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_instrdate		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_regmsgquantity=0;
	strcpy(l_sys_dl_deal_struct_hf->h_tmpoutdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_tmpretdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_transmitdate		,APL_NULL_STRING);

	l_sys_dl_deal_struct_hf->h_complquantity		= 0;
	l_sys_dl_deal_struct_hf->h_lostquantity		= 0;
	l_sys_dl_deal_struct_hf->h_marktrfquantity	= 0;
	l_sys_dl_deal_struct_hf->h_mcomplquantity	= 0;
	l_sys_dl_deal_struct_hf->h_outregquantity	= 0;
	l_sys_dl_deal_struct_hf->h_pendregquantity	= 0;
	l_sys_dl_deal_struct_hf->h_retregquantity	= 0;
	l_sys_dl_deal_struct_hf->h_stampquantity		= 0;
	l_sys_dl_deal_struct_hf->h_tempoutquantity	= 0;
	l_sys_dl_deal_struct_hf->h_tempretquantity	= 0;
	l_sys_dl_deal_struct_hf->h_valdeedquantity	= 0;
	strcpy(l_sys_dl_deal_struct_hf->h_hostdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_ndsbldate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_ndsdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_ublckdate		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_number_b=0;

	strcpy(l_sys_dl_deal_struct_hf->h_clt_reqdel_flag,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_mod_hispos_ind	,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_updhispos_date	,APL_NULL_STRING);
	
	strcpy(l_sys_dl_deal_struct_hf->h_locchng_flg	,"N");
									
	strcpy(l_sys_dl_deal_struct_hf->h_instruct_personnm,		APL_NULL_STRING);
	
			

 if (!strcmp(p_intl_env_data_struct_h_e->h_mode,APL_FUNC_INPUT))
	strcpy(l_sys_dl_deal_struct_hf->h_allow_part_s,"N");

 CO_FreeErrLst(l_debug_info_ptr);
 fprintf(p_ptr_log_file,"About to call CBGenTrdFn\n");

 int_l_retval = DL_Proc_Trd(l_sys_dl_deal_struct_hf,&int_l_rpr_seq_num,p_intl_env_data_struct_h_e,l_debug_info_ptr);

 if(int_l_retval == APL_FAILURE)
 {
 
  IS_ANY_ERROR_FATAL
  IS_ANY_ORA_ERROR
  memset(chr_l_buf, NULL,BUFFER_LEN);
  sprintf(chr_l_buf, "CREATE TRADE FAILED : Account : %s Refno : %s\n", chr_l_client_a,chr_l_transrefno) ;
  CO_ProcMonitor(p_ptr_log_file, chr_l_buf, l_debug_info_ptr, p_intl_env_data_struct_h_e);
  memset(chr_l_reason,NULL,REASON_LEN);
  strcpy(chr_l_reason,(*l_debug_info_ptr)->msg);
  fprintf(l_err_file,"Record No. %d Create Trade Failed : Account : %s Refno : %s  %s\n",int_l_reccount,chr_l_client_a,chr_l_transrefno,chr_l_reason);
  CO_FreeErrLst(l_debug_info_ptr);
 }
 else if(int_l_retval == APL_SUCCESS)
 {
	memset(chr_l_buf, NULL,BUFFER_LEN);
	sprintf(chr_l_buf, "\nCREATED TRADE SUCCESSFULLY : Account : %s Refno : %s\n", chr_l_client_a,chr_l_transrefno) ;
   CO_ProcMonitor(p_ptr_log_file, chr_l_buf, NULL,NULL);
   

         if (APL_FAILURE==EI_Mod_MQData(l_sys_dl_deal_struct_hf->h_dl_client,
                                        l_sys_dl_deal_struct_hf->h_indentity_no,
                                        NULL,
                                        NULL,
                                        "B",
                                        l_debug_info_ptr))
               APL_GOBACK_FAIL

  

 }
 }

 APL_GOBACK_SUCCESS
 
 RETURN_SUCCESS :
 {
  fprintf(p_ptr_log_file,"Leaving processtion Uplremotetrdfn successfully\n");
  CO_FreeErrLst(l_debug_info_ptr);
  APL_FREE(l_sys_dl_deal_struct_hf);
  APL_FREE(l_intl_rept_struct_ha);
  fclose(l_err_file);
  fclose(l_upl_file);
  return(APL_SUCCESS);
 }

 RETURN_FAILURE :
 {
	fprintf(p_ptr_log_file,"Leaving processtion Uplremotetrdfn with failure\n");
	CO_FreeErrLst(l_debug_info_ptr);
   APL_FREE(l_sys_dl_deal_struct_hf);
	APL_FREE(l_intl_rept_struct_ha);
   fclose(l_err_file);
   fclose(l_upl_file);
	return(APL_FAILURE);
 }

}



 
int Uplremotetrdfn_for578(char **argv,char *chr_p_filename_a,char *p_uploaddir,char *chr_p_action,char *p_client_passed,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_e,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 FILE *l_upl_file 							= NULL ;
 FILE *l_err_file 							= NULL ;
 char chr_l_uploadfilename[PATH_LENGTH] 	= APL_NULL_STRING ;
 char chr_l_linebuf[LINEBUFFER_LEN]			= APL_NULL_STRING ;
 char chr_l_chr										= APL_NULL_CHAR ;
 int  int_l_retval 								= 0 ;
 int  int_l_reccount 								= 0 ;
 int  int_noelem 									= 0 ;
 int  int_l_rpr_seq_num 							= 0 ;
 long int_l_next_number=0;

 /* OPT:AIX char **chr_l_param 									 = APL_NULL_STRING ; */
 char **chr_l_param 									 = NULL;
 char chr_l_buf[BUFFER_LEN]							 = APL_NULL_STRING ;
 char chr_l_str_repname_a[PATH_LENGTH] 	       = APL_NULL_STRING ;
 char chr_l_str_fname[PATH_LENGTH] 	       	 = APL_NULL_STRING ;
 char chr_l_str_log_dir[PATH_LENGTH]	          = APL_NULL_STRING ;

 char chr_l_reason[REASON_LEN]					= APL_NULL_STRING ;
 char chr_l_client_a[CLIENT_LEN_C]				= APL_NULL_STRING ;
 char chr_l_trdt_a[DL_DATE_LEN]						= APL_NULL_STRING ;
 char chr_l_tradedt[DEAL_DATE_LEN]				= APL_NULL_STRING ;
 char chr_l_settledt_a[SETL_DATE_LEN_A]			= APL_NULL_STRING ;
 char chr_l_settledate[SETL_DATE_LEN_A]			= APL_NULL_STRING ;
 char chr_l_instrcode_a[SEC_CD_LEN]					= APL_NULL_STRING ;
 char int_l_domcpac[DOMCPCLT_LEN]				= APL_NULL_STRING ;
 char chr_l_ccy[CCY_LEN]							= APL_NULL_STRING ;
 char chr_l_userid[USERID_B]					= APL_NULL_STRING ;
 char chr_l_locncode_c[LOC_CD_LEN]			= APL_NULL_STRING ;
 char chr_l_grlocn[LOC_CD_LEN]				= APL_NULL_STRING ;
 char chr_l_transrefno[DEAL_IDENTITY_NO]		= APL_NULL_STRING ;
 char chr_l_transtype[DEAL_TYPE_LEN]			= APL_NULL_STRING ;
 char chr_l_serialno[SRLNO_LEN]			= APL_NULL_STRING ;
 char chr_l_operator_code[OPER_CD_LEN]= APL_NULL_STRING ;
 char chr_l_settler_code[SETLER_CODE_LEN]	= APL_NULL_STRING ;
 char chr_l_satcode[SAT_CODE_LEN]				= APL_NULL_STRING ;
 char chr_l_satacc[SAT_CLT_LEN]					= APL_NULL_STRING ;
 char chr_l_assis_code[ASSIS_CD_LEN_A]		= APL_NULL_STRING ;
 char chr_l_isin[INSTR_ISIN_LEN]						= APL_NULL_STRING ;
 char chr_l_short_name[SHORT_NAME_LEN_C]		= APL_NULL_STRING ;
 char chr_l_fxreqd[FX_REQD_IND_LEN]					= APL_NULL_STRING ;
 char chr_l_fxpurchflg[FX_PUCHASE_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_fxsalesflg[FX_SALES_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_glclient[GL_CLT_LEN]	= APL_NULL_STRING ;
 char chr_l_dummyacc[DUMMYCLT_LEN]			= APL_NULL_STRING ;
 char chr_l_partialflg[PART_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_regbrind_a[REGBR_IND_LEN]			= APL_NULL_STRING ;
 char chr_l_str_qty[QTY_LEN_A]					= APL_NULL_STRING ;
 char chr_l_str_amount[AMOUNT_LEN]			= APL_NULL_STRING ;
 char chr_l_str_price[AMOUNT_LEN]				= APL_NULL_STRING ;
 char chr_l_str_qty1[QTY_LEN_A]					= APL_NULL_STRING ;
 char chr_l_str_amount1[AMOUNT_LEN]			= APL_NULL_STRING ;
 char chr_l_str_price1[AMOUNT_LEN]			= APL_NULL_STRING ;
 double l_quantity     								= 0 ;
 double l_cost   								= 0 ;
 char chr_l_typeoftrans[TYPEOF_DEAL_LEN]	= APL_NULL_STRING ;
 double dbl_l_amount_a  								= 0 ;
 char chr_l_systemdatetime[CURR_DATETIME_LEN]	= APL_NULL_STRING ;
 char chr_l_business_date[CURR_DATETIME_LEN]		= APL_NULL_STRING ;
 char chr_l_clientof[CLIENT_LEN_C]					= APL_NULL_STRING ;
 char chr_l_clientofcode[CLIENT_LEN_C]				= APL_NULL_STRING ;
 char chr_l_note[CLIENT_LEN_C]							= APL_NULL_STRING ;
 DL_MISDEAL_STRUCT_H *l_dl_misdeal_struct_h					= NULL;
 char chr_l_refno_a[17]											= APL_NULL_STRING ;
 
 int int_l_ctr 			= 0;
 int int_l_int_count 	= 0;
 int int_l_int_type   = 0; 

 short l_i_account 		= 0 ; 
 short l_i_domcpac 		= 0 ;
 short l_i_instr_code  		= 0 ;
 short l_i_locncode  	= 0 ;
 short l_i_grlocn  		= 0 ;
 short l_i_ccy				= 0 ;
 short l_i_fxreqd			= 0 ;
 short l_i_fxpurchflg	= 0 ;
 short l_i_fxsalesflg	= 0 ;
 short l_i_ibbsaccount	= 0 ;
 short l_i_dummyacc		= 0 ;
 short l_i_partialflg	= 0 ;
 short l_i_regbrind		= 0 ;
 short l_i_tradedt		= 0 ;
 short l_i_settledate	= 0 ;

 INTL_REPT_STRUCT_H *l_intl_rept_struct_ha     = NULL;

 EXEC SQL VAR chr_l_client_a 		IS STRING ;
 EXEC SQL VAR chr_l_operator_code	IS STRING ;
 EXEC SQL VAR int_l_domcpac 		IS STRING ;
 EXEC SQL VAR chr_l_instrcode_a  		IS STRING ;
 EXEC SQL VAR chr_l_locncode_c  		IS STRING ;
 EXEC SQL VAR chr_l_grlocn   		IS STRING ;
 EXEC SQL VAR chr_l_ccy  			IS STRING ;
 EXEC SQL VAR chr_l_fxreqd  		IS STRING ;
 EXEC SQL VAR chr_l_fxpurchflg  	IS STRING ;
 EXEC SQL VAR chr_l_fxsalesflg  	IS STRING ;
 EXEC SQL VAR chr_l_glclient 	IS STRING ;
 EXEC SQL VAR chr_l_dummyacc	 	IS STRING ;
 EXEC SQL VAR chr_l_partialflg 	IS STRING ;
 EXEC SQL VAR chr_l_regbrind_a 	 	IS STRING ;
 EXEC SQL VAR chr_l_tradedt 	 	IS STRING ;
 EXEC SQL VAR p_client_passed 	 	IS STRING ;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_dl_client IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_indentity_no IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_domcpclt_cd IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_instr_code IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_checker IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_countcltnm IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_maker IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_countclt IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_info IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_place_of_deal IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_market_flag IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_description IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_clientofcode IS STRING; 
 EXEC SQL VAR l_dl_misdeal_struct_h->h_clientof IS STRING; 
 EXEC SQL VAR l_dl_misdeal_struct_h->h_instruct_person IS STRING; 
 EXEC SQL VAR l_dl_misdeal_struct_h->h_instruct_personnm IS STRING; 
 EXEC SQL VAR l_dl_misdeal_struct_h->h_deal_class IS STRING; 
 EXEC SQL VAR l_dl_misdeal_struct_h->h_trrf_ident IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_comm_ident IS STRING; 
 EXEC SQL VAR l_dl_misdeal_struct_h->h_pool_ident IS STRING; 
 EXEC SQL VAR l_dl_misdeal_struct_h->h_dealdt IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_party_con IS STRING;
 EXEC SQL VAR l_dl_misdeal_struct_h->h_uniq_ident_no IS STRING;
 EXEC SQL VAR chr_l_str_qty1 IS STRING;
 EXEC SQL VAR chr_l_str_amount1 IS STRING;
 EXEC SQL VAR chr_l_str_price1 IS STRING;
 EXEC SQL VAR chr_l_transtype IS STRING;

memset(chr_l_reason,			APL_NULL_CHAR,		REASON_LEN);
memset(chr_l_client_a,			APL_NULL_CHAR,		CLIENT_LEN_C);
memset(chr_l_trdt_a,				APL_NULL_CHAR,		DL_DATE_LEN);
memset(chr_l_tradedt,			APL_NULL_CHAR,		DEAL_DATE_LEN);
memset(chr_l_settledt_a,		APL_NULL_CHAR,		SETL_DATE_LEN_A);
memset(chr_l_settledate,		APL_NULL_CHAR,		SETL_DATE_LEN_A);
memset(chr_l_instrcode_a,			APL_NULL_CHAR,		SEC_CD_LEN);
memset(int_l_domcpac,			APL_NULL_CHAR,		DOMCPCLT_LEN);
memset(chr_l_ccy,				APL_NULL_CHAR,		CCY_LEN);
memset(chr_l_userid,			APL_NULL_CHAR,		USERID_B);
memset(chr_l_locncode_c,		APL_NULL_CHAR,		LOC_CD_LEN);
memset(chr_l_grlocn,			APL_NULL_CHAR,		LOC_CD_LEN);
memset(chr_l_transrefno,		APL_NULL_CHAR,		DEAL_IDENTITY_NO);
memset(chr_l_transtype,		APL_NULL_CHAR,		DEAL_TYPE_LEN);	
memset(chr_l_serialno,		APL_NULL_CHAR,		SRLNO_LEN);
memset(chr_l_operator_code,	APL_NULL_CHAR,		OPER_CD_LEN);
memset(chr_l_settler_code,	APL_NULL_CHAR,		SETLER_CODE_LEN);
memset(chr_l_satcode,			APL_NULL_CHAR,		SAT_CODE_LEN);
memset(chr_l_satacc,			APL_NULL_CHAR,		SAT_CLT_LEN);
memset(chr_l_assis_code,		APL_NULL_CHAR,		ASSIS_CD_LEN_A);
memset(chr_l_isin,				APL_NULL_CHAR,		INSTR_ISIN_LEN);
memset(chr_l_short_name,		APL_NULL_CHAR,		SHORT_NAME_LEN_C);
memset(chr_l_fxreqd,			APL_NULL_CHAR,		FX_REQD_IND_LEN);
memset(chr_l_fxpurchflg,		APL_NULL_CHAR,		FX_PUCHASE_IND_LEN);
memset(chr_l_fxsalesflg,		APL_NULL_CHAR,		FX_SALES_IND_LEN);
memset(chr_l_glclient,	APL_NULL_CHAR,		GL_CLT_LEN);
memset(chr_l_dummyacc,		APL_NULL_CHAR,		DUMMYCLT_LEN);
memset(chr_l_partialflg,		APL_NULL_CHAR,		PART_IND_LEN);
memset(chr_l_regbrind_a,		APL_NULL_CHAR,		REGBR_IND_LEN);
memset(chr_l_str_qty,			APL_NULL_CHAR,		QTY_LEN_A);
memset(chr_l_str_amount,		APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_str_price,		APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_str_qty1,		APL_NULL_CHAR,		QTY_LEN_A);
memset(chr_l_str_amount1,	APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_str_price1,		APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_typeoftrans,	APL_NULL_CHAR,		TYPEOF_DEAL_LEN);
memset(chr_l_systemdatetime,APL_NULL_CHAR,		CURR_DATETIME_LEN);

 l_dl_misdeal_struct_h = (DL_MISDEAL_STRUCT_H *)calloc(1, sizeof(DL_MISDEAL_STRUCT_H));
 APL_MALLOC_FAIL(l_dl_misdeal_struct_h);

 fprintf(p_ptr_log_file,"Entered processtion Uplremotetrdfn_for578\n");
 fflush(p_ptr_log_file);
 strcpy(chr_l_userid,argv[3]);

 l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
 APL_MALLOC_FAIL(l_intl_rept_struct_ha) ;
	
 strcpy(chr_l_str_fname,"RM"); 

 if (genrmtfilename(chr_l_str_repname_a,chr_l_str_fname,l_debug_info_ptr) != APL_SUCCESS)
	return(APL_FAILURE);

 strcpy(l_intl_rept_struct_ha->report_name, chr_l_str_repname_a);
 strcpy(l_intl_rept_struct_ha->report_desc, "SAT FILE UPLOAD ERROR FILE");
 strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
 l_intl_rept_struct_ha->report_width = 100 ;
 strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
 strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
 strcpy(l_intl_rept_struct_ha->usr, argv[3]);

 if (CO_ReadToken(p_ptr_ini_file,"INTL_LOG_PATH",chr_l_str_log_dir,l_debug_info_ptr) != APL_SUCCESS)
	return(APL_FAILURE);
	 
 strcat(chr_l_str_log_dir,chr_l_str_repname_a);

 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
	return(APL_FAILURE);

  if((l_err_file = fopen(chr_l_str_log_dir,"w")) == NULL )
  {
   fprintf(p_ptr_log_file,"Error Opening the Error h_file into which the records with improper data are to be written\n");
   return(APL_FAILURE);
  }

 strcpy(chr_l_uploadfilename,p_uploaddir);
 strcat(chr_l_uploadfilename,chr_p_filename_a);

 l_upl_file = fopen(chr_l_uploadfilename,"r");

 fprintf(p_ptr_log_file,"Upload File Name = %s\n",chr_l_uploadfilename);

 if(l_upl_file==NULL)
 {
   fprintf(p_ptr_log_file,"Error Opening the Upload File\n");
   return(APL_FAILURE);
 }

	if(APL_FAILURE == CO_RtvSysDtTime(chr_l_systemdatetime,l_debug_info_ptr))
	{
		CO_ProcMonitor(p_ptr_log_file,"Error in retrieving the system chr_date time \n",l_debug_info_ptr,p_intl_env_data_struct_h_e);
		APL_GOBACK_FAIL
	}

	  EXEC SQL SELECT MISTXN_BATCH_NO_SEQ.NEXTVAL into :int_l_next_number FROM DUAL ;
	  IS_ANY_ORA_ERROR

	  if(sqlca.sqlcode != 0)
		printf("ZXXXX sqlca.sqlcode=(%d)\n",sqlca.sqlcode);

 fprintf(p_ptr_log_file,"Starting Scanning Of the File for creating 578\n");

 while(!feof(l_upl_file))
 {
	memset(l_dl_misdeal_struct_h,NULL,sizeof(l_dl_misdeal_struct_h));
	memset(chr_l_linebuf,APL_NULL_CHAR,LINEBUFFER_LEN);
	fscanf(l_upl_file,"%[^\n]\n",chr_l_linebuf);

   if( !strlen(chr_l_linebuf) && !int_l_reccount ) 
   {
	 fprintf(l_err_file,"----------------NULL Records File Passed !------------------\n");
	 fprintf(p_ptr_log_file,"NULL Records File Passed !\n");
	 break;
   }

	int_l_reccount++ ;
	fprintf(p_ptr_log_file,"Scanned %d records\n",int_l_reccount);
   fflush(p_ptr_log_file);







	CO_SplitStr(chr_l_linebuf,'?', &int_noelem, &chr_l_param);
	strcpy(chr_l_settledt_a,		chr_l_param[1]);
	strcpy(chr_l_trdt_a,				chr_l_param[3]);
	strcpy(chr_l_transtype,		chr_l_param[5]);
	strcpy(chr_l_operator_code,	chr_l_param[7]);
	strcpy(chr_l_assis_code,		chr_l_param[10]);
	strcpy(chr_l_short_name,		chr_l_param[12]);
	strcpy(chr_l_isin,				chr_l_param[13]);
	strcpy(chr_l_transrefno,		chr_l_param[21]);
	strcpy(chr_l_str_qty,			chr_l_param[22]);
	strcpy(chr_l_str_amount,		chr_l_param[23]);
	strcpy(chr_l_str_price,		chr_l_param[24]);
	strcpy(chr_l_typeoftrans,	chr_l_param[25]);

	for(int_l_ctr=0; int_l_ctr<=27; int_l_ctr++)
		fprintf(p_ptr_log_file,"l_param[%d]=(%s)\n",int_l_ctr,chr_l_param[int_l_ctr]);

  
	
    if( strlen(chr_l_trdt_a) !=10 )  
	 {
		strcpy(chr_l_reason,"Trade Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_settledt_a) !=10 ) 
	 {
		strcpy(chr_l_reason,"Contractual Settlement Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

	EXEC SQL select to_char( to_date(:chr_l_trdt_a,'dd/chr_mm/yyyy') , 'dd/chr_mm/chr_yyyy hh:mi:ss') 
	into :chr_l_tradedt:l_i_tradedt from dual ;
	
	if(sqlca.sqlcode != 0)
	{
		strcpy(chr_l_reason,"Trade Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
	}

	EXEC SQL select to_char( to_date(:chr_l_settledt_a,'dd/chr_mm/yyyy') , 'dd/chr_mm/chr_yyyy hh:mi:ss') 
	into :chr_l_settledate:l_i_settledate from dual ;

	if(sqlca.sqlcode != 0)
	{
		strcpy(chr_l_reason,"Settlement Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
	}

    if( strlen(chr_l_transrefno) ==0 )
	 {
		strcpy(chr_l_reason,"Trans Refno Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }



    if( strlen(chr_l_operator_code) ==0 )  
	 {
		strcpy(chr_l_reason,"Operator Code Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_assis_code) ==0 )  
	 {
		strcpy(chr_l_reason,"Assis Code Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_isin) ==0 )  
	 {
		strcpy(chr_l_reason,"ISIN Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

	 EXEC SQL SELECT 
			replace(:chr_l_str_qty,',','') , 
			replace(:chr_l_str_amount,',','') , 
			replace(:chr_l_str_price,',','')
	 into :chr_l_str_qty1, 
		   :chr_l_str_amount1, 
			:chr_l_str_price1 from dual;
	 IS_ANY_ORA_ERROR

	 l_quantity = atof(chr_l_str_qty1);
	 dbl_l_amount_a = atof(chr_l_str_amount1);
	 l_cost = atof(chr_l_str_price1);

    if( strlen(chr_l_str_qty) ==0 || l_quantity == 0 )  
	 {
		strcpy(chr_l_reason,"Qty Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_str_amount) ==0 || dbl_l_amount_a == 0 )
	 {
		strcpy(chr_l_reason,"Amount Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

  



	EXEC SQL SELECT instr_code into :chr_l_instrcode_a:l_i_instr_code from MT_INSTRUMENT
	where instr_isin = :chr_l_isin ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Instrode Not Found For ISIN = %s\n",int_l_reccount,chr_l_isin);
		continue;
	}

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT location_cd , currency_cd INTO :chr_l_locncode_c:l_i_locncode , :chr_l_ccy:l_i_ccy 
	FROM MT_INSTRUMENT
	WHERE INSTR_CODE=:chr_l_instrcode_a;
	IS_ANY_ORA_ERROR
	
	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Locncode/Currency Not Found For Instrode = %s\n",int_l_reccount,chr_l_instrcode_a);
		continue;
	}

		fprintf(p_ptr_log_file,"Before Getting Ascii Value\n");
   	fflush(p_ptr_log_file);

		fprintf(p_ptr_log_file,"l_transtype=(%s)\n",chr_l_transtype);
   	fflush(p_ptr_log_file);

		fprintf(p_ptr_log_file,"l_transtype[0]=(%c)\n",chr_l_transtype[0]);
   	fflush(p_ptr_log_file);

		chr_l_chr=chr_l_transtype[0];

		EXEC SQL SELECT ASCII(:chr_l_chr) into :int_l_int_type FROM DUAL;
		IS_ANY_ORA_ERROR

		fprintf(p_ptr_log_file,"After Getting Ascii Value, int_l_int_type=(%d)\n",int_l_int_type);
   	fflush(p_ptr_log_file);

 
		fprintf(p_ptr_log_file,"Before Populating Trade Code\n");
   	fflush(p_ptr_log_file);

     if( (int_l_int_type==65) || (int_l_int_type==193) )
			strcpy(l_dl_misdeal_struct_h->h_dealcd,APL_DEAL_RVP);
     else if( (int_l_int_type==208) || (int_l_int_type==227) )
			strcpy(l_dl_misdeal_struct_h->h_dealcd,APL_DEAL_DVP);
	  else
	  {
		fprintf(l_err_file,"Record No. %d Invalid Transaction Type\n",int_l_reccount);
		continue;
	  }

		EXEC SQL SELECT CLN_CODE INTO :int_l_domcpac FROM MT_CLIENT WHERE CLN_BRK_CD='XATHGRA1';
		IS_ANY_ORA_ERROR
	
		if( sqlca.sqlcode )
		{
			fprintf(l_err_file,"Record No. %d Account having BIC Code XATHGRA1 Not Found\n",int_l_reccount);
			fprintf(p_ptr_log_file,"Account having BIC Code XATHGRA1 Not Found in System\n");
			fprintf(p_ptr_log_file,"Exiting Upload Function\n");
			continue;
		}

		fprintf(p_ptr_log_file,"Before Populating The Mistxn struct\n");
   	fflush(p_ptr_log_file);

     strcpy(l_dl_misdeal_struct_h->h_setldt,chr_l_settledt_a);
		
     l_dl_misdeal_struct_h->h_qty=l_quantity;
     strcpy(l_dl_misdeal_struct_h->h_instr_code,chr_l_instrcode_a);
     l_dl_misdeal_struct_h->h_amt=dbl_l_amount_a;

     l_dl_misdeal_struct_h->h_pr=l_cost;
     strcpy(l_dl_misdeal_struct_h->h_newdt,chr_l_systemdatetime);
     strcpy(l_dl_misdeal_struct_h->h_access_stamp,chr_l_systemdatetime);
     strcpy(l_dl_misdeal_struct_h->h_maker,chr_l_userid);
     strcpy(l_dl_misdeal_struct_h->h_maker_dt,chr_l_systemdatetime);
     strcpy(l_dl_misdeal_struct_h->h_checker,""); 
     strcpy(l_dl_misdeal_struct_h->h_checker_dt,""); 
     strcpy(l_dl_misdeal_struct_h->h_countcltnm,"");
     strcpy(l_dl_misdeal_struct_h->h_misdeal_status,"UU"); 
     strcpy(l_dl_misdeal_struct_h->h_countclt,"");
     strcpy(l_dl_misdeal_struct_h->h_info,"");
     strcpy(l_dl_misdeal_struct_h->h_place_of_deal,"EXCHG");  
     strcpy(l_dl_misdeal_struct_h->h_market_flag,"ASE");
     strcpy(l_dl_misdeal_struct_h->h_description,"");
     strcpy(l_dl_misdeal_struct_h->h_dealdt,chr_l_tradedt);
     strcpy(l_dl_misdeal_struct_h->h_clientofcode,""); 
     strcpy(l_dl_misdeal_struct_h->h_clientof,""); 
     strcpy(l_dl_misdeal_struct_h->h_instruct_person,"");
     strcpy(l_dl_misdeal_struct_h->h_instruct_personnm,"");
     strcpy(l_dl_misdeal_struct_h->h_domcpclt_cd,int_l_domcpac);
	  strcpy(l_dl_misdeal_struct_h->h_party_con,chr_l_transrefno);
     strcpy(l_dl_misdeal_struct_h->h_deal_class,"TRAD"); 
     strcpy(l_dl_misdeal_struct_h->h_dl_client,p_client_passed);
     strcpy(l_dl_misdeal_struct_h->h_trrf_ident,"");
     strcpy(l_dl_misdeal_struct_h->h_comm_ident,"");
     strcpy(l_dl_misdeal_struct_h->h_pool_ident,"");
     l_dl_misdeal_struct_h->h_send_msg_ind='Y';
     strcpy(l_dl_misdeal_struct_h->h_countclt,"");

     l_dl_misdeal_struct_h->h_proc_num=int_l_next_number;
     strcpy(l_dl_misdeal_struct_h->h_nameof_file,chr_p_filename_a);

		fprintf(p_ptr_log_file,"l_next_number=(%ld)\n",int_l_next_number);
   	fflush(p_ptr_log_file);

		
     strcpy(p_intl_env_data_struct_h_e->h_mode,APL_FUNC_INPUT);
  		
		fprintf(p_ptr_log_file,"Insert into cmistxn\n");
		fflush(p_ptr_log_file);

     if(( DL_Mod_MisTxn( l_dl_misdeal_struct_h,"",p_intl_env_data_struct_h_e,l_debug_info_ptr)  == APL_SUCCESS)
             && CHECK_EXISTANCE_OF_ERROR )
     {
	  		CO_ProcMonitor(p_ptr_log_file,"Returned from DL_Mod_MisTxn (Input Mode) with Success\n",NULL,p_intl_env_data_struct_h_e);
     }

		

      strcpy(l_dl_misdeal_struct_h->h_checker_dt,chr_l_systemdatetime); 
      strcpy(l_dl_misdeal_struct_h->h_access_stamp,chr_l_systemdatetime);

  		fprintf(p_ptr_log_file,"Auth and Send the msg\n");
		fflush(p_ptr_log_file);
      strcpy(p_intl_env_data_struct_h_e->h_mode,APL_FUNC_AUTHORISE);
	   strcpy(p_intl_env_data_struct_h_e->usr, "SYSTEM1");
      strcpy(l_dl_misdeal_struct_h->h_checker,"SYSTEM1"); 
      strcpy(l_dl_misdeal_struct_h->h_misdeal_status,"AA"); 

		printf("MODE IN UPLOAD FILE=(%s)\n",p_intl_env_data_struct_h_e->h_mode);

     if(( DL_Mod_MisTxn( l_dl_misdeal_struct_h,l_dl_misdeal_struct_h->h_indentity_no,p_intl_env_data_struct_h_e,l_debug_info_ptr)  == APL_SUCCESS)
                    && CHECK_EXISTANCE_OF_ERROR )
     {
  	   	CO_ProcMonitor(p_ptr_log_file,"Returned from DL_Mod_MisTxn (Authorise Mode) with Success\n",NULL,p_intl_env_data_struct_h_e);
     }
	  else
	  {
  	   	CO_ProcMonitor(p_ptr_log_file,"Returned from DL_Mod_MisTxn (Authorise Mode) with Failure\n",l_debug_info_ptr,p_intl_env_data_struct_h_e);
			fprintf(l_err_file,"Record No. %d Message Could Not Be Created. Refer Log File\n",int_l_reccount);
			 
	  }




 }

 APL_GOBACK_SUCCESS
 
 RETURN_SUCCESS :
 {
  fprintf(p_ptr_log_file,"Leaving processtion Uplremotetrdfn_for578 successfully\n");
  CO_FreeErrLst(l_debug_info_ptr);
  APL_FREE(l_dl_misdeal_struct_h);
  APL_FREE(l_intl_rept_struct_ha);
  fclose(l_err_file);
  fclose(l_upl_file);
  return(APL_SUCCESS);
 }

 RETURN_FAILURE :
 {
	fprintf(p_ptr_log_file,"Leaving processtion Uplremotetrdfn_for578 with failure\n");
	CO_FreeErrLst(l_debug_info_ptr);
   APL_FREE(l_dl_misdeal_struct_h);
	APL_FREE(l_intl_rept_struct_ha);
   fclose(l_err_file);
   fclose(l_upl_file);
	return(APL_FAILURE);
 }

}



 
int Uplremotetrdfn_forTrade(char **argv,char *chr_p_filename_a,char *p_uploaddir,char *chr_p_action,char *p_client_passed,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_e,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
 SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_hf;

 FILE *l_upl_file 							= NULL ;
 FILE *l_err_file 							= NULL ;
 char chr_l_uploadfilename[PATH_LENGTH] 	= APL_NULL_STRING ;
 char chr_l_linebuf[LINEBUFFER_LEN]			= APL_NULL_STRING ;
 char chr_l_chr                            = APL_NULL_CHAR ;
 int  int_l_retval 								= 0 ;
 int  int_l_reccount 								= 0 ;
 int  int_noelem									= 0 ;
 int  int_l_rpr_seq_num 							= 0 ;
 int  int_l_count_trade                    = 0 ;
 DL_DEALAUDIT_STRUCT_H  						l_dl_dealaudit_struct_h;

 /* OPT:AIX char **chr_l_param 									 = APL_NULL_STRING ; */
 char **chr_l_param 									 = NULL ;
 char chr_l_buf[BUFFER_LEN]							 = APL_NULL_STRING ;
 char chr_l_str_repname_a[PATH_LENGTH] 	       = APL_NULL_STRING ;
 char chr_l_str_fname[PATH_LENGTH] 	       	 = APL_NULL_STRING ;
 char chr_l_str_log_dir[PATH_LENGTH]	          = APL_NULL_STRING ;

 char chr_l_reason[REASON_LEN]					= APL_NULL_STRING ;
 char chr_l_client_a[CLIENT_LEN_C]				= APL_NULL_STRING ;
 char chr_l_trdt_a[DL_DATE_LEN]						= APL_NULL_STRING ;
 char chr_l_trade_date[DL_DATE_LEN]				= APL_NULL_STRING ;
 char chr_l_tradedt[DEAL_DATE_LEN]				= APL_NULL_STRING ;
 char chr_l_settledt_a[SETL_DATE_LEN_A]			= APL_NULL_STRING ;
 char chr_l_settledate[SETL_DATE_LEN_A]			= APL_NULL_STRING ;
 char chr_l_instrcode_a[SEC_CD_LEN]					= APL_NULL_STRING ;
 char int_l_domcpac[DOMCPCLT_LEN]				= APL_NULL_STRING ;
 char chr_l_ccy[CCY_LEN]							= APL_NULL_STRING ;
 char chr_l_userid[USERID_B]					= APL_NULL_STRING ;
 char chr_l_locncode_c[LOC_CD_LEN]			= APL_NULL_STRING ;
 char chr_l_grlocn[LOC_CD_LEN]				= APL_NULL_STRING ;
 char chr_l_alphano[DEAL_IDENTITY_NO]			= APL_NULL_STRING ;
 char chr_l_transtype[DEAL_TYPE_LEN]			= APL_NULL_STRING ;
 char chr_l_serialno[SRLNO_LEN]			= APL_NULL_STRING ;
 char chr_l_operator_code[OPER_CD_LEN]= APL_NULL_STRING ;
 char chr_l_settler_code[SETLER_CODE_LEN]	= APL_NULL_STRING ;
 char chr_l_satcode[SAT_CODE_LEN]				= APL_NULL_STRING ;
 char chr_l_satacc[SAT_CLT_LEN]					= APL_NULL_STRING ;
 char chr_l_assis_code[ASSIS_CD_LEN_A]		= APL_NULL_STRING ;
 char chr_l_isin[INSTR_ISIN_LEN]						= APL_NULL_STRING ;
 char chr_l_short_name[SHORT_NAME_LEN_C]		= APL_NULL_STRING ;
 char chr_l_fxreqd[FX_REQD_IND_LEN]					= APL_NULL_STRING ;
 char chr_l_fxpurchflg[FX_PUCHASE_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_fxsalesflg[FX_SALES_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_glclient[GL_CLT_LEN]	= APL_NULL_STRING ;
 char chr_l_dummyacc[DUMMYCLT_LEN]			= APL_NULL_STRING ;
 char chr_l_partialflg[PART_IND_LEN]		= APL_NULL_STRING ;
 char chr_l_regbrind_a[REGBR_IND_LEN]			= APL_NULL_STRING ;
 char chr_l_str_price[AMOUNT_LEN]				= APL_NULL_STRING ;
 char chr_l_str_qty[QTY_LEN_A]					= APL_NULL_STRING ;
 char chr_l_str_amount[AMOUNT_LEN]			= APL_NULL_STRING ;
 char chr_l_clientof[CLIENT_LEN_C]			= APL_NULL_STRING ;
 char chr_l_str_price1[AMOUNT_LEN]			= APL_NULL_STRING ;
 char chr_l_str_qty1[QTY_LEN_A]					= APL_NULL_STRING ;
 char chr_l_str_amount1[AMOUNT_LEN]			= APL_NULL_STRING ;
 char chr_l_clientofcode[CLIENT_LEN_C]		= APL_NULL_STRING ;
 double l_quantity     								= 0 ;
 double l_cost   								= 0 ;
 char chr_l_typeoftrans[TYPEOF_DEAL_LEN]	= APL_NULL_STRING ;
 double dbl_l_amount_a  								= 0 ;
 double l_trd_amount 							= 0 ;
 double l_tolerance	 							= 0 ;
 double l_smacquantity		 							= 0 ;
 char chr_l_systemdatetime[CURR_DATETIME_LEN]= APL_NULL_STRING ;
 char chr_l_refno_a[17]						= APL_NULL_STRING ;
 char chr_l_smacrefno[17]						= APL_NULL_STRING ;
 char chr_l_remote_instructing[2]					= APL_NULL_STRING ;
 char chr_l_note[41]									= APL_NULL_STRING ;
 
 int int_l_ctr 			= 0;
 int int_l_int_count 	= 0;
 int int_l_int_type   = 0; 

 short l_i_account 		= 0 ; 
 short l_i_domcpac 		= 0 ;
 short l_i_instr_code  		= 0 ;
 short l_i_locncode  	= 0 ;
 short l_i_grlocn  		= 0 ;
 short l_i_ccy				= 0 ;
 short l_i_fxreqd			= 0 ;
 short l_i_fxpurchflg	= 0 ;
 short l_i_fxsalesflg	= 0 ;
 short l_i_ibbsaccount	= 0 ;
 short l_i_dummyacc		= 0 ;
 short l_i_partialflg	= 0 ;
 short l_i_regbrind		= 0 ;
 short l_i_tradedt		= 0 ;
 short l_i_trade_date	= 0 ;
 short l_i_settledate	= 0 ;
 short l_i_remote_instructing = 0 ;

 INTL_REPT_STRUCT_H *l_intl_rept_struct_ha     = NULL;

 EXEC SQL VAR chr_l_client_a 		IS STRING ;
 EXEC SQL VAR int_l_domcpac 		IS STRING ;
 EXEC SQL VAR chr_l_instrcode_a  		IS STRING ;
 EXEC SQL VAR chr_l_locncode_c  		IS STRING ;
 EXEC SQL VAR chr_l_grlocn   		IS STRING ;
 EXEC SQL VAR chr_l_ccy  			IS STRING ;
 EXEC SQL VAR chr_l_fxreqd  		IS STRING ;
 EXEC SQL VAR chr_l_fxpurchflg  	IS STRING ;
 EXEC SQL VAR chr_l_fxsalesflg  	IS STRING ;
 EXEC SQL VAR chr_l_glclient 	IS STRING ;
 EXEC SQL VAR chr_l_dummyacc	 	IS STRING ;
 EXEC SQL VAR chr_l_partialflg 	IS STRING ;
 EXEC SQL VAR chr_l_regbrind_a 	 	IS STRING ;
 EXEC SQL VAR chr_l_tradedt 	 	IS STRING ;
 EXEC SQL VAR chr_l_trade_date	 	IS STRING ;
 EXEC SQL VAR chr_l_remote_instructing IS STRING ;
 EXEC SQL VAR chr_l_str_price1			  IS STRING ;
 EXEC SQL VAR chr_l_str_qty1			  IS STRING ;
 EXEC SQL VAR chr_l_str_amount1		  IS STRING ;
 EXEC SQL VAR chr_l_transtype IS STRING;
 EXEC SQL VAR chr_l_smacrefno IS STRING;
 EXEC SQL VAR chr_l_note IS STRING;

memset(&l_dl_dealaudit_struct_h,NULL,sizeof(DL_DEALAUDIT_STRUCT_H));
memset(chr_l_reason,			APL_NULL_CHAR,		REASON_LEN);
memset(chr_l_client_a,			APL_NULL_CHAR,		CLIENT_LEN_C);
memset(chr_l_trdt_a,				APL_NULL_CHAR,		DL_DATE_LEN);
memset(chr_l_trade_date,		APL_NULL_CHAR,		DL_DATE_LEN);
memset(chr_l_tradedt,			APL_NULL_CHAR,		DEAL_DATE_LEN);
memset(chr_l_settledt_a,		APL_NULL_CHAR,		SETL_DATE_LEN_A);
memset(chr_l_settledate,		APL_NULL_CHAR,		SETL_DATE_LEN_A);
memset(chr_l_instrcode_a,			APL_NULL_CHAR,		SEC_CD_LEN);
memset(int_l_domcpac,			APL_NULL_CHAR,		DOMCPCLT_LEN);
memset(chr_l_ccy,				APL_NULL_CHAR,		CCY_LEN);
memset(chr_l_userid,			APL_NULL_CHAR,		USERID_B);
memset(chr_l_locncode_c,		APL_NULL_CHAR,		LOC_CD_LEN);
memset(chr_l_grlocn,			APL_NULL_CHAR,		LOC_CD_LEN);
memset(chr_l_alphano,			APL_NULL_CHAR,		DEAL_IDENTITY_NO);
memset(chr_l_transtype,		APL_NULL_CHAR,		DEAL_TYPE_LEN);	
memset(chr_l_serialno,		APL_NULL_CHAR,		SRLNO_LEN);
memset(chr_l_operator_code,	APL_NULL_CHAR,		OPER_CD_LEN);
memset(chr_l_settler_code,	APL_NULL_CHAR,		SETLER_CODE_LEN);
memset(chr_l_satcode,			APL_NULL_CHAR,		SAT_CODE_LEN);
memset(chr_l_satacc,			APL_NULL_CHAR,		SAT_CLT_LEN);
memset(chr_l_assis_code,		APL_NULL_CHAR,		ASSIS_CD_LEN_A);
memset(chr_l_isin,				APL_NULL_CHAR,		INSTR_ISIN_LEN);
memset(chr_l_short_name,		APL_NULL_CHAR,		SHORT_NAME_LEN_C);
memset(chr_l_fxreqd,			APL_NULL_CHAR,		FX_REQD_IND_LEN);
memset(chr_l_fxpurchflg,		APL_NULL_CHAR,		FX_PUCHASE_IND_LEN);
memset(chr_l_fxsalesflg,		APL_NULL_CHAR,		FX_SALES_IND_LEN);
memset(chr_l_glclient,	APL_NULL_CHAR,		GL_CLT_LEN);
memset(chr_l_dummyacc,		APL_NULL_CHAR,		DUMMYCLT_LEN);
memset(chr_l_partialflg,		APL_NULL_CHAR,		PART_IND_LEN);
memset(chr_l_regbrind_a,		APL_NULL_CHAR,		REGBR_IND_LEN);
memset(chr_l_str_price,		APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_str_qty,			APL_NULL_CHAR,		QTY_LEN_A);
memset(chr_l_str_amount,		APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_str_price1,		APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_str_qty1,		APL_NULL_CHAR,		QTY_LEN_A);
memset(chr_l_str_amount1,	APL_NULL_CHAR,		AMOUNT_LEN);
memset(chr_l_typeoftrans,	APL_NULL_CHAR,		TYPEOF_DEAL_LEN);
memset(chr_l_systemdatetime,APL_NULL_CHAR,		CURR_DATETIME_LEN);
memset(chr_l_refno_a,APL_NULL_CHAR,		sizeof(chr_l_refno_a));
memset(chr_l_smacrefno,APL_NULL_CHAR,		sizeof(chr_l_smacrefno));
memset(chr_l_remote_instructing,APL_NULL_CHAR, sizeof(chr_l_remote_instructing));
memset(chr_l_note,APL_NULL_CHAR, sizeof(chr_l_note));

 fprintf(p_ptr_log_file,"Entered processtion Uplremotetrdfn_forTrade\n");
 strcpy(chr_l_userid,argv[3]);

 l_sys_dl_deal_struct_hf = (SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
 APL_MALLOC_FAIL(l_sys_dl_deal_struct_hf);

 l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
 APL_MALLOC_FAIL(l_intl_rept_struct_ha) ;
	
 strcpy(chr_l_str_fname,"ER"); 

 if (genrmtfilename(chr_l_str_repname_a,chr_l_str_fname,l_debug_info_ptr) != APL_SUCCESS)
	return(APL_FAILURE);

 strcpy(l_intl_rept_struct_ha->report_name, chr_l_str_repname_a);
 strcpy(l_intl_rept_struct_ha->report_desc, "REMOTE TRADES ERROR FILE");
 strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
 l_intl_rept_struct_ha->report_width = 100 ;
 strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
 strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
 strcpy(l_intl_rept_struct_ha->usr, argv[3]);

 if (CO_ReadToken(p_ptr_ini_file,"INTL_LOG_PATH",chr_l_str_log_dir,l_debug_info_ptr) != APL_SUCCESS)
	return(APL_FAILURE);
	 
 strcat(chr_l_str_log_dir,chr_l_str_repname_a);

 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
	return(APL_FAILURE);

  if((l_err_file = fopen(chr_l_str_log_dir,"w")) == NULL )
  {
   fprintf(p_ptr_log_file,"Error Opening the Error h_file into which the records with improper data are to be written\n");
   return(APL_FAILURE);
  }

 strcpy(chr_l_uploadfilename,p_uploaddir);
 strcat(chr_l_uploadfilename,chr_p_filename_a);

 l_upl_file = fopen(chr_l_uploadfilename,"r");

 fprintf(p_ptr_log_file,"Upload File Name = %s\n",chr_l_uploadfilename);

 if(l_upl_file==NULL)
 {
   fprintf(p_ptr_log_file,"Error Opening the Upload File\n");
   return(APL_FAILURE);
 }

	if(APL_FAILURE == CO_RtvSysDtTime(chr_l_systemdatetime,l_debug_info_ptr))
	{
		CO_ProcMonitor(p_ptr_log_file,"Error in retrieving the system chr_date time \n",l_debug_info_ptr,p_intl_env_data_struct_h_e);
		APL_GOBACK_FAIL
	}

	EXEC SQL select gen_fx_adv_ind into :chr_l_fxreqd:l_i_fxreqd from MT_MESSAGE_SYS_PARAMS ;
	IS_ANY_ORA_ERROR

 fprintf(p_ptr_log_file,"Starting Scanning Of the File\n");

 while(!feof(l_upl_file))
 {
	memset(chr_l_linebuf,APL_NULL_CHAR,LINEBUFFER_LEN);
	memset(l_sys_dl_deal_struct_hf,NULL,sizeof(SYS_DL_DEAL_STRUCT_H));
	fscanf(l_upl_file,"%[^\n]\n",chr_l_linebuf);

   if( !strlen(chr_l_linebuf) && !int_l_reccount ) 
   {
	 fprintf(l_err_file,"----------------NULL Records File Passed !------------------\n");
	 fprintf(p_ptr_log_file,"NULL Records File Passed !\n");
	 break;
   }

	int_l_reccount++ ;
	fprintf(p_ptr_log_file,"Scanned %d records\n",int_l_reccount);



	CO_SplitStr(chr_l_linebuf,'?', &int_noelem, &chr_l_param);
	strcpy(chr_l_settledt_a,		chr_l_param[1]);
	strcpy(chr_l_trdt_a,				chr_l_param[3]);
	strcpy(chr_l_transtype,		chr_l_param[5]);
	strcpy(chr_l_operator_code,	chr_l_param[7]);
	strcpy(chr_l_assis_code,		chr_l_param[10]);
	strcpy(chr_l_short_name,		chr_l_param[12]);
	strcpy(chr_l_isin,				chr_l_param[13]);
	strcpy(chr_l_alphano,			chr_l_param[21]);
	strcpy(chr_l_str_qty,			chr_l_param[22]);
	strcpy(chr_l_str_amount,		chr_l_param[23]);
	strcpy(chr_l_str_price,		chr_l_param[24]);
	strcpy(chr_l_typeoftrans,	chr_l_param[25]);

	for(int_l_ctr=0; int_l_ctr<=27; int_l_ctr++)
		fprintf(p_ptr_log_file,"l_param[%d]=(%s)\n",int_l_ctr,chr_l_param[int_l_ctr]);

  
	
    if( strlen(chr_l_trdt_a) !=10 )  
	 {
		strcpy(chr_l_reason,"Trade Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_settledt_a) !=10 ) 
	 {
		strcpy(chr_l_reason,"Contractual Settlement Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

	EXEC SQL select to_char( to_date(:chr_l_trdt_a,'dd/chr_mm/yyyy') , 'dd/chr_mm/chr_yyyy hh:mi:ss') 
	into :chr_l_tradedt:l_i_tradedt from dual ;
	
	if(sqlca.sqlcode != 0)
	{
		strcpy(chr_l_reason,"Trade Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
	}

	fprintf(p_ptr_log_file,"Here 0\n");
   fflush(p_ptr_log_file);

	EXEC SQL select to_char( to_date(:chr_l_settledt_a,'dd/chr_mm/yyyy') , 'dd/chr_mm/chr_yyyy hh:mi:ss') 
	into :chr_l_settledate:l_i_settledate from dual ;

	if(sqlca.sqlcode != 0)
	{
		strcpy(chr_l_reason,"Settlement Date Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
	}

    if( strlen(chr_l_alphano) ==0 )
	 {
		strcpy(chr_l_reason,"Trans Refno Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }



    if( strlen(chr_l_operator_code) ==0 )  
	 {
		strcpy(chr_l_reason,"Operator Code Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_assis_code) ==0 )  
	 {
		strcpy(chr_l_reason,"Assis Code Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_str_price) ==0 )  
	 {
		strcpy(chr_l_reason,"Price Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_str_qty) ==0 )  
	 {
		strcpy(chr_l_reason,"Qty Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_str_amount) ==0 )  
	 {
		strcpy(chr_l_reason,"Amount Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_isin) ==0 )  
	 {
		strcpy(chr_l_reason,"ISIN Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }
	fprintf(p_ptr_log_file,"Here 1\n");
   fflush(p_ptr_log_file);

	fprintf(p_ptr_log_file,"l_str_qty=(%s) chr_l_str_price=(%s) chr_l_str_amount=(%s)\n", chr_l_str_qty, chr_l_str_price, chr_l_str_amount);
   fflush(p_ptr_log_file);

	 EXEC SQL SELECT 
			replace(:chr_l_str_qty,',','') , 
			replace(:chr_l_str_amount,',','') , 
			replace(:chr_l_str_price,',','')
	 into :chr_l_str_qty1, 
		   :chr_l_str_amount1, 
			:chr_l_str_price1 from dual;
	
	 fprintf(p_ptr_log_file,"sqlca.sqlcode=(%d)\n",sqlca.sqlcode);
    fflush(p_ptr_log_file);

	 IS_ANY_ORA_ERROR

	 l_cost = atof(chr_l_str_price1);
	 l_quantity = atof(chr_l_str_qty1);
	 dbl_l_amount_a = atof(chr_l_str_amount1);
	
	fprintf(p_ptr_log_file,"Here 2\n");
   fflush(p_ptr_log_file);

    if( strlen(chr_l_str_qty) ==0 || l_quantity == 0 )  
	 {
		strcpy(chr_l_reason,"Qty Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

    if( strlen(chr_l_str_amount) ==0 || dbl_l_amount_a == 0 )
	 {
		strcpy(chr_l_reason,"Amount Incorrect");
		fprintf(l_err_file,"Record No. %d %s\n",int_l_reccount,chr_l_reason);
		continue;
    }

	

	EXEC SQL select to_char( to_date(:chr_l_trdt_a,'dd/chr_mm/yyyy') , 'ddmmyy') 
	into :chr_l_trade_date:l_i_trade_date from dual ;
	IS_ANY_ORA_ERROR

	EXEC SQL select CLN_CODE into :chr_l_client_a:l_i_account from MT_CLIENT
   where CLN_SAT_OPER_CD = :chr_l_operator_code ; 
	IS_ANY_ORA_ERROR
	
	fprintf(p_ptr_log_file,"l_account=(%s), chr_l_operator_code=(%s)\n",chr_l_client_a,chr_l_operator_code);
   fflush(p_ptr_log_file);

	

	EXEC SQL SELECT instr_code into :chr_l_instrcode_a:l_i_instr_code from MT_INSTRUMENT
	where instr_isin = :chr_l_isin ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Instrode Not Found For ISIN = %s\n",int_l_reccount,chr_l_isin);
		continue;
	}

	IS_ANY_ORA_ERROR

	EXEC SQL SELECT location_cd , currency_cd INTO :chr_l_locncode_c:l_i_locncode , :chr_l_ccy:l_i_ccy 
	FROM MT_INSTRUMENT
	WHERE INSTR_CODE=:chr_l_instrcode_a;
	IS_ANY_ORA_ERROR
	
	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Locncode/Currency Not Found For Instrode = %s\n",int_l_reccount,chr_l_instrcode_a);
		continue;
	}

	EXEC SQL SELECT CLN_PARTIAL_IND ,CLN_GL_ACCOUNT 
	into :chr_l_partialflg:l_i_partialflg , :chr_l_glclient:l_i_ibbsaccount 
	from MT_CLIENT where CLN_CODE = :p_client_passed ;
	IS_ANY_ORA_ERROR
	
	if( sqlca.sqlcode )
	{
		fprintf(p_ptr_log_file,"Record No. %d Partialflg Not Found For Account = %s\n",int_l_reccount,p_client_passed);
		APL_GOBACK_FAIL
	}

	EXEC SQL select GL_ACCOUNT into :chr_l_dummyacc:l_i_dummyacc from DL_CASHCLT
	where client = :p_client_passed and DEFAULT_CCY = 'U' ;
	IS_ANY_ORA_ERROR

	if( APL_ZERO_RESULT_SET )  
	{
		strcpy(chr_l_dummyacc,chr_l_glclient);
	}

	EXEC SQL SELECT CLN_FX_BUY_IND , CLN_FX_SELL_IND 
	into :chr_l_fxpurchflg:l_i_fxpurchflg , :chr_l_fxsalesflg:l_i_fxsalesflg
	from MT_CLIENT where CLN_CODE = :p_client_passed ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(l_err_file,"Record No. %d Purchflg/Salesflg Not Found For Account = %s\n",int_l_reccount,p_client_passed);
		APL_GOBACK_FAIL
	}

	EXEC SQL select REG_BR_IND into :chr_l_regbrind_a:l_i_regbrind from MT_INSTRUMENT
	where instr_code = :chr_l_instrcode_a ;
	IS_ANY_ORA_ERROR

	if( sqlca.sqlcode )
	{
		fprintf(p_ptr_log_file,"Record No. %d RegBrind Not Found For Instrurity = %s\n",int_l_reccount,chr_l_instrcode_a);
		APL_GOBACK_FAIL
	}

	EXEC SQL SELECT CLN_REG_SETL_IND into :chr_l_remote_instructing FROM MT_CLIENT
   WHERE CLN_CODE=:p_client_passed;
	IS_ANY_ORA_ERROR

	fprintf(p_ptr_log_file,"p_account_passed=(%s),chr_l_remote_instructing=(%s)\n",p_client_passed,chr_l_remote_instructing);
   fflush(p_ptr_log_file);

	

	strcpy(l_sys_dl_deal_struct_hf->h_dl_client	,p_client_passed);
	strcpy(l_sys_dl_deal_struct_hf->h_dlt		,chr_l_tradedt);
	strcpy(l_sys_dl_deal_struct_hf->h_setldt,chr_l_settledate);
	strcpy(l_sys_dl_deal_struct_hf->h_instr_code	,chr_l_instrcode_a);
	strcpy(l_sys_dl_deal_struct_hf->h_domcpclt_cd	,int_l_domcpac);

	strcpy(l_sys_dl_deal_struct_hf->h_related_indentity_no	,chr_l_alphano);
	l_sys_dl_deal_struct_hf->h_pr		=	l_cost;
	l_sys_dl_deal_struct_hf->h_amt	=	dbl_l_amount_a;       
	l_sys_dl_deal_struct_hf->h_qty		=	l_quantity;
   l_sys_dl_deal_struct_hf->h_stx_comm	=	0;
	l_sys_dl_deal_struct_hf->h_oth_comm	=	0;
	l_sys_dl_deal_struct_hf->h_diffamount	=	0;
	l_sys_dl_deal_struct_hf->h_fx_rt	=	0;
	l_sys_dl_deal_struct_hf->h_rec_int_000=	0;

	strcpy(l_sys_dl_deal_struct_hf->h_currencycode			,chr_l_ccy);
	strcpy(l_sys_dl_deal_struct_hf->h_entry		,"S") ; 

	EXEC SQL SELECT FIELD_VAL into :chr_l_grlocn:l_i_grlocn from PRO_GSSPLVAL
	where MAIN_FUN = 'TRADE_MAINT' and SUB_PROCESS = 'GROSS_AMT_LOCATION' 
			and FIELD_VAL=:l_sys_dl_deal_struct_hf->h_loccode;
	IS_ANY_ORA_ERROR 

	chr_l_chr=chr_l_transtype[0];

	EXEC SQL SELECT ASCII(:chr_l_chr) into :int_l_int_type FROM DUAL;
	IS_ANY_ORA_ERROR

 

     if( (int_l_int_type==65) || (int_l_int_type==193) )
			strcpy(l_sys_dl_deal_struct_hf->h_dealcd,APL_DEAL_RVP);
     else if( (int_l_int_type==208) || (int_l_int_type==227) )
			strcpy(l_sys_dl_deal_struct_hf->h_dealcd,APL_DEAL_DVP);
	  else
	  {
		fprintf(l_err_file,"Record No. %d Invalid Transaction Type\n",int_l_reccount);
		continue;
	  }


		EXEC SQL SELECT CLN_CODE INTO :int_l_domcpac FROM MT_CLIENT WHERE CLN_BRK_CD='XATHGRA1';
		IS_ANY_ORA_ERROR
	
		if( sqlca.sqlcode )
		{
			fprintf(l_err_file,"Record No. %d Account having BIC Code XATHGRA1 Not Found\n",int_l_reccount);
			fprintf(p_ptr_log_file,"Account having BIC Code XATHGRA1 Not Found in System\n");
			fprintf(p_ptr_log_file,"Exiting Upload Function\n");
			continue;
		}

	strcpy(l_sys_dl_deal_struct_hf->h_lrdltype		,APL_NULL_STRING); 

	strcpy(l_sys_dl_deal_struct_hf->h_dlfromord		,APL_NO_IND);
	strcpy(l_sys_dl_deal_struct_hf->h_brkrno		,MS_SWIFT_BOGNO_0731);
	strcpy(l_sys_dl_deal_struct_hf->h_newdt			,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_maker_dt			,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_checker_dt		,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_access_stamp	,chr_l_systemdatetime);
	strcpy(l_sys_dl_deal_struct_hf->h_maker			,chr_l_userid);
	strcpy(l_sys_dl_deal_struct_hf->h_checker			,chr_l_userid);

	strcpy(l_sys_dl_deal_struct_hf->h_ex_arena			,"1");

	if( !strcmp(chr_l_regbrind_a,"RG") )
		strcpy(l_sys_dl_deal_struct_hf->h_reginstr_ind	,"Y");
	else
		strcpy(l_sys_dl_deal_struct_hf->h_reginstr_ind	,"N");

	strcpy(l_sys_dl_deal_struct_hf->h_ispymtlocal		,APL_NO_IND);

	strcpy(p_intl_env_data_struct_h_e->h_mode						,APL_FUNC_INPUT);
	strcpy(p_intl_env_data_struct_h_e->h_process					,"I"); 
	strcpy(l_sys_dl_deal_struct_hf->h_locindentity_no		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_origindentity_no		,APL_NULL_STRING);

	l_sys_dl_deal_struct_hf->h_origquantity = l_quantity ;
	l_sys_dl_deal_struct_hf->h_origamount = dbl_l_amount_a ;

	strcpy(l_sys_dl_deal_struct_hf->h_reapired_ind		,APL_NO_IND);
	strcpy(l_sys_dl_deal_struct_hf->h_countclt		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_countcltnm		,APL_NULL_STRING);

	strcpy(l_sys_dl_deal_struct_hf->h_custinfo		,APL_NULL_STRING);
		
	strcpy(l_sys_dl_deal_struct_hf->h_deal_status	,STATUS_AUTH);
	strcpy(l_sys_dl_deal_struct_hf->h_confdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_cash_client	,chr_l_glclient);
	l_sys_dl_deal_struct_hf->h_brokercomm  =  0; 
 
	if( strlen(chr_l_fxreqd) )
	{
		if( !strcmp(chr_l_transtype,"A") )
			strcpy(l_sys_dl_deal_struct_hf->h_fx_reqd	,chr_l_fxpurchflg);
		else
			strcpy(l_sys_dl_deal_struct_hf->h_fx_reqd	,chr_l_fxsalesflg);
	}
	else
			strcpy(l_sys_dl_deal_struct_hf->h_fx_reqd	,"N");

	strcpy(l_sys_dl_deal_struct_hf->h_isspotdl		,APL_NO_IND);
	strcpy(l_sys_dl_deal_struct_hf->h_domcp_custodyclt		,int_l_domcpac);

	strcpy(l_sys_dl_deal_struct_hf->h_instrdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_moneydate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_status_reg		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_info1			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_moneydate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_countclt		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_countcltnm		,APL_NULL_STRING);
	
   strcpy(l_sys_dl_deal_struct_hf->h_custinfo		,APL_NULL_STRING);

	strcpy(l_sys_dl_deal_struct_hf->h_fail_cd		,"90");
	strcpy(l_sys_dl_deal_struct_hf->h_failinfo		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_fx_rt=0;
	l_sys_dl_deal_struct_hf->h_amend_count=0;
	l_sys_dl_deal_struct_hf->h_number_a=0;
	strcpy(l_sys_dl_deal_struct_hf->h_report_at_eom_ind		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_billdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_locindentity_no		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_instruct_person		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_rec_int_000=0;
	strcpy(l_sys_dl_deal_struct_hf->h_pos_stat	,APL_NULL_STRING);

	strcpy(l_sys_dl_deal_struct_hf->h_status_reg		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_matchindentity_no		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_markfaildate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_candropdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_instrconv_ind		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_ndsbldate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_ndsdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_ublckdate			,APL_NULL_STRING);

   l_sys_dl_deal_struct_hf->h_delta_000=0;
	l_sys_dl_deal_struct_hf->h_delta_001=0;
	l_sys_dl_deal_struct_hf->h_delta_002=0;
	strcpy(l_sys_dl_deal_struct_hf->h_delrecdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lastregdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_chkdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_confdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_instrdate		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_regmsgquantity=0;
	strcpy(l_sys_dl_deal_struct_hf->h_tmpoutdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_tmpretdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_transmitdate		,APL_NULL_STRING);

	l_sys_dl_deal_struct_hf->h_complquantity		= 0;
	l_sys_dl_deal_struct_hf->h_lostquantity		= 0;
	l_sys_dl_deal_struct_hf->h_marktrfquantity	= 0;
	l_sys_dl_deal_struct_hf->h_mcomplquantity	= 0;
	l_sys_dl_deal_struct_hf->h_outregquantity	= 0;
	l_sys_dl_deal_struct_hf->h_pendregquantity	= 0;
	l_sys_dl_deal_struct_hf->h_retregquantity	= 0;
	l_sys_dl_deal_struct_hf->h_stampquantity		= 0;
	l_sys_dl_deal_struct_hf->h_tempoutquantity	= 0;
	l_sys_dl_deal_struct_hf->h_tempretquantity	= 0;
	l_sys_dl_deal_struct_hf->h_valdeedquantity	= 0;
	strcpy(l_sys_dl_deal_struct_hf->h_hostdate			,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_ndsbldate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_ndsdate		,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_lr_ublckdate		,APL_NULL_STRING);
	l_sys_dl_deal_struct_hf->h_number_b=0;
	
	strcpy(l_sys_dl_deal_struct_hf->h_clt_reqdel_flag,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_mod_hispos_ind	,APL_NULL_STRING);
	strcpy(l_sys_dl_deal_struct_hf->h_updhispos_date	,APL_NULL_STRING);
	
	strcpy(l_sys_dl_deal_struct_hf->h_locchng_flg	,"N");
	strcpy(l_sys_dl_deal_struct_hf->h_instruct_personnm,		APL_NULL_STRING);
          
	strcpy(l_sys_dl_deal_struct_hf->h_countclt,"");
   strcpy(l_sys_dl_deal_struct_hf->h_domcpclt_cd,int_l_domcpac);

 if (!strcmp(p_intl_env_data_struct_h_e->h_mode,APL_FUNC_INPUT))
	strcpy(l_sys_dl_deal_struct_hf->h_allow_part_s,"N");

      
     if ( strcmp(chr_l_client_a,p_client_passed) == 0 )
     {
          strcpy(l_sys_dl_deal_struct_hf->h_classofdl,"50"); 
          strcpy(l_sys_dl_deal_struct_hf->h_clientof,""); 
			 strcpy(l_sys_dl_deal_struct_hf->h_loccode,"REM");
     }
     else
     {
          strcpy(l_sys_dl_deal_struct_hf->h_classofdl,"35"); 
			 strcpy(l_sys_dl_deal_struct_hf->h_loccode,chr_l_locncode_c);
           

          strcpy(l_sys_dl_deal_struct_hf->h_clientofcode,chr_l_client_a); 
     }
 strcpy(chr_l_refno_a,"RM");
 strcat(chr_l_refno_a,chr_l_trade_date);
 strcat(chr_l_refno_a,chr_l_alphano);
 strcpy(l_sys_dl_deal_struct_hf->h_indentity_no,chr_l_refno_a);
 fprintf(p_ptr_log_file,"Ref no. = (%s)\n",chr_l_refno_a);
 fprintf(p_ptr_log_file,"Related Ref no. = (%s)\n",chr_l_alphano);
 fflush(p_ptr_log_file);

 CO_FreeErrLst(l_debug_info_ptr);

 if(strcmp(chr_l_remote_instructing,"Y") == 0 ) 
 {
 	fprintf(p_ptr_log_file,"Remote Instructing is Y\n");
 	fflush(p_ptr_log_file);

	fprintf(p_ptr_log_file,"l_account=(%s),chr_l_instrcode_a=(%s),chr_l_settledate=(%s),chr_l_tradedt=(%s),chr_l_alphano=(%s),l_quantity=(%lf)\n",chr_l_client_a,chr_l_instrcode_a,chr_l_settledate,chr_l_tradedt,chr_l_alphano,l_quantity);
 	fflush(p_ptr_log_file);

		EXEC SQL SELECT count(*) into :int_l_count_trade from dl_deal 
		where client=:p_client_passed and instr_code=:chr_l_instrcode_a
      and setl_date=:chr_l_settledate and deal_date=:chr_l_tradedt and RELATED_IDENT_NO=:chr_l_alphano and QTY=:l_quantity;
		IS_ANY_ORA_ERROR
		
		if( int_l_count_trade != 1 )
		{
			strcpy(chr_l_reason,"Unique Trade Not Found");
  			fprintf(l_err_file,"Record No. %d Matching Trade Not Found : Account : %s Refno : %s  %s\n",int_l_reccount,p_client_passed,chr_l_alphano,chr_l_reason);
 			fflush(p_ptr_log_file);
 			fflush(l_err_file);
		}
		else
		{
			EXEC SQL SELECT CLN_TOLERANCE INTO :l_tolerance FROM MT_CLIENT WHERE CLN_CODE=:p_client_passed ; 
			IS_ANY_ORA_ERROR

			EXEC SQL SELECT AMOUNT , IDENTIY_NO , QTY into :l_trd_amount, :chr_l_smacrefno , :l_smacquantity from dl_deal 
			where client=:p_client_passed and instr_code=:chr_l_instrcode_a
			and setl_date=:chr_l_settledate and deal_date=:chr_l_tradedt and RELATED_IDENT_NO=:chr_l_alphano and QTY=:l_quantity ;
			IS_ANY_ORA_ERROR

			fprintf(p_ptr_log_file,"l_amount=(%lf),l_trd_amount=(%lf),l_tolerance=(%lf)\n",dbl_l_amount_a,l_trd_amount,l_tolerance);

			if( ( dbl_l_amount_a < (l_trd_amount + l_tolerance) ) && ( dbl_l_amount_a > (l_trd_amount - l_tolerance) ) )
			{

			EXEC SQL update dl_deal set AMOUNT=:dbl_l_amount_a 
			where client=:p_client_passed and instr_code=:chr_l_instrcode_a
      	and setl_date=:chr_l_settledate and deal_date=:chr_l_tradedt and RELATED_IDENT_NO=:chr_l_alphano and QTY=:l_quantity;
			IS_ANY_ORA_ERROR

			
      	if ( APL_FAILURE ==  DL_Mod_CCSPendDL(p_client_passed,
                                             chr_l_smacrefno,
                                             MS_CCS_T4,
                                             APL_NULL_STRING,
                                             APL_NULL_STRING,
                                             APL_NULL_STRING,
                                             &l_debug_info_ptr) )
      	{
         	APL_GOBACK_FAIL
      	}

			fprintf(p_ptr_log_file,"Trade updated with the amount in the SAT h_file\n");
 			fflush(p_ptr_log_file);

			memset(&l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
		   strcpy(l_dl_dealaudit_struct_h.h_dl_client, p_client_passed);
         strcpy(l_dl_dealaudit_struct_h.h_indentity_no, chr_l_smacrefno);
         strcpy(l_dl_dealaudit_struct_h.h_trail_for, "T");
         strcpy(l_dl_dealaudit_struct_h.h_processdetail, "SAT File Upload - Amount Updation");
         strcpy(l_dl_dealaudit_struct_h.h_proc_usr, chr_l_userid );
         strcpy(l_dl_dealaudit_struct_h.h_subprocess, APL_NULL_STRING);
         strcpy(l_dl_dealaudit_struct_h.h_logdate, APL_NULL_STRING);
         strcpy(l_dl_dealaudit_struct_h.h_fail_cd, "");
         l_dl_dealaudit_struct_h.h_qty = l_smacquantity;
         strcpy(l_dl_dealaudit_struct_h.h_dlfromord, "N");

         if (APL_FAILURE == CR_Mod_CLHAudTrail(&l_dl_dealaudit_struct_h, l_debug_info_ptr))
         {
           fprintf(p_ptr_log_file,"Failed Updating Audit %d\n",sqlca.sqlcode);
           APL_GOBACK_FAIL
         }
         fprintf(p_ptr_log_file,"Trade & Audit Trail Updated");

			}
			else
			{
			strcpy(chr_l_note,"TRADE BOOKED IN MRKT VS ");
			strcat(chr_l_note,chr_l_str_amount1);

			EXEC SQL update dl_deal set failreason_cd='21', client_note=:chr_l_note , sub_fail_cd=0
			where client=:p_client_passed and instr_code=:chr_l_instrcode_a
      	and setl_date=:chr_l_settledate and deal_date=:chr_l_tradedt and RELATED_IDENT_NO=:chr_l_alphano and QTY=:l_quantity;
			IS_ANY_ORA_ERROR

			fprintf(p_ptr_log_file,"Trade fail coded to 21\n");
 			fflush(p_ptr_log_file);

			memset(&l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
		   strcpy(l_dl_dealaudit_struct_h.h_dl_client, p_client_passed);
         strcpy(l_dl_dealaudit_struct_h.h_indentity_no, chr_l_smacrefno);
         strcpy(l_dl_dealaudit_struct_h.h_trail_for, "T");
         strcpy(l_dl_dealaudit_struct_h.h_processdetail, "SAT File Upload - Update Fail Reason");
         strcpy(l_dl_dealaudit_struct_h.h_proc_usr, chr_l_userid );
         strcpy(l_dl_dealaudit_struct_h.h_subprocess, APL_NULL_STRING);
         strcpy(l_dl_dealaudit_struct_h.h_logdate, APL_NULL_STRING);
         strcpy(l_dl_dealaudit_struct_h.h_fail_cd, "21");
         l_dl_dealaudit_struct_h.h_subfailreas_cd = 0;
         l_dl_dealaudit_struct_h.h_qty = l_smacquantity;
         strcpy(l_dl_dealaudit_struct_h.h_dlfromord, "N");

         if (APL_FAILURE == CR_Mod_CLHAudTrail(&l_dl_dealaudit_struct_h, l_debug_info_ptr))
         {
           fprintf(p_ptr_log_file,"Failed Updating Audit %d\n",sqlca.sqlcode);
           APL_GOBACK_FAIL
         }
         fprintf(p_ptr_log_file,"Trade & Audit Trail Updated");
           if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                                             chr_l_smacrefno,
                                             p_client_passed,
                                             'Y',
                                             APL_NULL_STRING,
                                             l_debug_info_ptr ) )
           {
             fprintf(p_ptr_log_file,"Failed To Insert into IMSGENT table\n");
             APL_GOBACK_FAIL
           }

			}
 		

         if (sqlca.sqlcode == 0)
         {

           if (APL_FAILURE==EI_Mod_MQData(p_client_passed,
                                        chr_l_smacrefno,
                                        NULL,
                                        NULL,
                                        "B",
                                        l_debug_info_ptr))
           {
             fprintf(p_ptr_log_file,"Failed To Insert into MQ Datawarehouse table\n");
             APL_GOBACK_FAIL
           }

	     }	

		}
  }
  else
  { 
 	fprintf(p_ptr_log_file,"About to call CBGenTrdFn\n");
 	fflush(p_ptr_log_file);

 	int_l_retval = DL_Proc_Trd(l_sys_dl_deal_struct_hf,&int_l_rpr_seq_num,p_intl_env_data_struct_h_e,l_debug_info_ptr);

 	if(int_l_retval == APL_FAILURE)
 	{
 		
  		IS_ANY_ERROR_FATAL
  		IS_ANY_ORA_ERROR
  		memset(chr_l_buf, NULL,BUFFER_LEN);
  		sprintf(chr_l_buf, "CREATE TRADE FAILED : Account : %s Refno : %s\n", p_client_passed,chr_l_refno_a) ;
  		CO_ProcMonitor(p_ptr_log_file, chr_l_buf, l_debug_info_ptr, p_intl_env_data_struct_h_e);
 		fflush(p_ptr_log_file);
  		memset(chr_l_reason,NULL,REASON_LEN);
  		strcpy(chr_l_reason,(*l_debug_info_ptr)->msg);
  		fprintf(l_err_file,"Record No. %d Create Trade Failed : Account : %s Refno : %s  %s\n",int_l_reccount,p_client_passed,chr_l_refno_a,chr_l_reason);
 		fflush(l_err_file);
  		CO_FreeErrLst(l_debug_info_ptr);
 }
 else if(int_l_retval == APL_SUCCESS)
 {
		memset(chr_l_buf, NULL,BUFFER_LEN);
		sprintf(chr_l_buf, "\nCREATED TRADE SUCCESSFULLY : Account : %s Refno : %s\n", p_client_passed,chr_l_refno_a) ;
   	CO_ProcMonitor(p_ptr_log_file, chr_l_buf, NULL,NULL);
   	

			memset(&l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
		   strcpy(l_dl_dealaudit_struct_h.h_dl_client, p_client_passed);
         strcpy(l_dl_dealaudit_struct_h.h_indentity_no, chr_l_refno_a);
         strcpy(l_dl_dealaudit_struct_h.h_trail_for, "T");
         strcpy(l_dl_dealaudit_struct_h.h_processdetail, "SAT File Upload - Trade Creation");
         strcpy(l_dl_dealaudit_struct_h.h_proc_usr, chr_l_userid );
         strcpy(l_dl_dealaudit_struct_h.h_subprocess, APL_NULL_STRING);
         strcpy(l_dl_dealaudit_struct_h.h_logdate, APL_NULL_STRING);
         strcpy(l_dl_dealaudit_struct_h.h_fail_cd, "");
         l_dl_dealaudit_struct_h.h_qty = l_quantity;
         strcpy(l_dl_dealaudit_struct_h.h_dlfromord, "N");

         if (APL_FAILURE == CR_Mod_CLHAudTrail(&l_dl_dealaudit_struct_h, l_debug_info_ptr))
         {
           fprintf(p_ptr_log_file,"Failed Updating Audit %d\n",sqlca.sqlcode);
           APL_GOBACK_FAIL
         }
         fprintf(p_ptr_log_file,"Trade & Audit Trail Updated");

			  fprintf(p_ptr_log_file,"Inserting into IMSGENT table\n");
			  fflush(p_ptr_log_file);
           if ( APL_FAILURE == GBDbInsIMSGENT( MS_MSGNO_534,
                                             chr_l_refno_a,
                                             p_client_passed,
                                             'Y',
                                             APL_NULL_STRING,
                                             l_debug_info_ptr ) )
           {
             fprintf(p_ptr_log_file,"Failed To Insert into IMSGENT table\n");
			    fflush(p_ptr_log_file);
             APL_GOBACK_FAIL
           }

         if (APL_FAILURE==EI_Mod_MQData(l_sys_dl_deal_struct_hf->h_dl_client,
                                        l_sys_dl_deal_struct_hf->h_indentity_no,
                                        NULL,
                                        NULL,
                                        "B",
                                        l_debug_info_ptr))
               APL_GOBACK_FAIL

  		

 }
 }
 }

 APL_GOBACK_SUCCESS
 
 RETURN_SUCCESS :
 {
  CO_ProcMonitor(p_ptr_log_file,"Leaving processtion Uplremotetrdfn_forTrade successfully\n",NULL,NULL);
  CO_FreeErrLst(l_debug_info_ptr);
  APL_FREE(l_sys_dl_deal_struct_hf);
  APL_FREE(l_intl_rept_struct_ha);
  fclose(l_err_file);
  fclose(l_upl_file);
  return(APL_SUCCESS);
 }

 RETURN_FAILURE :
 {
   CO_ProcMonitor(p_ptr_log_file,"Leaving processtion Uplremotetrdfn_forTrade with failure\n",l_debug_info_ptr,NULL);
	CO_FreeErrLst(l_debug_info_ptr);
   APL_FREE(l_sys_dl_deal_struct_hf);
	APL_FREE(l_intl_rept_struct_ha);
   fclose(l_err_file);
   fclose(l_upl_file);
	return(APL_FAILURE);
 }

}



int str_split_fn(char *instr, char *retstr, int pfrom, int pto, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int i=0,j=0;
	char chr_l_tempstr[20] 	= APL_NULL_STRING ;
	char chr_l_lstring[20]  	= APL_NULL_STRING ;
	char chr_l_rstring[20]  	= APL_NULL_STRING ;

	memset(chr_l_tempstr,APL_NULL_CHAR,20);
	memset(chr_l_lstring,APL_NULL_CHAR,20);
	memset(chr_l_rstring,APL_NULL_CHAR,20);

	for(i=pfrom - 1;i<pto;i++,j++)
	{
		chr_l_tempstr[j]=instr[i];
	}

	chr_l_tempstr[j]='\0';

	if( strlen(chr_l_tempstr) )
	{
		if( APL_FAILURE == CO_Trim(chr_l_tempstr,' ','L',chr_l_lstring,l_debug_info_ptr) )
			return(APL_FAILURE);

		if(strlen(chr_l_lstring))
		{	
			if( APL_FAILURE == CO_Trim(chr_l_lstring,' ','R',chr_l_rstring,l_debug_info_ptr) )
				return(APL_FAILURE);
			strcpy(retstr,chr_l_rstring);
		}
		else
		{
			strcpy(retstr,chr_l_lstring);
		}
	}
	else
	{
		strcpy(retstr,chr_l_tempstr);
	}
	return(APL_SUCCESS);
}




int genrmtfilename(char *p_newname,char *p_oldname,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char chr_l_now[APL_DATE_LEN]  		= APL_NULL_STRING ;
	char chr_l_tnow[APL_DATE_LEN] 		= APL_NULL_STRING ;
	char chr_l_sjdate[4] 					= APL_NULL_STRING ;
	char chr_l_itime[8]               = APL_NULL_STRING ;
	int  int_l_jdate = 0 ;
	int  i = 0 , j = 0 ;

	strcpy(p_newname,p_oldname);

	if (APL_FAILURE == CO_RtvSysDtTime(	chr_l_now,
															l_debug_info_ptr ))
	{
		return(APL_FAILURE);
	}

	

	strcpy(chr_l_tnow, chr_l_now);

	chr_l_tnow[0] = '0';
	chr_l_tnow[1] = '1';
	chr_l_tnow[3] = '0';
	chr_l_tnow[4] = '1';

	if (APL_FAILURE == CO_Pro_DateComp(	chr_l_tnow,
												chr_l_now,
												&int_l_jdate,
												l_debug_info_ptr ))
	{
		return(APL_FAILURE);
	}

	if (int_l_jdate < 10)
	{
		sprintf(chr_l_sjdate, "00%d", int_l_jdate);
	}
	else if (int_l_jdate < 100)
	{
		sprintf(chr_l_sjdate, "0%d", int_l_jdate);
	}
	else
	{
		sprintf(chr_l_sjdate, "%d", int_l_jdate);
	}

	strcat(p_newname, chr_l_sjdate);

	

	for (	i=11,j=0; j<9; )
	{	 
		if (chr_l_now[i++] != ':') chr_l_itime[j++] = chr_l_now[i-1];
		if (j==3) chr_l_itime[j++] = '.';
	}
	
	strcat(p_newname,chr_l_itime);

	return(APL_SUCCESS);

}

