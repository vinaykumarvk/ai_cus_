


   
   
   
   
   
   
   
   
   
   
   
   





#include "CO_HostStructdef.h"
EXEC SQL INCLUDE SQLCA;





int CR_Mod_AE( MT_CLIENT_ENTRIES_STRUCT_H    *p_mt_client_entries_struct_h_a,
                 INTL_ENV_DATA_STRUCT_H      *p_intl_env_data_struct_h_e,
                 DEBUG_INFO_STRUCT_H            **l_debug_info_ptr
               )
{

  

	struct sqlca            sqlca;
	MT_CLIENT_ENTRIES_STRUCT_I    *l_mt_client_entries_struct_i = NULL;

	int   int_h_count = 0;

	char  chr_access_stamp_time[APL_DATE_LEN] = APL_NULL_STRING;
	char  chr_acc_stamp_compare[APL_DATE_LEN] = APL_NULL_STRING;


	char  chr_accent_ise[APL_MAINFUNCAREA_LEN]    =  "ACCENTRY_ISE";
	char  chr_accent_bnk[APL_MAINFUNCAREA_LEN]    =  "ACCENTRY_BNK";
	char  chr_accent_sndry[APL_MAINFUNCAREA_LEN]  =  "ACCENTRY_SNDRY";
	char  chr_iseclient[APL_CONDID_LEN]          =  "ISE_ACCOUNT";
	char  chr_bankaccount[APL_CONDID_LEN]         =  "BANK_ACCOUNT";
	char  chr_sundryaccount[APL_CONDID_LEN]       =  "SUNDRY_ACCOUNT";
	char	chr_stlclient[APL_CONDID_LEN]				=	"STL_ACCOUNT";

	short CondExistsRU = 0;
	short CondExistsPO = 0;
	short CondExistsCZ = 0;
	short CondExistsGR = 0;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif


   sqlca.sqlcode = 0;


   APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Entering processtion CDBUpdAenFn",NULL,p_intl_env_data_struct_h_e);
		}


	l_mt_client_entries_struct_i = (MT_CLIENT_ENTRIES_STRUCT_I *)calloc(1,sizeof(MT_CLIENT_ENTRIES_STRUCT_I));


 


	

	if(APL_SUCCESS == CO_Chk_CntryEnabled(chr_accent_ise,chr_iseclient,
												   &CondExistsRU,l_debug_info_ptr))
	{
		if(CondExistsRU !=0 )
		{
			if(!strlen(p_mt_client_entries_struct_h_a->h_stx_client))
			APL_DATA_MISSING("ISE Account", APL_NULL_STRING, APL_NULL_STRING)

			if(!strlen(p_mt_client_entries_struct_h_a->h_commn_client))
			APL_DATA_MISSING("Commn. Account", APL_NULL_STRING, APL_NULL_STRING)

			if(!strlen(p_mt_client_entries_struct_h_a->h_tpymt_client))
			APL_DATA_MISSING("Tax Payable A/C", APL_NULL_STRING, APL_NULL_STRING)

			if(!strlen(p_mt_client_entries_struct_h_a->h_texp_client))
			APL_DATA_MISSING("Tax Expense A/C", APL_NULL_STRING, APL_NULL_STRING)
		}
	}

	

	if(APL_SUCCESS == CO_Chk_CntryEnabled(chr_accent_bnk,chr_bankaccount,
													&CondExistsPO,l_debug_info_ptr))
	{
		if(CondExistsPO !=0 )
		{
			if(!strlen(p_mt_client_entries_struct_h_a->h_bnk_client))
			APL_DATA_MISSING("Bank Account", APL_NULL_STRING, APL_NULL_STRING)

			if(!strlen(p_mt_client_entries_struct_h_a->h_commn_client))
			APL_DATA_MISSING("Commn. Account", APL_NULL_STRING, APL_NULL_STRING)
		}
	}

	

	if(APL_SUCCESS == CO_Chk_CntryEnabled(chr_accent_sndry,chr_sundryaccount,
													&CondExistsCZ,l_debug_info_ptr))
	{
		if(CondExistsCZ !=0 )
		{
			if(!strlen(p_mt_client_entries_struct_h_a->h_bnk_client))
			APL_DATA_MISSING("First Sundry A/C", APL_NULL_STRING, APL_NULL_STRING)

			if(!strlen(p_mt_client_entries_struct_h_a->h_commn_client))
			APL_DATA_MISSING("Instrond Sundry A/C", APL_NULL_STRING, APL_NULL_STRING)
		}
	}

	

	if(APL_SUCCESS == CO_Chk_CntryEnabled(chr_accent_ise,chr_stlclient,
													&CondExistsGR,l_debug_info_ptr))
	{
		if(CondExistsGR !=0 )
		{
			if(!strlen(p_mt_client_entries_struct_h_a->h_stx_client))
			APL_DATA_MISSING("Settlement  A/C", APL_NULL_STRING, APL_NULL_STRING)
		}
	}


  	EXEC SQL SELECT NVL(COUNT(*),0) into :int_h_count from MT_CLIENT_ENTRIES;

	IS_ANY_ORA_ERROR


	if(int_h_count != 0)
	{
			if(!strlen(p_mt_client_entries_struct_h_a->h_access_stamp))
      	APL_DATA_MISSING("Access Stamp", APL_NULL_STRING, APL_NULL_STRING)
	}

	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
   APL_GOBACK_FAIL


 


		EXEC SQL SELECT NVL(COUNT(*),0) into :int_h_count from MT_CLIENT_ENTRIES;

		IS_ANY_ORA_ERROR


		

		if(CO_RtvSysDtTime(chr_access_stamp_time, l_debug_info_ptr) != APL_SUCCESS)
		{
			APL_GOBACK_FAIL
		}


		if (int_h_count == 0)
		{
   			strcpy(p_mt_client_entries_struct_h_a->h_access_stamp, chr_access_stamp_time);
				strcpy(p_mt_client_entries_struct_h_a->h_maker_dt, chr_access_stamp_time);
				strcpy(p_mt_client_entries_struct_h_a->h_maker, p_intl_env_data_struct_h_e->usr);  


					


					if(CondExistsRU !=0 )      
					{
						l_mt_client_entries_struct_i->i_bnk_client = -1;
						l_mt_client_entries_struct_i->i_stx_client = 0;
						l_mt_client_entries_struct_i->i_commn_client = 0;
						l_mt_client_entries_struct_i->i_tpymt_client = 0; 
						l_mt_client_entries_struct_i->i_texp_client = 0;
						l_mt_client_entries_struct_i->i_maker = 0;
						l_mt_client_entries_struct_i->i_maker_dt = 0;
						l_mt_client_entries_struct_i->i_access_stamp = 0;

  						EXEC SQL INSERT INTO MT_CLIENT_ENTRIES
							VALUES  (:p_mt_client_entries_struct_h_a:l_mt_client_entries_struct_i);

						IS_ANY_ORA_ERROR

						APL_GOBACK_SUCCESS
					}


					


					if((CondExistsPO !=0) || (CondExistsCZ !=0 ))
					{
						l_mt_client_entries_struct_i->i_bnk_client = 0;
        			   l_mt_client_entries_struct_i->i_commn_client = 0;
        			   l_mt_client_entries_struct_i->i_stx_client = -1;
           		 	l_mt_client_entries_struct_i->i_tpymt_client = -1;
           		 	l_mt_client_entries_struct_i->i_texp_client = -1;
						l_mt_client_entries_struct_i->i_maker = 0;
						l_mt_client_entries_struct_i->i_maker_dt = 0;
						l_mt_client_entries_struct_i->i_access_stamp = 0;

        		    	EXEC SQL INSERT INTO MT_CLIENT_ENTRIES
        	      		VALUES  (:p_mt_client_entries_struct_h_a:l_mt_client_entries_struct_i);
					
						IS_ANY_ORA_ERROR

						APL_GOBACK_SUCCESS
					}


					


					if(CondExistsGR != 0)
					{
						l_mt_client_entries_struct_i->i_bnk_client = -1;
						l_mt_client_entries_struct_i->i_commn_client = -1;
						l_mt_client_entries_struct_i->i_stx_client = 0;
						l_mt_client_entries_struct_i->i_tpymt_client = -1;
						l_mt_client_entries_struct_i->i_texp_client = -1;
						l_mt_client_entries_struct_i->i_maker = 0;
						l_mt_client_entries_struct_i->i_maker_dt = 0;
						l_mt_client_entries_struct_i->i_access_stamp = 0;
						
						EXEC SQL INSERT INTO MT_CLIENT_ENTRIES
							VALUES  (:p_mt_client_entries_struct_h_a:l_mt_client_entries_struct_i);

						IS_ANY_ORA_ERROR
						
						APL_GOBACK_SUCCESS

					}
			}

			else       

			{
					EXEC SQL SELECT ACCESS_STAMP 
						INTO :chr_acc_stamp_compare
						FROM MT_CLIENT_ENTRIES;

					IS_ANY_ORA_ERROR


					if(!strcmp(p_mt_client_entries_struct_h_a->h_access_stamp,chr_acc_stamp_compare))
					{
   						strcpy(p_mt_client_entries_struct_h_a->h_access_stamp, chr_access_stamp_time);
							strcpy(p_mt_client_entries_struct_h_a->h_maker_dt, chr_access_stamp_time);
							strcpy(p_mt_client_entries_struct_h_a->h_maker, p_intl_env_data_struct_h_e->usr); 


								


								if(CondExistsRU !=0 ) 
								{
                  			l_mt_client_entries_struct_i->i_bnk_client = -1;
                  			l_mt_client_entries_struct_i->i_stx_client = 0;
                  			l_mt_client_entries_struct_i->i_commn_client = 0;
                  			l_mt_client_entries_struct_i->i_tpymt_client = 0;
                  			l_mt_client_entries_struct_i->i_texp_client = 0;
                  			l_mt_client_entries_struct_i->i_maker = 0;
                  			l_mt_client_entries_struct_i->i_maker_dt = 0;
                  			l_mt_client_entries_struct_i->i_access_stamp = 0;


  		   						EXEC SQL UPDATE MT_CLIENT_ENTRIES SET
				  						STX_CLIENT = :p_mt_client_entries_struct_h_a->h_stx_client:l_mt_client_entries_struct_i->i_stx_client,
				  						COMM_CLT = :p_mt_client_entries_struct_h_a->h_commn_client:l_mt_client_entries_struct_i->i_commn_client,
							 			TPAY_CLIENT = :p_mt_client_entries_struct_h_a->h_tpymt_client:l_mt_client_entries_struct_i->i_tpymt_client,
							 			TEXP_CLIENT = :p_mt_client_entries_struct_h_a->h_texp_client:l_mt_client_entries_struct_i->i_texp_client,
					  		  			CUSTODY_CLT = :p_mt_client_entries_struct_h_a->h_bnk_client:l_mt_client_entries_struct_i->i_bnk_client,	
							 			ACCESS_STAMP = :p_mt_client_entries_struct_h_a->h_access_stamp:l_mt_client_entries_struct_i->i_access_stamp,
							 			MAKER = :p_mt_client_entries_struct_h_a->h_maker:l_mt_client_entries_struct_i->i_maker,
							 			MAKER_DT = :p_mt_client_entries_struct_h_a->h_maker_dt:l_mt_client_entries_struct_i->i_maker_dt;

									IS_ANY_ORA_ERROR

									APL_GOBACK_SUCCESS
								}


								


								if((CondExistsPO !=0) || (CondExistsCZ !=0 ))
								{
                  			l_mt_client_entries_struct_i->i_bnk_client = 0;
                  			l_mt_client_entries_struct_i->i_commn_client = 0;
                  			l_mt_client_entries_struct_i->i_stx_client = -1;
                  			l_mt_client_entries_struct_i->i_tpymt_client = -1;
                  			l_mt_client_entries_struct_i->i_texp_client = -1;
                  			l_mt_client_entries_struct_i->i_maker = 0;
                  			l_mt_client_entries_struct_i->i_maker_dt = 0;
                  			l_mt_client_entries_struct_i->i_access_stamp = 0;


    								EXEC SQL UPDATE MT_CLIENT_ENTRIES SET
										CUSTODY_CLT = :p_mt_client_entries_struct_h_a->h_bnk_client:l_mt_client_entries_struct_i->i_bnk_client,
							 			COMM_CLT = :p_mt_client_entries_struct_h_a->h_commn_client:l_mt_client_entries_struct_i->i_commn_client,
					  		  			STX_CLIENT  = :p_mt_client_entries_struct_h_a->h_stx_client:l_mt_client_entries_struct_i->i_stx_client,
					  		  			TPAY_CLIENT = :p_mt_client_entries_struct_h_a->h_tpymt_client:l_mt_client_entries_struct_i->i_tpymt_client,
					    				TEXP_CLIENT = :p_mt_client_entries_struct_h_a->h_texp_client:l_mt_client_entries_struct_i->i_texp_client,
						 				ACCESS_STAMP = :p_mt_client_entries_struct_h_a->h_access_stamp:l_mt_client_entries_struct_i->i_access_stamp,
						 				MAKER = :p_mt_client_entries_struct_h_a->h_maker:l_mt_client_entries_struct_i->i_maker,
						 				MAKER_DT = :p_mt_client_entries_struct_h_a->h_maker_dt:l_mt_client_entries_struct_i->i_maker_dt;

									IS_ANY_ORA_ERROR

									APL_GOBACK_SUCCESS
								}

								 
									
								if(CondExistsGR != 0)
								{
									l_mt_client_entries_struct_i->i_bnk_client = -1;
									l_mt_client_entries_struct_i->i_commn_client = -1;
									l_mt_client_entries_struct_i->i_stx_client = 0;
									l_mt_client_entries_struct_i->i_tpymt_client = -1;
									l_mt_client_entries_struct_i->i_texp_client = -1;
									l_mt_client_entries_struct_i->i_maker = 0;
									l_mt_client_entries_struct_i->i_maker_dt = 0;
									l_mt_client_entries_struct_i->i_access_stamp = 0;


									EXEC SQL UPDATE MT_CLIENT_ENTRIES SET
										CUSTODY_CLT = :p_mt_client_entries_struct_h_a->h_bnk_client:l_mt_client_entries_struct_i->i_bnk_client,
										COMM_CLT = :p_mt_client_entries_struct_h_a->h_commn_client:l_mt_client_entries_struct_i->i_commn_client,
										STX_CLIENT  = :p_mt_client_entries_struct_h_a->h_stx_client:l_mt_client_entries_struct_i->i_stx_client,
										TPAY_CLIENT = :p_mt_client_entries_struct_h_a->h_tpymt_client:l_mt_client_entries_struct_i->i_tpymt_client,
										TEXP_CLIENT = :p_mt_client_entries_struct_h_a->h_texp_client:l_mt_client_entries_struct_i->i_texp_client,
										ACCESS_STAMP = :p_mt_client_entries_struct_h_a->h_access_stamp:l_mt_client_entries_struct_i->i_access_stamp,
										MAKER = :p_mt_client_entries_struct_h_a->h_maker:l_mt_client_entries_struct_i->i_maker,
										MAKER_DT = :p_mt_client_entries_struct_h_a->h_maker_dt:l_mt_client_entries_struct_i->i_maker_dt;

									IS_ANY_ORA_ERROR

									APL_GOBACK_SUCCESS
								}

				}

				else    	  
				{
						CO_InsertErr
										(l_debug_info_ptr,
						 				 ERR_ACCESSSTAMP_CHGD,     
						 				 APL_NULL_STRING,
						 				 APL_NULL_STRING,
						 				 APL_NULL_STRING,
						 				 __LINE__,
						 				 __FILE__
										);

						APL_GOBACK_FAIL
				}

		}             





	if(APL_FAILURE == CO_ChkErr(*l_debug_info_ptr)) APL_GOBACK_SUCCESS
	else APL_GOBACK_FAIL


   RETURN_SUCCESS :
   {

   	APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting processtion CR_Mod_AE successfully",NULL,p_intl_env_data_struct_h_e);
		}
		APL_FREE(l_mt_client_entries_struct_i);
      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {

   	APL_IF_DEBUG
		{
			CO_ProcMonitor(APL_OUT_FILE,"Exiting processtion CR_Mod_AE with failure",NULL,p_intl_env_data_struct_h_e);
		}
		APL_FREE(l_mt_client_entries_struct_i);
      return(APL_FAILURE);
   }

}
