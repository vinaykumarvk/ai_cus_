/*
 **    COPYRIGHT NOTICE
 **
 **   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 **
 **   These materials are confidential and proprietary to
 **    Polaris Software Lab Limited and no part of these materials should
 **    be reproduced, published, transmitted or distributed in any form or
 **    by any means, electronic, mechanical, photocopying, recording or
 **    otherwise, or stored in any information storage or retrieval system
 **    of any nature nor should the materials be disclosed to third parties
 **    or used in any other manner for which this is not authorized, without
 **    the prior express written authorization of Polaris Software Lab Limited.
 **/
/*********************************************************************
 **
 ** Module Name         :      DEAL PROCESSING
 **
 ** File Name           :      DL_Upd_CDSLDpInst.pc
 **
 ** Description         :      
 **
 **
 **
 **            Version Control Block
 **
 ** Date        Version   Author          Description              RFS No.
 ** ---------   --------  --------------- ----------------------   ---------
 ** 15/05/2006   1.0      Amit Bhosale    New File                 HDFCDL_014
 ** -------------------------------------------------------------------------
 ** 09-Jun-2010 1.0.1.13   Naren V        NSDL DP Ins File Format  ISKB_3298
 **                                       Changes - Variable  Len
 **                                       changes were incorporat
 **                                       ed accordingly based on
 **                                       NSDL depository revised
 **                                       file formats.
 ****************************************************************************/


#include<stdio_64.h>
#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "DL_Interface.h"
#include "BT_Common.h"
#include "Intellect_Error.h"
#include "CO_IndStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int DL_Upd_CDSLDPInst(DL_UPDDPINST_STRUCT_H *p_dl_upddpinst_struct_h,INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/* Variable Declarations */
	
	int int_l_dpm_no=0;
	short i_dpm_no=0;
	
	DL_UPDDPINST_STRUCT_I *p_dl_upddpinst_struct_i;
	struct sqlca sqlca;

	p_dl_upddpinst_struct_i=(DL_UPDDPINST_STRUCT_I*)calloc(1,sizeof(DL_UPDDPINST_STRUCT_I));
	APL_MALLOC_FAIL(p_dl_upddpinst_struct_i)

	
	/* printf("\n p_dl_upddpinst_struct_h->h_dpm_trans_no=|%d| \n",p_dl_upddpinst_struct_h->h_dpm_trans_no); 
	** Modified For ISKB_3298 Changes - Jun2010 - Naren V */
	printf("\n p_dl_upddpinst_struct_h->h_dpm_trans_no=|%ld| \n",p_dl_upddpinst_struct_h->h_dpm_trans_no);
	printf("\n p_dl_upddpinst_struct_h->h_internal_ref_no=|%s| \n",p_dl_upddpinst_struct_h->h_internal_ref_no);	


	EXEC SQL SELECT DPM_TRANS_NO into :int_l_dpm_no:i_dpm_no
				FROM DL_DPINSTRS
				WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no;
	
	IS_ANY_ORA_ERROR

	printf("\n int_l_dpm_no=|%d| \n",int_l_dpm_no);
		
	if(i_dpm_no == -1)
	{		
	
	EXEC SQL UPDATE DL_DPINSTRS SET DPM_TRANS_NO=:p_dl_upddpinst_struct_h->h_dpm_trans_no
			WHERE internal_ref_no=:p_dl_upddpinst_struct_h->h_internal_ref_no;

	if(sqlca.sqlcode)
	{
		printf("\n Failed Updating DPM_TRANS_NO in DL_DPINSTRS ,SQLCODE is |%d|\n ",sqlca.sqlcode);
	}
	IS_ANY_ORA_ERROR

	}
	else
	{
		printf("\n DPM TRASACTION NUMBER ALREADY UPDATED for Internal Ref No=|%s|.Current DPM_NO=|%d| \n",p_dl_upddpinst_struct_h->h_internal_ref_no,int_l_dpm_no);
				
	}
		
	APL_GOBACK_SUCCESS							

	RETURN_SUCCESS: 
		printf("\n Sucess Inside DL_Upd_CDSLDpInst()\n");		
		return(APL_SUCCESS);

	RETURN_FAILURE:
		printf("\n Error Inside DL_Upd_CDSLDpInst()\n");
		return(APL_FAILURE);
}

