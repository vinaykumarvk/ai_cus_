


   
   
   
   
   
   
   
   
   
   
   
   




#include "CO_HostStructdef.h"
#define APL_REFNO_LENGTH   17

extern int CO_Pro_DateComp(char *p_fromdate,char *p_todate, int *p_datediff,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);
extern int CO_ProcMonitor(FILE *fptr,char *p_charmessage,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_c); 
extern int CO_Chk_Holiday(char *p_holidate, int *p_exists,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,char *p_exch_code);

EXEC SQL INCLUDE sqlca;


typedef struct {
	char h_dl_client[11];
	char h_indentity_no[17];
	char h_instr_code[9];
	double h_qty;
	char h_dealcd[2];
	char h_instrdate[20];
	char h_loccode[APL_LOCNCODE_LENGTH];
	} SYS_EODTRDRST_STRUCT_H;

typedef struct {
	short i_dl_client;
	short i_indentity_no;
	short i_instr_code;
	short i_qty;
	short i_dealcd;
	short i_instrdate;
	short i_loccode;
	} SYS_EODTRDRST_STRUCT_I;




 
 int DL_Mod_RecHisSafe_LocY_RegN(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,SYS_EODTRDRST_STRUCT_H *p_dealrst_struct_h,SYS_EODTRDRST_STRUCT_I *p_dealrst_struct_i)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	short	i_l_rowid_A=0;
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	char l_block_type[5] =APL_NULL_STRING;

	
	char  chr_l_client_a[APL_CLIENT_LENGTH]   =  APL_NULL_STRING;
	char  chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]	  =  APL_NULL_STRING;
	char	chr_l_locncode_c[APL_LOCNCODE_LENGTH]	  =  APL_NULL_STRING;
	double l_quantity	= 0;

	if (p_sys_dl_deal_struct_h_c != (SYS_DL_DEAL_STRUCT_H *)NULL)
	{
		strcpy(chr_l_client_a, p_sys_dl_deal_struct_h_c->h_dl_client);
		strcpy(chr_l_instrcode_a,  p_sys_dl_deal_struct_h_c->h_instr_code);
		strcpy(chr_l_locncode_c,p_sys_dl_deal_struct_h_c->h_loccode);
		l_quantity = p_sys_dl_deal_struct_h_c->h_qty; 
		strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate); 
	}
	else
	{
		strcpy(chr_l_client_a,p_dealrst_struct_h->h_dl_client);
		strcpy(chr_l_instrcode_a,p_dealrst_struct_h->h_instr_code);
		strcpy(chr_l_locncode_c,p_dealrst_struct_h->h_loccode);
		l_quantity = p_dealrst_struct_h->h_qty;
		strcpy(chr_l_instr_dt,p_dealrst_struct_h->h_instrdate);
	}
	

	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;

	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_RecHisSafe_LocY_RegN \n",NULL,p_intl_env_data_struct_h_d);

	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
		memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
		memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
		strcpy(chr_l_rowid_A,APL_NULL_STRING);
		/* Start Isolve-107:AmitB:250507 */
		if(CA_Rtv_Block_Type(  p_sys_dl_deal_struct_h_c->h_indentity_no,
                                        p_sys_dl_deal_struct_h_c -> h_classofdl,
                                        p_sys_dl_deal_struct_h_c->h_dealcd,
                                        l_block_type,
                                        l_debug_info_ptr) == APL_FAILURE)
                        {
                                        APL_GOBACK_FAIL
                        }
		printf("\n Amit:identiy_no=|%s| \n",p_sys_dl_deal_struct_h_c->h_indentity_no);	
		printf("\n Amit:chr_l_instr_dt=|%s| \n",chr_l_instr_dt);	
		printf("\n Amit:chr_l_client_a=|%s| \n",chr_l_client_a);	
		printf("\n Amit:chr_l_instrcode_a=|%s| \n",chr_l_instrcode_a);	
		printf("\n Amit:chr_l_locncode_c=|%s| \n",chr_l_locncode_c);	
		printf("\n Amit:l_block_type=|%s| \n",l_block_type);	

						EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,:chr_l_rowid_A:i_l_rowid_A 
						FROM DL_HISSAFEK A
						WHERE A.POSIT_DATE 	= :chr_l_instr_dt						  AND
								A.client  = :chr_l_client_a  AND
								A.instr_code   = :chr_l_instrcode_a   AND
								A.location_cd = :chr_l_locncode_c 
								AND BLOCK_TYPE=:l_block_type;
						printf("\n Rowid=|%s| sqlcode=|%d| \n",chr_l_rowid_A,sqlca.sqlcode);
		/* End Isolve-107:AmitB:250507 */					
						IS_ANY_ORA_ERROR

						if (APL_ZERO_RESULT_SET)
						{
							strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
							strcpy(l_dl_hissafek_struct_h.h_dl_client,chr_l_client_a);
							strcpy(l_dl_hissafek_struct_h.h_instr_code,chr_l_instrcode_a);
							strcpy(l_dl_hissafek_struct_h.h_loccode,chr_l_locncode_c);
							l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;
							l_dl_hissafek_struct_h.h_safekeep_pos = l_quantity;
							l_dl_hissafek_struct_h.h_nval_rec = 0;
							l_dl_hissafek_struct_h.h_nval_del = 0;
							l_dl_hissafek_struct_h.h_val_rec =  0;
							l_dl_hissafek_struct_h.h_val_del =  0;
							printf("\n 1 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
							if(strcmp(l_block_type,APL_NULL_STRING)!=0)
							strcpy(l_dl_hissafek_struct_h.h_block_type,l_block_type);
							else
							strcpy(l_dl_hissafek_struct_h.h_block_type,"FREE");
							printf("\n 1 After block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
						
							l_dl_hissafek_struct_i.i_positdate 		= 0;
							l_dl_hissafek_struct_i.i_dl_client			= 0;
							l_dl_hissafek_struct_i.i_instr_code			= 0;
							l_dl_hissafek_struct_i.i_loccode		= 0;
							l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_nval_rec 		= 0;
							l_dl_hissafek_struct_i.i_nval_del 		= 0;
							l_dl_hissafek_struct_i.i_val_rec 		= 0;
							l_dl_hissafek_struct_i.i_val_del 		= 0;
							
							l_dl_hissafek_struct_i.i_status_pos 	= -1;

							sqlca.sqlcode = 0;

							EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
							IS_ANY_ORA_ERROR
						}
						else
						{
							
							sqlca.sqlcode = 0;

							EXEC SQL UPDATE DL_HISSAFEK
							SET safekeep_pos = NVL(safekeep_pos,0) + :l_quantity
							WHERE rowid = :chr_l_rowid_A;
						
							IS_ANY_ORA_ERROR
						}
					}

						int_l_hol_exists = 0;
						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

						IS_ANY_ORA_ERROR

						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{		
			printf("\n Amit: Leaving  with Success:ORA|%d|\n",sqlca.sqlcode);
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocY_RegN successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{		
			printf("\n Amit: Leaving  with Failure:ORA|%d| \n",sqlca.sqlcode);
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocY_RegN failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int DL_Mod_RecHisSafe_LocN_RegN(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,SYS_EODTRDRST_STRUCT_H *p_dealrst_struct_h,SYS_EODTRDRST_STRUCT_I *p_dealrst_struct_i)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	short	i_l_rowid_A=0;
	char l_block_type[5] =APL_NULL_STRING;

   
   char  chr_l_client_a[APL_CLIENT_LENGTH]   =  APL_NULL_STRING;
   char  chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]     =  APL_NULL_STRING;
   double l_quantity   = 0;


   if (p_sys_dl_deal_struct_h_c != (SYS_DL_DEAL_STRUCT_H *)NULL)
   {
      strcpy(chr_l_client_a, p_sys_dl_deal_struct_h_c->h_dl_client);
      strcpy(chr_l_instrcode_a,  p_sys_dl_deal_struct_h_c->h_instr_code);
      l_quantity = p_sys_dl_deal_struct_h_c->h_qty;
      strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
   }
   else
   {
      strcpy(chr_l_client_a,p_dealrst_struct_h->h_dl_client);
      strcpy(chr_l_instrcode_a,p_dealrst_struct_h->h_instr_code);
      l_quantity = p_dealrst_struct_h->h_qty;
      strcpy(chr_l_instr_dt,p_dealrst_struct_h->h_instrdate);
   }
   

	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;


	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_RecHisSafe_LocN_RegN \n",NULL,p_intl_env_data_struct_h_d);

	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
		memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
		memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
		strcpy(chr_l_rowid_A,APL_NULL_STRING);

						EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
						FROM DL_HISSAFEK A 
						WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
								A.client  = :chr_l_client_a  AND
								A.instr_code   = :chr_l_instrcode_a ;  
						
						IS_ANY_ORA_ERROR

						if (APL_ZERO_RESULT_SET)
						{
							strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
							strcpy(l_dl_hissafek_struct_h.h_dl_client,chr_l_client_a);
							strcpy(l_dl_hissafek_struct_h.h_instr_code,chr_l_instrcode_a);
							l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;
							l_dl_hissafek_struct_h.h_safekeep_pos = l_quantity;
							l_dl_hissafek_struct_h.h_nval_rec = 0;
							l_dl_hissafek_struct_h.h_nval_del = 0;
							l_dl_hissafek_struct_h.h_val_rec =  0;
							l_dl_hissafek_struct_h.h_val_del =  0;
							printf("\n 2 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
							
						
							l_dl_hissafek_struct_i.i_positdate 		= 0;
							l_dl_hissafek_struct_i.i_dl_client			= 0;
							l_dl_hissafek_struct_i.i_instr_code			= 0;
							l_dl_hissafek_struct_i.i_loccode		= -1;
							l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_nval_rec 		= 0;
							l_dl_hissafek_struct_i.i_nval_del 		= 0;
							l_dl_hissafek_struct_i.i_val_rec 		= 0;
							l_dl_hissafek_struct_i.i_val_del 		= 0;
							
							l_dl_hissafek_struct_i.i_status_pos 	= -1;

							sqlca.sqlcode = 0;

							EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
							IS_ANY_ORA_ERROR
						}
						else
						{
							sqlca.sqlcode = 0; 

							EXEC SQL UPDATE DL_HISSAFEK
							SET safekeep_pos = NVL(safekeep_pos,0) + :l_quantity
							WHERE rowid = :chr_l_rowid_A;

							IS_ANY_ORA_ERROR
						}
					}

						int_l_hol_exists = 0;

						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

						IS_ANY_ORA_ERROR

						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocN_RegN successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocN_RegN failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int DL_Mod_RecHisSafe_LocY_RegY(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	double l_tempquantity = 0;
	short	i_l_rowid_A=0;
	char l_block_type[5] =APL_NULL_STRING;



	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;

	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_RecHisSafe_LocY_RegY \n",NULL,p_intl_env_data_struct_h_d);

	strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
		memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
		memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
		strcpy(chr_l_rowid_A,APL_NULL_STRING);

						if (p_sys_dl_deal_struct_h_c->h_rec_int_000 > 0)
						{
					
							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
							FROM DL_HISSAFEK A 
							WHERE A.POSIT_DATE  = :chr_l_instr_dt							 AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
									A.STATUS = '000';
					
							IS_ANY_ORA_ERROR

							if (APL_ZERO_RESULT_SET)
							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_000);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;
								l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_rec_int_000;
								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
								printf("\n 3 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= 0;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

							sqlca.sqlcode = 0;

								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR

							}
							else
							{

							sqlca.sqlcode = 0;
								EXEC SQL UPDATE DL_HISSAFEK
								SET safekeep_pos = NVL(safekeep_pos,0) + :p_sys_dl_deal_struct_h_c->h_rec_int_000
								WHERE rowid = :chr_l_rowid_A;

								IS_ANY_ORA_ERROR
							}
						}
						
						if((strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_000) == 0) || \
							(strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_001) == 0) || \
							(strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003) == 0) )
						{ 
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);
						
							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
							FROM DL_HISSAFEK A 
							WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
									A.STATUS = :p_sys_dl_deal_struct_h_c->h_pos_stat;
					
							IS_ANY_ORA_ERROR
							
							if (APL_ZERO_RESULT_SET)
							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,p_sys_dl_deal_struct_h_c->h_pos_stat);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

								if (!strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003))
								{
									l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_qty 
																- p_sys_dl_deal_struct_h_c->h_rec_int_000
																- p_sys_dl_deal_struct_h_c->h_pendregquantity
																- p_sys_dl_deal_struct_h_c->h_mcomplquantity);
								}
								else
								{
									l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_qty - p_sys_dl_deal_struct_h_c->h_rec_int_000;
								}

								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
								printf("\n 4 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= 0;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

							sqlca.sqlcode = 0;

								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR
	
							}
							else
							{

							sqlca.sqlcode = 0;
								if (!strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003))
								{
									l_tempquantity				= (p_sys_dl_deal_struct_h_c->h_qty 
																- p_sys_dl_deal_struct_h_c->h_rec_int_000
																- p_sys_dl_deal_struct_h_c->h_pendregquantity
																- p_sys_dl_deal_struct_h_c->h_mcomplquantity);
								}
								else
								{
									l_tempquantity				= p_sys_dl_deal_struct_h_c->h_qty - p_sys_dl_deal_struct_h_c->h_rec_int_000;
								}

									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + :l_tempquantity
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
							}
							if (strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_001))
							{
							if ((p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity) > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
								FROM DL_HISSAFEK A 
								WHERE A.POSIT_DATE = :chr_l_instr_dt						 AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '001';

								IS_ANY_ORA_ERROR
						
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_001);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity);

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 5 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;
	
									sqlca.sqlcode = 0;
		
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + (:p_sys_dl_deal_struct_h_c->h_pendregquantity + :p_sys_dl_deal_struct_h_c->h_mcomplquantity)
									WHERE rowid = :chr_l_rowid_A;
				
									IS_ANY_ORA_ERROR
								}
							}
						}
						}
					if((p_sys_dl_deal_struct_h_c->h_marktrfquantity > 0) || (p_sys_dl_deal_struct_h_c->h_outregquantity > 0) ||
						(p_sys_dl_deal_struct_h_c->h_retregquantity > 0) || (p_sys_dl_deal_struct_h_c->h_stampquantity > 0) ||
						 (p_sys_dl_deal_struct_h_c->h_valdeedquantity > 0) || (p_sys_dl_deal_struct_h_c->h_lostquantity > 0)) 
						{
						if((p_sys_dl_deal_struct_h_c->h_marktrfquantity > 0) || (p_sys_dl_deal_struct_h_c->h_outregquantity > 0) ||
						(p_sys_dl_deal_struct_h_c->h_retregquantity > 0) || (p_sys_dl_deal_struct_h_c->h_stampquantity > 0) ||
						 (p_sys_dl_deal_struct_h_c->h_valdeedquantity > 0)) 
						{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);
						
							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
							FROM DL_HISSAFEK A
							WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
									A.STATUS = '002';
						
							IS_ANY_ORA_ERROR
							
							if (APL_ZERO_RESULT_SET)
							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_002);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

								l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_qty	
																				- p_sys_dl_deal_struct_h_c->h_pendregquantity
																				- p_sys_dl_deal_struct_h_c->h_mcomplquantity
																				- p_sys_dl_deal_struct_h_c->h_complquantity
																				- p_sys_dl_deal_struct_h_c->h_lostquantity
																				- p_sys_dl_deal_struct_h_c->h_rec_int_000);

								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
								printf("\n 6 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= 0;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;
	
								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR

							}
							else
							{

							sqlca.sqlcode = 0;
								EXEC SQL UPDATE DL_HISSAFEK
								SET safekeep_pos = NVL(safekeep_pos,0) + (:p_sys_dl_deal_struct_h_c->h_qty
																			- :p_sys_dl_deal_struct_h_c->h_pendregquantity
																			- :p_sys_dl_deal_struct_h_c->h_mcomplquantity
																			- :p_sys_dl_deal_struct_h_c->h_complquantity
																			- :p_sys_dl_deal_struct_h_c->h_lostquantity
																			- :p_sys_dl_deal_struct_h_c->h_rec_int_000)
								WHERE rowid = :chr_l_rowid_A;
								IS_ANY_ORA_ERROR
							}
						}	

							if ((p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity) > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);
						
								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
										A.STATUS = '001';
						
								IS_ANY_ORA_ERROR
							
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_001);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity);

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 7 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= 0;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;
	
									sqlca.sqlcode = 0;
		
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + (:p_sys_dl_deal_struct_h_c->h_pendregquantity + :p_sys_dl_deal_struct_h_c->h_mcomplquantity)
									WHERE rowid = :chr_l_rowid_A;
				
									IS_ANY_ORA_ERROR
								}
							}
						
							if (p_sys_dl_deal_struct_h_c->h_complquantity > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);
						
								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
										A.STATUS = '003';
					
								IS_ANY_ORA_ERROR
								
								if  (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_003);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_complquantity;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 8 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
						
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= 0;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

									sqlca.sqlcode = 0;
	
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
					
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + :p_sys_dl_deal_struct_h_c->h_complquantity
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
				
							if (p_sys_dl_deal_struct_h_c->h_lostquantity  > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);
						
								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
										A.STATUS = '004';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_004);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_lostquantity;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 9 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= 0;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

									sqlca.sqlcode = 0;
	
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + :p_sys_dl_deal_struct_h_c->h_lostquantity
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
						}	
					}

						int_l_hol_exists = 0;
						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

								IS_ANY_ORA_ERROR
								
						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocY_RegY successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocY_RegY failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int DL_Mod_RecHisSafe_LocN_RegY(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	double l_tempquantity = 0;
	short	i_l_rowid_A=0;
	char l_block_type[5] =APL_NULL_STRING;

	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;


	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_RecHisSafe_LocN_RegY \n",NULL,p_intl_env_data_struct_h_d);

	strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
		memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
		memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
		strcpy(chr_l_rowid_A,APL_NULL_STRING);


						if (p_sys_dl_deal_struct_h_c->h_rec_int_000 > 0)
						{
					
							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
							FROM DL_HISSAFEK A 
							WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.STATUS = '000';
					
								IS_ANY_ORA_ERROR
								
							if (APL_ZERO_RESULT_SET)

							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_000);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;
								l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_rec_int_000;
								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
								printf("\n 10 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= -1;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

							sqlca.sqlcode = 0;

								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR

							}
							else
							{
								EXEC SQL UPDATE DL_HISSAFEK
								SET safekeep_pos = NVL(safekeep_pos,0) + :p_sys_dl_deal_struct_h_c->h_rec_int_000
								WHERE rowid = :chr_l_rowid_A;

								IS_ANY_ORA_ERROR
							}
						}
						
						if((strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_000) == 0) || \
							(strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_001) == 0) || \
							(strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003) == 0) )
						{ 
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
							FROM DL_HISSAFEK A
							WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.STATUS = :p_sys_dl_deal_struct_h_c->h_pos_stat; 
					
								IS_ANY_ORA_ERROR
								
							if (APL_ZERO_RESULT_SET)
							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,p_sys_dl_deal_struct_h_c->h_pos_stat);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

								if (!strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003))
								{
									l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_qty 
																- p_sys_dl_deal_struct_h_c->h_rec_int_000
																- p_sys_dl_deal_struct_h_c->h_pendregquantity
																- p_sys_dl_deal_struct_h_c->h_mcomplquantity);
								}
								else
								{
									l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_qty - p_sys_dl_deal_struct_h_c->h_rec_int_000;
								}

								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
								printf("\n 11 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= -1;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

							sqlca.sqlcode = 0;

								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR
	
							}
							else
							{
								if (!strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003))
								{
									l_tempquantity				= (p_sys_dl_deal_struct_h_c->h_qty 
																- p_sys_dl_deal_struct_h_c->h_rec_int_000
																- p_sys_dl_deal_struct_h_c->h_pendregquantity
																- p_sys_dl_deal_struct_h_c->h_mcomplquantity);
								}
								else
								{
									l_tempquantity				= p_sys_dl_deal_struct_h_c->h_qty - p_sys_dl_deal_struct_h_c->h_rec_int_000;
								}

									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + :l_tempquantity
									WHERE rowid = :chr_l_rowid_A;
				
									IS_ANY_ORA_ERROR
							}
							if (strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_001))
							{
							if ((p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity) > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
								FROM DL_HISSAFEK A 
								WHERE A.POSIT_DATE = :chr_l_instr_dt						 AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '001';

								IS_ANY_ORA_ERROR
						
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_001);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity);

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 12 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;
	
									sqlca.sqlcode = 0;
		
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + (:p_sys_dl_deal_struct_h_c->h_pendregquantity + :p_sys_dl_deal_struct_h_c->h_mcomplquantity)
									WHERE rowid = :chr_l_rowid_A;
				
									IS_ANY_ORA_ERROR
								}
							}
						}
						}
					if((p_sys_dl_deal_struct_h_c->h_marktrfquantity > 0) || (p_sys_dl_deal_struct_h_c->h_outregquantity > 0) ||
						(p_sys_dl_deal_struct_h_c->h_retregquantity > 0) || (p_sys_dl_deal_struct_h_c->h_stampquantity > 0) ||
						 (p_sys_dl_deal_struct_h_c->h_valdeedquantity > 0) || (p_sys_dl_deal_struct_h_c->h_lostquantity > 0)) 
						{
						if((p_sys_dl_deal_struct_h_c->h_marktrfquantity > 0) || (p_sys_dl_deal_struct_h_c->h_outregquantity > 0) ||
						(p_sys_dl_deal_struct_h_c->h_retregquantity > 0) || (p_sys_dl_deal_struct_h_c->h_stampquantity > 0) ||
						 (p_sys_dl_deal_struct_h_c->h_valdeedquantity > 0)) 
						{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
							FROM DL_HISSAFEK A 
							WHERE A.POSIT_DATE  = :chr_l_instr_dt						 AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.STATUS = '002'; 
						
								IS_ANY_ORA_ERROR
								
							if (APL_ZERO_RESULT_SET)
							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_002);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

								l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_qty	
																				- p_sys_dl_deal_struct_h_c->h_pendregquantity
																				- p_sys_dl_deal_struct_h_c->h_mcomplquantity
																				- p_sys_dl_deal_struct_h_c->h_complquantity
																				- p_sys_dl_deal_struct_h_c->h_lostquantity
																				- p_sys_dl_deal_struct_h_c->h_rec_int_000);

								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
								printf("\n 13 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= -1;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;
	
								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR

							}
							else
							{
								EXEC SQL UPDATE DL_HISSAFEK
								SET safekeep_pos = NVL(safekeep_pos,0) + (:p_sys_dl_deal_struct_h_c->h_qty
																			- :p_sys_dl_deal_struct_h_c->h_pendregquantity
																			- :p_sys_dl_deal_struct_h_c->h_mcomplquantity
																			- :p_sys_dl_deal_struct_h_c->h_complquantity
																			- :p_sys_dl_deal_struct_h_c->h_lostquantity
																			- :p_sys_dl_deal_struct_h_c->h_rec_int_000)
								WHERE rowid = :chr_l_rowid_A;

								IS_ANY_ORA_ERROR
							}
						}

							if ((p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity) > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
								FROM DL_HISSAFEK A 
								WHERE A.POSIT_DATE = :chr_l_instr_dt						 AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '001';

								IS_ANY_ORA_ERROR
						
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_001);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (p_sys_dl_deal_struct_h_c->h_pendregquantity + p_sys_dl_deal_struct_h_c->h_mcomplquantity);

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 14 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;
	
									sqlca.sqlcode = 0;
		
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + (:p_sys_dl_deal_struct_h_c->h_pendregquantity + :p_sys_dl_deal_struct_h_c->h_mcomplquantity)
									WHERE rowid = :chr_l_rowid_A;
				
									IS_ANY_ORA_ERROR
								}
							}
						
							if (p_sys_dl_deal_struct_h_c->h_complquantity > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '003';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_003);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_complquantity;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 15 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
						
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

									sqlca.sqlcode = 0;
	
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
					
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + :p_sys_dl_deal_struct_h_c->h_complquantity
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
				
							if (p_sys_dl_deal_struct_h_c->h_lostquantity  > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A      
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '004';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_004);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = p_sys_dl_deal_struct_h_c->h_lostquantity;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 16 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

									sqlca.sqlcode = 0;
	
									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR

								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) + :p_sys_dl_deal_struct_h_c->h_lostquantity
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
						}
					}

						int_l_hol_exists = 0;
						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

								IS_ANY_ORA_ERROR
								
						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocN_RegY successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_RecHisSafe_LocN_RegY failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int DL_Mod_DelHisSafe_LocY_RegN(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,SYS_EODTRDRST_STRUCT_H *p_dealrst_struct_h,SYS_EODTRDRST_STRUCT_I *p_dealrst_struct_i)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	short	i_l_rowid_A=0;
	char l_block_type[5] =APL_NULL_STRING;


   
   char  chr_l_client_a[APL_CLIENT_LENGTH]   =  APL_NULL_STRING;
   char  chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]     =  APL_NULL_STRING;
   char  chr_l_locncode_c[APL_LOCNCODE_LENGTH]    =  APL_NULL_STRING;
   double l_quantity   = 0;


   if (p_sys_dl_deal_struct_h_c != (SYS_DL_DEAL_STRUCT_H *)NULL)
   {
      strcpy(chr_l_client_a, p_sys_dl_deal_struct_h_c->h_dl_client);
      strcpy(chr_l_instrcode_a,  p_sys_dl_deal_struct_h_c->h_instr_code);
      strcpy(chr_l_locncode_c,p_sys_dl_deal_struct_h_c->h_loccode);
      l_quantity = p_sys_dl_deal_struct_h_c->h_qty;
      strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
   }
   else
   {
      strcpy(chr_l_client_a,p_dealrst_struct_h->h_dl_client);
      strcpy(chr_l_instrcode_a,p_dealrst_struct_h->h_instr_code);
      strcpy(chr_l_locncode_c,p_dealrst_struct_h->h_loccode);
      l_quantity = p_dealrst_struct_h->h_qty;
      strcpy(chr_l_instr_dt,p_dealrst_struct_h->h_instrdate);
   }
   


	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;


	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_DelHisSafe_LocY_RegN \n",NULL,p_intl_env_data_struct_h_d);

	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
		memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
		memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
		strcpy(chr_l_rowid_A,APL_NULL_STRING);
		/* Start Isolve-107:AmitB:250507 */
		if(CA_Rtv_Block_Type(  p_sys_dl_deal_struct_h_c->h_indentity_no,
                                        p_sys_dl_deal_struct_h_c -> h_classofdl,
                                        p_sys_dl_deal_struct_h_c->h_dealcd,
                                        l_block_type,
                                        l_debug_info_ptr) == APL_FAILURE)
                        {
                                        APL_GOBACK_FAIL
                        }
		printf("\n Amit:identiy_no=|%s| \n",p_sys_dl_deal_struct_h_c->h_indentity_no);	
		printf("\n Amit1:chr_l_instr_dt=|%s| \n",chr_l_instr_dt);	
		printf("\n Amit1:chr_l_client_a=|%s| \n",chr_l_client_a);	
		printf("\n Amit1:chr_l_instrcode_a=|%s| \n",chr_l_instrcode_a);	
		printf("\n Amit1:chr_l_locncode_c=|%s| \n",chr_l_locncode_c);	
		printf("\n Amit:l_block_type=|%s| \n",l_block_type);	
		l_dl_hissafek_struct_h.h_dp_rec=0;
		l_dl_hissafek_struct_h.h_dp_del=0;
		/* End Isolve-107:AmitB:250507 */
						EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
						FROM DL_HISSAFEK A
						WHERE A.POSIT_DATE  = :chr_l_instr_dt						AND
								A.client  = :chr_l_client_a  AND
								A.instr_code   = :chr_l_instrcode_a   AND
								A.location_cd = :chr_l_locncode_c
								AND BLOCK_TYPE=:l_block_type;
								printf("\n Rowid1=|%s| sqlcode=|%d| \n",chr_l_rowid_A,sqlca.sqlcode);
								printf("\n |%s| \n",l_dl_hissafek_struct_h.h_positdate);
								printf("\n |%s| \n",l_dl_hissafek_struct_h.h_dl_client);
								printf("\n |%s| \n",l_dl_hissafek_struct_h.h_instr_code);
								printf("\n |%s| \n",l_dl_hissafek_struct_h.h_loccode);
								printf("\n |%lf| \n",l_dl_hissafek_struct_h.h_stsafekeep_pos);
								printf("\n |%lf| \n",l_dl_hissafek_struct_h.h_nval_rec);
								printf("\n |%lf| \n",l_dl_hissafek_struct_h.h_nval_del);
								printf("\n |%lf| \n",l_dl_hissafek_struct_h.h_val_rec);
								printf("\n |%lf| \n",l_dl_hissafek_struct_h.h_val_del);
								printf("\n |%lf| \n",l_dl_hissafek_struct_h.h_dp_rec);
								printf("\n |%lf| \n",l_dl_hissafek_struct_h.h_dp_del);
								printf("\n |%s| \n",l_dl_hissafek_struct_h.h_block_type);
								IS_ANY_ORA_ERROR
								
						if (APL_ZERO_RESULT_SET)
						{
							strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
							strcpy(l_dl_hissafek_struct_h.h_dl_client,chr_l_client_a);
							strcpy(l_dl_hissafek_struct_h.h_instr_code,chr_l_instrcode_a);
							strcpy(l_dl_hissafek_struct_h.h_loccode,chr_l_locncode_c);
							l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;
							l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * l_quantity;
							l_dl_hissafek_struct_h.h_nval_rec = 0;
							l_dl_hissafek_struct_h.h_nval_del = 0;
							l_dl_hissafek_struct_h.h_val_rec =  0;
							l_dl_hissafek_struct_h.h_val_del =  0;
							printf("\n 17 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
							if(strcmp(l_block_type,APL_NULL_STRING)!=0)
							strcpy(l_dl_hissafek_struct_h.h_block_type,l_block_type);
							else
							strcpy(l_dl_hissafek_struct_h.h_block_type,"FREE");
							printf("\n 17 After block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
						
							l_dl_hissafek_struct_i.i_positdate 		= 0;
							l_dl_hissafek_struct_i.i_dl_client			= 0;
							l_dl_hissafek_struct_i.i_instr_code			= 0;
							l_dl_hissafek_struct_i.i_loccode		= 0;
							l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_nval_rec 		= 0;
							l_dl_hissafek_struct_i.i_nval_del 		= 0;
							l_dl_hissafek_struct_i.i_val_rec 		= 0;
							l_dl_hissafek_struct_i.i_val_del 		= 0;
							
							l_dl_hissafek_struct_i.i_status_pos 	= -1;

							sqlca.sqlcode = 0;

							EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
							IS_ANY_ORA_ERROR
						}
						else
						{
							sqlca.sqlcode = 0; 

							EXEC SQL UPDATE DL_HISSAFEK
							SET safekeep_pos = NVL(safekeep_pos,0) - :l_quantity
							WHERE rowid = :chr_l_rowid_A;

							IS_ANY_ORA_ERROR
						}

					}

						int_l_hol_exists = 0;
						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

								IS_ANY_ORA_ERROR
								
						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocY_RegN successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocY_RegN failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int DL_Mod_DelHisSafe_LocY_RegY(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	short	i_l_rowid_A=0;
	char l_block_type[5] =APL_NULL_STRING;

	sqlca.sqlcode = 0;

	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;

		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_DelHisSafe_LocY_RegY \n",NULL,p_intl_env_data_struct_h_d);

	strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
			memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
			memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
			strcpy(chr_l_rowid_A,APL_NULL_STRING);

						if((strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_000) == 0) || \
							(strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003) == 0))
						{ 
							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
							FROM DL_HISSAFEK A
							WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
									A.STATUS = :p_sys_dl_deal_struct_h_c->h_pos_stat;
					
								IS_ANY_ORA_ERROR
								
							if (APL_ZERO_RESULT_SET)
							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,p_sys_dl_deal_struct_h_c->h_pos_stat);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

								l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_qty;

								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
								printf("\n 18 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= 0;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

							sqlca.sqlcode = 0;

								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR
	
							}
							else
							{
								EXEC SQL UPDATE DL_HISSAFEK
								SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_qty
								WHERE rowid = :chr_l_rowid_A;

								IS_ANY_ORA_ERROR
							}

						}
						else
						{
							if (p_sys_dl_deal_struct_h_c->h_delta_000 > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt						AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
										A.STATUS = '000';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_000);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_delta_000;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 19 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= 0;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;

									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR
	
								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_delta_000
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
							if (p_sys_dl_deal_struct_h_c->h_delta_001 > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
										A.STATUS = '001';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_001);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_delta_001;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 20 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= 0;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;

									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR
	
								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_delta_001
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
							if (p_sys_dl_deal_struct_h_c->h_delta_002 > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.location_cd = :p_sys_dl_deal_struct_h_c->h_loccode AND
										A.STATUS = '003' ;
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_loccode,p_sys_dl_deal_struct_h_c->h_loccode);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_003);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_delta_002;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
									printf("\n 21 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= 0;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;

									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR
	
								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_delta_002
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
						}
					}

						int_l_hol_exists = 0;

						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

								IS_ANY_ORA_ERROR
								
						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocY_RegY successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocY_RegY failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int DL_Mod_DelHisSafe_LocN_RegN(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,SYS_EODTRDRST_STRUCT_H *p_dealrst_struct_h,SYS_EODTRDRST_STRUCT_I *p_dealrst_struct_i)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	short	i_l_rowid_A=0;
	char l_block_type[5] =APL_NULL_STRING;

   
   char  chr_l_client_a[APL_CLIENT_LENGTH]   =  APL_NULL_STRING;
   char  chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]     =  APL_NULL_STRING;
   double l_quantity   = 0;


   if (p_sys_dl_deal_struct_h_c != (SYS_DL_DEAL_STRUCT_H *)NULL)
   {
      strcpy(chr_l_client_a, p_sys_dl_deal_struct_h_c->h_dl_client);
      strcpy(chr_l_instrcode_a,  p_sys_dl_deal_struct_h_c->h_instr_code);
      l_quantity = p_sys_dl_deal_struct_h_c->h_qty;
      strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
   }
   else
   {
      strcpy(chr_l_client_a,p_dealrst_struct_h->h_dl_client);
      strcpy(chr_l_instrcode_a,p_dealrst_struct_h->h_instr_code);
      l_quantity = p_dealrst_struct_h->h_qty;
      strcpy(chr_l_instr_dt,p_dealrst_struct_h->h_instrdate);
   }
   

	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;


	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_DelHisSafe_LocN_RegN \n",NULL,p_intl_env_data_struct_h_d);

	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
			memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
			memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
			strcpy(chr_l_rowid_A,APL_NULL_STRING);

						EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
						FROM DL_HISSAFEK A
						WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
								A.client  = :chr_l_client_a  AND
								A.instr_code   = :chr_l_instrcode_a; 
						
								IS_ANY_ORA_ERROR
								
						if (APL_ZERO_RESULT_SET)
						{
							strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
							strcpy(l_dl_hissafek_struct_h.h_dl_client,chr_l_client_a);
							strcpy(l_dl_hissafek_struct_h.h_instr_code,chr_l_instrcode_a);
							l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;
							l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * l_quantity;
							l_dl_hissafek_struct_h.h_nval_rec = 0;
							l_dl_hissafek_struct_h.h_nval_del = 0;
							l_dl_hissafek_struct_h.h_val_rec =  0;
							l_dl_hissafek_struct_h.h_val_del =  0;
							printf("\n 22 Before block=|%s| \n",l_dl_hissafek_struct_h.h_block_type);
						
							l_dl_hissafek_struct_i.i_positdate 		= 0;
							l_dl_hissafek_struct_i.i_dl_client			= 0;
							l_dl_hissafek_struct_i.i_instr_code			= 0;
							l_dl_hissafek_struct_i.i_loccode		= -1;
							l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
							l_dl_hissafek_struct_i.i_nval_rec 		= 0;
							l_dl_hissafek_struct_i.i_nval_del 		= 0;
							l_dl_hissafek_struct_i.i_val_rec 		= 0;
							l_dl_hissafek_struct_i.i_val_del 		= 0;
							
							l_dl_hissafek_struct_i.i_status_pos 	= -1;

							sqlca.sqlcode = 0;

							EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
							
							IS_ANY_ORA_ERROR
						}
						else
						{
							sqlca.sqlcode = 0; 

							EXEC SQL UPDATE DL_HISSAFEK
							SET safekeep_pos = NVL(safekeep_pos,0) - :l_quantity
							WHERE rowid = :chr_l_rowid_A;

							IS_ANY_ORA_ERROR
						}

					}

						int_l_hol_exists = 0;
						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

								IS_ANY_ORA_ERROR
								
						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocN_RegN successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocN_RegN failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
 int DL_Mod_DelHisSafe_LocN_RegY(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca					sqlca;
	DL_HISSAFEK_STRUCT_H		l_dl_hissafek_struct_h;
	DL_HISSAFEK_STRUCT_I		l_dl_hissafek_struct_i;
	char	chr_l_instr_dt[APL_DATE_LEN];
	char	chr_l_rowid_A[APL_ROWID_LEN];
	int int_date_diff	= 0;
	int int_l_hol_exists = 0;
	short	i_l_rowid_A=0;
	char l_block_type[5] =APL_NULL_STRING;

	EXEC SQL VAR l_dl_hissafek_struct_h.h_dl_client IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_instr_code IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_hissafek_struct_h.h_pos_stat IS STRING;


	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Mod_DelHisSafe_LocN_RegY \n",NULL,p_intl_env_data_struct_h_d);

	strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
	CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	while (int_date_diff > 0)
	{
		if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
		{
			APL_GOBACK_FAIL
		}

		if (int_l_hol_exists == 0)
		{
		memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
		memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
		strcpy(chr_l_rowid_A,APL_NULL_STRING);

						if((strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_000) == 0) || \
							(strcmp(p_sys_dl_deal_struct_h_c->h_pos_stat,STATUS_POS_003) == 0))
						{ 
							EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
							FROM DL_HISSAFEK A
							WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
									A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
									A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
									A.STATUS = :p_sys_dl_deal_struct_h_c->h_pos_stat;
					
								IS_ANY_ORA_ERROR
								
							if (APL_ZERO_RESULT_SET)
							{
								strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
								strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
								strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
								strcpy(l_dl_hissafek_struct_h.h_pos_stat,p_sys_dl_deal_struct_h_c->h_pos_stat);
								l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

								l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_qty;

								l_dl_hissafek_struct_h.h_nval_rec = 0;
								l_dl_hissafek_struct_h.h_nval_del = 0;
								l_dl_hissafek_struct_h.h_val_rec =  0;
								l_dl_hissafek_struct_h.h_val_del =  0;
					
								l_dl_hissafek_struct_i.i_positdate 		= 0;
								l_dl_hissafek_struct_i.i_dl_client			= 0;
								l_dl_hissafek_struct_i.i_instr_code			= 0;
								l_dl_hissafek_struct_i.i_loccode		= -1;
								l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
								l_dl_hissafek_struct_i.i_nval_rec 		= 0;
								l_dl_hissafek_struct_i.i_nval_del 		= 0;
								l_dl_hissafek_struct_i.i_val_rec 		= 0;
								l_dl_hissafek_struct_i.i_val_del 		= 0;
						
								l_dl_hissafek_struct_i.i_status_pos 	= 0;

							sqlca.sqlcode = 0;

								EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
								IS_ANY_ORA_ERROR
	
							}
							else
							{
								EXEC SQL UPDATE DL_HISSAFEK
								SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_qty
								WHERE rowid = :chr_l_rowid_A;

								IS_ANY_ORA_ERROR
							}

						}
						else
						{
							if (p_sys_dl_deal_struct_h_c->h_delta_000 > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '000';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_000);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_delta_000;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;

									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR
	
								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_delta_000
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
							if (p_sys_dl_deal_struct_h_c->h_delta_001 > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt				AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '001';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_001);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_delta_001;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;

									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR
	
								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_delta_001
									WHERE rowid = :chr_l_rowid_A;

									IS_ANY_ORA_ERROR
								}
							}
							if (p_sys_dl_deal_struct_h_c->h_delta_002 > 0)
							{
							memset(&l_dl_hissafek_struct_h,NULL,sizeof(DL_HISSAFEK_STRUCT_H));
							memset(&l_dl_hissafek_struct_i,NULL,sizeof(DL_HISSAFEK_STRUCT_I));
							strcpy(chr_l_rowid_A,APL_NULL_STRING);

								EXEC SQL SELECT A.*,A.rowid INTO :l_dl_hissafek_struct_h:l_dl_hissafek_struct_i,chr_l_rowid_A:i_l_rowid_A 
								FROM DL_HISSAFEK A
								WHERE A.POSIT_DATE  = :chr_l_instr_dt					AND
										A.client  = :p_sys_dl_deal_struct_h_c->h_dl_client  AND
										A.instr_code   = :p_sys_dl_deal_struct_h_c->h_instr_code   AND
										A.STATUS = '003';
					
								IS_ANY_ORA_ERROR
								
								if (APL_ZERO_RESULT_SET)
								{
									strcpy(l_dl_hissafek_struct_h.h_positdate,chr_l_instr_dt);
									strcpy(l_dl_hissafek_struct_h.h_dl_client,p_sys_dl_deal_struct_h_c->h_dl_client);
									strcpy(l_dl_hissafek_struct_h.h_instr_code,p_sys_dl_deal_struct_h_c->h_instr_code);
									strcpy(l_dl_hissafek_struct_h.h_pos_stat,STATUS_POS_003);
									l_dl_hissafek_struct_h.h_stsafekeep_pos = 0;

									l_dl_hissafek_struct_h.h_safekeep_pos = (-1) * p_sys_dl_deal_struct_h_c->h_delta_002;

									l_dl_hissafek_struct_h.h_nval_rec = 0;
									l_dl_hissafek_struct_h.h_nval_del = 0;
									l_dl_hissafek_struct_h.h_val_rec =  0;
									l_dl_hissafek_struct_h.h_val_del =  0;
					
									l_dl_hissafek_struct_i.i_positdate 		= 0;
									l_dl_hissafek_struct_i.i_dl_client			= 0;
									l_dl_hissafek_struct_i.i_instr_code			= 0;
									l_dl_hissafek_struct_i.i_loccode		= -1;
									l_dl_hissafek_struct_i.i_stsafekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_safekeep_pos			= 0;
									l_dl_hissafek_struct_i.i_nval_rec 		= 0;
									l_dl_hissafek_struct_i.i_nval_del 		= 0;
									l_dl_hissafek_struct_i.i_val_rec 		= 0;
									l_dl_hissafek_struct_i.i_val_del 		= 0;
						
									l_dl_hissafek_struct_i.i_status_pos 	= 0;

								sqlca.sqlcode = 0;

									EXEC SQL INSERT INTO DL_HISSAFEK VALUES (:l_dl_hissafek_struct_h:l_dl_hissafek_struct_i);
						
									IS_ANY_ORA_ERROR
	
								}
								else
								{
									EXEC SQL UPDATE DL_HISSAFEK
									SET safekeep_pos = NVL(safekeep_pos,0) - :p_sys_dl_deal_struct_h_c->h_delta_002
									WHERE rowid = :chr_l_rowid_A;
									IS_ANY_ORA_ERROR
								}
							}
						}
					}


						int_l_hol_exists = 0;
						EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

								IS_ANY_ORA_ERROR
								
						CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocN_RegY successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Mod_DelHisSafe_LocN_RegY failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}



 
int DL_Proc_BkSetl(char **argv, FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca					sqlca;
	SYS_DL_DEAL_STRUCT_H			l_sys_dl_deal_struct_hb;
	SYS_DL_DEAL_STRUCT_I			l_sys_dl_deal_struct_il;
	SYS_EODTRDRST_STRUCT_H		h_traderst;
	SYS_EODTRDRST_STRUCT_I		i_traderst;
	char								chr_l_trcode_a[3] = APL_NULL_STRING;
	char								int_l_flg[2] = APL_NULL_STRING;
	char								chr_l_prev_acct[11] = APL_NULL_STRING;
	char								chr_l_prev_instrcode[9] = APL_NULL_STRING;
	char								chr_l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	char								chr_l_prev_instr_dt[APL_DATE_LEN] = APL_NULL_STRING;
	char								chr_l_prev_refno[APL_REFNO_LENGTH] = APL_NULL_STRING;
	char								chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	char 								chr_lstregno[21];  
	char        					chr_mainfuncarea[APL_MAINFUNCAREA_LEN]; 
	char        					chr_l_condid[APL_CONDID_LEN]; 
	short       					int_l_condexists;  

	int								int_l_reccount = 0;
	int								int_l_flag = 0;

	char 	l_identity_no[50] = APL_NULL_STRING; //Added by Kalyan

	EXEC SQL VAR int_l_flg IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_dl_client IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_indentity_no IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_instr_code IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_loccode IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_dealcd IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_hb.h_pos_stat IS STRING;

	
	EXEC SQL VAR h_traderst.h_dl_client IS STRING;
	EXEC SQL VAR h_traderst.h_indentity_no IS STRING;
	EXEC SQL VAR h_traderst.h_instr_code IS STRING;
	EXEC SQL VAR h_traderst.h_loccode IS STRING;
	EXEC SQL VAR h_traderst.h_dealcd IS STRING;
	

	EXEC SQL VAR chr_lstregno IS STRING;  
	EXEC SQL VAR l_identity_no IS STRING; //Added by Kalyan 

	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Proc_BkSetl \n",NULL,p_intl_env_data_struct_h_d);

	if (CO_RtvSysDt(chr_l_sys_date, l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	strcpy((char *)int_l_flg,"Y");
/* chaged by Bageshri for Oracle 10 Migration */
	EXEC SQL DECLARE TradeRecs CURSOR FOR
		SELECT * FROM DL_DEAL
		WHERE MOD_HISPOS_IND = :int_l_flg and
				MOD_HISPOS_DATE IS NULL and
				INSTRUMENT_DT IS NOT NULL
		ORDER BY client,instr_code,INSTRUMENT_DT desc;

	EXEC SQL OPEN TradeRecs;

	IS_ANY_ORA_ERROR




/* chaged by Bageshri for Oracle 10 Migration */	
	EXEC SQL DECLARE TrdRstRecs CURSOR FOR
		SELECT CLIENT, IDENTIY_NO, INSTR_CODE, QTY, DEAL_CD, INSTRUMENT_DT, LOCATION_CD 
		FROM DL_DEALRST
		WHERE MOD_HISPOS_IND = :int_l_flg and
				INSTRUMENT_DT IS NOT NULL
		ORDER BY client,instr_code,INSTRUMENT_DT desc;

	EXEC SQL OPEN TrdRstRecs;

	IS_ANY_ORA_ERROR
	

	int_l_flag = 0;
	for(int_l_reccount=0; ;int_l_reccount++)
	{
		if (int_l_flag==0)
		{
			EXEC SQL FETCH TradeRecs INTO :l_sys_dl_deal_struct_hb:l_sys_dl_deal_struct_il;
			strcpy(chr_l_trcode_a,l_sys_dl_deal_struct_hb.h_dealcd);
			strcpy(l_identity_no,l_sys_dl_deal_struct_hb.h_indentity_no); //Added by Kalyan
		}
		else
		{
			
			EXEC SQL FETCH TrdRstRecs INTO :h_traderst:i_traderst;
			strcpy(chr_l_trcode_a,h_traderst.h_dealcd);
			strcpy(l_identity_no,h_traderst.h_indentity_no); //Added by Kalyan
			memset(&l_sys_dl_deal_struct_hb, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
			memset(&l_sys_dl_deal_struct_il, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
			h_traderst.h_qty = (h_traderst.h_qty * -1);
			
		}
			

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
		{
			if ( strlen(chr_l_prev_acct)  )
			{
				sqlca.sqlcode = 0;
				//EXEC SQL INSERT INTO CABACKSETTLE VALUES (:chr_l_sys_date,:chr_l_prev_acct,:chr_l_prev_instrcode,:chr_l_prev_instr_dt); Commented By Kalyan
				EXEC SQL INSERT INTO CABACKSETTLE VALUES (:chr_l_sys_date,:chr_l_prev_acct,:chr_l_prev_instrcode,:chr_l_prev_instr_dt,:l_identity_no); //Added By Kalyan
       		if (sqlca.sqlcode == 00001)
       		{
	
			/* Added BY Kalyan */
			EXEC SQL UPDATE 
					CABACKSETTLE 
				SET 
					IDENTITY_NO=IDENTITY_NO||','||:l_identity_no 
				WHERE 
					INSTR_CODE=:chr_l_prev_instrcode AND
					DEALDT=:chr_l_sys_date AND
					CLIENT=:chr_l_prev_acct;

			IS_ANY_ORA_ERROR

			/* Till Here */

           		 //fprintf(p_ptr_log_file, "Record already exist in abacksetl. Not inserted. Account=%s Instrode=%s InstrDt=%s\n",chr_l_prev_acct,chr_l_prev_instrcode,chr_l_prev_instr_dt);
           		 fprintf(p_ptr_log_file, "Record already exist in abacksetl. so updated. Account=%s Instrode=%s InstrDt=%s\n",chr_l_prev_acct,chr_l_prev_instrcode,chr_l_prev_instr_dt);
            		IS_ANY_ORA_ERROR
       		}
			}

			if (int_l_flag==0)
			{
				int_l_flag = 1;
				continue;
			}
			else
				break;
		}
		printf("\n DealNo=|%s| \n",l_sys_dl_deal_struct_hb.h_indentity_no);
		if (int_l_flag==0)
		{
			if (l_sys_dl_deal_struct_il.i_pendregquantity == -1) l_sys_dl_deal_struct_hb.h_pendregquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_mcomplquantity == -1) l_sys_dl_deal_struct_hb.h_mcomplquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_complquantity == -1) l_sys_dl_deal_struct_hb.h_complquantity 		= 0;
			if (l_sys_dl_deal_struct_il.i_lostquantity == -1) l_sys_dl_deal_struct_hb.h_lostquantity 			= 0;
			if (l_sys_dl_deal_struct_il.i_stampquantity == -1) l_sys_dl_deal_struct_hb.h_stampquantity 		= 0;
			if (l_sys_dl_deal_struct_il.i_outregquantity == -1) l_sys_dl_deal_struct_hb.h_outregquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_tempoutquantity == -1) l_sys_dl_deal_struct_hb.h_tempoutquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_tempretquantity == -1) l_sys_dl_deal_struct_hb.h_tempretquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_marktrfquantity == -1) l_sys_dl_deal_struct_hb.h_marktrfquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_retregquantity == -1) l_sys_dl_deal_struct_hb.h_retregquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_valdeedquantity == -1) l_sys_dl_deal_struct_hb.h_valdeedquantity 	= 0;
			if (l_sys_dl_deal_struct_il.i_rec_int_000 == -1) l_sys_dl_deal_struct_hb.h_rec_int_000 	= 0;
			if (l_sys_dl_deal_struct_il.i_delta_000 == -1) l_sys_dl_deal_struct_hb.h_delta_000 	= 0;
			if (l_sys_dl_deal_struct_il.i_delta_001 == -1) l_sys_dl_deal_struct_hb.h_delta_001 	= 0;
			if (l_sys_dl_deal_struct_il.i_delta_003 == -1) l_sys_dl_deal_struct_hb.h_delta_002 	= 0;
		}

		if ((l_sys_dl_deal_struct_il.i_updhispos_date == -1) || int_l_flag == 1)
		{
			if ((strcmp(chr_l_trcode_a,"2") == 0) || (strcmp(chr_l_trcode_a,"4") == 0) || (strcmp(chr_l_trcode_a,"8") == 0))
			{
				if (strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind,"Y") == 0)
				{
					if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"N") == 0)
					{
						if (APL_FAILURE == DL_Mod_RecHisSafe_LocY_RegN(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr,&h_traderst,&i_traderst))
						{
							APL_GOBACK_FAIL
						}
						
						
						strcpy(chr_mainfuncarea, "TRD_PMT_CHK");
						strcpy(chr_l_condid, "RU_REG_CHK");
						int_l_condexists = 0;

						memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf(chr_l_buf, "Before Cntrycond check");
							 CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, NULL);



						if ( APL_SUCCESS == CO_Chk_CntryEnabled( chr_mainfuncarea,
                                             chr_l_condid,
                                             &int_l_condexists,
                                             l_debug_info_ptr ))
						{
							memset(chr_l_buf, NULL, BUFFER_LEN);
      					sprintf(chr_l_buf, "Entered into Trcode = 2");
							CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, NULL);

								if ( int_l_condexists > 0 )
								{
									if (APL_FAILURE == CRUDBStlRecLoc_YReg_NFn(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr,&h_traderst,&i_traderst))						
									{
										APL_GOBACK_FAIL
                  			}
		
								}			
						}
						
					}
					else if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"Y") == 0)
					{		
						if (APL_FAILURE == DL_Mod_RecHisSafe_LocY_RegY(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr))
						{
							APL_GOBACK_FAIL
						}
					}
				}
				else if (strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind,"N") == 0)
				{
					if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"N") == 0)
					{
						if (APL_FAILURE == DL_Mod_RecHisSafe_LocN_RegN(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr,&h_traderst,&i_traderst))
						{
							APL_GOBACK_FAIL
						}
					}
					else if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"Y") == 0)
					{		
						if (APL_FAILURE == DL_Mod_RecHisSafe_LocN_RegY(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr))
						{
							APL_GOBACK_FAIL
						}
					}
				}
			}
			else if ((strcmp(chr_l_trcode_a,"1") == 0) || (strcmp(chr_l_trcode_a,"3") == 0) || (strcmp(chr_l_trcode_a,"7") == 0))
			{
				if (strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind,"Y") == 0)
				{
					if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"N") == 0)
					{
						if (APL_FAILURE == DL_Mod_DelHisSafe_LocY_RegN(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr,&h_traderst,&i_traderst))
						{
							APL_GOBACK_FAIL
						}
					   

                  strcpy(chr_mainfuncarea, "TRD_PMT_CHK");
                  strcpy(chr_l_condid, "RU_REG_CHK");
                  int_l_condexists = 0;

                  if ( APL_SUCCESS == CO_Chk_CntryEnabled( chr_mainfuncarea,
                                             chr_l_condid,
                                             &int_l_condexists,
                                             l_debug_info_ptr ))
                  {

							memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf(chr_l_buf, "Entered into Trcode = 3");
                     CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, NULL);

                        if ( int_l_condexists > 0 )
                        {
                           if (APL_FAILURE == CRUDBStlDelLoc_YReg_NFn(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr,&h_traderst,&i_traderst))
                  			{
                     			APL_GOBACK_FAIL
                  			}	
								}
						}
						
					}
					else if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"Y") == 0)
					{
						if (APL_FAILURE == DL_Mod_DelHisSafe_LocY_RegY(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr))
						{
							APL_GOBACK_FAIL
						}
					}

				}
				else if (strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind,"N") == 0)
				{
					if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"N") == 0)
					{
						if (APL_FAILURE == DL_Mod_DelHisSafe_LocN_RegN(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr,&h_traderst,&i_traderst))
						{
							APL_GOBACK_FAIL
						}
					}
					else if (strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind,"Y") == 0)
					{
						if (APL_FAILURE == DL_Mod_DelHisSafe_LocN_RegY(p_ptr_log_file, &l_sys_dl_deal_struct_hb, &l_sys_dl_deal_struct_il, chr_l_sys_date, p_intl_env_data_struct_h_d, l_debug_info_ptr))
						{
							APL_GOBACK_FAIL
						}
					}
				}
			}
		}

		if (int_l_flag==0)
		{
			sqlca.sqlcode = 0;
			EXEC SQL UPDATE DL_DEAL
			SET MOD_HISPOS_IND = NULL,
			 MOD_HISPOS_DATE = :chr_l_sys_date
			WHERE client = :l_sys_dl_deal_struct_hb.h_dl_client
			AND   IDENTIY_NO = :l_sys_dl_deal_struct_hb.h_indentity_no;
		}
		else
		{
			sqlca.sqlcode = 0;
			
			EXEC SQL UPDATE DL_DEALRST
			SET MOD_HISPOS_IND = NULL
			WHERE client = :h_traderst.h_dl_client
			AND   IDENTIY_NO = :h_traderst.h_indentity_no;
			
		}

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
		IS_ANY_ORA_ERROR
		
		if (int_l_flag == 0)
		{
			EXEC SQL OPEN TradeRecs;
			if (strlen(chr_l_prev_acct) && strlen(chr_l_prev_instrcode))
			{
				if ((strcmp(l_sys_dl_deal_struct_hb.h_dl_client,chr_l_prev_acct) == 0) && (strcmp(l_sys_dl_deal_struct_hb.h_instr_code,chr_l_prev_instrcode) == 0));
				else
				{
					sqlca.sqlcode = 0;
					//EXEC SQL INSERT INTO CABACKSETTLE VALUES (:chr_l_sys_date,:chr_l_prev_acct,:chr_l_prev_instrcode,:chr_l_prev_instr_dt); Commented by Kalyan
					EXEC SQL INSERT INTO CABACKSETTLE VALUES (:chr_l_sys_date,:chr_l_prev_acct,:chr_l_prev_instrcode,:chr_l_prev_instr_dt,:l_sys_dl_deal_struct_hb.h_indentity_no); //Added by Kalyan
       			if (sqlca.sqlcode == 00001)
       			{

                          			/* Added BY Kalyan */
                          			EXEC SQL UPDATE
                                          		CABACKSETTLE
                                  		SET
                                          		IDENTITY_NO=IDENTITY_NO||','||:l_identity_no
                                  		WHERE
                                          		INSTR_CODE=:chr_l_prev_instrcode AND
                                          		DEALDT=:chr_l_sys_date AND
                                          		CLIENT=:chr_l_prev_acct;

                          			IS_ANY_ORA_ERROR

                          			/* Till Here */
            					//fprintf(p_ptr_log_file, "Record already exist in abacksetl. Not inserted. Account=%s Instrode=%s InstrDt=%s\n",chr_l_prev_acct,chr_l_prev_instrcode,chr_l_prev_instr_dt);
            					fprintf(p_ptr_log_file, "Record already exist in abacksetl, so updated. Account=%s Instrode=%s InstrDt=%s\n",chr_l_prev_acct,chr_l_prev_instrcode,chr_l_prev_instr_dt); //Added By Kalyan
            		IS_ANY_ORA_ERROR
       			}
				}
			}
			strcpy(chr_l_prev_acct,l_sys_dl_deal_struct_hb.h_dl_client);
			strcpy(chr_l_prev_instrcode,l_sys_dl_deal_struct_hb.h_instr_code);
			strcpy(chr_l_prev_instr_dt,l_sys_dl_deal_struct_hb.h_instrdate);
			strcpy(chr_l_prev_refno,l_sys_dl_deal_struct_hb.h_indentity_no);
		}
		else
		{
			
			EXEC SQL OPEN TrdRstRecs;
			if (strlen(chr_l_prev_acct) && strlen(chr_l_prev_instrcode))
			{
				if ((strcmp(h_traderst.h_dl_client,chr_l_prev_acct) == 0) && (strcmp(h_traderst.h_instr_code,chr_l_prev_instrcode) == 0));
				else
				{
					sqlca.sqlcode = 0;
					//EXEC SQL INSERT INTO CABACKSETTLE VALUES (:chr_l_sys_date,:chr_l_prev_acct,:chr_l_prev_instrcode,:chr_l_prev_instr_dt);
					EXEC SQL INSERT INTO CABACKSETTLE VALUES (:chr_l_sys_date,:chr_l_prev_acct,:chr_l_prev_instrcode,:chr_l_prev_instr_dt,:h_traderst.h_indentity_no);
       			if (sqlca.sqlcode == 00001)
       			{
                          			/* Added BY Kalyan */
                          			EXEC SQL UPDATE
                                          		CABACKSETTLE
                                  		SET
                                          		IDENTITY_NO=IDENTITY_NO||','||:l_identity_no
                                  		WHERE
                                          		INSTR_CODE=:chr_l_prev_instrcode AND
                                          		DEALDT=:chr_l_sys_date AND
                                          		CLIENT=:chr_l_prev_acct;

                          			IS_ANY_ORA_ERROR

                         			/* Till Here */
            					//fprintf(p_ptr_log_file, "Record already exist in abacksetl. Not inserted. Account=%s Instrode=%s InstrDt=%s\n",chr_l_prev_acct,chr_l_prev_instrcode,chr_l_prev_instr_dt);
            					fprintf(p_ptr_log_file, "Record already exist in cabacksetl. so updated. Account=%s Instrode=%s InstrDt=%s\n",chr_l_prev_acct,chr_l_prev_instrcode,chr_l_prev_instr_dt); //Added by Kalyan
            		IS_ANY_ORA_ERROR
       			}
				}
			}
			strcpy(chr_l_prev_acct,h_traderst.h_dl_client);
			strcpy(chr_l_prev_instrcode,h_traderst.h_instr_code);
			strcpy(chr_l_prev_instr_dt,h_traderst.h_instrdate);
			strcpy(chr_l_prev_refno,h_traderst.h_indentity_no);
			
		}

		CO_ProcMonitor(p_ptr_log_file,"Completed Processing for ",NULL,p_intl_env_data_struct_h_d);
		CO_ProcMonitor(p_ptr_log_file,chr_l_prev_acct,NULL,p_intl_env_data_struct_h_d);
		CO_ProcMonitor(p_ptr_log_file,chr_l_prev_refno,NULL,p_intl_env_data_struct_h_d);
		CO_ProcMonitor(p_ptr_log_file,"\n",NULL,p_intl_env_data_struct_h_d);

		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "Processed %d records", int_l_reccount);

		sqlca.sqlcode = 0;
		EXEC SQL UPDATE SYS_BATCHPROC
		SET STAT_DET = :chr_l_buf
		WHERE process_name = :argv[0]
		AND   proc_init = :argv[1]
		AND STARTDATE = :argv[2]
		AND status = 'started';

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

		EXEC SQL COMMIT WORK;
		IS_ANY_ORA_ERROR

		CO_ProcMonitor(p_ptr_log_file, "Record Committed", NULL, NULL);

	}

	EXEC SQL CLOSE TradeRecs;
	EXEC SQL CLOSE TrdRstRecs;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Proc_BkSetl successfully\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Proc_BkSetl failure\n",NULL,p_intl_env_data_struct_h_d);

		return(APL_FAILURE);
	}
}


 
int CO_Proc_BtchLock(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca					sqlca;
   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;

	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion CO_Proc_BtchLock\n",NULL,NULL);

	EXEC SQL SELECT processing_status INTO :chr_g_restart_data:g_restart_data_i
	FROM SYS_BATCHPROC
	WHERE process_name = :argv[0]
	AND   proc_init = :argv[1]
	AND STARTDATE = :argv[2]
	AND status = 'started'
	FOR UPDATE OF processing_status,status;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_BtchLock\n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_BtchLock\n",NULL,NULL);

		return(APL_FAILURE);
	}
}


 
int CO_Proc_Exit(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,int p_flg)
{
	struct sqlca					sqlca;

	sqlca.sqlcode = 0;
		
		CO_ProcMonitor(p_ptr_log_file,"Entered processtion CO_Proc_Exit\n",NULL,NULL);
		fprintf(p_ptr_log_file,"Flag=|%d|\n",p_flg);


	if (p_flg == 0)
	{
		//fprintf(p_ptr_log_file,"Before Error Check\n",p_flg);AIX Warning Removal changes
		fprintf(p_ptr_log_file,"Before Error Check\n");
/*		if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
			APL_GOBACK_FAIL
		fprintf(p_ptr_log_file,"After  Error Check\n",p_flg);
*/		
		fprintf(p_ptr_log_file,"before Query Error=|%d|\n",sqlca.sqlcode);
		EXEC SQL UPDATE SYS_BATCHPROC
		SET status = 'completed'
		WHERE process_name = :argv[0]
		AND   proc_init = :argv[1]
		AND STARTDATE = :argv[2]
		AND status = 'started';
		fprintf(p_ptr_log_file,"After Query Error=|%d|\n",sqlca.sqlcode);

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
		fprintf(p_ptr_log_file,"Before Commit\n");
		EXEC SQL COMMIT WORK RELEASE;
		fprintf(p_ptr_log_file,"After Commit Error=|%d| Flag=|%d|\n",sqlca.sqlcode,p_flg);
	}
	else if (p_flg == 1)
	{
		fprintf(p_ptr_log_file,"Before Commit Error=|%d|\n",sqlca.sqlcode);
		EXEC SQL ROLLBACK WORK RELEASE;
		fprintf(p_ptr_log_file,"After Commit Error=|%d|\n",sqlca.sqlcode);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_Exit\n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
			CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CO_Proc_Exit\n",NULL,NULL);

		return(APL_FAILURE);
	}
}


 
int CO_DB_Connection_A(char *p_username,char *p_passwd,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca					sqlca;

	sqlca.sqlcode = 0;
		
	EXEC SQL CONNECT :p_username IDENTIFIED BY :p_passwd;

	IS_ANY_ORA_ERROR

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		return(APL_FAILURE);
	}
}	



 
int CO_Proc_Commit(void)
{
	struct sqlca					sqlca;

	sqlca.sqlcode = 0;
		
	EXEC SQL COMMIT WORK;

	if (sqlca.sqlcode != 0)
		APL_GOBACK_FAIL

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		return(APL_FAILURE);
	}
}	




int CRUDBStlRecLoc_YReg_NFn(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a,char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,SYS_EODTRDRST_STRUCT_H *p_dealrst_struct_h,SYS_EODTRDRST_STRUCT_I *p_dealrst_struct_i)
{
   struct sqlca               sqlca;
	DL_RUHISSAFEK_STRUCT_H			l_dl_ruhissafek_struct_h;
   DL_RUHISSAFEK_STRUCT_I      l_dl_ruhissafek_struct_i;
   char  chr_l_instr_dt[APL_DATE_LEN];
   char  chr_l_rowid_A[APL_ROWID_LEN];
   int int_date_diff  = 0;
	int int_l_sign = 0;
   int int_l_hol_exists = 0;
	double l_cruquantity = 0;
	short	i_l_rowid_A=0;
	
	char   chr_lstregno[21];	

   
   char  chr_l_client_a[APL_CLIENT_LENGTH]   =  APL_NULL_STRING;
   char  chr_l_refno_a[APL_REFNO_LENGTH]   =  APL_NULL_STRING;
   char  chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]     =  APL_NULL_STRING;
   char  chr_l_locncode_c[APL_LOCNCODE_LENGTH]    =  APL_NULL_STRING;
   double l_quantity   = 0;


   if (p_sys_dl_deal_struct_h_c != (SYS_DL_DEAL_STRUCT_H *)NULL)
   {
      strcpy(chr_l_client_a, p_sys_dl_deal_struct_h_c->h_dl_client);
      strcpy(chr_l_refno_a,   p_sys_dl_deal_struct_h_c->h_indentity_no);
      strcpy(chr_l_instrcode_a,  p_sys_dl_deal_struct_h_c->h_instr_code);
      strcpy(chr_l_locncode_c,p_sys_dl_deal_struct_h_c->h_loccode);
      l_quantity = p_sys_dl_deal_struct_h_c->h_qty;
      strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
		int_l_sign = 1;
   }
   else
   {
      strcpy(chr_l_client_a,p_dealrst_struct_h->h_dl_client);
      strcpy(chr_l_refno_a,   p_dealrst_struct_h->h_indentity_no);
      strcpy(chr_l_instrcode_a,p_dealrst_struct_h->h_instr_code);
      strcpy(chr_l_locncode_c,p_dealrst_struct_h->h_loccode);
      l_quantity = p_dealrst_struct_h->h_qty;
      strcpy(chr_l_instr_dt,p_dealrst_struct_h->h_instrdate);
		int_l_sign = -1;
   }
   
	

	EXEC SQL VAR l_dl_ruhissafek_struct_h.h_dl_client IS STRING;
   EXEC SQL VAR l_dl_ruhissafek_struct_h.h_instr_code IS STRING;
   EXEC SQL VAR l_dl_ruhissafek_struct_h.h_loccode IS STRING;
	EXEC SQL VAR l_dl_ruhissafek_struct_h.h_st_reg_no IS STRING;

	EXEC SQL VAR chr_lstregno IS STRING;  

	sqlca.sqlcode = 0;

      CO_ProcMonitor(p_ptr_log_file,"Entered processtion CRUDBStlRecLoc_YReg_NFn \n",NULL,p_intl_env_data_struct_h_d);

   CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

	EXEC SQL DECLARE cur_streg CURSOR FOR SELECT
	ST_REG_NO , QTY FROM DL_RUDEAL WHERE client = :chr_l_client_a
	AND IDENTIY_NO = :chr_l_refno_a ;

   while (int_date_diff > 0)
   {
      if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
      {
         APL_GOBACK_FAIL
      }

      if (int_l_hol_exists == 0)
      {

				EXEC SQL OPEN cur_streg;
				while (1)
				{
					EXEC SQL FETCH cur_streg INTO :chr_lstregno, :l_cruquantity ;

					if (sqlca.sqlcode == 1403) break;

					IS_ANY_ORA_ERROR;
			
					memset(&l_dl_ruhissafek_struct_h,NULL,sizeof(DL_RUHISSAFEK_STRUCT_H));
      			memset(&l_dl_ruhissafek_struct_i,NULL,sizeof(DL_RUHISSAFEK_STRUCT_I));
      			strcpy(chr_l_rowid_A,APL_NULL_STRING);

                  EXEC SQL SELECT A.*,A.rowid INTO :l_dl_ruhissafek_struct_h:l_dl_ruhissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
                  FROM DL_RUHISSAFEK A
                  WHERE A.POSIT_DATE   = :chr_l_instr_dt                  AND
                        A.client  = :chr_l_client_a  AND
                        A.instr_code   = :chr_l_instrcode_a   AND
                        A.location_cd = :chr_l_locncode_c AND
								A.ST_REG_NO  = :chr_lstregno;

						IS_ANY_ORA_ERROR

						if (APL_ZERO_RESULT_SET)
						{
							strcpy(l_dl_ruhissafek_struct_h.h_positdate,chr_l_instr_dt);
                     strcpy(l_dl_ruhissafek_struct_h.h_dl_client,chr_l_client_a);
                     strcpy(l_dl_ruhissafek_struct_h.h_instr_code,chr_l_instrcode_a);
                     strcpy(l_dl_ruhissafek_struct_h.h_loccode,chr_l_locncode_c);
				         strcpy(l_dl_ruhissafek_struct_h.h_st_reg_no,chr_lstregno);
							
							l_dl_ruhissafek_struct_h.h_safekeep_pos = l_cruquantity * int_l_sign;
 					      l_dl_ruhissafek_struct_h.h_val_rec =  0;
                     l_dl_ruhissafek_struct_h.h_val_del =  0;

							l_dl_ruhissafek_struct_i.i_positdate = 0;
							l_dl_ruhissafek_struct_i.i_dl_client       = 0;
                     l_dl_ruhissafek_struct_i.i_instr_code        = 0;
                     l_dl_ruhissafek_struct_i.i_loccode      = 0;
				         l_dl_ruhissafek_struct_i.i_st_reg_no      = 0;
							l_dl_ruhissafek_struct_i.i_safekeep_pos         = 0;
				         l_dl_ruhissafek_struct_i.i_val_rec       = 0;
                     l_dl_ruhissafek_struct_i.i_val_del       = 0;

							sqlca.sqlcode = 0;

							EXEC SQL INSERT INTO DL_RUHISSAFEK VALUES (:l_dl_ruhissafek_struct_h:l_dl_ruhissafek_struct_i);

                     IS_ANY_ORA_ERROR
                  }
                  else
                  {
							sqlca.sqlcode = 0; 

                     EXEC SQL UPDATE DL_RUHISSAFEK
                     SET safekeep_pos = NVL(safekeep_pos,0) + (:l_cruquantity  * :int_l_sign)
                     WHERE rowid = :chr_l_rowid_A;

                     IS_ANY_ORA_ERROR
                  }
				}
				
				EXEC SQL CLOSE cur_streg;
		}
		int_l_hol_exists = 0;
		EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

 		IS_ANY_ORA_ERROR

		CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
   }

	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
         CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CRUDBStlRecLoc_YReg_NFn successfully\n",NULL,p_intl_env_data_struct_h_d);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
         CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CRUDBStlRecLoc_YReg_NFn failure\n",NULL,p_intl_env_data_struct_h_d);

      return(APL_FAILURE);
   }
}




int CRUDBStlDelLoc_YReg_NFn(FILE *p_ptr_log_file,SYS_DL_DEAL_STRUCT_H *p_sys_dl_deal_struct_h_c,SYS_DL_DEAL_STRUCT_I *p_sys_dl_deal_struct_i_a, char *p_sysdate,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,SYS_EODTRDRST_STRUCT_H *p_dealrst_struct_h,SYS_EODTRDRST_STRUCT_I *p_dealrst_struct_i)
{
   struct sqlca               sqlca;
   DL_RUHISSAFEK_STRUCT_H       l_dl_ruhissafek_struct_h;
   DL_RUHISSAFEK_STRUCT_I      l_dl_ruhissafek_struct_i;
   char  chr_l_instr_dt[APL_DATE_LEN];
   char  chr_l_rowid_A[APL_ROWID_LEN];
   int int_date_diff  = 0;
   int int_l_hol_exists = 0;
	int int_l_sign = 0;
	short	i_l_rowid_A=0;
	
	double l_cruquantity = 0;

	char chr_lstregno[21];  

   
   char  chr_l_client_a[APL_CLIENT_LENGTH]   =  APL_NULL_STRING;
   char  chr_l_refno_a[APL_REFNO_LENGTH]   =  APL_NULL_STRING;
   char  chr_l_instrcode_a[APL_INSTRUMENTCODE_LEN]     =  APL_NULL_STRING;
   char  chr_l_locncode_c[APL_LOCNCODE_LENGTH]    =  APL_NULL_STRING;
   double l_quantity   = 0;


   if (p_sys_dl_deal_struct_h_c != (SYS_DL_DEAL_STRUCT_H *)NULL)
   {
      strcpy(chr_l_client_a, p_sys_dl_deal_struct_h_c->h_dl_client);
		strcpy(chr_l_refno_a,   p_sys_dl_deal_struct_h_c->h_indentity_no);
      strcpy(chr_l_instrcode_a,  p_sys_dl_deal_struct_h_c->h_instr_code);
      strcpy(chr_l_locncode_c,p_sys_dl_deal_struct_h_c->h_loccode);
      l_quantity = p_sys_dl_deal_struct_h_c->h_qty;
      strcpy(chr_l_instr_dt,p_sys_dl_deal_struct_h_c->h_instrdate);
		int_l_sign = 1;
   }
   else
   {
      strcpy(chr_l_client_a,p_dealrst_struct_h->h_dl_client);
		strcpy(chr_l_refno_a,   p_dealrst_struct_h->h_indentity_no);
      strcpy(chr_l_instrcode_a,p_dealrst_struct_h->h_instr_code);
      strcpy(chr_l_locncode_c,p_dealrst_struct_h->h_loccode);
      l_quantity = p_dealrst_struct_h->h_qty;
      strcpy(chr_l_instr_dt,p_dealrst_struct_h->h_instrdate);
		int_l_sign = -1;
   }
   

	EXEC SQL VAR chr_lstregno IS STRING;  

   EXEC SQL VAR l_dl_ruhissafek_struct_h.h_dl_client IS STRING;
   EXEC SQL VAR l_dl_ruhissafek_struct_h.h_instr_code IS STRING;
   EXEC SQL VAR l_dl_ruhissafek_struct_h.h_loccode IS STRING;
   EXEC SQL VAR l_dl_ruhissafek_struct_h.h_st_reg_no IS STRING;

   sqlca.sqlcode = 0;

      CO_ProcMonitor(p_ptr_log_file,"Entered processtion CRUDBStlDelLoc_YReg_NFn \n",NULL,p_intl_env_data_struct_h_d);

   CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);

   EXEC SQL DECLARE cur_streg CURSOR FOR SELECT 
   ST_REG_NO, QTY  FROM DL_RUDEAL WHERE client = :chr_l_client_a
   AND IDENTIY_NO = :chr_l_refno_a;

   while (int_date_diff > 0)
   {
      if (APL_FAILURE == CO_Chk_Holiday(chr_l_instr_dt,&int_l_hol_exists,l_debug_info_ptr,p_sys_dl_deal_struct_h_c->h_exch_code))
      {
         APL_GOBACK_FAIL
      }

      if (int_l_hol_exists == 0)
      {

           EXEC SQL OPEN cur_streg;
            while (1)
            {
				
               EXEC SQL FETCH cur_streg INTO :chr_lstregno, :l_cruquantity ;

				if (sqlca.sqlcode == 1403) break;					

					IS_ANY_ORA_ERROR

               memset(&l_dl_ruhissafek_struct_h,NULL,sizeof(DL_RUHISSAFEK_STRUCT_H));
               memset(&l_dl_ruhissafek_struct_i,NULL,sizeof(DL_RUHISSAFEK_STRUCT_I));
               strcpy(chr_l_rowid_A,APL_NULL_STRING);

                  EXEC SQL SELECT A.*,A.rowid INTO :l_dl_ruhissafek_struct_h:l_dl_ruhissafek_struct_i,chr_l_rowid_A:i_l_rowid_A
                  FROM DL_RUHISSAFEK A
                  WHERE A.POSIT_DATE   = :chr_l_instr_dt                  AND
                        A.client  = :chr_l_client_a  AND
                        A.instr_code   = :chr_l_instrcode_a   AND
								A.location_cd = :chr_l_locncode_c AND
                        A.ST_REG_NO  = :chr_lstregno;

                  IS_ANY_ORA_ERROR

                  if (APL_ZERO_RESULT_SET)
                  {
                     strcpy(l_dl_ruhissafek_struct_h.h_positdate,chr_l_instr_dt);
                     strcpy(l_dl_ruhissafek_struct_h.h_dl_client,chr_l_client_a);
                     strcpy(l_dl_ruhissafek_struct_h.h_instr_code,chr_l_instrcode_a);
                     strcpy(l_dl_ruhissafek_struct_h.h_loccode,chr_l_locncode_c);
                     strcpy(l_dl_ruhissafek_struct_h.h_st_reg_no,chr_lstregno);
							
							l_dl_ruhissafek_struct_h.h_safekeep_pos = (-1) * l_cruquantity * int_l_sign;
                     l_dl_ruhissafek_struct_h.h_val_rec =  0;
                     l_dl_ruhissafek_struct_h.h_val_del =  0;

                     l_dl_ruhissafek_struct_i.i_positdate = 0;
                     l_dl_ruhissafek_struct_i.i_dl_client       = 0;
                     l_dl_ruhissafek_struct_i.i_instr_code        = 0;
                     l_dl_ruhissafek_struct_i.i_loccode      = 0;
                     l_dl_ruhissafek_struct_i.i_st_reg_no      = 0;
                     l_dl_ruhissafek_struct_i.i_safekeep_pos         = 0;
                     l_dl_ruhissafek_struct_i.i_val_rec       = 0;
                     l_dl_ruhissafek_struct_i.i_val_del       = 0;

                     sqlca.sqlcode = 0;

                     EXEC SQL INSERT INTO DL_RUHISSAFEK VALUES (:l_dl_ruhissafek_struct_h:l_dl_ruhissafek_struct_i);

                     IS_ANY_ORA_ERROR
                  }
                  else
                  {
							sqlca.sqlcode = 0; 

                     EXEC SQL UPDATE DL_RUHISSAFEK
                     SET safekeep_pos = NVL(safekeep_pos,0) - (:l_cruquantity  * :int_l_sign)
                     WHERE rowid = :chr_l_rowid_A;

                     IS_ANY_ORA_ERROR
                  }
            }

            EXEC SQL CLOSE cur_streg;
      }
		
		int_l_hol_exists = 0;
      EXEC SQL SELECT TO_CHAR(TO_DATE(:chr_l_instr_dt)+1) INTO :chr_l_instr_dt FROM DUAL;

      IS_ANY_ORA_ERROR

      CO_Pro_DateComp(chr_l_instr_dt,p_sysdate,&int_date_diff,l_debug_info_ptr);
   }

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
         CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CRUDBStlDelLoc_YReg_NFn successfully\n",NULL,p_intl_env_data_struct_h_d);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
         CO_ProcMonitor(p_ptr_log_file,"Leaving processtion CRUDBStlDelLoc_YReg_NFn failure\n",NULL,p_intl_env_data_struct_h_d);

      return(APL_FAILURE);
   }
}
				
