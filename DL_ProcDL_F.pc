

#include "CO_HostStructdef.h"

#define S_CODE_LENGTH            21
#define S_CODE_VAL_LENGTH        5
#define S_SECTRCODE_LEN			4
#define S_VALIDNOTE1				"S00000"
#define S_VALIDNOTE2				"M00000"
#define S_VERWITH_NOTE1			"EPT"
#define S_VERWITH_NOTE2       "EVI"
#define S_OURTHEIR_O				'O'
#define S_OURTHEIR_T				'T'
#define S_SECTOR1					"7"
#define S_SECTOR2					"6"
#define S_CUBKA					'A'


EXEC SQL INCLUDE SQLCA.H;







int CRUDBAvailPosnFn(char *p_client,
							char *p_instrcode,
							char *p_locncode,
							char p_incconf,
							double *p_availqty,
							char 	*p_statregno,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr );

int CRUDBUpdtPosnFn(char *p_client, 
						char *p_mt_instrument_struct_h, 
						char *p_location, 
						char *p_posnstatus, 
						char p_postype, 
						char p_trcode, 
						double *p_qty, 
						char p_incdec, 
						char 	*p_statregno,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

int CRUDBUpdPmtDetFn(DL_DEAL_PMTDET_STRUCT_H *p_dl_deal_pmtdet_struct_h_d, 
							char					 *srn_param_str,
							INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr ) 
{

	struct sqlca sqlca;
	short 	int_l_error_flg = APL_SUCCESS, 
				l_locrefnoexists = 0,
				int_l_condexists = 0,
				l_i_access_stamp = 0,
				l_i_maker = 0,
				l_i_checker = 0,
				l_i_TrCode = 0,
				l_i_trdqty = 0,
				l_i_trdamt = 0,
				l_i_domcpac = 0,
				l_i_countacc = 0,
				l_i_instr_code = 0,
				l_i_locncode = 0,
				l_i_ccycode = 0,
				l_i_trdt = 0,
				l_i_ourtheir = 0,
				l_i_cubk = 0, 
				l_i_rowid = 0,
				l_i_posn_status = 0,
				l_i_CSD = 0,
				l_i_trdfromord = 0,
				l_i_failcode = 0,
				l_i_ccy_decimallen = 0, 
				l_i_minfmttrdqty = 0,
				l_i_typeofinstr = 0,
				l_i_temp_qty = 0,
				l_i_brkcomm	=	0,
				l_i_cashaccount = 0,
				l_i_allow_partials = 0,
				int_l_rowexists = 0;
	short    l_i_subfailcode=0; 
	short    l_i_typeoftrd=0; 
    
	char	 	chr_l_fieldname[21], 
				chr_l_h_access_stamp[APL_DATE_LEN], 
				chr_l_h_trcode[APL_FLAG_LENGTH], 
				chr_l_h_rowid[APL_ROWID_LEN],
				chr_mainfuncarea[APL_MAINFUNCAREA_LEN], 
				chr_l_condid[APL_CONDID_LEN],
				chr_l_h_countacc_a[APL_COUNTACC_LEN], 
				chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN], 
				chr_l_h_locncode_a[APL_LOCNCODE_LENGTH], 
				chr_l_h_ccycode[APL_CCYCODE_LEN],
				chr_l_accpartialflg[APL_FLAG_LENGTH], 
				chr_l_h_trdt_a[APL_DATE_LEN],
				chr_l_h_maker[APL_USERID_LEN], 
				chr_l_h_checker[APL_USERID_LEN],
				chr_l_h_trdfromord[APL_FLAG_LENGTH], 
				int_l_h_failcode[FAILREAS_CD_LEN],
				chr_l_h_posn_status[STATUS_POS_LEN], 
				chr_l_postype[4],
				chr_l_clscode[CLSCD_LEN], 
				chr_l_curr_date_time[APL_DATE_LEN],
				chr_l_h_csd[APL_DATE_LEN], 
				chr_l_h_domcpac[APL_CLIENT_LENGTH],
				chr_l_h_cubk[APL_FLAG_LENGTH], 
				chr_l_h_ourtheir[APL_FLAG_LENGTH],
				chr_l_h_typeofinstr[TYPEOF_INSTR_LEN],
				chr_l_trcodeinstrflg_a[APL_FLAG_LENGTH],
				chr_l_custnote_a[71],
				chr_l_trade_status[APL_STATUS_LEN],
				chr_l_buf[BUFFER_LEN],
				chr_l_subfunc_b[APL_MAINFUNCAREA_LEN],  
            chr_l_fieldval[APL_MAINFUNCAREA_LEN],
				chr_l_h_codetype[S_CODE_LENGTH],
				chr_l_h_codeval[S_CODE_VAL_LENGTH],
				chr_l_h_countrycode[APL_CTRY_CODE_LEN],
				chr_l_h_cashclient[APL_CLIENT_LENGTH],
				chr_lrefno[17] = APL_NULL_STRING,
				chr_l_instrloc[20] = APL_NULL_STRING,   
				chr_l_allow_partials[APL_FLAG_LENGTH],
				l_block_type[5]	=	APL_NULL_STRING;
	double 	l_h_trdamount = 0, 
				l_h_trdquantity = 0, 
				l_mod_dealposn = 0, 
				l_h_brokercomm	=	0,
				l_CurrPosn = 0, 
				l_TempPosn = 0, 
				l_cost = 0,
				l_round_cost = 0,
				l_round_quantity = 0,
				l_h_minfmttrdquantity = 0,
				l_round_amount = 0,
				l_h_temp_quantity=0.0,
				l_h_temp_quantity_rnd=0.0,
				l_round_gramount = 0,
				lamount = 0,
				l_newamount = 0,
				chr_l_val = 0.0;  
	int 		int_l_datecmp = 0, 
				int_l_trdrepseqnum = 0, 
				int_l_hol_exist = 0,
				int_l_enufvdp = APL_SUCCESS,
				int_l_h_ccy_decimallen = 0,
				int_l_exists_a = 0;
	int      int_l_h_subfailcode=0; 
	int      int_l_dummy=0,i = 0;
	int      int_l_ruclscodechk=0; 

	short    int_retval	=	0;
	char     chr_l_temp_note1[261] = APL_NULL_STRING;

	char    chr_l_h_typeoftrd[3]     = APL_NULL_STRING;
	
	char chr_l_h_sectrcode[S_SECTRCODE_LEN];
	int int_l_h_count = 0;
	short l_i_sectrcode = 0;
	short l_i_count = 0;
	
	char h_classcd[CLSCD_LEN]=APL_NULL_STRING;
	short l_flag_ru = 0; 

	char **chr_l_param=NULL;
	char *chr_posofspace_A=(char *)NULL;
	char chr_h_srnregno[21]=APL_NULL_STRING;
	double 	h_qty = 0;
	short i_srnregno = 0;
	short i_qty = 0;
	int  int_noelem = 0,int_nlen = 0;
	char chr_l_cubk_exttrd[2] = APL_NULL_STRING;

	DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_ha = NULL;
	SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_hj = NULL;
	INTL_ENV_DATA_STRUCT_H *l_intl_envdata_struct_h = NULL;
	DEAL_RU_STRUCT_H l_deal_ru_struct_h;
	short 		l_ext_trd_check = 0;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	sqlca.sqlcode = 0;

   
   G_SYS_ACCOUNT_LEN = 10;

	EXEC SQL VAR h_classcd IS STRING;
		
	strcpy(chr_l_fieldname, APL_NULL_STRING);
	strcpy(chr_l_h_access_stamp, APL_NULL_STRING);
	strcpy(chr_l_h_trcode, APL_NULL_STRING);
	strcpy(chr_l_h_rowid, APL_NULL_STRING);
	strcpy(chr_mainfuncarea, APL_NULL_STRING);
	strcpy(chr_l_condid, APL_NULL_STRING);
	strcpy(chr_l_h_countacc_a, APL_NULL_STRING);
	strcpy(chr_l_h_instrcode_A, APL_NULL_STRING);
	strcpy(chr_l_h_locncode_a, APL_NULL_STRING);
	strcpy(chr_l_h_ccycode, APL_NULL_STRING);
	strcpy(chr_l_accpartialflg, APL_NULL_STRING);
	strcpy(chr_l_h_trdt_a, APL_NULL_STRING);
	strcpy(chr_l_h_maker, APL_NULL_STRING);
	strcpy(chr_l_h_checker, APL_NULL_STRING);
	strcpy(chr_l_h_trdfromord, APL_NULL_STRING);
	strcpy(int_l_h_failcode, APL_NULL_STRING);
	strcpy(chr_l_h_posn_status, APL_NULL_STRING);
	strcpy(chr_l_postype, APL_NULL_STRING);
	strcpy(chr_l_clscode, APL_NULL_STRING);
	strcpy(chr_l_curr_date_time, APL_NULL_STRING);
	strcpy(chr_l_h_csd, APL_NULL_STRING);
	strcpy(chr_l_h_domcpac, APL_NULL_STRING);
	strcpy(chr_l_h_cubk, APL_NULL_STRING);
	strcpy(chr_l_h_ourtheir, APL_NULL_STRING);
	strcpy(chr_l_h_typeofinstr, APL_NULL_STRING);
	strcpy(chr_l_custnote_a, APL_NULL_STRING);
	strcpy(chr_l_trcodeinstrflg_a, APL_NULL_STRING);
	strcpy(chr_l_trade_status, APL_NULL_STRING);
	strcpy(chr_l_buf, APL_NULL_STRING);
	strcpy(chr_l_subfunc_b,APL_NULL_STRING);
	strcpy(chr_l_fieldval,APL_NULL_STRING);
	strcpy(chr_l_h_cashclient,APL_NULL_STRING);
	
	strcpy(chr_l_h_sectrcode,APL_NULL_STRING);
	strcpy(chr_l_h_codeval,APL_NULL_STRING);
	strcpy(chr_l_h_codetype,APL_NULL_STRING);
	strcpy(chr_l_h_countrycode,APL_NULL_STRING);
	

	
	
	APL_IF_DEBUG
	{
		CO_ProcMonitor(	APL_OUT_FILE,
						"Entering Function DL_Mod_DLPmt\n",
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Account is : %s\n", 
						p_dl_deal_pmtdet_struct_h_d->h_dl_client );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Ref. Number is : %s\n", 
						p_dl_deal_pmtdet_struct_h_d->h_indentity_no );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Conf. Date is : %s\n", 
						p_dl_deal_pmtdet_struct_h_d->h_confdate );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"Verified With : %s\n", 
						p_dl_deal_pmtdet_struct_h_d->h_verfied_with );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Difference Amt is : %f\n", 
						p_dl_deal_pmtdet_struct_h_d->h_diffamount );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Wording is : %s\n", 
						p_dl_deal_pmtdet_struct_h_d->h_info1 );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The IsPartial Flag is : %s\n",//AIX Warning Removal
						p_dl_deal_pmtdet_struct_h_d->h_ispart_ );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Broker Number is : %s\n",
						p_dl_deal_pmtdet_struct_h_d->h_brkrno );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The New Quantity is : %f\n",
						p_dl_deal_pmtdet_struct_h_d->h_newquantity );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The New Amount is : %f\n",
						p_dl_deal_pmtdet_struct_h_d->h_newamount );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The New Ref. Number is : %s\n",
						p_dl_deal_pmtdet_struct_h_d->h_newindentity_no );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The New Local Ref. Number is : %s\n",
						p_dl_deal_pmtdet_struct_h_d->h_newlocindentity_no );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Access Stamp is : %s\n",
						p_dl_deal_pmtdet_struct_h_d->h_access_stamp );
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						p_intl_env_data_struct_h );
	}

	

	l_dl_dealaudit_struct_ha = (DL_DEALAUDIT_STRUCT_H*)calloc(1,sizeof(DL_DEALAUDIT_STRUCT_H));
	APL_MALLOC_FAIL(l_dl_dealaudit_struct_ha);

	

	if ( !strcmp(p_dl_deal_pmtdet_struct_h_d->h_dl_client, APL_NULL_STRING ) )
	{
		APL_DATA_MISSING(	"Account", 
								APL_NULL_STRING, 
								APL_NULL_STRING ); 
		int_l_error_flg = APL_FAILURE;
	}
	else 
	{
		int_l_dummy=0;
		if (APL_FAILURE == CO_Chk_SplVal( "EUROCLEAR",
													"DUMMY_ACC",
													p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													&int_l_dummy,
													l_debug_info_ptr))
		{
	 		APL_GOBACK_FAIL
		}
		if (int_l_dummy)
		{
			CO_InsertErr(l_debug_info_ptr,
								ERR_DEAL_CONF_NOTALLOWED,
								p_dl_deal_pmtdet_struct_h_d->h_dl_client,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__);
		} 
	}

	if ( !strcmp(p_dl_deal_pmtdet_struct_h_d->h_indentity_no, APL_NULL_STRING) )
	{
		APL_DATA_MISSING(	"Ref. Number", 
								APL_NULL_STRING, 
								APL_NULL_STRING ); 
		int_l_error_flg = APL_FAILURE;
	}
	if ( !strcmp(p_dl_deal_pmtdet_struct_h_d->h_confdate, APL_NULL_STRING) )
	{
		APL_DATA_MISSING(	"Conf. Date", 
								APL_NULL_STRING, 
								APL_NULL_STRING );
		int_l_error_flg = APL_FAILURE;
	}
	if ( !strcmp(p_dl_deal_pmtdet_struct_h_d->h_access_stamp, APL_NULL_STRING) )
	{
		APL_DATA_MISSING(	"Access Stamp", 
								APL_NULL_STRING, 
								APL_NULL_STRING );
		int_l_error_flg = APL_FAILURE;
	}

	if ( l_mt_core_sys_params_struct_h.part_confirm[0] == 'N' &&
			p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' ) 
	{
		if	(	CO_InsertErr(	l_debug_info_ptr,
										ERR_PARTIAL_NOTALLOWED,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__ ) == APL_FAILURE )
		{
			APL_GOBACK_FAIL;
		}
		int_l_error_flg = APL_FAILURE;
	}

	

	if ( p_dl_deal_pmtdet_struct_h_d->h_diffamount > l_mt_core_sys_params_struct_h.allowed_amtdiff )
	{
		if	(	CO_InsertErr(	l_debug_info_ptr,
										ERR_DEAL_DIFFAMT_MORE_SETUP,
										p_dl_deal_pmtdet_struct_h_d->h_dl_client,
										p_dl_deal_pmtdet_struct_h_d->h_indentity_no, 
										APL_NULL_STRING,
										__LINE__,
										__FILE__ ) == APL_FAILURE )
		{
			APL_GOBACK_FAIL;
		}
		int_l_error_flg = APL_FAILURE;
	}

	if ( int_l_error_flg == APL_FAILURE )
	{
		APL_GOBACK_FAIL;
	}
 
	

	EXEC SQL VAR chr_l_h_rowid			IS STRING;
	EXEC SQL VAR chr_l_h_access_stamp IS STRING;
	EXEC SQL VAR chr_l_h_maker			IS STRING;
	EXEC SQL VAR chr_l_h_checker		IS STRING;
	EXEC SQL VAR chr_l_h_trcode			IS STRING;
	EXEC SQL VAR chr_l_h_domcpac		IS STRING;
	EXEC SQL VAR chr_l_h_countacc_a		IS STRING;
	EXEC SQL VAR chr_l_h_instrcode_A			IS STRING;
	EXEC SQL VAR chr_l_h_locncode_a		IS STRING;
	EXEC SQL VAR chr_l_h_ccycode		IS STRING;
	EXEC SQL VAR chr_l_h_trdt_a			IS STRING;
	EXEC SQL VAR chr_l_h_posn_status  IS STRING;
	EXEC SQL VAR chr_l_h_csd				IS STRING;
	EXEC SQL VAR chr_l_h_trdfromord	IS STRING;
	EXEC SQL VAR int_l_h_failcode		IS STRING;
	EXEC SQL VAR chr_l_h_cashclient	IS STRING;
	EXEC SQL VAR chr_l_h_typeoftrd		IS STRING;
	

	EXEC SQL SELECT 	ROWID,
							ACCESS_STAMP, 
							MAKER,
							CHECKER,
							DEAL_CD,
							QTY,
							AMOUNT,
							DOMESTIC_CPCLT,
							CP_CLT,
							INSTR_CODE,
							LOCATION_CD,
							CURRENCY_CD,
							DEAL_DATE,
							STATUS_POS,
							SETL_DATE,
							DEAL_FRM_ORD,
							FAILREASON_CD,
							BROKERCOMM,
							GL_CLIENT,
							SUB_FAIL_CD,
							DL_CLASS
			INTO  chr_l_h_rowid:l_i_rowid,	
					chr_l_h_access_stamp:l_i_access_stamp, 
					chr_l_h_maker:l_i_maker,
					chr_l_h_checker:l_i_checker,
					chr_l_h_trcode:l_i_TrCode,
					l_h_trdquantity:l_i_trdqty,
					l_h_trdamount:l_i_trdamt,
					chr_l_h_domcpac:l_i_domcpac,
					chr_l_h_countacc_a:l_i_countacc,
					chr_l_h_instrcode_A:l_i_instr_code,
					chr_l_h_locncode_a:l_i_locncode,
					chr_l_h_ccycode:l_i_ccycode,
					chr_l_h_trdt_a:l_i_trdt,
					chr_l_h_posn_status:l_i_posn_status,
					chr_l_h_csd:l_i_CSD,
					chr_l_h_trdfromord:l_i_trdfromord,
					int_l_h_failcode:l_i_failcode,
					l_h_brokercomm:l_i_brkcomm,
					chr_l_h_cashclient:l_i_cashaccount,
					int_l_h_subfailcode:l_i_subfailcode,
					chr_l_h_typeoftrd:l_i_typeoftrd
			FROM 	DL_DEAL
			WHERE	CLIENT 	= :p_dl_deal_pmtdet_struct_h_d->h_dl_client
			AND	IDENTIY_NO		= :p_dl_deal_pmtdet_struct_h_d->h_indentity_no 
			FOR UPDATE OF ACCESS_STAMP;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
														p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
														APL_NULL_STRING );

	

	if ( strcmp(chr_l_h_access_stamp, p_dl_deal_pmtdet_struct_h_d->h_access_stamp) )
	{
		CO_InsertErr(	l_debug_info_ptr,
								ERR_ACCESSSTAMP_CHGD,
								p_dl_deal_pmtdet_struct_h_d->h_dl_client,
								p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
								APL_NULL_STRING,
								__LINE__,
								__FILE__ ); 
		APL_GOBACK_FAIL;
	}


	
	if (l_i_cashaccount == -1)
	{
		strcpy(chr_l_h_cashclient,APL_NULL_STRING);

	}

	
	
	if ( APL_FAILURE == DL_Chk_DLDet(	p_dl_deal_pmtdet_struct_h_d->h_dl_client, 
												p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
												'Y', NULL, 'N', 'N', NULL, NULL,
												NULL, NULL, l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	}

	


	if ( 	!strcmp(chr_l_h_checker, APL_NULL_STRING) &&
			!strcmp(chr_l_h_maker, p_intl_env_data_struct_h->usr) &&
			p_intl_env_data_struct_h->auth_req[0] == 'Y' )
	{
		CO_InsertErr( 	l_debug_info_ptr,
								ERR_MAKER_CHECKER_SAME,
								p_dl_deal_pmtdet_struct_h_d->h_dl_client,
								p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
								APL_NULL_STRING, 
								__LINE__,
								__FILE__ );
		APL_GOBACK_FAIL;
	}


	
	
	
	if (chr_l_h_trdfromord[0] == 'Y' )
	{
		if ( APL_FAILURE == CO_Chk_AccValid( p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													'Y', 'C', 'B', NULL, 'Y', 'N',
													'N', 'N',
													l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
	}
	else
	{
		if ( APL_FAILURE == CO_Chk_AccValid( p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													'Y', 'C', NULL, NULL, 'Y', 'N',
													'N', 'N',
													l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
	}
	

	EXEC SQL SELECT INSTR_TYPE, MIN_FMT_DL_QTY
	INTO 	:chr_l_h_typeofinstr:l_i_typeofinstr,
			:l_h_minfmttrdquantity:l_i_minfmttrdqty
	FROM MT_INSTRUMENT
	WHERE INSTR_CODE = RTRIM(:chr_l_h_instrcode_A);

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_INSTR_NOTFND,
														chr_l_h_instrcode_A,
														APL_NULL_STRING,
														APL_NULL_STRING)

	if (!strcmp(chr_l_h_typeofinstr, "FMT"))
	{
		if (((p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y') &&
			  (p_dl_deal_pmtdet_struct_h_d->h_newquantity < l_h_minfmttrdquantity)) ||
			 ((p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'N') &&
			  (l_h_trdquantity < l_h_minfmttrdquantity)))
		{
			if (APL_FAILURE == CO_InsertErr(	l_debug_info_ptr,
															ERR_QTY_CANT_LESS_MINFINQTY,
															p_dl_deal_pmtdet_struct_h_d->h_dl_client,
															p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
															chr_l_h_instrcode_A,
															__LINE__,
															__FILE__ ))
			{
				APL_GOBACK_FAIL
			}
		}

		

		if ((p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y') &&
			 ((l_h_trdquantity - p_dl_deal_pmtdet_struct_h_d->h_newquantity) < l_h_minfmttrdquantity))
		{
			CO_InsertWarning(	l_debug_info_ptr,
									W_REM_QTY_LESS_MINFMTQTY,
									p_dl_deal_pmtdet_struct_h_d->h_dl_client,
									p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
									chr_l_h_instrcode_A,
									__LINE__,
									__FILE__ );
		}
	}

	if ( p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' )
	{
		

		EXEC SQL VAR chr_l_allow_partials IS STRING;
		strcpy(chr_l_allow_partials, APL_NULL_STRING);

		EXEC SQL SELECT PARTIAL_IND_A
		INTO :chr_l_allow_partials:l_i_allow_partials
		FROM DL_DEAL
		WHERE CLIENT = :p_dl_deal_pmtdet_struct_h_d->h_dl_client
		AND IDENTIY_NO =:p_dl_deal_pmtdet_struct_h_d->h_indentity_no;

		IS_ANY_ORA_ERROR

		if (l_i_allow_partials==-1)
			strcpy(chr_l_allow_partials, "N");

		if ( chr_l_allow_partials[0] != 'Y' )
		{
				CO_InsertErr(	l_debug_info_ptr,
									 	ERR_PARTIAL_NOTALLOWED,
										p_dl_deal_pmtdet_struct_h_d->h_dl_client,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__ );
				APL_GOBACK_FAIL;
		}

		if ( p_dl_deal_pmtdet_struct_h_d->h_newquantity == 0 )
		{
			APL_DATA_MISSING(	"New Quantity",
									p_dl_deal_pmtdet_struct_h_d->h_dl_client,
									p_dl_deal_pmtdet_struct_h_d->h_indentity_no );
			int_l_error_flg = APL_FAILURE;
		}
	
		if ( p_dl_deal_pmtdet_struct_h_d->h_newquantity >= l_h_trdquantity )
		{
			if ( CO_InsertErr( 	l_debug_info_ptr,
											ERR_DEAL_QTY_SHLD_LESS_ORIGQTY,
											p_dl_deal_pmtdet_struct_h_d->h_dl_client,
											p_dl_deal_pmtdet_struct_h_d->h_indentity_no, 
											APL_NULL_STRING,
											__LINE__,
											__FILE__ ) == APL_FAILURE ) 
			{
				APL_GOBACK_FAIL;
			}
			int_l_error_flg = APL_FAILURE;
		}

		if ( !strcmp( p_dl_deal_pmtdet_struct_h_d->h_newindentity_no, APL_NULL_STRING) )
		{
			APL_DATA_MISSING(	"New Ref. Number", 
									p_dl_deal_pmtdet_struct_h_d->h_dl_client,
									p_dl_deal_pmtdet_struct_h_d->h_indentity_no );
			int_l_error_flg = APL_FAILURE;
		}

		if ( ( VAL_VP_DEAL(chr_l_h_trcode[0]) ) && 
				p_dl_deal_pmtdet_struct_h_d->h_newamount < 1 )
		{
			APL_DATA_MISSING( "New Amount",
									p_dl_deal_pmtdet_struct_h_d->h_dl_client,
									p_dl_deal_pmtdet_struct_h_d->h_indentity_no );
			int_l_error_flg = APL_FAILURE;
		}

		if ( ( VAL_VP_DEAL(chr_l_h_trcode[0]) ) && 
				p_dl_deal_pmtdet_struct_h_d->h_newamount >= l_h_trdamount )
		{
			if (	CO_InsertErr( 	l_debug_info_ptr,
											ERR_DEAL_AMT_MUST_LESS_ORIGAMT,
											p_dl_deal_pmtdet_struct_h_d->h_dl_client,
											p_dl_deal_pmtdet_struct_h_d->h_indentity_no, 
											APL_NULL_STRING,
											__LINE__,
											__FILE__ ) == APL_FAILURE )
			{
				APL_GOBACK_FAIL;
			}
			int_l_error_flg = APL_FAILURE;
		}

		
		

		strcpy(chr_mainfuncarea, APL_NULL_STRING);
		strcpy(chr_l_condid, APL_NULL_STRING);
		strcpy(chr_mainfuncarea, "TRD_LOCREFNO_PMT");
		strcpy(chr_l_condid, "LOCREFNO_NOT_NULL");
		int_l_condexists = 0;

		if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
															chr_l_condid,
															&int_l_condexists,
															l_debug_info_ptr ) )
		{
			if ( int_l_condexists > 0 &&
					!strlen( p_dl_deal_pmtdet_struct_h_d->h_newlocindentity_no) )
			{
				if ( CO_InsertErr(	l_debug_info_ptr,
											ERR_DEAL_LOCREFNO_CANTEMPTY,
											APL_NULL_STRING,
											APL_NULL_STRING,
											APL_NULL_STRING,
											__LINE__,
											__FILE__ ) == APL_FAILURE )
				{
					APL_GOBACK_FAIL;
				}
			}
		}
		else
		{
			APL_GOBACK_FAIL;
		}

		if ( int_l_error_flg == APL_FAILURE )
		{
			APL_GOBACK_FAIL;
		}

		if ( APL_FAILURE == DL_Chk_DLDet( p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													p_dl_deal_pmtdet_struct_h_d->h_newindentity_no,
													'N', NULL, NULL, NULL, 
													NULL, NULL, NULL, NULL,
													l_debug_info_ptr ) )
		{
			int_l_error_flg = APL_FAILURE;
		}
	} 

	if ( int_l_error_flg == APL_FAILURE )
	{
		APL_GOBACK_FAIL;
	}
	
	

	if (APL_FAILURE == DL_Proc_RstPmtSkip(chr_l_h_instrcode_A, &int_l_ruclscodechk, l_debug_info_ptr))
	   APL_GOBACK_FAIL 



		if ( APL_FAILURE == CO_Chk_AccValid( chr_l_h_domcpac,
													'Y', 'B', NULL, NULL, 'Y', 'N',
													'N', 'N',
													l_debug_info_ptr ) )
		{
			int_l_error_flg = APL_FAILURE;
		}


	


   strcpy(chr_mainfuncarea, "TRD_MAINT");
   strcpy(chr_l_condid, "EXT_TRD_CNTAC_ALWD");
   l_ext_trd_check =0;

   if (APL_FAILURE == CO_Chk_CntryEnabled(chr_mainfuncarea,
                                       chr_l_condid,
                                       &l_ext_trd_check,
                                       l_debug_info_ptr))
   {	
		APL_GOBACK_FAIL
	}
   if((strcmp(l_mt_core_sys_params_struct_h.custody_clt_cd,chr_l_h_domcpac)==0) ||(l_ext_trd_check==0))
   {
		if ( strlen(chr_l_h_countacc_a) )
		{
			if ( APL_FAILURE == CO_Chk_AccValid( chr_l_h_countacc_a,
														'Y', 'C', 'C', NULL, 'Y', 'N',
														'N', 'N',
														l_debug_info_ptr ) )
			{	
				int_l_error_flg = APL_FAILURE;
			}
		}
	}

	

	if ( APL_FAILURE == CO_Chk_InstrValid( chr_l_h_instrcode_A,
												'Y', 'Y', 'N', 'N',
												NULL, 'N',
												l_debug_info_ptr ) )
	{
		int_l_error_flg = APL_FAILURE;
	}

	

	if ( l_mt_core_sys_params_struct_h.loc_proc_ind[0] == 'Y' )
	{
		if ( APL_FAILURE == MT_Chk_Loc( chr_l_h_locncode_a,
													'Y', 'Y', 'N', 
													l_debug_info_ptr ) )
		{
			int_l_error_flg = APL_FAILURE;
		}
	}

	

	if ( APL_FAILURE == CO_Chk_CcyValid( chr_l_h_ccycode,
												'M', 'Y',  
												l_debug_info_ptr ) )
	{
		int_l_error_flg = APL_FAILURE;
	}

	

	if ( APL_SUCCESS == DL_Chk_TrCdInstr(	chr_l_h_instrcode_A,        
													chr_l_h_trcode[0],
													&chr_l_trcodeinstrflg_a[0],
													l_debug_info_ptr ) )
	{
		if ( chr_l_trcodeinstrflg_a[0] == 'N' )
		{
			if ( CO_InsertErr(	l_debug_info_ptr,
										ERR_DEAL_DEALTYP_NVALFORINSTR_A,
										chr_l_h_instrcode_A,
										chr_l_h_trcode,
										APL_NULL_STRING,
										__LINE__,
										__FILE__ ) == APL_FAILURE )
			{
				APL_GOBACK_FAIL;
			}
			int_l_error_flg = APL_FAILURE;
		}
	}
	else
	{
		APL_GOBACK_FAIL;
	}



	

	if ( APL_SUCCESS == CO_Pro_DateComp(	chr_l_h_trdt_a,
												 	p_dl_deal_pmtdet_struct_h_d->h_confdate, 
													&int_l_datecmp,  
													l_debug_info_ptr ) )
	{
		if ( int_l_datecmp < 0 )
		{
			if(	CO_InsertErr( 	l_debug_info_ptr,
											ERR_DEAL_CONFDT_NO_DEALDT, 
											p_dl_deal_pmtdet_struct_h_d->h_dl_client,
											p_dl_deal_pmtdet_struct_h_d->h_indentity_no, 
											APL_NULL_STRING,
											__LINE__,
											__FILE__ ) == APL_FAILURE )
			{
				APL_GOBACK_FAIL;
			}
			int_l_error_flg = APL_FAILURE; 
		}
	}
	else
	{
		APL_GOBACK_FAIL;
	}

	

	int_l_hol_exist = 0;

	if ( APL_SUCCESS == CO_Chk_Holiday(	p_dl_deal_pmtdet_struct_h_d->h_confdate,
														&int_l_hol_exist,
														l_debug_info_ptr,APL_NULL_STRING ) )
	{
		if ( int_l_hol_exist != 0 )
		{
			if ( CO_InsertErr(	l_debug_info_ptr,
										ERR_DATE_IS_HOLIDAY,
										p_dl_deal_pmtdet_struct_h_d->h_confdate,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__ ) == APL_FAILURE )
			{
				APL_GOBACK_FAIL;
			}
			int_l_error_flg = APL_FAILURE;
		}
	}
	else
	{
		APL_GOBACK_FAIL;
	}

	

	strcpy(chr_mainfuncarea, APL_NULL_STRING);
	strcpy(chr_l_condid, APL_NULL_STRING);
	strcpy(chr_mainfuncarea, "TRD_PMT_VERWITH_CHK");
	strcpy(chr_l_condid, "VAL_VERWITH_FOR_CZ");
	int_l_condexists = 0;
	
	if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
														chr_l_condid,
														&int_l_condexists,
														l_debug_info_ptr ) )
	{
		if ( int_l_condexists > 0 )
		{
			if ( !strcmp( chr_l_h_locncode_a, "SCP" ) &&
					!strlen( p_dl_deal_pmtdet_struct_h_d->h_verfied_with ) )
			{
				APL_DATA_MISSING( "Verified With",
										p_dl_deal_pmtdet_struct_h_d->h_dl_client,
										p_dl_deal_pmtdet_struct_h_d->h_indentity_no ); 
				int_l_error_flg = APL_FAILURE;
			}
			
			if ( strlen(p_dl_deal_pmtdet_struct_h_d->h_verfied_with) )
			{
				int_l_rowexists = 0;
			
				EXEC SQL Select 1 
				into :int_l_rowexists 
				From PRO_SGENSTAT 	
				where ((MAP_VAL = :p_dl_deal_pmtdet_struct_h_d->h_verfied_with) AND
						 (MAP_TYPE = 'VERWITH') AND 
						 (NATION_CODE = 'CZ'));

				IS_ANY_ORA_ERROR;

				
				if (!int_l_rowexists)
				{
					if	(	CO_InsertErr(	l_debug_info_ptr,
													ERR_DEAL_NVAL_VERWITH_CZ,
													p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													p_dl_deal_pmtdet_struct_h_d->h_indentity_no, 
													APL_NULL_STRING,
													__LINE__,
													__FILE__ ) == APL_FAILURE )
					{
						APL_GOBACK_FAIL;
					}
					int_l_error_flg = APL_FAILURE;
				}
			}
		}
	}	
	else
	{
		APL_GOBACK_FAIL;
	}

	

   strcpy(chr_mainfuncarea,"TRADE_MAINT_HU");
   strcpy(chr_l_subfunc_b,"LOC");
	strcpy(chr_l_fieldval,chr_l_h_locncode_a);

   int_retval=CO_Chk_SplVal(chr_mainfuncarea,chr_l_subfunc_b,chr_l_fieldval,&int_l_exists_a,l_debug_info_ptr);
   if(int_retval == APL_FAILURE)
    	APL_GOBACK_FAIL

   if(int_l_exists_a > 0)
	{
		 EXEC SQL VAR chr_l_h_codetype IS STRING;
       EXEC SQL VAR chr_l_h_codeval IS STRING;
       EXEC SQL VAR chr_l_h_countrycode IS STRING;

       strcpy(chr_l_h_countrycode,g_mt_commonsys_params_struct_h.nation_code);

		
		strcpy(chr_mainfuncarea, APL_NULL_STRING);
		strcpy(chr_l_condid, APL_NULL_STRING);
		strcpy(chr_mainfuncarea, "TRD_PMT_VERWITH_CHK");
		strcpy(chr_l_condid, "VAL_VERWITH_FOR_HU");
		int_l_condexists = 0;
	
		if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
															chr_l_condid,
															&int_l_condexists,
															l_debug_info_ptr ) )
		{
			if ( int_l_condexists > 0 )
			{
			
			
			
			
			
				if ( !strlen( p_dl_deal_pmtdet_struct_h_d->h_verfied_with ) )
				{
					APL_DATA_MISSING( "Verified With",
											p_dl_deal_pmtdet_struct_h_d->h_dl_client,
											p_dl_deal_pmtdet_struct_h_d->h_indentity_no ); 
					int_l_error_flg = APL_FAILURE;
				}
		
				if ( strlen(p_dl_deal_pmtdet_struct_h_d->h_verfied_with) )
				{
					
					
					

					strcpy(chr_l_h_codeval,p_dl_deal_pmtdet_struct_h_d->h_verfied_with);

					if  ( ( VAL_VP_DEAL(chr_l_h_trcode[0]) )) 
					{
						
							 

						strcpy(chr_l_h_codetype,"VERWITH_VP");
						
						EXEC SQL SELECT NVL(COUNT(*),0) 
						INTO :int_l_h_count:l_i_count 
						FROM PRO_SGENSTAT
       				WHERE ((MAP_TYPE = :chr_l_h_codetype) AND
								 (MAP_VAL = :chr_l_h_codeval) AND
         					 (NATION_CODE = :chr_l_h_countrycode));
   
						IS_ANY_ORA_ERROR;

						//if (int_l_h_count = 0 ) 
						if (int_l_h_count == 0 )  // AIX - Warnings
						{
							if (	CO_InsertErr(	l_debug_info_ptr,
														ERR_DEAL_NVAL_VERWITH_HU_VP,
														p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														p_dl_deal_pmtdet_struct_h_d->h_indentity_no, 
														APL_NULL_STRING,
														__LINE__,
														__FILE__ ) == APL_FAILURE )
							{	
								APL_GOBACK_FAIL;
							}
							int_l_error_flg = APL_FAILURE;
						}

					}

					if ( ( VAL_FREE_DEAL(chr_l_h_trcode[0]) ) )
               {
						strcpy(chr_l_h_codetype,"VERWITH_FREE");

                  EXEC SQL SELECT NVL(COUNT(*),0)
                  INTO :int_l_h_count:l_i_count
                  FROM PRO_SGENSTAT
                  WHERE ((MAP_TYPE = :chr_l_h_codetype) AND
                         (MAP_VAL = :chr_l_h_codeval) AND
                         (NATION_CODE = :chr_l_h_countrycode));
  
                  IS_ANY_ORA_ERROR;

                  //if (int_l_h_count = 0 )
                  if (int_l_h_count == 0 ) // AIX - Warnings
                  {
                     if (  CO_InsertErr(   l_debug_info_ptr,
                                          ERR_DEAL_NVAL_VERWITH_HU_FREE_A,
														 p_dl_deal_pmtdet_struct_h_d->h_dl_client,
                                          p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
                                          APL_NULL_STRING,
                                          __LINE__,
                                          __FILE__ ) == APL_FAILURE )
                     {
                        APL_GOBACK_FAIL;
                     }
                     int_l_error_flg = APL_FAILURE;
                  }
               }

				}
			}	
		}
		else
		{
			APL_GOBACK_FAIL;
		}

	

		strcpy(chr_mainfuncarea, APL_NULL_STRING);
		strcpy(chr_l_condid, APL_NULL_STRING);
		strcpy(chr_mainfuncarea, "TRD_PMT_NOTE1_CHK");
		strcpy(chr_l_condid, "VAL_NOTE1_FOR_HU");
		int_l_condexists = 0;
	
		if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
															chr_l_condid,
															&int_l_condexists,
															l_debug_info_ptr ) )
		{
			if (( int_l_condexists > 0 ) &&  strlen(p_dl_deal_pmtdet_struct_h_d->h_info1))
			{
				 
					
				if ( ( VAL_DELIVER_DEAL(chr_l_h_trcode[0]) ) || chr_l_h_trcode[0]=='5' || chr_l_h_trcode[0]=='7')
				{

					if ( !strcmp(p_dl_deal_pmtdet_struct_h_d->h_verfied_with,S_VERWITH_NOTE1) ||
						! strcmp(p_dl_deal_pmtdet_struct_h_d->h_verfied_with,  S_VERWITH_NOTE2))
					{
						EXEC SQL VAR chr_l_h_ourtheir 	IS STRING;
						EXEC SQL VAR chr_l_h_cubk		IS STRING;

						
						
						if (strcmp(chr_l_h_domcpac,l_mt_core_sys_params_struct_h.custody_clt_cd))
						{
							EXEC SQL SELECT 	CLN_OUR_THEIR_IND,
													CLN_BRK_ALL
							INTO	chr_l_h_ourtheir:l_i_ourtheir,
									chr_l_h_cubk:l_i_cubk
							FROM 	MT_CLIENT
							WHERE	CLN_CODE = :chr_l_h_domcpac;

							IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_ACCNOT_FND,
																				chr_l_h_domcpac,
																				APL_NULL_STRING,
																				APL_NULL_STRING );
						}
						else 
						{
                     
                  	EXEC SQL SELECT   CLN_OUR_THEIR_IND,
                              			CLN_BRK_ALL
                  	INTO  chr_l_h_ourtheir:l_i_ourtheir,
                        	chr_l_h_cubk:l_i_cubk
                  	FROM  MT_CLIENT
                  	WHERE CLN_CODE = rtrim(SUBSTR(:chr_l_h_countacc_a,1,:G_SYS_ACCOUNT_LEN));

                  	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_ACCNOT_FND,
                                                   			chr_l_h_countacc_a,
                                                   			APL_NULL_STRING,
                                                   			APL_NULL_STRING );
               	}

						if ( chr_l_h_ourtheir[0] == S_OURTHEIR_O && chr_l_h_cubk[0] != 'A' )
						{
							if ( !strlen(p_dl_deal_pmtdet_struct_h_d->h_info1) || 
								(strlen(p_dl_deal_pmtdet_struct_h_d->h_info1) > 6 ) ) 
							{
								if (	CO_InsertErr(	l_debug_info_ptr,
																ERR_DEAL_NVAL_NOTE1_HU,
																p_dl_deal_pmtdet_struct_h_d->h_dl_client,
																p_dl_deal_pmtdet_struct_h_d->h_indentity_no, 
																APL_NULL_STRING,
																__LINE__,
																__FILE__ ) == APL_FAILURE )
								{
									APL_GOBACK_FAIL;
								}
								int_l_error_flg = APL_FAILURE;
							}
						}

						
						if ( chr_l_h_ourtheir[0] == S_OURTHEIR_T && chr_l_h_cubk[0] != S_CUBKA )
               	{
							EXEC SQL VAR chr_l_h_sectrcode IS STRING;

							EXEC SQL SELECT SEC_DL_CODE
							INTO :chr_l_h_sectrcode:l_i_sectrcode
							FROM MT_INSTRUMENT
							WHERE INSTR_CODE = RTRIM(:chr_l_h_instrcode_A);

							IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_INSTR_NOTFND,
                                          						chr_l_h_instrcode_A,
                                          						APL_NULL_STRING,
                                          						APL_NULL_STRING);

							if (!strcmp(chr_l_h_sectrcode,S_SECTOR1) ||
								 !strcmp(chr_l_h_sectrcode,S_SECTOR2))
							{
								if (strcmp(p_dl_deal_pmtdet_struct_h_d->h_info1,S_VALIDNOTE1) &&
								 	strcmp(p_dl_deal_pmtdet_struct_h_d->h_info1,S_VALIDNOTE2) )
                  		{
                     		if (  CO_InsertErr(   l_debug_info_ptr,
                          	                   		ERR_DEAL_NVAL_NOTE1_HU_OURTHEIR_T,
                                             		p_dl_deal_pmtdet_struct_h_d->h_dl_client,
                                             		p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
                                             		APL_NULL_STRING,
                                             		__LINE__,
                                             		__FILE__ ) == APL_FAILURE )
                     		{
                        		APL_GOBACK_FAIL;
                     		}
                     		int_l_error_flg = APL_FAILURE;
                  		}
							}
               	}
						
					}
				}
			}
		}	
		else
		{	
			APL_GOBACK_FAIL;
		}
	}

	
	
	strcpy(chr_mainfuncarea,"TRADE_MAINT_HU");
   strcpy(chr_l_subfunc_b,"CPAMT_VERWITH");
  	strcpy(chr_l_fieldval,p_dl_deal_pmtdet_struct_h_d->h_verfied_with);

   int_retval=CO_Chk_SplVal(chr_mainfuncarea,chr_l_subfunc_b,chr_l_fieldval,&int_l_exists_a,l_debug_info_ptr);
   if(int_retval == APL_FAILURE)
   	APL_GOBACK_FAIL

   if ( (int_l_exists_a > 0) && p_dl_deal_pmtdet_struct_h_d->h_cpamt <= 0.0)
   {
   	if (  CO_InsertErr(   l_debug_info_ptr,
                              ERR_INVALID_CNTRPARTYAMT,
                              p_dl_deal_pmtdet_struct_h_d->h_dl_client,
                              p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
                              APL_NULL_STRING,
                              __LINE__,
     			                  __FILE__ ) == APL_FAILURE )
      {
      	APL_GOBACK_FAIL;
      }
      int_l_error_flg = APL_FAILURE;
	}

	

	if ( int_l_error_flg == APL_FAILURE )
	{
		APL_GOBACK_FAIL;
	}

	
	

	if ( p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' )
	{
		l_mod_dealposn = p_dl_deal_pmtdet_struct_h_d->h_newquantity;
	}
	else
	{
		l_mod_dealposn = l_h_trdquantity;
	}

	
	if(CA_Rtv_Block_Type(  p_dl_deal_pmtdet_struct_h_d -> h_indentity_no,
				chr_l_h_typeoftrd,
				chr_l_h_trcode,
				l_block_type,
				l_debug_info_ptr) == APL_FAILURE)
	{
			APL_GOBACK_FAIL
	}
	if ( APL_FAILURE == DL_Proc_PosLock(	p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													chr_l_h_instrcode_A,
													chr_l_h_locncode_a,
													APL_NULL_STRING,l_block_type,
													l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	}

	if ( VAL_DELIVER_DEAL(chr_l_h_trcode[0]) || chr_l_h_trcode[0]=='7')
	{
		

		if ( APL_FAILURE == DL_Chk_AvlPos(	p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														chr_l_h_instrcode_A,
														chr_l_h_locncode_a,
														'Y','N','N','Y','Y','N','N','N',
														l_block_type,
														&l_CurrPosn,
														l_debug_info_ptr) )
		{
			APL_GOBACK_FAIL;
		}

		if ( l_CurrPosn < l_mod_dealposn )
		{
			strcpy(chr_mainfuncarea, APL_NULL_STRING);
			strcpy(chr_l_condid, APL_NULL_STRING);
			strcpy(chr_mainfuncarea, "TRD_PMT_ENUFPOSN_CHK");
			strcpy(chr_l_condid, "NOT_ENUFPOSN_WARNING");
			int_l_condexists = 0;
	
			if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
																chr_l_condid,
																&int_l_condexists,
																l_debug_info_ptr ) )
			{
				if ( int_l_condexists > 0 )
				{
					strcpy(chr_l_fieldname, APL_NULL_STRING);
					strcpy(chr_l_fieldname, "clscode");
					strcpy(chr_l_clscode, APL_NULL_STRING);

					if ( APL_FAILURE == CR_Rtv_InstrChrVal(	chr_l_h_instrcode_A,
																	chr_l_fieldname,
																	chr_l_clscode,
																	l_debug_info_ptr ) )
					{
						APL_GOBACK_FAIL;
					}
	
					if ( !strcmp( chr_l_clscode, "MIN" ) ) 
					{
						if (	CO_InsertWarning(	l_debug_info_ptr,
														ERR_DEAL_NENUFPOSN,
														p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														chr_l_h_instrcode_A,
														APL_NULL_STRING,
														__LINE__,
														__FILE__ ) == APL_FAILURE )
						{
							APL_GOBACK_FAIL;
						}
						int_l_error_flg = APL_FAILURE;
					} 
					else
					{
						if (	CO_InsertErr(	l_debug_info_ptr,
														ERR_DEAL_NENUFPOSN,
														p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														chr_l_h_instrcode_A,
														APL_NULL_STRING,
														__LINE__,
														__FILE__ ) == APL_FAILURE )
						{
							APL_GOBACK_FAIL;
						}
						int_l_error_flg = APL_FAILURE;
					}
				}
				else
				{
					if (	CO_InsertErr(	l_debug_info_ptr,
													ERR_DEAL_NENUFPOSN,
													p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													chr_l_h_instrcode_A,
													APL_NULL_STRING,
													__LINE__,
													__FILE__ ) == APL_FAILURE )
					{
						APL_GOBACK_FAIL;
					}
					int_l_error_flg = APL_FAILURE;
				}
			}
			else
			{
				APL_GOBACK_FAIL;
			}
		}
	
		

		int_l_datecmp = 0;
		if ( APL_FAILURE == CO_Pro_DateComp(	p_dl_deal_pmtdet_struct_h_d->h_confdate,
														chr_l_h_csd,
														&int_l_datecmp,
														l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
		
			if (APL_FAILURE == CO_Chk_CntryEnabled(  "PREMATCH",
         	                                 "DELIVER_MIN_TYPE",
            	                              &l_flag_ru,
               	                           l_debug_info_ptr))
  		 	{
				APL_GOBACK_FAIL
    		}
		
		if (l_flag_ru)
		{
		      EXEC SQL SELECT CLASSCD INTO :h_classcd
  			   FROM MT_INSTRUMENT WHERE INSTR_CODE=RTRIM(:chr_l_h_instrcode_A);

		      IS_ANY_ORA_ERROR
  			    if(strcmp(h_classcd,"MIN"))
      		 {

		         if ( int_l_datecmp < 0 )
      		   {
            		if ( APL_FAILURE == DL_Chk_VDPPos(   p_dl_deal_pmtdet_struct_h_d->h_dl_client,
                  		                              chr_l_h_instrcode_A,
                        		                        chr_l_h_locncode_a,
                              		                  chr_l_h_posn_status,
                                    		            l_mod_dealposn,
                                    		            p_dl_deal_pmtdet_struct_h_d->h_confdate,
                                          		      &int_l_enufvdp,
                                                		l_debug_info_ptr ) )
            		{
               		APL_GOBACK_FAIL;
            		}
         		}
        			 else
         		{
            			if ( APL_FAILURE == DL_Chk_VDPPos(   p_dl_deal_pmtdet_struct_h_d->h_dl_client,
                           		                     chr_l_h_instrcode_A,
                     		      		               chr_l_h_locncode_a,
                                       		         chr_l_h_posn_status,
                                             		   l_mod_dealposn,
                                                		chr_l_h_csd,
                                                		&int_l_enufvdp,
                                                		l_debug_info_ptr ) )
            			{
               			APL_GOBACK_FAIL;
            			}
         		}
       		}			

		}
		else
		{	
		if ( int_l_datecmp < 0 )
		{
			if ( APL_FAILURE == DL_Chk_VDPPos(	p_dl_deal_pmtdet_struct_h_d->h_dl_client,
															chr_l_h_instrcode_A,
															chr_l_h_locncode_a,
															chr_l_h_posn_status,
															l_mod_dealposn,
															p_dl_deal_pmtdet_struct_h_d->h_confdate,
															&int_l_enufvdp,
															l_debug_info_ptr ) )
			{
				APL_GOBACK_FAIL;
			}
		}
		else
		{
			if ( APL_FAILURE == DL_Chk_VDPPos(	p_dl_deal_pmtdet_struct_h_d->h_dl_client,
															chr_l_h_instrcode_A,
															chr_l_h_locncode_a,
															chr_l_h_posn_status,
															l_mod_dealposn,
															chr_l_h_csd,
															&int_l_enufvdp,
															l_debug_info_ptr ) )
			{
				APL_GOBACK_FAIL;
			}
		}
	 }	
	}

	

	strcpy(chr_mainfuncarea, "TRD_PMT_CHK");
	strcpy(chr_l_condid, "RU_REG_CHK");
	int_l_condexists = 0;

	if ( APL_SUCCESS != CO_Chk_CntryEnabled( chr_mainfuncarea,
														chr_l_condid,
														&int_l_condexists,
														l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}
   if ( int_l_condexists > 0 )
   {
		if(strlen(srn_param_str) != 0)
		{
	    	
         CO_SplitStr(srn_param_str,
                          ';', &int_noelem, &chr_l_param);

         i = 0;
 	    	while (i < int_noelem)
         {
				if ((strstr(chr_l_param[i],":")) == NULL)
				{
					int_nlen = strlen(chr_l_param[i]);
					h_qty = 0;
				}
				else
				{
					chr_posofspace_A = strstr(chr_l_param[i],":");
					int_nlen = ( chr_posofspace_A - chr_l_param[i] );
					h_qty = atof(chr_posofspace_A + 1) ;
				}
				strncpy(chr_h_srnregno,chr_l_param[i],int_nlen);
				chr_h_srnregno[int_nlen] = '\0';


				

				if ( APL_FAILURE == CRUDBSafekLockFn(p_dl_deal_pmtdet_struct_h_d->h_dl_client,
												chr_l_h_instrcode_A,
												chr_l_h_locncode_a,
												APL_NULL_STRING,
					 							chr_h_srnregno,
												l_debug_info_ptr ) )
				{
				 	printf("\nFailed in CRUDBSafekLockFn");
					APL_GOBACK_FAIL;
				}
				if ( VAL_DELIVER_DEAL(chr_l_h_trcode[0]) || chr_l_h_trcode[0]=='5' || chr_l_h_trcode[0]=='7')
				{
				  
					if (APL_FAILURE == CO_Chk_CntryEnabled(  "PREMATCH",
               		                           "DELIVER_MIN_TYPE",
                     		                     &l_flag_ru,
                           		               l_debug_info_ptr))
   				{
						APL_GOBACK_FAIL
   			 	}
					if (l_flag_ru)
					{
		           if(strcmp(h_classcd,"MIN"))
           			{
              			if ( APL_FAILURE == CRUDBAvailPosnFn(
                     		                  p_dl_deal_pmtdet_struct_h_d->h_dl_client,
                           		            chr_l_h_instrcode_A,
                                 	      chr_l_h_locncode_a,
                                    	   'Y', 
                                       	&l_CurrPosn,
                                     	   chr_h_srnregno,
                                     	   l_debug_info_ptr) )
              			{
                			printf("\nFailed in CRUDBAvailPosnFn");
                			APL_GOBACK_FAIL;
              			}
         		
              			if ( l_CurrPosn < h_qty )
              			{
							 if( int_l_ruclscodechk != 1 ) 
							 {
                  		strcpy(chr_l_instrloc,chr_l_h_instrcode_A);
                  		strcat(chr_l_instrloc, " " );
                  		strcat(chr_l_instrloc,chr_l_h_locncode_a);
                  		if (  CO_InsertErr(   l_debug_info_ptr,
                        		                  ERR_DEAL_SRNNENUFPOSN,
                              		            p_dl_deal_pmtdet_struct_h_d->h_dl_client,
                                    		      
                                          		chr_l_instrloc,
                                  		        chr_h_srnregno,
                                       		   __LINE__,
                                    		      __FILE__ ) == APL_FAILURE )
                  		{
                     		APL_GOBACK_FAIL;
                  		}
                  		APL_GOBACK_FAIL;
              			}
						 }
            		}		
					}
					else
				   {	
				     if ( APL_FAILURE == CRUDBAvailPosnFn(
													p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													chr_l_h_instrcode_A,
													chr_l_h_locncode_a,
													'Y', 
													&l_CurrPosn,
				  									chr_h_srnregno,
													l_debug_info_ptr) )
				    {
				 	 	printf("\nFailed in CRUDBAvailPosnFn");
					 	APL_GOBACK_FAIL;
				  	}
					
					  if ( l_CurrPosn < h_qty )
				  	  {   
							strcpy(chr_l_instrloc,chr_l_h_instrcode_A);
							strcat(chr_l_instrloc, " " );
							strcat(chr_l_instrloc,chr_l_h_locncode_a);
							if (	CO_InsertErr(	l_debug_info_ptr,
															ERR_DEAL_SRNNENUFPOSN,
															p_dl_deal_pmtdet_struct_h_d->h_dl_client,
															
															chr_l_instrloc,
															chr_h_srnregno,
															__LINE__,
															__FILE__ ) == APL_FAILURE )
							{
								APL_GOBACK_FAIL;
							}
					  			APL_GOBACK_FAIL;
				  		}
					}
			 	}	

			if ( p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' )
			{ 
				strcpy(chr_lrefno,p_dl_deal_pmtdet_struct_h_d->h_newindentity_no);
				lamount = p_dl_deal_pmtdet_struct_h_d->h_newamount;
			}
			else
			{
				strcpy(chr_lrefno,p_dl_deal_pmtdet_struct_h_d->h_indentity_no);
				lamount = l_h_trdamount;
			}

			
			CR_Proc_InstrQtyRound(h_qty, chr_l_h_instrcode_A, &chr_l_val, l_debug_info_ptr );
			h_qty = chr_l_val;
		
			
				
			memset(&l_deal_ru_struct_h,NULL,sizeof(DEAL_RU_STRUCT_H));
			strcpy(l_deal_ru_struct_h.h_dl_client, p_dl_deal_pmtdet_struct_h_d->h_dl_client);
			strcpy(l_deal_ru_struct_h.h_indentity_no, chr_lrefno);
			strcpy(l_deal_ru_struct_h.h_instr_code, chr_l_h_instrcode_A);
			strcpy(l_deal_ru_struct_h.h_loccode, chr_l_h_locncode_a);
			strcpy(l_deal_ru_struct_h.h_st_reg_no, chr_h_srnregno);
		   l_deal_ru_struct_h.h_qty = h_qty; 

			if ( DL_Proc_TrdAmtCalc(lamount,	 
										 l_mod_dealposn, 
										 h_qty,		 
										 &l_newamount,
									    l_debug_info_ptr) == APL_FAILURE )
			{
				 printf("\nFailed in CRUDBTrdAmtCalFn");
				 APL_GOBACK_FAIL;
			}
		
			l_deal_ru_struct_h.h_amt = l_newamount;
			strcpy(l_deal_ru_struct_h.h_dealcd, chr_l_h_trcode);
			strcpy(l_deal_ru_struct_h.h_deal_dt, chr_l_h_trdt_a);
			strcpy(l_deal_ru_struct_h.h_instrdate, APL_NULL_STRING);

			
			EXEC SQL INSERT INTO DL_RUDEAL VALUES (:l_deal_ru_struct_h);

			IS_ANY_ORA_ERROR;

			
			if ( APL_FAILURE == CRUDBUpdtPosnFn(  p_dl_deal_pmtdet_struct_h_d->h_dl_client,
													chr_l_h_instrcode_A,
													chr_l_h_locncode_a,
													chr_l_h_posn_status,
													'C',
													chr_l_h_trcode[0],
													&h_qty,
													'I',
													chr_h_srnregno,
													l_debug_info_ptr ) )
			{
				 APL_GOBACK_FAIL;
			}
			i++;
		 }
		}
	}

	

	if ( APL_FAILURE == CO_RtvSysDtTime( chr_l_curr_date_time,
															l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	}

	if ( APL_SUCCESS == CO_ChkErr( *l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	}

	

	EXEC SQL SELECT DEC_LEN
				INTO	:int_l_h_ccy_decimallen:l_i_ccy_decimallen
				FROM	DL_CURRENCY
				WHERE CURRENCY_CD 	= :chr_l_h_ccycode ;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF,
														"Decimal length",
														"Type Of Instr",
														APL_NULL_STRING );


	
	
	if(p_dl_deal_pmtdet_struct_h_d->h_grossamount != 0)
	{
		strcpy(chr_mainfuncarea,"TRADE_MAINT");
		strcpy(chr_l_subfunc_b,"GROSS_AMT_LOCATION");
		strcpy(chr_l_fieldval,chr_l_h_locncode_a);
		int_retval=CO_Chk_SplVal(chr_mainfuncarea,chr_l_subfunc_b,chr_l_fieldval,&int_l_exists_a,l_debug_info_ptr);
		if(int_retval == APL_FAILURE)
			APL_GOBACK_FAIL
		if(int_l_exists_a == 0)
			CO_InsertErr(l_debug_info_ptr,ERR_INVALID_GROSS_AMT,chr_l_h_locncode_a,APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
      else
		{	
			l_round_gramount = 0;
			CO_Round(p_dl_deal_pmtdet_struct_h_d->h_grossamount,
           		  int_l_h_ccy_decimallen,
           		&l_round_gramount);
			if (p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'N')
				l_h_brokercomm = l_round_gramount; 

		}
	}
	
	else if(p_dl_deal_pmtdet_struct_h_d->h_grossamount == 0)
	{
		strcpy(chr_mainfuncarea,"TRADE_MAINT");
      strcpy(chr_l_subfunc_b,"GROSS_AMT_LOCATION");
      strcpy(chr_l_fieldval,chr_l_h_locncode_a);
      int_retval=CO_Chk_SplVal(chr_mainfuncarea,chr_l_subfunc_b,chr_l_fieldval,&int_l_exists_a,l_debug_info_ptr);
      if(int_retval == APL_FAILURE)
         APL_GOBACK_FAIL
		if((int_l_exists_a > 0) && (p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'N'))
		l_h_brokercomm = p_dl_deal_pmtdet_struct_h_d->h_grossamount;
	}
	

	if ( p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' )
	{
		l_sys_dl_deal_struct_hj = (SYS_DL_DEAL_STRUCT_H*)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
		APL_MALLOC_FAIL(l_sys_dl_deal_struct_hj);
		
		l_intl_envdata_struct_h = (INTL_ENV_DATA_STRUCT_H*)calloc(1,sizeof(INTL_ENV_DATA_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_envdata_struct_h);

		

		strcpy(l_intl_envdata_struct_h->usr, p_intl_env_data_struct_h->usr);
		strcpy(l_intl_envdata_struct_h->h_mode, APL_FUNC_INPUT);
		strcpy(l_intl_envdata_struct_h->processtion, p_intl_env_data_struct_h->processtion);
		strcpy(l_intl_envdata_struct_h->auth_req, p_intl_env_data_struct_h->auth_req);
		strcpy(l_intl_envdata_struct_h->subprocess, APL_NULL_STRING);
		strcpy(l_intl_envdata_struct_h->h_process, p_intl_env_data_struct_h->h_process);

		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_dl_client  			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_indentity_no 				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_dlt 					IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_setldt 			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_ex_arena				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_instrdate					IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_moneydate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_domcpclt_cd				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_isspotdl			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_dlfromord			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_entry 			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_reapired_ind			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_domcp_custodyclt			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_countclt 			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_countcltnm			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_clientof			IS STRING;		
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_custinfo				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_fx_reqd				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_ispymtlocal			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_verfied_with				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_brkrno				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_fail_cd				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_failinfo				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_ispart_			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_report_at_eom_ind				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_billdate				IS STRING;	
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_locindentity_no				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_instruct_person			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_dealcd				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_instr_code				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_currencycode				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_classofdl			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_origindentity_no			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_newdt				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_maker					IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_maker_dt				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_deal_status		IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_access_stamp		IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_info1					IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_loccode 			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_reginstr_ind				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_pos_stat			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_status_reg			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_confdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_matchindentity_no			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_markfaildate			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_candropdate			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_checker				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_checker_dt			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_instrconv_ind			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_ndsbldate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lrdltype			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_ndsdate					IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_ublckdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_delrecdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lastregdate			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lr_chkdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lr_confdate			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lr_instrdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_tmpoutdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_tmpretdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_transmitdate			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_hostdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lr_ndsbldate			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lr_ndsdate				IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_lr_ublckdate			IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_clt_reqdel_flag		IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_mod_hispos_ind		IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_updhispos_date		IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_cash_client      IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_allow_part_s    IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_uniq_ident_no    IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_exp_setl_date	    	IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_inter_med_person         IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_inter_med_personnm       IS STRING;
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_instruct_personnm       IS STRING;
		
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_misinfo           IS STRING;
		 
		EXEC SQL VAR l_sys_dl_deal_struct_hj->h_clientofcode     IS STRING;
      
		EXEC SQL SELECT * INTO :l_sys_dl_deal_struct_hj FROM DL_DEAL 
								WHERE ROWID = :chr_l_h_rowid;

		if ( sqlca.sqlcode != -1405 )
		{
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET( ERR_DEAL_NF,
																p_dl_deal_pmtdet_struct_h_d->h_dl_client,
																p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
																APL_NULL_STRING ); 
		}

		strcpy(l_sys_dl_deal_struct_hj->h_indentity_no, p_dl_deal_pmtdet_struct_h_d->h_newindentity_no);
		l_round_quantity = 0;
		CR_Proc_InstrQtyRound(	l_mod_dealposn, chr_l_h_instrcode_A,&l_round_quantity,l_debug_info_ptr);
		l_sys_dl_deal_struct_hj->h_qty = l_round_quantity;
		l_round_amount = 0;
		CO_Round(	p_dl_deal_pmtdet_struct_h_d->h_newamount,
					int_l_h_ccy_decimallen,
					&l_round_amount );
		l_sys_dl_deal_struct_hj->h_amt = l_round_amount;
		
		if ( l_sys_dl_deal_struct_hj->h_dlfromord[0] == 'Y')
		{
			l_intl_envdata_struct_h->h_process[0] = 'S';
			l_intl_envdata_struct_h->h_process[1] = '\0';
			strcpy(l_sys_dl_deal_struct_hj->h_origindentity_no,p_dl_deal_pmtdet_struct_h_d->h_indentity_no);
			
			strcpy(l_sys_dl_deal_struct_hj->h_entry,"M");

		}
		l_sys_dl_deal_struct_hj->h_dlfromord[0] = 'N';
		l_sys_dl_deal_struct_hj->h_dlfromord[1] = '\0';
		strcpy(l_sys_dl_deal_struct_hj->h_locindentity_no,p_dl_deal_pmtdet_struct_h_d->h_newlocindentity_no);	
		
		l_sys_dl_deal_struct_hj->h_brokercomm = p_dl_deal_pmtdet_struct_h_d->h_grossamount;
		l_sys_dl_deal_struct_hj->h_custodycomm = 0;
		l_sys_dl_deal_struct_hj->h_stx_comm = 0;
		l_sys_dl_deal_struct_hj->h_oth_comm = 0;
		
		
		strcpy(l_sys_dl_deal_struct_hj->h_confdate,p_dl_deal_pmtdet_struct_h_d->h_confdate);
		strcpy(l_sys_dl_deal_struct_hj->h_verfied_with,p_dl_deal_pmtdet_struct_h_d->h_verfied_with);
		l_sys_dl_deal_struct_hj->h_diffamount = p_dl_deal_pmtdet_struct_h_d->h_diffamount;

      

      strcpy(chr_l_temp_note1, l_sys_dl_deal_struct_hj->h_info1);
      strcpy(l_sys_dl_deal_struct_hj->h_info1, p_dl_deal_pmtdet_struct_h_d->h_info1);
      if (strlen(chr_l_temp_note1) > 60)
      {
         strcat(l_sys_dl_deal_struct_hj->h_info1, chr_l_temp_note1+60);
      }

		l_sys_dl_deal_struct_hj->h_ispart_[0] = 'N';
		l_sys_dl_deal_struct_hj->h_ispart_[1] = '\0';
		strcpy(l_sys_dl_deal_struct_hj->h_brkrno, p_dl_deal_pmtdet_struct_h_d->h_brkrno);
		strcpy(l_sys_dl_deal_struct_hj->h_fail_cd, APL_NULL_STRING);
		strcpy(l_sys_dl_deal_struct_hj->h_markfaildate, APL_NULL_STRING);
		strcpy(l_sys_dl_deal_struct_hj->h_access_stamp, chr_l_curr_date_time);
		strcpy(l_sys_dl_deal_struct_hj->h_deal_status, STATUS_CONF);
		strcpy(l_sys_dl_deal_struct_hj->h_custinfo, APL_NULL_STRING);
		strcpy(l_sys_dl_deal_struct_hj->h_exp_setl_date, p_dl_deal_pmtdet_struct_h_d->h_exp_setl_date);

		if ( !strcmp( chr_l_h_checker, APL_NULL_STRING ) ||
				!strcmp( chr_l_h_maker, chr_l_h_checker ) )
		{
			strcpy(l_sys_dl_deal_struct_hj->h_checker, APL_NULL_STRING);
			strcpy(l_sys_dl_deal_struct_hj->h_checker_dt, APL_NULL_STRING);
			strcpy(l_sys_dl_deal_struct_hj->h_checker, p_intl_env_data_struct_h->usr);
			strcpy(l_sys_dl_deal_struct_hj->h_checker_dt, chr_l_curr_date_time);
		}

		

		strcpy(chr_mainfuncarea, APL_NULL_STRING);
		strcpy(chr_l_condid, APL_NULL_STRING);
		strcpy(chr_mainfuncarea, "TRD_PMT_PAR_TYPOFTRD");
		strcpy(chr_l_condid, "UPD_TYPEOFTRD_TO_20");
		int_l_condexists = 0;
	
		if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
															chr_l_condid,
															&int_l_condexists,
															l_debug_info_ptr ) )
		{
			if ( 	int_l_condexists > 0 ) 
			{	
				strcpy(l_sys_dl_deal_struct_hj->h_classofdl, NONBILLDEAL );
			}
		}
		else
		{
			APL_GOBACK_FAIL;
		}

		

		strcpy(chr_mainfuncarea, APL_NULL_STRING);
		strcpy(chr_l_condid, APL_NULL_STRING);
		strcpy(chr_mainfuncarea, "TRD_PMT_PAR_CUSTNOTE");
		strcpy(chr_l_condid, "UPD_CUSNOTE_INSTRMONDT");
		int_l_condexists = 0;
	
		if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
															chr_l_condid,
															&int_l_condexists,
															l_debug_info_ptr ) )
		{
			if ( 	int_l_condexists > 0 ) 
			{	
				strcpy(l_sys_dl_deal_struct_hj->h_custinfo, "SETTLE. DT: " );
				strcat(l_sys_dl_deal_struct_hj->h_custinfo, p_dl_deal_pmtdet_struct_h_d->h_confdate);
				if ( VAL_VP_DEAL(chr_l_h_trcode[0]) ) 
				{
					if ( (atof(p_dl_deal_pmtdet_struct_h_d->h_brkrno) > 0 ) &&
							strcmp( p_dl_deal_pmtdet_struct_h_d->h_brkrno, APL_NULL_STRING) )
					{
						strcat(l_sys_dl_deal_struct_hj->h_custinfo, "	MONEY SETTLE. DT : ");
						strcat(l_sys_dl_deal_struct_hj->h_custinfo, p_dl_deal_pmtdet_struct_h_d->h_brkrno );
					}
					else
					{
						strcat(l_sys_dl_deal_struct_hj->h_custinfo, "	");
						strcat(l_sys_dl_deal_struct_hj->h_custinfo, p_dl_deal_pmtdet_struct_h_d->h_brkrno);
					}
				}
				strcpy(l_sys_dl_deal_struct_hj->h_fail_cd, "90");
				strcpy(l_sys_dl_deal_struct_hj->h_markfaildate, APL_NULL_STRING);

				
				l_sys_dl_deal_struct_hj->h_cpamt = p_dl_deal_pmtdet_struct_h_d->h_cpamt;
				
	
				

				if ( APL_FAILURE == GBDbInsIMSGENT(	MS_MSGNO_534,
																p_dl_deal_pmtdet_struct_h_d->h_newindentity_no,
																p_dl_deal_pmtdet_struct_h_d->h_dl_client,
																'Y',
																APL_NULL_STRING,
																l_debug_info_ptr ) )
				{
					APL_GOBACK_FAIL;
				}
			}
		}
		else
		{
			APL_GOBACK_FAIL;
		}
         
		    strcpy(l_sys_dl_deal_struct_hj->h_msg_stat,APL_NULL_STRING); 

		

		strcpy(l_sys_dl_deal_struct_hj->h_allow_part_s,"N");

		if ( APL_FAILURE == DL_Proc_Trd(	l_sys_dl_deal_struct_hj,
													&int_l_trdrepseqnum,
													l_intl_envdata_struct_h,
													l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
	  
     

         if (APL_FAILURE==EI_Mod_MQData(l_sys_dl_deal_struct_hj->h_dl_client,
                                        l_sys_dl_deal_struct_hj->h_indentity_no,
													 NULL,
													 NULL,
													 "B",
                                         l_debug_info_ptr))
                     APL_GOBACK_FAIL
	

		if ( !strcmp( chr_l_h_checker, APL_NULL_STRING ) ||
				!strcmp( chr_l_h_maker, chr_l_h_checker ) )
		{
			strcpy( chr_l_trade_status, APL_NULL_STRING );
			strcpy( chr_l_trade_status, STATUS_AUTH );

			EXEC SQL SELECT QTY
			INTO :l_h_temp_quantity:l_i_temp_qty
			FROM DL_DEAL
			WHERE ROWID = :chr_l_h_rowid;

			IS_ANY_ORA_ERROR;
			
			CR_Proc_InstrQtyRound(l_h_temp_quantity-p_dl_deal_pmtdet_struct_h_d->h_newquantity,chr_l_h_instrcode_A,&l_h_temp_quantity_rnd,l_debug_info_ptr);

			EXEC SQL UPDATE DL_DEAL 
						SET	QTY				= :l_h_temp_quantity_rnd,
							 	AMOUNT			= ROUND(AMOUNT - :p_dl_deal_pmtdet_struct_h_d->h_newamount,:int_l_h_ccy_decimallen),
								PARTIAL_IND_B		= :p_dl_deal_pmtdet_struct_h_d->h_ispart_,
								CHECKER			= :p_intl_env_data_struct_h->usr,
								CHECKER_DT		= :chr_l_curr_date_time,
								DEAL_STAT	= :chr_l_trade_status,
								ACCESS_STAMP	= :chr_l_curr_date_time 
						WHERE ROWID 			= :chr_l_h_rowid;
		}
		else
		{
			EXEC SQL SELECT QTY
			INTO :l_h_temp_quantity:l_i_temp_qty
			FROM DL_DEAL
			WHERE ROWID = :chr_l_h_rowid;

			IS_ANY_ORA_ERROR;
			
			CR_Proc_InstrQtyRound(l_h_temp_quantity-p_dl_deal_pmtdet_struct_h_d->h_newquantity,chr_l_h_instrcode_A,&l_h_temp_quantity_rnd,l_debug_info_ptr);

			EXEC SQL UPDATE DL_DEAL 
						SET	QTY				= :l_h_temp_quantity_rnd,
							 	AMOUNT			= ROUND(AMOUNT - :p_dl_deal_pmtdet_struct_h_d->h_newamount,:int_l_h_ccy_decimallen),
								PARTIAL_IND_B		= :p_dl_deal_pmtdet_struct_h_d->h_ispart_,
								ACCESS_STAMP	= :chr_l_curr_date_time
						WHERE ROWID 			= :chr_l_h_rowid;
		}
		IS_ANY_ORA_ERROR;

	}
	else
		
	{
		strcpy( chr_l_trade_status, APL_NULL_STRING );
		strcpy( chr_l_trade_status, STATUS_CONF );

      


		if ( !strcmp( chr_l_h_checker, APL_NULL_STRING ) ||
				!strcmp( chr_l_h_maker, chr_l_h_checker ) )
		{
			EXEC SQL UPDATE DL_DEAL 
						SET 	VAL_FDT 			= :p_dl_deal_pmtdet_struct_h_d->h_confdate,
								VERFIED_WITH 			= :p_dl_deal_pmtdet_struct_h_d->h_verfied_with,
								AMT_DIFFER 			= :p_dl_deal_pmtdet_struct_h_d->h_diffamount,
								INFO1          = :p_dl_deal_pmtdet_struct_h_d->h_info1||substr(INFO1,61),
								BRK_NO			= :p_dl_deal_pmtdet_struct_h_d->h_brkrno,
								FAILREASON_CD			= NULL,
								DATEOF_MARKFAIL 		= NULL,
								CHECKER			= :p_intl_env_data_struct_h->usr,
								CHECKER_DT		= :chr_l_curr_date_time,
								ACCESS_STAMP	= :chr_l_curr_date_time,
								DEAL_STAT	= :chr_l_trade_status,
								EXP_SETLDATE    = :p_dl_deal_pmtdet_struct_h_d->h_exp_setl_date,
								BROKERCOMM		   = :l_h_brokercomm
						WHERE	ROWID				= :chr_l_h_rowid;
		}
		else
		{
			EXEC SQL UPDATE DL_DEAL 
						SET 	VAL_FDT 			= :p_dl_deal_pmtdet_struct_h_d->h_confdate,
								VERFIED_WITH 			= :p_dl_deal_pmtdet_struct_h_d->h_verfied_with,
								AMT_DIFFER 			= :p_dl_deal_pmtdet_struct_h_d->h_diffamount,
								INFO1          = :p_dl_deal_pmtdet_struct_h_d->h_info1||substr(INFO1,61),
								BRK_NO			= :p_dl_deal_pmtdet_struct_h_d->h_brkrno,
								FAILREASON_CD			= NULL,
								DATEOF_MARKFAIL 		= NULL,
								ACCESS_STAMP	= :chr_l_curr_date_time,
								DEAL_STAT	= :chr_l_trade_status,
								EXP_SETLDATE    = :p_dl_deal_pmtdet_struct_h_d->h_exp_setl_date,
								BROKERCOMM	      = :l_h_brokercomm	
						WHERE	ROWID				= :chr_l_h_rowid;
		}

		IS_ANY_ORA_ERROR;

		

		strcpy(chr_mainfuncarea, APL_NULL_STRING);
		strcpy(chr_l_condid, APL_NULL_STRING);
		strcpy(chr_mainfuncarea, "TRD_PMT_PAR_CUSTNOTE");
		strcpy(chr_l_condid, "UPD_CUSNOTE_INSTRMONDT");
		int_l_condexists = 0;
	
		if ( APL_SUCCESS == CO_Chk_CntryEnabled(	chr_mainfuncarea,
															chr_l_condid,
															&int_l_condexists,
															l_debug_info_ptr ) )
		{
			if ( 	int_l_condexists > 0 ) 
			{	
				strcpy(chr_l_custnote_a, "SETTLE. DT: " );
				strcat(chr_l_custnote_a, p_dl_deal_pmtdet_struct_h_d->h_confdate);
				if ( VAL_VP_DEAL(chr_l_h_trcode[0]) ) 
				{
					if ( (atof(p_dl_deal_pmtdet_struct_h_d->h_brkrno) > 0 ) &&
							strcmp( p_dl_deal_pmtdet_struct_h_d->h_brkrno, APL_NULL_STRING) )
					{
						strcat(chr_l_custnote_a, "	MONEY SETTLE. DT : ");
						strcat(chr_l_custnote_a, p_dl_deal_pmtdet_struct_h_d->h_brkrno );
					}
					else
					{
						strcat(chr_l_custnote_a, "	");
						strcat(chr_l_custnote_a, p_dl_deal_pmtdet_struct_h_d->h_brkrno);
					}
				}

				
				EXEC SQL UPDATE DL_DEAL
						SET 	CLIENT_NOTE = :chr_l_custnote_a,
								CP_AMT = :p_dl_deal_pmtdet_struct_h_d->h_cpamt,
								FAILREASON_CD = '90',
								DATEOF_MARKFAIL = NULL
						WHERE ROWID = :chr_l_h_rowid;

				IS_ANY_ORA_ERROR;
							
				

				if ( APL_FAILURE == GBDbInsIMSGENT(	MS_MSGNO_534,
																p_dl_deal_pmtdet_struct_h_d->h_indentity_no,
																p_dl_deal_pmtdet_struct_h_d->h_dl_client,
																'Y',
																APL_NULL_STRING,
																l_debug_info_ptr ) )
				{
					APL_GOBACK_FAIL;
				}
			}
		}
		else
		{
			APL_GOBACK_FAIL;
		}
	
	}
							 
	

	if ( p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' )
	{
		

		if ( APL_FAILURE == DL_Mod_Posn(	p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														chr_l_h_instrcode_A,
														chr_l_h_locncode_a,
														chr_l_h_posn_status,
														'U',
														chr_l_h_trcode[0],
														&l_mod_dealposn,
														'D',l_block_type,
														l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
	}
	else
	{
		if ( APL_FAILURE == DL_Mod_Posn(	p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														chr_l_h_instrcode_A,
														chr_l_h_locncode_a,
														chr_l_h_posn_status,
														'U',
														chr_l_h_trcode[0],
														&l_mod_dealposn,
														'D',l_block_type,
														l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}

		if ( APL_FAILURE == DL_Mod_Posn(	p_dl_deal_pmtdet_struct_h_d->h_dl_client,
														chr_l_h_instrcode_A,
														chr_l_h_locncode_a,
														chr_l_h_posn_status,
														'C',
														chr_l_h_trcode[0],
														&l_mod_dealposn,
														'I',l_block_type,
														l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
	}	
	
	

	

	strcpy(l_dl_dealaudit_struct_ha->h_dl_client, p_dl_deal_pmtdet_struct_h_d->h_dl_client);
	strcpy(l_dl_dealaudit_struct_ha->h_indentity_no,	 p_dl_deal_pmtdet_struct_h_d->h_indentity_no);
	strcpy(l_dl_dealaudit_struct_ha->h_trail_for, "T");
	strcpy(l_dl_dealaudit_struct_ha->h_processdetail, p_intl_env_data_struct_h->processtion);
	strcpy(l_dl_dealaudit_struct_ha->h_proc_usr, p_intl_env_data_struct_h->usr);
	if ( p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' )
	{
		strcpy(l_dl_dealaudit_struct_ha->h_subprocess, PARTIALCONFIRM);
	}
	else
	{
		strcpy(l_dl_dealaudit_struct_ha->h_subprocess, APL_NULL_STRING);
	}
	strcpy(l_dl_dealaudit_struct_ha->h_logdate, APL_NULL_STRING);
	strcpy(l_dl_dealaudit_struct_ha->h_fail_cd, int_l_h_failcode);

	

	if(l_i_failcode != -1)
		l_dl_dealaudit_struct_ha->h_subfailreas_cd= int_l_h_subfailcode;

	if ( p_dl_deal_pmtdet_struct_h_d->h_ispart_[0] == 'Y' )
	{
		l_dl_dealaudit_struct_ha->h_qty = l_h_trdquantity - l_mod_dealposn;
	}
	else
	{
		l_dl_dealaudit_struct_ha->h_qty = l_h_trdquantity;
	}
 	strcpy(l_dl_dealaudit_struct_ha->h_dlfromord, chr_l_h_trdfromord);

	if ( APL_FAILURE == CR_Mod_CLHAudTrail(	l_dl_dealaudit_struct_ha,
													l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	} 
 

         if (APL_FAILURE==EI_Mod_MQData(l_dl_dealaudit_struct_ha->h_dl_client,  
                                        l_dl_dealaudit_struct_ha->h_indentity_no,   
													 NULL,
													 NULL,
													 "B",
                                         l_debug_info_ptr))  
                     APL_GOBACK_FAIL   
   


	APL_GOBACK_SUCCESS;

	

	RETURN_SUCCESS :
		APL_FREE(l_dl_dealaudit_struct_ha);
		APL_FREE(l_sys_dl_deal_struct_hj);
		APL_FREE(l_intl_envdata_struct_h);
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function DL_Mod_DLPmt with Success\n",
							NULL,
							p_intl_env_data_struct_h );
		}
		printf("Leaving Function DL_Mod_DLPmt with Success\n");
		return(APL_SUCCESS);

	RETURN_FAILURE :
		APL_FREE(l_dl_dealaudit_struct_ha);
		APL_FREE(l_sys_dl_deal_struct_hj);
		APL_FREE(l_intl_envdata_struct_h);
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function DL_Mod_DLPmt with Errors\n",
							NULL,
							p_intl_env_data_struct_h );
		}
		printf("Leaving Function DL_Mod_DLPmt with Error\n");
		return(APL_FAILURE);
}

int CRUDBSafekLockFn(char *p_client,
							char *p_instrcode,
							char *p_locncode,
							char *p_posnstatus,
							char *p_statregno,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr ) 
{
	struct sqlca sqlca;
	short l_i_safek = 0;
	double l_h_safekeep_pos = 0;
	char	chr_l_buf[BUFFER_LEN] 		= APL_NULL_STRING;
	char	chr_l_now[APL_DATE_LEN] 	= APL_NULL_STRING;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0; 

	APL_IF_DEBUG
	{
		CO_ProcMonitor(	APL_OUT_FILE,
						"Entering Function CRUDBSafekLockFn\n",
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( 	chr_l_buf,
						"The Account is : %s\n",
						p_client);
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						NULL );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( 	chr_l_buf,
						"The Instrurity is : %s\n",
						p_instrcode);
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						NULL );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( 	chr_l_buf,
						"The Location Code is : %s\n",
						p_locncode);
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						NULL );
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( 	chr_l_buf,
						"The Position Status is : %s\n",
						p_posnstatus);	
		CO_ProcMonitor(	APL_OUT_FILE,
						chr_l_buf,
						NULL,
						NULL );
	}

	

	if ( !strlen(p_client) )
	{
		APL_DATA_MISSING(	"Account",
								APL_NULL_STRING,
								APL_NULL_STRING );
	}

	if ( !strlen(p_instrcode) )
	{
		APL_DATA_MISSING(	"Instrode",
								APL_NULL_STRING,
								APL_NULL_STRING );
	}

	

	if (APL_FAILURE == CO_RtvSysDtTime(chr_l_now, l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}

	

	if (strcmp(p_statregno,APL_NULL_STRING) != 0)
	{
		EXEC SQL UPDATE DL_RUSAFEK
				SET   CLIENT = :p_client 
				WHERE CLIENT     = :p_client
				AND   INSTR_CODE      = :p_instrcode
				AND   LOCATION_CD    = :p_locncode
				AND   ST_REG_NO    = :p_statregno;
	}
	else
	{
	  	EXEC SQL UPDATE DL_RUSAFEK
				SET   CLIENT = :p_client 
				WHERE CLIENT     = :p_client
				AND   INSTR_CODE      = :p_instrcode
				AND   LOCATION_CD    = :p_locncode;
		IS_ANY_ORA_ERROR
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function CRUDBSafekLockFn with success\n",
							NULL,
							NULL );
		}
		return(APL_SUCCESS);

	RETURN_FAILURE :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Leaving Function CRUDBSafekLockFn with errors\n",
							NULL,
							NULL );
		}
		return(APL_FAILURE);
}

int CRUDBAvailPosnFn(char *p_client,
							char *p_instrcode,
							char *p_locncode,
							char p_incconf,
							double *p_availqty,
							char 	*p_statregno,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr ) 
{
	struct sqlca sqlca;
	double l_h_totquantity = 0;
	short	 l_i_totqty = 0;
	char	 chr_l_posn_status[STATUS_POS_LEN];
	char	 chr_l_buf[BUFFER_LEN];

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	sqlca.sqlcode = 0; 
	strcpy(chr_l_posn_status, APL_NULL_STRING);
	strcpy(chr_l_buf, APL_NULL_STRING);

	APL_IF_DEBUG
	{
		CO_ProcMonitor(	APL_OUT_FILE, 
						"Entering Function DL_Chk_AvlPos\n",
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( 	chr_l_buf,
						"The Account is : %s\n",
						p_client);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf( 	chr_l_buf,
						"The Instrurity is : %s\n",
						p_instrcode);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf,
						"The Location Code is : %s\n",
						p_locncode);
		CO_ProcMonitor(	APL_OUT_FILE, 
						chr_l_buf,	
						NULL,
					   NULL);
	}

	

	if ( !strlen(p_client) )
	{
		APL_DATA_MISSING(	"Account",
								APL_NULL_STRING,
								APL_NULL_STRING );
	}

	if ( !strlen(p_instrcode) )
	{
		APL_DATA_MISSING(	"Instrode",
								APL_NULL_STRING,
								APL_NULL_STRING );
	}

	if ( p_incconf == APL_NULL_CHAR )
	{
		p_incconf = 'Y';
	}
	   
   if (strcmp(p_statregno,APL_NULL_STRING) != 0)
      {
			if ( p_incconf == 'Y' )
			{

			EXEC SQL SELECT NVL( SUM( SAFEKEEP_POS + VAL_REC - VAL_DEL), 0 )
			INTO  :l_h_totquantity:l_i_totqty
			FROM  DL_RUSAFEK
			WHERE CLIENT  = :p_client
			AND   INSTR_CODE   = :p_instrcode
			 AND LOCATION_CD = :p_locncode 
			 AND ST_REG_NO = :p_statregno;
	}
	else
	{
		EXEC SQL SELECT NVL( SUM(SAFEKEEP_POS), 0 )
			INTO  :l_h_totquantity:l_i_totqty
			FROM  DL_RUSAFEK
			WHERE CLIENT  = :p_client
			AND   INSTR_CODE   = :p_instrcode
			 AND LOCATION_CD = :p_locncode 
			 AND ST_REG_NO = :p_statregno;
	 }
	}
	else
	{
		   if ( p_incconf == 'Y' )
   		{

		      EXEC SQL SELECT NVL( SUM( SAFEKEEP_POS + VAL_REC - VAL_DEL), 0 )
      	   INTO  :l_h_totquantity:l_i_totqty
         	FROM  DL_RUSAFEK
        		 WHERE CLIENT  = :p_client
        		 AND   INSTR_CODE   = :p_instrcode
         	 AND LOCATION_CD = :p_locncode;
   		}
   		else
   		{
     			 EXEC SQL SELECT NVL( SUM(SAFEKEEP_POS), 0 )
         	INTO  :l_h_totquantity:l_i_totqty
         	FROM  DL_RUSAFEK
         	WHERE CLIENT  = :p_client
         	AND   INSTR_CODE   = :p_instrcode
          	AND LOCATION_CD = :p_locncode ;
    		}
	}		

	*p_availqty = l_h_totquantity;

	APL_GOBACK_SUCCESS;

	RETURN_SUCCESS :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE, 
							"Leaving Function CRUDBAvailPosnFn with success\n",
							NULL,
							NULL);
		}
		return(APL_SUCCESS);
/* AIX - Warnings
	RETURN_FAILURE :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE, 
							"Leaving Function CRUDBAvailPosnFn with errors\n",
							NULL,
							NULL);
		}
		return(APL_FAILURE);
*/
}
int CRUDBUpdtPosnFn(char *p_client, 
						char *p_mt_instrument_struct_h, 
						char *p_location, 
						char *p_posnstatus, 
						char p_postype, 
						char p_trcode, 
						double *p_qty, 
						char p_incdec, 
						char 	*p_statregno,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	

	struct sqlca sqlca;	
	double l_retposn = 0, l_round_quantity = 0;
	double *l_retposn_ptr = NULL;
	double l_h_retposn = 0;

	char 	chr_l_posntype[4],
			chr_l_h_rowid[APL_ROWID_LEN],
			chr_l_h_access_stamp[APL_DATE_LEN],
			chr_l_buf[BUFFER_LEN],
			chr_l_instrloc[20] = APL_NULL_STRING;  
	short int_l_error_flg = APL_SUCCESS, 
			int_l_retval = APL_SUCCESS, 
			l_i_rowid = 0, 
			l_IncDecSign = 1, 
			l_i_temp_qty = 0, 
			l_i_access_stamp = 0;
	short l_i_retposn = 0;

	double l_h_temp_quantity=0.0;
	double l_h_temp_quantity_rnd=0.0;
	DL_RUSAFEK_STRUCT_H l_dl_safek_struct_h;
	DL_RUSAFEK_STRUCT_I l_dl_safek_struct_i;
	char	chr_h_splacc[APL_CLIENT_LENGTH]=APL_NULL_STRING;
	
	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

	l_retposn_ptr = &l_retposn;
	strcpy(chr_l_posntype, APL_NULL_STRING);
	strcpy(chr_l_h_rowid, APL_NULL_STRING);
	strcpy(chr_l_h_access_stamp, APL_NULL_STRING);
	strcpy(chr_l_buf, APL_NULL_STRING);

	sqlca.sqlcode = 0;
	
	EXEC SQL VAR chr_l_h_rowid IS STRING;
	EXEC SQL VAR chr_h_splacc IS STRING;

	APL_IF_DEBUG
	{
		CO_ProcMonitor(	APL_OUT_FILE,
        				"Entering Function DL_Mod_Posn\n",
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Account is : %s\n", 
						p_client);
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Instrurity is : %s\n", 
						p_mt_instrument_struct_h);
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Location is : %s\n", 
						p_location); 
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Position Status is : %s\n", 
						p_posnstatus);
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Position Type is : %c\n", 
						p_postype);
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Transaction Code is : %c\n",
				 		p_trcode);
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Quantity is : %f\n", 
						*p_qty);
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
		memset( chr_l_buf, NULL, BUFFER_LEN );
		sprintf(		chr_l_buf, 
						"The Inc/Dec chr_flag is : %c\n", 
						p_incdec);
		CO_ProcMonitor(	APL_OUT_FILE,
        				chr_l_buf,
						NULL,
					   NULL);
	}

	

	if (!strlen(p_client))
	{
		APL_DATA_MISSING(	"Account", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	} 
	
	if (!strlen(p_mt_instrument_struct_h))
	{
		APL_DATA_MISSING(	"Instrurity", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	} 
	
	if ( ( !strlen(p_location) ) && 
			( !strcmp(l_mt_core_sys_params_struct_h.loc_proc_ind, "Y") ) ) 
	{	
		APL_DATA_MISSING(	"Location", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if ( ( !strlen(p_posnstatus) ) 
			&& ( !strcmp(l_mt_core_sys_params_struct_h.proc_reg_ind, "Y" ) ) ) 
	{
		APL_DATA_MISSING(	"Position Status", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if (p_postype == NULL)
	{
		APL_DATA_MISSING(	"Update Pos. Type", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if (p_trcode == NULL)
	{
		APL_DATA_MISSING(	"Trade Code", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	}

	if (*p_qty <= 0)
	{
		APL_DATA_MISSING(	"Quantity", 
								APL_NULL_STRING, 
								APL_NULL_STRING);
		int_l_error_flg = APL_FAILURE;
	} 

	if ( APL_FAILURE == int_l_error_flg )
	{
		APL_GOBACK_FAIL;
	}

	

	if (p_incdec == NULL)
	{		
	 	p_incdec = 'I';
	}
	 
	
	switch (p_postype)
	{
      case 'C' :
         if ( ( p_trcode == '2' ) || ( p_trcode == '4' ) || ( p_trcode == '6' ) || ( p_trcode == '8' ) )
         {

            EXEC SQL SELECT SUM(VAL_REC) INTO :l_h_retposn:l_i_retposn
                  FROM  DL_RUSAFEK
                  WHERE CLIENT     =:p_client
                  AND   INSTR_CODE      =:p_mt_instrument_struct_h
                  AND   LOCATION_CD = :p_location
		  				AND  ST_REG_NO = :p_statregno  ;
         }
         else if ( ( p_trcode == '1' ) || ( p_trcode == '3' ) || ( p_trcode == '5' ) || ( p_trcode == '7' ) )
         {
            EXEC SQL SELECT SUM(VAL_DEL) INTO :l_h_retposn:l_i_retposn
                  FROM  DL_RUSAFEK
                  WHERE CLIENT     =:p_client
                  AND   INSTR_CODE      =:p_mt_instrument_struct_h
                  AND   LOCATION_CD = :p_location
		  				AND  ST_REG_NO = :p_statregno  ;
         }
         break;

      case 'S' :

            EXEC SQL SELECT SUM(SAFEKEEP_POS) INTO :l_h_retposn:l_i_retposn
                  FROM  DL_RUSAFEK
                  WHERE CLIENT     =:p_client
                  AND   INSTR_CODE      =:p_mt_instrument_struct_h
                  AND   LOCATION_CD = :p_location
		  		AND  ST_REG_NO = :p_statregno  ;
            break;
	}

   
	
   
   sprintf(chr_l_buf, "\n ROHAN :: l_h_retposn = %0.8lf, p_quantity = %0.8lf, p_incdec = %d\n", l_h_retposn, *p_qty, p_incdec);//AIX Warning Removal
   CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, NULL);

   
   if (APL_DOUBLE_LESS(l_h_retposn, *p_qty) && p_incdec == 'D' )
	{
		strcpy(chr_l_instrloc, p_mt_instrument_struct_h);
		strcat(chr_l_instrloc,"   " );
		strcat(chr_l_instrloc, p_location);
      CO_InsertErr(l_debug_info_ptr,
                     ERR_DEAL_SRNNENUFPOSN,
                     p_client,
                     
							chr_l_instrloc,
      					p_statregno,
                     __LINE__,
                     __FILE__);
      APL_GOBACK_FAIL;

   }

	if ( APL_SUCCESS == CO_ChkErr( *l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL;
	}

	EXEC SQL SELECT ROWID INTO :chr_l_h_rowid:l_i_rowid
			FROM  DL_RUSAFEK
			WHERE CLIENT     = :p_client
			AND   INSTR_CODE      = :p_mt_instrument_struct_h
			AND   LOCATION_CD    = :p_location
			AND  ST_REG_NO = :p_statregno  ;

	IS_ANY_ORA_ERROR;

	if ( APL_ZERO_RESULT_SET )
	{
		printf ("\nStRegNo : %s",p_statregno);
		strcpy(l_dl_safek_struct_h.h_dl_client, p_client);
		l_dl_safek_struct_i.i_dl_client  = 0;
		strcpy(l_dl_safek_struct_h.h_instr_code, p_mt_instrument_struct_h);
		l_dl_safek_struct_i.i_instr_code   = 0;
		l_dl_safek_struct_h.h_safekeep_pos    = 0;
		l_dl_safek_struct_i.i_safekeep_pos    = 0;
		l_dl_safek_struct_h.h_val_rec  = 0;
		l_dl_safek_struct_i.i_val_rec  = 0;
		l_dl_safek_struct_h.h_val_del  = 0;
		l_dl_safek_struct_i.i_val_del  = 0;

		if ( APL_FAILURE == CO_RtvSysDtTime( l_dl_safek_struct_h.h_new_dt,
																l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
		else
		{
			l_dl_safek_struct_i.i_new_dt = 0;
		}
		if ( !strcmp(p_location, APL_NULL_STRING) )
		{
			strcpy(l_dl_safek_struct_h.h_loccode, APL_NULL_STRING);
			l_dl_safek_struct_i.i_loccode = -1;
		}
		else
		{
			strcpy(l_dl_safek_struct_h.h_loccode, p_location);
			l_dl_safek_struct_i.i_loccode = 0;
		}
		strcpy(l_dl_safek_struct_h.h_st_reg_no, p_statregno);
		l_dl_safek_struct_i.i_st_reg_no = 0;



		strcpy(l_dl_safek_struct_h.h_new_old_ind,"N");
		l_dl_safek_struct_i.i_new_old_ind = 0;

		CR_Proc_InstrQtyRound(*p_qty,p_mt_instrument_struct_h,&l_round_quantity,l_debug_info_ptr);
		switch ( p_postype )
		{

			case 'C' :
				if  ( p_trcode == '1' || p_trcode == '3' || p_trcode == '5' || p_trcode == '7' )
				{
					l_dl_safek_struct_h.h_val_del = l_round_quantity;
				}
				else if ( p_trcode == '2' || p_trcode == '4' || p_trcode == '6' || p_trcode == '8' )
				{
					l_dl_safek_struct_h.h_val_rec = l_round_quantity;
				}
				break;

		  case 'S' :
				{
               l_dl_safek_struct_h.h_safekeep_pos = l_round_quantity;
				}
            break;
      }
		EXEC SQL INSERT INTO DL_RUSAFEK
				VALUES (:l_dl_safek_struct_h:l_dl_safek_struct_i);
		IS_ANY_ORA_ERROR;
	}
	else
	{
		if ( p_incdec == 'I' )
		{
			l_IncDecSign = 1;
		}
		else
		{
			l_IncDecSign = -1;
		}

		if ( APL_FAILURE == CO_RtvSysDtTime( chr_l_h_access_stamp,
																l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL;
		}
		else
		{
			l_i_access_stamp = 0;
		}
		switch ( p_postype )
		{
			case 'C' :
				if ( p_trcode == '1' || p_trcode == '3' || p_trcode == '5' || p_trcode == '7' )
				{
					EXEC SQL SELECT VAL_DEL
					INTO :l_h_temp_quantity:l_i_temp_qty
					FROM DL_RUSAFEK
					WHERE ROWID = :chr_l_h_rowid;

					IS_ANY_ORA_ERROR;

					CR_Proc_InstrQtyRound(l_h_temp_quantity + (l_IncDecSign * (*p_qty)),
											p_mt_instrument_struct_h,&l_h_temp_quantity_rnd,l_debug_info_ptr);

					EXEC SQL UPDATE DL_RUSAFEK
							SET   VAL_DEL = :l_h_temp_quantity_rnd
		
							WHERE ROWID = :chr_l_h_rowid;
				}
				else if ( p_trcode == '2' || p_trcode == '4' || p_trcode == '6' || p_trcode == '8' )
				{
					EXEC SQL SELECT VAL_REC
					INTO :l_h_temp_quantity:l_i_temp_qty
					FROM DL_RUSAFEK
					WHERE ROWID = :chr_l_h_rowid;

					IS_ANY_ORA_ERROR;

					CR_Proc_InstrQtyRound(l_h_temp_quantity + (l_IncDecSign * (*p_qty)),
											p_mt_instrument_struct_h,&l_h_temp_quantity_rnd,l_debug_info_ptr);

					EXEC SQL UPDATE DL_RUSAFEK
							SET   VAL_REC = :l_h_temp_quantity_rnd
									
							WHERE ROWID = :chr_l_h_rowid;
				}
				break;

			case 'S' :

				EXEC SQL SELECT SAFEKEEP_POS
				INTO :l_h_temp_quantity:l_i_temp_qty
				FROM DL_RUSAFEK
				WHERE ROWID = :chr_l_h_rowid;

				IS_ANY_ORA_ERROR;

				CR_Proc_InstrQtyRound(l_h_temp_quantity + (l_IncDecSign * (*p_qty)),
										p_mt_instrument_struct_h,&l_h_temp_quantity_rnd,l_debug_info_ptr);

				EXEC SQL UPDATE DL_RUSAFEK
							SET   SAFEKEEP_POS = :l_h_temp_quantity_rnd
			
							WHERE ROWID = :chr_l_h_rowid;
				break;
		}
	}
	
	IS_ANY_ORA_ERROR;
	
	APL_GOBACK_SUCCESS;

	RETURN_SUCCESS :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CRUDBUpdtPosnFn with success\n",
							NULL,
						   NULL);
		}
		return(APL_SUCCESS);
	
	RETURN_FAILURE : 
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CRUDBUpdtPosnFn with errors\n",
							NULL,
						   NULL);
		}
		return(APL_FAILURE);

}

int CRUDBRstPmtFn(char 							*p_client,
                  char 							*p_indentity_no,
                  DL_DEAL_RSTPMT_STRUCT_H	*p_dl_deal_rstpmt_struct_h_f,
                  char							*chr_p_access_stamp,
                  DEBUG_INFO_STRUCT_H				**l_debug_info_ptr)
{
	struct sqlca sqlca;

	char 		h_st_reg_no[21]=APL_NULL_STRING;
	double 	h_qty = 0,l_avquantity = 0;
	short 	i_st_reg_no = 0;
	short 	i_qty = 0;
	int 		int_l_ruclscodechk=0; 
	short    int_l_rowexists = 0;  

	char     chr_h_accclass[3] = APL_NULL_STRING;  
	char     chr_h_field_val[21] = APL_NULL_STRING; 

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	sqlca.sqlcode = 0;

	
	EXEC SQL VAR p_client IS STRING;
   	
	EXEC SQL VAR h_st_reg_no IS STRING;

	EXEC SQL VAR chr_h_accclass IS STRING;
	EXEC SQL VAR chr_h_field_val IS STRING;


			
			
		EXEC SQL Select CLN_CLAS
      into :chr_h_accclass
      From MT_CLIENT
      Where (CLN_CODE = :p_client);

      IS_ANY_ORA_ERROR;

		if (APL_FAILURE == DL_Proc_RstPmtSkip(p_dl_deal_rstpmt_struct_h_f->p_instr_code, &int_l_ruclscodechk, l_debug_info_ptr))	
		   APL_GOBACK_FAIL 

		EXEC SQL Select FIELD_VAL
      into :chr_h_field_val
      From PRO_GSSPLVAL
      where ((MAIN_FUN = 'TRADE_RRMM') AND
            (SUB_PROCESS = 'ACC_CLASS') AND NATION = :g_mt_commonsys_params_struct_h.nation_code );

       IS_ANY_ORA_ERROR;

       if (!strcmp(chr_h_accclass,  chr_h_field_val)) 
       {

		

				fprintf(APL_OUT_FILE,"RU CHK: Account=(%s)\n",p_client);
				fprintf(APL_OUT_FILE,"RU CHK: Refno=(%s)\n",p_indentity_no);
				fflush(APL_OUT_FILE);

   			EXEC SQL DECLARE cur_TradeInfo CURSOR FOR
				SELECT ST_REG_NO,QTY FROM DL_RUDEAL 
				WHERE CLIENT = :p_client AND IDENTIY_NO = :p_indentity_no;
		
				IS_ANY_ORA_ERROR

				EXEC SQL OPEN  cur_TradeInfo;
				IS_ANY_ORA_ERROR

				for(;;)
				{
   					EXEC SQL FETCH cur_TradeInfo INTO :h_st_reg_no:i_st_reg_no,:h_qty:i_qty;
						IS_ANY_ORA_ERROR

						if (APL_ZERO_RESULT_SET)
							break;

				fprintf(APL_OUT_FILE,"RU CHK: h_st_reg_no=(%s)\n",h_st_reg_no);
				fprintf(APL_OUT_FILE,"RU CHK: quantity=(%lf)\n",h_qty);
				fflush(APL_OUT_FILE);

						if (APL_SUCCESS != CRUDBSafekLockFn(p_client,
											p_dl_deal_rstpmt_struct_h_f->p_instr_code,
											p_dl_deal_rstpmt_struct_h_f->p_loccode,
											APL_NULL_STRING,
											h_st_reg_no,
											l_debug_info_ptr))
						{
							APL_GOBACK_FAIL
						}



	      		 if ((VAL_DELIVER_DEAL(p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]) || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='5' || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='7') ||
   		     	     (APL_SUCCESS == CRUDBAvailPosnFn( p_client,
                                             p_dl_deal_rstpmt_struct_h_f->p_instr_code,
                                             p_dl_deal_rstpmt_struct_h_f->p_loccode,
                                             'Y',
                                             &l_avquantity,
   					     								h_st_reg_no,	
                                             l_debug_info_ptr )))

			        {
      			  	   if ((VAL_RECDEAL(p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]) || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='6' || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='8') &&
               		 	(l_avquantity < h_qty))
	         			{
								if( int_l_ruclscodechk!=1 ) 
								{
		       					EXEC SQL CLOSE cur_TradeInfo;

        	       				CO_InsertErr(   l_debug_info_ptr,
                                 ERR_DEAL_SRNNENUFPOSN,
                                 p_client,
                                 p_indentity_no,
                                 h_st_reg_no,
                                 __LINE__,
                                 __FILE__ );
				               APL_GOBACK_FAIL
								}
        	   			}

	 	   			 	if(!strcmp(p_dl_deal_rstpmt_struct_h_f->p_cltstmp_cmp,chr_p_access_stamp))
   		     	   	{
								if( APL_SUCCESS != CRUDBUpdtPosnFn(p_client,
															p_dl_deal_rstpmt_struct_h_f->p_instr_code,
															p_dl_deal_rstpmt_struct_h_f->p_loccode,
															APL_NULL_STRING,
															'C',
															p_dl_deal_rstpmt_struct_h_f->p_dealcd[0],
															&h_qty,
															'D',
															h_st_reg_no,
															l_debug_info_ptr) )
		       				     { APL_GOBACK_FAIL }
		    			  }
					}
	   		}

				

				EXEC SQL INSERT INTO DL_RUDEAL_TMP ( SELECT * FROM DL_RUDEAL
				WHERE client = :p_client AND IDENTIY_NO = :p_indentity_no ) ;
				IS_ANY_ORA_ERROR 

				EXEC SQL DELETE FROM DL_RUDEAL
				WHERE client = :p_client AND IDENTIY_NO = :p_indentity_no;
		
				IS_ANY_ORA_ERROR
				if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
		 			{APL_GOBACK_FAIL }

				IS_ANY_ORA_ERROR;

		}  
	
	APL_GOBACK_SUCCESS;

	RETURN_SUCCESS :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CRUDBRstPmtFn with success\n",
							NULL,
						   NULL);
		}
		return(APL_SUCCESS);
	
	RETURN_FAILURE : 
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CRUDBRstPmtFn with errors\n",
							NULL,
						   NULL);
		}
		return(APL_FAILURE);
}


int CRUResetTradeDelFn(char 					*p_client,
                  char 							*p_indentity_no,
                  DL_DEAL_RSTPMT_STRUCT_H  *p_dl_deal_rstpmt_struct_h_f,
                  char							*chr_p_access_stamp,
                  DEBUG_INFO_STRUCT_H				**l_debug_info_ptr)
{
	struct sqlca sqlca;
	DEAL_RU_STRUCT_H l_deal_ru_struct_h;
	char 		h_st_reg_no[21]=APL_NULL_STRING;
	double 	h_qty = 0,l_avquantity = 0;
	short 	i_st_reg_no = 0;
	short 	i_qty = 0;
	int 		int_l_ruclscodechk=0; 
	short    int_l_rowexists = 0;  

	char     chr_h_accclass[3] = APL_NULL_STRING;  
	char     chr_h_field_val[21] = APL_NULL_STRING; 
	float		dbl_l_amount_a;
	char		chr_l_trdt_a[20]=APL_NULL_STRING;

	#ifdef APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	sqlca.sqlcode = 0;

	
	EXEC SQL VAR p_client IS STRING;
   	
	EXEC SQL VAR h_st_reg_no IS STRING;

	EXEC SQL VAR chr_h_accclass IS STRING;
	EXEC SQL VAR chr_h_field_val IS STRING;
	EXEC SQL VAR chr_l_trdt_a IS STRING;

	memset(chr_l_trdt_a,APL_NULL_CHAR,sizeof(chr_l_trdt_a));

			
			
		EXEC SQL Select CLN_CLAS
      into :chr_h_accclass
      From MT_CLIENT
      Where (CLN_CODE = :p_client);

      IS_ANY_ORA_ERROR;
			
		EXEC SQL SELECT AMOUNT, DEAL_DATE ,QTY INTO :dbl_l_amount_a , :chr_l_trdt_a ,:h_qty FROM DL_DEAL WHERE 
		CLIENT=:p_client AND IDENTIY_NO=:p_indentity_no;
		IS_ANY_ORA_ERROR

		fprintf(APL_OUT_FILE,"**********************************************\n");
		fprintf(APL_OUT_FILE,"RU CHK: quantity=(%lf)\n",h_qty);
		fflush(APL_OUT_FILE);

		if (APL_FAILURE == DL_Proc_RstPmtSkip(p_dl_deal_rstpmt_struct_h_f->p_instr_code, &int_l_ruclscodechk, l_debug_info_ptr))	
		   APL_GOBACK_FAIL 

		EXEC SQL Select FIELD_VAL
      into :chr_h_field_val
      From PRO_GSSPLVAL
      where ((MAIN_FUN = 'TRADE_RRMM') AND
            (SUB_PROCESS = 'ACC_CLASS') AND NATION = :g_mt_commonsys_params_struct_h.nation_code );

       IS_ANY_ORA_ERROR;

       if (!strcmp(chr_h_accclass,  chr_h_field_val)) 
       {

		

				fprintf(APL_OUT_FILE,"RU CHK: Account=(%s)\n"	,p_client);
				fprintf(APL_OUT_FILE,"RU CHK: Refno=(%s)\n"	,p_indentity_no);
				fprintf(APL_OUT_FILE,"RU CHK: Instrode=(%s)\n"	,p_dl_deal_rstpmt_struct_h_f->p_instr_code);
				fprintf(APL_OUT_FILE,"RU CHK: --------------\n");
				fflush(APL_OUT_FILE);

				EXEC SQL DECLARE cur_TradeDelInfo CURSOR FOR
				SELECT ST_REG_NO,QTY FROM DL_RUDEAL_TMP
				WHERE CLIENT = :p_client AND IDENTIY_NO = :p_indentity_no;
	
				IS_ANY_ORA_ERROR

				EXEC SQL OPEN  cur_TradeDelInfo;
				IS_ANY_ORA_ERROR

				for( ; ; )
				{

				EXEC SQL FETCH cur_TradeDelInfo INTO :h_st_reg_no:i_st_reg_no,:h_qty:i_qty;
				IS_ANY_ORA_ERROR

				if (APL_ZERO_RESULT_SET)
					break;

				

				fprintf(APL_OUT_FILE,"RU CHK: h_st_reg_no=(%s) h_qty=(%lf)\n",h_st_reg_no,h_qty);
				fflush(APL_OUT_FILE);

				if (APL_SUCCESS != CRUDBSafekLockFn(p_client,
										p_dl_deal_rstpmt_struct_h_f->p_instr_code,
										p_dl_deal_rstpmt_struct_h_f->p_loccode,
										APL_NULL_STRING,
										h_st_reg_no,
										l_debug_info_ptr))
				{
						APL_GOBACK_FAIL
				}



	      		 if ((VAL_DELIVER_DEAL(p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]) || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='5' || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='7') ||
   		     	     (APL_SUCCESS == CRUDBAvailPosnFn( p_client,
                                             p_dl_deal_rstpmt_struct_h_f->p_instr_code,
                                             p_dl_deal_rstpmt_struct_h_f->p_loccode,
                                             'Y',
                                             &l_avquantity,
   					     								h_st_reg_no,	
                                             l_debug_info_ptr )))

			        {
      			  	   if ((VAL_RECDEAL(p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]) || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='6' || p_dl_deal_rstpmt_struct_h_f->p_dealcd[0]=='8') &&
               		 	(l_avquantity < h_qty))
	         			{
								if( int_l_ruclscodechk!=1 ) 
								{
									EXEC SQL CLOSE cur_TradeDelInfo;

        	       				CO_InsertErr(   l_debug_info_ptr,
                                 ERR_DEAL_SRNNENUFPOSN,
                                 p_client,
                                 p_indentity_no,
                                 h_st_reg_no,
                                 __LINE__,
                                 __FILE__ );
				               APL_GOBACK_FAIL
								}
        	   			}

	 	   			 	if(!strcmp(p_dl_deal_rstpmt_struct_h_f->p_cltstmp_cmp,chr_p_access_stamp))
   		     	   	{
								if( APL_SUCCESS != CRUDBUpdtPosnFn(p_client,
															p_dl_deal_rstpmt_struct_h_f->p_instr_code,
															p_dl_deal_rstpmt_struct_h_f->p_loccode,
															APL_NULL_STRING,
															'C',
															p_dl_deal_rstpmt_struct_h_f->p_dealcd[0],
															&h_qty,
															'I',
															h_st_reg_no,
															l_debug_info_ptr) )
		       				     { APL_GOBACK_FAIL }
		    			  }
					}
	   		}
			

			memset(&l_deal_ru_struct_h,NULL,			sizeof(DEAL_RU_STRUCT_H));
			strcpy(l_deal_ru_struct_h.h_dl_client, 	p_client);
			strcpy(l_deal_ru_struct_h.h_indentity_no, 		p_indentity_no);
			strcpy(l_deal_ru_struct_h.h_instr_code, 	p_dl_deal_rstpmt_struct_h_f->p_instr_code);
			strcpy(l_deal_ru_struct_h.h_loccode, 	p_dl_deal_rstpmt_struct_h_f->p_loccode);
			strcpy(l_deal_ru_struct_h.h_st_reg_no, 	h_st_reg_no);

			 


			l_deal_ru_struct_h.h_amt = dbl_l_amount_a;
		   l_deal_ru_struct_h.h_qty 	 =	h_qty; 
			strcpy(l_deal_ru_struct_h.h_dealcd, 		p_dl_deal_rstpmt_struct_h_f->p_dealcd);
			strcpy(l_deal_ru_struct_h.h_deal_dt, 	chr_l_trdt_a);
			strcpy(l_deal_ru_struct_h.h_instrdate, 			APL_NULL_STRING);

			
			
				
				EXEC SQL INSERT INTO DL_RUDEAL ( SELECT * FROM DL_RUDEAL_TMP
				WHERE client = :p_client AND IDENTIY_NO = :p_indentity_no ) ;
				IS_ANY_ORA_ERROR

				EXEC SQL DELETE FROM DL_RUDEAL_TMP
				WHERE client = :p_client AND IDENTIY_NO = :p_indentity_no;
		
				IS_ANY_ORA_ERROR

				if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
		 			{APL_GOBACK_FAIL }

		}

	
	APL_GOBACK_SUCCESS;

	RETURN_SUCCESS :
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CRUResetTradeDelFn with success\n",
							NULL,
						   NULL);
		}
		return(APL_SUCCESS);
	
	RETURN_FAILURE : 
		APL_IF_DEBUG
		{
			CO_ProcMonitor(	APL_OUT_FILE,
							"Exiting processtion CRUResetTradeDelFn with errors\n",
							NULL,
						   NULL);
		}
		return(APL_FAILURE);
}







int DL_Chk_DLInstrRst( char                    *chr_p_refno,
                        char                    *p_client,
                        char                    *p_instr_code,
								char							*p_instrdate,
                        INTL_ENV_DATA_STRUCT_H      *p_intl_env_data_struct_h,
                        DEBUG_INFO_STRUCT_H            **l_debug_info_ptr )
{
	struct sqlca sqlca;

   int   h_indicate     = 0;
   short i_indicate     = 0;

   #ifdef APL_THREADS
          APL_SET_CONTEXT
          EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

   sqlca.sqlcode=0;


   EXEC SQL SELECT 1 INTO :h_indicate:i_indicate
        FROM DUAL WHERE EXISTS
        (SELECT 1 FROM DL_DEAL
           WHERE CLIENT =:p_client
           AND IDENTIY_NO =:chr_p_refno
           AND INSTR_CODE =:p_instr_code
           AND INSTRCONV_IND IS NOT NULL);

      IS_ANY_ORA_ERROR

        if (h_indicate >0)
           {
           if(CO_InsertErr(
                       l_debug_info_ptr,
                       ERR_INSTRCONV_RESET_NOTALLOWED,
                       
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       __LINE__,
                       __FILE__
                       ) != APL_SUCCESS)
                       APL_GOBACK_FAIL
           }

        h_indicate = 0 ;

      
		
		

      EXEC SQL SELECT 1 INTO :h_indicate:i_indicate
        FROM DUAL WHERE EXISTS
        (SELECT 1 FROM CAEVENT
           WHERE CA_EVENT = 'SP'
           AND   instr_code= :p_instr_code
           AND   status  IN ( 'CP','PP')
			  AND   REC_DATE >= TO_DATE(:p_instrdate));

		
      IS_ANY_ORA_ERROR

        if (h_indicate >0)
           {
           if(CO_InsertErr(
                       l_debug_info_ptr,
                       ERR_SPLIT_RESET_NOTALLOWED,
                       
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       APL_NULL_STRING,
                       __LINE__,
                       __FILE__
                       ) != APL_SUCCESS)
                       APL_GOBACK_FAIL
           }


       if (CO_ChkErr(*l_debug_info_ptr) ==APL_SUCCESS)
          {APL_GOBACK_FAIL }

   IS_ANY_ORA_ERROR;

   APL_GOBACK_SUCCESS;

   RETURN_SUCCESS :
      APL_IF_DEBUG
      {
         CO_ProcMonitor(   APL_OUT_FILE,
                     "Exiting processtion DL_Chk_DLInstrRst with success\n",
                     NULL,
                     NULL);
      }
      return(APL_SUCCESS);

   RETURN_FAILURE :
      APL_IF_DEBUG
      {
         CO_ProcMonitor(   APL_OUT_FILE,
                     "Exiting processtion DL_Chk_DLInstrRst with errors\n",
                     NULL,
                     NULL);
      }
      return(APL_FAILURE);

}
