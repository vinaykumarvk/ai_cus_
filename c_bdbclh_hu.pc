


   
   
   
   
   
   
   
   
   
   
   
   





#include <CO_HostStructdef.h>

#define FILEPATH_LEN            70
#define FILENAME_LEN_A            80
#define DATE_LEN_A            9
#define PAGE_HDR_LENGTH     10
#define REPORT_PAGE_LEN        80
#define BRK_CD_LEN        12
#define PAGE_LENGTH					55

EXEC SQL INCLUDE sqlca;



int DL_Proc_ClrHs_hu(char **argv,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
struct sqlca				sqlca;
char                    chr_l_inifile[FILENAME_LEN_A] = APL_NULL_STRING;
FILE                    *l_ptr_ini_file = NULL;
char                    chr_l_handoff_dir[FILEPATH_LEN] = APL_NULL_STRING;
char                    chr_l_handoff_file_name[FILENAME_LEN_A] = APL_NULL_STRING;
FILE                    *l_ptr_handoff_file = NULL;
FILE                    *l_clh_xfer_HU_rpt_file = NULL; 
INTL_REPT_STRUCT_H				*l_intl_rept_struct_ha  =NULL;
int                     int_num = 0;
char                    **temp = NULL;
char							chr_l_conf_dt[APL_DATE_LEN] = APL_NULL_STRING;
char							chr_l_settledt_a[9] = APL_NULL_STRING;
char 							chr_l_verwith[4] = APL_NULL_STRING;
char							chr_l_gencl[2] = APL_NULL_STRING;
char                    chr_l_delv_trd_code_1[2] =  APL_NULL_STRING;
char                    chr_l_delv_trd_code_2[2] = APL_NULL_STRING;
char							chr_l_rec_trd_code_2[2] = APL_NULL_STRING;
char							chr_l_typeoftrd[3] = APL_NULL_STRING;
char							chr_l_typeoftrd_26[3] = APL_NULL_STRING;
char                    chr_l_locncode_c[5] =  APL_NULL_STRING;
char 							chr_l_failcode_64[3] =  APL_NULL_STRING;
char							l_failcode_90[3] =  APL_NULL_STRING;
int 							int_retval = 0;
SYS_DL_DEAL_STRUCT_H     l_sys_dl_deal_struct_hb;
SYS_DL_DEAL_STRUCT_I     l_sys_dl_deal_struct_il;
char                    chr_h_clh_ac[16] =  APL_NULL_STRING;
short                   i_clh_ac = 0;
char                    chr_l_clh_ac[7] =  APL_NULL_STRING;
char                    chr_h_dcp_clh_ac[16] =  APL_NULL_STRING;
short                   i_dcp_clh_ac = 0;
char                    chr_l_dcp_clh_ac[7] =  APL_NULL_STRING;
char							chr_l_dom_clh_ac[7] = APL_NULL_STRING;
char                    h_clt_brk_all[2]= APL_NULL_STRING;
short                   i_clt_brk_all = 0;
char                    h_our_their_ind[2] =  APL_NULL_STRING;
short                   i_our_their_ind = 0;
int 							int_l_npage = 0;
int 							int_l_nrow = 0;
int 							int_l_flgblank = 0;
int 		               int_l_no_txns = 0;
int                     int_l_seqnum_a = 0;
char							chr_l_seqnum_buf[5];	
PRO_GSEQNUM_STRUCT_H      l_pro_gseqno_struct_h;
char							chr_h_julian_day[4] =  APL_NULL_STRING;
short							i_julian_day = 0;
char                    chr_l_ref_no_eptevi[7] =  APL_NULL_STRING;
char							chr_l_ref_no_vib[10] = APL_NULL_STRING;
char							chr_l_conf_dt_year[5] =  APL_NULL_STRING;
char							chr_l_conf_dt_month[3] =  APL_NULL_STRING;
char							chr_l_conf_dt_day[3] =  APL_NULL_STRING;
char                    chr_l_cname[66] =  APL_NULL_STRING;
char                    h_clnt_clr_name[66] =  APL_NULL_STRING;
short                   i_clnt_clr_name = 0;
double						l_ntotquantity = 0.0;
char                    h_instr_isin[13] =  APL_NULL_STRING;
short                   i_instr_isin = 0;
char							h_regbrflag[3] = APL_NULL_STRING;
short							i_regbrflag = 0;
char							h_typeofinstr[4] = APL_NULL_STRING;
short							i_typeofinstr = 0;
double						h_nominal_value = 0.0;
double						l_tradenom = 0.0;
double						l_ae_rate = 0.0;
double						l_ae_rate1 = 0.0;
short							i_nominal_value = 0;
char                    chr_l_sys_date[APL_DATE_LEN] =  APL_NULL_STRING;
short							i_sys_date = 0;
short							i_ref_no_EPTEVI = 0;
short 						i_ref_no_VIB = 0;
int							i = 0;				
int							int_l_nodataflg = 0;
int							int_l_current_cursor =0;
int 							int_l_jul_date = 0; 

EXEC SQL VAR chr_l_verwith IS STRING;
EXEC SQL VAR chr_l_delv_trd_code_1 IS STRING;
EXEC SQL VAR chr_l_delv_trd_code_2 IS STRING;
EXEC SQL VAR chr_l_failcode_64 IS STRING;
EXEC SQL VAR l_failcode_90 IS STRING;
EXEC SQL VAR chr_l_locncode_c IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hb.h_domcpclt_cd IS STRING;
EXEC SQL VAR h_clnt_clr_name IS STRING;
EXEC SQL VAR chr_h_clh_ac IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hb.h_dl_client IS STRING;
EXEC SQL VAR chr_h_dcp_clh_ac IS STRING;
EXEC SQL VAR h_clt_brk_all IS STRING;
EXEC SQL VAR h_our_their_ind IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hb.h_countclt IS STRING;
EXEC SQL VAR chr_h_julian_day IS STRING;
EXEC SQL VAR h_instr_isin IS STRING;
EXEC SQL VAR chr_l_sys_date IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hb.h_indentity_no IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hb.h_transmitdate IS STRING; 
EXEC SQL VAR chr_l_ref_no_eptevi IS STRING;
EXEC SQL VAR chr_l_ref_no_vib IS STRING;
EXEC SQL VAR h_regbrflag IS STRING;
EXEC SQL VAR h_typeofinstr IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hb.h_classofdl IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hb.h_info1 IS STRING;

int_l_npage = 1;				
int_l_nrow = 0;					
int_l_flgblank = 1;			

CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Proc_ClrHs_hu \n",NULL,p_intl_env_data_struct_h_d);




memset(chr_l_verwith,NULL,sizeof(chr_l_verwith));
memset(chr_l_inifile,NULL,sizeof(chr_l_inifile));
memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
memset(chr_l_handoff_file_name,NULL,sizeof(chr_l_handoff_file_name));
memset(&l_sys_dl_deal_struct_hb, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
memset(&l_sys_dl_deal_struct_il, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
memset(&l_pro_gseqno_struct_h, NULL, sizeof(PRO_GSEQNUM_STRUCT_H));
l_intl_rept_struct_ha   =(INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));

APL_MALLOC_FAIL(l_intl_rept_struct_ha);




if (CO_SplitStr(argv[9],'|',&int_num,&temp) != APL_SUCCESS)
	{
	   CO_ProcMonitor(p_ptr_log_file,"ERROR - Splitting argv \n",NULL,p_intl_env_data_struct_h_d);	
      APL_GOBACK_FAIL
	}

strcpy(chr_l_conf_dt,temp[1]);

if (strlen(chr_l_conf_dt) == 0)
	APL_DATA_MISSING("CONF DT",APL_NULL_STRING,APL_NULL_STRING)

if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	APL_GOBACK_FAIL

strcpy(chr_l_verwith,temp[2]);

if (strlen(chr_l_verwith) == 0)
	APL_DATA_MISSING("VERIFIED WITH",APL_NULL_STRING,APL_NULL_STRING)

if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
	APL_GOBACK_FAIL

if (strcmp(chr_l_verwith,"VIB") == 0)
	{
	strcpy(chr_l_gencl,temp[3]);
	if (strlen(chr_l_gencl) == 0)
		APL_DATA_MISSING("GEN CL",APL_NULL_STRING,APL_NULL_STRING)

	if (CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS)
		APL_GOBACK_FAIL
	}




sqlca.sqlcode = 0;

strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
strcat(chr_l_inifile,"intl_sun.cfg");

if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
	{
		CO_ProcMonitor(p_ptr_log_file,"Unable to open INI FILE \n",NULL,p_intl_env_data_struct_h_d);
		APL_GOBACK_FAIL
	}

if (CO_ReadToken(l_ptr_ini_file,"INTL_HF_PATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
	{
		CO_ProcMonitor(p_ptr_log_file,"Unable to read the chr_token for SESAM_HANDOFF_DIR\n",NULL,p_intl_env_data_struct_h_d);
		APL_GOBACK_FAIL 
	}

if (CO_RtvSysDt(chr_l_sys_date, l_debug_info_ptr) != APL_SUCCESS)
	{
		CO_ProcMonitor(p_ptr_log_file,"Unable to get the SYSTEM DATE\n",NULL,p_intl_env_data_struct_h_d);
      APL_GOBACK_FAIL
	}



if ((strcmp(chr_l_verwith,"EPT") == 0) || (strcmp(chr_l_verwith,"EVI") == 0))
	{
		
		strcpy(l_pro_gseqno_struct_h.sequencename, "CLRHOUSE_HU");
		strcpy(l_pro_gseqno_struct_h.seq_attrb_a, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_b, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_c, APL_NULL_STRING);
		l_pro_gseqno_struct_h.seq_stepby = 1;
		l_pro_gseqno_struct_h.seq_start = 1;
		l_pro_gseqno_struct_h.last_seqnum = 999999999;
		l_pro_gseqno_struct_h.recycle_ind = RECYCLE_YES;
	
		int_retval = CO_RtvNxtSeqNum(&l_pro_gseqno_struct_h,l_debug_info_ptr);
		if (int_retval != APL_FAILURE)
			int_l_seqnum_a = int_retval;
		else
			APL_GOBACK_FAIL
		
		sprintf(chr_l_seqnum_buf, "%03d", int_l_seqnum_a);
	

		
		strcpy(chr_l_handoff_file_name, chr_l_handoff_dir);
		strcat(chr_l_handoff_file_name, "K");
		strcat(chr_l_handoff_file_name, chr_l_verwith);
		strcat(chr_l_handoff_file_name, chr_l_seqnum_buf);
		strcat(chr_l_handoff_file_name, ".TXT");
		if ((l_ptr_handoff_file = fopen(chr_l_handoff_file_name,"w")) == NULL)
			{
				CO_ProcMonitor(p_ptr_log_file,"Unable to open the handoff h_file\n",NULL,p_intl_env_data_struct_h_d);
				APL_GOBACK_FAIL
			}

		

		strcpy(l_intl_rept_struct_ha->report_name, chr_l_handoff_file_name+strlen(chr_l_handoff_dir));
		strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
		strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
		l_intl_rept_struct_ha->report_width = 100;
		strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
		strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);

		
		

      if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
			{
				CO_ProcMonitor(p_ptr_log_file,"Function CO_Proc_DBRptIns - Failure\n",NULL,p_intl_env_data_struct_h_d);
      		APL_GOBACK_FAIL
			}
		
			
		

		if (strcmp(chr_l_verwith,"EPT") == 0)
			
			fprintf(l_ptr_handoff_file,"HEADER BATCH\n"); 
		else 
			fprintf(l_ptr_handoff_file,"HEADER VIBER\n");

		
		
		
		 int_retval = CO_Rtv_RptFileName("IT","Same Clearingac Trnf Rep",140,p_intl_env_data_struct_h_d->processtion,argv,&l_clh_xfer_HU_rpt_file,l_debug_info_ptr);
			if (int_retval != APL_SUCCESS)
				{
					CO_ProcMonitor(p_ptr_log_file,"Unable to Generate the Internal Account Transfer Report\n",NULL,p_intl_env_data_struct_h_d);
    				APL_GOBACK_FAIL
				}

		
		int_retval = DL_Prnt_ClhRpt_Hdr(l_clh_xfer_HU_rpt_file,&int_l_nrow,&int_l_npage,chr_l_conf_dt,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);
		if (int_retval != APL_SUCCESS)
			APL_GOBACK_FAIL
			
		
			
		strcpy((char *)chr_l_delv_trd_code_1, APL_DEAL_DF);
   	strcpy((char *)chr_l_delv_trd_code_2, APL_DEAL_DVP);
		strcpy((char *)chr_l_locncode_c, "002");
		strcpy((char *)chr_l_failcode_64,"64");
		strcpy((char *)l_failcode_90,"90");

		
		
		EXEC SQL DECLARE TradeInfo1 CURSOR FOR
		SELECT * FROM DL_DEAL
		WHERE VAL_FDT = :chr_l_conf_dt
		AND trans_date IS NULL
		AND deal_cd IN (:chr_l_delv_trd_code_1,:chr_l_delv_trd_code_2,'7')
		AND INSTRUMENT_DT IS NULL
		AND location_cd = :chr_l_locncode_c
		AND VERFIED_WITH = :chr_l_verwith
		AND failreason_cd IN (:chr_l_failcode_64,:l_failcode_90)
		FOR UPDATE OF access_stamp;

		EXEC SQL OPEN TradeInfo1;
	
		IS_ANY_ORA_ERROR

		for(;;)
		{
			memset(&l_sys_dl_deal_struct_hb, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
			memset(&l_sys_dl_deal_struct_il, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
			
			EXEC SQL FETCH TradeInfo1 INTO :l_sys_dl_deal_struct_hb:l_sys_dl_deal_struct_il;
			
			IS_ANY_ORA_ERROR_CURSOR
			
			

			EXEC SQL SELECT cln_name
      	INTO :h_clnt_clr_name:i_clnt_clr_name
      	FROM MT_CLIENT
      	WHERE CLN_CODE =:l_sys_dl_deal_struct_hb.h_domcpclt_cd;
			
      	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

      	strncpy(chr_l_cname,h_clnt_clr_name,30);
      	chr_l_cname[30] = APL_NULL_CHAR;

			EXEC SQL SELECT CLN_CLH
      	INTO :chr_h_clh_ac:i_clh_ac
      	FROM MT_CLIENT
      	WHERE CLN_CODE = RTRIM(:l_sys_dl_deal_struct_hb.h_dl_client);

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

			if (strlen(chr_h_clh_ac) < 6)
				{
            	sprintf(chr_l_clh_ac,"%06.6s",chr_h_clh_ac);
            	chr_l_clh_ac[6] = APL_NULL_CHAR;
				}
					
         else
         	{
            	strncpy(chr_l_clh_ac,chr_h_clh_ac,6);
            	chr_l_clh_ac[6] = APL_NULL_CHAR;
         	}

			memset(chr_h_dcp_clh_ac,NULL,sizeof(chr_h_dcp_clh_ac));
			memset(h_clt_brk_all,NULL,sizeof(h_clt_brk_all));
 			memset(h_our_their_ind,NULL,sizeof(h_our_their_ind));	

			if (strcmp(l_sys_dl_deal_struct_hb.h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
				{
					EXEC SQL SELECT CLN_CLH,CLN_BRK_ALL,CLN_OUR_THEIR_IND
					INTO :chr_h_dcp_clh_ac:i_dcp_clh_ac,:h_clt_brk_all:i_clt_brk_all,:h_our_their_ind:i_our_their_ind
					FROM MT_CLIENT
					WHERE CLN_CODE = RTRIM(:l_sys_dl_deal_struct_hb.h_countclt); 
				}
			else
				{
					EXEC SQL SELECT CLN_CLH,CLN_BRK_ALL,CLN_OUR_THEIR_IND
					INTO :chr_h_dcp_clh_ac:i_dcp_clh_ac,:h_clt_brk_all:i_clt_brk_all,:h_our_their_ind:i_our_their_ind
					FROM MT_CLIENT
					WHERE CLN_CODE = RTRIM(:l_sys_dl_deal_struct_hb.h_domcpclt_cd);	
				}
	
			if (strlen(chr_h_dcp_clh_ac) < 6)
            sprintf(chr_l_dcp_clh_ac,"%06.6s",chr_h_dcp_clh_ac);
         else
         	{
            strncpy(chr_l_dcp_clh_ac,chr_h_dcp_clh_ac,6);
            chr_l_dcp_clh_ac[6] = APL_NULL_CHAR;
         	}

			if ((strcmp(h_clt_brk_all,"B") != 0) && (strcmp(chr_l_clh_ac,chr_l_dcp_clh_ac) == 0))
				{	
					if (int_l_nrow >= PAGE_LENGTH)
					{
						int_l_nrow = 0;
						int_l_npage = int_l_npage + 1;
						int_retval = DL_Prnt_ClhRpt_Hdr(l_clh_xfer_HU_rpt_file,&int_l_nrow,&int_l_npage,chr_l_conf_dt,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);
         			if (int_retval != APL_SUCCESS)
							{
								CO_ProcMonitor(p_ptr_log_file,"Unable to write Header to Internal Txns File\n",NULL,p_intl_env_data_struct_h_d);
            				APL_GOBACK_FAIL
							}
					}
						
					int_retval = DL_Prnt_ClhRpt_hu(l_clh_xfer_HU_rpt_file,&int_l_nrow,l_sys_dl_deal_struct_hb.h_indentity_no,l_sys_dl_deal_struct_hb.h_dl_client,l_sys_dl_deal_struct_hb.h_qty,l_sys_dl_deal_struct_hb.h_amt,chr_l_cname,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

					if (int_retval != APL_SUCCESS)
						{
							CO_ProcMonitor(p_ptr_log_file,"Unable to write details to the h_file\n",NULL,p_intl_env_data_struct_h_d);
            			APL_GOBACK_FAIL
						}
					continue;
				}
				
			else if ((strcmp(h_clt_brk_all,"B") == 0) && (strcmp(h_our_their_ind,"T") == 0))
				int_l_flgblank = 1;

			
			

			strcpy(l_pro_gseqno_struct_h.sequencename, "CLRHOUSE");
         strcpy(l_pro_gseqno_struct_h.seq_attrb_a, APL_NULL_STRING);
         strcpy(l_pro_gseqno_struct_h.seq_attrb_b, APL_NULL_STRING);
         strcpy(l_pro_gseqno_struct_h.seq_attrb_c, APL_NULL_STRING);
         l_pro_gseqno_struct_h.seq_stepby = 1;
         l_pro_gseqno_struct_h.seq_start = 1;
         l_pro_gseqno_struct_h.last_seqnum = 999;
         l_pro_gseqno_struct_h.recycle_ind = RECYCLE_EOD;

         int_retval = CO_RtvNxtSeqNum(&l_pro_gseqno_struct_h,l_debug_info_ptr);

         if (int_retval != APL_FAILURE)
            int_l_seqnum_a = int_retval;
         else
				{
					CO_ProcMonitor(p_ptr_log_file,"Unable to get the Next Sequence Number\n",NULL,p_intl_env_data_struct_h_d);
            	APL_GOBACK_FAIL
				}				

				

			
		   
		  int_l_jul_date=0;	
		  if (APL_FAILURE == CO_Rtv_JulDt( &int_l_jul_date,l_debug_info_ptr) )
		  {
			  APL_GOBACK_FAIL
		  }

		  sprintf(chr_h_julian_day, "%d",int_l_jul_date);

			
			
			for (i=0;i < 2;i++)
         	chr_l_conf_dt_day[i] = chr_l_conf_dt[i];

			for (i=0;i < 2;i++)
         	chr_l_conf_dt_month[i] = chr_l_conf_dt[i+3];

			for (i=0;i < 4;i++)
         	chr_l_conf_dt_year[i] = chr_l_conf_dt[i+6];		
			
			sprintf(chr_l_ref_no_eptevi,"%03s%03d",chr_h_julian_day,int_l_seqnum_a);			

			//fprintf(l_ptr_handoff_file,"EPT",chr_l_conf_dt_year,chr_l_conf_dt_month,chr_l_conf_dt_day); AIX Migration Changes
			fprintf(l_ptr_handoff_file,"EPT %s%s%s",chr_l_conf_dt_year,chr_l_conf_dt_month,chr_l_conf_dt_day);
			
			for(i = 0; i < 4; i++)
				fprintf(l_ptr_handoff_file," ");

			fprintf(l_ptr_handoff_file,"%s%s%s0410",chr_l_conf_dt_year,chr_l_conf_dt_month,chr_l_conf_dt_day);

			fprintf(l_ptr_handoff_file,"%s",chr_l_clh_ac);


				if (strcmp(l_sys_dl_deal_struct_hb.h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
					fprintf(l_ptr_handoff_file,"0410%s",chr_l_dcp_clh_ac);
				else
				{
					 if ((strcmp(h_clt_brk_all,"B") == 0))
					   fprintf(l_ptr_handoff_file,"%04.4s",l_sys_dl_deal_struct_hb.h_domcpclt_cd);
					else
					   fprintf(l_ptr_handoff_file,"%04.4s",chr_l_dcp_clh_ac);
						
					fprintf(l_ptr_handoff_file,"%06.6s",l_sys_dl_deal_struct_hb.h_info1);
				}
			
			int_l_flgblank = 0;
			
			for(i = 0; i < 8; i++)
				fprintf(l_ptr_handoff_file," ");
			
			l_ntotquantity = l_ntotquantity + l_sys_dl_deal_struct_hb.h_qty;
			fprintf(l_ptr_handoff_file,"%020.0f%s",l_sys_dl_deal_struct_hb.h_qty,chr_l_ref_no_eptevi);

			EXEC SQL SELECT instr_isin
			INTO :h_instr_isin:i_instr_isin
			FROM MT_INSTRUMENT
			WHERE instr_code = RTRIM(:l_sys_dl_deal_struct_hb.h_instr_code);
	
			fprintf(l_ptr_handoff_file,"%s",h_instr_isin);

			fprintf(l_ptr_handoff_file,"XXX");
			
			for(i = 0; i < 12; i++)
				fprintf(l_ptr_handoff_file," ");

			fprintf(l_ptr_handoff_file,"%015.0f",l_sys_dl_deal_struct_hb.h_qty);

			for(i = 0; i < 15; i++)
				fprintf(l_ptr_handoff_file," ");
			
			fprintf(l_ptr_handoff_file,"XXX");

			for(i = 0; i < 12; i++)
				fprintf(l_ptr_handoff_file," ");

			for(i = 0; i < 15; i++)
				fprintf(l_ptr_handoff_file,"0");
			
			for(i = 0; i < 15; i++)
				fprintf(l_ptr_handoff_file," ");

			fprintf(l_ptr_handoff_file,"XXX");
			
			for(i = 0; i < 12; i++)
				fprintf(l_ptr_handoff_file," ");
			
			for(i = 0; i < 15; i++)
				fprintf(l_ptr_handoff_file,"0");
			
			for(i = 0; i < 15; i++)
				fprintf(l_ptr_handoff_file," ");
			
			fprintf(l_ptr_handoff_file,"\n");

			EXEC SQL UPDATE DL_DEAL
         SET trans_date = :chr_l_sys_date:i_sys_date,
			lcl_identno = :chr_l_ref_no_eptevi:i_ref_no_EPTEVI
         WHERE client = :l_sys_dl_deal_struct_hb.h_dl_client
         AND   IDENTIY_NO = :l_sys_dl_deal_struct_hb.h_indentity_no;

         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
		
			int_l_no_txns = int_l_no_txns + 1;					

         continue;		

		}
			fprintf(l_ptr_handoff_file,"TRAILER%05d",int_l_no_txns);
			fprintf(l_ptr_handoff_file,"\n");
			EXEC SQL CLOSE TradeInfo1;
			APL_GOBACK_SUCCESS;
	}




//else if (strcmp(chr_l_verwith,"VIB" == 0)) //AIX -Warning Removal
else if (strcmp(chr_l_verwith,"VIB") == 0)
	{
		 
		strcpy(l_pro_gseqno_struct_h.sequencename, "CLRHOUSE_HU");
		strcpy(l_pro_gseqno_struct_h.seq_attrb_a, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_b, APL_NULL_STRING);
		strcpy(l_pro_gseqno_struct_h.seq_attrb_c, APL_NULL_STRING);
		l_pro_gseqno_struct_h.seq_stepby = 1;
		l_pro_gseqno_struct_h.seq_start = 1;
		l_pro_gseqno_struct_h.last_seqnum = 999999999;
		l_pro_gseqno_struct_h.recycle_ind = RECYCLE_YES;
																  
		int_retval = CO_RtvNxtSeqNum(&l_pro_gseqno_struct_h,l_debug_info_ptr);
		if (int_retval != APL_FAILURE)
			int_l_seqnum_a = int_retval;
		else
			APL_GOBACK_FAIL
													  
		sprintf(chr_l_seqnum_buf, "%03d", int_l_seqnum_a);
  

		
      
		strcpy(chr_l_handoff_file_name, chr_l_handoff_dir);
      strcat(chr_l_handoff_file_name, "K");
      strcat(chr_l_handoff_file_name, chr_l_verwith);
		strcat(chr_l_handoff_file_name, chr_l_gencl);
		strcat(chr_l_handoff_file_name, chr_l_seqnum_buf); 
      strcat(chr_l_handoff_file_name, ".TXT");
      if ((l_ptr_handoff_file = fopen(chr_l_handoff_file_name,"w")) == NULL)
			{
				CO_ProcMonitor(p_ptr_log_file,"Unable to open the Handoff File\n",NULL,p_intl_env_data_struct_h_d);
      		APL_GOBACK_FAIL	
			}

	  
  
     strcpy(l_intl_rept_struct_ha->report_name, chr_l_handoff_file_name+strlen(chr_l_handoff_dir));
     strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
     strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
     l_intl_rept_struct_ha->report_width = 100;
     strcpy(l_intl_rept_struct_ha->task_desc, p_intl_env_data_struct_h_d->processtion);
     strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
     strcpy(l_intl_rept_struct_ha->usr, p_intl_env_data_struct_h_d->usr);
   
  
   
   
   if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha, l_debug_info_ptr))
		{
			CO_ProcMonitor(p_ptr_log_file,"GDBInsReptFn - FAILURE\n",NULL,p_intl_env_data_struct_h_d);
   		APL_GOBACK_FAIL
		}

	

   fprintf(l_ptr_handoff_file,"HEADER VIBER");
	fprintf(l_ptr_handoff_file,"\n");


   
		
    int_retval = CO_Rtv_RptFileName("IT","Same Clearingac Trnf Rep",140,p_intl_env_data_struct_h_d->processtion,argv,&l_clh_xfer_HU_rpt_file,l_debug_info_ptr);
   
	 if (int_retval != APL_SUCCESS)
		{
			CO_ProcMonitor(p_ptr_log_file,"Unable to Generate the Internal Txns. Report\n",NULL,p_intl_env_data_struct_h_d);
    		APL_GOBACK_FAIL
		}

   
   int_retval = DL_Prnt_ClhRpt_Hdr(l_clh_xfer_HU_rpt_file,&int_l_nrow,&int_l_npage,chr_l_conf_dt,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);
  
	if (int_retval != APL_SUCCESS)
		{
			CO_ProcMonitor(p_ptr_log_file,"Unable to Write Header to the Internal Txns Report\n",NULL,p_intl_env_data_struct_h_d);
  			APL_GOBACK_FAIL
		}

	

   strcpy((char *)chr_l_delv_trd_code_2, APL_DEAL_DVP);
	strcpy((char *)chr_l_rec_trd_code_2, APL_DEAL_RVP);
	strcpy((char *)chr_l_typeoftrd_26,"26");  
   strcpy((char *)chr_l_locncode_c,"002");
   strcpy((char *)chr_l_failcode_64,"64");
   strcpy((char *)l_failcode_90,"90");

	
			
			EXEC SQL DECLARE TradeInfo2 CURSOR FOR
   		SELECT * FROM DL_DEAL
   		WHERE VAL_FDT = :chr_l_conf_dt
   		AND trans_date IS NULL
			AND (dl_class = :chr_l_typeoftrd_26 OR deal_cd = :chr_l_rec_trd_code_2 OR deal_cd = '5' OR deal_cd = '7') 
   		AND INSTRUMENT_DT IS NULL
   		AND location_cd = :chr_l_locncode_c
   		AND VERFIED_WITH = :chr_l_verwith
   		AND failreason_cd IN (:chr_l_failcode_64,:l_failcode_90)
   		FOR UPDATE OF access_stamp;
			
			EXEC SQL DECLARE TradeInfo3 CURSOR FOR
   		SELECT * FROM DL_DEAL
   		WHERE VAL_FDT = :chr_l_conf_dt
   		AND trans_date IS NULL
   		AND (dl_class <> :chr_l_typeoftrd_26 OR deal_cd = :chr_l_delv_trd_code_2 OR deal_cd = '6' OR deal_cd = '8')
   		AND INSTRUMENT_DT IS NULL
   		AND location_cd = :chr_l_locncode_c
   		AND VERFIED_WITH = :chr_l_verwith
   		AND failreason_cd IN (:chr_l_failcode_64,:l_failcode_90)
   		FOR UPDATE OF access_stamp;
			
			EXEC SQL DECLARE TradeInfo4 CURSOR FOR
   		SELECT * FROM DL_DEAL
   		WHERE VAL_FDT = :chr_l_conf_dt
   		AND trans_date IS NULL
   		AND (deal_cd = :chr_l_delv_trd_code_2 OR deal_cd = :chr_l_rec_trd_code_2 OR deal_cd in ('5','6','7','8'))
   		AND INSTRUMENT_DT IS NULL
   		AND location_cd = :chr_l_locncode_c
   		AND VERFIED_WITH = :chr_l_verwith
   		AND failreason_cd IN (:chr_l_failcode_64,:l_failcode_90)
   		FOR UPDATE OF access_stamp;

	switch(chr_l_gencl[0])
	{
		case 'R':
		EXEC SQL OPEN TradeInfo2;
      	IS_ANY_ORA_ERROR
		break;
			
		case 'D':
      EXEC SQL OPEN TradeInfo3;
      	IS_ANY_ORA_ERROR
      break;	
		
		case 'A':
      EXEC SQL OPEN TradeInfo4;
      	IS_ANY_ORA_ERROR
      break;
	}

	
	for(;;)
   {
		memset(&l_sys_dl_deal_struct_hb, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
		memset(&l_sys_dl_deal_struct_il, NULL, sizeof(SYS_DL_DEAL_STRUCT_I));
		int_l_nodataflg = 0;
		switch(chr_l_gencl[0])
   	{
      	case 'R':
   			EXEC SQL FETCH TradeInfo2 INTO :l_sys_dl_deal_struct_hb:l_sys_dl_deal_struct_il;
				IS_ANY_ORA_ERROR
				if (APL_ZERO_RESULT_SET)
					int_l_nodataflg = 1;
				int_l_current_cursor = 1;
				break;

      	case 'D':
   		EXEC SQL FETCH TradeInfo3 INTO :l_sys_dl_deal_struct_hb:l_sys_dl_deal_struct_il;
			IS_ANY_ORA_ERROR
			if (APL_ZERO_RESULT_SET)
					int_l_nodataflg = 1;
			int_l_current_cursor = 2;
			break;

      	case 'A':
   		EXEC SQL FETCH TradeInfo4 INTO :l_sys_dl_deal_struct_hb:l_sys_dl_deal_struct_il;
			IS_ANY_ORA_ERROR
			if (APL_ZERO_RESULT_SET)
					int_l_nodataflg = 1;
			int_l_current_cursor = 3;
			break;
   	}		
  
	if (int_l_nodataflg)
		break;
 
	EXEC SQL SELECT CLN_CLH
   INTO :chr_h_clh_ac:i_clh_ac
   FROM MT_CLIENT
   WHERE CLN_CODE = RTRIM(:l_sys_dl_deal_struct_hb.h_dl_client);
   
	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

   if (strlen(chr_h_clh_ac) < 6)
   	sprintf(chr_l_clh_ac,"%06s",chr_h_clh_ac);
   else
   	{
   	strncpy(chr_l_clh_ac,chr_h_clh_ac,6);
   	chr_l_clh_ac[6] = APL_NULL_CHAR;
   	}

  	EXEC SQL SELECT CLN_CLH,CLN_BRK_ALL,CLN_OUR_THEIR_IND
   INTO :chr_h_dcp_clh_ac:i_dcp_clh_ac,:h_clt_brk_all:i_clt_brk_all,:h_our_their_ind:i_our_their_ind
   FROM MT_CLIENT
   WHERE CLN_CODE = RTRIM(:l_sys_dl_deal_struct_hb.h_domcpclt_cd);

	if (strcmp(l_sys_dl_deal_struct_hb.h_domcpclt_cd,l_mt_core_sys_params_struct_h.custody_clt_cd) == 0)
		strcpy(chr_l_dcp_clh_ac,"0410");
	else if (strcmp(h_clt_brk_all,"B") != 0)
		sprintf(chr_l_dcp_clh_ac,"%04.4s",chr_h_dcp_clh_ac);
	else
		sprintf(chr_l_dcp_clh_ac,"%04.4s",l_sys_dl_deal_struct_hb.h_domcpclt_cd);

	sprintf(chr_l_dom_clh_ac,"%06.6s",chr_h_dcp_clh_ac);

	if ((strcmp(h_clt_brk_all,"B") != 0) && (strcmp(chr_l_clh_ac,chr_l_dom_clh_ac) == 0))
            {
               if (int_l_nrow >= PAGE_LENGTH)
               {
                  int_l_nrow = 0;
                  int_l_npage = int_l_npage + 1;
                  int_retval = DL_Prnt_ClhRpt_Hdr(l_clh_xfer_HU_rpt_file,&int_l_nrow,&int_l_npage,chr_l_conf_dt,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);
                  if (int_retval != APL_SUCCESS)
							{
								CO_ProcMonitor(p_ptr_log_file,"Unable to write chr_header to the clearing house\n",NULL,p_intl_env_data_struct_h_d);
                     	APL_GOBACK_FAIL
							}
               }

               int_retval = DL_Prnt_ClhRpt_hu(l_clh_xfer_HU_rpt_file,&int_l_nrow,l_sys_dl_deal_struct_hb.h_indentity_no,l_sys_dl_deal_struct_hb.h_dl_client,l_sys_dl_deal_struct_hb.h_qty,l_sys_dl_deal_struct_hb.h_amt,chr_l_cname,p_ptr_log_file,p_intl_env_data_struct_h_d,l_debug_info_ptr);

               if (int_retval != APL_SUCCESS)
						{
							CO_ProcMonitor(p_ptr_log_file,"Unable to write details to the internal txns. report\n",NULL,p_intl_env_data_struct_h_d);
            	   	APL_GOBACK_FAIL
						}
					continue;
            }

         else if ((strcmp(h_clt_brk_all,"B") == 0) && (strcmp(h_our_their_ind,"T") == 0))
            int_l_flgblank = 1;



			

         strcpy(l_pro_gseqno_struct_h.sequencename, "CLRHOUSE");
         strcpy(l_pro_gseqno_struct_h.seq_attrb_a, APL_NULL_STRING);
         strcpy(l_pro_gseqno_struct_h.seq_attrb_b, APL_NULL_STRING);
         strcpy(l_pro_gseqno_struct_h.seq_attrb_c, APL_NULL_STRING);
         l_pro_gseqno_struct_h.seq_stepby = 1;
         l_pro_gseqno_struct_h.seq_start = 1;
         l_pro_gseqno_struct_h.last_seqnum = 999;
         l_pro_gseqno_struct_h.recycle_ind = RECYCLE_EOD;

         int_retval = CO_RtvNxtSeqNum(&l_pro_gseqno_struct_h,l_debug_info_ptr);

         if (int_retval != APL_FAILURE)
            int_l_seqnum_a = int_retval;
         else
				{
					CO_ProcMonitor(p_ptr_log_file,"Unable to generate the h_next sequence number\n",NULL,p_intl_env_data_struct_h_d);
            	APL_GOBACK_FAIL
				}

			

         for (i=0;i < 2;i++)
            chr_l_conf_dt_day[i] = chr_l_conf_dt[i];

         for (i=0;i < 2;i++)
            chr_l_conf_dt_month[i] = chr_l_conf_dt[i+3];

         for (i=0;i < 4;i++)
            chr_l_conf_dt_year[i] = chr_l_conf_dt[i+6];

			sprintf(chr_l_ref_no_vib,"108000%03d",int_l_seqnum_a); 

			fprintf(l_ptr_handoff_file,"PRO");

			for(i = 0; i < 4; i++)
				fprintf(l_ptr_handoff_file," ");

         fprintf(l_ptr_handoff_file,"%s%s%s",chr_l_conf_dt_year,chr_l_conf_dt_month,chr_l_conf_dt_day);

			
			

			if((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				fprintf(l_ptr_handoff_file,"1");
			else
				fprintf(l_ptr_handoff_file,"0");

			
			
			if((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				fprintf(l_ptr_handoff_file,"0410");
			else
				fprintf(l_ptr_handoff_file,"%s",chr_l_dcp_clh_ac);

			 
		
			if((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				fprintf(l_ptr_handoff_file,"%s",chr_l_clh_ac);
			else
				for(i = 0; i < 6; i++)
					fprintf(l_ptr_handoff_file," ");

			

			if((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
            fprintf(l_ptr_handoff_file,"190170040020108100000000");
			else
				for(i = 0; i < 24; i++)
					fprintf(l_ptr_handoff_file," ");

			

			if((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				fprintf(l_ptr_handoff_file,"%s",chr_l_dcp_clh_ac);
			else
				fprintf(l_ptr_handoff_file,"0410");

			

			if((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				for(i = 0; i < 6; i++)
					fprintf(l_ptr_handoff_file," ");
			else
				fprintf(l_ptr_handoff_file,"%s",chr_l_clh_ac);

			

			if((strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"3") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"6") == 0) || (strcmp(l_sys_dl_deal_struct_hb.h_dealcd,"8") == 0))
				for(i = 0; i < 24; i++)
					fprintf(l_ptr_handoff_file," ");
			else
				fprintf(l_ptr_handoff_file,"190170040020108100000000");

			for(i = 0; i < 6; i++)
				fprintf(l_ptr_handoff_file," ");

			EXEC SQL SELECT REG_BR_IND,INSTR_TYPE,NOMINAL_VALUE,instr_isin
         INTO :h_regbrflag:i_regbrflag,:h_typeofinstr:i_typeofinstr,:h_nominal_value:i_nominal_value,:h_instr_isin:i_instr_isin
         FROM MT_INSTRUMENT
         WHERE instr_code = RTRIM(:l_sys_dl_deal_struct_hb.h_instr_code);

			

			if(strcmp(h_regbrflag,"BR") == 0)
				fprintf(l_ptr_handoff_file,"0");
			else
				fprintf(l_ptr_handoff_file,"1");

				printf("*************************************\n");
				printf("Ref No VIB=(%s)\n",chr_l_ref_no_vib);
			fprintf(l_ptr_handoff_file,"%s",chr_l_ref_no_vib);
			
			

				l_ae_rate = ( l_sys_dl_deal_struct_hb.h_cpamt / l_sys_dl_deal_struct_hb.h_qty ); 

			if(strcmp(h_typeofinstr,"SHS") == 0)
			{
				for(i = 0; i < 27; i++) 
					fprintf(l_ptr_handoff_file," ");
			}
			else
				{
				l_tradenom = (l_sys_dl_deal_struct_hb.h_qty) * ((h_nominal_value)/1000);
				printf("Trade Nom=(%020.0f)\n",l_tradenom);
				fprintf(l_ptr_handoff_file,"%020.0f",l_tradenom);
				 
				
				printf("Rate=(%07.0f)\n",l_ae_rate*100);
				EXEC SQL SELECT ROUND(:l_ae_rate*100,0) into :l_ae_rate1 from dual;
				IS_ANY_ORA_ERROR
				printf("Rate1=(%07.0f)\n",l_ae_rate1);

				fprintf(l_ptr_handoff_file,"%07.0f",l_ae_rate1); 
				}
			
			printf("CP Amount=(%020.0f)\n",l_sys_dl_deal_struct_hb.h_cpamt);
			fprintf(l_ptr_handoff_file,"%020.0f",l_sys_dl_deal_struct_hb.h_cpamt);
			
			printf("Isin=(%s)\n",h_instr_isin);
			fprintf(l_ptr_handoff_file,"%s",h_instr_isin);
			
			fprintf(l_ptr_handoff_file,"0");

			if(strcmp(h_typeofinstr,"SHS") == 0)
				{
				fprintf(l_ptr_handoff_file,"%020.0f",l_sys_dl_deal_struct_hb.h_qty);
				 

				EXEC SQL SELECT ROUND(:l_ae_rate,0) into :l_ae_rate1 from dual; 
				IS_ANY_ORA_ERROR

				fprintf(l_ptr_handoff_file,"%020.0f",l_ae_rate1);
				}
			else
				for(i = 0; i < 40; i++)
					fprintf(l_ptr_handoff_file," ");





			for(i = 0; i < 71; i++)
				fprintf(l_ptr_handoff_file," ");

			
			EXEC SQL SELECT TO_CHAR(to_date(:l_sys_dl_deal_struct_hb.h_setldt),'YYYYMMDD') INTO :chr_l_settledt_a FROM DUAL;
			IS_ANY_ORA_ERROR
			


			fprintf(l_ptr_handoff_file,"%s",chr_l_settledt_a);
			fprintf(l_ptr_handoff_file,"\n");

         EXEC SQL UPDATE DL_DEAL
         SET trans_date = :chr_l_sys_date:i_sys_date,
         lcl_identno = :chr_l_ref_no_vib:i_ref_no_VIB
         WHERE client = :l_sys_dl_deal_struct_hb.h_dl_client
         AND   IDENTIY_NO = :l_sys_dl_deal_struct_hb.h_indentity_no;
			
         IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
 
        int_l_no_txns = int_l_no_txns + 1;   			

         continue;

      }
         fprintf(l_ptr_handoff_file,"TRAILER%05d",int_l_no_txns);
			fprintf(l_ptr_handoff_file,"\n");
			switch(int_l_current_cursor)
				{
					case 1:
						EXEC SQL CLOSE TradeInfo2;
						break;
					case 2:
						EXEC SQL CLOSE TradeInfo3;
						break;
					case 3:
						EXEC SQL CLOSE TradeInfo4;
						break;
				}
         APL_GOBACK_SUCCESS;
				
	}

RETURN_FAILURE :
	{
		APL_FREE(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);

		fclose(l_ptr_handoff_file);
		fclose(l_clh_xfer_HU_rpt_file);
		return(APL_FAILURE);
	}

RETURN_SUCCESS :
	{
		APL_FREE(l_intl_rept_struct_ha);
		fclose(l_ptr_ini_file);


		fclose(l_ptr_handoff_file);
		fclose(l_clh_xfer_HU_rpt_file);
		return(APL_SUCCESS);
	}
}





int DL_Prnt_ClhRpt_Hdr(FILE *p_ptr_clh_rpt_file,int *p_nrow, int *p_npage,char *p_conf_date,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca            sqlca;
	char							chr_l_date[11] = APL_NULL_STRING;
	int							i = 0;	

	for (i=0;i<10;i++)
		chr_l_date[i] = p_conf_date[i];
	
	CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Prnt_ClhRpt_Hdr\n",NULL,p_intl_env_data_struct_h_d);
	
	sqlca.sqlcode = 0;

	fprintf(p_ptr_clh_rpt_file," ");

	fprintf(p_ptr_clh_rpt_file,"Txns between same Clearing House Subacc");

	fprintf(p_ptr_clh_rpt_file," ");

   fprintf(p_ptr_clh_rpt_file,"%s",chr_l_date);

	for(i = 0; i < 42; i++)
		fprintf(p_ptr_clh_rpt_file," ");

	fprintf(p_ptr_clh_rpt_file,"Page: ");

	fprintf(p_ptr_clh_rpt_file,"%d",*p_npage);
	
	fprintf(p_ptr_clh_rpt_file,"\n");

	
	fprintf(p_ptr_clh_rpt_file,"RefNo              Customer          Quantity       Cash Amount          C/P\n");

	fprintf(p_ptr_clh_rpt_file,"----------------------------------------------------------------------------------------------------------------------------------");

	fprintf(p_ptr_clh_rpt_file," \n");
	
	*p_nrow = 3; 

	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Prnt_ClhRpt_Hdr success\n",NULL,p_intl_env_data_struct_h_d);

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Prnt_ClhRpt_Hdr failure \n",NULL,p_intl_env_data_struct_h_d);

      return(APL_FAILURE);	
	}
}


int DL_Prnt_ClhRpt_hu(FILE *p_ptr_clh_rpt_file,int *p_nrow,char *chr_p_refno,char *chr_p_client,double p_quantity,double chr_p_amount,char *chr_p_cname,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   struct sqlca            sqlca;
	long int						int_remainder = 0;

   CO_ProcMonitor(p_ptr_log_file,"Entered processtion DL_Prnt_ClhRpt_hu\n",NULL,p_intl_env_data_struct_h_d);

   sqlca.sqlcode = 0;

   fprintf(p_ptr_clh_rpt_file,"\n");

	fprintf(p_ptr_clh_rpt_file,"%-19s%-15s%11.0f  %16.3f    %-30s\n",chr_p_refno,chr_p_client,p_quantity,chr_p_amount,chr_p_cname);

	*p_nrow = *p_nrow + 1;

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Prnt_ClhRpt_hu success\n",NULL,p_intl_env_data_struct_h_d);
      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DL_Prnt_ClhRpt_hu failure \n",NULL,p_intl_env_data_struct_h_d);
      return(APL_FAILURE);
   }
}
