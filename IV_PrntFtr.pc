


#include "IV_Control_A.h"
#include <string.h> 

EXEC SQL INCLUDE SQLCA.H;
extern int int_g_eu_condexists; 


int IV_Proc_PrnFooter(FILE *bill,
					 FILE *fl_userlog,
					 char *chr_p_billdt,
					 char *chr_p_client,
					 SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
		 			 IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct,
		 			 char p_mastsub,
		 			 double p_totcomm,
		 			 int *int_currpos,
		 			 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{


struct sqlca sqlca;
int int_retstat;
IV_SERV_MAST_STRUCT l_ivservmast_struct;
IV_EXCHANGERATE_STRUCT l_iv_exchangerate_struct;
IV_SERVICE_CHRG_STRUCT l_iv_service_chrg_struct;

int i=0;
int int_ret=0;
int int_headerlen = 0;
int n = 0; 

int int_newlen =0;
int int_retbcuststat=0;
int int_exchret=0;
int int_paymentret=0;
int int_creditbalret=0;
int int_netcommret=0;
int int_commtaxret =0;
int int_tottaxret = 0;
int int_voldisret =0;
int int_totosret =0;
int int_minfeeret =0;
int int_totcommret =0;
int int_l_dtottaxret=0;

EXEC SQL BEGIN DECLARE SECTION;


double int_h_servcode;
double dbl_h_commtax=0;
double netcomm=0;
double h_rt = 0.0;
char   h_currencycode[4];
char   chr_h_emu_ccy_A[4] = APL_NULL_STRING;
char	 h_ibbsclient[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
char	 h_mstclt[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
char   chr_h_mstacc1[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
double outstandingamount =0;
double dbl_creditbal=0;
double dbl_abscreditbal =0;
double Payment =0;
char   chr_p_to_ccy[4];
double taxfeeamount =0;
double minfeeamount =0;
double voldiscountamount =0;
double h_exchgrt=0;

static int int_l_populated = 0;  
char **chr_l_tmpfoot  = NULL;
int  number_a = 0;
int int_l_lines = 0;
char *chr_dupaddr;

char chr_tmpaddr[181];
char chr_l_h_corporate_addr[321];
int int_ilen;
int int_l_pagelength = 0;
short int_l_condexists = 0;





short i_servcode =0;
short i_commtax=0;
short i_currencycode=0;
short i_exchrt=0;
short i_fromccy=0;
short i_toccy=0;
short i_emu_ccy=0;


EXEC SQL VAR l_iv_clt_setup_struct.b_ccycd IS STRING;
EXEC SQL VAR l_ivservmast_struct.service_det IS STRING;
EXEC SQL VAR chr_h_emu_ccy_A IS STRING;
EXEC SQL VAR h_mstclt IS STRING; 
EXEC SQL VAR chr_h_mstacc1 IS STRING;
EXEC SQL VAR h_ibbsclient IS STRING; 

EXEC SQL END DECLARE SECTION;

char chr_f_exchrt[20], chr_f_payment[20], chr_f_creditbal[20], chr_f_netcomm[20];
char chr_f_commtax[20], chr_f_tottax[20], chr_f_voldisfee[20], chr_f_totosamt[20];
char chr_f_minfee[20], chr_f_totcomm[20]; 
char chr_f_euronetcomm[20];
char chr_l_amtstr[30]; 
double roundedamount = 0.0;
char chr_l_footnote[241]; 
char chr_l_footnote1[241]; 
char chr_l_foot[241];
char chr_l_foot1[241];
int int_nlength = 0;
char chr_prev[1];
int int_icount;
int int_jcount;
char chr_new[241];

double l_tottaxret = 0.0;
char chr_f_tottaxret[20];




IV_CLIENTDET_STRUCT_H l_iv_clientdet_struct_h;
char chr_l_recacc[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_l_rec_ccy[APL_CCYCODE_LEN] = APL_NULL_STRING;
int int_l_retstat = 0;


char chr_l_from_ccy[APL_CCYCODE_LEN];
char chr_l_to_ccy[APL_CCYCODE_LEN];
double l_ae_rate_to_print = 0.0;


#define  LINERR_WIDTH							68
char chr_l_temp_footer1[241]					=	APL_NULL_STRING;
char *chr_l_temp_footer2							=	NULL;
char chr_l_line_footer[LINERR_WIDTH]			=	APL_NULL_STRING;
int int_l_len_footer								=	0;
int int_l_lines_footer							=	0;
int int_l_counter									=	0;

#ifdef EMU_PROCESSING
	char chr_l_sys_date[APL_DATE_LEN] = APL_NULL_STRING;
	int int_l_emutransperiod = 0, int_euronetcommret =0;
	double dbl_l_convnetcomm =0.0;
#endif

memset(chr_f_exchrt, APL_NULL_CHAR, 20);
memset(chr_f_payment, APL_NULL_CHAR, 20);
memset(chr_f_creditbal, APL_NULL_CHAR, 20);
memset(chr_f_netcomm, APL_NULL_CHAR, 20);
memset(chr_f_commtax, APL_NULL_CHAR, 20);
memset(chr_f_tottax, APL_NULL_CHAR, 20);
memset(chr_f_voldisfee, APL_NULL_CHAR, 20);
memset(chr_f_totosamt, APL_NULL_CHAR, 20);
memset(chr_f_minfee, APL_NULL_CHAR, 20);
memset(chr_f_totcomm, APL_NULL_CHAR, 20);
memset(chr_l_footnote, APL_NULL_CHAR, 241);
memset(chr_l_footnote1, APL_NULL_CHAR, 241);
memset(chr_h_mstacc1, APL_NULL_CHAR, APL_CLIENT_LENGTH);
memset(chr_f_tottaxret,APL_NULL_CHAR, 20);


	
	fprintf(bill,"TOTAL COMMISSION AMOUNT");
	fprintf(bill,"%11s%s"," ",l_iv_clt_setup_struct.b_ccycd);

   
   if ( APL_FAILURE == CO_Chk_CntryEnabled( "BILL_PRINTING",
                                          "PAGE_LENGTH",
                                          &int_l_condexists,
                                          l_debug_info_ptr) )
   {
      APL_GOBACK_FAIL
   }

   if (int_l_condexists)
      int_l_pagelength = 70;
   else  int_l_pagelength = 58;

	int_totcommret = IV_Proc_Round(&p_totcomm,l_iv_clt_setup_struct.b_ccycd,chr_f_totcomm,l_debug_info_ptr);
	if (int_totcommret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_totcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd, l_debug_info_ptr);
		strcpy(chr_f_totcomm, chr_l_amtstr + 10); 

		
		if ( roundedamount != 0 )
		   fprintf(bill,"%13s%s\n"," ",chr_f_totcomm);
		else
		   fprintf(bill,"%16s%s\n"," ",chr_f_totcomm);
		(*int_currpos)++;

		if ((*int_currpos) + 1 > int_l_pagelength)
		{
			fprintf(bill,"\f");
			fprintf(bill,"\n");
			*int_currpos =1;
		}
	}







	memset(&l_ivservmast_struct, NULL , sizeof(IV_SERV_MAST_STRUCT));
	memset(&l_iv_service_chrg_struct, NULL , sizeof(IV_SERVICE_CHRG_STRUCT));

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRGDel(VOLDISCOUNTFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVICES)\n");
			APL_GOBACK_FAIL
		}
		else if (int_retstat == IV_NO_DATA_FOUND_ERR)
		{
			fprintf(fl_userlog,"Service detail  not int_found for volume discount fees \n");
			APL_GOBACK_FAIL
			
		}
	}
	

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRG(chr_p_billdt,chr_p_client,p_mastsub,VOLDISCOUNTFEE,&l_iv_service_chrg_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVCHARGE)\n");
			APL_GOBACK_FAIL
		}
	}

	
   
   if ( l_iv_service_chrg_struct.comm_amt )
	{
			
			fprintf(bill,"%s%18s",l_ivservmast_struct.service_det," ");
			fprintf(bill,"%s%s%3s"," ",l_iv_clt_setup_struct.b_ccycd," ");

			voldiscountamount = l_iv_service_chrg_struct.comm_amt;
		
			int_voldisret = IV_Proc_Round(&l_iv_service_chrg_struct.comm_amt,l_iv_service_chrg_struct.b_ccycd,chr_f_voldisfee,l_debug_info_ptr);
			if (int_voldisret == 1)
			{
				

				roundedamount = 0.0;
				memset(chr_l_amtstr, APL_NULL_CHAR, 30);
				sscanf(chr_f_voldisfee, "%lf", &roundedamount);
				
				CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_service_chrg_struct.b_ccycd,l_debug_info_ptr); 
				strcpy(chr_f_voldisfee, chr_l_amtstr + 10); 

				fprintf(bill,"%11s%s\n"," ",chr_f_voldisfee);
				(*int_currpos)++;
				
				if ((*int_currpos) + 1 > int_l_pagelength)
				{
						fprintf(bill,"\f\n");
						*int_currpos =1;
				}
			}
			else
			{	
				fprintf(fl_userlog,"Returned Failed from Rounder1\n"); 
				APL_GOBACK_FAIL
			}
	}












 




	
	memset(&l_ivservmast_struct, NULL , sizeof(IV_SERV_MAST_STRUCT));
	memset(&l_iv_service_chrg_struct, NULL , sizeof(IV_SERVICE_CHRG_STRUCT));

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRGDel(TAXFEE,&l_ivservmast_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVICES)\n");
			APL_GOBACK_FAIL
		}
		else if (int_retstat == IV_NO_DATA_FOUND_ERR)
		{
			fprintf(fl_userlog,"Service detail  not int_found \n");
			CO_InsertErr(l_debug_info_ptr,ERR_SERVDESC_CANT_EMPTY,APL_NULL_STRING, APL_NULL_STRING,APL_NULL_STRING,__LINE__,__FILE__);
			APL_GOBACK_FAIL
		}
	}

	if (APL_FAILURE ==IV_Rtv_IVSRVCHRG(chr_p_billdt,chr_p_client,p_mastsub,TAXFEE,&l_iv_service_chrg_struct,&int_retstat,l_debug_info_ptr))
	{
		if (int_retstat == IV_CRITCAL_ERROR_IND)
		{
			fprintf(fl_userlog,"DB ERROR(BSERVCHARGE)\n");
			APL_GOBACK_FAIL
		}
		else if (int_retstat == IV_NO_DATA_FOUND_ERR)
		{
			l_iv_service_chrg_struct.comm_amt = 0;
		}
	}
   
	if (l_iv_service_chrg_struct.comm_amt > 0)
	{
	fprintf(bill,"%s",l_ivservmast_struct.service_det);
	fprintf(bill, "%3s"," ");
	fprintf(bill,"@");

	int_commtaxret = IV_Proc_Round(&l_iv_clt_setup_struct.comm_tax_amt,l_iv_clt_setup_struct.b_ccycd,chr_f_commtax,l_debug_info_ptr);
	if (int_commtaxret == 1)
	{
	  if(l_iv_clt_setup_struct.comm_tax_amt > 0)
	  {
		int i = 0;

		for (i = 0; chr_f_commtax[i]; i++)
		{
			if ( chr_f_commtax[i] != ' ' )
				fprintf(bill,"%c", chr_f_commtax[i]);
		}
		
			if ( !strchr(chr_f_commtax, '.') )
					{
						fprintf(bill, ".00");
					}
	  }
     else
		fprintf(bill,"%s0.00"," ");
	  fprintf(bill,"%15s%s"," ",l_iv_clt_setup_struct.b_ccycd);
	}
	else  
   {
		fprintf(fl_userlog,"Returned Failed from Rounder3\n"); 
		APL_GOBACK_FAIL 
	}

	taxfeeamount = l_iv_service_chrg_struct.comm_amt;

	int_tottaxret = IV_Proc_Round(&l_iv_service_chrg_struct.comm_amt,l_iv_service_chrg_struct.b_ccycd,chr_f_tottax,l_debug_info_ptr);
	if (int_tottaxret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_tottax, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_service_chrg_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_tottax, chr_l_amtstr + 10); 



 
		 
		fprintf(bill,"%13s%s\n"," ",chr_f_tottax); 

     
      if (int_g_eu_condexists != 0)
      {
			if (strcmp(l_iv_clt_setup_struct.b_ccycd,g_mt_commonsys_params_struct_h.dom_ccy) != 0)
			{
					
        			if (APL_FAILURE == ConvToFxFn_GR(l_iv_clt_setup_struct.b_ccycd,
               			                     g_mt_commonsys_params_struct_h.dom_ccy,
                        			            g_mt_commonsys_params_struct_h.dom_ccy,
                                 			   chr_p_billdt,
                                    		   &h_rt,
                                             &int_retstat,
                                             l_debug_info_ptr) )
        			{
          			fprintf(fl_userlog,"Failed To Fetch Exchange Rate Between %s and %s \n",l_iv_clt_setup_struct.b_ccycd,g_mt_commonsys_params_struct_h.dom_ccy);
          			APL_GOBACK_FAIL
        			}
          		l_ae_rate_to_print = 0.0;

          		if ( !strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind, "D" ) )
          		{
             		l_ae_rate_to_print = h_rt;
          		}
          		else
          		{
             		l_ae_rate_to_print = 1.0/ h_rt;
          		}
             	l_tottaxret= (l_ae_rate_to_print * l_iv_service_chrg_struct.comm_amt);
             	int_l_dtottaxret = IV_Proc_Round(&l_tottaxret,g_mt_commonsys_params_struct_h.dom_ccy,chr_f_tottaxret,l_debug_info_ptr);
             	if (int_l_dtottaxret == 1)
             	{
                 roundedamount = 0.0;
                 memset(chr_l_amtstr, APL_NULL_CHAR, 30);
                 sscanf(chr_f_tottaxret, "%lf", &roundedamount);
                 CO_Rtv_FormatAmt(roundedamount, chr_l_amtstr, 'Y', 'Y', l_debug_info_ptr);
                 CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', g_mt_commonsys_params_struct_h.dom_ccy,l_debug_info_ptr);
                 strcpy(chr_f_tottaxret, chr_l_amtstr + 10);
                 fprintf(bill,"\t\t%28s%s"," ",g_mt_commonsys_params_struct_h.dom_ccy);
                 fprintf(bill, "%13s%s\n"," ",chr_f_tottaxret);
               }
         }
      }
     

		(*int_currpos)++;

		if ((*int_currpos) + 1 > int_l_pagelength)
		{
			fprintf(bill,"\f\n");
			*int_currpos =1;
		}
	}
  } 
  else
     { taxfeeamount = 0 ;}
  





	netcomm = p_totcomm + voldiscountamount + minfeeamount+ taxfeeamount ;  

	fprintf(bill,"NET COMMISSION");
	fprintf(bill,"%20s%s"," ",l_iv_clt_setup_struct.b_ccycd);
	int_netcommret = IV_Proc_Round(&netcomm,l_iv_clt_setup_struct.b_ccycd,chr_f_netcomm,l_debug_info_ptr);
	if (int_netcommret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_netcomm, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_netcomm, chr_l_amtstr + 10); 

		
		if ( roundedamount != 0)
		   fprintf(bill,"%13s%s\n"," ",chr_f_netcomm);
		else
		   fprintf(bill,"%16s%s\n"," ",chr_f_netcomm);
		(*int_currpos)++;

		if ((*int_currpos) + 1 > int_l_pagelength)
		{
			fprintf(bill,"\f\n");
			*int_currpos =1;
		}
	
	}
	else  
	{
		fprintf(fl_userlog,"Returned Failed from Rounder4\n"); 
		APL_GOBACK_FAIL 
	}






if (l_sys_ivcntl_param_struct.generate_ind == 'N')
	outstandingamount = l_iv_clt_setup_struct.last_lost_amt;
else
	outstandingamount = l_iv_clt_setup_struct.total_osamount; 

	dbl_creditbal  = outstandingamount + netcomm;

	EXEC SQL SELECT cln_master into :chr_h_mstacc1 from
	MT_CLIENT WHERE CLN_CODE = :l_iv_clt_setup_struct.client;

	IS_ANY_ORA_ERROR



if ( (p_mastsub =='C') || ( (strcmp(chr_h_mstacc1, l_iv_clt_setup_struct.client)) &&  ( l_iv_clt_setup_struct.b_gen_ind == 'S')) )
{
	if (dbl_creditbal >= 0)
		fprintf(bill,"TOTAL AMOUNT OUTSTANDING" );
	else
		fprintf(bill,"CURRENT CREDIT_IND BALANCE  "); 

	

	fprintf(bill,"%10s%s"," ",l_iv_clt_setup_struct.b_ccycd);

	dbl_abscreditbal = fabs(dbl_creditbal);

	int_creditbalret = IV_Proc_Round(&dbl_abscreditbal,l_iv_clt_setup_struct.b_ccycd,chr_f_creditbal,l_debug_info_ptr);
	if (int_creditbalret == 1)
	{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_creditbal, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_creditbal, chr_l_amtstr + 10); 
      
		
		if ( roundedamount != 0)
		   fprintf(bill,"%13s%s\n"," ",chr_f_creditbal);
		else
		   fprintf(bill,"%16s%s\n"," ",chr_f_creditbal);
		(*int_currpos)++;
		
		if ((*int_currpos) + 1 > int_l_pagelength)
		{
			fprintf(bill,"\f\n");
			*int_currpos =1;
		}
	}
	else
   {
		fprintf(fl_userlog,"Returned Failed from Rounder5\n"); 
		APL_GOBACK_FAIL
	}
	if (l_sys_ivcntl_param_struct.generate_ind =='N')
		Payment = dbl_creditbal - l_iv_clt_setup_struct.total_osamount;
	
	if (Payment >0)
	{
		fprintf(bill,"THANK YOU FOR YOUR PAYMENT(S)");
		fprintf(bill,"%5s%s"," ",l_iv_clt_setup_struct.b_ccycd);
		int_paymentret = IV_Proc_Round(&Payment,l_iv_clt_setup_struct.b_ccycd,chr_f_payment,l_debug_info_ptr);
		if (int_paymentret ==1)
		{
		

		roundedamount = 0.0;
		memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
		sscanf(chr_f_payment, "%lf", &roundedamount);
		
		CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr);
		strcpy(chr_f_payment, chr_l_amtstr + 10); 

			
			fprintf(bill,"%13s%s\n"," ",chr_f_payment);
			(*int_currpos)++;

			if ((*int_currpos) + 1 > int_l_pagelength)
			{
				fprintf(bill,"\f\n");
				*int_currpos =1;
			}
		}
		else
		{
			fprintf(fl_userlog,"Returned Failed from Rounder6\n"); 
			APL_GOBACK_FAIL 
		}

		fprintf(bill,"CURRENT OUTSTANDING AMOUNT");
		fprintf(bill,"%8s%s"," ",l_iv_clt_setup_struct.b_ccycd);

		int_totosret = IV_Proc_Round(&l_iv_clt_setup_struct.total_osamount,l_iv_clt_setup_struct.b_ccycd,chr_f_totosamt,l_debug_info_ptr);
		if (int_totosret == 1)
		{
			

			roundedamount = 0.0;
			memset(chr_l_amtstr, APL_NULL_CHAR, 30); 
			sscanf(chr_f_totosamt, "%lf", &roundedamount);
			
			CO_Rtv_FormatAmtCcy(roundedamount, chr_l_amtstr, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr);
			strcpy(chr_f_totosamt, chr_l_amtstr + 10); 

			
			fprintf(bill,"%13s%s\n"," ",chr_f_totosamt);
			(*int_currpos)++;

			if ((*int_currpos) + 1 > int_l_pagelength)
			{
				fprintf(bill,"\f\n");
				*int_currpos =1;
			}

		}
		else
		{
			fprintf(fl_userlog,"Returned Failed from Rounder7\n"); 
			APL_GOBACK_FAIL	
		}
		
	}
}


  







	if ( strcmp(g_mt_commonsys_params_struct_h.dom_ccy,
		  l_iv_clt_setup_struct.b_ccycd) )
	{
		

		
		if (APL_FAILURE == ConvToFxFn_GR(l_iv_clt_setup_struct.b_ccycd,
											 g_mt_commonsys_params_struct_h.dom_ccy,
											 g_mt_commonsys_params_struct_h.dom_ccy,
											 chr_p_billdt,
											 &h_rt,
											 &int_retstat,
											 l_debug_info_ptr) )
		{
			fprintf(fl_userlog,"Failed To Fetch Exchange Rate Between %s and %s \n",l_iv_clt_setup_struct.b_ccycd, g_mt_commonsys_params_struct_h.dom_ccy);
			APL_GOBACK_FAIL
		}

		memset(chr_l_from_ccy, APL_NULL_CHAR, APL_CCYCODE_LEN);
		memset(chr_l_to_ccy, APL_NULL_CHAR, APL_CCYCODE_LEN);
		l_ae_rate_to_print = 0.0;

		if ( !strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind, "D" ) )
		{
			strcpy(chr_l_from_ccy, l_iv_clt_setup_struct.b_ccycd);
			strcpy(chr_l_to_ccy, g_mt_commonsys_params_struct_h.dom_ccy);
			l_ae_rate_to_print = h_rt;
		}
		else
		{
			strcpy(chr_l_from_ccy, g_mt_commonsys_params_struct_h.dom_ccy);
			strcpy(chr_l_to_ccy, l_iv_clt_setup_struct.b_ccycd);
			l_ae_rate_to_print = 1.0/ h_rt;
		}

		fprintf(bill,"\n1 %s", chr_l_from_ccy);
		(*int_currpos)++;
		
			if ((*int_currpos) + 1 > int_l_pagelength)
			{
				fprintf(bill,"\f\n");
				*int_currpos =1;
			}
			fprintf(bill,"%3s="," ");
			fprintf(bill,"   %f",l_ae_rate_to_print);

  		fprintf(bill,"  %s\n", chr_l_to_ccy);
		(*int_currpos)++;

		if ((*int_currpos) + 1 > int_l_pagelength)
		{
			fprintf(bill,"\f\n");
			*int_currpos =1;
		}
	}
	
	
	
	if ( strlen(l_iv_clt_setup_struct.information) )
	{
		EXEC SQL SELECT REPLACE(REPLACE(information, CHR(13),'|') ,CHR(10),'|') || '|' as information 
		into :chr_l_footnote
		from IV_CLIENTSETUP where client = :l_iv_clt_setup_struct.client;

		IS_ANY_ORA_ERROR

		if (APL_FAILURE == CO_SplitStr( chr_l_footnote,'|',&number_a, &chr_l_tmpfoot))
   	{
      	fprintf(fl_userlog,"Failure  while splitting %s \n",chr_l_footnote);
      	APL_GOBACK_FAIL
   	}

  		int_l_lines = number_a/2;
 	  int_l_lines = int_l_lines+1;
   	fprintf(fl_userlog,"l_lines chr_value is: %d\n",int_l_lines);
		fprintf(bill,"\n");
		for (int_nlength=0;int_nlength<=number_a;)
   	{
			strcpy(chr_l_temp_footer1,chr_l_tmpfoot[int_nlength]);
			int_l_len_footer = strlen(chr_l_temp_footer1);
			if(int_l_len_footer>68)
			{
				int_l_lines_footer = (int_l_len_footer / LINERR_WIDTH) ;
				if(int_l_len_footer > (int_l_lines_footer * LINERR_WIDTH))
					int_l_lines_footer++;
				chr_l_temp_footer2 = chr_l_temp_footer1;
				for (int_l_counter=1; int_l_counter<=int_l_lines_footer; int_l_counter++)
				{
					strncpy(chr_l_line_footer, chr_l_temp_footer2,LINERR_WIDTH);
					fprintf(bill, "%s\n",chr_l_line_footer);
					
					chr_l_temp_footer2 = chr_l_temp_footer2 + LINERR_WIDTH;
				}
			}
			else
			{
      		fprintf(bill,"%s\n",chr_l_tmpfoot[int_nlength]);
      		(*int_currpos)++;
				if ((*int_currpos) + 1 > int_l_pagelength)	
      		{
         		fprintf(bill,"\f\n");
         		*int_currpos =1;
      		}												
			}
      	fprintf(fl_userlog,"The chr_value of int_nlength in the loop is: %d\n",int_nlength);
      	int_nlength = int_nlength +2;
   	}

		
		
		
	}

	#ifdef EMU_PROCESSING 

   memset(chr_l_sys_date, APL_NULL_CHAR, APL_DATE_LEN);

   if ( APL_FAILURE == CO_RtvSysDt(chr_l_sys_date, l_debug_info_ptr) )
   {
      fprintf(fl_userlog,"Failed To Fetch System Date\n");
      APL_GOBACK_FAIL
   }

   if ( APL_FAILURE ==
               CO_Chk_EMU_Period(chr_l_sys_date, &int_l_emutransperiod, l_debug_info_ptr) )
   {
      fprintf(fl_userlog,"CM_ChkEMUPeriod() returned failure.\n");
      APL_GOBACK_FAIL
	}

	if ( int_l_emutransperiod > 1 )
	{
		
		EXEC SQL SELECT NVL(LINK_TAG, NULL)
		INTO     :chr_h_emu_ccy_A
		FROM     PRO_GSSPLVAL
		WHERE    MAIN_FUN = 'EMUCONV'
		AND      SUB_PROCESS       = 'EMU_CCY'
		AND      NATION        = :g_mt_commonsys_params_struct_h.nation_code;

		IS_ANY_ORA_ERROR

		if (strcmp(l_iv_clt_setup_struct.b_ccycd,chr_h_emu_ccy_A) != 0)
		{
			
			h_rt = 0.0;
			
			if (APL_FAILURE == ConvToFxFn_GR(l_iv_clt_setup_struct.b_ccycd,
												  chr_h_emu_ccy_A,
												  g_mt_commonsys_params_struct_h.dom_ccy,
												  chr_p_billdt,
												  &h_rt,&int_retstat,l_debug_info_ptr) )
			{
					fprintf(fl_userlog,"Returned Failed from IV_Proc_ConvToFxFn\n"); 
					APL_GOBACK_FAIL
			}
			dbl_l_convnetcomm = (netcomm * h_rt);
			fprintf(bill,"OUTSTANDING AMOUNT IN EUR ");
			int_euronetcommret = IV_Proc_Round(&dbl_l_convnetcomm,chr_h_emu_ccy_A,
											chr_f_euronetcomm,l_debug_info_ptr);
			if (int_euronetcommret == 1)
			{
				roundedamount = 0.0;
				memset(chr_l_amtstr, APL_NULL_CHAR, 30);
				sscanf(chr_f_euronetcomm,"%lf",&roundedamount);
				
				CO_Rtv_FormatAmtCcy(roundedamount,chr_l_amtstr,'Y','Y',chr_h_emu_ccy_A,l_debug_info_ptr);
				strcpy(chr_f_euronetcomm,chr_l_amtstr + 10); 
				fprintf(bill,"%25s%s\n"," ",chr_f_euronetcomm);
				(*int_currpos)++;
				if ((*int_currpos) + 1 > int_l_pagelength)
				{
					fprintf(bill,"\f\n");
					*int_currpos =1;
				}
			}
			else
			{
				fprintf(fl_userlog,"Returned Failed from Rounder9\n"); 
				APL_GOBACK_FAIL
			}
		}
	} 

	#endif 

for (i=0;i<67;fprintf(bill,"-"),i++);
fprintf(bill,"\n");


	{

	RETURN_SUCCESS:
				APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_Proc_PrnFooter succesfully\n",NULL,NULL);
				}
            return(APL_SUCCESS);

        RETURN_FAILURE:
				APL_IF_DEBUG
				{
					CO_ProcMonitor(APL_OUT_FILE,"Exiting out of IV_Proc_PrnFooter unsuccesfully\n",NULL,NULL);
				}
            return (APL_FAILURE);
    }
}
