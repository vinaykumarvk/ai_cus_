/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 * Module Name         :      Corporate Actions
 *
 * File Name           :      CA_EntitlAuth.pc
 *
 * Description         :      Contains Functions Related to Entitlement Authorization Maintenance
 *
 *
 *
 *            Version Control Block
 *
 * Date        Version     Author           Description		RFS No.
 * ---------   --------  ---------------  ------------------	---------
 * 22/02/2006   1.3	   Smita Bhat   Changes for new Cols	HDFCCA_001,HDFCCA_002,HDFCCA_017
 *												 Changed Variables as per Coding Stds
 *************************************************************************/
#include "CR_Common.h"
#include "CA_Common.h"
#include "CO_Commdef.h"
/* #include "CO_IndStructdef.h"  Chirag 01-11-2006 SP-CR Entitle modification after deal generation */


#define MSG_CODERR_LEN 7	
#define ENT_IND 		1
#define IMG_IND 		0
#define ENT_MSG 		1
#define MSG_NO_ENT_CHG 	2
#define MSG_NO_ENT_REV 	3

/*Smita - HDFCCA_001,HDFCCA_002,HDFCCA_017 - Entitlement Auth Maintenance*/
#include <strings.h>
char *strtok_r(char *s1, const char *s2, char **lasts);
/*Smita - HDFCCA_001,HDFCCA_002,HDFCCA_017 - Entitlement Auth Maintenance*/

#define LOGIC_ENT_MSG(msg1,msg2,msg3,msg4,msg5) \
if ( !strcmp(p_event_type,EVT_STOK_DIV) ||	!strcmp(p_event_type,EVT_BONUS) ||	!strcmp(p_event_type,EVT_SPLIT) || !strcmp(p_event_type,EVT_CASH_DIV) || !strcmp(p_event_type,EVT_DECR_VAL)  || !strcmp(p_event_type,EVT_CAP_RED))\
{\
  strcpy(chr_msg_nbr,msg1);\
}\
if ( !strcmp(p_event_type,EVT_BOND))\
{\
  strcpy(chr_msg_nbr,msg2);\
}\
if ( !strcmp(p_event_type,EVT_BOND_REDMP) )\
{\
  strcpy(chr_msg_nbr,msg3);\
}\
if ( !strcmp(p_event_type,EVT_RHTS) )\
{\
  strcpy(chr_msg_nbr,msg4);\
}\
if ( !strcmp(p_event_type,EVT_OFFER)|| !strcmp(p_event_type,EVT_CV) )\
{\
  strcpy(chr_msg_nbr,msg5);\
}

#define  GET_ACCESS_STAMP_APL_DATE \
if (  CO_RtvSysDtTime(pro_sys_date,l_debug_info_ptr) == APL_FAILURE )\
   {\
     APL_GOBACK_FAIL\
    }\
strcpy(access_stamp,pro_sys_date);\
strcpy(pro_sys_date,strtok_r(pro_sys_date," ",&int_pos));\
strcat(pro_sys_date,APL_NULL_TIME);

EXEC SQL INCLUDE SQLCA.H;





static	int 	CA_Mod_EntitlAuthRst(CA_CAENTL_AUT_STRUCT_H    *p_ca_caentl_aut_struct_h,
					              INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
  		      				     DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  				);



extern 	int 	CA_CheckEntl( char						*chr_p_ca_id,
									char						*chr_p_client, 
								   CA_CHK_DET_STRUCT_H		*p_ca_chk_det_struct_h,
				     	      	INTL_ENV_DATA_STRUCT_H   *p_intlenv_data_struct_h,
									DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                  		);

extern int	CA_RtvEntitl(char					*chr_p_ca_id,
								char					*chr_p_client,
								CA_CAENTITLEMENT_STRUCT_H	*p_ca_caentitlement_struct_h_b,
								CA_CAENTITLEMENT_STRUCT_I	*p_ca_caentitlement_struct_i,
								char					*p_ora_rowid,
								short					*p_img_ind,
								DEBUG_INFO_STRUCT_H		**l_debug_info_ptr
								);

int CA_SendEntMsg( char *p_event_type,
					  char *chr_p_ca_id,
					  char *chr_p_client,
					  int	 message_class,
					  DEBUG_INFO_STRUCT_H **l_debug_info_ptr); 

/* Chirag 01-11-2006 SP-CR Entitle modification after deal generation 

int CA_Del_SP_CR_Deals(char *p_corp_id,
		       char *p_client,
		       INTL_ENV_DATA_STRUCT_H *p_intlenv_data_struct_h,
		       DEBUG_INFO_STRUCT_H **l_debug_info_ptr);


extern int CR_Proc_DLPmtRst(char *p_client,
			    char *l_identiy_no,
			    char *l_access_stamp,
			    INTL_ENV_DATA_STRUCT_H *p_intlenv_data_struct_h,
			    DEBUG_INFO_STRUCT_H  **l_debug_info_ptr);


extern int DL_Proc_TrdOth( SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_h,
                           INTL_ENV_DATA_STRUCT_H *p_intlenv_data_struct_h,
                           DEBUG_INFO_STRUCT_H **l_debug_info_ptr);
		   

Chirag 01-11-2006 SP-CR Entitle modification after deal generation */

int CA_Mod_AuthEntitl( CA_CAENTL_AUT_STRUCT_H  *p_ca_caentl_aut_struct_h,
                      INTL_ENV_DATA_STRUCT_H     *p_intlenv_data_struct_h,
   	                DEBUG_INFO_STRUCT_H      	 	 **l_debug_info_ptr
      	            )
{
	struct sqlca sqlca;

   int int_h_no_rec=0;
   char chr_h_redenom_type[EVT_CLASS_]           =  {EVT_REDOM};  


 EXEC SQL VAR chr_h_redenom_type     is string;



	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entered A_DbAuthEntitlFn",NULL,p_intlenv_data_struct_h);
	}


  
   
   EXEC SQL SELECT NVL(count(*),0)
   INTO :int_h_no_rec
   FROM CAEVENT
   WHERE corp_id=:p_ca_caentl_aut_struct_h->h_corp_id
   AND   CA_EVENT=:chr_h_redenom_type ;


   if ( ( int_h_no_rec != 0) )
		{
			
         CO_InsertErr          ( l_debug_info_ptr,
											  ERR_REDN_EVNTENTITLE_MNT_NOTALLOWED,
                                   p_intlenv_data_struct_h->h_mode,
                                   APL_NULL_STRING,
                                   APL_NULL_STRING,
                                    __LINE__,
                                    __FILE__
                                    );

			APL_GOBACK_FAIL
		}		 
			


	if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_AUTHORISE)	)	)
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is Authorise",NULL,p_intlenv_data_struct_h);
			}
		}
	else if (	(	!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_RESET)	)	)
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Mode is Reset",NULL,p_intlenv_data_struct_h);
			}
	}
			if (	CA_Mod_EntitlAuthRst(	p_ca_caentl_aut_struct_h,
										p_intlenv_data_struct_h,
										l_debug_info_ptr
										) == APL_FAILURE)
				{
					APL_GOBACK_FAIL
				}
			else
				{
					APL_GOBACK_SUCCESS
				}
	
		
		APL_GOBACK_SUCCESS
		RETURN_SUCCESS	:
		
		{
			APL_IF_DEBUG
			{	
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_AuthEntitl successfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_Mod_AuthEntitl unsuccessfully",NULL,p_intlenv_data_struct_h);
			}
			return (APL_FAILURE);
		}
}



static	int CA_Mod_EntitlAuthRst(	CA_CAENTL_AUT_STRUCT_H 	*p_ca_caentl_aut_struct_h,
										INTL_ENV_DATA_STRUCT_H	*p_intlenv_data_struct_h,
						   			DEBUG_INFO_STRUCT_H 			**l_debug_info_ptr
								   	)
{	
	

	struct	sqlca	sqlca;
   CA_CAENTITLEMENT_STRUCT_H   *l_ca_caentitlement_struct_ha     =  NULL;
   CA_CAENTITLEMENT_STRUCT_I   *l_ca_caentitlement_struct_ia     =  NULL;
   CA_CAENTITLEMENT_STRUCT_H   *l_ca_caentitlement_struct_h =  NULL;
   CA_CAENTITLEMENT_STRUCT_I   *l_ca_caentitlementimg_struct_i =  NULL;
   CA_CHK_DET_STRUCT_H    *l_ca_chk_det_struct_h   =  NULL;
   short    int_error_ind=APL_SUCCESS;
   short    img_ind=ENT_IND;
   char     pro_sys_date[APL_DATE_LEN]=APL_NULL_STRING;
   char     chr_stat_date[APL_DATE_LEN]=APL_NULL_STRING;
   char     access_stamp[APL_DATE_LEN]=APL_NULL_STRING;
   char     *int_pos;
	char		h_checker[APL_USERID_LEN]=APL_NULL_STRING;
	char		h_checker_dt[APL_DATE_LEN]=APL_NULL_STRING;
	char		status_entitl[APL_STATUS_LEN]=APL_NULL_STRING;
	char		chr_ent_rowid[APL_ROWID_LEN]=APL_NULL_STRING;
	char		chr_ent_img_rowid[APL_ROWID_LEN]=APL_NULL_STRING;
	char		h_sent550date[APL_DATE_LEN]=APL_NULL_STRING;
	short		i_sent550date=0;
	double	event_amount_bal =0.0;
	double	event_quantity_bal = 0.0;
	int		int_event_noentmsgs =0;
	int		int_event_noentacs = 0;
	int		message_class=0;
	int		count = 0;
	int		int_pay_count = 0;
	int		int_gp_count = 0;
	int		int_gp_warn_count = 0;
	char		h_entl_send_msg_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
	short		i_snd_msg =0;
	char chr_sys_sts_auth[APL_STATUS_LEN] ={APL_STS_AUTH};

	/* Chirag 01-11-2006 SP-CR Entitle modification after deal generation 

	char l_ca_event[3] = APL_NULL_STRING;
	char l_op_evt_class[3] = APL_NULL_STRING;

	short i_ca_event = 0;
	short i_op_evt_class = 0;
	
	double l_qty_recev = 0.0;
	short i_qty_recev = 0;
	double qty_rec_updted = 0.0;
	
	Chirag 01-11-2006 SP-CR Entitle modification after deal generation */
	
/*  ISolve-344:AmitB:SP-CR Entitle modification trade	*/
	char l_ca_event[3] = APL_NULL_STRING;
	char l_op_evt_class[3] = APL_NULL_STRING;

	short i_ca_event = 0;
	short i_op_evt_class = 0;

	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Entered S_EntitlAuthRes",NULL,p_intlenv_data_struct_h);
			}

	
	
	if(	!strlen(p_ca_caentl_aut_struct_h->h_corp_id	)	)
		
			APL_DATA_MISSING("Event ID",APL_NULL_STRING,APL_NULL_STRING)

	if(	!strlen(p_ca_caentl_aut_struct_h->h_dl_client	)	)
		
			APL_DATA_MISSING("Account",APL_NULL_STRING,APL_NULL_STRING)
	
	if(	!strlen(p_ca_caentl_aut_struct_h->h_access_stamp	)	)
			APL_DATA_MISSING("Access Stamp missing ",APL_NULL_STRING,APL_NULL_STRING)
 
	if	(	CO_ChkErr(*l_debug_info_ptr)	 == APL_SUCCESS	)
		APL_GOBACK_FAIL

	

		
	(l_ca_caentitlement_struct_ha)	=	(CA_CAENTITLEMENT_STRUCT_H*)calloc(1,sizeof(CA_CAENTITLEMENT_STRUCT_H));
	APL_MALLOC_FAIL(l_ca_caentitlement_struct_ha);
	
	(l_ca_caentitlement_struct_ia)	=	(CA_CAENTITLEMENT_STRUCT_I*)calloc(1,sizeof(CA_CAENTITLEMENT_STRUCT_I));
	APL_MALLOC_FAIL(l_ca_caentitlement_struct_ia);
	
	(l_ca_caentitlement_struct_h)	=	(CA_CAENTITLEMENT_STRUCT_H*)calloc(1,sizeof(CA_CAENTITLEMENT_STRUCT_H));
	APL_MALLOC_FAIL(l_ca_caentitlement_struct_h);
	
	(l_ca_caentitlementimg_struct_i)	=	(CA_CAENTITLEMENT_STRUCT_I*)calloc(1,sizeof(CA_CAENTITLEMENT_STRUCT_I));
	APL_MALLOC_FAIL(l_ca_caentitlementimg_struct_i);

   
   l_ca_chk_det_struct_h=(CA_CHK_DET_STRUCT_H *)calloc(  1,sizeof(CA_CHK_DET_STRUCT_H));
   APL_MALLOC_FAIL(l_ca_chk_det_struct_h)

	
   img_ind=ENT_IND;
	if	(	CA_RtvEntitl(p_ca_caentl_aut_struct_h->h_corp_id,
   								p_ca_caentl_aut_struct_h->h_dl_client,
									l_ca_caentitlement_struct_ha,
									l_ca_caentitlement_struct_ia,
									chr_ent_rowid,
									&img_ind,
									l_debug_info_ptr
									)	==	APL_FAILURE
		)
	{
		APL_GOBACK_FAIL
	}
	
	if (	
			strcmp(	p_ca_caentl_aut_struct_h->h_access_stamp,
					   l_ca_caentitlement_struct_ha->h_access_stamp	
					)
			)		
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ACCESSSTAMP_CHGD,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}

		if	(	l_ca_caentitlement_struct_ia->i_checker	!= -1	)
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_ENTITLE_AUTHORIZED,
									p_ca_caentl_aut_struct_h->h_corp_id,
									p_ca_caentl_aut_struct_h->h_dl_client,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}

		if	(	!strcmp(p_intlenv_data_struct_h->usr,l_ca_caentitlement_struct_ha->h_maker)	)
			{
				CO_InsertErr(l_debug_info_ptr,
									ERR_MAKER_CHECKER_SAME,
									p_intlenv_data_struct_h->usr,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__
									);
				APL_GOBACK_FAIL
			}

	if ( strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_REV_UAUTH) )
	{
	EXEC SQL SELECT NVL(count(*),0)
	INTO :int_gp_warn_count
	FROM CAGLPYMT
	WHERE corp_id=:p_ca_caentl_aut_struct_h->h_corp_id
	AND	stat_pymt <> :chr_sys_sts_auth
	AND	rownum < 2	;

	IS_ANY_ORA_ERROR

	if ( int_gp_warn_count > 0 )
	{
		INSERT_GLOB_PYMT_WARNING_ENT 
	}

	if ( CO_ChkErr(*l_debug_info_ptr) == APL_SUCCESS )
	{
		APL_GOBACK_FAIL
	}

	}
	if	(	strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,APL_STATUS_UNAUTH)	)
	{
   	img_ind=IMG_IND;
		if	(	CA_RtvEntitl(p_ca_caentl_aut_struct_h->h_corp_id,
   							p_ca_caentl_aut_struct_h->h_dl_client,
								l_ca_caentitlement_struct_h,
								l_ca_caentitlementimg_struct_i,
								chr_ent_img_rowid,
								&img_ind,
								l_debug_info_ptr
								)	==	APL_FAILURE
			)
		{
			APL_GOBACK_FAIL
		}
	}
	
   GET_ACCESS_STAMP_APL_DATE 
	
	if	(	CA_CheckEntl( p_ca_caentl_aut_struct_h->h_corp_id,	
	  					   p_ca_caentl_aut_struct_h->h_dl_client,	
			         	l_ca_chk_det_struct_h,	
					   	p_intlenv_data_struct_h,
						   l_debug_info_ptr
							)		==	APL_FAILURE
		)
	{
		APL_GOBACK_FAIL
	}
	
  	if	( !strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_RESET) )
	{
  		 if    (  CA_Mod_EntitlRec(l_ca_caentitlement_struct_h,
   	   	                      l_ca_caentitlementimg_struct_i,
         	                      chr_ent_rowid,
            	                   l_debug_info_ptr
               	               ) == APL_FAILURE
         		)
   	{
      	APL_GOBACK_FAIL
   	}
	}
	else if (!strcmp(p_intlenv_data_struct_h->h_mode,APL_FUNC_AUTHORISE) )
	{ 
		EXEC SQL SELECT ENTL_SEND_MSG_IND
		INTO  :h_entl_send_msg_ind:i_snd_msg
		FROM CAEVENT
		where CORP_ID	  =  :p_ca_caentl_aut_struct_h->h_corp_id;
		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_EVNT_FOR_ENTITL_NOTFND,p_ca_caentl_aut_struct_h->h_corp_id,APL_NULL_STRING,APL_NULL_STRING)

		if	( !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,APL_STATUS_UNAUTH)	)
		{
			strcpy(status_entitl,STATUS_RDY_PYMT);
			event_amount_bal  = l_ca_chk_det_struct_h->h_evt_instr_inc_bal + l_ca_caentitlement_struct_ha->h_instr_inc_bal;	
			event_quantity_bal  = l_ca_chk_det_struct_h->h_evt_quantity_due + l_ca_caentitlement_struct_ha->h_quantity_due;	
			if ( !strcmp(h_entl_send_msg_ind,APL_YES_IND) )
			{
				int_event_noentmsgs	 = l_ca_chk_det_struct_h->h_entl_msg_cnt + 1;
				int_event_noentacs	 = l_ca_chk_det_struct_h->h_entl_clt_cnt  + 1;

				message_class=ENT_MSG;
				if (CA_SendEntMsg( l_ca_chk_det_struct_h->h_evt_class,
									p_ca_caentl_aut_struct_h->h_corp_id,
									p_ca_caentl_aut_struct_h->h_dl_client,
									message_class,
								   l_debug_info_ptr) == APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
			}	
			
			EXEC SQL UPDATE CAEVENT
			SET
				AMOUNT_BAL  = :event_amount_bal,
				QUANTITY_BAL  = :event_quantity_bal,
				ENTL_MSG_CNT = :int_event_noentmsgs,
				ENTL_CLT_CNT =  :int_event_noentacs,
				ACCESS_STAMP =:access_stamp
			WHERE
				CORP_ID		  =  :p_ca_caentl_aut_struct_h->h_corp_id;
			
			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_EVNT_FOR_ENTITL_NOTFND,
															  p_ca_caentl_aut_struct_h->h_corp_id,
															  APL_NULL_STRING,
															  APL_NULL_STRING
															 )
	}	
   else if (  !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_RDY_PYMT)) 
  		{
			event_amount_bal=l_ca_chk_det_struct_h->h_evt_instr_inc_bal + l_ca_caentitlement_struct_ha->h_instr_inc_bal - l_ca_caentitlement_struct_h->h_instr_inc_bal;
			event_quantity_bal=l_ca_chk_det_struct_h->h_evt_quantity_due + l_ca_caentitlement_struct_ha->h_quantity_due - l_ca_caentitlement_struct_h->h_quantity_due;
		
		strcpy(status_entitl,STATUS_RDY_PYMT);

		/* Chirag 01-11-2006 SP-CR Entitle modification after deal generation 
		
		printf("Chking deals are created for Entitlements.....\n");
		if(l_ca_caentitlement_struct_ha->h_quantity_recd > 0)
		{
			printf("Deals created Entitlements are found......\n");
			EXEC SQL SELECT CA_EVENT,OP_EVT_CLASS,QUANTITY_RECEIVED INTO :l_ca_event:i_ca_event,:l_op_evt_class:i_op_evt_class,:l_qty_recev:i_qty_recev
					FROM CAEVENT
					WHERE CORP_ID = : l_ca_caentitlement_struct_ha->h_corp_id;
			IS_ANY_ORA_ERROR
			
			printf("Event we got : |%s| \n",l_ca_event);
			if((!strcmp(l_ca_event,"SP") && !strcmp(l_op_evt_class,"SP")) || !strcmp(l_ca_event,"CR"))
			{
				printf("Event found going for deletion of deals.....\n");
	 
				if(CA_Del_SP_CR_Deals(l_ca_caentitlement_struct_ha->h_corp_id,
						      l_ca_caentitlement_struct_ha->h_dl_client,
						      p_intlenv_data_struct_h,
						      l_debug_info_ptr) == APL_FAILURE)
				{
					printf("Exiting with failure from CA_Del_SP_CR_Deals....\n");	
					APL_GOBACK_FAIL
				}
				else
				{
					EXEC SQL UPDATE CAENTITLEMENT
					SET QUANTITY_RECEIVED = 0
					WHERE CORP_ID = : l_ca_caentitlement_struct_ha->h_corp_id
					AND CLIENT = : l_ca_caentitlement_struct_ha->h_dl_client;
		
					IS_ANY_ORA_ERROR
					printf("Quntity Received updated to 0\n");
					
					printf("Quantity received from CAEVENT is : |%lf| \n",l_qty_recev);
					qty_rec_updted = l_qty_recev - l_ca_caentitlement_struct_ha->h_quantity_recd;						
					if(qty_rec_updted > 0)
					{
						EXEC SQL UPDATE CAEVENT
						SET QUANTITY_RECEIVED = : qty_rec_updted
						WHERE CORP_ID = : l_ca_caentitlement_struct_ha->h_corp_id;

						IS_ANY_ORA_ERROR

						printf("Quantity received of CAEVENT updated to : |%lf|\n",qty_rec_updted);    
					}
				} 
			}				
		}


		Chirag 01-11-2006 SP-CR Entitle modification after deal generation */
	
		if ( !strcmp(h_entl_send_msg_ind,APL_YES_IND) )
		{
			message_class=MSG_NO_ENT_CHG;
			if (CA_SendEntMsg( l_ca_chk_det_struct_h->h_evt_class,
				   				p_ca_caentl_aut_struct_h->h_corp_id,
									p_ca_caentl_aut_struct_h->h_dl_client,
									message_class,
						  			 l_debug_info_ptr) == APL_FAILURE
				)
				{
					APL_GOBACK_FAIL
				}
		 }
	  }	     
	else	if  (  !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_PART_PAID) ||  
			       !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_PAID_CLSD) 
	  			)  
 	{  
		event_amount_bal=l_ca_chk_det_struct_h->h_evt_instr_inc_bal + l_ca_caentitlement_struct_ha->h_instr_inc_bal - l_ca_caentitlement_struct_h->h_instr_inc_bal;
		event_quantity_bal=l_ca_chk_det_struct_h->h_evt_quantity_due + l_ca_caentitlement_struct_ha->h_quantity_due - l_ca_caentitlement_struct_h->h_quantity_due;

			if	( APL_GREATER(l_ca_caentitlement_struct_ha->h_instr_inc_bal,l_ca_caentitlement_struct_ha->h_amount_recd)  ||
				 APL_GREATER(l_ca_caentitlement_struct_ha->h_quantity_due,l_ca_caentitlement_struct_ha->h_quantity_recd)

				 )
			{	
				strcpy(status_entitl,STATUS_PART_PAID);
			}
			else if	( APL_DOUBLE_EQUAL(l_ca_caentitlement_struct_ha->h_instr_inc_bal,l_ca_caentitlement_struct_ha->h_amount_recd) 						&&
	APL_DOUBLE_EQUAL (l_ca_caentitlement_struct_ha->h_quantity_due,l_ca_caentitlement_struct_ha->h_quantity_recd)						)
			{
				if	(	!strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_PAID_CLSD) )
				{ 
					strcpy(status_entitl,STATUS_MSG_PAID_CLSD);
				}
				
				else if(	!strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_PART_PAID) )
				{ 
					strcpy(status_entitl,STATUS_PART_PAID);
				}
				
			}
	
		if ( !strcmp(h_entl_send_msg_ind,APL_YES_IND) )
		{
				message_class=MSG_NO_ENT_CHG;
				if (CA_SendEntMsg( l_ca_chk_det_struct_h->h_evt_class,
					   				p_ca_caentl_aut_struct_h->h_corp_id,
										p_ca_caentl_aut_struct_h->h_dl_client,
										message_class,
							  			 l_debug_info_ptr) == APL_FAILURE
					)
				{
					APL_GOBACK_FAIL
				}
		} 
 	}     
	else 	if	(	!strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_REV_UAUTH) )
	{
	int_pay_count = 0;
	int_gp_count =0;
	if (CA_ChkUURstPymt( p_ca_caentl_aut_struct_h->h_corp_id,
								 p_ca_caentl_aut_struct_h->h_dl_client,
								 &int_pay_count,
								 &int_gp_count,
								 l_debug_info_ptr
								)	==	APL_FAILURE
			)
		{
			APL_GOBACK_FAIL
		}

	if (	(int_pay_count > 0) ||  (int_gp_count > 0)		)
	{
		if (int_pay_count > 0 )
		{
			CO_InsertErr(l_debug_info_ptr,
			   			   ERR_UNREV_PYMT_CANT_REV_ENT, 
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__
								);
		}				
		if (int_gp_count > 0 )
		{
			CO_InsertErr(l_debug_info_ptr,
			   			   ERR_UNAUT_GPPYMT_CANT_REV_ENT, 
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__
								);
		}				
				APL_GOBACK_FAIL
	}
	strcpy(status_entitl,STATUS_REVERSED);
	event_amount_bal  = l_ca_chk_det_struct_h->h_evt_instr_inc_bal - l_ca_caentitlement_struct_ha->h_instr_inc_bal;
   event_quantity_bal  = l_ca_chk_det_struct_h->h_evt_quantity_due -  l_ca_caentitlement_struct_ha->h_quantity_due;

	if ( !strcmp(h_entl_send_msg_ind,APL_YES_IND) )
	{
			message_class=MSG_NO_ENT_REV;
			if (CA_SendEntMsg( l_ca_chk_det_struct_h->h_evt_class,
									p_ca_caentl_aut_struct_h->h_corp_id,
									p_ca_caentl_aut_struct_h->h_dl_client,
									message_class,
						  			 l_debug_info_ptr) == APL_FAILURE
				)
			{
					APL_GOBACK_FAIL
			}
	}
}	
	
	else if ( !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_FROZ_UAUTH_A) )
	{
			
		if ( !strcmp(l_ca_caentitlement_struct_h->h_entitl_stat,STATUS_RDY_PYMT) )
			{
				strcpy(status_entitl,STATUS_FROZ_RP);
			}
	
		else if ( !strcmp(l_ca_caentitlement_struct_h->h_entitl_stat,STATUS_PART_PAID) )
			{
				strcpy(status_entitl,STATUS_FROZ_PP);
			}
	}
	
	else if ( !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_UNFRZ_UAUTH) )
	{
			
		if ( !strcmp(l_ca_caentitlement_struct_h->h_entitl_stat,STATUS_FROZ_RP) )
			{
				strcpy(status_entitl,STATUS_RDY_PYMT);
			}
	
	   else if ( !strcmp(l_ca_caentitlement_struct_h->h_entitl_stat,STATUS_FROZ_PP) )
			{
				strcpy(status_entitl,STATUS_PART_PAID);
			}
	}
	
	if	( !strcmp(l_ca_chk_det_struct_h->h_evt_class,EVT_RHTS) )
	{
		strcpy(h_sent550date,pro_sys_date);
	}
	else
	{
		i_sent550date= -1;
	}

	/* Changed by Amit on 21082006 ... During Authorization of Reversal system will delete this entitlement....
	 */
	/* ISKB-462:Changed by AmitB on 26102007 ... During Authorization of Reversal system will mark entitlement as REVERSED....	 */
/*	if (strcmp(status_entitl,STATUS_REVERSED) ==0)
		{
			EXEC SQL DELETE CAENTITLEMENT
				 WHERE
				 ROWID      =:chr_ent_rowid;

				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_ENTITLE_NOTFND,
																  p_ca_caentl_aut_struct_h->h_corp_id,
																  p_ca_caentl_aut_struct_h->h_dl_client,
																  APL_NULL_STRING
																 )
		}
		else
		{
*/			EXEC SQL UPDATE CAENTITLEMENT
			SET 
				STATUS	  =:status_entitl,
				PROCESSED_DATE  =:pro_sys_date,
				DATEFORSEND550 =:h_sent550date:i_sent550date,
				CHECKER    =:p_intlenv_data_struct_h->usr,
				CHECKER_DT =:pro_sys_date,
				ACCESS_STAMP =:access_stamp		
			WHERE
				ROWID		  =:chr_ent_rowid;

				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_ENTITLE_NOTFND,
																  p_ca_caentl_aut_struct_h->h_corp_id,
																  p_ca_caentl_aut_struct_h->h_dl_client,
																  APL_NULL_STRING
																 )
/*		}
*/
	if	( !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_REV_UAUTH)  ||
   	  !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_RDY_PYMT) ||
	     !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_PART_PAID) ||  
		  !strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,STATUS_CHNG_PAID_CLSD) 
		)
	{
			EXEC SQL UPDATE CAEVENT
			SET
				AMOUNT_BAL  = :event_amount_bal,
				QUANTITY_BAL  = :event_quantity_bal,
				ACCESS_STAMP =:access_stamp
			WHERE
				CORP_ID		  =  :p_ca_caentl_aut_struct_h->h_corp_id;

				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_EVNT_FOR_ENTITL_NOTFND,
																  p_ca_caentl_aut_struct_h->h_corp_id,
																  APL_NULL_STRING,
																  APL_NULL_STRING
																 )
	}

 }

	if	(	strcmp(l_ca_caentitlement_struct_ha->h_entitl_stat,APL_STATUS_UNAUTH)	)
			{				
				/* Start ISolve-344:AmitB:SP-CR Entitle modification trade	*/
				EXEC SQL SELECT CA_EVENT,OP_EVT_CLASS INTO
				:l_ca_event:i_ca_event,:l_op_evt_class:i_op_evt_class
				 FROM CAEVENT
				  WHERE
				CORP_ID=:l_ca_caentitlement_struct_ha->h_corp_id;
				IS_ANY_ORA_ERROR

				EXEC SQL DELETE
				FROM
				CAENTITLEMENTMG
				WHERE	
						ROWID=:chr_ent_img_rowid
				AND CORP_ID NOT IN(SELECT CORP_ID FROM CAEVENT WHERE
				CORP_ID=:p_ca_caentl_aut_struct_h->h_corp_id
				AND ((CA_EVENT ='SP' AND OP_EVT_CLASS IN('SP','SR')) OR CA_EVENT ='CR'));

				if(strcmp(l_ca_event,"SP") && strcmp(l_ca_event,"CR") &&
				strcmp(l_op_evt_class,"TO") && strcmp(l_op_evt_class,"AM"))
				{
	
				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_ENTITLEIMG_NOTFND,
																  p_ca_caentl_aut_struct_h->h_corp_id,
																  p_ca_caentl_aut_struct_h->h_dl_client,
																  APL_NULL_STRING
																 )
			}
				/* End ISolve-344:AmitB:SP-CR Entitle modification trade	*/
			}


	
			APL_GOBACK_SUCCESS
			RETURN_SUCCESS	:
		{
			APL_FREE(l_ca_chk_det_struct_h);
         APL_FREE(l_ca_caentitlement_struct_ha);
         APL_FREE(l_ca_caentitlement_struct_ia);
         APL_FREE(l_ca_caentitlement_struct_h);
         APL_FREE(l_ca_caentitlementimg_struct_i);

			CO_ProcMonitor(APL_OUT_FILE,"Exiting S_EntitlAuth successfully",NULL,p_intlenv_data_struct_h);
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_FREE(l_ca_chk_det_struct_h);
         APL_FREE(l_ca_caentitlement_struct_ha);
         APL_FREE(l_ca_caentitlement_struct_ia);
         APL_FREE(l_ca_caentitlement_struct_h);
         APL_FREE(l_ca_caentitlementimg_struct_i);
			CO_ProcMonitor(APL_OUT_FILE,"Exiting S_EntitlAuth unsuccessfully",NULL,p_intlenv_data_struct_h);
			return (APL_FAILURE);
		}
}

int CA_SendEntMsg( char *p_event_type,
					  char *chr_p_ca_id,
					  char *chr_p_client,
					  int	 message_class,
					  DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 
{

	char	chr_msg_nbr[MSG_CODERR_LEN];
	char  l_param_str[201]=APL_NULL_STRING;

	#ifdef	APL_THREADS
		APL_SET_CONTEXT
		EXEC SQL CONTEXT USE :my_ctx_local;
	#endif

			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Entering A_SndEntMsg",NULL,NULL);
			}

	switch(message_class)
	{
		case ENT_MSG :
		{
		  LOGIC_ENT_MSG(MSG_NO_ENT_CD_SD_BO_SP,MSG_NO_ENT_BI,MSG_NO_ENT_RD,MSG_NO_ENT_RT,MSG_NO_ENT_OP)
			break;
		} 

		case MSG_NO_ENT_CHG :
		{
		  LOGIC_ENT_MSG(MSG_NO_ENT_CHG_CD_SD_BO_SP,MSG_NO_ENT_CHG_BI,MSG_NO_ENT_CHG_RD,MSG_NO_ENT_CHG_RT,MSG_NO_ENT_CHG_OP)
			break;
		} 
			
		case MSG_NO_ENT_REV :
		{
		  LOGIC_ENT_MSG(MSG_NO_ENT_REV_CD_SD_BO_SP,MSG_NO_ENT_REV_BI,MSG_NO_ENT_REV_RD,MSG_NO_ENT_REV_RT,MSG_NO_ENT_REV_OP)
			break;
		} 
	}

	memset(l_param_str,APL_NULL_CHAR,201);
   if (   GBDbInsIMSGENT(  chr_msg_nbr, 
                           chr_p_ca_id,
                           chr_p_client,
									APL_YES_FLAG,
									l_param_str,
 	                        l_debug_info_ptr)  == APL_FAILURE
      )
      APL_GOBACK_FAIL

	
	
	APL_GOBACK_SUCCESS
	RETURN_SUCCESS	:
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_SendEntMsg successfully",NULL,NULL);
			}
			return (APL_SUCCESS);
		}
		RETURN_FAILURE	:
		{
			APL_IF_DEBUG
			{
				CO_ProcMonitor(APL_OUT_FILE,"Exiting CA_SendEntMsg unsuccessfully",NULL,NULL);
			}
			return (APL_FAILURE);
		}
}

/* Chirag 01-11-2006 SP-CR Entitle modification after deal generation 

int CA_Del_SP_CR_Deals(char *p_corp_id,char *p_client,INTL_ENV_DATA_STRUCT_H *p_intlenv_data_struct_h,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
   struct sqlca	sqlca;

   char l_identiy_no[17] = APL_NULL_STRING;
   char l_access_stamp[20] = APL_NULL_STRING;

   short i_access_stamp = 0;
   short i_identiy_no = 0;

   int cnt = 0;

   SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_h;
   SYS_DL_DEAL_STRUCT_I *l_sys_dl_deal_struct_i;
   DL_DEAL_OTH_STRUCT_H *p_dl_deal_oth_struct_h_c;

   l_sys_dl_deal_struct_h = (SYS_DL_DEAL_STRUCT_H *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_H));
   APL_MALLOC_FAIL(l_sys_dl_deal_struct_h)
   
   l_sys_dl_deal_struct_i = (SYS_DL_DEAL_STRUCT_I *)calloc(1,sizeof(SYS_DL_DEAL_STRUCT_I));
   APL_MALLOC_FAIL(l_sys_dl_deal_struct_i)

   p_dl_deal_oth_struct_h_c = (DL_DEAL_OTH_STRUCT_H *)calloc(1,sizeof(DL_DEAL_OTH_STRUCT_H));
   APL_MALLOC_FAIL(p_dl_deal_oth_struct_h_c)

     
   EXEC SQL SELECT IDENTIY_NO,ACCESS_STAMP INTO :l_identiy_no:i_identiy_no,:l_access_stamp:i_access_stamp
   FROM DL_DEAL D
   WHERE D.INFORMATON =: p_corp_id
   AND D.CLIENT =: p_client
   AND D.DEAL_CD = 1 
   AND D.DEAL_STAT = 'CC';

   IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 0)
   {
	   printf("Deliver CC Deal found with Deal Ref No : |%s| Client : |%s| Event Id : |%s|\n",l_identiy_no,p_client,p_corp_id);
	   
	   strcpy(p_intlenv_data_struct_h->h_mode,"PMR");

	   if(CR_Proc_DLPmtRst(p_client,
			       l_identiy_no,
			       l_access_stamp,
			       p_intlenv_data_struct_h,
			       l_debug_info_ptr) == APL_FAILURE)
	   {
		CO_ProcMonitor(APL_OUT_FILE,"Returned from CR_Proc_DLPmtRst with Failure\n",NULL,p_intlenv_data_struct_h);
		APL_GOBACK_FAIL
	   }
   }

   l_identiy_no[17] = APL_NULL_STRING;   
   l_access_stamp[20] = APL_NULL_STRING; 
                                         
   i_access_stamp = 0;                  
   i_identiy_no = 0;  
    
   EXEC SQL SELECT IDENTIY_NO,ACCESS_STAMP INTO :l_identiy_no:i_identiy_no,:l_access_stamp:i_access_stamp
   FROM DL_DEAL D
   WHERE D.INFORMATON =: p_corp_id
   AND D.CLIENT =: p_client
   AND D.DEAL_CD = 2 
   AND D.DEAL_STAT = 'CC';

   IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 0)
   {
	   printf("Receive CC Deal found with Deal Ref No : |%s| Client : |%s| Event Id : |%s|\n",l_identiy_no,p_client,p_corp_id);

	   strcpy(p_intlenv_data_struct_h->h_mode,"PMR");

	   if(CR_Proc_DLPmtRst(p_client,
			       l_identiy_no,
			       l_access_stamp,
			       p_intlenv_data_struct_h,
			       l_debug_info_ptr) == APL_FAILURE)
	   {
		CO_ProcMonitor(APL_OUT_FILE,"Returned from CR_Proc_DLPmtRst with Failure\n",NULL,p_intlenv_data_struct_h);
		APL_GOBACK_FAIL
	   }
   }

   printf("Status of both CC deals changed to AA\n");
   
   printf("Now going for deletion of all deals\n");

   
   EXEC SQL DECLARE sel_deal_cur CURSOR FOR
   SELECT *
   FROM DL_DEAL D
   WHERE D.INFORMATON =: p_corp_id
   AND D.CLIENT =: p_client
   AND (D.DEAL_CD = 1 OR D.DEAL_CD = 2)
   AND D.DEAL_STAT = 'AA';

   IS_ANY_ORA_ERROR

   EXEC SQL OPEN sel_deal_cur;
   IS_ANY_ORA_ERROR

   for(;;)
   {

	EXEC SQL FETCH sel_deal_cur INTO :l_sys_dl_deal_struct_h:l_sys_dl_deal_struct_i;
	Alert("sqlca.sqlcode |%d| \n",sqlca.sqlcode);
	IS_ANY_ORA_ERROR

	if(sqlca.sqlcode == 1403)
	break;
	cnt++;

	printf("Deal Record No : |%d| Ref No : |%s| Deal Code : |%s|\n",cnt,l_sys_dl_deal_struct_h->h_indentity_no,l_sys_dl_deal_struct_h->h_dealcd);
	
	strcpy(p_intlenv_data_struct_h->h_mode,"DEL");
	 Populating deal Authorization structure 	

	strcpy(p_dl_deal_oth_struct_h_c->h_dl_client,l_sys_dl_deal_struct_h->h_dl_client);
	strcpy(p_dl_deal_oth_struct_h_c->h_indentity_no,l_sys_dl_deal_struct_h->h_indentity_no);
	
	if(strlen(l_sys_dl_deal_struct_h->h_locindentity_no) > 0) 	
		strcpy(p_dl_deal_oth_struct_h_c->h_locindentity_no,l_sys_dl_deal_struct_h->h_locindentity_no);
	if(strlen(l_sys_dl_deal_struct_h->h_brkrno) > 0)
		strcpy(p_dl_deal_oth_struct_h_c->h_brkrno,l_sys_dl_deal_struct_h->h_brkrno);
	if(strlen(l_sys_dl_deal_struct_h->h_clt_reqdel_flag) > 0)
		strcpy(p_dl_deal_oth_struct_h_c->h_clt_reqdel_flag,l_sys_dl_deal_struct_h->h_clt_reqdel_flag);

	strcpy(p_dl_deal_oth_struct_h_c->h_access_stamp,l_sys_dl_deal_struct_h->h_access_stamp);
	strcpy(p_dl_deal_oth_struct_h_c->h_dealcd,l_sys_dl_deal_struct_h->h_dealcd);
	strcpy(p_dl_deal_oth_struct_h_c->h_dlt,l_sys_dl_deal_struct_h->h_dlt);
	strcpy(p_dl_deal_oth_struct_h_c->h_setldt,l_sys_dl_deal_struct_h->h_setldt);
	strcpy(p_dl_deal_oth_struct_h_c->h_classofdl,l_sys_dl_deal_struct_h->h_classofdl);
	strcpy(p_dl_deal_oth_struct_h_c->h_lrdltype,l_sys_dl_deal_struct_h->h_lrdltype);
	if(strlen(l_sys_dl_deal_struct_h->h_domcpclt_cd) > 0)
		strcpy(p_dl_deal_oth_struct_h_c->h_domcpclt_cd,l_sys_dl_deal_struct_h->h_domcpclt_cd);
	if(strlen(l_sys_dl_deal_struct_h->h_custinfo) > 0)
		strcpy(p_dl_deal_oth_struct_h_c->h_custinfo,l_sys_dl_deal_struct_h->h_custinfo);	
	if(strlen(l_sys_dl_deal_struct_h->h_lr_ndsdate) > 0)
		strcpy(p_dl_deal_oth_struct_h_c->h_lr_ndsdate,l_sys_dl_deal_struct_h->h_lr_ndsdate);
	p_dl_deal_oth_struct_h_c->h_amt = l_sys_dl_deal_struct_h->h_amt;
	p_dl_deal_oth_struct_h_c->h_pr = l_sys_dl_deal_struct_h->h_pr;

	 Populating deal Authorization structure 

	if((DL_Proc_TrdOth( p_dl_deal_oth_struct_h_c,
                              p_intlenv_data_struct_h,
                              l_debug_info_ptr)  == APL_FAILURE))
	{
               CO_ProcMonitor(APL_OUT_FILE,"Returned from DL_Proc_TrdOth with Failure\n",NULL,p_intlenv_data_struct_h);
	       APL_GOBACK_FAIL
        }
	else
	{
		printf("Status of deal |%s| changed to DU successfully\n",l_sys_dl_deal_struct_h->h_indentity_no);
		printf("Going for Authorization.....\n");

		strcpy(p_intlenv_data_struct_h->h_mode,"AUT");
		strcpy(p_intlenv_data_struct_h->usr,"SYSTEM");

		if((DL_Proc_TrdOth( p_dl_deal_oth_struct_h_c,
                              p_intlenv_data_struct_h,
                              l_debug_info_ptr)  == APL_FAILURE))
		{
			CO_ProcMonitor(APL_OUT_FILE,"Returned from DL_Proc_TrdOth with Failure\n",NULL,p_intlenv_data_struct_h);
			APL_GOBACK_FAIL
		}
		else
		{
			printf("Successfully Deleted deal.....");
		}
	}
   }
	APL_GOBACK_SUCCESS
RETURN_SUCCESS:
{
   free(l_sys_dl_deal_struct_h);
   free(l_sys_dl_deal_struct_i); 
   free(p_dl_deal_oth_struct_h_c);
}
RETURN_FAILURE:
{
   free(l_sys_dl_deal_struct_h);
   free(l_sys_dl_deal_struct_i);
   free(p_dl_deal_oth_struct_h_c);
}


}
Chirag 01-11-2006 SP-CR Entitle modification after deal generation */
