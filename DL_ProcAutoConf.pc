






#include "CO_HostStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

#define	COMMIT_COUNT_G 60
#define  PAGELENGTH 24
#define	QUANTITY_LEN  25
#define	AMOUNT_LEN_B  18
#define  CNAME_LEN_A 66
#define	INSTR_NAME_LEN_D	131
#define  FILE_NAME_LEN 13
#define  SEPARATOR "|"
#define	AMOUNT_STR		 	"AMT"
#define	RECYCLE_IND	"REC"
#define	POR_CYCLE_IND	"POR"
#define	FAILURE_IND		"FLD"

#define ODDLOT_DEAL_NOTCONFIRM				1
#define CLIENT_NOTOK_IND		2
#define DOMCPCLIENT_NOTOK		3
#define COUNTCLIENT_NOTOK		4
#define FAILREAS_INSTR_NOTOK		5
#define FAILREAS_LOC_NOTOK		6
#define FAILREAS_CCY_NOTOK		7
#define FAILREAS_DEAL_UAUTH				8
#define MKR_CHKR_ERROR			9
#define FAILREAS_NOENUF_POS			10
#define FAILREAS_NOENUF_VDP			11
#define CLIENT_MAST_NOTOK_IND		12
#define DOMCPCLIENT_MAST_NOTOK		13
#define COUNTCLIENT_MASTER_NOTOK	14
#define FAILREAS_MATCHDEAL_UAUTH			15
#define MKR_CHKR_ERROR_MATCHDL		16
#define FAILREAS_MATCH_NOENUF_POS		17
#define FAILREAS_MATCH_NOENUF_VDP		18
#define FAILREAS_MATCH_DL_NF			19
#define RECORD_NOFND_RRMM 			20  
#define FAILREAS_NOENUF_POSRRMM    21  
#define FAILREAS_NOENUF_MATCH_POSRRMM  22  
#define RECORD_MATCH_NOFND_RRMM        23  
#define FAILREAS_CP_INSTR_MISMATCH		24
#define FAILREAS_CP_MISSINSTR			25
#define PREMATCHED_NOCONFIRM          26  
#define PICK_FAILREAS      27   
#define FAILREAS_DECURECU_NOTOK		28 
#define FAILREAS_UNQCP_MISSING		29 
#define FAILREAS_UNQMATCH_DEAL_NOFOUND		30 

#define IPODEAL_SAT_DIFF		31 
#define IPODEAL_SAT_MATCH		32 
#define ABSENT_CLT_IND		33 
#define ABSENT_SATCD_IND		34 
#define ABSENT_CLT_SATCD_IND		35 
#define FAILREAS_IPODEAL_FAIL 36	
#define IPO_SAT_ABSENT_BOTH	1
#define IPO_SAT_ABSENT_OUTER	2
#define IPO_SAT_ABSENT_INNER	3
#define IPO_SAT_PRESENT_BOTH	4
#define IPO_SAT_UNMATCHED		5
#define IPO_SAT_MATCHED			6
#define VTB_LOCN					"VTB"




int DL_Prnt_AmtHdr_WrRpt(	FILE *fp,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int i;
	short l_flag_ru = 0;
	
	short l_flag_gr = 0;
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                          "AMT_REPORT_RU",
                                          &l_flag_ru,
                                          l_debug_info_ptr))
   {
		return(0);
	}
	
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                          "AMT_REPORT_GR",
                                          &l_flag_gr,
                                          l_debug_info_ptr))
   {
		return(0);
	}
	if (l_flag_ru)
	{
	   for (i=0;i<119;fprintf(fp, "-"),i++);
   	fprintf(fp, "\n\t\t\t\t\tMatched Contra Trade Report\n");
   	for (i=0;i<119;fprintf(fp, "-"),i++);
   	fprintf(fp, "\n\nAccount     Reference No.     Trade Dt.            Instrurity                  Quantity ");
   	fprintf(fp, "            Amount Txn Settle Dt.\n");
   	for (i=0;i<119;fprintf(fp, "-"),i++);
   	fprintf(fp, "\n");
   	return(1);	
	}
	else if (l_flag_gr)
	{
		for (i=0;i<167;fprintf(fp, "-"),i++);
		fprintf(fp, "\n\t\t\t\t\tMatched Contra Trade Report\n");
		for (i=0;i<167;fprintf(fp, "-"),i++);
		fprintf(fp, "\n\nAccount     Reference No.     Trade Dt.  Instrurity                  Quantity ");
		fprintf(fp, "            Amount Txn Settle Dt. CP Account      SAT Account  SAT Code    \n");
		for (i=0;i<167;fprintf(fp, "-"),i++);
		fprintf(fp, "\n");
		return(1);
	}
	else
	{
		for (i=0;i<109;fprintf(fp, "-"),i++);
		fprintf(fp, "\n\t\t\t\t\tMatched Contra Trade Report\n");
		for (i=0;i<109;fprintf(fp, "-"),i++);
		fprintf(fp, "\n\nAccount     Reference No.     Trade Dt.  Instrurity                  Quantity ");
		fprintf(fp, "            Amount Txn Settle Dt.\n");
		for (i=0;i<109;fprintf(fp, "-"),i++);
		fprintf(fp, "\n");
		return(1);
	}
}



int DL_Prnt_UnMtHdr( FILE *fp,
							 DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int i;
	short int_l_flag = 0;
	short l_flag_ru = 0;
	
	short l_flag_gr = 0;
   short l_lpchk = 0;
	short l_flag_instr_name = 0;
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "AUTO_MATCH",
														"UNREPNOINSTR_NAME",
														&l_flag_instr_name,
														l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }

	
	
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                          "AMT_REPORT_RU",
                                          &l_flag_ru,
                                          l_debug_info_ptr))
   {
		APL_GOBACK_FAIL
	}
        
   if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_AMT",
                  "UM_REPORT_RS_LP",
                  &int_l_flag,
                  l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
        }
	
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                          "AMT_REPORT_GR",
                                          &l_flag_gr,
                                          l_debug_info_ptr))
   {
		APL_GOBACK_FAIL
	}
	for (i=0;i<230;fprintf(fp, "-"),i++);
	fprintf(fp, "\n\t\t\t\t\tUnmatched Contra Trade Report\n");
	if(l_flag_ru)
	{
		   for (i=0;i<230;fprintf(fp, "-"),i++);
  		   
   		fprintf(fp, "\n\nAccount     Corporate Name                 Reference No.     ");
   		fprintf(fp, "Trade Dt.  Instrurity                  Quantity ");
   		fprintf(fp, "Txn Counter Party   DECU/RECU     ");
	}
	else
	{	
		if (l_flag_instr_name == 0)
		{
			for (i=0;i<230;fprintf(fp, "-"),i++);
			fprintf(fp, "\n\nAccount     Corporate Name                 Reference No.     ");
			if (int_l_flag)
				fprintf(fp, "Trade Dt.  Instrurity Instr. Description                    Quantity\n           Amount ");
			else
				fprintf(fp, "Trade Dt.  Instrurity Instr. Description\n                  Quantity             Amount ");
			fprintf(fp, "Txn Broker     Counter Party  DECU/RECU ");
		}
		else
		{
			for (i=0;i<230;fprintf(fp, "-"),i++);
			fprintf(fp, "\n\nAccount     Corporate Name                 Reference No.     ");
			if (int_l_flag)
            fprintf(fp, "Trade Dt.  Instrurity                                   Quantity             Amount ");
         else
            fprintf(fp, "Trade Dt.  Instrurity                 \n                  Quantity             Amount ");
         
			fprintf(fp, "Txn Broker     Counter Party       DECU/RECU ");
		}
	}
  	
     
	if (int_l_flag)
	{
		fprintf(fp, "     Reg.Instr. ");
	}
	else
	{
		if (l_flag_ru==0)
		{
		fprintf(fp, "                   \n");
		}
	}

 	if (l_mt_core_sys_params_struct_h.proc_reg_ind[0] == 'Y')
	{
		fprintf(fp, "Status ");
	}
	else
	{
		if((l_flag_ru==0)  && (int_l_flag ==0))
		{
			fprintf(fp, "       ");
		}
			
	}
	fprintf(fp, "Settl Dt. ");
 	if (l_mt_core_sys_params_struct_h.loc_proc_ind[0] == 'Y')
	{
		fprintf(fp, " Locn. ");
	}
	else
	{
		fprintf(fp, "       ");
	}
	if(l_flag_gr)
	{
		fprintf(fp, " SAT Account  SAT Code    ");
	}
	fprintf(fp, "Unmatch Reason\n");
	
	for (i=0;i<230;fprintf(fp, "-"),i++);
	fprintf(fp, "\n");
	RETURN_SUCCESS : return(APL_SUCCESS);
	RETURN_FAILURE : return(APL_FAILURE);
}
		 


int DL_Prnt_AmtFmt_WrRpt(	FILE *fp,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	int i;
	short l_flag_ru = 0;
	
	short l_flag_gr = 0;
	
	
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                          "AMT_REPORT_GR",
                                          &l_flag_gr,
                                          l_debug_info_ptr))
   {
		return(0);
	}
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                          "AMT_REPORT_RU",
                                          &l_flag_ru,
                                          l_debug_info_ptr))
   {
		return (0);
	}

	if (l_flag_ru )
	{
		   for (i=0;i<119;fprintf(fp, "-"),i++);
	}
	else if (l_flag_gr )
	{
		   for (i=0;i<167;fprintf(fp, "-"),i++);
	}
	else
	{
		for (i=0;i<109;fprintf(fp, "-"),i++);
	}
	return(1);
}
		 


int DL_Prnt_UnMtFmt( FILE *fp)
{
	int i;
	for (i=0;i<230;fprintf(fp, "-"),i++);
	return(1);
}




int DL_Mod_AutMtDel(	DL_DEAL_AMT_STRUCT_H *p_dl_deal_amt_struct_h,
							char  p_recdelflg,
							FILE *p_fp_match,
							FILE *p_fp_unmatch,
							FILE *p_logfile,
							int  *p_no_match,
							int  *p_no_unmatch,
							char *chr_p_now,
							char **argv,
							INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
							DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	

	struct sqlca sqlca;	
	
	short l_rtgs_gr			=	0;
	short l_rtgs_gr1			=	0;
	short l_ipo_skip_posn_chk			=	0;
	short l_ipo_no_autocnf		=	0;
	short l_ipo_val_sat		=	0;
	int int_l_got_sat_details = 0;
	int int_l_ipo_sat_matched = 0;
	short i_ipo_note1_outer=0;
	short i_ipo_note1_inner=0;
	int	int_num=0;
	short  i_sat_account_outer = 0; 
	short  i_sat_account_inner = 0; 
	short  i_sat_code_outer = 0; 
	short  i_sat_code_inner = 0; 

	char chr_l_enter[3]=APL_NULL_STRING;
	char 	chr_l_new_failcode[3]=APL_NULL_STRING;
	char	chr_l_ipo_note1_outer[261]=APL_NULL_STRING;
	char	chr_l_ipo_note1_inner[261]=APL_NULL_STRING;
	char	chr_l_sat_line3_outer[261]=APL_NULL_STRING;
	char	chr_l_sat_line4_outer[261]=APL_NULL_STRING;
	char	chr_l_sat_line3_inner[261]=APL_NULL_STRING;
	char	chr_l_sat_line4_inner[261]=APL_NULL_STRING;
	char	chr_l_temp1[261]=APL_NULL_STRING;
	char	chr_l_temp2[261]=APL_NULL_STRING;
	char  chr_l_sat_client_outer[12]                 = APL_NULL_STRING;
	char  chr_l_sat_client_inner[12]                 = APL_NULL_STRING;
	char  chr_l_sat_code_outer[12]                 	 = APL_NULL_STRING;
	char  chr_l_sat_code_inner[12]                 	 = APL_NULL_STRING;
	char 		**temp;
	short l_cond_ru =0;
	char chr_l_vtb_locn[4]	=					APL_NULL_STRING;

	int int_l_rcvdlvlinkno	=	0;

	int		int_l_reccount   = 0;
	int		int_l_pglen_u    = 7;
	int		int_l_pglen_m    = 7;
	int		int_l_chkflg		 = 0;
	int		int_l_amt_declen = 0;
	int		int_l_diff_dates = 0;
	int		int_l_tpflg		 = 0;
	int		int_l_failval	 = 0;
	int		int_l_unmatched_reason_outer	 = 0;
	int		int_l_unmatched_reason_inner	 = 0;
	int		int_l_sat_blank	 = 0;

	int		int_p_smieligibility_flg = 0;
	int		int_l_automatch = 0; 

	char		chr_l_h_typeofinstr[TYPEOF_INSTR_LEN] 	= APL_NULL_STRING;
	char		chr_l_opp_trcode[APL_FLAG_LENGTH] 	= APL_NULL_STRING;
	char		chr_l_rowid_outer[APL_ROWID_LEN] 	= APL_NULL_STRING;
	char		chr_l_rowid_inner[APL_ROWID_LEN] 	= APL_NULL_STRING;
	char		chr_l_trd_status[APL_STATUS_LEN] 	= APL_NULL_STRING;
	char		chr_l_tgt_trcode1[APL_FLAG_LENGTH]	= APL_NULL_STRING;
	char		chr_l_tgt_trcode2[APL_FLAG_LENGTH]	= APL_NULL_STRING;
	char		chr_l_rep_outqty[QUANTITY_LEN]			= APL_NULL_STRING;
	char		chr_l_rep_outamt[AMOUNT_LEN_B]			= APL_NULL_STRING;
	char		chr_l_rep_inqty[QUANTITY_LEN]			= APL_NULL_STRING;
	char		chr_l_rep_inamt[AMOUNT_LEN_B]			= APL_NULL_STRING;
	
	char     chr_l_rep_rrmmoutqty[QUANTITY_LEN]       = APL_NULL_STRING;
   char     chr_l_rep_rrmmoutamt[AMOUNT_LEN_B]       = APL_NULL_STRING;
   char     chr_l_rep_rrmminqty[QUANTITY_LEN]        = APL_NULL_STRING;
   char     chr_l_rep_rrmminamt[AMOUNT_LEN_B]        = APL_NULL_STRING;
	
	char		chr_l_h_cname[CNAME_LEN_A]			= APL_NULL_STRING;
	char		chr_l_h_instrdesc[INSTR_NAME_LEN_D]		= APL_NULL_STRING;
	char		chr_l_buf[BUFFER_LEN]					= APL_NULL_STRING;
	char		chr_l_vdp_date[APL_DATE_LEN]		= APL_NULL_STRING;
	char		l_dl_deal_amt_struct_h[4]								= AMOUNT_STR;
	char		chr_l_recycle[4]						= RECYCLE_IND;
	char		chr_l_failed[4]							= FAILURE_IND;
	char     chr_l_srnregno[21]						= APL_NULL_STRING; 
	char     chr_h_accclass[2]                 = APL_NULL_STRING; 
   char     chr_h_field_val[40]               = APL_NULL_STRING; 
	char     chr_l_custnoteupdateout[71]          = APL_NULL_STRING; 
   char     chr_l_custnoteupdatein[71]          = APL_NULL_STRING; 
   char     chr_l_failcodeupdateout[3]        = APL_NULL_STRING; 
   char     chr_l_failcodeupdatein[3]        = APL_NULL_STRING; 
   char     chr_l_subfailcodeupdateout[3]        = APL_NULL_STRING; 
   char     chr_l_subfailcodeupdatein[3]        = APL_NULL_STRING; 
	
	short i_clnt_clr_name = 0;
	char chr_l_cname[66] = APL_NULL_STRING;
	short		l_i_typeofinstr  = 0;
	short		int_l_flag       = 0;
	short		int_l_ctr        = 0;  
	int		int_l_ctr_clrproc    = 0;  
	short		l_ctr_gr = 0;  
	short		l_rec_for_gr = 0;  
	short    chr_l_settledt_a = 0; 
	short    l_hu_settledt = 0; 
	short    l_i_CustNote = 0; 
	int	 	int_l_dummy		 = 0;
	short		l_i_rowid    = 0;
	double	l_currposn   = 0.0;
   short    l_i_srnregno = 0; 
	short    l_i_accclass = 0;
   short    l_i_field_val = 0;
	short    l_i_settrdout = 0; 
   short    l_i_settrdin = 0;
   short    l_i_countin = 0; 
   short    l_i_FCtoassign = 0; 
   
	char l_typeoftrd_01[3] = APL_NULL_STRING;
	char l_typeoftrd_02[3] = APL_NULL_STRING;
	char l_typeoftrd_03[3] = APL_NULL_STRING;
  
	
   char     chr_l_tsrnregno[21]                = APL_NULL_STRING;
	char     chr_l_system_date[APL_DATE_LEN] = APL_NULL_STRING;    
	int      int_l_sysdt_flg = 0;
   double   l_rquantity      = 0.0;
   double   l_takeupquantity = 0.0;
   double   l_tsrnquantity   = 0.0;

	
	short		int_l_error_flg							= APL_SUCCESS;
	short		l_flagrr		= 0;
	short    l_rrnonprop = 0;
   short    l_toutnonprop = 0;
   short    l_tinnonprop = 0;

	short l_flag_ru = 0;
	short l_flag_gr = 0;
	char  chr_l_cubk_exttrd[2] = APL_NULL_STRING;
   short l_noupdfail = 0; 
	char  chr_l_settledt_equal_criteria[2]=APL_NULL_STRING;


	int int_l_case1 = 0;
	int int_l_case2 = 0;
	int int_l_case3 = 0;
	int int_l_case4 = 0;
	int int_l_case5 = 0;
	int int_l_case6 = 0;
	int int_l_case7 = 0;
	int int_l_case8 = 0;
	int int_l_unique_rf_rvp_count = 0;
	int int_l_multmatchcount = 0;
	int int_l_next_trd = 0;

	int int_l_ccseligfail_flg   = 0;



   SYS_DL_DEAL_STRUCT_H  *l_sys_dl_deal_struct_ho    = NULL;
   SYS_DL_DEAL_STRUCT_I  *l_sys_dl_deal_struct_iq    = NULL;
   SYS_DL_DEAL_STRUCT_H  *l_sys_dl_deal_struct_h_in     = NULL;
   SYS_DL_DEAL_STRUCT_I  *l_sys_dl_deal_struct_i_in     = NULL;
   DL_DEALAUDIT_STRUCT_H *l_dl_dealaudit_struct_h  = NULL;
	DL_DEAL_FAIL_STRUCT_H *l_dl_deal_fail_struct_hb    = NULL;	
	DEAL_RU_STRUCT_H *l_deal_ru_struct_ha	= NULL;     
	
   char                  chr_g_restart_data[APL_RESTARTDATA_LENGTH];
    short                 g_restart_data_i;

EXEC SQL VAR chr_g_restart_data is string;


sqlca.sqlcode = 0;


	

	EXEC SQL VAR chr_l_cname						  			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dl_client  			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_indentity_no 				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dlt 					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_setldt 			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ex_arena				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instrdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_moneydate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_domcpclt_cd				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_isspotdl			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dlfromord			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_entry 			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_reapired_ind			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_domcp_custodyclt			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_countclt 			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_countcltnm			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_clientof			IS STRING;		
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_custinfo				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_fx_reqd				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ispymtlocal			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_verfied_with				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_brkrno				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_fail_cd				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_failinfo				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ispart_			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_report_at_eom_ind				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_billdate				IS STRING;	
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_locindentity_no				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instruct_person			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dealcd				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instr_code				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_currencycode				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_classofdl			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_origindentity_no			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_newdt				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_maker					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_maker_dt				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_deal_status		IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_access_stamp		IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_info1					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_loccode 			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_reginstr_ind				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_pos_stat			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_status_reg			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_confdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_matchindentity_no			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_markfaildate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_candropdate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_checker				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_checker_dt			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instrconv_ind			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ndsbldate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lrdltype			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ndsdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ublckdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_delrecdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lastregdate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_chkdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_confdate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_instrdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_tmpoutdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_tmpretdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_transmitdate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_hostdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_lr_ndsbldate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ndsdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_ublckdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_clt_reqdel_flag		IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_mod_hispos_ind		IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_updhispos_date		IS STRING;
	
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_instruct_personnm	   	IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_clientofcode		IS STRING;
	
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_inter_med_person         IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_inter_med_personnm    IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_fxccy    IS STRING; 
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_misinfo        IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_ho->h_exp_setl_date    IS STRING;

	
   EXEC SQL VAR l_typeoftrd_01                     IS STRING;
	EXEC SQL VAR l_typeoftrd_02                     IS STRING;
	
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_dl_client  				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_indentity_no 					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_dlt 					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_setldt 				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ex_arena				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_instrdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_moneydate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_domcpclt_cd				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_isspotdl				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_dlfromord			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_entry 			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_reapired_ind				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_domcp_custodyclt			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_countclt 				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_countcltnm			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_clientof				IS STRING;		
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_custinfo				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_fx_reqd					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ispymtlocal			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_verfied_with				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_brkrno				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_fail_cd				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_failinfo				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ispart_				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_report_at_eom_ind				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_billdate					IS STRING;	
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_locindentity_no				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_instruct_person				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_dealcd					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_instr_code					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_currencycode				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_classofdl				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_origindentity_no				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_newdt				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_maker					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_maker_dt				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_deal_status			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_access_stamp			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_info1					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_loccode 				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_reginstr_ind				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_pos_stat			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_status_reg				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_confdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_matchindentity_no			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_markfaildate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_candropdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_checker				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_checker_dt				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_instrconv_ind				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ndsbldate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_lrdltype				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ndsdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ublckdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_delrecdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_lastregdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_lr_chkdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_lr_confdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_lr_instrdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_tmpoutdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_tmpretdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_transmitdate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_hostdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_lr_ndsbldate			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ndsdate					IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_ublckdate				IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_clt_reqdel_flag		IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_mod_hispos_ind			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_updhispos_date			IS STRING;
	
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_instruct_personnm			IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_clientofcode		IS STRING;
	
   EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_inter_med_person       IS STRING;
   EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_inter_med_personnm     IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_fxccy     IS STRING; 
	EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_misinfo         IS STRING; 
   EXEC SQL VAR l_sys_dl_deal_struct_h_in->h_exp_setl_date     IS STRING; 

	EXEC SQL VAR chr_l_srnregno 							IS STRING; 

	EXEC SQL VAR l_deal_ru_struct_ha->h_dl_client         IS STRING; 
   EXEC SQL VAR l_deal_ru_struct_ha->h_indentity_no				IS STRING;  
   EXEC SQL VAR l_deal_ru_struct_ha->h_instr_code				IS STRING; 
   EXEC SQL VAR l_deal_ru_struct_ha->h_loccode			IS STRING; 
   EXEC SQL VAR l_deal_ru_struct_ha->h_st_reg_no			IS STRING; 
   EXEC SQL VAR l_deal_ru_struct_ha->h_dealcd				IS STRING;  
   EXEC SQL VAR l_deal_ru_struct_ha->h_deal_dt		IS STRING; 
   EXEC SQL VAR l_deal_ru_struct_ha->h_instrdate				IS STRING; 
	EXEC SQL VAR chr_h_accclass IS STRING; 
   EXEC SQL VAR chr_h_field_val IS STRING;
	EXEC SQL VAR chr_l_tsrnregno IS STRING;
	EXEC SQL VAR chr_l_system_date IS STRING;    
	EXEC SQL VAR chr_l_custnoteupdateout IS STRING; 
   EXEC SQL VAR chr_l_custnoteupdatein IS STRING; 
   EXEC SQL VAR chr_l_failcodeupdateout IS STRING; 
   EXEC SQL VAR chr_l_failcodeupdatein IS STRING; 
   EXEC SQL VAR chr_l_subfailcodeupdateout IS STRING; 
   EXEC SQL VAR chr_l_subfailcodeupdatein  IS STRING; 
	EXEC SQL VAR chr_l_vtb_locn IS STRING;

	

	l_sys_dl_deal_struct_h_in    = (SYS_DL_DEAL_STRUCT_H *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_H));
	l_sys_dl_deal_struct_i_in    = (SYS_DL_DEAL_STRUCT_I *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_I));
	l_sys_dl_deal_struct_ho   = (SYS_DL_DEAL_STRUCT_H *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_H));
	l_sys_dl_deal_struct_iq   = (SYS_DL_DEAL_STRUCT_I *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_I));
	l_dl_dealaudit_struct_h = (DL_DEALAUDIT_STRUCT_H *)calloc(1, sizeof(DL_DEALAUDIT_STRUCT_H));
	l_dl_deal_fail_struct_hb   = (DL_DEAL_FAIL_STRUCT_H *)calloc(1, sizeof(DL_DEAL_FAIL_STRUCT_H));
	l_deal_ru_struct_ha	 = (DEAL_RU_STRUCT_H *)calloc(1, sizeof(DEAL_RU_STRUCT_H));  
	

	APL_MALLOC_FAIL(l_sys_dl_deal_struct_h_in);
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_i_in);
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_ho);
	APL_MALLOC_FAIL(l_sys_dl_deal_struct_iq);
	APL_MALLOC_FAIL(l_dl_dealaudit_struct_h);
	APL_MALLOC_FAIL(l_dl_deal_fail_struct_hb);
	APL_MALLOC_FAIL(l_deal_ru_struct_ha);  

	

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CDBAMTRecDelFn", NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Settlement Date is : %s", p_dl_deal_amt_struct_h->h_setldt);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Conf. Date is : %s", p_dl_deal_amt_struct_h->h_confdate);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Type of Instr. is : %s", p_dl_deal_amt_struct_h->h_typeofinstr);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Rec/Del Flag is : %c", p_recdelflg);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
	}
	
 	memset(chr_l_settledt_equal_criteria, APL_NULL_CHAR, sizeof(chr_l_settledt_equal_criteria));	
	

	chr_l_enter[0] = putchar(13);
	chr_l_enter[1] = putchar(10);
	chr_l_enter[2] = '\0';
	

	if ('R' == p_recdelflg)
	{
		chr_l_tgt_trcode1[0] = DEALCD_RF;
		chr_l_tgt_trcode1[1] = '\0';
		chr_l_tgt_trcode2[0] = DEALCD_RVP;
		chr_l_tgt_trcode2[1] = '\0';
	}		
	else
	{
		chr_l_tgt_trcode1[0] = DEALCD_DF;
		chr_l_tgt_trcode1[1] = '\0';
		chr_l_tgt_trcode2[0] = DEALCD_DVP;
		chr_l_tgt_trcode2[1] = '\0';
	}		

	
	if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH", "GR_ADDNL_FAILCODES",&l_rec_for_gr,l_debug_info_ptr ))
	{
	  APL_GOBACK_FAIL
	}

	
	if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH", "SETL_DATE",&chr_l_settledt_a,l_debug_info_ptr ))
   {
     APL_GOBACK_FAIL
   }
	if (APL_FAILURE == CO_Chk_CntryEnabled("TRD_PMT_PAR_CUSTNOTE","UPD_CUSNOTE_INSTRMONDT",&l_i_CustNote,l_debug_info_ptr ))
   {
      APL_GOBACK_FAIL
   }
   if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH","NO_UPDFAILCODE_20",&l_noupdfail,l_debug_info_ptr ))
   {
      APL_GOBACK_FAIL
   }
   if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH","UPDATE_COUNTACC",&l_rtgs_gr,l_debug_info_ptr ))
   {
      APL_GOBACK_FAIL
   }
   if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH","STORE_RCVDLV_LINK",&l_rtgs_gr1,l_debug_info_ptr ))
   {
      APL_GOBACK_FAIL
   }
	if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH", "NO_CHK_SETTLEDT",&l_hu_settledt,l_debug_info_ptr ))
   {
     APL_GOBACK_FAIL
   }

	if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH","RU_VTB_SETL",&l_cond_ru,l_debug_info_ptr ))
   {
     APL_GOBACK_FAIL
   }

	
	G_SYS_ACCOUNT_LEN = 10;

	
	if (strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0)
	{	
   	if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH","IPO_SKIP_POSNCHKS",&l_ipo_skip_posn_chk,l_debug_info_ptr ))
   	{
			APL_GOBACK_FAIL
   	}
   	if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH","IPO_NO_AUTOCNF",&l_ipo_no_autocnf,l_debug_info_ptr ))
   	{
			APL_GOBACK_FAIL
   	}
   	if (APL_FAILURE == CO_Chk_CntryEnabled("AUTO_MATCH","IPO_VAL_SAT",&l_ipo_val_sat,l_debug_info_ptr ))
   	{
			APL_GOBACK_FAIL
   	}
			fprintf(p_logfile, "After getting from cntry sys params l_ipo_skip_posn_chk=|%d|\n",l_ipo_skip_posn_chk) ;
			fprintf(p_logfile, "After getting from cntry sys params l_ipo_no_autocnf=|%d|\n",l_ipo_no_autocnf) ;
			fprintf(p_logfile, "After getting from cntry sys params l_ipo_val_sat=|%d|\n",l_ipo_val_sat) ;
			fprintf(p_logfile, "After getting from cntry sys params l_rec_for_gr=|%d|\n",l_rec_for_gr) ;
	}
	

	
	if ( (strcmp(p_dl_deal_amt_struct_h->h_selsetldt,"=") == 0) )
	{
		strcpy(chr_l_settledt_equal_criteria,"Y");
	}
	else if ( (strcmp(p_dl_deal_amt_struct_h->h_selsetldt,"<=") == 0) ) 
	{
		strcpy(chr_l_settledt_equal_criteria,"N");
	}

	
	
	
   p_dl_deal_amt_struct_h->h_setldt[19]='\0';
   p_dl_deal_amt_struct_h->h_confdate[19]='\0';
	strcpy(chr_l_vtb_locn,VTB_LOCN);

   fprintf(p_logfile, "Front Selection Values :[%s][%s]\n",p_dl_deal_amt_struct_h->h_selsetldt,chr_l_settledt_equal_criteria);
	
	if( strcmp(chr_l_settledt_equal_criteria,"Y")==0 )
	{
	EXEC SQL DECLARE amt_outer1 CURSOR FOR
	SELECT  a.rowid, b.INSTR_TYPE 
	FROM dl_deal a, MT_INSTRUMENT b, MT_CLIENT c
	WHERE	(b.instr_code = :p_dl_deal_amt_struct_h->h_instr_code OR nvl(length(:p_dl_deal_amt_struct_h->h_instr_code),0) = 0) 
	AND a.DEAL_STAT <> 'DU'
	AND	a.deal_date <= :p_dl_deal_amt_struct_h->h_confdate
   AND  ((a.location_cd = :chr_l_vtb_locn AND  a.setl_date=:p_dl_deal_amt_struct_h->h_setldt AND :l_cond_ru!=0 ) 
                OR (  a.setl_date=:p_dl_deal_amt_struct_h->h_setldt AND :l_cond_ru=0 ) 
					 OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
	AND	a.instr_code = b.instr_code
	AND	a.VAL_FDT IS NULL
	AND	a.deal_cd IN (:chr_l_tgt_trcode1, :chr_l_tgt_trcode2)
	AND	0 = (	SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
					WHERE c.CLIENT = a.CLIENT
					AND	c.IDENTIY_NO   = a.IDENTIY_NO
					AND	c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h) 
					AND	c.DEBIT_CLT   = (:chr_l_recycle) )
	AND	c.CLN_CODE = a.domestic_cpclt
	AND	(c.CLN_BRK_ALL	!= 'B' OR
			 c.CLN_CODE = :l_mt_core_sys_params_struct_h.custody_clt_cd)
	FOR UPDATE OF a.access_stamp;
	}
	else
	{
   EXEC SQL DECLARE amt_outer2 CURSOR FOR
	SELECT  a.rowid, b.INSTR_TYPE 
	FROM dl_deal a, MT_INSTRUMENT b, MT_CLIENT c
	WHERE	(b.instr_code = :p_dl_deal_amt_struct_h->h_instr_code OR nvl(length(:p_dl_deal_amt_struct_h->h_instr_code),0) = 0) 
	AND a.DEAL_STAT <> 'DU'
	AND	a.deal_date <= :p_dl_deal_amt_struct_h->h_confdate
   AND  ((a.location_cd= :chr_l_vtb_locn  AND  a.setl_date<=:p_dl_deal_amt_struct_h->h_setldt AND :l_cond_ru<>0 )
                OR (  a.setl_date<=:p_dl_deal_amt_struct_h->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
	AND	a.instr_code = b.instr_code
	AND	a.VAL_FDT IS NULL
	AND	a.deal_cd IN (:chr_l_tgt_trcode1, :chr_l_tgt_trcode2)
	AND	0 = (	SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
					WHERE c.CLIENT = a.CLIENT
					AND	c.IDENTIY_NO   = a.IDENTIY_NO
					AND	c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h) 
					AND	c.DEBIT_CLT   = (:chr_l_recycle) )
	AND	c.CLN_CODE = a.domestic_cpclt
	AND	(c.CLN_BRK_ALL	!= 'B' OR
			 c.CLN_CODE = :l_mt_core_sys_params_struct_h.custody_clt_cd)
	FOR UPDATE OF a.access_stamp;
	}
	

   if( strcmp(chr_l_settledt_equal_criteria,"Y")==0 )
	   EXEC SQL OPEN amt_outer1;
   else
	   EXEC SQL OPEN amt_outer2;


	IS_ANY_ORA_ERROR;

	for (int_l_reccount=1; ;int_l_reccount++)
	{
      
		
      
		
			int_l_error_flg = APL_SUCCESS ;
		
		  memset(chr_l_h_typeofinstr, APL_NULL_CHAR, 4); 
       memset(chr_l_custnoteupdateout, APL_NULL_CHAR, 71); 
       memset(chr_l_custnoteupdatein, APL_NULL_CHAR, 71); 
       memset(chr_l_failcodeupdateout, APL_NULL_CHAR, 3); 
       memset(chr_l_failcodeupdatein, APL_NULL_CHAR, 3); 
       memset(chr_l_subfailcodeupdateout, APL_NULL_CHAR, 3); 
       memset(chr_l_subfailcodeupdatein, APL_NULL_CHAR, 3); 

		l_i_typeofinstr = 0;
		l_i_rowid = 0;
		memset(l_sys_dl_deal_struct_ho, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
		memset(l_sys_dl_deal_struct_iq, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
		memset(chr_l_rowid_outer, NULL, APL_ROWID_LEN);
	
			
	   if( strcmp(chr_l_settledt_equal_criteria,"Y")==0 )	
		   EXEC SQL FETCH amt_outer1 INTO :chr_l_rowid_outer:l_i_rowid,
												:chr_l_h_typeofinstr:l_i_typeofinstr;
		else
         EXEC SQL FETCH amt_outer2 INTO :chr_l_rowid_outer:l_i_rowid,
												:chr_l_h_typeofinstr:l_i_typeofinstr;
       fprintf(p_logfile, "\nInside for loop[%d] ",sqlca.sqlcode);
     

	   EXEC SQL SELECT dl_deal.* INTO :l_sys_dl_deal_struct_ho:l_sys_dl_deal_struct_iq 
  		FROM DL_DEAL  WHERE rowid=:chr_l_rowid_outer;

		memset(chr_l_buf, NULL, BUFFER_LEN);
                  sprintf( chr_l_buf,"qty is :%f", l_sys_dl_deal_struct_ho->h_qty);
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf, NULL, NULL);
	
		if (sqlca.sqlcode == 1403) break;
	
		l_i_settrdout = 0;
		l_i_FCtoassign =0;

		IS_ANY_ORA_ERROR;

		int_l_ctr_clrproc    = 0;

		EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_l_ctr_clrproc 
               FROM DL_LOCALREPPROC c
					WHERE c.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
					AND	c.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
					AND	c.CREDITCLIENT   = :l_dl_deal_amt_struct_h 
					AND	c.DEBIT_CLT   = :chr_l_failed;
		
		IS_ANY_ORA_ERROR

		if (int_l_ctr_clrproc > 0)
      {
       continue;
      }	
		

		int_l_dummy=0;
		if (APL_FAILURE == CO_Chk_SplVal("EUROCLEAR",
												  "DUMMY_ACC",
												  l_sys_dl_deal_struct_ho->h_dl_client,
												  &int_l_dummy,
												  l_debug_info_ptr)) 
		{
			APL_GOBACK_FAIL
		}
		if (int_l_dummy)  
			continue;

		

		
		fprintf(	p_logfile, 
					"Picked up chr_new trade outside : %s, %s\n",
					l_sys_dl_deal_struct_ho->h_dl_client,
					l_sys_dl_deal_struct_ho->h_indentity_no);


		

		EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT)
		VALUES (:l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_recycle);

		

		

  

 if (g_mt_commonsys_params_struct_h.ei_smi_ind[0] == 'Y')
 {
	int_p_smieligibility_flg = 0 ;

	if (EI_Chk_SMIElg(l_sys_dl_deal_struct_ho->h_loccode,l_sys_dl_deal_struct_ho->h_dlt,
			l_sys_dl_deal_struct_ho->h_classofdl,l_sys_dl_deal_struct_ho->h_instr_code,l_sys_dl_deal_struct_ho->h_locchng_flg,chr_l_rowid_outer,&int_p_smieligibility_flg,p_intl_envdatastruct_h,l_debug_info_ptr) == APL_FAILURE)
	{
		CO_ProcMonitor(p_logfile,"Failure from SMI_CheckSMIEligibility", NULL, p_intl_envdatastruct_h);
		APL_GOBACK_FAIL;
	}

	if(int_p_smieligibility_flg)
	{
		CO_ProcMonitor(p_logfile,"SMI Eligible Trade Found\n", NULL, NULL) ;
		continue ;
	}
 
 }
		
		fprintf(p_logfile, "Before if IPO Selection chr_flag .. |%s|%c| ..\n", p_dl_deal_amt_struct_h->h_iposel_ind,p_recdelflg);
		if (strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0)
		{
			fprintf(p_logfile, "Inside if IPO Selection chr_flag .. |%s|%c| ..\n", p_dl_deal_amt_struct_h->h_iposel_ind,p_recdelflg);
			if (	(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"62")) || 
					(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"63")) ) 
					 
				{
					fprintf(p_logfile, "IPO Selection: outer trade, Failcode 62,63,90 to be skipped Acc=|%s|, Refno=|%s|, failreason_cd=|%s|\n", 
					l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no,l_sys_dl_deal_struct_ho->h_fail_cd);
				}
			if ('D' == p_recdelflg)
			{
				if((strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"28")) && (strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"29")))
				{
					fprintf(p_logfile, "IPO Selection: outer trade, Non 28,29 Delivers to be skipped Acc=|%s|, Refno=|%s|, RecDel=|%c|, trade type=|%s|\n", 
					l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no,p_recdelflg,l_sys_dl_deal_struct_ho->h_classofdl);
				}
			}
			if ('R' == p_recdelflg)
			{
				if((strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"1")) && (strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"26")))
				{
					fprintf(p_logfile, "IPO Selection: outer trade, Non 1,26 Receives to be skipped Acc=|%s|, Refno=|%s|, RecDel=|%c|, trade type=|%s|\n", 
					l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no,p_recdelflg,l_sys_dl_deal_struct_ho->h_classofdl);
				}
			}
			if (  (!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"62")) ||
					(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"63")) ||
					
			 		(('D' == p_recdelflg) && ( (strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"28")) && (strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"29"))))||
			 		(('R' == p_recdelflg)  && ( (strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"1")) && (strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"26"))))
				)
			{

			int_l_failval=FAILREAS_IPODEAL_FAIL;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_recycle
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_recycle );

			IS_ANY_ORA_ERROR;
			continue;
			}
		}	
		else 
		{
		fprintf(p_logfile, "Inside else IPO Selection chr_flag .. |%s|%c| ..\n", p_dl_deal_amt_struct_h->h_iposel_ind,p_recdelflg);
			if ('D' == p_recdelflg)
			{
				if((!strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"28")) || (!strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"29")))
				{
					fprintf(p_logfile,"NON-IPO Selection:RECDEL=D:Skipping outer: Acc=|%s|, Refno=|%s|, RecDel=|%c|, trade type=|%s|\n", 
					l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no,p_recdelflg,l_sys_dl_deal_struct_ho->h_classofdl);
					continue;
				}
			}
		}
			

		
      if (  (!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"62")) && (l_rec_for_gr == 1))
      {
         continue;
      }

		if (strlen(p_dl_deal_amt_struct_h->h_typeofinstr))
		{
			if (strcmp(chr_l_h_typeofinstr, p_dl_deal_amt_struct_h->h_typeofinstr))
			{
				continue;
			}
		}

		

		 
		 if (!strcmp(l_sys_dl_deal_struct_ho->h_domcpclt_cd, l_mt_core_sys_params_struct_h.custody_clt_cd))
		{
			if ((l_sys_dl_deal_struct_iq->i_countclt == -1) && (l_sys_dl_deal_struct_iq->i_clientofcode == -1)) 
			{
				fprintf(p_logfile,"entry/exit trade\n");
				continue;
			}
		} 

		

		if (l_sys_dl_deal_struct_iq->i_amt == -1)
		{
			l_sys_dl_deal_struct_ho->h_amt = 0;
		}

			

		

		if (APL_FAILURE == CR_Proc_InstrQtyRoundToStr(	l_sys_dl_deal_struct_ho->h_qty,
																QUANTITY_LEN,
																l_sys_dl_deal_struct_ho->h_instr_code,
																chr_l_rep_outqty,
																l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}

		EXEC SQL SELECT DEC_LEN INTO :int_l_amt_declen
		FROM DL_CURRENCY
		WHERE CURRENCY_CD = :l_sys_dl_deal_struct_ho->h_currencycode;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF,
															"Decimal Len.",
															l_sys_dl_deal_struct_ho->h_currencycode,
															APL_NULL_STRING);

		CO_ToStr(	l_sys_dl_deal_struct_ho->h_amt,
						AMOUNT_LEN_B,
						int_l_amt_declen,
						chr_l_rep_outamt);
	

		

		memset(chr_l_h_cname, NULL, CNAME_LEN_A);
		EXEC SQL SELECT CLN_NAME INTO :chr_l_h_cname
		FROM MT_CLIENT
		WHERE CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_ACCNOT_FND,
															l_sys_dl_deal_struct_ho->h_dl_client,
															APL_NULL_STRING,
															APL_NULL_STRING);
															
		EXEC SQL SELECT INSTR_NAME INTO :chr_l_h_instrdesc
		FROM MT_INSTRUMENT
		WHERE INSTR_CODE = :l_sys_dl_deal_struct_ho->h_instr_code;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_INSTR_NOTFND,
															l_sys_dl_deal_struct_ho->h_instr_code,
															APL_NULL_STRING,
															APL_NULL_STRING);


		

		if (l_sys_dl_deal_struct_ho->h_qty < l_mt_core_sys_params_struct_h.odd_lot_qty)
		{
			

			int_l_failval = ODDLOT_DEAL_NOTCONFIRM;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR;

			continue;
		}

		
 
		

		int_l_error_flg = APL_SUCCESS;

		if (l_sys_dl_deal_struct_ho->h_dlfromord[0] == 'Y' )
		{
			if ( APL_FAILURE == CO_Chk_AccValid( l_sys_dl_deal_struct_ho->h_dl_client,
        		                           	'Y',
														'C',
            		                     	'B',
                 		                  	NULL,
														'Y',
														'N',
														'N',
														'N',
														l_debug_info_ptr))
			{
				int_l_error_flg = APL_FAILURE;
			}
		}
		else
		{
			if ( APL_FAILURE == CO_Chk_AccValid( l_sys_dl_deal_struct_ho->h_dl_client,
        		                           	'Y',
           		                        	'C',
            		                     	NULL,
                 		                  	NULL,
                    		               	'Y',
                       		            	'N',
                          		         	'N',
                             		      	'N',
                                		   	l_debug_info_ptr ) )
			{
				int_l_error_flg = APL_FAILURE;
			}
		}

		if ( int_l_error_flg == APL_FAILURE )	
   	{
			IS_ANY_ERROR_FATAL

			

			

			int_l_failval = CLIENT_NOTOK_IND;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR

			goto LBL_AMT_FAILURE;
   	}

 	  	


   
 		if ( APL_FAILURE == CO_Chk_AccValid( l_sys_dl_deal_struct_ho->h_domcpclt_cd,
      	                              'Y',
        		                           'B',
           		                        NULL,
              		                     NULL,
                 		                  'Y',
                    		               'N',
                       		            'N',
                          		         'N',
                             		      l_debug_info_ptr ) )
   	{	
			IS_ANY_ERROR_FATAL

			

			

			int_l_failval = DOMCPCLIENT_NOTOK;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR

			goto LBL_AMT_FAILURE;
   	}
	

		

		if (!(l_sys_dl_deal_struct_iq->i_countclt))
   	{
      	if ( APL_FAILURE == CO_Chk_AccValid( l_sys_dl_deal_struct_ho->h_countclt,
        		                              'Y',
           		                           'C',
              		                        'C',
                 		                     NULL,
                    		                  'Y',
                       		               'N',
                          		            'N',
                             		         'N',
                                		      l_debug_info_ptr ) )
      	{
					IS_ANY_ERROR_FATAL				
				

				
				
				int_l_failval = COUNTCLIENT_NOTOK;

				EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
				SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
				FROM DUAL
				WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
											WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
											AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
											AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
											AND	a.DEBIT_CLT	 = :chr_l_failed );

				IS_ANY_ORA_ERROR

				goto LBL_AMT_FAILURE;
			}
		}

 	   

		if ( APL_FAILURE == CO_Chk_InstrValid( l_sys_dl_deal_struct_ho->h_instr_code,
      	                              'Y',
        		                           'Y',
           		                        'N',
              		                     'N',
                 		                  NULL,
                    		               'N',
                       		            l_debug_info_ptr ) )
   	{	
			IS_ANY_ERROR_FATAL

			

			

			int_l_failval = FAILREAS_INSTR_NOTOK;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR

			goto LBL_AMT_FAILURE;
  		}

     	

  		if (l_mt_core_sys_params_struct_h.loc_proc_ind[0] == 'Y')
  		{
     		if (APL_FAILURE == MT_Chk_Loc(  l_sys_dl_deal_struct_ho->h_loccode,
        		                              'Y',
           		                           'Y',
              		                        NULL,
                 		                     l_debug_info_ptr ))
     		{	
				IS_ANY_ERROR_FATAL

				

				

				int_l_failval = FAILREAS_LOC_NOTOK;

				EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
				SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
				FROM DUAL
				WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
											WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
											AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
											AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
											AND	a.DEBIT_CLT	 = :chr_l_failed );

				IS_ANY_ORA_ERROR

				goto LBL_AMT_FAILURE;
     		}
  		}

   	

   	if ( APL_FAILURE == CO_Chk_CcyValid( l_sys_dl_deal_struct_ho->h_currencycode,
      	                              'M',
         	                           'Y',
            	                        l_debug_info_ptr ) )
   	{
			IS_ANY_ERROR_FATAL

			

			

			int_l_failval = FAILREAS_CCY_NOTOK;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR

			goto LBL_AMT_FAILURE;
   	}

		

		int_l_flag = 0;

		if (APL_FAILURE == CO_Chk_CntryEnabled(	"TRD_AMT",
															"TRD_AUTH_CHK",
															&int_l_flag,
															l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}
	
      
		if ((!int_l_flag) && 
       (strcmp(l_sys_dl_deal_struct_ho->h_deal_status, APL_STS_AUTH)))
	   	
		{
			

			

			int_l_failval = FAILREAS_DEAL_UAUTH;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR

			goto LBL_AMT_FAILURE;
		}
		
		

		if ((int_l_flag) && 
			 (l_sys_dl_deal_struct_iq->i_checker_dt == -1) && 
			 (!strcmp(l_sys_dl_deal_struct_ho->h_maker, p_intl_envdatastruct_h->usr)))
		{
			

			

			int_l_failval = MKR_CHKR_ERROR;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR

			goto LBL_AMT_FAILURE;
		}
		
	
		int_l_flag = 0;
      if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT_CHK",
                                          "RU_REG_CHK",
                                          &int_l_flag,
                                          l_debug_info_ptr ))
      {
         APL_GOBACK_FAIL
      }

      if (int_l_flag > 0)
      {
         
				l_rrnonprop = 2;
			
            if (APL_FAILURE == DL_Chk_RRMMDL(l_sys_dl_deal_struct_ho->h_dl_client,
                                             l_sys_dl_deal_struct_ho->h_instr_code,
															&l_rrnonprop,
                                             l_debug_info_ptr ))

            {
					APL_GOBACK_FAIL
				}
				
				if (l_rrnonprop == 0)
				{
               int_l_failval = RECORD_NOFND_RRMM;

               EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               FROM DUAL
              WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                           WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                           AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                           AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                           AND   a.DEBIT_CLT   = :chr_l_failed );

              IS_ANY_ORA_ERROR

               int_l_flag = 0;

                goto LBL_AMT_FAILURE; 
            }

				memset(chr_h_accclass, NULL, 2);
            EXEC SQL Select CLN_CLAS
            into :chr_h_accclass:l_i_accclass
            From MT_CLIENT
            Where (CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client);

            IS_ANY_ORA_ERROR;

            memset(chr_h_field_val, NULL, 40);

            EXEC SQL Select FIELD_VAL
            into :chr_h_field_val:l_i_field_val
            From PRO_GSSPLVAL
            where ((MAIN_FUN = 'TRADE_RRMM') AND
                   (SUB_PROCESS = 'ACC_CLASS') AND NATION = :g_mt_commonsys_params_struct_h.nation_code );

            IS_ANY_ORA_ERROR;

            l_toutnonprop = 0;

            
            if (!strcmp(chr_h_accclass, chr_h_field_val))
            {
               l_toutnonprop = 1;

               

               memset(chr_l_srnregno, NULL, 21);

               EXEC SQL SELECT STAT_REG_NO INTO :chr_l_srnregno:l_i_srnregno FROM DL_RUINSTRUMENT
               WHERE INSTR_CODE = :l_sys_dl_deal_struct_ho->h_instr_code;

               IS_ANY_ORA_ERROR;

            }
    	}

		
	
	if	((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && (l_ipo_skip_posn_chk != 0)) 
	{
		
		fprintf(p_logfile, "IPO Selection: outer trade, Position Checks to be skipped outer: Acc=|%s|, Refno=|%s| \n", 
		l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no);
	}
	else
	{

		

		if ( VAL_DELIVER_DEAL(l_sys_dl_deal_struct_ho->h_dealcd[0]) )
		{
			

			int_l_flag = 0;
			l_currposn = 0;
      	if ( APL_FAILURE == DL_Proc_PosLock( l_sys_dl_deal_struct_ho->h_dl_client,
         	                                 l_sys_dl_deal_struct_ho->h_instr_code,
            	                              l_sys_dl_deal_struct_ho->h_loccode,
               	                           APL_NULL_STRING,"FREE",
                     	                     l_debug_info_ptr ) )
      	{
         	IS_ANY_ERROR_FATAL
				goto LBL_AMT_FAILURE;
      	}
        	if ( APL_FAILURE == DL_Chk_AvlPos( l_sys_dl_deal_struct_ho->h_dl_client,
           	                                 l_sys_dl_deal_struct_ho->h_instr_code,
              	                              l_sys_dl_deal_struct_ho->h_loccode,
                 	                           'Y','N','N','Y','Y','N','N','N',
															"FREE",
                    	                        &l_currposn,
                       	                     l_debug_info_ptr) )
        	{
         	IS_ANY_ERROR_FATAL
				goto LBL_AMT_FAILURE;
        	}

      	if ( l_currposn < l_sys_dl_deal_struct_ho->h_qty )
      	{
				

				
				
            
            

				int_l_flag = 1;

				

				memset(chr_l_buf, NULL, BUFFER_LEN);
				sprintf(	chr_l_buf, 
							"Not enough positions for trade : %s, %s", 
							l_sys_dl_deal_struct_ho->h_dl_client, 
							l_sys_dl_deal_struct_ho->h_indentity_no);

				CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
			}


			if (int_l_flag != 1)
			{

				l_flagrr = 0;
				if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT_CHK",
                                             "RU_REG_CHK",
                                             &l_flagrr,
                                             l_debug_info_ptr ))
	   	   {
   	   	   APL_GOBACK_FAIL
      		}

				if (l_flagrr > 0)
				{

					if (l_toutnonprop == 1)
               {
	

						
						

                  if ( APL_FAILURE == CRUDBSafekLockFn( l_sys_dl_deal_struct_ho->h_dl_client,
                                       l_sys_dl_deal_struct_ho->h_instr_code,
                                       l_sys_dl_deal_struct_ho->h_loccode,
                                       l_sys_dl_deal_struct_ho->h_pos_stat,
                                       APL_NULL_STRING,
                                       APL_NULL_STRING,
                                       l_debug_info_ptr ) )						
         	      {
								APL_GOBACK_FAIL
	         	   		
               	}
			
						
						
							
						l_currposn = 0.0;
						

                  if ( APL_FAILURE == CRUDBAvailPosnFn( l_sys_dl_deal_struct_ho->h_dl_client,
                                          l_sys_dl_deal_struct_ho->h_instr_code,
                                          l_sys_dl_deal_struct_ho->h_loccode,
                                          'Y',
                                          &l_currposn, APL_NULL_STRING,
                                          l_debug_info_ptr) )
               	{
								APL_GOBACK_FAIL
                     	
               	}
						
						if ( l_currposn < l_sys_dl_deal_struct_ho->h_qty )
        				{

							int_l_failval = FAILREAS_NOENUF_POSRRMM;
	
 			           EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
      			      SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
         	  		 FROM DUAL
            			WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
               	                  WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                  	               AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                     	            AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                        	         AND   a.DEBIT_CLT   = :chr_l_failed );
	
 			           IS_ANY_ORA_ERROR
	
 			           int_l_flag = 1;
	
 			           
		
   			         memset(chr_l_buf, NULL, BUFFER_LEN);
         			   sprintf( chr_l_buf,
            	         "Not enough positions RRMM for trade : %s, %s",
               	      l_sys_dl_deal_struct_ho->h_dl_client,
                  	   l_sys_dl_deal_struct_ho->h_indentity_no );
	
 			           CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
	
						}
					}				
				}	
			}
							

			if (l_mt_core_sys_params_struct_h.vdp_ind[0] == 'N') 
			{
				int_l_diff_dates = 0;
				if (APL_FAILURE == CO_Pro_DateComp(	p_dl_deal_amt_struct_h->h_confdate,
															l_sys_dl_deal_struct_ho->h_setldt,
															&int_l_diff_dates,
															l_debug_info_ptr ))
				{
					APL_GOBACK_FAIL
				}	

				if (int_l_diff_dates > 0)
				{
					strcpy(chr_l_vdp_date, l_sys_dl_deal_struct_ho->h_setldt);
				}
				else
				{
					strcpy(chr_l_vdp_date, p_dl_deal_amt_struct_h->h_confdate);
				}	

				if (APL_FAILURE == DL_Chk_VDPPos(	l_sys_dl_deal_struct_ho->h_dl_client,
															l_sys_dl_deal_struct_ho->h_instr_code,
															l_sys_dl_deal_struct_ho->h_loccode,
															l_sys_dl_deal_struct_ho->h_pos_stat,
															l_sys_dl_deal_struct_ho->h_qty,
															chr_l_vdp_date,
															&int_l_chkflg,
															l_debug_info_ptr ))
				{	
					IS_ANY_ERROR_FATAL

					
	
					

					int_l_failval = FAILREAS_NOENUF_VDP;

					EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
					SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval 
					FROM DUAL
					WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
												WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
												AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
												AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
												AND	a.DEBIT_CLT	 = :chr_l_failed );

					IS_ANY_ORA_ERROR

					int_l_flag = 1;

					

					memset(chr_l_buf, NULL, BUFFER_LEN);
					sprintf(	chr_l_buf, 
								"Not enough VDP for trade : %s, %s", 
								l_sys_dl_deal_struct_ho->h_dl_client, 
								l_sys_dl_deal_struct_ho->h_indentity_no );

					CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
				}
			}

			if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
			{
				CO_ProcMonitor(p_logfile, "Got Errors :", l_debug_info_ptr, p_intl_envdatastruct_h);
				CO_FreeErrLst(l_debug_info_ptr);
			}
				
			

		   if (int_l_flag == 1)
			 {
				
				
			
				if ((l_rec_for_gr == 1 && (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"15"))) || 
					(l_rec_for_gr == 0 && ((!(strlen(l_sys_dl_deal_struct_ho->h_fail_cd))) || 
					(strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"20") == 0))))
				{
					memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
					strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);	
					strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);	
					strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"15");	
					strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);	
					strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);	
					strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
					strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
					
					if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"15"))
            	{
						
                     l_i_FCtoassign = 15;
                  
                  
					}
					printf("\ncheck 3.: p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
				}
				l_i_settrdout = 1;
            
			}	
		}
		}
			

		

		if (l_sys_dl_deal_struct_ho->h_dealcd[0] == '1')
		{
			strcpy(chr_l_opp_trcode, "2");
		}
		else if (l_sys_dl_deal_struct_ho->h_dealcd[0] == '2')
		{
			strcpy(chr_l_opp_trcode, "1");
		}
		else if (l_sys_dl_deal_struct_ho->h_dealcd[0] == '3')
		{
			strcpy(chr_l_opp_trcode, "4");
		}
		else if (l_sys_dl_deal_struct_ho->h_dealcd[0] == '4')
		{
			strcpy(chr_l_opp_trcode, "3");
		}


		

		
      
		
		if (strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0)
		{
			if ('R' == p_recdelflg)
			{
				strcpy(l_typeoftrd_01,"28");
				strcpy(l_typeoftrd_02,"29");
			 	strcpy(l_typeoftrd_03,"28");
			}	
			else if ('D' == p_recdelflg)
			{
				strcpy(l_typeoftrd_01,"1");
				strcpy(l_typeoftrd_02,"26");
				strcpy(l_typeoftrd_03,"1");
			}
		}
		
		else if ((!strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"1"))||(!strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"26")) || (!strcmp(l_sys_dl_deal_struct_ho->h_classofdl,"27")))
			{
		    strcpy(l_typeoftrd_01,"1");
		    strcpy(l_typeoftrd_02,"26");
			 strcpy(l_typeoftrd_03,"27");
		   }
		else
		   {
		   strcpy(l_typeoftrd_01,l_sys_dl_deal_struct_ho->h_classofdl);
		   strcpy(l_typeoftrd_02,l_sys_dl_deal_struct_ho->h_classofdl);
			strcpy(l_typeoftrd_03,l_sys_dl_deal_struct_ho->h_classofdl);
		   }

			
			
         l_i_rowid = 0;
         memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
         memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
         memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
		   int_l_next_trd=0;
		

	if (!strcmp(l_sys_dl_deal_struct_ho->h_domcpclt_cd, l_mt_core_sys_params_struct_h.custody_clt_cd))
		{
			
			int_l_chkflg = 1;
			if (strcmp(l_sys_dl_deal_struct_ho->h_locchng_flg,"M")==0)
			{
				 int_l_multmatchcount = 0;
				 memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
				 memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
				 memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
				 fprintf(p_logfile,"Looking for cp_clt & accountofcode combi match with client of the outer trade \n");
				 fprintf(p_logfile,"This is a Multiple Match scenario ACC :%s:, CP Acc :%s: Custodian :%s:\n", l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_countclt, l_sys_dl_deal_struct_ho->h_clientofcode);


          
				EXEC SQL SELECT a.*, a.rowid 
				INTO :l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
				FROM dl_deal a
				WHERE	a.DEAL_STAT <> 'DU'
				AND	a.VAL_FDT IS NULL
				AND	a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
				AND   (
							(a.cp_clt = :l_sys_dl_deal_struct_ho->h_dl_client
						    OR rtrim(substr(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) in (select CLN_master from MT_CLIENT 
												 where CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client
												 and STATUS not in ('UU','CA','FA','DU','FU','CU') ) )
						 OR 
							(a.CLIENTOF_CD = :l_sys_dl_deal_struct_ho->h_dl_client
						 	 OR a.CLIENTOF_CD in (select CLN_master from MT_CLIENT
															where CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client
														and STATUS not in ('UU','CA','FA','DU','FU','CU') ) ) )
				AND	a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
				AND	a.deal_cd = :chr_l_opp_trcode
				   AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 )OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0) )
				AND	a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
				AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
				AND	NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
				AND	a.QTY = :l_sys_dl_deal_struct_ho->h_qty
				AND 	a.loc_chng_ind != 'M'
				AND	ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
				FOR UPDATE OF a.access_stamp;
				
				

				if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != MORE_THAN_ONE_ROW)) 
				{
					fprintf(p_logfile,"sqlca.sqlcode is %d\n",sqlca.sqlcode);
					
					fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);
               
					EXEC SQL SELECT nvl(count(*),0) INTO :int_l_multmatchcount
					FROM dl_deal a
					WHERE	a.DEAL_STAT <> 'DU'
					AND	a.VAL_FDT IS NULL
					AND	a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
					AND   (a.client in (select CLN_CODE from MT_CLIENT 
											where CLN_master = rtrim(SUBSTR(:l_sys_dl_deal_struct_h_in->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
												and STATUS not in ('UU','CA','FA','DU','FU','CU') )
							OR  a.client in (select CLN_CODE from MT_CLIENT 
											where CLN_master = :l_sys_dl_deal_struct_h_in->h_clientofcode
											and STATUS not in ('UU','CA','FA','DU','FU','CU') ) )
					AND	a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
					AND	a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
               AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 )OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0) )
					AND	a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
					AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
					AND	NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
					AND	a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
					AND   a.loc_chng_ind = 'M'
					AND	ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

					
					IS_ANY_ORA_ERROR;	

					if(int_l_multmatchcount > 1 )
					{
						sqlca.sqlcode = MORE_THAN_ONE_ROW;
						
					}
				} 
				if ((sqlca.sqlcode == 1403) || (sqlca.sqlcode == MORE_THAN_ONE_ROW)) 
				{
					
					int_l_multmatchcount=0;
					l_i_rowid = 0;
					memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));

					memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
					memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
					fprintf(p_logfile,"Looking for without cp_clt & custodian combi.... Only the Basic check \n");

				EXEC SQL SELECT a.*, a.rowid 
				INTO :l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
				FROM dl_deal a
				WHERE	a.DEAL_STAT <> 'DU'
				AND	a.VAL_FDT IS NULL
				AND	a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
				AND	a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
				AND	a.deal_cd = :chr_l_opp_trcode
	         AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0) )
				AND	a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
				AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
				AND	NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
				AND	a.QTY = :l_sys_dl_deal_struct_ho->h_qty
				AND	ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
				FOR UPDATE OF a.access_stamp;
		
				
				if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != MORE_THAN_ONE_ROW)) 
				{
					
				EXEC SQL SELECT nvl(count(*),0) INTO :int_l_multmatchcount
				FROM dl_deal a
				WHERE	a.DEAL_STAT <> 'DU'
				AND	a.VAL_FDT IS NULL
				AND	a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
				AND	a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
				AND	a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
               OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
				AND	a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
				AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
				AND	NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
				AND	a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
				AND	ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

				fprintf(p_logfile,"OTHER DETAILS...l_multmatchcount is %d\n",int_l_multmatchcount);

					if(int_l_multmatchcount > 1 )
					{
						
						int_l_next_trd=1;
						sqlca.sqlcode = MORE_THAN_ONE_ROW;
					}
				} 
				else
				{ 
					int_l_next_trd=1;
					sqlca.sqlcode = 1403; 
				}
			 } 

		

			}
			else
			{
				
				
				
				fprintf(p_logfile,"First Leg: Countacc:%s, DECU/RECU:%s\n",l_sys_dl_deal_struct_ho->h_countclt,l_sys_dl_deal_struct_ho->h_clientofcode);
				fprintf(p_logfile,"Looking for cp_clt & Countacc combi\n");
            

				EXEC SQL SELECT a.*, a.rowid into
				:l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
				FROM dl_deal a
				WHERE	a.DEAL_STAT <> 'DU'
				AND	a.VAL_FDT IS NULL
				AND	a.client = rtrim(SUBSTR(:l_sys_dl_deal_struct_ho->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
				AND	a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
				AND	a.cp_clt = :l_sys_dl_deal_struct_ho->h_dl_client 
				AND	a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
				AND	a.deal_cd = :chr_l_opp_trcode
               AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
				AND	a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
				
				
				AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
				AND	NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
				AND	a.QTY = :l_sys_dl_deal_struct_ho->h_qty
				AND	a.LOC_CHNG_IND != 'M'
				AND	ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
				AND	0 = (	SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
					WHERE c.CLIENT = a.CLIENT
					AND	c.IDENTIY_NO   = a.IDENTIY_NO
					AND	c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h) 
					AND	c.DEBIT_CLT   = (:chr_l_failed) )
				FOR UPDATE OF a.access_stamp;

				
				fprintf(p_logfile,"1chkflg = %d\n", sqlca.sqlcode);

				

				if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
				{
					fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);
             
         				EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
         				FROM dl_deal a
         				WHERE a.DEAL_STAT <> 'DU'
         				AND   a.VAL_FDT IS NULL
         				AND   a.client = rtrim(SUBSTR(:l_sys_dl_deal_struct_h_in->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
         				AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
         				AND   rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = :l_sys_dl_deal_struct_h_in->h_dl_client 
         				AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
         				AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
               AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
         				AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
         				AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
         				AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
         				AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
							AND	a.LOC_CHNG_IND != 'M'
         				AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

							
			
					if (int_l_unique_rf_rvp_count > 1)
					{
					sqlca.sqlcode = -2112;
					}
					
				}

				int_l_case1 = 1;
				
			}
		}
		else 
		{
			int_l_chkflg = 2;
			EXEC SQL DECLARE amt_inner2 CURSOR FOR
			SELECT a.*, a.rowid
			FROM dl_deal a
			WHERE	a.DEAL_STAT <> 'DU'
			AND	a.VAL_FDT IS NULL
			AND	a.client = :l_sys_dl_deal_struct_ho->h_domcpclt_cd
			AND	a.domestic_cpclt = :l_sys_dl_deal_struct_ho->h_dl_client
			AND	a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
			AND	a.deal_cd = :chr_l_opp_trcode
         AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
			AND	a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
	
	
			AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
			AND	NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
			AND	a.QTY = :l_sys_dl_deal_struct_ho->h_qty
			AND	ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
			AND	0 = (	SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
					WHERE c.CLIENT = a.CLIENT
					AND	c.IDENTIY_NO   = a.IDENTIY_NO
					AND	c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h) 
					AND	c.DEBIT_CLT   = (:chr_l_failed) )
			FOR UPDATE OF a.access_stamp;

			

			EXEC SQL OPEN amt_inner2;
			IS_ANY_ORA_ERROR;
		}

		
		l_i_countin = 0; 

		for ( ; ; )
		{

			

			if(int_l_chkflg == 2)
			{
			l_i_rowid = 0;
			memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
			memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
			memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN); 
			}


			int_l_automatch=0;
		

				

			if (int_l_chkflg == 2)
			{
				EXEC SQL FETCH amt_inner2 INTO :l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,
														 :chr_l_rowid_inner:l_i_rowid;
			}
			
			if ((int_l_chkflg == 2) && (sqlca.sqlcode == 1403))
				break;
			if ((int_l_next_trd == 1) && ((sqlca.sqlcode == 1403) || (sqlca.sqlcode == -2112)))
				break;
			
			if ((int_l_next_trd!=1) && (int_l_chkflg == 1) && ((sqlca.sqlcode == 1403) || (sqlca.sqlcode == -2112)))
			{
			int_l_case1 = 0;
			int_l_case2 = 1;
         l_i_rowid = 0;
			int_l_unique_rf_rvp_count = 0;
         memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
         memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
         memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
			fprintf(p_logfile,"Looking for cp_clt & accountofcode combi\n");


         EXEC SQL SELECT a.*, a.rowid into 
			:l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
         FROM dl_deal a
         WHERE a.DEAL_STAT <> 'DU'
         AND   a.VAL_FDT IS NULL
         AND   a.client = rtrim(SUBSTR(:l_sys_dl_deal_struct_ho->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
         AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
         AND   a.CLIENTOF_CD = :l_sys_dl_deal_struct_ho->h_dl_client
         AND   a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
         AND   a.deal_cd = :chr_l_opp_trcode
         AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
         AND   a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
   
   
         AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
         AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
         AND   a.QTY = :l_sys_dl_deal_struct_ho->h_qty
          
			AND	a.LOC_CHNG_IND != 'M'
         AND   ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
         AND   0 = ( SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
               WHERE c.CLIENT = a.CLIENT
               AND   c.IDENTIY_NO   = a.IDENTIY_NO
               AND   c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h)
               AND   c.DEBIT_CLT   = (:chr_l_failed) )
         FOR UPDATE OF a.access_stamp;

			

			if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
				{
				fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);
            EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
            FROM dl_deal a
            WHERE a.DEAL_STAT <> 'DU'
            AND   a.VAL_FDT IS NULL
            AND   a.client = :l_sys_dl_deal_struct_h_in->h_clientofcode
            AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND   rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = :l_sys_dl_deal_struct_h_in->h_dl_client 
            AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
            AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
               AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
            AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
            AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
          
				AND	a.LOC_CHNG_IND != 'M'
            AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

            if (int_l_unique_rf_rvp_count > 1)
				{
               sqlca.sqlcode = -2112;
				}
            
				}

			if ((sqlca.sqlcode == 1403) || (sqlca.sqlcode == -2112))
				{
				int_l_case2 = 0;
				int_l_case3 = 1;
         	l_i_rowid = 0;
				int_l_unique_rf_rvp_count=0;  
        		 memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
        		 memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
        		 memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
				fprintf(p_logfile,"Looking for sub a/c of cp_clt & cp_clt combi\n");


				EXEC SQL SELECT a.*, a.rowid into
							:l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
				FROM dl_deal a
				WHERE   a.DEAL_STAT <> 'DU'
				AND     a.VAL_FDT IS NULL
				AND ((a.client = rtrim(SUBSTR(:l_sys_dl_deal_struct_ho->h_countclt,1,:G_SYS_ACCOUNT_LEN))) or
					     (a.client in (select CLN_CODE from MT_CLIENT
						where CLN_master =  rtrim(SUBSTR(:l_sys_dl_deal_struct_ho->h_countclt,1,:G_SYS_ACCOUNT_LEN))
									and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
				AND     a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
         	AND ((rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = :l_sys_dl_deal_struct_ho->h_dl_client) or
            (rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = (select CLN_master from MT_CLIENT
               	                    where CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client
									and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
				AND     a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
				AND     a.deal_cd = :chr_l_opp_trcode
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
				AND     a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
				AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
				AND     NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
				AND     a.QTY = :l_sys_dl_deal_struct_ho->h_qty
          	
				AND	a.LOC_CHNG_IND != 'M'
				AND     ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt)) 
								<= :l_mt_core_sys_params_struct_h.allowed_amtdiff
				AND     0 = (   SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
								WHERE c.CLIENT = a.CLIENT
								AND     c.IDENTIY_NO   = a.IDENTIY_NO
								AND     c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h)
								AND     c.DEBIT_CLT   = (:chr_l_failed) )
								FOR UPDATE OF a.access_stamp;

				
				fprintf(p_logfile,"case 3 sqlca.sqlcode=%d",sqlca.sqlcode);

			if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
				{
				fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);


            EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
            FROM dl_deal a
            WHERE a.DEAL_STAT <> 'DU'
            AND   a.VAL_FDT IS NULL
				AND  ((a.client = rtrim(SUBSTR(:l_sys_dl_deal_struct_h_in->h_countclt,1,:G_SYS_ACCOUNT_LEN))) or
            	     (a.client in (select CLN_CODE from MT_CLIENT
                   where CLN_master = rtrim(SUBSTR(:l_sys_dl_deal_struct_h_in->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
                       and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
            AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND  ((rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = :l_sys_dl_deal_struct_h_in->h_dl_client) or
               (rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = (select CLN_master from MT_CLIENT
                              where CLN_CODE = :l_sys_dl_deal_struct_h_in->h_dl_client
                           and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
            AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
            AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
            AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
            AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
          	
				AND	a.LOC_CHNG_IND != 'M'
            AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

            if (int_l_unique_rf_rvp_count > 1)
				{
               sqlca.sqlcode = -2112;
				}
               
            }

				
				if ((sqlca.sqlcode == 1403) || (sqlca.sqlcode == -2112))
				{
            int_l_case3 = 0;
            int_l_case4 = 1;
   	      l_i_rowid = 0;
				int_l_unique_rf_rvp_count = 0;
      	   memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
         	memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
         	memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
				fprintf(p_logfile,"Looking for sub a/c of cp_clt & accountofcode combi\n");


            EXEC SQL SELECT a.*, a.rowid into
				:l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
            FROM dl_deal a
            WHERE   a.DEAL_STAT <> 'DU'
            AND     a.VAL_FDT IS NULL
            AND     (a.client in (select CLN_CODE from MT_CLIENT
                               where CLN_master = rtrim(SUBSTR(:l_sys_dl_deal_struct_ho->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
									and STATUS not in ('UU','CA','FA','DU','FU','CU')))
            AND     a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND   ((a.CLIENTOF_CD = :l_sys_dl_deal_struct_ho->h_dl_client) or
                  (a.CLIENTOF_CD = (select CLN_master from MT_CLIENT
                                       where CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client
									and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
            AND     a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
            AND     a.deal_cd = :chr_l_opp_trcode
		      AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
            AND     a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND     NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
            AND     a.QTY = :l_sys_dl_deal_struct_ho->h_qty
          	
				AND	a.LOC_CHNG_IND != 'M'
            AND     ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt))
                        <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
            AND     0 = (   SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
                        WHERE c.CLIENT = a.CLIENT
                        AND     c.IDENTIY_NO   = a.IDENTIY_NO
                        AND     c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h)
                        AND     c.DEBIT_CLT   = (:chr_l_failed) )
                        FOR UPDATE OF a.access_stamp;

				

			if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
				{
				fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);


            EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
            FROM dl_deal a
            WHERE a.DEAL_STAT <> 'DU'
            AND   a.VAL_FDT IS NULL
            AND     (a.client in (select CLN_CODE from MT_CLIENT
                       where CLN_master =  :l_sys_dl_deal_struct_h_in->h_clientofcode
                       and STATUS not in ('UU','CA','FA','DU','FU','CU')))
            AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND   ((rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN))= :l_sys_dl_deal_struct_h_in->h_dl_client) or
               (rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = (select CLN_master from MT_CLIENT
                              where CLN_CODE = :l_sys_dl_deal_struct_h_in->h_dl_client
                           and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
            AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
            AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
            AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
            AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
          	
				AND	a.LOC_CHNG_IND != 'M'
            AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

            	if (int_l_unique_rf_rvp_count > 1)
					{
               sqlca.sqlcode = -2112;
					}
               
            }
			
				if ((sqlca.sqlcode == 1403) || (sqlca.sqlcode == -2112))
					{
            	int_l_case4 = 0;
           		int_l_case5 = 1;
         		l_i_rowid = 0;
         		memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
         		memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
         		memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
					fprintf(p_logfile,"Looking accountofcode & cp_clt combi\n");
					EXEC SQL SELECT a.*, a.rowid into
					:l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
					FROM dl_deal a
					WHERE   a.DEAL_STAT <> 'DU'
					AND     a.VAL_FDT IS NULL
					AND     a.client = :l_sys_dl_deal_struct_ho->h_clientofcode
					AND     a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
					AND     rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN))  = :l_sys_dl_deal_struct_ho->h_dl_client
					AND     a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
					AND     a.deal_cd = :chr_l_opp_trcode
               AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
					AND     a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
					AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
					AND     NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
					AND     a.QTY = :l_sys_dl_deal_struct_ho->h_qty
          		
					AND	a.LOC_CHNG_IND != 'M'
					AND     ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt)) 
											<= :l_mt_core_sys_params_struct_h.allowed_amtdiff
					AND     0 = (   SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
											WHERE c.CLIENT = a.CLIENT
											AND     c.IDENTIY_NO   = a.IDENTIY_NO
											AND     c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h)
											AND     c.DEBIT_CLT   = (:chr_l_failed) )
					FOR UPDATE OF a.access_stamp;

					

			if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
				{
				fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);


            EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
            FROM dl_deal a
            WHERE a.DEAL_STAT <> 'DU'
            AND   a.VAL_FDT IS NULL
				AND	a.client = rtrim(SUBSTR(:l_sys_dl_deal_struct_h_in->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
            AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND   a.CLIENTOF_CD = :l_sys_dl_deal_struct_h_in->h_dl_client
            AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
            AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))

            AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
            AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
          	
				AND	a.LOC_CHNG_IND != 'M'
            AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

            	if (int_l_unique_rf_rvp_count > 1)
					{
               sqlca.sqlcode = -2112;
					}
               
            }

					if ((sqlca.sqlcode == 1403) || (sqlca.sqlcode == -2112))
					{
           		int_l_case5 = 0;
            	int_l_case6 = 1;
   	   	   l_i_rowid = 0;
					int_l_unique_rf_rvp_count = 0;
      	   	memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
        			memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
      		   memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
						fprintf(p_logfile,"Looking for accountofcode & accountofcode combi\n");
                  EXEC SQL SELECT a.*, a.rowid into
                  :l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
                  FROM dl_deal a
                  WHERE   a.DEAL_STAT <> 'DU'
                  AND     a.VAL_FDT IS NULL
                  AND     a.client = :l_sys_dl_deal_struct_ho->h_clientofcode
                  AND     a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
                  AND     a.CLIENTOF_CD = :l_sys_dl_deal_struct_ho->h_dl_client
                  AND     a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
                  AND     a.deal_cd = :chr_l_opp_trcode
               	AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                		OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
                  AND     a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
                  AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
                  AND     NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
                  AND     a.QTY = :l_sys_dl_deal_struct_ho->h_qty
          			
						AND	a.LOC_CHNG_IND != 'M'
                  AND     ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt))
                          <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
                  AND     0 = (   SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
                                    WHERE c.CLIENT = a.CLIENT
                                     AND     c.IDENTIY_NO   = a.IDENTIY_NO
                                     AND     c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h)
                                     AND     c.DEBIT_CLT   = (:chr_l_failed) )
                  FOR UPDATE OF a.access_stamp;

						

			if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
				{
				fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);
            EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
            FROM dl_deal a
            WHERE a.DEAL_STAT <> 'DU'
            AND   a.VAL_FDT IS NULL
            AND   a.client = :l_sys_dl_deal_struct_h_in->h_clientofcode
            AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND   a.CLIENTOF_CD = :l_sys_dl_deal_struct_h_in->h_dl_client
            AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
            AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
            AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
            AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
          	
				AND	a.LOC_CHNG_IND != 'M'
            AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

           	 if (int_l_unique_rf_rvp_count > 1)
					{
               sqlca.sqlcode = -2112;
					}
               
            }

				if ((sqlca.sqlcode == 1403)|| (sqlca.sqlcode == -2112))
					{
            	int_l_case6 = 0;
           		int_l_case7 = 1;
         		l_i_rowid = 0;
					int_l_unique_rf_rvp_count = 0;
         		memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
         		memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
         		memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
					fprintf(p_logfile,"Looking for sub a/c of accountofcode & cp_clt combi\n");


						EXEC SQL SELECT a.*, a.rowid into
						:l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
						from dl_deal a
						WHERE   a.DEAL_STAT <> 'DU'
						AND     a.VAL_FDT IS NULL
						AND    (a.client in (select CLN_CODE from MT_CLIENT
													where CLN_master =  :l_sys_dl_deal_struct_ho->h_clientofcode
									and STATUS not in ('UU','CA','FA','DU','FU','CU')))
						AND     a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
						AND   ((rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = :l_sys_dl_deal_struct_ho->h_dl_client) or
								(rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) = (select CLN_master from MT_CLIENT
											where CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client
									and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
						AND     a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
						AND     a.deal_cd = :chr_l_opp_trcode
               	AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                		OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
						AND     a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
						AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
						AND     NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
						AND     a.QTY = :l_sys_dl_deal_struct_ho->h_qty
          			
						AND	a.LOC_CHNG_IND != 'M'
						AND     ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt))
										<= :l_mt_core_sys_params_struct_h.allowed_amtdiff
						AND     0 = (   SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
												WHERE c.CLIENT = a.CLIENT
												AND     c.IDENTIY_NO   = a.IDENTIY_NO
												AND     c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h)
												AND     c.DEBIT_CLT   = (:chr_l_failed) )
						FOR UPDATE OF a.access_stamp;

						

			if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
			{
				fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);


            EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
            FROM dl_deal a
            WHERE a.DEAL_STAT <> 'DU'
            AND   a.VAL_FDT IS NULL
            AND     (a.client in (select CLN_CODE from MT_CLIENT
                       where CLN_master = rtrim(SUBSTR(:l_sys_dl_deal_struct_h_in->h_countclt,1,:G_SYS_ACCOUNT_LEN)) 
                       and STATUS not in ('UU','CA','FA','DU','FU','CU')))
            AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND   ((a.CLIENTOF_CD = :l_sys_dl_deal_struct_h_in->h_dl_client) or
               (a.CLIENTOF_CD = (select CLN_master from MT_CLIENT
                              where CLN_CODE = :l_sys_dl_deal_struct_h_in->h_dl_client
                           and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
            AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
            AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
            AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
            AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
         	
				AND	a.LOC_CHNG_IND != 'M'
            AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

           		if (int_l_unique_rf_rvp_count > 1)
					{
               sqlca.sqlcode = -2112;
					}
               
            }

						if ((sqlca.sqlcode == 1403)|| (sqlca.sqlcode == -2112))
						{
            		int_l_case7 = 0;
           			int_l_case8 = 1;
   			      l_i_rowid = 0;
						int_l_unique_rf_rvp_count = 0;
         			memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
         			memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
         			memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
						fprintf(p_logfile,"Looking for suba/c of accountofcode & accountofcode combi\n");
						EXEC SQL SELECT a.*, a.rowid
						INTO :l_sys_dl_deal_struct_h_in:l_sys_dl_deal_struct_i_in,:chr_l_rowid_inner:l_i_rowid
						FROM dl_deal a
						WHERE   a.DEAL_STAT <> 'DU'
						AND     a.VAL_FDT IS NULL
						AND    (a.client in (select CLN_CODE from MT_CLIENT
           	   	               where CLN_master =  :l_sys_dl_deal_struct_ho->h_clientofcode
									and STATUS not in ('UU','CA','FA','DU','FU','CU')))
           			AND     a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
         			AND   ((a.CLIENTOF_CD = :l_sys_dl_deal_struct_ho->h_dl_client) or
              				 (a.CLIENTOF_CD = (select CLN_master from MT_CLIENT
                        	            where CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client
									and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
           			 AND     a.instr_code = :l_sys_dl_deal_struct_ho->h_instr_code
           			 AND     a.deal_cd = :chr_l_opp_trcode
					    AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru!=0 )
                			OR (  a.setl_date=:l_sys_dl_deal_struct_ho->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
           			 AND     a.deal_date = :l_sys_dl_deal_struct_ho->h_dlt
           			 AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
           			 AND     NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_ho->h_loccode,0)
           			 AND     a.QTY = :l_sys_dl_deal_struct_ho->h_qty
         			
						 AND	 a.LOC_CHNG_IND != 'M'
           			 AND     ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_ho->h_amt))
									 <= :l_mt_core_sys_params_struct_h.allowed_amtdiff
            		AND     0 = (   SELECT NVL(COUNT(*),0) FROM DL_LOCALREPPROC c
                  			      WHERE c.CLIENT = a.CLIENT
                        			AND     c.IDENTIY_NO   = a.IDENTIY_NO
                        			AND     c.CREDITCLIENT   = (:l_dl_deal_amt_struct_h)
                       				 AND     c.DEBIT_CLT   = (:chr_l_failed) )
                       				 FOR UPDATE OF a.access_stamp;

						

			if ((sqlca.sqlcode != 1403)&&(sqlca.sqlcode != -2112))
			{
				fprintf(p_logfile,"2nd leg Account:%s,Countacc:%s,DECU/RECU:%s\n",l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_clientofcode);
            EXEC SQL SELECT count(*) into :int_l_unique_rf_rvp_count
            FROM dl_deal a
            WHERE a.DEAL_STAT <> 'DU'
            AND   a.VAL_FDT IS NULL
            AND     (a.client in (select CLN_CODE from MT_CLIENT
                       where CLN_master =  :l_sys_dl_deal_struct_h_in->h_clientofcode
                       and STATUS not in ('UU','CA','FA','DU','FU','CU')))
            AND   a.domestic_cpclt = :l_mt_core_sys_params_struct_h.custody_clt_cd
            AND   ((a.CLIENTOF_CD = :l_sys_dl_deal_struct_h_in->h_dl_client) or
               (a.CLIENTOF_CD = (select CLN_master from MT_CLIENT
                              where CLN_CODE = :l_sys_dl_deal_struct_h_in->h_dl_client
                           and STATUS not in ('UU','CA','FA','DU','FU','CU'))))
            AND   a.instr_code = :l_sys_dl_deal_struct_h_in->h_instr_code
            AND   a.deal_cd = :l_sys_dl_deal_struct_ho->h_dealcd
            AND  ((a.location_cd= :chr_l_vtb_locn AND  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru!=0 )
                OR (  a.setl_date=:l_sys_dl_deal_struct_h_in->h_setldt AND :l_cond_ru=0 ) OR (a.location_cd !=:chr_l_vtb_locn AND :l_cond_ru!=0))
            AND   a.deal_date = :l_sys_dl_deal_struct_h_in->h_dlt
            AND   a.dl_class in (:l_typeoftrd_01,:l_typeoftrd_02,:l_typeoftrd_03)
            AND   NVL(a.location_cd,0) = NVL(:l_sys_dl_deal_struct_h_in->h_loccode,0)
            AND   a.QTY = :l_sys_dl_deal_struct_h_in->h_qty
         	
				AND	 a.LOC_CHNG_IND != 'M'
            AND  ABS((NVL(a.AMOUNT,0)-:l_sys_dl_deal_struct_h_in->h_amt)) <= :l_mt_core_sys_params_struct_h.allowed_amtdiff;

				

            if (int_l_unique_rf_rvp_count > 1)
					{
               sqlca.sqlcode = -2112;
					}
               
            }

	
						if ((sqlca.sqlcode == 1403)||(sqlca.sqlcode == -2112))
						{
						int_l_case8 = 0;
     				   l_i_rowid = 0;
						int_l_unique_rf_rvp_count = 0;
         			memset(l_sys_dl_deal_struct_h_in, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
         			memset(l_sys_dl_deal_struct_i_in, 0, sizeof(SYS_DL_DEAL_STRUCT_I));
         			memset(chr_l_rowid_inner, NULL, APL_ROWID_LEN);
						fprintf(p_logfile,"breaking...as nothing/nothing unique is int_found ....\n");
						fprintf(p_logfile,"l_automatch=%d\n",int_l_automatch);
						fprintf(p_logfile,"l_i_countin=%d\n",l_i_countin);
						break;
						}
						} 
						} 
						} 
						} 
						} 
						} 
						} 
			l_i_settrdin = 0;
			
			
         if (  (!strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"62")) && (l_rec_for_gr == 1))
         {
				if (int_l_chkflg == 2)
           		 continue;
				else break;
         }

		
		if (strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0)
		{
			if (	(!strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"62")) || 
					(!strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"63")) )
					 
				{
					fprintf(p_logfile, "IPO Selection: inner trade , Failcodes 62,63,90 to be skipped  Acc=|%s|, Refno=|%s|, failreason_cd=|%s|\n", 
					l_sys_dl_deal_struct_h_in->h_dl_client, l_sys_dl_deal_struct_h_in->h_indentity_no,l_sys_dl_deal_struct_h_in->h_fail_cd);

					int_l_failval=FAILREAS_IPODEAL_FAIL;

					EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT)
					SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_recycle
					FROM DUAL
					WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
												WHERE	a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
												AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_h_in->h_indentity_no 
												AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
												AND	a.DEBIT_CLT	 = :chr_l_recycle );

					IS_ANY_ORA_ERROR;
					if (int_l_chkflg == 2)
						continue;
					else 
						break;
				}
		}
		
         l_i_countin = l_i_countin + 1; 

			IS_ANY_ORA_ERROR

			

			fprintf(	p_logfile, 
						"Picked up chr_new trade inside : %s, %s\n",
						l_sys_dl_deal_struct_h_in->h_dl_client,
						l_sys_dl_deal_struct_h_in->h_indentity_no);
		

			

			

			

			if (APL_FAILURE == CR_Proc_InstrQtyRoundToStr(	l_sys_dl_deal_struct_h_in->h_qty,
																	QUANTITY_LEN,
																	l_sys_dl_deal_struct_h_in->h_instr_code,
																	chr_l_rep_inqty,
																	l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}

			int_l_amt_declen = 0;
			EXEC SQL SELECT DEC_LEN INTO :int_l_amt_declen
			FROM DL_CURRENCY
			WHERE CURRENCY_CD = :l_sys_dl_deal_struct_h_in->h_currencycode;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF,
																"Decimal Len.",
																l_sys_dl_deal_struct_h_in->h_currencycode,
																APL_NULL_STRING);

			CO_ToStr(	l_sys_dl_deal_struct_h_in->h_amt,
							AMOUNT_LEN_B,
							int_l_amt_declen,
							chr_l_rep_inamt);

			

			memset(chr_l_h_cname, NULL, CNAME_LEN_A);
			EXEC SQL SELECT CLN_NAME INTO :chr_l_h_cname
			FROM MT_CLIENT
			WHERE CLN_CODE = :l_sys_dl_deal_struct_h_in->h_dl_client;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_ACCNOT_FND,
																l_sys_dl_deal_struct_h_in->h_dl_client,
																APL_NULL_STRING,
																APL_NULL_STRING);

			

			
			

				

				
				
				
			

 	  		
			
				
				

				
				

			
			if ((int_l_case5 == 1) || (int_l_case6 == 1) || (int_l_case7 == 1) || (int_l_case8 == 1))
			{	
		   if (!(l_sys_dl_deal_struct_iq->i_clientofcode))
   		{
			fprintf(p_logfile,"Validating the DECU/RECU of outer cursor\n");
      		if ( APL_FAILURE == CO_Chk_AccValid( l_sys_dl_deal_struct_ho->h_clientofcode,
         		                              'Y',
            		                           'C',
               		                        'C',
                  		                     NULL,
                     		                  'Y',
                        		               'N',
                           		            'N',
                              		         'N',
                                 		      l_debug_info_ptr ) )
      		{	
					IS_ANY_ERROR_FATAL
			
					

					
					
					int_l_failval = FAILREAS_DECURECU_NOTOK;

					EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
					SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
					FROM DUAL
					WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
												WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
												AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
												AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
												AND	a.DEBIT_CLT	 = :chr_l_failed );

					IS_ANY_ORA_ERROR

					

						break;
      			}
   			}
			}
fprintf(p_logfile,"Validating the COUNTACC of inner cursor for case6 and case8\n");
		   if ((!(l_sys_dl_deal_struct_i_in->i_countclt)) && ((int_l_case2 == 1) || (int_l_case4 == 1) || (int_l_case6 == 1) || (int_l_case8 == 1)))
   		{
      		if ( APL_FAILURE == CO_Chk_AccValid( l_sys_dl_deal_struct_h_in->h_countclt,
         		                              'Y',
            		                           'C',
               		                        'C',
                  		                     NULL,
                     		                  'Y',
                        		               'N',
                           		            'N',
                              		         'N',
                                 		      l_debug_info_ptr ) )
      		{	
					fprintf(p_logfile,"inside cp_clt valid of inner , sqlca=%d\n",sqlca.sqlcode);
					IS_ANY_ERROR_FATAL
			
					

					
					
					int_l_failval = COUNTCLIENT_NOTOK;

					EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
					SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
					FROM DUAL
					WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
												WHERE	a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
												AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_h_in->h_indentity_no 
												AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
												AND	a.DEBIT_CLT	 = :chr_l_failed );


					fprintf(p_logfile,"inside cp_clt valid of inner , insert sqlca=%d\n",sqlca.sqlcode);
					IS_ANY_ORA_ERROR

				
					
					int_l_failval = COUNTCLIENT_MASTER_NOTOK;

					EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
					SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, 
							:chr_l_failed, :int_l_failval
					FROM DUAL
					WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
												WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
												AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
												AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
												AND	a.DEBIT_CLT	 = :chr_l_failed );
					fprintf(p_logfile,"inside cp_clt valid of inner , insertwith M  sqlca=%d\n",sqlca.sqlcode);
					IS_ANY_ORA_ERROR

						break;
      			}
			} 	
			

			

			int_l_flag = 0;

			if (APL_FAILURE == CO_Chk_CntryEnabled(	"TRD_AMT",
																"TRD_AUTH_CHK",
																&int_l_flag,
																l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}
	
			if ((!int_l_flag) && 
				 (strcmp(l_sys_dl_deal_struct_h_in->h_deal_status, APL_STS_AUTH)))
			{
				

				

				

				int_l_failval = FAILREAS_DEAL_UAUTH;

				EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
				SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
				FROM DUAL
				WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
											WHERE	a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
											AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_h_in->h_indentity_no 
											AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
											AND	a.DEBIT_CLT	 = :chr_l_failed );

				IS_ANY_ORA_ERROR

				int_l_failval = FAILREAS_MATCHDEAL_UAUTH;

				EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
				SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
				FROM DUAL
				WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
											WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
											AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
											AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
											AND	a.DEBIT_CLT	 = :chr_l_failed );

				IS_ANY_ORA_ERROR

			if (int_l_chkflg == 2)	
				continue;
			else break;
			}
			
			

			if ((int_l_flag) && 
				 (l_sys_dl_deal_struct_i_in->i_checker_dt == -1) && 
				 (!strcmp(l_sys_dl_deal_struct_h_in->h_maker, p_intl_envdatastruct_h->usr)))
			{
				

				

				

				int_l_failval = MKR_CHKR_ERROR;

				EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
				SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
				FROM DUAL
				WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
											WHERE	a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
											AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_h_in->h_indentity_no 
											AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
											AND	a.DEBIT_CLT	 = :chr_l_failed );

				IS_ANY_ORA_ERROR

				int_l_failval = MKR_CHKR_ERROR_MATCHDL;

				EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
				SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
				FROM DUAL
				WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
											WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
											AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
											AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
											AND	a.DEBIT_CLT	 = :chr_l_failed );

				IS_ANY_ORA_ERROR

			if (int_l_chkflg == 2) 	
				continue;
			else break;
			}

				
      	int_l_flag = 0;
      	if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT_CHK",
                                          "RU_REG_CHK",
                                          &int_l_flag,
                                          l_debug_info_ptr ))
      	{
         	APL_GOBACK_FAIL
      	}

 		     if (int_l_flag > 0)
      		{
         		
					l_rrnonprop = 2;
            	if (APL_FAILURE == DL_Chk_RRMMDL(l_sys_dl_deal_struct_h_in->h_dl_client,
                                                l_sys_dl_deal_struct_h_in->h_instr_code,
															   &l_rrnonprop,	
                                                l_debug_info_ptr ) )

               {
						APL_GOBACK_FAIL
					}
			
					if (l_rrnonprop == 0)
					{
                  int_l_failval = RECORD_NOFND_RRMM;

                  EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
                  SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
                  FROM DUAL
                  WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                              WHERE a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
                              AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_h_in->h_indentity_no
                              AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                              AND   a.DEBIT_CLT   = :chr_l_failed );

                 IS_ANY_ORA_ERROR

					  int_l_failval = RECORD_MATCH_NOFND_RRMM;

                  EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
                  SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
                  FROM DUAL
                  WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                                 WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                                 AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                 AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                 AND   a.DEBIT_CLT   = :chr_l_failed );

                 IS_ANY_ORA_ERROR

                   int_l_flag = 0;
						if (int_l_chkflg == 2)
                   continue;
						else break;
                  

               }

					memset(chr_h_accclass, NULL, 2);

               EXEC SQL Select CLN_CLAS
               into :chr_h_accclass:l_i_accclass
               From MT_CLIENT
               Where (CLN_CODE = :l_sys_dl_deal_struct_h_in->h_dl_client);

               IS_ANY_ORA_ERROR;

               memset(chr_h_field_val, NULL, 40);

               EXEC SQL Select FIELD_VAL
               into :chr_h_field_val:l_i_field_val
               From PRO_GSSPLVAL
               where ((MAIN_FUN = 'TRADE_RRMM') AND
                      (SUB_PROCESS = 'ACC_CLASS') AND NATION = :g_mt_commonsys_params_struct_h.nation_code );

               IS_ANY_ORA_ERROR;

               l_tinnonprop = 0;

					if (!strcmp(chr_h_accclass, chr_h_field_val))
               {
                  l_tinnonprop = 1;

                  

                  memset(chr_l_srnregno, NULL, 21);


                  EXEC SQL SELECT STAT_REG_NO INTO :chr_l_srnregno:l_i_srnregno FROM DL_RUINSTRUMENT
                  WHERE INSTR_CODE = :l_sys_dl_deal_struct_ho->h_instr_code;

                  IS_ANY_ORA_ERROR;
               }

				}

			

	
		if	((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && (l_ipo_skip_posn_chk != 0)) 
		{
			
			fprintf(p_logfile, "IPO Selection: inner trade, Positions Checks to be skipped Acc=|%s|, Refno=|%s| \n", 
			l_sys_dl_deal_struct_h_in->h_dl_client, l_sys_dl_deal_struct_h_in->h_indentity_no);
		}
		else
		{
			

			if ( VAL_DELIVER_DEAL(l_sys_dl_deal_struct_h_in->h_dealcd[0]) )
			{
				

				int_l_flag = 0;
				l_currposn = 0;
      		if ( APL_FAILURE == DL_Proc_PosLock( l_sys_dl_deal_struct_h_in->h_dl_client,
         		                                 l_sys_dl_deal_struct_h_in->h_instr_code,
            		                              l_sys_dl_deal_struct_h_in->h_loccode,
               		                           APL_NULL_STRING,"FREE",
                     		                     l_debug_info_ptr ) )
      		{
					IS_ANY_ERROR_FATAL
					if (int_l_chkflg == 2)
						continue;
					else break;
      		}

         	if ( APL_FAILURE == DL_Chk_AvlPos( l_sys_dl_deal_struct_h_in->h_dl_client,
           		                                 l_sys_dl_deal_struct_h_in->h_instr_code,
              		                              l_sys_dl_deal_struct_h_in->h_loccode,
                 		                           'Y','N','N','Y','Y','N','N','N',
																"FREE",
                    		                        &l_currposn,
                       		                     l_debug_info_ptr) )
         	{
					IS_ANY_ERROR_FATAL
					if (int_l_chkflg == 2)
						continue;
					else break;
         	}

      		if ( l_currposn < l_sys_dl_deal_struct_h_in->h_qty )
      		{
					

					

					

					int_l_failval = FAILREAS_NOENUF_POS;


					EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
					SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
					FROM DUAL
					WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
												WHERE	a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
												AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_h_in->h_indentity_no 
												AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
												AND	a.DEBIT_CLT	 = :chr_l_failed );

					IS_ANY_ORA_ERROR

					int_l_failval = FAILREAS_MATCH_NOENUF_POS;

		

					if ((l_rec_for_gr == 1 && (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"34"))) || 
						(l_rec_for_gr == 0 && ((!(strlen(l_sys_dl_deal_struct_ho->h_fail_cd))) ||
						(strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"20") == 0))))
               {
                  memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
                  strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);
                  strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);
                  strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"34");
                  strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
                  strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
                  
                  if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"34"))
                  {
                     if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,p_intl_envdatastruct_h,l_debug_info_ptr ))
                     {
                         IS_ANY_ERROR_FATAL
                     }
                     printf("\ncheck 2.: p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
                  }
                  

                  
               }

					EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
					SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
					FROM DUAL
					WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
												WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
												AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
												AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
												AND	a.DEBIT_CLT	 = :chr_l_failed );

					IS_ANY_ORA_ERROR

					int_l_flag = 1;

					

					memset(chr_l_buf, NULL, BUFFER_LEN);
					sprintf(	chr_l_buf, 
								"Not enough positions for trade : %s, %s", 
								l_sys_dl_deal_struct_h_in->h_dl_client, 
								l_sys_dl_deal_struct_h_in->h_indentity_no );

					CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
				}

	
				if (int_l_flag != 1)
				{
	
					l_flagrr = 0;
   	      	if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT_CHK",
                                             "RU_REG_CHK",
                                             &l_flagrr,
                                             l_debug_info_ptr ))
      	   	{
         	   	APL_GOBACK_FAIL
         		}

 		        	if (l_flagrr > 0)
      	   	{

						if (l_tinnonprop == 1)
                  {

 		  	            
							
                     if ( APL_FAILURE == CRUDBSafekLockFn( l_sys_dl_deal_struct_h_in->h_dl_client,
                                       l_sys_dl_deal_struct_h_in->h_instr_code,
                                       l_sys_dl_deal_struct_h_in->h_loccode,
                                       l_sys_dl_deal_struct_h_in->h_pos_stat,
                                       APL_NULL_STRING,
                                       APL_NULL_STRING,
                                       l_debug_info_ptr ) )

      		         {
								APL_GOBACK_FAIL
								if (int_l_chkflg == 2)
									continue;
								else break;
            		      
               		}

 		              
   		            
      		         
							l_currposn = 0.0;
                     
                     if ( APL_FAILURE == CRUDBAvailPosnFn( l_sys_dl_deal_struct_h_in->h_dl_client,
                                          l_sys_dl_deal_struct_h_in->h_instr_code,
                                          l_sys_dl_deal_struct_h_in->h_loccode,
                                          'Y',
                                          &l_currposn, APL_NULL_STRING,
                                          l_debug_info_ptr) )

 		    	          {
	
								APL_GOBACK_FAIL
								if (int_l_chkflg == 2)
									continue;
								else break;
   	   	            
      	   	      }
		
							if ( l_currposn < l_sys_dl_deal_struct_h_in->h_qty )
         		      {

 		               	  int_l_failval = FAILREAS_NOENUF_POSRRMM;
	
 			                EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
      		            SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
   	   		          FROM DUAL
            		      WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
               	                  WHERE a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
                  	               AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_h_in->h_indentity_no
                     	            AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                        	         AND   a.DEBIT_CLT   = :chr_l_failed );

 			                IS_ANY_ORA_ERROR

								int_l_failval = FAILREAS_NOENUF_MATCH_POSRRMM;

                        EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
                        SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
                        FROM DUAL
                        WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                                    WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                                    AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                    AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                    AND   a.DEBIT_CLT   = :chr_l_failed );

                          IS_ANY_ORA_ERROR

                         int_l_flag = 1;

							   if (l_rec_for_gr == 0 && ((!(strlen(l_sys_dl_deal_struct_ho->h_fail_cd))) ||
                  			(strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"20") == 0)))
               			{
                  			memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
 			                  strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);
         			         strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);
                  			strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"34");
  			                  strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
         			         strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
                  			strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
 			                  strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
         			         
   			               if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"34"))
            			      {
                    				 if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,p_intl_envdatastruct_h,l_debug_info_ptr ))
                     			{
                         			IS_ANY_ERROR_FATAL
                    				 }
                     				printf("\ncheck 2.: p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
                  			}

 			                 
         			      }	
	
 			                
	
 			                 memset(chr_l_buf, NULL, BUFFER_LEN);
   		   	            sprintf( chr_l_buf,
   		                  "Not enough RRMM positions for trade : %s, %s,%s,%s, %s, %f, %f ",
         		            l_sys_dl_deal_struct_h_in->h_dl_client,
            		         l_sys_dl_deal_struct_h_in->h_indentity_no ,l_sys_dl_deal_struct_h_in->h_instr_code, l_sys_dl_deal_struct_h_in->h_loccode, chr_l_srnregno, l_currposn,  l_sys_dl_deal_struct_h_in->h_qty);

 			                CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
							}
 	              }
					}
				}

				

				if (l_mt_core_sys_params_struct_h.vdp_ind[0] == 'N')
				{
					int_l_diff_dates = 0;
					if (APL_FAILURE == CO_Pro_DateComp(	p_dl_deal_amt_struct_h->h_confdate,
																l_sys_dl_deal_struct_h_in->h_setldt,
																&int_l_diff_dates,
																l_debug_info_ptr ))
					{
						APL_GOBACK_FAIL
					}	

					if (int_l_diff_dates > 0)
					{
						strcpy(chr_l_vdp_date, l_sys_dl_deal_struct_h_in->h_setldt);
					}
					else
					{
						strcpy(chr_l_vdp_date, p_dl_deal_amt_struct_h->h_confdate);
					}	

					if (APL_FAILURE == DL_Chk_VDPPos(	l_sys_dl_deal_struct_h_in->h_dl_client,
																l_sys_dl_deal_struct_h_in->h_instr_code,
																l_sys_dl_deal_struct_h_in->h_loccode,
																l_sys_dl_deal_struct_h_in->h_pos_stat,
																l_sys_dl_deal_struct_h_in->h_qty,
																chr_l_vdp_date,
																&int_l_tpflg,
																l_debug_info_ptr ))
					{	
						IS_ANY_ERROR_FATAL

						
	
						

						

						int_l_failval = FAILREAS_NOENUF_VDP;

						EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
						SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
						FROM DUAL
						WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
													WHERE	a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
													AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_h_in->h_indentity_no 
													AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
													AND	a.DEBIT_CLT	 = :chr_l_failed );

						IS_ANY_ORA_ERROR

						int_l_failval = FAILREAS_MATCH_NOENUF_VDP;

						EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
						SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
						FROM DUAL
						WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
													WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
													AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
													AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
													AND	a.DEBIT_CLT	 = :chr_l_failed );

						IS_ANY_ORA_ERROR

						int_l_flag = 1;

						

						memset(chr_l_buf, NULL, BUFFER_LEN);
						sprintf(	chr_l_buf, 
									"Not enough VDP for trade : %s, %s", 
									l_sys_dl_deal_struct_h_in->h_dl_client, 
									l_sys_dl_deal_struct_h_in->h_indentity_no );

						CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
					}
				}
				if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
					CO_FreeErrLst(l_debug_info_ptr);
				}
				

				

				if (int_l_flag == 1)
				{
					
					
					
					

						if ((l_rec_for_gr == 1 && (strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"15"))) || 
							(l_rec_for_gr == 0 && ((!(strlen(l_sys_dl_deal_struct_h_in->h_fail_cd))) ||
							(strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"20") == 0))))
					   {
					    memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
					    strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_h_in->h_dl_client);	
					    strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_h_in->h_indentity_no);	
					    strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"15");	
					    strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);	
					    strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);	
					    strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_h_in->h_access_stamp);
					    strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
						 if (strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"15"))
                   {
					    	if (APL_FAILURE == DL_Mod_DLFailReas(	l_dl_deal_fail_struct_hb,
						       											p_intl_envdatastruct_h,
									      								l_debug_info_ptr ))
					       {
						     IS_ANY_ERROR_FATAL
					       }
						 }
						 printf("\ncheck 1. : p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
                   l_i_settrdin = 1;
                  }
				if (int_l_chkflg == 2)
					continue;
				else break;
				}	
			}
			else
         {  
            
            
            if (l_i_settrdout == 1)
            {

               int_l_failval = FAILREAS_NOENUF_POS;

               EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               FROM DUAL
               WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                                 WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                                 AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                 AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                 AND   a.DEBIT_CLT   = :chr_l_failed );

              IS_ANY_ORA_ERROR
            }
            if (l_i_FCtoassign == 15)
				{


               
					if ((l_rec_for_gr == 1 && (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"15"))) ||
               (l_rec_for_gr == 0 && ((!(strlen(l_sys_dl_deal_struct_ho->h_fail_cd))) ||
               (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"20") == 0))))
               {
                  memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
                  strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);
                  strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);
                  strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"15");
                  strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
                    strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
                  
                  if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"15"))
                  {
                     if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,
                                                   p_intl_envdatastruct_h,
                                                   l_debug_info_ptr ))
                     {
                        IS_ANY_ERROR_FATAL
                     }
                  }
                  printf("\ncheck 3.: p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
               }
				if (int_l_chkflg == 2)
               continue;
				else break;
            }

            
            

            if (l_i_settrdout == 1)
            {
               break;
            }
			}
		}
	
			
			
			
         if ((chr_l_settledt_a>0 ) || (((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y")) == 0) && (l_ipo_val_sat == 1) ))
         {
            int_l_sysdt_flg=0;
            EXEC SQL select 1 into :int_l_sysdt_flg from pro_sys_date where to_date(:l_sys_dl_deal_struct_ho->h_setldt) <= SYS_DATE;

				memset(chr_l_new_failcode,APL_NULL_CHAR,3);
				strcpy(chr_l_new_failcode,"90");

				fprintf(p_logfile, "l_sysdt_flg is |%d|  ...\n",int_l_sysdt_flg) ;
				 
				if ((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && (l_ipo_val_sat == 1) ) 
				{
					fprintf(p_logfile, "IPO Selection: Both legs matched, now checking for SAT details ...\n") ;
					memset(chr_l_ipo_note1_outer,APL_NULL_CHAR,261);
					memset(chr_l_ipo_note1_inner,APL_NULL_CHAR,261);
					memset(chr_l_sat_line3_outer,APL_NULL_CHAR,261);
					memset(chr_l_sat_line4_outer,APL_NULL_CHAR,261);
					memset(chr_l_sat_line3_inner,APL_NULL_CHAR,261);
					memset(chr_l_sat_line4_inner,APL_NULL_CHAR,261);
					memset(chr_l_sat_client_outer,APL_NULL_CHAR,12);
					memset(chr_l_sat_client_inner,APL_NULL_CHAR,12);
					memset(chr_l_sat_code_outer,APL_NULL_CHAR,12);
					memset(chr_l_sat_code_inner,APL_NULL_CHAR,12);
					memset(chr_l_temp1,APL_NULL_CHAR,261);
					memset(chr_l_temp2,APL_NULL_CHAR,261);
	
					int_l_ipo_sat_matched = 0;
					i_ipo_note1_outer=0;
					i_ipo_note1_inner=0;	
					int_l_got_sat_details = 0;
					i_sat_account_outer = 0;
					i_sat_code_outer = 0;
					i_sat_account_inner = 0;
					i_sat_code_inner = 0;

					int_l_unmatched_reason_outer = 0;	
					if (APL_FAILURE == DL_Rtv_SATDET( l_sys_dl_deal_struct_ho, l_sys_dl_deal_struct_iq,p_logfile, chr_l_sat_client_outer, chr_l_sat_code_outer, &int_l_unmatched_reason_outer, l_debug_info_ptr))
					{
						CO_ProcMonitor(p_logfile, "Failure from CDBGetSATDetails", NULL, NULL);
						APL_GOBACK_FAIL
					}
					fprintf(p_logfile, "IPO Selection:SAT details for outer trade Account=|%s| Refno=|%s| SAT Account= |%s| SAT Code=|%s| Returned Reson=|%d| \n",l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no, chr_l_sat_client_outer,chr_l_sat_code_outer,int_l_unmatched_reason_outer);

					int_l_unmatched_reason_inner = 0;	
					if (APL_FAILURE == DL_Rtv_SATDET( l_sys_dl_deal_struct_h_in, l_sys_dl_deal_struct_i_in,p_logfile, chr_l_sat_client_inner, chr_l_sat_code_inner, &int_l_unmatched_reason_inner ,l_debug_info_ptr))
					{
						CO_ProcMonitor(p_logfile, "Failure from CDBGetSATDetails", NULL, NULL);
						APL_GOBACK_FAIL
					}
					fprintf(p_logfile, "IPO Selection:SAT details for inner trade Account=|%s| Refno=|%s| SAT Account= |%s| SAT Code=|%s| Returned Reson=|%d| \n",l_sys_dl_deal_struct_h_in->h_dl_client, l_sys_dl_deal_struct_h_in->h_indentity_no, chr_l_sat_client_inner,chr_l_sat_code_inner,int_l_unmatched_reason_inner);

					if ( ( int_l_unmatched_reason_outer == ABSENT_CLT_IND ) ||
						  ( int_l_unmatched_reason_outer == ABSENT_SATCD_IND ) ||
						  ( int_l_unmatched_reason_outer == ABSENT_CLT_SATCD_IND ) ||
						  ( int_l_unmatched_reason_inner == ABSENT_CLT_IND ) ||
						  ( int_l_unmatched_reason_inner == ABSENT_SATCD_IND ) ||
					     ( int_l_unmatched_reason_inner == ABSENT_CLT_SATCD_IND ) )
					{
						fprintf(p_logfile, "IPO Selection:All SAT details are not present for inner OR outer trade \n");
						int_l_sat_blank = 1;
					}
					else
					{
						int_l_sat_blank = 0;
					}

  				   if ( int_l_sat_blank == 0)
					{
						if ( (strcmp(chr_l_sat_client_outer,chr_l_sat_client_inner) == 0) &&
							  (strcmp(chr_l_sat_code_outer,chr_l_sat_code_inner) == 0) 
							)
						{
							int_l_ipo_sat_matched = IPO_SAT_MATCHED;
							strcpy(chr_l_new_failcode,"90"); 
						}
						else
						{
							fprintf(p_logfile,"IPO Selection: SAT Details not matched ... \n");
							int_l_ipo_sat_matched = IPO_SAT_UNMATCHED;
							int_l_unmatched_reason_outer = IPODEAL_SAT_DIFF;
							int_l_unmatched_reason_inner = IPODEAL_SAT_DIFF;
						}
					}

					if ( ( int_l_ipo_sat_matched == IPO_SAT_UNMATCHED) || (int_l_sat_blank == 1))
						{
               		int_l_failval = int_l_unmatched_reason_outer;
							fprintf(p_logfile,"\n Inserting record in clrproc for SAT details not matched |%d||%d||%d|... \n",int_l_ipo_sat_matched,int_l_unmatched_reason_outer,int_l_unmatched_reason_inner);
               	
							EXEC SQL DELETE FROM DL_LOCALREPPROC
							WHERE CLIENT=:l_sys_dl_deal_struct_ho->h_dl_client
							AND IDENTIY_NO=:l_sys_dl_deal_struct_ho->h_indentity_no
							AND CREDITCLIENT =:l_dl_deal_amt_struct_h
							AND DEBIT_CLT =:chr_l_failed;

							IS_ANY_ORA_ERROR;

							EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               		SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               		FROM DUAL
               		WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                     		            WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                           		      AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                 		AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                 		AND   a.DEBIT_CLT   = :chr_l_failed );

							IS_ANY_ORA_ERROR;

							EXEC SQL DELETE FROM DL_LOCALREPPROC
							WHERE CLIENT=:l_sys_dl_deal_struct_h_in->h_dl_client
							AND IDENTIY_NO=:l_sys_dl_deal_struct_h_in->h_indentity_no
							AND CREDITCLIENT =:l_dl_deal_amt_struct_h
							AND DEBIT_CLT =:chr_l_failed;

							IS_ANY_ORA_ERROR;

               		int_l_failval = int_l_unmatched_reason_inner;
               		EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               		SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               		FROM DUAL
               		WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                     		            WHERE a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
                           		      AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_h_in->h_indentity_no
                                 		AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                 		AND   a.DEBIT_CLT   = :chr_l_failed );

							IS_ANY_ORA_ERROR;

						}
					if ( int_l_ipo_sat_matched == IPO_SAT_MATCHED)
						{
							EXEC SQL DELETE FROM DL_LOCALREPPROC
							WHERE CLIENT=:l_sys_dl_deal_struct_ho->h_dl_client
							AND IDENTIY_NO=:l_sys_dl_deal_struct_ho->h_indentity_no
							AND CREDITCLIENT =:l_dl_deal_amt_struct_h
							AND DEBIT_CLT =:chr_l_failed;

							IS_ANY_ORA_ERROR;

               		int_l_failval = IPODEAL_SAT_MATCH;
							fprintf(p_logfile,"\n Inserting record in clrproc for SAT details matched |%d|... \n",int_l_ipo_sat_matched);
               		EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               		SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               		FROM DUAL
               		WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                     		            WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                           		      AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                 		AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                 		AND   a.DEBIT_CLT   = :chr_l_failed );

							IS_ANY_ORA_ERROR;

							EXEC SQL DELETE FROM DL_LOCALREPPROC
							WHERE CLIENT=:l_sys_dl_deal_struct_h_in->h_dl_client
							AND IDENTIY_NO=:l_sys_dl_deal_struct_h_in->h_indentity_no
							AND CREDITCLIENT =:l_dl_deal_amt_struct_h
							AND DEBIT_CLT =:chr_l_failed;

							IS_ANY_ORA_ERROR;

               		EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               		SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               		FROM DUAL
               		WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                     		            WHERE a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
                           		      AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_h_in->h_indentity_no
                                 		AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                 		AND   a.DEBIT_CLT   = :chr_l_failed );

							IS_ANY_ORA_ERROR;

						}
				}
				
            if ((int_l_sysdt_flg==1) || (l_hu_settledt==1))
               {
			
					
					if((int_l_chkflg == 1) && (l_rtgs_gr) && (strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") != 0))
					{	

 	           	if (strncmp(l_sys_dl_deal_struct_ho->h_countclt,l_sys_dl_deal_struct_h_in->h_dl_client,APL_CLIENT_LENGTH-1))
   	        	{
						memset(chr_l_cname,APL_NULL_CHAR,66);
						i_clnt_clr_name = 0;
	               EXEC SQL SELECT CLN_NAME into :chr_l_cname:i_clnt_clr_name
   	            FROM MT_CLIENT
      	         WHERE CLN_CODE = :l_sys_dl_deal_struct_h_in->h_dl_client;

 	              IS_ANY_ORA_ERROR

					fprintf(p_logfile,"Before Update Counterparty = %s, Counterparty description = %s for Account = %s & Ref No : %s\n",l_sys_dl_deal_struct_ho->h_countclt,l_sys_dl_deal_struct_ho->h_countcltnm,l_sys_dl_deal_struct_ho->h_dl_client,l_sys_dl_deal_struct_ho->h_indentity_no);

 	              EXEC SQL UPDATE DL_DEAL SET
   	                  CP_CLT =  :l_sys_dl_deal_struct_h_in->h_dl_client,
      	               CP_CLTNAME = :chr_l_cname
         	      WHERE CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
            	   AND IDENTIY_NO = :l_sys_dl_deal_struct_ho->h_indentity_no;

 	  	            IS_ANY_ORA_ERROR
					fprintf(p_logfile,"After Update Counterparty = %s, Counterparty description = %s for Account = %s & Ref No : %s\n",l_sys_dl_deal_struct_h_in->h_dl_client,chr_l_cname,l_sys_dl_deal_struct_ho->h_dl_client,l_sys_dl_deal_struct_ho->h_indentity_no);

                  memset(l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
                strcpy(l_dl_dealaudit_struct_h->h_dl_client, l_sys_dl_deal_struct_ho->h_dl_client);
                strcpy(l_dl_dealaudit_struct_h->h_indentity_no, l_sys_dl_deal_struct_ho->h_indentity_no);
                strcpy(l_dl_dealaudit_struct_h->h_trail_for, "T");
                strcpy(l_dl_dealaudit_struct_h->h_processdetail, "Trade - Modify (Counterparty)");
                strcpy(l_dl_dealaudit_struct_h->h_proc_usr, p_intl_envdatastruct_h->usr);
                  strcpy(l_dl_dealaudit_struct_h->h_subprocess, APL_NULL_STRING);
                strcpy(l_dl_dealaudit_struct_h->h_logdate, APL_NULL_STRING);
                strcpy(l_dl_dealaudit_struct_h->h_fail_cd, APL_NULL_STRING);
               l_dl_dealaudit_struct_h->h_qty = l_sys_dl_deal_struct_ho->h_qty;
               strcpy(l_dl_dealaudit_struct_h->h_dlfromord, l_sys_dl_deal_struct_ho->h_dlfromord);

               if (APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_h, l_debug_info_ptr))
               {
                APL_GOBACK_FAIL
               }
   		     }

        		    if (strncmp(l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_ho->h_dl_client,APL_CLIENT_LENGTH-1))
           		 {
						memset(chr_l_cname,APL_NULL_CHAR,66);
						i_clnt_clr_name = 0;
               	EXEC SQL SELECT CLN_NAME into :chr_l_cname:i_clnt_clr_name
              		 FROM MT_CLIENT
              		 WHERE CLN_CODE = :l_sys_dl_deal_struct_ho->h_dl_client;

               	IS_ANY_ORA_ERROR

					fprintf(p_logfile,"Before Update Counterparty = %s, Counterparty description = %s for Account = %s & Ref No : %s\n",l_sys_dl_deal_struct_h_in->h_countclt,l_sys_dl_deal_struct_h_in->h_countcltnm,l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_indentity_no);

	   	            EXEC SQL UPDATE DL_DEAL SET
   	                  CP_CLT =  :l_sys_dl_deal_struct_ho->h_dl_client,
               	      CP_CLTNAME = :chr_l_cname
         	      	WHERE CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
            	   	AND IDENTIY_NO = :l_sys_dl_deal_struct_h_in->h_indentity_no;

   		            IS_ANY_ORA_ERROR
					fprintf(p_logfile,"After Update Counterparty = %s, Counterparty description = %s for Account = %s & Ref No : %s\n",l_sys_dl_deal_struct_ho->h_dl_client,chr_l_cname,l_sys_dl_deal_struct_h_in->h_dl_client,l_sys_dl_deal_struct_h_in->h_indentity_no);

                memset(l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
                strcpy(l_dl_dealaudit_struct_h->h_dl_client, l_sys_dl_deal_struct_h_in->h_dl_client);
               strcpy(l_dl_dealaudit_struct_h->h_indentity_no, l_sys_dl_deal_struct_h_in->h_indentity_no);
               strcpy(l_dl_dealaudit_struct_h->h_trail_for, "T");
               strcpy(l_dl_dealaudit_struct_h->h_processdetail, "Trade - Modify (Counterparty)");
                strcpy(l_dl_dealaudit_struct_h->h_proc_usr, p_intl_envdatastruct_h->usr);
                strcpy(l_dl_dealaudit_struct_h->h_subprocess, APL_NULL_STRING);
                strcpy(l_dl_dealaudit_struct_h->h_logdate, APL_NULL_STRING);
                strcpy(l_dl_dealaudit_struct_h->h_fail_cd, APL_NULL_STRING);
                l_dl_dealaudit_struct_h->h_qty = l_sys_dl_deal_struct_h_in->h_qty;
                strcpy(l_dl_dealaudit_struct_h->h_dlfromord, l_sys_dl_deal_struct_h_in->h_dlfromord);

                if (APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_h, l_debug_info_ptr))
                {
                   APL_GOBACK_FAIL
                }

         	   }

				}		

						
						if ((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && 
							 ( (strlen(l_sys_dl_deal_struct_ho->h_fail_cd) != 0) && (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"30")!=0))&& 
							 (int_l_ipo_sat_matched != IPO_SAT_MATCHED))
						{
							fprintf(p_logfile,"IPO Selection: SAT Unmatched Outer trade Failcode already attached  ACC=|%s|, Refno=|%s|, Original Failcode=|%s| \n",
									   l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no,l_sys_dl_deal_struct_ho->h_fail_cd );	
						}
						else
						{
                  memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
                  strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);
                  strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);
						strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,chr_l_new_failcode);	
                  strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
                  strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
                  if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,chr_l_new_failcode))
                  {
                     if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,
                                                p_intl_envdatastruct_h,
                                                l_debug_info_ptr ))
                     {
                        IS_ANY_ERROR_FATAL
                     }

                 }
                 printf("\ncheck : p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
                  printf("\ncheck 1 : %s ",l_sys_dl_deal_struct_ho->h_dl_client);
                  printf("\ncheck 1 : %s ",l_sys_dl_deal_struct_ho->h_indentity_no);
                 
						}	
						
						if ((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) &&  
							 ( (strlen(l_sys_dl_deal_struct_h_in->h_fail_cd) != 0) && (strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"30")!=0))&& 
							 (int_l_ipo_sat_matched != IPO_SAT_MATCHED))
						{
							fprintf(p_logfile,"IPO Selection: SAT Unmatched Inner trade Failcode already attached  ACC=|%s|, Refno=|%s|, Original Failcode=|%s|\n",
									   l_sys_dl_deal_struct_h_in->h_dl_client, l_sys_dl_deal_struct_h_in->h_indentity_no ,l_sys_dl_deal_struct_h_in->h_fail_cd);	
						}
						else
						{
						memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
                  strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_h_in->h_dl_client);
                  strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_h_in->h_indentity_no);
                  strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,chr_l_new_failcode);
                  strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
                  strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_h_in->h_access_stamp);
                  strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
                  if (strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,chr_l_new_failcode))
                  {
                     if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,
                                                p_intl_envdatastruct_h,
                                                l_debug_info_ptr ))
                     {
                        IS_ANY_ERROR_FATAL
                     }

                 }
                 printf("\ncheck : p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
                  printf("\ncheck 2 : %s ",l_sys_dl_deal_struct_h_in->h_dl_client);
                  printf("\ncheck 2 : %s ",l_sys_dl_deal_struct_h_in->h_indentity_no);
						} 
               }
					fprintf(p_logfile, "Reached HERE !!!!!!!\\n") ;


                
               if((int_l_sysdt_flg==0) && (l_hu_settledt==0))
               {
						if ((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && (strlen(l_sys_dl_deal_struct_ho->h_fail_cd) != 0) && 
							 (int_l_ipo_sat_matched != IPO_SAT_MATCHED))
						{
							fprintf(p_logfile,"IPO Selection: SAT Unmatched Outer trade Failcode already attached  ACC=|%s|, Refno=|%s|, Original Failcode=|%s| \n",
									   l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_h_in->h_indentity_no ,l_sys_dl_deal_struct_ho->h_fail_cd);	
						}
						else
						{
                     memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
                     strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);
                     strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);
                     strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,chr_l_new_failcode);
                     strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
                     strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
                     strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
                     strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
                     if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,chr_l_new_failcode))
                     {
                        if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,
                                                p_intl_envdatastruct_h,
                                                l_debug_info_ptr ))
                        {
                           IS_ANY_ERROR_FATAL
                        }
                     }
                     int_l_failval = PREMATCHED_NOCONFIRM;

                     EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
                     SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
                     FROM DUAL
                     WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                                       WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                                       AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                       AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                       AND   a.DEBIT_CLT   = :chr_l_failed );

                     IS_ANY_ORA_ERROR
 
                     
                     printf("\ncheck : p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
							printf("\ncheck 0  : %s ",l_sys_dl_deal_struct_ho->h_dl_client);
                     printf("\ncheck 0  : %s ",l_sys_dl_deal_struct_ho->h_indentity_no);
						}
						if ((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && (strlen(l_sys_dl_deal_struct_ho->h_fail_cd) != 0) && 
							 (int_l_ipo_sat_matched != IPO_SAT_MATCHED))
						{
							fprintf(p_logfile,"IPO Selection: SAT Unmatched Inner trade Failcode already attached  ACC=|%s|, Refno=|%s|,Original Failcode=|%s| \n", 
									   l_sys_dl_deal_struct_h_in->h_dl_client, l_sys_dl_deal_struct_h_in->h_indentity_no ,l_sys_dl_deal_struct_h_in->h_fail_cd);	
						}
						else
						{
                     memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
                     strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_h_in->h_dl_client);
                      strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_h_in->h_indentity_no);
                     strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,chr_l_new_failcode);
                      strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
                     strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
                     strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_h_in->h_access_stamp);
                     strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
                     if (strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,chr_l_new_failcode))
                     {
                        if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,
                                                p_intl_envdatastruct_h,
                                                l_debug_info_ptr ))
                        {
                           IS_ANY_ERROR_FATAL
                        }
                     }
                     int_l_failval = PREMATCHED_NOCONFIRM;

                     EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
                     SELECT :l_sys_dl_deal_struct_h_in->h_dl_client, :l_sys_dl_deal_struct_h_in->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
                     FROM DUAL
                     WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                                       WHERE a.CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
                                       AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_h_in->h_indentity_no
                                       AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                       AND   a.DEBIT_CLT   = :chr_l_failed );

                     IS_ANY_ORA_ERROR
                     l_i_settrdin = 1;
                     printf("\ncheck : p_intl_envdatastruct_h->processtion : %s\n",p_intl_envdatastruct_h->processtion);
                     printf("\ncheck 0  : %s ",l_sys_dl_deal_struct_h_in->h_dl_client);
                     printf("\ncheck 0  : %s ",l_sys_dl_deal_struct_h_in->h_indentity_no);
							
							
                      
						}
					}
					
					
               if ( ((int_l_sysdt_flg==0) && (l_hu_settledt==0))||  
						  ((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && (l_ipo_no_autocnf != 0)))
               {
							break;
               }
					
         }
				

			if (l_i_CustNote == 1 ) 
         {
            if (strcmp(g_mt_commonsys_params_struct_h.nation_code, "HU") == 0)
            {
               memset(chr_l_custnoteupdateout, APL_NULL_CHAR, 71);
               strcpy(chr_l_custnoteupdateout, "SETTLE. DT: " );
               strcat(chr_l_custnoteupdateout, p_dl_deal_amt_struct_h->h_confdate);
               if ((l_sys_dl_deal_struct_ho->h_dealcd[0] == '3') || (l_sys_dl_deal_struct_ho->h_dealcd[0] == '4'))
               {
                   if ( (atof(l_sys_dl_deal_struct_ho->h_brkrno) > 0 ) &&
                              strcmp( l_sys_dl_deal_struct_ho->h_brkrno, APL_NULL_STRING) )
                   {
                       strcat(chr_l_custnoteupdateout, " MONEY SETTLE. DT : ");
                       strcat(chr_l_custnoteupdateout, l_sys_dl_deal_struct_ho->h_brkrno );
                   }
                   else
                   {
                       strcat(chr_l_custnoteupdateout, " ");
                       strcat(chr_l_custnoteupdateout, l_sys_dl_deal_struct_ho->h_brkrno);
                   }
               }
                memset(chr_l_custnoteupdatein, APL_NULL_CHAR, 71);
               strcpy(chr_l_custnoteupdatein, "SETTLE. DT: " );
               strcat(chr_l_custnoteupdatein, p_dl_deal_amt_struct_h->h_confdate);
               if ((l_sys_dl_deal_struct_h_in->h_dealcd[0] == '3') || (l_sys_dl_deal_struct_h_in->h_dealcd[0] == '4'))
               {
                   if ( (atof(l_sys_dl_deal_struct_h_in->h_brkrno) > 0 ) &&
                              strcmp( l_sys_dl_deal_struct_h_in->h_brkrno, APL_NULL_STRING) )
                   {
                       strcat(chr_l_custnoteupdatein, " MONEY SETTLE. DT : ");
                       strcat(chr_l_custnoteupdatein, l_sys_dl_deal_struct_h_in->h_brkrno );
                   }
                   else
                   {
                       strcat(chr_l_custnoteupdatein, " ");
                       strcat(chr_l_custnoteupdatein, l_sys_dl_deal_struct_h_in->h_brkrno);
                   }
               }
            } 
				else
            {
               strcpy(chr_l_custnoteupdateout,l_sys_dl_deal_struct_ho->h_custinfo);
               strcpy(chr_l_custnoteupdatein,l_sys_dl_deal_struct_h_in->h_custinfo);
            }
            strcpy(chr_l_failcodeupdateout ,"90");
            strcpy(chr_l_subfailcodeupdateout ,"0");
            strcpy(chr_l_failcodeupdatein,"90");
            strcpy(chr_l_subfailcodeupdatein,"0");

				
				if (chr_l_settledt_a == 0)
				{
					if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"90"))
            	{
						 memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
            	    strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);
               	 strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);
 	               strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"90");
   	             strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
      	          strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
         	       strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
            	    strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
  		              if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,
                                                p_intl_envdatastruct_h,
                                                l_debug_info_ptr ))
      	          {
         	           IS_ANY_ERROR_FATAL
            	    }
            	}	
					if (strcmp(l_sys_dl_deal_struct_h_in->h_fail_cd,"90"))
					{
						memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
						strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_h_in->h_dl_client);
   	             strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_h_in->h_indentity_no);
      	          strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"90");
         	       strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
            	    strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
   	             strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_h_in->h_access_stamp);
      	          strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
         	       if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,
                                                p_intl_envdatastruct_h,
                                                l_debug_info_ptr ))
            	    {
               	     IS_ANY_ERROR_FATAL
                	}	
            	}	
				}
         }
         else
         {
             memset(chr_l_custnoteupdateout, APL_NULL_CHAR, 71); 
             memset(chr_l_custnoteupdatein,APL_NULL_CHAR, 71); 
             memset(chr_l_failcodeupdateout,APL_NULL_CHAR, 3); 
             memset(chr_l_failcodeupdatein,APL_NULL_CHAR, 3); 
             memset(chr_l_subfailcodeupdateout,APL_NULL_CHAR, 3); 
             memset(chr_l_subfailcodeupdatein,APL_NULL_CHAR, 3); 
            strcpy(chr_l_custnoteupdateout, l_sys_dl_deal_struct_ho->h_custinfo);
            strcpy(chr_l_custnoteupdatein, l_sys_dl_deal_struct_h_in->h_custinfo);
         }

	
			

			

			fprintf(p_logfile, "Reached HERE !!!!!!!\\n") ;
			strcpy(chr_l_trd_status, STATUS_CONF);

			if (l_sys_dl_deal_struct_iq->i_checker_dt == -1)
			{
            
            if (APL_FAILURE == CO_Chk_CntryEnabled(  "AUTO_MATCH",
                                          "NO_INT_TRANSFER",
                                          &int_l_flag,
                                          l_debug_info_ptr))
            {
               APL_GOBACK_FAIL
            }
				
            if (int_l_flag)
            {
               EXEC SQL UPDATE DL_DEAL
                SET   VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
                  PARTIAL_IND_B = 'N',
                  AMT_DIFFER = ABS(:l_sys_dl_deal_struct_ho->h_amt-:l_sys_dl_deal_struct_h_in->h_amt),
                  COMPREFNO = :l_sys_dl_deal_struct_h_in->h_indentity_no,
                  failreason_cd = :chr_l_failcodeupdateout,
                  sub_fail_cd =  :chr_l_subfailcodeupdateout,
                  DATEOF_MARKFAIL = NULL,
                  checker = :p_intl_envdatastruct_h->usr,
                  checker_dt = :chr_p_now,
                  DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdateout,
                  access_stamp = :chr_p_now
               WHERE rowid = :chr_l_rowid_outer;
            }
            else
            {
               EXEC SQL UPDATE DL_DEAL
               SET   VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
                  dl_class = '26',
                  PARTIAL_IND_B = 'N',
                  AMT_DIFFER = ABS(:l_sys_dl_deal_struct_ho->h_amt-:l_sys_dl_deal_struct_h_in->h_amt),
                  COMPREFNO = :l_sys_dl_deal_struct_h_in->h_indentity_no,
                  failreason_cd = :chr_l_failcodeupdateout,
                  sub_fail_cd =  :chr_l_subfailcodeupdateout,
                  DATEOF_MARKFAIL = NULL,
                  checker = :p_intl_envdatastruct_h->usr,
                  checker_dt = :chr_p_now,
                  DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdateout,
                  access_stamp = :chr_p_now
               WHERE rowid = :chr_l_rowid_outer;
            }
			}
			else
			{
            if (APL_FAILURE == CO_Chk_CntryEnabled(  "AUTO_MATCH",
                                          "NO_INT_TRANSFER",
                                          &int_l_flag,
                                          l_debug_info_ptr))
            {
               APL_GOBACK_FAIL
            }
            if (int_l_flag)
            {
                EXEC SQL UPDATE DL_DEAL
         	      SET   VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
                  PARTIAL_IND_B = 'N',
                  AMT_DIFFER = ABS(:l_sys_dl_deal_struct_ho->h_amt-:l_sys_dl_deal_struct_h_in->h_amt),
                  COMPREFNO = :l_sys_dl_deal_struct_h_in->h_indentity_no,
                  failreason_cd = :chr_l_failcodeupdateout,
                  sub_fail_cd =  :chr_l_subfailcodeupdateout,
                  DATEOF_MARKFAIL = NULL,
                  DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdateout,
                  access_stamp = :chr_p_now
               WHERE rowid = :chr_l_rowid_outer;
            }
            else
            {
				
					EXEC SQL UPDATE DL_DEAL 
					SET	VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
						dl_class = '26',
						PARTIAL_IND_B = 'N',
						AMT_DIFFER = ABS(:l_sys_dl_deal_struct_ho->h_amt-:l_sys_dl_deal_struct_h_in->h_amt),
						COMPREFNO = :l_sys_dl_deal_struct_h_in->h_indentity_no,
						failreason_cd = :chr_l_failcodeupdateout,
						sub_fail_cd	=	:chr_l_subfailcodeupdateout,
						DATEOF_MARKFAIL = NULL,
						DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdateout,
						access_stamp = :chr_p_now
					WHERE rowid = :chr_l_rowid_outer;
				}

			}

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																l_sys_dl_deal_struct_ho->h_dl_client,			
																l_sys_dl_deal_struct_ho->h_indentity_no,			
																APL_NULL_STRING);		

			if (l_sys_dl_deal_struct_i_in->i_checker_dt == -1)
			{
           if (APL_FAILURE == CO_Chk_CntryEnabled(  "AUTO_MATCH",
                                         "NO_INT_TRANSFER",
                                         &int_l_flag,
                                         l_debug_info_ptr))
           {
              APL_GOBACK_FAIL
           }
            if (int_l_flag)
            {
               EXEC SQL UPDATE DL_DEAL
               SET   VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
                  PARTIAL_IND_B = 'N',
                  AMT_DIFFER = ABS(:l_sys_dl_deal_struct_h_in->h_amt-:l_sys_dl_deal_struct_ho->h_amt),
                  COMPREFNO = :l_sys_dl_deal_struct_ho->h_indentity_no,
                  failreason_cd = :chr_l_failcodeupdatein,
                  sub_fail_cd =  :chr_l_subfailcodeupdatein,
                  DATEOF_MARKFAIL = NULL,
                  checker = :p_intl_envdatastruct_h->usr,
                  checker_dt = :chr_p_now,
                  DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdatein,
                  access_stamp = :chr_p_now
               WHERE rowid = :chr_l_rowid_inner;
            }
            else
            {
               EXEC SQL UPDATE DL_DEAL
               SET   VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
                  dl_class = '26',
                  PARTIAL_IND_B = 'N',
                  AMT_DIFFER = ABS(:l_sys_dl_deal_struct_h_in->h_amt-:l_sys_dl_deal_struct_ho->h_amt),
                  COMPREFNO = :l_sys_dl_deal_struct_ho->h_indentity_no,
                  failreason_cd = :chr_l_failcodeupdatein,
                  sub_fail_cd =  :chr_l_subfailcodeupdatein,
                  DATEOF_MARKFAIL = NULL,
                  checker = :p_intl_envdatastruct_h->usr,
                  checker_dt = :chr_p_now,
                  DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdatein,
                  access_stamp = :chr_p_now
               WHERE rowid = :chr_l_rowid_inner;
            }					
			}
			else
			{
            if (APL_FAILURE == CO_Chk_CntryEnabled(  "AUTO_MATCH",
                                          "NO_INT_TRANSFER",
                                          &int_l_flag,
                                          l_debug_info_ptr))
            {
               APL_GOBACK_FAIL
            }
            if (int_l_flag)
            {
               EXEC SQL UPDATE DL_DEAL
               SET   VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
                  PARTIAL_IND_B = 'N',
                  AMT_DIFFER = ABS(:l_sys_dl_deal_struct_h_in->h_amt-:l_sys_dl_deal_struct_ho->h_amt),
                  COMPREFNO = :l_sys_dl_deal_struct_ho->h_indentity_no,
                  failreason_cd = :chr_l_failcodeupdatein,
                  sub_fail_cd =  :chr_l_subfailcodeupdatein,
                  DATEOF_MARKFAIL = NULL,
                  DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdatein,
                  access_stamp = :chr_p_now
               WHERE rowid = :chr_l_rowid_inner;
            }
            else
            {
               EXEC SQL UPDATE DL_DEAL
               SET   VAL_FDT = :p_dl_deal_amt_struct_h->h_confdate,
                  dl_class = '26',
                  PARTIAL_IND_B = 'N',
                  AMT_DIFFER = ABS(:l_sys_dl_deal_struct_h_in->h_amt-:l_sys_dl_deal_struct_ho->h_amt),
                  COMPREFNO = :l_sys_dl_deal_struct_ho->h_indentity_no,
                  failreason_cd = :chr_l_failcodeupdatein,
                  sub_fail_cd =  :chr_l_subfailcodeupdatein,
                  DATEOF_MARKFAIL = NULL,
                  DEAL_STAT = :chr_l_trd_status,
						client_note = :chr_l_custnoteupdatein,
                  access_stamp = :chr_p_now
               WHERE rowid = :chr_l_rowid_inner;
				}
			}
		
			

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																l_sys_dl_deal_struct_h_in->h_dl_client,			
																l_sys_dl_deal_struct_h_in->h_indentity_no,			
																APL_NULL_STRING);		

			
			int_l_flag = 0;
         if (APL_FAILURE == CO_Chk_CntryEnabled(  "AUTO_MATCH","VERWITH_UPDATE", &int_l_flag, l_debug_info_ptr))
			APL_GOBACK_FAIL

			if(int_l_flag) 
			{
				EXEC SQL UPDATE DL_DEAL SET VERFIED_WITH='EVI' WHERE rowid = :chr_l_rowid_outer
				and dl_class = '26';
				IS_ANY_ORA_ERROR

				EXEC SQL UPDATE DL_DEAL SET VERFIED_WITH='EVI' WHERE rowid = :chr_l_rowid_inner
				and dl_class = '26';
				IS_ANY_ORA_ERROR
			}

			

			
			
				
   		int_l_ccseligfail_flg = 0;
   		if (APL_FAILURE == DL_Chk_DLFailCd(chr_l_failcodeupdateout,&int_l_ccseligfail_flg,l_debug_info_ptr))
   		{
      		APL_GOBACK_FAIL
   		}
   		if (int_l_ccseligfail_flg)
   		{
      		if ( APL_FAILURE ==  DL_Mod_CCSPendDL(l_sys_dl_deal_struct_ho->h_dl_client,
                                             l_sys_dl_deal_struct_ho->h_indentity_no,
                                             MS_CCS_FC,
                                             chr_l_failcodeupdateout,
															chr_l_subfailcodeupdateout,
                                             chr_l_custnoteupdateout,
                                             &l_debug_info_ptr) )
      		{
         		APL_GOBACK_FAIL
      		}
   		}

			
	
         if ( APL_FAILURE ==  DL_Mod_CCSPendDL(l_sys_dl_deal_struct_ho->h_dl_client,
                                                   l_sys_dl_deal_struct_ho->h_indentity_no,
                                                   MS_CCS_RL,
                                                   APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                                                   &l_debug_info_ptr) )
         {
             APL_GOBACK_FAIL
         }
			
			
			
				
   		int_l_ccseligfail_flg = 0;
   		if (APL_FAILURE == DL_Chk_DLFailCd(chr_l_failcodeupdatein,&int_l_ccseligfail_flg,l_debug_info_ptr))
   		{
      		APL_GOBACK_FAIL
   		}
   		if (int_l_ccseligfail_flg)
   		{
      		if ( APL_FAILURE ==  DL_Mod_CCSPendDL(l_sys_dl_deal_struct_h_in->h_dl_client,
                                             l_sys_dl_deal_struct_h_in->h_indentity_no,
                                             MS_CCS_FC,
                                             chr_l_failcodeupdatein,
															chr_l_subfailcodeupdatein,
                                             chr_l_custnoteupdatein,
                                             &l_debug_info_ptr) )
      		{
         		APL_GOBACK_FAIL
      		}
   		}

			
	
         if ( APL_FAILURE ==  DL_Mod_CCSPendDL(l_sys_dl_deal_struct_h_in->h_dl_client,
                                                   l_sys_dl_deal_struct_h_in->h_indentity_no,
                                                   MS_CCS_RL,
                                                   APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING,
                                                   &l_debug_info_ptr) )
         {
             APL_GOBACK_FAIL
         }
			
			

			EXEC SQL DELETE DL_LOCALREPPROC
			WHERE	CREDITCLIENT = (:l_dl_deal_amt_struct_h)
			AND	DEBIT_CLT = (:chr_l_failed)
			AND 	((CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client AND IDENTIY_NO = :l_sys_dl_deal_struct_ho->h_indentity_no)
			OR 	 (CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client AND IDENTIY_NO = :l_sys_dl_deal_struct_h_in->h_indentity_no)) ;

			IS_ANY_ORA_ERROR
		
			
          //fprintf(p_logfile, "l_chkflg is %s", int_l_chkflg); Changes done for AIX Migration
          fprintf(p_logfile, "l_chkflg is %d", int_l_chkflg);
			if(int_l_chkflg == 1)
			{
				if (l_rtgs_gr1)
				{

				EXEC SQL SELECT RCVDLVLINKNO.NEXTVAL INTO :int_l_rcvdlvlinkno 
				FROM DUAL;

				IS_ANY_ORA_ERROR
          fprintf(p_logfile, "l_rcvdlvlinkno is %d ", int_l_rcvdlvlinkno);

						EXEC SQL UPDATE DL_DEAL SET COMPREFNO = :int_l_rcvdlvlinkno
						WHERE CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
						and IDENTIY_NO = :l_sys_dl_deal_struct_ho->h_indentity_no;

						IS_ANY_ORA_ERROR

						EXEC SQL UPDATE DL_DEAL SET COMPREFNO = :int_l_rcvdlvlinkno
						WHERE CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
						and IDENTIY_NO = :l_sys_dl_deal_struct_h_in->h_indentity_no;

						IS_ANY_ORA_ERROR
				}

			}
      
		
		
		if	((strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0) && (l_ipo_no_autocnf != 0)) 
		{
			
			fprintf(p_logfile, "IPO Selection:Skipping Position Updates \n");
		}
		else
		{
			if (APL_FAILURE == DL_Mod_Posn(	l_sys_dl_deal_struct_ho->h_dl_client,
															l_sys_dl_deal_struct_ho->h_instr_code,
															l_sys_dl_deal_struct_ho->h_loccode,
															l_sys_dl_deal_struct_ho->h_pos_stat,
															'U',
															l_sys_dl_deal_struct_ho->h_dealcd[0],
															&l_sys_dl_deal_struct_ho->h_qty,
															'D',"FREE",
															l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}
			if (APL_FAILURE == DL_Mod_Posn(	l_sys_dl_deal_struct_ho->h_dl_client,
															l_sys_dl_deal_struct_ho->h_instr_code,
															l_sys_dl_deal_struct_ho->h_loccode,
															l_sys_dl_deal_struct_ho->h_pos_stat,
															'C',
															l_sys_dl_deal_struct_ho->h_dealcd[0],
															&l_sys_dl_deal_struct_ho->h_qty,
															'I',"FREE",
															l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}
			if (APL_FAILURE == DL_Mod_Posn(	l_sys_dl_deal_struct_h_in->h_dl_client,
															l_sys_dl_deal_struct_h_in->h_instr_code,
															l_sys_dl_deal_struct_h_in->h_loccode,
															l_sys_dl_deal_struct_h_in->h_pos_stat,
															'U',
															l_sys_dl_deal_struct_h_in->h_dealcd[0],
															&l_sys_dl_deal_struct_h_in->h_qty,
															'D',"FREE",
															l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}
			if (APL_FAILURE == DL_Mod_Posn(	l_sys_dl_deal_struct_h_in->h_dl_client,
															l_sys_dl_deal_struct_h_in->h_instr_code,
															l_sys_dl_deal_struct_h_in->h_loccode,
															l_sys_dl_deal_struct_h_in->h_pos_stat,
															'C',
															l_sys_dl_deal_struct_h_in->h_dealcd[0],
															&l_sys_dl_deal_struct_h_in->h_qty,
															'I',"FREE",
															l_debug_info_ptr ))
			{
				APL_GOBACK_FAIL
			}
		}
		

			
			
			int_l_flag = 0;

         if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_PMT_CHK",
                                             "RU_REG_CHK",
                                             &int_l_flag,
                                             l_debug_info_ptr ))
         {
            APL_GOBACK_FAIL
         }
			
         if (int_l_flag > 0)
         {

				if (l_toutnonprop == 1)
            {
               
               if ( VAL_DELIVER_DEAL(l_sys_dl_deal_struct_ho->h_dealcd[0]))
               {
                  
                  l_rquantity = 0.0;
                  l_tsrnquantity = 0.0;
                  l_takeupquantity = 0.0;
                  memset(chr_l_tsrnregno, NULL, 21);

                  EXEC SQL DECLARE srnsafek1_cur CURSOR FOR
                  SELECT ST_REG_NO,NVL( ( SAFEKEEP_POS + VAL_REC - VAL_DEL), 0 ) AS RUSFK
                  FROM DL_RUSAFEK
                  WHERE CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                  AND INSTR_CODE = :l_sys_dl_deal_struct_ho->h_instr_code
                  AND LOCATION_CD = :l_sys_dl_deal_struct_ho->h_loccode
                  AND (SAFEKEEP_POS+VAL_REC-VAL_DEL) > 0
                   ORDER BY RUSFK DESC
                  FOR UPDATE OF VAL_REC, VAL_DEL;

                   EXEC SQL OPEN srnsafek1_cur ;

                  IS_ANY_ORA_ERROR;
                  l_rquantity = l_sys_dl_deal_struct_ho->h_qty ;
                  for(;;)
                  {
                    memset(chr_l_tsrnregno, NULL, 21);
                    l_tsrnquantity = 0.0;

                     EXEC SQL FETCH srnsafek1_cur INTO :chr_l_tsrnregno,
                                                     :l_tsrnquantity;

                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf, "stregno soon after fetch is :%s:", chr_l_tsrnregno);
                     CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);


                    if (l_tsrnquantity <= l_rquantity )
                     {
                        l_rquantity = l_rquantity - l_tsrnquantity;
                        l_takeupquantity = l_tsrnquantity;
                     }
                     else
                     {
                        l_takeupquantity = l_rquantity ;
                        l_rquantity = 0.0;
                     }
                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf,"Entered into contrycond check and it is a success");
                     CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);

                     memset(l_deal_ru_struct_ha,NULL,sizeof(DEAL_RU_STRUCT_H));
                     strcpy(l_deal_ru_struct_ha->h_dl_client, l_sys_dl_deal_struct_ho->h_dl_client);
                     strcpy(l_deal_ru_struct_ha->h_indentity_no, l_sys_dl_deal_struct_ho->h_indentity_no);
                     strcpy(l_deal_ru_struct_ha->h_instr_code, l_sys_dl_deal_struct_ho->h_instr_code);
                     strcpy(l_deal_ru_struct_ha->h_loccode, l_sys_dl_deal_struct_ho->h_loccode);
                     
                     strcpy(l_deal_ru_struct_ha->h_st_reg_no, chr_l_tsrnregno);
                     l_deal_ru_struct_ha->h_qty = l_takeupquantity;
                     l_deal_ru_struct_ha->h_amt = ((l_sys_dl_deal_struct_ho->h_amt*l_takeupquantity)/l_sys_dl_deal_struct_ho->h_qty);
                     strcpy(l_deal_ru_struct_ha->h_dealcd, l_sys_dl_deal_struct_ho->h_dealcd);
                     strcpy(l_deal_ru_struct_ha->h_deal_dt, l_sys_dl_deal_struct_ho->h_dlt);
                     strcpy(l_deal_ru_struct_ha->h_instrdate, l_sys_dl_deal_struct_ho->h_instrdate);

                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf,"qty is :%f", l_sys_dl_deal_struct_ho->h_qty);
                     CO_ProcMonitor(APL_OUT_FILE,chr_l_buf, NULL, NULL);

                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf,"amount is :%f", l_sys_dl_deal_struct_ho->h_amt);
                     CO_ProcMonitor(APL_OUT_FILE,chr_l_buf, NULL, NULL);


                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf,"After assigning the Account values is :%s: ", l_deal_ru_struct_ha->h_dl_client);
                     CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);

                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf, "Refno is :%s:", l_deal_ru_struct_ha->h_indentity_no);
                     CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf, "stregno is :%s:", l_deal_ru_struct_ha->h_st_reg_no);
                     CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);

                     EXEC SQL INSERT INTO DL_RUDEAL VALUES (:l_deal_ru_struct_ha);

                     IS_ANY_ORA_ERROR;
                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf,"Sqlca.sqlcode is :%d:",sqlca.sqlcode);
                     CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);

                     int_l_flag = 0;

                     IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)



		
				   
         	 	 
                    if ( APL_FAILURE == CRUDBUpdtPosnFn(  l_sys_dl_deal_struct_ho->h_dl_client,
                                          l_sys_dl_deal_struct_ho->h_instr_code,
                                          l_sys_dl_deal_struct_ho->h_loccode,
                                          l_sys_dl_deal_struct_ho->h_pos_stat,
                                          'C',
                                          l_sys_dl_deal_struct_ho->h_dealcd[0],
                                          &l_takeupquantity,
                                          'I', chr_l_tsrnregno,
                                          l_debug_info_ptr ) )
           				{
             				APL_GOBACK_FAIL
          	   		}
	                     if (APL_FAILURE == CR_Proc_InstrQtyRoundToStr(  l_deal_ru_struct_ha->h_qty,
                                                QUANTITY_LEN,
                                                l_deal_ru_struct_ha->h_instr_code,
                                                chr_l_rep_rrmmoutqty,
                                                l_debug_info_ptr ))
                     {
                        APL_GOBACK_FAIL
                     }

                     CO_ToStr( l_deal_ru_struct_ha->h_amt,
                     AMOUNT_LEN_B,
                     int_l_amt_declen,
                     chr_l_rep_rrmmoutamt);


                     fprintf( p_fp_match,
                        "%-11s %-17s %-21s %-9s%s %s %-3s\n",
                        l_deal_ru_struct_ha->h_dl_client,
                        l_deal_ru_struct_ha->h_indentity_no,
                        chr_l_tsrnregno,
                        l_deal_ru_struct_ha->h_instr_code,
                        chr_l_rep_rrmmoutqty,
                        chr_l_rep_rrmmoutamt,
                        l_deal_ru_struct_ha->h_dealcd );

                     (*p_no_match)++;
                     
                     memset(l_deal_ru_struct_ha,NULL,sizeof(DEAL_RU_STRUCT_H));
                     strcpy(l_deal_ru_struct_ha->h_dl_client, l_sys_dl_deal_struct_h_in->h_dl_client);
                     strcpy(l_deal_ru_struct_ha->h_indentity_no, l_sys_dl_deal_struct_h_in->h_indentity_no);
                     strcpy(l_deal_ru_struct_ha->h_instr_code, l_sys_dl_deal_struct_h_in->h_instr_code);
                     strcpy(l_deal_ru_struct_ha->h_loccode, l_sys_dl_deal_struct_h_in->h_loccode);
                     strcpy(l_deal_ru_struct_ha->h_st_reg_no, chr_l_tsrnregno);
                     memset(chr_l_buf, NULL, BUFFER_LEN);
                     sprintf( chr_l_buf, "stregno in receive after is :%s:", l_deal_ru_struct_ha->h_st_reg_no);
                     CO_ProcMonitor(p_logfile, chr_l_buf, NULL, p_intl_envdatastruct_h);
                     l_deal_ru_struct_ha->h_qty = l_takeupquantity;
                     l_deal_ru_struct_ha->h_amt = ((l_sys_dl_deal_struct_ho->h_amt*l_takeupquantity)/l_sys_dl_deal_struct_ho->h_qty);
                     strcpy(l_deal_ru_struct_ha->h_dealcd, l_sys_dl_deal_struct_h_in->h_dealcd);
                     strcpy(l_deal_ru_struct_ha->h_deal_dt, l_sys_dl_deal_struct_h_in->h_dlt);
                     strcpy(l_deal_ru_struct_ha->h_instrdate, l_sys_dl_deal_struct_h_in->h_instrdate);

                    EXEC SQL INSERT INTO DL_RUDEAL VALUES (:l_deal_ru_struct_ha);

                     IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

                  
                    if ( APL_FAILURE == CRUDBUpdtPosnFn(  l_sys_dl_deal_struct_h_in->h_dl_client,
                                            l_sys_dl_deal_struct_h_in->h_instr_code,
                                          l_sys_dl_deal_struct_h_in->h_loccode,
                                          l_sys_dl_deal_struct_h_in->h_pos_stat,
                                          'C',
                                           l_sys_dl_deal_struct_h_in->h_dealcd[0],
                                          &l_sys_dl_deal_struct_h_in->h_qty,
                                          'I',l_deal_ru_struct_ha->h_st_reg_no,
                                          l_debug_info_ptr ) )
                     {
                        APL_GOBACK_FAIL
                     }
                     fprintf( p_fp_match,
                        "%-11s %-17s %-21s %-9s%s %s %-3s\n",
                        l_deal_ru_struct_ha->h_dl_client,
                        l_deal_ru_struct_ha->h_indentity_no,
                        l_deal_ru_struct_ha->h_st_reg_no,
                        l_deal_ru_struct_ha->h_instr_code,
                        chr_l_rep_rrmmoutqty,
                        chr_l_rep_rrmmoutamt,
                        l_deal_ru_struct_ha->h_dealcd );

                     (*p_no_match)++;


                     if (l_rquantity <= 0 )
                      break;
                  }
                   EXEC SQL CLOSE srnsafek1_cur;
               }
	
				}

				if (l_tinnonprop == 1)
            {		

		               if ( VAL_DELIVER_DEAL(l_sys_dl_deal_struct_h_in->h_dealcd[0]) )
               {
                  
                  l_rquantity = 0.0;
                  l_tsrnquantity = 0.0;
                  l_takeupquantity = 0.0;
                  memset(chr_l_tsrnregno, NULL, 21);

                  EXEC SQL DECLARE srnsafek2_cur CURSOR FOR
                  SELECT ST_REG_NO,NVL( ( SAFEKEEP_POS + VAL_REC - VAL_DEL), 0 ) AS RUSFK
                 FROM DL_RUSAFEK
                WHERE CLIENT = :l_sys_dl_deal_struct_h_in->h_dl_client
                  AND INSTR_CODE = :l_sys_dl_deal_struct_h_in->h_instr_code
                  AND LOCATION_CD = :l_sys_dl_deal_struct_h_in->h_loccode
                  AND (SAFEKEEP_POS+VAL_REC-VAL_DEL) > 0
                ORDER BY RUSFK
                  FOR UPDATE OF VAL_REC, VAL_DEL;

                EXEC SQL OPEN srnsafek2_cur ;

                  IS_ANY_ORA_ERROR;
                  l_rquantity = l_sys_dl_deal_struct_h_in->h_qty ;
                  for(;;)
                  {
                     memset(chr_l_tsrnregno, NULL, 21);
                     l_tsrnquantity = 0.0;

                    EXEC SQL FETCH srnsafek2_cur INTO :chr_l_tsrnregno,
                                                     :l_tsrnquantity;
                    if (l_tsrnquantity <= l_rquantity )
                     {
                           l_rquantity = l_rquantity - l_tsrnquantity;
                        l_takeupquantity = l_tsrnquantity;
                     }
                   else
                     {
                        l_takeupquantity = l_rquantity ;
                        l_rquantity = 0.0;
                     }

                  memset(l_deal_ru_struct_ha,NULL,sizeof(DEAL_RU_STRUCT_H));
                  strcpy(l_deal_ru_struct_ha->h_dl_client, l_sys_dl_deal_struct_h_in->h_dl_client);
                  strcpy(l_deal_ru_struct_ha->h_indentity_no, l_sys_dl_deal_struct_h_in->h_indentity_no);
                   strcpy(l_deal_ru_struct_ha->h_instr_code, l_sys_dl_deal_struct_h_in->h_instr_code);
                  strcpy(l_deal_ru_struct_ha->h_loccode, l_sys_dl_deal_struct_h_in->h_loccode);
                  
                  strcpy(l_deal_ru_struct_ha->h_st_reg_no, chr_l_tsrnregno);
               l_deal_ru_struct_ha->h_qty = l_takeupquantity;
               l_deal_ru_struct_ha->h_amt = ((l_sys_dl_deal_struct_h_in->h_amt*l_takeupquantity)/l_sys_dl_deal_struct_h_in->h_qty);
               strcpy(l_deal_ru_struct_ha->h_dealcd, l_sys_dl_deal_struct_h_in->h_dealcd);
               strcpy(l_deal_ru_struct_ha->h_deal_dt, l_sys_dl_deal_struct_h_in->h_dlt);
               strcpy(l_deal_ru_struct_ha->h_instrdate, l_sys_dl_deal_struct_h_in->h_instrdate);

              EXEC SQL INSERT INTO DL_RUDEAL VALUES (:l_deal_ru_struct_ha);

               IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
	
					

					
  				
              if ( APL_FAILURE == CRUDBUpdtPosnFn(  l_sys_dl_deal_struct_h_in->h_dl_client,
                                          l_sys_dl_deal_struct_h_in->h_instr_code,
                                          l_sys_dl_deal_struct_h_in->h_loccode,
                                          l_sys_dl_deal_struct_h_in->h_pos_stat,
                                          'C',
                                          l_sys_dl_deal_struct_h_in->h_dealcd[0],
                                          &l_takeupquantity,
                                          'I',chr_l_tsrnregno,
                                          l_debug_info_ptr ) )
           		{
             		APL_GOBACK_FAIL
           		}
               if (APL_FAILURE == CR_Proc_InstrQtyRoundToStr(  l_deal_ru_struct_ha->h_qty,
                                                QUANTITY_LEN,
                                                l_deal_ru_struct_ha->h_instr_code,
                                                chr_l_rep_rrmminqty,
                                                l_debug_info_ptr ))
                     {
                        APL_GOBACK_FAIL
                     }

                     CO_ToStr( l_deal_ru_struct_ha->h_amt,
                     AMOUNT_LEN_B,
                     int_l_amt_declen,
                     chr_l_rep_rrmminamt);

               fprintf( p_fp_match,
                        "%-11s %-17s %-21s %-9s%s %s %-3s\n",
                        l_deal_ru_struct_ha->h_dl_client,
                        l_deal_ru_struct_ha->h_indentity_no,
                        chr_l_tsrnregno,
                        l_deal_ru_struct_ha->h_instr_code,
                        chr_l_rep_rrmminqty,
                        chr_l_rep_rrmminamt,
                        l_deal_ru_struct_ha->h_dealcd );

               (*p_no_match)++;
               
               memset(l_deal_ru_struct_ha,NULL,sizeof(DEAL_RU_STRUCT_H));
                  strcpy(l_deal_ru_struct_ha->h_dl_client, l_sys_dl_deal_struct_ho->h_dl_client);
                  strcpy(l_deal_ru_struct_ha->h_indentity_no, l_sys_dl_deal_struct_ho->h_indentity_no);
                  strcpy(l_deal_ru_struct_ha->h_instr_code, l_sys_dl_deal_struct_ho->h_instr_code);
                  strcpy(l_deal_ru_struct_ha->h_loccode, l_sys_dl_deal_struct_ho->h_loccode);
                  strcpy(l_deal_ru_struct_ha->h_st_reg_no, chr_l_tsrnregno);
                  l_deal_ru_struct_ha->h_qty = l_takeupquantity;
                  l_deal_ru_struct_ha->h_amt = ((l_sys_dl_deal_struct_h_in->h_amt*l_takeupquantity)/l_sys_dl_deal_struct_h_in->h_qty);
                  strcpy(l_deal_ru_struct_ha->h_dealcd, l_sys_dl_deal_struct_ho->h_dealcd);
                  strcpy(l_deal_ru_struct_ha->h_deal_dt, l_sys_dl_deal_struct_ho->h_dlt);
                  strcpy(l_deal_ru_struct_ha->h_instrdate, l_sys_dl_deal_struct_ho->h_instrdate);

                  EXEC SQL INSERT INTO DL_RUDEAL VALUES (:l_deal_ru_struct_ha);

                  IS_ANY_ORA_ERROR;

                  int_l_flag = 0;

                  IS_ANY_ORA_ERROR_AND_DUPLICATE(ERR_REC_EXIST,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

                  
                  if ( APL_FAILURE == CRUDBUpdtPosnFn(  l_sys_dl_deal_struct_ho->h_dl_client,
                                          l_sys_dl_deal_struct_ho->h_instr_code,
                                          l_sys_dl_deal_struct_ho->h_loccode,
                                          l_sys_dl_deal_struct_ho->h_pos_stat,
                                          'C',
                                          l_sys_dl_deal_struct_ho->h_dealcd[0],
                                          &l_takeupquantity,
                                          'I',chr_l_tsrnregno,
                                          l_debug_info_ptr ) )
                  {
                     APL_GOBACK_FAIL
                  }
                  fprintf( p_fp_match,
                        "%-11s %-17s %-21s %-9s%s %s %-3s\n",
                        l_deal_ru_struct_ha->h_dl_client,
                        l_deal_ru_struct_ha->h_indentity_no,
                        l_deal_ru_struct_ha->h_st_reg_no,
                        l_deal_ru_struct_ha->h_instr_code,
                        chr_l_rep_rrmminqty,
                        chr_l_rep_rrmminamt,
                        l_deal_ru_struct_ha->h_dealcd );

                     (*p_no_match)++;


                     if (l_rquantity <= 0 )
                     break;
               }
               EXEC SQL CLOSE srnsafek2_cur;
             }					
	
				}		
			}
			
			

			

			memset(l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
			strcpy(l_dl_dealaudit_struct_h->h_dl_client, l_sys_dl_deal_struct_ho->h_dl_client);
   		strcpy(l_dl_dealaudit_struct_h->h_indentity_no, l_sys_dl_deal_struct_ho->h_indentity_no);
   		strcpy(l_dl_dealaudit_struct_h->h_trail_for, "T");
   		strcpy(l_dl_dealaudit_struct_h->h_processdetail, p_intl_envdatastruct_h->processtion);
   		strcpy(l_dl_dealaudit_struct_h->h_proc_usr, p_intl_envdatastruct_h->usr);
      	strcpy(l_dl_dealaudit_struct_h->h_subprocess, APL_NULL_STRING);
   		strcpy(l_dl_dealaudit_struct_h->h_logdate, APL_NULL_STRING);
   		strcpy(l_dl_dealaudit_struct_h->h_fail_cd, APL_NULL_STRING);
   		l_dl_dealaudit_struct_h->h_qty = l_sys_dl_deal_struct_ho->h_qty;
   		strcpy(l_dl_dealaudit_struct_h->h_dlfromord, l_sys_dl_deal_struct_ho->h_dlfromord);

   		if (APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_h, l_debug_info_ptr))
   		{
				APL_GOBACK_FAIL
   		}
          
         if (APL_FAILURE==EI_Mod_MQData(l_dl_dealaudit_struct_h->h_dl_client,
                                        l_dl_dealaudit_struct_h->h_indentity_no,
                                        NULL,
                                        NULL,     
                                        "B",
                                         l_debug_info_ptr))
                     APL_GOBACK_FAIL
			memset(l_dl_dealaudit_struct_h, NULL, sizeof(DL_DEALAUDIT_STRUCT_H));
			strcpy(l_dl_dealaudit_struct_h->h_dl_client, l_sys_dl_deal_struct_h_in->h_dl_client);
   		strcpy(l_dl_dealaudit_struct_h->h_indentity_no, l_sys_dl_deal_struct_h_in->h_indentity_no);
   		strcpy(l_dl_dealaudit_struct_h->h_trail_for, "T");
   		strcpy(l_dl_dealaudit_struct_h->h_processdetail, p_intl_envdatastruct_h->processtion);
   		strcpy(l_dl_dealaudit_struct_h->h_proc_usr, p_intl_envdatastruct_h->usr);
      	strcpy(l_dl_dealaudit_struct_h->h_subprocess, APL_NULL_STRING);
   		strcpy(l_dl_dealaudit_struct_h->h_logdate, APL_NULL_STRING);
   		strcpy(l_dl_dealaudit_struct_h->h_fail_cd, APL_NULL_STRING);
   		l_dl_dealaudit_struct_h->h_qty = l_sys_dl_deal_struct_h_in->h_qty;
   		strcpy(l_dl_dealaudit_struct_h->h_dlfromord, l_sys_dl_deal_struct_h_in->h_dlfromord);

   		if (APL_FAILURE == CR_Mod_CLHAudTrail(l_dl_dealaudit_struct_h, l_debug_info_ptr))
   		{
				APL_GOBACK_FAIL
   		}
          
         if (APL_FAILURE==EI_Mod_MQData(l_dl_dealaudit_struct_h->h_dl_client,
                                        l_dl_dealaudit_struct_h->h_indentity_no,
                                        NULL,
                                        NULL,
                                        "B",
                                         l_debug_info_ptr))
		
			

			fprintf(p_logfile, "Hooray, matched the 2 trades \n");
			fprintf(p_logfile, "For trade 1, Account : %s", l_sys_dl_deal_struct_ho->h_dl_client);
			fprintf(p_logfile, ", Refno   : %s\n", l_sys_dl_deal_struct_ho->h_indentity_no);
			fprintf(p_logfile, "For trade 2, Account : %s", l_sys_dl_deal_struct_h_in->h_dl_client);
			fprintf(p_logfile, ", Refno   : %s\n", l_sys_dl_deal_struct_h_in->h_indentity_no);
			
			int_l_automatch=1;

			
			l_flag_ru =0;
			if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
         		                                 "AMT_REPORT_RU",
               		                           &l_flag_ru,
                     		                     l_debug_info_ptr))
   		{
				APL_GOBACK_FAIL
			}
			l_flag_gr =0;
			if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
         		                                 "AMT_REPORT_GR",
               		                           &l_flag_gr,
                     		                     l_debug_info_ptr))
   		{
				APL_GOBACK_FAIL
			}
			if(l_flag_ru)
			{
         fprintf( p_fp_match,
                  "%-11s %-17s %.10s %10s %-9s%s %s %-3s %.11s\n",
                  l_sys_dl_deal_struct_ho->h_dl_client,
                  l_sys_dl_deal_struct_ho->h_indentity_no,
                  l_sys_dl_deal_struct_ho->h_dlt,
                  " ",
                  l_sys_dl_deal_struct_ho->h_instr_code,
                  chr_l_rep_outqty,
                  chr_l_rep_outamt,
                  l_sys_dl_deal_struct_ho->h_dealcd,
                  l_sys_dl_deal_struct_ho->h_setldt);

			}
			else if(l_flag_gr)
			{
				fprintf(	p_fp_match, 
						"%-11s %-17s %.10s %-9s%s %s %-3s %.11s%11s %11s %11s\n",	
						l_sys_dl_deal_struct_ho->h_dl_client, 
						l_sys_dl_deal_struct_ho->h_indentity_no, 
						l_sys_dl_deal_struct_ho->h_dlt,
						l_sys_dl_deal_struct_ho->h_instr_code, 
						chr_l_rep_outqty, 
						chr_l_rep_outamt, 
						l_sys_dl_deal_struct_ho->h_dealcd, 
						l_sys_dl_deal_struct_ho->h_setldt,
						l_sys_dl_deal_struct_ho->h_countclt,
						chr_l_sat_client_outer,
						chr_l_sat_code_outer);
			}
			else
			{

				fprintf(	p_fp_match, 
						"%-11s %-17s %.10s %-9s%s %s %-3s %.11s\n",	
						l_sys_dl_deal_struct_ho->h_dl_client, 
						l_sys_dl_deal_struct_ho->h_indentity_no, 
						l_sys_dl_deal_struct_ho->h_dlt,
						l_sys_dl_deal_struct_ho->h_instr_code, 
						chr_l_rep_outqty, 
						chr_l_rep_outamt, 
						l_sys_dl_deal_struct_ho->h_dealcd, 
						l_sys_dl_deal_struct_ho->h_setldt);
			}

			(*p_no_match)++;
			if (int_l_pglen_m++ == PAGELENGTH) 
			{
				DL_Prnt_AmtFmt_WrRpt(p_fp_match,l_debug_info_ptr);
				fprintf(p_fp_match, "\f\n");
				DL_Prnt_AmtHdr_WrRpt(p_fp_match,l_debug_info_ptr);
				int_l_pglen_m = 7;
			}
			l_flag_ru=0;		
         if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                                "AMT_REPORT_RU",
                                                &l_flag_ru,
                                                l_debug_info_ptr))
         {
            APL_GOBACK_FAIL
         }

			if(l_flag_ru)
			{
         fprintf( p_fp_match,
                  "%-11s %-17s %.10s %10s %-9s%s %s %-3s %.11s\n",
                  l_sys_dl_deal_struct_h_in->h_dl_client,
                  l_sys_dl_deal_struct_h_in->h_indentity_no,
                  l_sys_dl_deal_struct_h_in->h_dlt,
                  " ",
                  l_sys_dl_deal_struct_h_in->h_instr_code,
                  chr_l_rep_inqty,
                  chr_l_rep_inamt,
                  l_sys_dl_deal_struct_h_in->h_dealcd,
                  l_sys_dl_deal_struct_h_in->h_setldt);
			}
			else if(l_flag_gr)
			{
				fprintf(	p_fp_match, 
						"%-11s %-17s %.10s %-9s%s %s %-3s %.11s%11s %11s %11s\n",	
						l_sys_dl_deal_struct_h_in->h_dl_client, 
						l_sys_dl_deal_struct_h_in->h_indentity_no, 
						l_sys_dl_deal_struct_h_in->h_dlt,
						l_sys_dl_deal_struct_h_in->h_instr_code, 
						chr_l_rep_inqty, 
						chr_l_rep_inamt, 
						l_sys_dl_deal_struct_h_in->h_dealcd, 
						l_sys_dl_deal_struct_h_in->h_setldt,
						l_sys_dl_deal_struct_h_in->h_countclt,
						chr_l_sat_client_inner,
						chr_l_sat_code_inner);
			}
			else
			{ 
			fprintf(	p_fp_match, 
						"%-11s %-17s %.10s %-9s%s %s %-3s %.11s\n",	
						l_sys_dl_deal_struct_h_in->h_dl_client, 
						l_sys_dl_deal_struct_h_in->h_indentity_no, 
						l_sys_dl_deal_struct_h_in->h_dlt,
						l_sys_dl_deal_struct_h_in->h_instr_code, 
						chr_l_rep_inqty, 
						chr_l_rep_inamt, 
						l_sys_dl_deal_struct_h_in->h_dealcd, 
						l_sys_dl_deal_struct_h_in->h_setldt);
			}
			(*p_no_match)++;
			if (int_l_pglen_m++ == PAGELENGTH) 
			{
				DL_Prnt_AmtFmt_WrRpt(p_fp_match,l_debug_info_ptr);
				fprintf(p_fp_match, "\f\n");
				DL_Prnt_AmtHdr_WrRpt(p_fp_match,l_debug_info_ptr);
				int_l_pglen_m = 7;
			}

			
         
         
         if (APL_FAILURE == DL_Proc_SetlSeqNoRst(l_sys_dl_deal_struct_ho->h_dl_client, l_sys_dl_deal_struct_ho->h_indentity_no,
                                              chr_l_rowid_outer, &l_sys_dl_deal_struct_ho->h_regmsgquantity, 'U', p_intl_envdatastruct_h, l_debug_info_ptr))
               APL_GOBACK_FAIL

         
         if (APL_FAILURE == DL_Proc_SetlSeqNoRst(l_sys_dl_deal_struct_h_in->h_dl_client, l_sys_dl_deal_struct_h_in->h_indentity_no,
                                              chr_l_rowid_inner, &l_sys_dl_deal_struct_h_in->h_regmsgquantity, 'U', p_intl_envdatastruct_h, l_debug_info_ptr))
               APL_GOBACK_FAIL
          

			

			break;

		} 


		if (int_l_chkflg == 1)
		{
			
		}
		else if (int_l_chkflg == 2)
		{
			EXEC SQL CLOSE amt_inner2;
		}
		
		
		
      if (l_rec_for_gr > 0 && !int_l_automatch )
      {
         if (l_i_countin == 0)
         {
            if ((strlen(l_sys_dl_deal_struct_ho->h_fail_cd)==0) || (!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"15")) || (!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"34")) || (!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"90")) || (!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"30")))
            {
               memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
               strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);
               strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);
               strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"30");
               strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);
               strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);
               strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
               strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);

              
               if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"30"))
               {
                  if (APL_FAILURE == DL_Mod_DLFailReas( l_dl_deal_fail_struct_hb,p_intl_envdatastruct_h,l_debug_info_ptr ))
                  {
                     IS_ANY_ERROR_FATAL
                  }
					}
					if (int_l_chkflg != 1)
              		 int_l_failval = FAILREAS_CP_MISSINSTR ;
					else
              		 int_l_failval = FAILREAS_UNQCP_MISSING ;
					
               EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               FROM DUAL
               WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                                    WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                                    AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                    AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                    AND   a.DEBIT_CLT   = :chr_l_failed );
            }
            else
            {
               int_l_failval = PICK_FAILREAS;
               EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
               SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
               FROM DUAL
               WHERE NOT EXISTS  (  SELECT * FROM DL_LOCALREPPROC a
                                    WHERE a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
                                    AND   a.IDENTIY_NO   = :l_sys_dl_deal_struct_ho->h_indentity_no
                                    AND   a.CREDITCLIENT   = :l_dl_deal_amt_struct_h
                                    AND   a.DEBIT_CLT   = :chr_l_failed );
            }

         }
      }


		
		
		
		
		

		
		
		if (l_i_countin == 0 && !l_rec_for_gr && !int_l_automatch )
		{
			
			
			
           
          if ((l_noupdfail == 0 ) && ((strlen(l_sys_dl_deal_struct_ho->h_fail_cd)==0)||(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"15"))||(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"34"))||(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"30"))||(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"20"))||(!strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"90"))))
         {
				memset(l_dl_deal_fail_struct_hb, NULL, sizeof(DL_DEAL_FAIL_STRUCT_H));
				strcpy(l_dl_deal_fail_struct_hb->h_dl_client,l_sys_dl_deal_struct_ho->h_dl_client);	
				strcpy(l_dl_deal_fail_struct_hb->h_indentity_no,l_sys_dl_deal_struct_ho->h_indentity_no);	
				strcpy(l_dl_deal_fail_struct_hb->h_fail_cd,"20");	
				strcpy(l_dl_deal_fail_struct_hb->h_failinfo, APL_NULL_STRING);	
				strcpy(l_dl_deal_fail_struct_hb->h_custinfo, APL_NULL_STRING);	
				strcpy(l_dl_deal_fail_struct_hb->h_access_stamp, l_sys_dl_deal_struct_ho->h_access_stamp);
				strcpy(p_intl_envdatastruct_h->h_mode, UFL_MODE);
				
            if (strcmp(l_sys_dl_deal_struct_ho->h_fail_cd,"20"))
            {
					if (APL_FAILURE == DL_Mod_DLFailReas(	l_dl_deal_fail_struct_hb,
															p_intl_envdatastruct_h,
															l_debug_info_ptr ))
					{
						IS_ANY_ERROR_FATAL
						goto LBL_AMT_FAILURE; 
					}
				}
			}
			

			fprintf(p_logfile, "Sorry, could not match the outer trade, ");
	   

			

			

			if (int_l_chkflg == 1)
			int_l_failval = FAILREAS_UNQMATCH_DEAL_NOFOUND;
			else
			int_l_failval = FAILREAS_MATCH_DL_NF;

			EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT, QTY)
			SELECT :l_sys_dl_deal_struct_ho->h_dl_client, :l_sys_dl_deal_struct_ho->h_indentity_no, :l_dl_deal_amt_struct_h, :chr_l_failed, :int_l_failval
			FROM DUAL
			WHERE	NOT EXISTS  (	SELECT * FROM DL_LOCALREPPROC a
										WHERE	a.CLIENT = :l_sys_dl_deal_struct_ho->h_dl_client
										AND	a.IDENTIY_NO	 = :l_sys_dl_deal_struct_ho->h_indentity_no 
										AND	a.CREDITCLIENT	 = :l_dl_deal_amt_struct_h
										AND	a.DEBIT_CLT	 = :chr_l_failed );

			IS_ANY_ORA_ERROR

		}

		

		LBL_AMT_SUCCESS:
		{
			fprintf(p_logfile, "Finished processing the trade successfully \n\n");
			CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
			CO_FreeErrLst(l_debug_info_ptr);

			
			
			if (int_l_reccount%COMMITSIZE == 0)
			{
				

				memset(chr_l_buf, NULL, BUFFER_LEN);
				sprintf(chr_l_buf, "Processed %d records", int_l_reccount);

				EXEC SQL UPDATE SYS_BATCHPROC
				SET STAT_DET = :chr_l_buf
				WHERE PROCESS_NAME = :argv[0]
				AND	PROC_INIT = :argv[1]
				AND	STARTDATE = :argv[2]
				AND	STATUS = 'started';

				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
																	"Batch_in_proc Rec",
																	APL_NULL_STRING,
																	APL_NULL_STRING )

				

				EXEC SQL COMMIT WORK;
				IS_ANY_ORA_ERROR
				CO_ProcMonitor(p_logfile, "Record Committed", NULL, NULL);

            if( strcmp(chr_l_settledt_equal_criteria,"Y")==0 )
				   EXEC SQL OPEN amt_outer1; 
				else
               EXEC SQL OPEN amt_outer2; 

				IS_ANY_ORA_ERROR

      		EXEC SQL SELECT PROCESSING_STATUS INTO :chr_g_restart_data:g_restart_data_i
      		FROM SYS_BATCHPROC
      		WHERE PROCESS_NAME=:argv[0]
      		AND   PROC_INIT=:argv[1]
      		AND   STARTDATE=:argv[2]
      		AND   STATUS='started'
      		FOR UPDATE OF PROCESSING_STATUS,STATUS;

				IS_ANY_ORA_ERROR

      		if(APL_ZERO_RESULT_SET) 
				{
         		CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
         		APL_GOBACK_FAIL
      		}
			}

			continue;
		}

		LBL_AMT_FAILURE:
		{
			fprintf(p_logfile, "Failed to match the trade\n\n");
			CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
			CO_FreeErrLst(l_debug_info_ptr);

			

			if (int_l_reccount%COMMITSIZE == 0)
			{
				

				memset(chr_l_buf, NULL, BUFFER_LEN);
				sprintf(chr_l_buf, "Processed %d records", int_l_reccount);

				EXEC SQL UPDATE SYS_BATCHPROC
				SET STAT_DET = :chr_l_buf
				WHERE PROCESS_NAME = :argv[0]
				AND	PROC_INIT = :argv[1]
				AND	STARTDATE = :argv[2]
				AND	STATUS = 'started';

				IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
																	"Batch_in_proc Rec",
																	APL_NULL_STRING,
																	APL_NULL_STRING )
				EXEC SQL COMMIT WORK;
				IS_ANY_ORA_ERROR
				CO_ProcMonitor(p_logfile, "Record Committed", NULL, NULL);
				if( strcmp(chr_l_settledt_equal_criteria,"Y")==0 )
              EXEC SQL OPEN amt_outer1; 
            else
              EXEC SQL OPEN amt_outer2; 
             
				IS_ANY_ORA_ERROR

      		EXEC SQL SELECT PROCESSING_STATUS INTO :chr_g_restart_data:g_restart_data_i
      		FROM SYS_BATCHPROC
      		WHERE PROCESS_NAME=:argv[0]
      		AND   PROC_INIT=:argv[1]
      		AND   STARTDATE=:argv[2]
      		AND   STATUS='started'
      		FOR UPDATE OF PROCESSING_STATUS,STATUS;

				IS_ANY_ORA_ERROR

      		if(APL_ZERO_RESULT_SET) 
				{
         		CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
         		APL_GOBACK_FAIL
      		}
			}
			continue;
		}
 
	} 

   if( strcmp(chr_l_settledt_equal_criteria,"Y")==0 )
	  EXEC SQL CLOSE amt_outer1;
	else
     EXEC SQL CLOSE amt_outer2;
   

	
	
	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :

		

		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "Processed %d records", int_l_reccount);

		EXEC SQL UPDATE SYS_BATCHPROC
		SET STAT_DET = :chr_l_buf
		WHERE PROCESS_NAME = :argv[0]
		AND	PROC_INIT = :argv[1]
		AND	STARTDATE = :argv[2]
		AND	STATUS = 'started';

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_REC_NOTFND,
															"Batch_in_proc Rec",
															APL_NULL_STRING,
															APL_NULL_STRING )

		EXEC SQL COMMIT WORK;
		IS_ANY_ORA_ERROR
		CO_ProcMonitor(p_logfile, "Record Committed", NULL, NULL);

    	EXEC SQL SELECT PROCESSING_STATUS INTO :chr_g_restart_data:g_restart_data_i
     	FROM SYS_BATCHPROC
     	WHERE PROCESS_NAME=:argv[0]
     	AND   PROC_INIT=:argv[1]
     	AND   STARTDATE=:argv[2]
     	AND   STATUS='started'
     	FOR UPDATE OF PROCESSING_STATUS,STATUS;

     	if(sqlca.sqlcode) 
		{
     		CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
     		APL_GOBACK_FAIL
     	}

      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Mod_AutMtDel successfully",
						NULL,
						NULL);
		CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
		CO_FreeErrLst(l_debug_info_ptr);
		free(l_sys_dl_deal_struct_h_in);
		free(l_sys_dl_deal_struct_i_in);
		free(l_sys_dl_deal_struct_ho);
		free(l_sys_dl_deal_struct_iq);
		free(l_dl_dealaudit_struct_h);
		free(l_dl_deal_fail_struct_hb);
		APL_FREE(l_deal_ru_struct_ha);
      return(APL_SUCCESS);

 
   RETURN_FAILURE :

		EXEC SQL ROLLBACK WORK;
		CO_ProcMonitor(p_logfile, "Rolling Back", NULL, NULL);
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Mod_AutMtDel with errors",
						NULL,
						NULL);
		CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
		CO_FreeErrLst(l_debug_info_ptr);
		free(l_sys_dl_deal_struct_h_in);
		free(l_sys_dl_deal_struct_i_in);
		free(l_sys_dl_deal_struct_ho);
		free(l_sys_dl_deal_struct_iq);
		free(l_dl_dealaudit_struct_h);
		free(l_dl_deal_fail_struct_hb);
	   APL_FREE(l_deal_ru_struct_ha); 
      return(APL_FAILURE);

}




int  PoMatchHdrPr(int mattyp,
					   int pgnum,	
						FILE *p_fp_match,
						FILE *p_fp_unmatch,
						char **argv,
					   FILE *p_logfile,
						INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   
 
   char chr_l_sysdatetime[APL_DATE_LEN] 		= APL_NULL_STRING;
	char chr_l_tmpstr[80]							   = APL_NULL_STRING;
   int int_l_tmp_count                        = 0;
   CO_ProcMonitor(p_logfile,"Entered PoMatchHdrPr with Success", NULL, p_intl_envdatastruct_h);

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"\n");
	}
	else
	{
   	fprintf(p_fp_unmatch,"\n");
	}
  
	if ( APL_FAILURE == CO_RtvSysDtTime( chr_l_sysdatetime,
															l_debug_info_ptr ) )
	{
		APL_GOBACK_FAIL
	}
   	
	
 
	for(int_l_tmp_count=1;int_l_tmp_count<=80;int_l_tmp_count++)
	{
		strcat(chr_l_tmpstr, " ");
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,chr_l_sysdatetime);
   	fprintf(p_fp_match,"%s%s%d",chr_l_tmpstr,"Page :",pgnum);
   	fprintf(p_fp_match,"\n");
	}
	else
	{
   	fprintf(p_fp_unmatch,chr_l_sysdatetime);
   	fprintf(p_fp_unmatch,"%s%s%d",chr_l_tmpstr,"Page :",pgnum);
   	fprintf(p_fp_unmatch,"\n");
	}

	for(int_l_tmp_count=1;int_l_tmp_count<=110;int_l_tmp_count++)
	{
		if ( mattyp == 1 )
		{
   		fprintf(p_fp_match,"-");
		}
		else
		{
   		fprintf(p_fp_unmatch,"-");
		}
   }

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"\n");
	}
	else
	{
   	fprintf(p_fp_unmatch,"\n");
	}

   if (mattyp==1)
	{
  		for(int_l_tmp_count=1;int_l_tmp_count<=40;int_l_tmp_count++)
		{
			fprintf( p_fp_match, " ");
		}
   	fprintf(p_fp_match,"\n");
		fprintf(p_fp_match,"POLAND : Matched Trades Report\n");
	}
   else if (mattyp==2)
	{
  		for(int_l_tmp_count=1;int_l_tmp_count<=39;int_l_tmp_count++)
		{
			fprintf( p_fp_unmatch, " ");
		}
   	fprintf(p_fp_unmatch,"\n");
		fprintf(p_fp_unmatch,"POLAND : UnMatched Trades Report\n");
	}


   for(int_l_tmp_count=1;int_l_tmp_count<=110;int_l_tmp_count++)
	{
		if ( mattyp == 1 )
		{
   		fprintf(p_fp_match,"-");
		}
		else
		{
   		fprintf(p_fp_unmatch,"-");
		}
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"\n");
	}
	else
	{
   	fprintf(p_fp_unmatch,"\n");
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"\n");
	}
	else
	{
   	fprintf(p_fp_unmatch,"\n");
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Account");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Account");
	}
	
	

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"    ");
	}
	else
	{
   	fprintf(p_fp_unmatch,"    ");
	}

	

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Reference No.");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Reference No.");
	}

	

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"    ");
	}
	else
	{
   	fprintf(p_fp_unmatch,"    ");
	}


	

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Trade Dt");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Trade Dt");
	}

	

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match," ");
	}
	else
	{
   	fprintf(p_fp_unmatch," ");
	}

	

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Instrurity");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Instrurity");
	}

   for(int_l_tmp_count=1;int_l_tmp_count<=12;int_l_tmp_count++)   
	{
		if ( mattyp == 1 )
		{
   		fprintf(p_fp_match," ");
		}
		else
		{
   		fprintf(p_fp_unmatch," ");
		}
	}
   
	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Quantity");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Quantity");
	}
   
	for(int_l_tmp_count=1;int_l_tmp_count<=14;int_l_tmp_count++)   
	{
		if ( mattyp == 1 )
		{
   		fprintf(p_fp_match," ");
		}
		else
		{
   		fprintf(p_fp_unmatch," ");
		}
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Amount");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Amount");
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"  ");
	}
	else
	{
   	fprintf(p_fp_unmatch,"  ");
	}
	
	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Txn");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Txn");
	}
		
	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"   ");
	}
	else
	{
   	fprintf(p_fp_unmatch,"   ");
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"Settl Dt");
	}
	else
	{
   	fprintf(p_fp_unmatch,"Settl Dt");
	}

	if (mattyp==2)
	{
		fprintf(p_fp_unmatch," ");
	   fprintf(p_fp_unmatch,"Counterparty");
   }

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"\n");
	}
	else
	{
   	fprintf(p_fp_unmatch,"\n");
	}

	for(int_l_tmp_count=1;int_l_tmp_count<=110;int_l_tmp_count++)
	{
		if ( mattyp == 1 )
		{
   		fprintf(p_fp_match,"-");
		}
		else
		{
   		fprintf(p_fp_unmatch,"-");
		}
	}

	if ( mattyp == 1 )
	{
   	fprintf(p_fp_match,"\n");
	}
	else
	{
   	fprintf(p_fp_unmatch,"\n");
	}

	APL_GOBACK_SUCCESS

   
   RETURN_SUCCESS :

     CO_ProcMonitor(p_logfile, "Leaving Function PoMatchHdrPr with Success", NULL, p_intl_envdatastruct_h);
     APL_IF_DEBUG
     {
         CO_ProcMonitor(APL_OUT_FILE, "Leaving Function PoMatchHdrPr with Success", NULL, p_intl_envdatastruct_h);
     }

     return(APL_SUCCESS);

   RETURN_FAILURE :

     CO_ProcMonitor(p_logfile, "Leaving Function PoMatchHdrPr with Failure", NULL, p_intl_envdatastruct_h);
     APL_IF_DEBUG
     {
         CO_ProcMonitor(APL_OUT_FILE,
                  "Leaving Function PoMatchHdrPr with errors",
                  NULL,
                  NULL);
     }

	  return(APL_FAILURE);
}



int DBPoAutoMatFn( char **argv, 
						 FILE *p_logfile, 
						 INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h, 
						 DEBUG_INFO_STRUCT_H **l_debug_info_ptr) 

{
	 
	
	struct sqlca sqlca;

	double dbl_l_amount 									= 0.0;
	double l_h_Amount 								= 0.0;
	short l_i_Amount 									= 0;
	 
	double l_quantity_a										= 0.0;
	double l_h_quantity 									= 0.0;
	short l_i_Qty  									= 0;

	char chr_l_failcode_b[FAILREAS_CD_LEN]   			= APL_NULL_STRING;
	char chr_l_h_failcode[FAILREAS_CD_LEN]   		= APL_NULL_STRING;
	short l_i_Failcode								= 0;

	char chr_l_client[APL_CLIENT_LENGTH]				= APL_NULL_STRING;
	char chr_l_h_client[APL_CLIENT_LENGTH]        	= APL_NULL_STRING; 
	char chr_l_curs_client[APL_CLIENT_LENGTH]		= APL_NULL_STRING;
	char chr_l_curs1_client[APL_CLIENT_LENGTH]		= APL_NULL_STRING;
	short l_i_Account									= 0;
   
	char chr_l_instrcode_b[APL_INSTRUMENTCODE_LEN]    			= APL_NULL_STRING;
	char chr_l_h_instrcode[APL_INSTRUMENTCODE_LEN]          	= APL_NULL_STRING; 
	char chr_l_curs_instrcode[APL_INSTRUMENTCODE_LEN]			= APL_NULL_STRING;
	char chr_l_curs1_instrcode[APL_INSTRUMENTCODE_LEN]			= APL_NULL_STRING;
	short l_i_Instrode                				= 0; 
	 
	char chr_l_countacc[APL_COUNTACC_LEN] 		 	= APL_NULL_STRING;  
	char chr_l_h_countacc[APL_COUNTACC_LEN]       	= APL_NULL_STRING;  
	short l_i_Countacc                      	= 0; 

	char chr_l_locrefno_a[LOC_IDENT_LEN]				= APL_NULL_STRING;
	char chr_l_h_locrefno[LOC_IDENT_LEN]      	= APL_NULL_STRING; 
	short l_i_Locrefno                       	= 0;

	char chr_l_refno[APL_TXNREFNO_LEN]	    		= APL_NULL_STRING;
	char chr_l_h_refno[APL_TXNREFNO_LEN]         	= APL_NULL_STRING;  
	char chr_l_curs_refno[APL_TXNREFNO_LEN]       = APL_NULL_STRING;  
	char chr_l_curs1_refno[APL_TXNREFNO_LEN]       = APL_NULL_STRING;  
	short l_i_Refno									= 0;

	char chr_l_trdt[11]   				   			= APL_NULL_STRING;  
	char chr_l_h_trdt[11]              				= APL_NULL_STRING;
	short l_i_Trdt										= 0;

	char chr_l_settledt[11]			   				= APL_NULL_STRING; 
	char chr_l_h_settledt[11]							= APL_NULL_STRING; 
	short l_i_Settledt								= 0;

	char chr_l_trcode_c[APL_FLAG_LENGTH]					= APL_NULL_STRING;
	char chr_l_h_trcode_b[APL_FLAG_LENGTH]          	= APL_NULL_STRING;
	short l_i_Trcode									= 0;
	
	char chr_l_custnote[71]      						= APL_NULL_STRING;
	char chr_l_h_custnote[71]      					= APL_NULL_STRING;
	short l_i_Custnote								= 0;
 
	FILE *l_fp_match   								= NULL;
	FILE *l_fp_unmatch 								= NULL;

	char  chr_l_chktrcode[APL_FLAG_LENGTH]				= APL_NULL_STRING;
	
	char	chr_l_details[300]								= APL_NULL_STRING;
	char	chr_l_chrqty[20]								= APL_NULL_STRING;
	char	chr_l_chramount[20]							= APL_NULL_STRING;
	char	chr_l_h_chrqty[20]								= APL_NULL_STRING;
	char	chr_l_h_chramount[20]							= APL_NULL_STRING;
	int	int_l_unmatch_pgno								= 1;
	int	int_l_match_pgno								= 1;

	char chr_l_h_ccycode[APL_CCYCODE_LEN]			= APL_NULL_STRING;
	short l_i_ccycode									= 0;
	int int_l_h_ccydeclen									= 0;
	short l_i_ccydeclen								= 0;

	char	l_dl_deal_amt_struct_h[4]										= APL_NULL_STRING;
	char	chr_l_recycle[4]								= APL_NULL_STRING;
	int	int_l_h_numrows									= 0;
	short	l_i_numrows									= 0;

	int	int_l_match_newpgflg							= 0;
	int	int_l_match_rowcount							= 0;
	int	int_l_match_count								= 0;
	int	int_l_unmatch_newpgflg						= 0;
	int	int_l_unmatch_rowcount						= 0;
	int	int_l_unmatch_count							= 0;
	int	int_l_tmpcount									= 0;
	int	int_l_ccseligfail_flg							= 0;

	EXEC SQL VAR chr_l_h_client   IS STRING;
	EXEC SQL VAR chr_l_h_instrcode    IS STRING;
	EXEC SQL VAR chr_l_h_refno     IS STRING;
	EXEC SQL VAR chr_l_h_trdt      IS STRING;
	EXEC SQL VAR chr_l_h_settledt  IS STRING;
	EXEC SQL VAR chr_l_h_trcode_b    IS STRING;
	EXEC SQL VAR chr_l_h_countacc  IS STRING;
	EXEC SQL VAR chr_l_h_locrefno  IS STRING;
	EXEC SQL VAR chr_l_h_trcode_b	 	IS STRING;
	EXEC SQL VAR chr_l_h_failcode  IS STRING;
	EXEC SQL VAR chr_l_h_custnote  IS STRING;
	EXEC SQL VAR chr_l_h_ccycode  IS STRING;

	sqlca.sqlcode = 0;
	
	

	CO_ProcMonitor(p_logfile, "Entered Function DBPoAutoMatFn", NULL, p_intl_envdatastruct_h);
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function DBPoAutoMatFn", NULL, p_intl_envdatastruct_h);
	}  
 
	if (APL_FAILURE == CO_Rtv_RptFileName( "MT",
											 	   "POLAND : Matched Trades Report",
													 110,
													 p_intl_envdatastruct_h->processtion,
													 argv,
													 &l_fp_match,
													 l_debug_info_ptr ))
   {
	    APL_GOBACK_FAIL
   }

 
    
	
	if ( APL_FAILURE == PoMatchHdrPr(1, int_l_match_pgno, l_fp_match, l_fp_unmatch, argv, p_logfile, p_intl_envdatastruct_h, l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL
	}

	if (APL_FAILURE == CO_Rtv_RptFileName( "UT",
											 	   "POLAND : UnMatched Trades Report",
													 110,
													 p_intl_envdatastruct_h->processtion,
													 argv,
													 &l_fp_unmatch,
													 l_debug_info_ptr ))
   {
	    APL_GOBACK_FAIL
   }

    
	
	if ( APL_FAILURE == PoMatchHdrPr(2, int_l_unmatch_pgno, l_fp_match, l_fp_unmatch, argv, p_logfile, p_intl_envdatastruct_h, l_debug_info_ptr) )
	{
		APL_GOBACK_FAIL
	}

	EXEC SQL COMMIT WORK;

	if (sqlca.sqlcode)
	{
		CO_ProcMonitor(p_logfile, "Could not commit after opening report files", NULL, NULL);
		APL_GOBACK_FAIL
	}

	memset(chr_l_recycle, NULL, 4);
	strcpy(chr_l_recycle, POR_CYCLE_IND);
	memset(l_dl_deal_amt_struct_h, NULL, 4);
	strcpy(l_dl_deal_amt_struct_h, AMOUNT_STR);

	
   CO_ProcMonitor(p_logfile, "Create cursor for BTT Trades", NULL, NULL);

	EXEC SQL DECLARE BTT_Cursor CURSOR FOR
	SELECT 	a.client, a.instr_code, a.cp_clt, a.lcl_identno, a.IDENTIY_NO, 
				to_char(a.deal_date,'dd/chr_mm/yyyy'), to_char(a.setl_date,'dd/chr_mm/yyyy'), 
				a.AMOUNT, a.QTY, a.deal_cd, a.failreason_cd , a.client_note, a.currency_cd
	FROM  dl_deal a  
	WHERE a.dl_class = '26'
	AND   a.VAL_FDT IS NOT NULL 
	AND   a.INSTRUMENT_DT IS NULL
	AND	a.DEAL_STAT != 'DU'
	FOR UPDATE OF a.ACCESS_STAMP;


	EXEC SQL OPEN BTT_Cursor;

	IS_ANY_ORA_ERROR;


	for (;;)
	{
		CO_ProcMonitor(p_logfile, "Entering FOR loop", NULL, NULL);

		strcpy(chr_l_h_client, APL_NULL_STRING);
		strcpy(chr_l_h_instrcode, APL_NULL_STRING);
		strcpy(chr_l_h_countacc, APL_NULL_STRING);
		strcpy(chr_l_h_locrefno, APL_NULL_STRING);
		strcpy(chr_l_h_refno, APL_NULL_STRING);
		strcpy(chr_l_h_trdt, APL_NULL_STRING);
		strcpy(chr_l_h_settledt, APL_NULL_STRING);
		strcpy(chr_l_h_trcode_b, APL_NULL_STRING);
		strcpy(chr_l_h_failcode, APL_NULL_STRING);
		strcpy(chr_l_h_custnote, APL_NULL_STRING);
		l_h_quantity 		= 0.0;
		l_h_Amount 	= 0.0;

		l_i_Account 	= 	0;
		l_i_Instrode		=	0;
		l_i_Countacc	=	0;
		l_i_Locrefno	=	0;
		l_i_Refno		=	0;
		l_i_Trdt			=	0;
		l_i_Settledt	=	0;
		l_i_Trcode		=	0;
		l_i_Failcode	=	0;
		l_i_Custnote	=	0;
		l_i_Qty			=	0;
		l_i_Amount		=	0;

		

		EXEC SQL FETCH BTT_Cursor INTO  :chr_l_h_client:l_i_Account,
 												  :chr_l_h_instrcode:l_i_Instrode,
												  :chr_l_h_countacc:l_i_Countacc,
												  :chr_l_h_locrefno:l_i_Locrefno, 
												  :chr_l_h_refno:l_i_Refno, 
												  :chr_l_h_trdt:l_i_Trdt, 
												  :chr_l_h_settledt:l_i_Settledt, 
												  :l_h_Amount:l_i_Amount, 
												  :l_h_quantity:l_i_Qty, 
												  :chr_l_h_trcode_b:l_i_Trcode,
												  :chr_l_h_failcode:l_i_Failcode,
												  :chr_l_h_custnote:l_i_Custnote,
												  :chr_l_h_ccycode:l_i_ccycode;
		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET)
			break;
	
		

		EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT)
		VALUES (:chr_l_h_client, :chr_l_h_refno, :l_dl_deal_amt_struct_h, :chr_l_recycle);

		IS_ANY_ORA_ERROR

		CO_ProcMonitor(p_logfile,chr_l_h_refno , NULL, NULL);

		strcpy(chr_l_client, APL_NULL_STRING);
		strcpy(chr_l_instrcode_b, APL_NULL_STRING);
		strcpy(chr_l_countacc, APL_NULL_STRING);
		strcpy(chr_l_locrefno_a, APL_NULL_STRING);
		strcpy(chr_l_refno, APL_NULL_STRING);
		strcpy(chr_l_trdt, APL_NULL_STRING);
		strcpy(chr_l_settledt, APL_NULL_STRING);
		strcpy(chr_l_trcode_c, APL_NULL_STRING);
		strcpy(chr_l_failcode_b, APL_NULL_STRING);
		strcpy(chr_l_custnote, APL_NULL_STRING);
		strcpy(chr_l_curs_client, APL_NULL_STRING);
		strcpy(chr_l_curs_instrcode, APL_NULL_STRING);
		strcpy(chr_l_curs_refno, APL_NULL_STRING);
		l_quantity_a = 0.0;
		dbl_l_amount = 0.0;

		strcpy(chr_l_client,chr_l_h_client);
		strcpy(chr_l_curs_client,chr_l_h_client);
		strcpy(chr_l_instrcode_b,chr_l_h_instrcode);
		strcpy(chr_l_curs_instrcode,chr_l_h_instrcode);
		strcpy(chr_l_countacc,chr_l_h_countacc);
		strcpy(chr_l_locrefno_a,chr_l_h_locrefno);
		strcpy(chr_l_refno,chr_l_h_refno);
		strcpy(chr_l_curs_refno,chr_l_h_refno);
		strcpy(chr_l_trdt,chr_l_h_trdt);
		strcpy(chr_l_settledt,chr_l_h_settledt);
		dbl_l_amount = l_h_Amount;
		l_quantity_a		= l_h_quantity;
		strcpy(chr_l_trcode_c,chr_l_h_trcode_b);
		strcpy(chr_l_failcode_b,chr_l_h_failcode);
		strcpy(chr_l_custnote,chr_l_h_custnote);

		

		

		if (APL_FAILURE == CR_Proc_InstrQtyRoundToStr(	l_h_quantity,
																19,
																chr_l_h_instrcode,
																chr_l_chrqty,
																l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}

		CO_ProcMonitor(p_logfile, "Checking Decimal length for appropriate ccycode", NULL, p_intl_envdatastruct_h);

		EXEC SQL SELECT DEC_LEN
					INTO	:int_l_h_ccydeclen:l_i_ccydeclen
					FROM	DL_CURRENCY
					WHERE	CURRENCY_CD	=	:chr_l_h_ccycode:l_i_ccycode;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_CCY_NOTFND,
															chr_l_h_ccycode,
															APL_NULL_STRING,
															APL_NULL_STRING );

		CO_ProcMonitor(p_logfile, "Completed checking Decimallen", NULL, p_intl_envdatastruct_h);

		if ( APL_FAILURE == CO_ToStr( l_h_Amount, 19, int_l_h_ccydeclen, chr_l_chramount ) )
		{
			APL_GOBACK_FAIL
		}

		if ( APL_FAILURE == CO_PadString(chr_l_chrqty,"L",19," ",l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}
		if ( APL_FAILURE == CO_PadString(chr_l_chramount,"L",19," ",l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}	
         
		if ( strlen(chr_l_client) < 10 )
		{
			if ( APL_FAILURE == CO_PadString(chr_l_client,"R",10," ",l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		}

		if ( strlen(chr_l_refno) < 16 )
		{
			if ( APL_FAILURE == CO_PadString(chr_l_refno,"R",16," ",l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		}

		if ( strlen(chr_l_instrcode_b) < 8 )
		{
			if ( APL_FAILURE == CO_PadString(chr_l_instrcode_b,"R",8," ",l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		}

		if ((strlen(chr_l_h_locrefno)==0) && (strlen(chr_l_h_failcode)==0))
		{
			
			strcpy(chr_l_h_failcode,"90");
			strcpy(chr_l_h_custnote,"PREMATCHED");

			EXEC SQL UPDATE DL_DEAL
			SET	FAILREASON_CD	=	:chr_l_h_failcode,
			SUB_FAIL_CD	=	0,
			CLIENT_NOTE	=	:chr_l_h_custnote
			WHERE	CLIENT	=	:chr_l_curs_client
			AND	IDENTIY_NO		=	:chr_l_curs_refno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																chr_l_curs_client,
																chr_l_curs_refno,
																APL_NULL_STRING );
	
				
         int_l_ccseligfail_flg = 0;
         if (APL_FAILURE == DL_Chk_DLFailCd(chr_l_h_failcode,&int_l_ccseligfail_flg,l_debug_info_ptr))
         {
            APL_GOBACK_FAIL
         }
         if (int_l_ccseligfail_flg)
         {
            if ( APL_FAILURE ==  DL_Mod_CCSPendDL(chr_l_curs_client,
                                             chr_l_curs_refno,
                                             MS_CCS_FC,
                                             chr_l_h_failcode,
                                             APL_NULL_STRING,
                                             chr_l_h_custnote,
                                             &l_debug_info_ptr) )
            {
               APL_GOBACK_FAIL
            }
         }
				

			CO_ProcMonitor(p_logfile, "(a) Update values of Failcode, Custnote in DL_DEAL  ", NULL, p_intl_envdatastruct_h);
		}
		else if ((strlen(chr_l_h_locrefno)!=0) && (strcmp(chr_l_h_failcode,"95") == 0))
		{
			strcpy(chr_l_h_failcode,APL_NULL_STRING);
			strcpy(chr_l_h_custnote,APL_NULL_STRING);

			EXEC SQL UPDATE DL_DEAL
			SET	FAILREASON_CD	=	NULL,
			SUB_FAIL_CD	=	NULL,
			CLIENT_NOTE	=	NULL
			WHERE	CLIENT	=	:chr_l_curs_client
			AND	IDENTIY_NO		=	:chr_l_curs_refno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
			chr_l_curs_client,
			chr_l_curs_refno,
			APL_NULL_STRING );

			CO_ProcMonitor(p_logfile, "(b) Update values of Failcode, Custnote in DL_DEAL  ", NULL, p_intl_envdatastruct_h);
		}



		

		 
	   

		strcpy(chr_l_h_client, APL_NULL_STRING);
		strcpy(chr_l_h_instrcode, APL_NULL_STRING);
		strcpy(chr_l_h_countacc, APL_NULL_STRING);
		strcpy(chr_l_h_locrefno, APL_NULL_STRING);
		strcpy(chr_l_h_refno, APL_NULL_STRING);
		strcpy(chr_l_h_trdt, APL_NULL_STRING);
		strcpy(chr_l_h_settledt, APL_NULL_STRING);
		strcpy(chr_l_h_trcode_b, APL_NULL_STRING);
		strcpy(chr_l_h_failcode, APL_NULL_STRING);
		strcpy(chr_l_h_custnote, APL_NULL_STRING);
		strcpy(chr_l_curs1_client, APL_NULL_STRING);
		strcpy(chr_l_curs1_instrcode, APL_NULL_STRING);
		strcpy(chr_l_curs1_refno, APL_NULL_STRING);
		l_h_quantity 		= 0.0;
		l_h_Amount 	= 0.0;

		l_i_Account 	= 	0;
		l_i_Instrode		=	0;
		l_i_Countacc	=	0;
		l_i_Locrefno	=	0;
		l_i_Refno		=	0;
		l_i_Trdt			=	0;
		l_i_Settledt	=	0;
		l_i_Custnote	=	0;
		l_i_Qty			=	0;
		l_i_Amount		=	0;


      G_SYS_ACCOUNT_LEN = 10;      

		EXEC SQL DECLARE MatBTT_Cursor CURSOR FOR
		SELECT a.CLIENT, a.INSTR_CODE, a.CP_CLT, a.LCL_IDENTNO, a.IDENTIY_NO,  
				 to_char(a.DEAL_DATE,'dd/chr_mm/yyyy'), to_char(a.SETL_DATE,'dd/chr_mm/yyyy'), 
				a.AMOUNT,a.QTY, a.DEAL_CD, a.FAILREASON_CD, a.CLIENT_NOTE 
		FROM dl_deal a
		WHERE 	a.client 	=  rtrim(SUBSTR(:chr_l_countacc,1,:G_SYS_ACCOUNT_LEN)) 
		AND 		rtrim(SUBSTR(a.cp_clt,1,:G_SYS_ACCOUNT_LEN)) 	= :chr_l_curs_client
		AND 		a.INSTR_CODE 	= :chr_l_curs_instrcode
		AND 		a.IDENTIY_NO 		= :chr_l_curs_refno
		AND 		to_char(a.deal_date,'dd/chr_mm/yyyy') 		= :chr_l_trdt
		AND 		a.QTY			= :l_quantity_a
		AND		to_char(a.setl_date,'dd/chr_mm/yyyy') 	= :chr_l_settledt
		FOR UPDATE OF a.ACCESS_STAMP;

		EXEC SQL OPEN MatBTT_Cursor;

		IS_ANY_ORA_ERROR;

      CO_ProcMonitor(p_logfile, "Opened inner cursor for Matching trades", NULL, NULL);

		

		EXEC SQL FETCH MatBTT_Cursor INTO	:chr_l_h_client:l_i_Account,
			 					 					   :chr_l_h_instrcode:l_i_Instrode,
												     	:chr_l_h_countacc:l_i_Countacc,
													  	:chr_l_h_locrefno:l_i_Locrefno,
													  	:chr_l_h_refno:l_i_Refno,
													  	:chr_l_h_trdt:l_i_Trdt,
													  	:chr_l_h_settledt:l_i_Settledt,
													  	:l_h_Amount:l_i_Amount,
													  	:l_h_quantity:l_i_Qty,
													  	:chr_l_h_trcode_b:l_i_Trcode,
													  	:chr_l_h_failcode:l_i_Failcode,
													  	:chr_l_h_custnote:l_i_Custnote;

		IS_ANY_ORA_ERROR

		if(APL_ZERO_RESULT_SET)
			continue;

		

		EXEC SQL INSERT INTO DL_LOCALREPPROC (CLIENT, IDENTIY_NO, CREDITCLIENT, DEBIT_CLT)
		VALUES (:chr_l_h_client, :chr_l_h_refno, :l_dl_deal_amt_struct_h, :chr_l_recycle);

		IS_ANY_ORA_ERROR

			strcpy(chr_l_curs1_client, chr_l_h_client);
			strcpy(chr_l_curs1_instrcode, chr_l_h_instrcode);
			strcpy(chr_l_curs1_refno, chr_l_h_refno);

		

		

		

		

		if (APL_FAILURE == CR_Proc_InstrQtyRoundToStr(	l_h_quantity,
																19,
																chr_l_h_instrcode,
																chr_l_h_chrqty,
																l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}

		CO_ProcMonitor(p_logfile, "Checking Decimal length(inner cursor) for appropriate ccycode", NULL, p_intl_envdatastruct_h);

		EXEC SQL SELECT DEC_LEN
					INTO	:int_l_h_ccydeclen:l_i_ccydeclen
					FROM	DL_CURRENCY
					WHERE	CURRENCY_CD	=	:chr_l_h_ccycode:l_i_ccycode;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_CCY_NOTFND,
															chr_l_h_ccycode,
															APL_NULL_STRING,
															APL_NULL_STRING );
		CO_ProcMonitor(p_logfile, "Completed checking Decimallen", NULL, p_intl_envdatastruct_h);

		if ( APL_FAILURE == CO_ToStr( l_h_Amount, 19, int_l_h_ccydeclen, chr_l_h_chramount ) )
		{
			APL_GOBACK_FAIL
		}

		if ( APL_FAILURE == CO_PadString(chr_l_h_chrqty,"L",19," ",l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}
		if ( APL_FAILURE == CO_PadString(chr_l_h_chramount,"L",19," ",l_debug_info_ptr))
		{
			APL_GOBACK_FAIL
		}	
         
		if ( strlen(chr_l_h_client) < 10 )
		{
			if ( APL_FAILURE == CO_PadString(chr_l_h_client,"R",10," ",l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		}

		if ( strlen(chr_l_h_refno) < 16 )
		{
			if ( APL_FAILURE == CO_PadString(chr_l_h_refno,"R",16," ",l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		}

		if ( strlen(chr_l_h_instrcode) < 8 )
		{
			if ( APL_FAILURE == CO_PadString(chr_l_h_instrcode,"R",8," ",l_debug_info_ptr))
			{
				APL_GOBACK_FAIL
			}
		}


      if ((strlen(chr_l_h_locrefno)==0) && (strlen(chr_l_h_failcode)==0))
      {
			
			strcpy(chr_l_h_failcode,"90");
			strcpy(chr_l_h_custnote,"PREMATCHED");

			EXEC SQL UPDATE DL_DEAL
								SET	FAILREASON_CD	=	:chr_l_h_failcode,
										SUB_FAIL_CD	=	0,
										CLIENT_NOTE	=	:chr_l_h_custnote
								WHERE	CLIENT	=	:chr_l_curs1_client
								AND	IDENTIY_NO		=	:chr_l_curs1_refno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																chr_l_curs1_client,
																chr_l_curs1_refno,
																APL_NULL_STRING );

         
         int_l_ccseligfail_flg = 0;
         if (APL_FAILURE == DL_Chk_DLFailCd(chr_l_h_failcode,&int_l_ccseligfail_flg,l_debug_info_ptr))
         {
            APL_GOBACK_FAIL
         }
         if (int_l_ccseligfail_flg)
         {
            if ( APL_FAILURE ==  DL_Mod_CCSPendDL(chr_l_curs1_client,
                                             chr_l_curs1_refno,
                                             MS_CCS_FC,
                                             chr_l_h_failcode,
                                             APL_NULL_STRING,
                                             chr_l_h_custnote,
                                             &l_debug_info_ptr) )
            {
               APL_GOBACK_FAIL
            }
         }
         

			CO_ProcMonitor(p_logfile, "(a) Updating DL_DEAL in conclusion", NULL, p_intl_envdatastruct_h);


		}
		else if ((strlen(chr_l_h_locrefno)!=0) && (strcmp(chr_l_h_failcode,"95") == 0))
	   {
		   strcpy(chr_l_h_failcode,APL_NULL_STRING);
		   strcpy(chr_l_h_custnote,APL_NULL_STRING);

			EXEC SQL UPDATE DL_DEAL
								SET	FAILREASON_CD	=	NULL,
										SUB_FAIL_CD	=	NULL,
										CLIENT_NOTE	=	NULL
								WHERE	CLIENT	=	:chr_l_curs1_client
								AND	IDENTIY_NO		=	:chr_l_curs1_refno;

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_DEAL_NF,
																chr_l_curs1_client,
																chr_l_curs1_refno,
																APL_NULL_STRING );

         CO_ProcMonitor(p_logfile, "(b) Updating DL_DEAL in conclusion", NULL, p_intl_envdatastruct_h);

		}
      


		

		strcpy(chr_l_chktrcode,"0");

		if ( chr_l_trcode_c[0] == '1' && chr_l_h_trcode_b[0] != '2' )	
		{
			strcpy(chr_l_chktrcode, "1");
		}
		else if ( chr_l_trcode_c[0] == '2' && chr_l_h_trcode_b[0] != '1' )	
		{
			strcpy(chr_l_chktrcode, "1");
		}
		else if ( chr_l_trcode_c[0] == '3' && chr_l_h_trcode_b[0] != '4' )	
		{
			strcpy(chr_l_chktrcode, "1");
		}
		else if ( chr_l_trcode_c[0] == '4' && chr_l_h_trcode_b[0] != '3' )	
		{
			strcpy(chr_l_chktrcode, "1");
		}


		if ( ( strlen(chr_l_h_locrefno) != 0 && strlen( chr_l_locrefno_a) == 0 ) ||
		     ( strlen(chr_l_h_locrefno) == 0 && strlen( chr_l_locrefno_a) != 0 ) ) 
		{
		   if ( strlen(chr_l_h_locrefno) != 0 && strlen( chr_l_locrefno_a) == 0 ) 
			{
				strcpy( chr_l_details, APL_NULL_STRING);

				

				int_l_h_numrows = 0;
				l_i_numrows = 0;

				EXEC SQL SELECT NVL(count(*), 0)
				INTO :int_l_h_numrows:l_i_numrows
				FROM DL_LOCALREPPROC
				WHERE CLIENT = LTRIM(:chr_l_client)
				AND	IDENTIY_NO	  = LTRIM(:chr_l_refno)
				AND	CREDITCLIENT	  = :l_dl_deal_amt_struct_h
				AND	DEBIT_CLT	  = :chr_l_recycle;

				IS_ANY_ORA_ERROR

				if (int_l_h_numrows == 1)
				{
					strcat( chr_l_details, chr_l_client );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_refno );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_trdt );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_instrcode_b );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_chrqty );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_chramount );
					strcat( chr_l_details, "  ");
					strcat( chr_l_details, chr_l_trcode_c );
					strcat( chr_l_details, "     ");
					strcat( chr_l_details, chr_l_settledt );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_countacc );
				}
			}
		   else if ( strlen(chr_l_h_locrefno) == 0 && strlen( chr_l_locrefno_a) != 0 ) 
			{
				strcpy( chr_l_details, APL_NULL_STRING);

				

				int_l_h_numrows = 0;
				l_i_numrows = 0;

				EXEC SQL SELECT NVL(count(*), 0)
				INTO :int_l_h_numrows:l_i_numrows
				FROM DL_LOCALREPPROC
				WHERE CLIENT = LTRIM(:chr_l_h_client)
				AND	IDENTIY_NO	  = LTRIM(:chr_l_h_refno)
				AND	CREDITCLIENT	  = :l_dl_deal_amt_struct_h
				AND	DEBIT_CLT	  = :chr_l_recycle;

				IS_ANY_ORA_ERROR

				if (int_l_h_numrows == 1)
				{
					strcat( chr_l_details, chr_l_h_client );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_refno );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_trdt );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_instrcode );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_chrqty );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_chramount );
					strcat( chr_l_details, "  ");
					strcat( chr_l_details, chr_l_h_trcode_b );
					strcat( chr_l_details, "     ");
					strcat( chr_l_details, chr_l_h_settledt );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_countacc );
				}
			}

	   	if (int_l_unmatch_newpgflg == 1)
			{	
				int_l_unmatch_pgno++;
				if ( APL_FAILURE == PoMatchHdrPr(1, 
															int_l_unmatch_pgno, 
															l_fp_match, 
															l_fp_unmatch,
															argv, 
															p_logfile, 
															p_intl_envdatastruct_h, 
															l_debug_info_ptr) )
				{
					APL_GOBACK_FAIL
				}
				int_l_unmatch_newpgflg = 0;
			}

			if (strlen(chr_l_details))
			{
				fprintf(l_fp_unmatch, strcat(chr_l_details,"\n"));	
				int_l_unmatch_rowcount++;
				int_l_unmatch_count++;
			}

			if (int_l_unmatch_rowcount>=55)
			{
   	   	for(int_l_tmpcount=1;int_l_tmpcount<=110;int_l_tmpcount++)
				{
			   	fprintf(l_fp_unmatch,"-");
				}
				fprintf( l_fp_unmatch, "\n" );
				fprintf(l_fp_unmatch,"\f");		
     			int_l_unmatch_rowcount = 0;
				int_l_unmatch_newpgflg = 1;
			}

		}
		else if ( strlen( chr_l_h_locrefno) != 0 && strlen( chr_l_locrefno_a ) != 0 )
	   {	
			if ((fabs(dbl_l_amount - l_h_Amount) > l_mt_core_sys_params_struct_h.allowed_amtdiff) || (chr_l_chktrcode[0] == '1'))
			{
				strcpy( chr_l_details, APL_NULL_STRING);

				

				int_l_h_numrows = 0;
				l_i_numrows = 0;

				EXEC SQL SELECT NVL(count(*), 0)
				INTO :int_l_h_numrows:l_i_numrows
				FROM DL_LOCALREPPROC
				WHERE CLIENT = LTRIM(:chr_l_client)
				AND	IDENTIY_NO	  = LTRIM(:chr_l_refno)
				AND	CREDITCLIENT	  = :l_dl_deal_amt_struct_h
				AND	DEBIT_CLT	  = :chr_l_recycle;

				IS_ANY_ORA_ERROR

				if (int_l_h_numrows == 1)
				{
					strcat( chr_l_details, chr_l_client );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_refno );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_trdt );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_instrcode_b );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_chrqty );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_chramount );
					strcat( chr_l_details, "  ");
					strcat( chr_l_details, chr_l_trcode_c );
					strcat( chr_l_details, "     ");
					strcat( chr_l_details, chr_l_settledt );
					strcat( chr_l_details, " ");
				}

	   		if (int_l_match_newpgflg == 1)
				{	
					int_l_match_pgno++;
					if ( APL_FAILURE == PoMatchHdrPr(1, 
																int_l_match_pgno, 
																l_fp_match, 
																l_fp_unmatch,
																argv, 
																p_logfile, 
																p_intl_envdatastruct_h, 
																l_debug_info_ptr) )
					{
						APL_GOBACK_FAIL
					}
					int_l_match_newpgflg = 0;
				}

				if (strlen(chr_l_details))
				{
					fprintf(l_fp_match, strcat(chr_l_details,"\n"));	
					int_l_match_rowcount++;
					int_l_match_count++;
				}
	
				strcpy( chr_l_details, APL_NULL_STRING);

				

				int_l_h_numrows = 0;
				l_i_numrows = 0;

				EXEC SQL SELECT NVL(count(*), 0)
				INTO :int_l_h_numrows:l_i_numrows
				FROM DL_LOCALREPPROC
				WHERE CLIENT = LTRIM(:chr_l_h_client)
				AND	IDENTIY_NO	  = LTRIM(:chr_l_h_refno)
				AND	CREDITCLIENT	  = :l_dl_deal_amt_struct_h
				AND	DEBIT_CLT	  = :chr_l_recycle;

				IS_ANY_ORA_ERROR

				if (int_l_h_numrows == 1)
				{
					strcat( chr_l_details, chr_l_h_client );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_refno );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_trdt );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_instrcode );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_chrqty );
					strcat( chr_l_details, " ");
					strcat( chr_l_details, chr_l_h_chramount );
					strcat( chr_l_details, "  ");
					strcat( chr_l_details, chr_l_h_trcode_b );
					strcat( chr_l_details, "     ");
					strcat( chr_l_details, chr_l_h_settledt );
					strcat( chr_l_details, " ");
				}

				if (strlen(chr_l_details))
				{
					fprintf(l_fp_match, strcat(chr_l_details,"\n"));	
					int_l_match_rowcount++;
					int_l_match_count++;
				}
	
				if (int_l_match_rowcount>=54)
				{
   	   		for(int_l_tmpcount=1;int_l_tmpcount<=110;int_l_tmpcount++)
					{
			   		fprintf(l_fp_match,"-");
					}
			   	fprintf(l_fp_match,"\n");
					fprintf(l_fp_match,"\f");		
     				int_l_match_rowcount = 0;
					int_l_match_newpgflg = 1;
				}

			}
		}		

		EXEC SQL CLOSE MatBTT_Cursor;
		IS_ANY_ORA_ERROR;

	}

	EXEC SQL CLOSE BTT_Cursor;
 
	IS_ANY_ORA_ERROR;

   if ( int_l_match_count == 0 )
   {
      fprintf(l_fp_match,"No Amount Difference in Matched transactions to report\n");
   }

   if ( int_l_unmatch_count == 0 )
   {
      fprintf(l_fp_unmatch,"All Client Instructions Received. Nothing to report\n");
   }

	APL_GOBACK_SUCCESS

  	RETURN_SUCCESS :

		CO_ProcMonitor(p_logfile, "Leaving Function DBPoAutoMatFn with Success", NULL, p_intl_envdatastruct_h);
    	APL_IF_DEBUG
    	{
 	  		CO_ProcMonitor(APL_OUT_FILE, "Leaving Function DBPoAutoMatFn with Success", NULL, p_intl_envdatastruct_h);
    	}		
     	CO_Proc_RptClose(l_fp_match, l_debug_info_ptr);
     	CO_Proc_RptClose(l_fp_unmatch, l_debug_info_ptr);
		return(APL_SUCCESS);

	RETURN_FAILURE :

 		EXEC SQL ROLLBACK WORK;
 		CO_ProcMonitor(p_logfile, "Rolling Back", NULL, NULL);
 		APL_IF_DEBUG
 		{
 			CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DBPoAutoMatFn with errors",
						NULL,
						NULL);
 		}
 		CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
 		CO_FreeErrLst(l_debug_info_ptr);
      CO_Proc_RptClose(l_fp_match, l_debug_info_ptr);
      CO_Proc_RptClose(l_fp_unmatch, l_debug_info_ptr);
 		return(APL_FAILURE);

}
	





int DL_Proc_AutMt(	DL_DEAL_AMT_STRUCT_H *p_dl_deal_amt_struct_h,
						char **argv,
						FILE *p_logfile,
						INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h,
						DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	

	FILE *l_fp_match   = NULL;
	FILE *l_fp_unmatch = NULL;

	struct sqlca sqlca;	

	char		chr_l_now[APL_DATE_LEN] 						= APL_NULL_STRING;
	char		chr_l_buf[BUFFER_LEN]							= APL_NULL_STRING;
	char		l_dl_deal_amt_struct_h[4]										= AMOUNT_STR;
	char		chr_l_failed[4]									= FAILURE_IND;
	char		chr_l_h_client_a[APL_CLIENT_LENGTH]			= APL_NULL_STRING;
	char		chr_l_h_refno_A[APL_TXNREFNO_LEN]			= APL_NULL_STRING;
	char		chr_l_h_cname[CNAME_LEN_A]					= APL_NULL_STRING;
	char		chr_l_h_trdt_a[APL_DATE_LEN]					= APL_NULL_STRING;
	char		chr_l_h_instrcode_A[APL_INSTRUMENTCODE_LEN]				= APL_NULL_STRING;
	char		chr_l_h_instrdesc[INSTR_NAME_LEN_D]				= APL_NULL_STRING;
	char		chr_l_h_trcode_a[APL_FLAG_LENGTH]				= APL_NULL_STRING;
	char		chr_l_h_domcpac[APL_CLIENT_LENGTH]			= APL_NULL_STRING;
	char		chr_l_h_countacc_a[APL_COUNTACC_LEN]		= APL_NULL_STRING;  
	char		chr_l_h_clientofcode[APL_CLIENT_LENGTH]			= APL_NULL_STRING;
	char		chr_l_h_isreginstr[APL_FLAG_LENGTH]				= APL_NULL_STRING;
	char		chr_l_h_ispaylocal[APL_FLAG_LENGTH]			= APL_NULL_STRING;
	char		chr_l_h_posn_status[STATUS_POS_LEN]	= APL_NULL_STRING;
	char		chr_l_h_settledt_a[APL_DATE_LEN]				= APL_NULL_STRING;
	char		chr_l_h_locncode_a[APL_LOCNCODE_LENGTH]		= APL_NULL_STRING;
	char		chr_l_h_ccycode[APL_CCYCODE_LEN]			= APL_NULL_STRING;
	char		chr_l_rep_outqty[QUANTITY_LEN]					= APL_NULL_STRING;
	char		chr_l_rep_outamt[AMOUNT_LEN_B]					= APL_NULL_STRING;
	char		chr_l_failreason[80]							= APL_NULL_STRING;
	char     chr_l_faildesc[33]                      = APL_NULL_STRING; 
	
	char		chr_l_h_note1[APL_NOTE_LEN]	   			= APL_NULL_STRING;
	char		chr_l_sat_line4[APL_NOTE_LEN]				= APL_NULL_STRING;
	char		chr_l_temp1[APL_NOTE_LEN]				   = APL_NULL_STRING;
	char		chr_l_temp2[APL_NOTE_LEN]				   = APL_NULL_STRING;
	char		chr_l_h_sat_client[12] 						= APL_NULL_STRING;
	char		chr_l_h_sat_code[12] 						   = APL_NULL_STRING;
	char 		chr_l_enter[3]									= APL_NULL_STRING;
	char 		**temp;

SYS_DL_DEAL_STRUCT_H  *l_sys_dl_deal_struct_hm    = NULL;
SYS_DL_DEAL_STRUCT_I  *l_sys_dl_deal_struct_ie    = NULL;

	int		int_l_unmatched_reason = 0;
	int 		int_l_error_flag   = APL_SUCCESS;
	int		int_l_chkflg     	= 0;
	int		int_l_no_match		= 0;
	int		int_l_no_unmatch	= 0;
	int		int_l_pagelen_u		= 0;
	int		int_l_h_failcode	= 0;
	int		int_l_amt_declen	= 0;
	int int_l_temp_lax = 0;	
	double	l_h_quantity_a			= 0.0;
	double	chr_l_h_amount		= 0.0;

	short		l_i_account		= 0;
	short		l_i_refno		= 0;
	short		l_i_failcode	= 0;
	short		l_i_cname		= 0;
	short		l_i_trdt			= 0;
	short		l_i_instr_code		= 0;
	short		l_i_instr_name		= 0;
	short		int_l_i_qty			= 0;
	short		l_i_amount		= 0;
	short		int_l_i_trcode		= 0;
	short		l_i_domcpac		= 0;
	short		l_i_countacc	= 0;
	short		l_i_accountofcode	= 0;
	short		l_i_isreginstr	= 0;
	short		l_i_ispaylocal	= 0;
	short		l_i_posn_status= 0;
	short		l_i_settledt	= 0;
	short		l_i_locncode	= 0;
	short		l_i_ccycode		= 0;
	short		l_i_note1		= 0;
	short 	l_flag_ru	   = 0;
	short 	l_flag_gr	   = 0;
	int		int_num=0;
	short    l_flag_instr_name = 0; 
	short l_lpchk = 0;
   short rslp_chk = 0;
   sqlca.sqlcode = 0;


EXEC SQL VAR l_sys_dl_deal_struct_hm->h_dealcd            IS STRING;
EXEC SQL VAR l_sys_dl_deal_struct_hm->h_info1            IS STRING;


l_sys_dl_deal_struct_hm   = (SYS_DL_DEAL_STRUCT_H *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_H));
l_sys_dl_deal_struct_ie   = (SYS_DL_DEAL_STRUCT_I *)calloc(1, sizeof(SYS_DL_DEAL_STRUCT_I));


APL_MALLOC_FAIL(l_sys_dl_deal_struct_hm);
APL_MALLOC_FAIL(l_sys_dl_deal_struct_ie);


	

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Entered Function CDBDoAMTFn", NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Settlement Date is : %s", p_dl_deal_amt_struct_h->h_setldt);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Conf. Date is : %s", p_dl_deal_amt_struct_h->h_confdate);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "The Type of Instr. is : %s", p_dl_deal_amt_struct_h->h_typeofinstr);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "IPO Flag is : %s", p_dl_deal_amt_struct_h->h_iposel_ind);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
		memset(chr_l_buf, NULL, BUFFER_LEN);
		sprintf(chr_l_buf, "Selected instr_code is : %s", p_dl_deal_amt_struct_h->h_instr_code);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL, p_intl_envdatastruct_h);
	}
	
	

   EXEC SQL UPDATE SYS_BATCHPROC
	SET STAT_DET = NULL
   WHERE PROCESS_NAME=:argv[0]
   AND   PROC_INIT=:argv[1]
   AND   STARTDATE=:argv[2]
   AND   STATUS='started';

   if(APL_ZERO_RESULT_SET) 
	{
      CO_ProcMonitor(p_logfile,"E:No entry in batch_in_proc",NULL,NULL);
      APL_GOBACK_FAIL
   }

   IS_ANY_ORA_ERROR
	
	chr_l_enter[0] = putchar(13);
	chr_l_enter[1] = putchar(10);
	chr_l_enter[2] = '\0';

	

	if (!strlen(p_dl_deal_amt_struct_h->h_setldt))
	{
		APL_DATA_MISSING("Settlement Date", APL_NULL_STRING, APL_NULL_STRING);
		int_l_error_flag = APL_FAILURE;
	} 
	if (!strlen(p_dl_deal_amt_struct_h->h_confdate))
	{
		APL_DATA_MISSING("Conf. Dt.", APL_NULL_STRING, APL_NULL_STRING);
		int_l_error_flag = APL_FAILURE;
	} 
	else
	{
		

		if (APL_FAILURE == CO_Chk_Holiday(	p_dl_deal_amt_struct_h->h_confdate,
															&int_l_chkflg,
         	                           		l_debug_info_ptr,APL_NULL_STRING ))
   	{
   		APL_GOBACK_FAIL
   	}

		if (int_l_chkflg)
		{
			if (APL_FAILURE == CO_InsertErr(	l_debug_info_ptr,
															ERR_DATE_IS_HOLIDAY,
															p_dl_deal_amt_struct_h->h_confdate,
															APL_NULL_STRING,
															APL_NULL_STRING,
															__LINE__,
															__FILE__ ))
			{
				APL_GOBACK_FAIL
			}
			int_l_error_flag = APL_FAILURE;
		}
		
		
		if (strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0)
		{
			if ( APL_FAILURE == CO_Chk_InstrValid( p_dl_deal_amt_struct_h->h_instr_code,'Y','Y','N','N', NULL, 'N', l_debug_info_ptr ) )
			{
				int_l_error_flag = APL_FAILURE;
			}
		}
		
	}

	if (APL_FAILURE == int_l_error_flag) APL_GOBACK_FAIL

	if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr)) APL_GOBACK_FAIL

	

	

	if (APL_FAILURE == CO_RtvSysDtTime(	chr_l_now,
															l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}


	

	if (APL_FAILURE == CO_Rtv_RptFileName(	"AM",
													"Matched Trades Contra Report",
													110,
													p_intl_envdatastruct_h->processtion,
													argv,
													&l_fp_match,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	if (APL_FAILURE == CO_Rtv_RptFileName(	"UM",
													"Unmatched Trades Contra Report",
													230,
													p_intl_envdatastruct_h->processtion,
													argv,
													&l_fp_unmatch,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}

	if (APL_FAILURE == DL_Prnt_AmtHdr_WrRpt(	l_fp_match,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}

	if (APL_FAILURE == DL_Prnt_UnMtHdr( l_fp_unmatch, l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}

	

	fprintf(p_logfile, "Starting AMT for all receive trades \n");
	if (APL_FAILURE == DL_Mod_AutMtDel(	p_dl_deal_amt_struct_h,
													'R',
													l_fp_match,
													l_fp_unmatch,
													p_logfile,
													&int_l_no_match,
													&int_l_no_unmatch,
													chr_l_now,
													argv,
													p_intl_envdatastruct_h,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}
	fprintf(p_logfile, "Finished AMT for all receives \n");

	
	EXEC SQL SELECT COUNT(*) into :int_l_temp_lax FROM DL_LOCALREPPROC
	where CREDITCLIENT = :l_dl_deal_amt_struct_h;
	fprintf(p_logfile,"l_temp_lax is %d \n",int_l_temp_lax);
	EXEC SQL SELECT COUNT(*) into :int_l_temp_lax FROM DL_LOCALREPPROC
	where CREDITCLIENT != :l_dl_deal_amt_struct_h;
	fprintf(p_logfile,"l_temp_lax is %d \n",int_l_temp_lax);

	fprintf(p_logfile, "Starting AMT for all deliver trades \n");
	if (APL_FAILURE == DL_Mod_AutMtDel(	p_dl_deal_amt_struct_h,
													'D',
													l_fp_match,
													l_fp_unmatch,
													p_logfile,
													&int_l_no_match,
													&int_l_no_unmatch,
													chr_l_now,
													argv,
													p_intl_envdatastruct_h,
													l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}
	fprintf(p_logfile, "Finished AMT for all delivers \n");

	
	
   
	EXEC SQL DECLARE fail_cur CURSOR FOR
	SELECT 	a.CLIENT, a.IDENTIY_NO, a.QTY, c.CLN_NAME, b.DEAL_DATE, b.INSTR_CODE,
				d.INSTR_NAME, b.QTY, NVL(b.AMOUNT,0), b.DEAL_CD, b.DOMESTIC_CPCLT,
				b.CP_CLT,b.CLIENTOF_CD, b.REGINSTR_IND, b.PAYLOC_IND, b.STATUS_POS,
				b.SETL_DATE, b.LOCATION_CD, b.CURRENCY_CD, b.INFO1
	FROM DL_LOCALREPPROC a, DL_DEAL b, MT_CLIENT c, MT_INSTRUMENT d
	WHERE a.CREDITCLIENT = (:l_dl_deal_amt_struct_h)
	AND	a.DEBIT_CLT = (:chr_l_failed) 
	AND	a.CLIENT = b.CLIENT
	AND 	a.IDENTIY_NO   = b.IDENTIY_NO
	AND	a.CLIENT = c.CLN_CODE
	AND	b.INSTR_CODE  = d.INSTR_CODE
	ORDER BY b.INSTR_CODE, b.QTY, b.AMOUNT;

	EXEC SQL OPEN fail_cur;
	IS_ANY_ORA_ERROR

	for (int_l_pagelen_u=0; ; )
	{
		

		memset(chr_l_h_client_a,NULL, APL_CLIENT_LENGTH);
		memset(chr_l_h_refno_A,NULL, APL_TXNREFNO_LEN);
		int_l_h_failcode = 0;
		memset(chr_l_failreason,NULL, 80);
		memset(chr_l_h_cname,NULL, CNAME_LEN_A);
		memset(chr_l_h_trdt_a,NULL, APL_DATE_LEN);
		memset(chr_l_h_instrcode_A,NULL, APL_INSTRUMENTCODE_LEN);
		memset(chr_l_h_instrdesc,NULL, INSTR_NAME_LEN_D);
		l_h_quantity_a = 0.0;
		chr_l_h_amount = 0.0;
		memset(chr_l_h_trcode_a,NULL, APL_FLAG_LENGTH);
		memset(chr_l_h_domcpac,NULL, APL_CLIENT_LENGTH);
      
		memset(chr_l_h_countacc_a,NULL,APL_COUNTACC_LEN);
		memset(chr_l_h_clientofcode,NULL, APL_CLIENT_LENGTH);
		memset(chr_l_h_isreginstr,NULL, APL_FLAG_LENGTH);
		memset(chr_l_h_ispaylocal,NULL, APL_FLAG_LENGTH);
		memset(chr_l_h_posn_status,NULL, STATUS_POS_LEN);
		memset(chr_l_h_settledt_a,NULL, APL_DATE_LEN);
		memset(chr_l_h_locncode_a,NULL, APL_LOCNCODE_LENGTH);
		memset(chr_l_h_ccycode,NULL, APL_CCYCODE_LEN);
	  memset(chr_l_faildesc,NULL,33);
		memset(chr_l_h_note1,NULL, APL_NOTE_LEN);
		memset(chr_l_sat_line4,APL_NULL_CHAR,APL_NOTE_LEN);
		memset(chr_l_temp1,APL_NULL_CHAR,APL_NOTE_LEN);
		memset(chr_l_temp2,APL_NULL_CHAR,APL_NOTE_LEN);
		memset(chr_l_h_sat_client,APL_NULL_CHAR,12);
		memset(chr_l_h_sat_code,APL_NULL_CHAR,12);

		EXEC SQL VAR chr_l_h_client_a IS STRING; 
      EXEC SQL VAR chr_l_h_refno_A IS STRING; 
      EXEC SQL VAR chr_l_faildesc  IS STRING; 
      EXEC SQL VAR chr_l_h_note1  IS STRING; 

		l_i_account = 0;
		l_i_refno = 0;
		l_i_failcode = 0;
		l_i_cname = 0;
		l_i_trdt = 0;
		l_i_instr_code = 0;
		l_i_instr_name = 0;
		int_l_i_qty = 0;
		l_i_amount = 0;
		int_l_i_trcode = 0;
		l_i_domcpac = 0;
		l_i_countacc = 0;
		l_i_accountofcode = 0;
		l_i_isreginstr = 0;
		l_i_ispaylocal = 0;
		l_i_posn_status = 0;
		l_i_settledt = 0;
		l_i_locncode = 0;
		l_i_ccycode = 0;
		l_i_note1 = 0;

		EXEC SQL FETCH fail_cur INTO 	:chr_l_h_client_a:l_i_account,
												:chr_l_h_refno_A:l_i_refno,
												:int_l_h_failcode:l_i_failcode,
												:chr_l_h_cname:l_i_cname,
												:chr_l_h_trdt_a:l_i_trdt,
												:chr_l_h_instrcode_A:l_i_instr_code,
												:chr_l_h_instrdesc:l_i_instr_name,
												:l_h_quantity_a:int_l_i_qty,
												:chr_l_h_amount:l_i_amount,
												:chr_l_h_trcode_a:int_l_i_trcode,
												:chr_l_h_domcpac:l_i_domcpac,
												:chr_l_h_countacc_a:l_i_countacc,
												:chr_l_h_clientofcode:l_i_accountofcode,
												:chr_l_h_isreginstr:l_i_isreginstr,
												:chr_l_h_ispaylocal:l_i_ispaylocal,
												:chr_l_h_posn_status:l_i_posn_status,
												:chr_l_h_settledt_a:l_i_settledt,
												:chr_l_h_locncode_a:l_i_locncode,
												:chr_l_h_ccycode:l_i_ccycode ,
												:chr_l_h_note1:l_i_note1 ;

		IS_ANY_ORA_ERROR

		if (APL_ZERO_RESULT_SET) break;

		
		if (strcmp(p_dl_deal_amt_struct_h->h_iposel_ind,"Y") == 0 )
		{
			memset(l_sys_dl_deal_struct_hm, NULL, sizeof(SYS_DL_DEAL_STRUCT_H));
			memset(l_sys_dl_deal_struct_ie, 0, sizeof(SYS_DL_DEAL_STRUCT_I));

	   	EXEC SQL SELECT dl_deal.* INTO :l_sys_dl_deal_struct_hm:l_sys_dl_deal_struct_ie 
  			FROM DL_DEAL  WHERE CLIENT=:chr_l_h_client_a and IDENTIY_NO=:chr_l_h_refno_A;

			IS_ANY_ORA_ERROR;
			int_l_unmatched_reason = 0;
			if (APL_FAILURE == DL_Rtv_SATDET( l_sys_dl_deal_struct_hm, l_sys_dl_deal_struct_ie,p_logfile, chr_l_h_sat_client, chr_l_h_sat_code, &int_l_unmatched_reason , l_debug_info_ptr))
			{
				CO_ProcMonitor(p_logfile, "Failure from CDBGetSATDetails", NULL, NULL);
				APL_GOBACK_FAIL
			}
		}
		
		

		CO_NewLine(chr_l_h_cname);
		CO_NewLine(chr_l_h_instrdesc);

		

		

		

		if (APL_FAILURE == CR_Proc_InstrQtyRoundToStr(	l_h_quantity_a,
																QUANTITY_LEN,
																chr_l_h_instrcode_A,
																chr_l_rep_outqty,
																l_debug_info_ptr ))
		{
			APL_GOBACK_FAIL
		}

		EXEC SQL SELECT DEC_LEN INTO :int_l_amt_declen
		FROM DL_CURRENCY
		WHERE CURRENCY_CD = :chr_l_h_ccycode;

		IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(	ERR_VAL_NF,
															"Decimal Len.",
															chr_l_h_ccycode,
															APL_NULL_STRING);

		CO_ToStr(	chr_l_h_amount,
						AMOUNT_LEN_B,
						int_l_amt_declen,
						chr_l_rep_outamt);

		

		memset(chr_l_buf, NULL, BUFFER_LEN);
		
      sprintf(chr_l_buf, "Fail h_code :%d:", int_l_h_failcode);
		CO_ProcMonitor(APL_OUT_FILE, chr_l_buf, NULL,NULL);

		switch (int_l_h_failcode)
		{
			case ODDLOT_DEAL_NOTCONFIRM 		:	strcpy(chr_l_failreason, "Odd-Lot Trade Not Pre-matched");
												break;
			case CLIENT_NOTOK_IND 	: 	strcpy(chr_l_failreason, "Account Unauth/Frozen/Closed");
												break;
			case DOMCPCLIENT_NOTOK 	: 	strcpy(chr_l_failreason, "DomCpAc Unauth/Frozen/Closed");
												break;
			case COUNTCLIENT_NOTOK	: 	strcpy(chr_l_failreason, "CounterParty Unauth/Frozen/Closed/Deleted");
												break;
			case FAILREAS_DECURECU_NOTOK	: 	strcpy(chr_l_failreason, "DECU/RECU Unauth/Frozen/Closed/Deleted");
												break;
			case FAILREAS_INSTR_NOTOK	: 	strcpy(chr_l_failreason, "Instrurity Not Active");
												break;
			case FAILREAS_LOC_NOTOK	: 	strcpy(chr_l_failreason, "Location Not Authorised");
												break;
			case FAILREAS_CCY_NOTOK	: 	strcpy(chr_l_failreason, "Currency Not Found");
												break;
			case FAILREAS_DEAL_UAUTH 		:  strcpy(chr_l_failreason, "Trade Not Authorised");
												break;
			case MKR_CHKR_ERROR 	:  strcpy(chr_l_failreason, "Maker Same As Checker");
												break;
			case FAILREAS_NOENUF_POS 	:  strcpy(chr_l_failreason, "Not Enough Positions");
												break;
			case FAILREAS_NOENUF_VDP 		: 	strcpy(chr_l_failreason, "Not Enough VDP");
												break;
			case CLIENT_MAST_NOTOK_IND : 	strcpy(chr_l_failreason, "Account Unauth/Frozen/Closed For Matching Trade");
												break;
			case DOMCPCLIENT_MAST_NOTOK : 	strcpy(chr_l_failreason, "DomCpAc Unauth/Frozen/Closed For Matching Trade");
												break;
			case COUNTCLIENT_MASTER_NOTOK: 	strcpy( chr_l_failreason, 
														 "CounterParty Unauth/Frozen/Closed/Deleted For Matching Trade");
												break;
			case FAILREAS_MATCHDEAL_UAUTH 		: 	strcpy(chr_l_failreason, "Matching Trade Not Authorised");
												break;
			case MKR_CHKR_ERROR_MATCHDL 	: 	strcpy(chr_l_failreason, "Maker Same As Checker For Matching Trade");
												break;
			case FAILREAS_MATCH_NOENUF_POS 	: 	strcpy(chr_l_failreason, "Not Enough Positions For Matching Trade");
												break;
			case FAILREAS_MATCH_NOENUF_VDP 	: 	strcpy(chr_l_failreason, "Not Enough VDP For Matching Trade");
												break;
			case FAILREAS_MATCH_DL_NF 		: 	strcpy(chr_l_failreason, "Matching Trade Not Found");
												break;
			case FAILREAS_UNQMATCH_DEAL_NOFOUND 		: 	strcpy(chr_l_failreason, "Unique Matching Trade Not Found");
												break;
			case RECORD_NOFND_RRMM       :	strcpy(chr_l_failreason, "Valid Instrurity or Account not int_found in RRMM Module");
												break;
			case FAILREAS_NOENUF_POSRRMM :  strcpy(chr_l_failreason, "Not Enough Positions in RRMM");
												break; 

			case FAILREAS_NOENUF_MATCH_POSRRMM : strcpy(chr_l_failreason, "Not Enough Positions For RRMM Matching Trade");
                                     break;
         case RECORD_MATCH_NOFND_RRMM  :      strcpy(chr_l_failreason, "Valid Instrurity or Account not int_found in RRMM Matching Trade");
                                       break;
			case FAILREAS_CP_INSTR_MISMATCH :	strcpy(chr_l_failreason, "CounterParty Instruction Does Not Match");
												break;

			case FAILREAS_CP_MISSINSTR  :	strcpy(chr_l_failreason, "CounterParty Missing Instruction");
												break;
			case FAILREAS_UNQCP_MISSING  :	strcpy(chr_l_failreason, "Unique CounterParty Missing Instruction");
												break;
			case PREMATCHED_NOCONFIRM   :   strcpy(chr_l_failreason, "Prematched but not Confirmed");
                                    break;
			case IPODEAL_SAT_DIFF   :   strcpy(chr_l_failreason, "Difference int_found in SAT details");
                                    break;
			case ABSENT_CLT_IND   :   strcpy(chr_l_failreason, "SAT Account Not Present in this trade OR Matching Pair");
                                    break;
			case ABSENT_SATCD_IND   :   strcpy(chr_l_failreason, "SAT Code Not Present in this trade OR Matching Pair");
                                    break;
			case ABSENT_CLT_SATCD_IND   :   strcpy(chr_l_failreason, "SAT Account / SAT Code Not Present in this trade OR Matching Pair");
                                    break;
			case IPODEAL_SAT_MATCH   :   strcpy(chr_l_failreason, "Matched SAT details");
                                    break;
			case FAILREAS_IPODEAL_FAIL  :   strcpy(chr_l_failreason, "Trade Is either FailCoded with 62,63 OR Not IPO Valid");
			
                                    break;
			case PICK_FAILREAS :
         {
               EXEC SQL SELECT b.FAILREASON_DET INTO :chr_l_faildesc
               FROM DL_DEAL a, PRO_FAILCODES b WHERE
               a.FAILREASON_CD = b.FAILREASON_CD
               and a.SUB_FAIL_CD  = b.SUB_FAIL_CD
               and a.CLIENT = ltrim(rtrim(:chr_l_h_client_a))
               and a.IDENTIY_NO = ltrim(rtrim(:chr_l_h_refno_A));

               strcpy(chr_l_failreason,chr_l_faildesc);
         }
         break;

		}

		
		
		l_flag_instr_name = 0;	
		if (APL_FAILURE == CO_Chk_CntryEnabled(  "AUTO_MATCH",
														"UNREPNOINSTR_NAME",
														&l_flag_instr_name,
															l_debug_info_ptr))
		{
         APL_GOBACK_FAIL
      }


		l_flag_ru =0;
		if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                          "AMT_REPORT_RU",
                                          &l_flag_ru,
                                          l_debug_info_ptr))
   	{
			APL_GOBACK_FAIL
		}
		l_flag_gr =0;
      if (APL_FAILURE == CO_Chk_CntryEnabled(  "AMT_REPORT",
                                             "AMT_REPORT_GR",
                                             &l_flag_gr,
                                             l_debug_info_ptr))
      {
      	APL_GOBACK_FAIL
      }
		if (l_flag_ru)
		{
      fprintf( l_fp_unmatch,
               "%-11s %.30s %-17s %.10s %-8s %s %-3s %-15s %-13s %.10s %-5s %s\n",
               chr_l_h_client_a,
               chr_l_h_cname,
               chr_l_h_refno_A,
               chr_l_h_trdt_a,
               chr_l_h_instrcode_A,
               chr_l_rep_outqty,
               chr_l_h_trcode_a,
               chr_l_h_countacc_a,
               chr_l_h_clientofcode,
               chr_l_h_settledt_a,
               chr_l_h_locncode_a,
               chr_l_failreason );
		}
		else	
		{ 
        if (APL_FAILURE == CO_Chk_CntryEnabled(  "TRD_AMT",
                                               "UM_REPORT_RS_LP",
                                               &rslp_chk,
                                               l_debug_info_ptr))
           {
              APL_GOBACK_FAIL
           }
        if (rslp_chk)
           {  
                      strcpy(chr_l_h_ispaylocal,APL_NULL_STRING);
           }
        else
           {
              strcpy(chr_l_h_isreginstr,APL_NULL_STRING);
              strcpy(chr_l_h_ispaylocal,APL_NULL_STRING);
           }
		  if (l_flag_instr_name == 1)
			  {
					strcpy(chr_l_h_instrdesc,APL_NULL_STRING);
		  		}

				 
				 

                //AIX-Warnings Removal --%20-s to  %-20s
				if (rslp_chk) {
		    		fprintf(	l_fp_unmatch, 	
				      	"%-11s %.30s %-17s %.10s %-8s %.16s %s %s %-3s %-11s %-20s %-13s %-8s %.10s %-5s %s\n", 
					chr_l_h_client_a,
					chr_l_h_cname,
					chr_l_h_refno_A,
					chr_l_h_trdt_a,
					chr_l_h_instrcode_A,
					chr_l_h_instrdesc,
					chr_l_rep_outqty,
					chr_l_rep_outamt,
					chr_l_h_trcode_a,
					chr_l_h_domcpac,
					chr_l_h_countacc_a,
					chr_l_h_clientofcode,
					chr_l_h_isreginstr,
					chr_l_h_settledt_a,
					chr_l_h_locncode_a,
					chr_l_failreason ); }
                        else if (l_flag_gr)
								{
									
									if (int_l_h_failcode == IPODEAL_SAT_MATCH)
									{ 
										int_l_no_match++; 
	                        	fprintf( l_fp_match,
	                     		"%-11s %-17s %.10s %-8s %s %s %.10s     %-15s %-11s  %-11s %s \n",
	               				chr_l_h_client_a,
	               				chr_l_h_refno_A,
	               				chr_l_h_trdt_a,
	               				chr_l_h_instrcode_A,
	               				chr_l_rep_outqty,
	               				chr_l_rep_outamt,
	               				chr_l_h_settledt_a,
	               				chr_l_h_countacc_a,
	               				chr_l_h_sat_client,
	               				chr_l_h_sat_code,
	               				chr_l_failreason ); 
									}
									else
									{
	                        	fprintf( l_fp_unmatch,
	                     		"%-11s %.30s %-17s %.10s %-8s %.16s \n%s %s %-3s %-11s %-15s%-13s%-8s %-10s \n%-6s %.10s %-5s  %-11s  %-11s %s\n",
	               				chr_l_h_client_a,
					               chr_l_h_cname,
					               chr_l_h_refno_A,
					               chr_l_h_trdt_a,
					               chr_l_h_instrcode_A,
					               chr_l_h_instrdesc,
					               chr_l_rep_outqty,
					               chr_l_rep_outamt,
					               chr_l_h_trcode_a,
					               chr_l_h_domcpac,
					               chr_l_h_countacc_a,
					               chr_l_h_clientofcode,
					               chr_l_h_isreginstr,
					               chr_l_h_ispaylocal,
					               chr_l_h_posn_status,
					               chr_l_h_settledt_a,
					               chr_l_h_locncode_a,
					               chr_l_h_sat_client,
					               chr_l_h_sat_code,
					               chr_l_failreason ); 
									}
									
								}
                        else 
								{

                        fprintf( l_fp_unmatch,
                     "%-11s %.30s %-17s %.10s %-8s %.16s \n%s %s %-3s %-11s %-20s%-13s%-8s %-10s \n%-6s %.10s %-5s %s\n",
               chr_l_h_client_a,
               chr_l_h_cname,
               chr_l_h_refno_A,
               chr_l_h_trdt_a,
               chr_l_h_instrcode_A,
               chr_l_h_instrdesc,
               chr_l_rep_outqty,
               chr_l_rep_outamt,
               chr_l_h_trcode_a,
               chr_l_h_domcpac,
               chr_l_h_countacc_a,
               chr_l_h_clientofcode,
               chr_l_h_isreginstr,
               chr_l_h_ispaylocal,
               chr_l_h_posn_status,
               chr_l_h_settledt_a,
               chr_l_h_locncode_a,
               chr_l_failreason ); }
      }
		if (int_l_pagelen_u++ == PAGELENGTH) 
		{
			DL_Prnt_UnMtFmt(l_fp_unmatch);
			fprintf(l_fp_unmatch, "\f\n");
			DL_Prnt_UnMtHdr(l_fp_unmatch, l_debug_info_ptr);
			int_l_pagelen_u = 7;
		}
	}

	int_l_no_unmatch = sqlca.sqlerrd[2];

	EXEC SQL CLOSE fail_cur;

	
 	
	EXEC SQL DELETE DL_LOCALREPPROC 
	WHERE CREDITCLIENT = (:l_dl_deal_amt_struct_h);

	IS_ANY_ORA_ERROR

	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :

		CO_FreeErrLst(l_debug_info_ptr);
		if (!int_l_no_match) fprintf(l_fp_match, "No matching trade records\n");
		if (!int_l_no_unmatch) fprintf(l_fp_unmatch, "No unmatching trade records\n");
		DL_Prnt_AmtFmt_WrRpt(l_fp_match,l_debug_info_ptr);
		DL_Prnt_UnMtFmt(l_fp_unmatch);
		if (APL_FAILURE == CO_Proc_RptClose(	l_fp_match,
														l_debug_info_ptr)) 
		{
			APL_GOBACK_FAIL
		}
		if (APL_FAILURE == CO_Proc_RptClose(	l_fp_unmatch,
														l_debug_info_ptr)) 
		{
			APL_GOBACK_FAIL
		}
		fprintf(p_logfile, "Exiting AMT processtion successfully\n");

      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Proc_AutMt successfully",
						NULL,
						p_intl_envdatastruct_h);
      CO_Proc_RptClose(l_fp_match, l_debug_info_ptr);
      CO_Proc_RptClose(l_fp_unmatch, l_debug_info_ptr); 
		return(APL_SUCCESS);

   RETURN_FAILURE :

		if (APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
		{
			CO_ProcMonitor(p_logfile, "Got Errors : ", l_debug_info_ptr, p_intl_envdatastruct_h);
			CO_FreeErrLst(l_debug_info_ptr);
		}
		if (!int_l_no_match) fprintf(l_fp_match, "No matching trade records\n");
		if (!int_l_no_unmatch) fprintf(l_fp_unmatch, "No unmatching trade records\n");
		DL_Prnt_AmtFmt_WrRpt(l_fp_match,l_debug_info_ptr);
		DL_Prnt_UnMtFmt(l_fp_unmatch);
		fprintf(p_logfile, "Exiting AMT processtion with errors\n");

      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,
						"Leaving Function DL_Proc_AutMt with errors",
						NULL,
						p_intl_envdatastruct_h);
      CO_Proc_RptClose(l_fp_match, l_debug_info_ptr);
      CO_Proc_RptClose(l_fp_unmatch, l_debug_info_ptr);
      return(APL_FAILURE);

}



//main(int argc,char **argv)
int main(int argc,char **argv)//Changes done for AIX Migration
{
	struct sqlca sqlca;
   DEBUG_INFO_STRUCT_H *l_debug_info_ptr = NULL;
	DL_DEAL_AMT_STRUCT_H l_dl_deal_amt_struct_h;
	INTL_ENV_DATA_STRUCT_H l_intl_env_data_h;
	FILE *l_finifile	= NULL;
	FILE *l_flogfile	= NULL;

   int int_l_retval=0;
	int int_num = 0;
	short int_l_h_count = 0;
	short l_isIPOAvailable = 0;

	int int_l_h_ipotrades = 0;
	short l_i_ipotrades = 0;

	char **temp;
	char l_h_amount[4] = AMOUNT_STR;
   char chr_uname[APL_USERID_LEN] = APL_NULL_STRING;
   char chr_custody_id_b[APL_USERID_LEN] = APL_NULL_STRING;
   char chr_passwd[APL_PASSWD_LEN] = APL_NULL_STRING;
	char chr_l_logdir[PATH_LENGTH] = APL_NULL_STRING;
	char chr_l_inifile[PATH_LENGTH] = APL_NULL_STRING;

   EXEC SQL VAR chr_uname IS STRING;
   EXEC SQL VAR chr_custody_id_b IS STRING;
   EXEC SQL VAR chr_passwd IS STRING;

	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ( ( l_finifile=fopen(chr_l_inifile,"r") ) == NULL)
	{
		APL_GOBACK_FAIL
	}

	

	

	APL_FETCH_DB_LOGIN_DETAILS(l_finifile, chr_custody_id_b, chr_uname, chr_passwd, APL_OUT_FILE, &l_debug_info_ptr)

   EXEC SQL CONNECT :chr_uname IDENTIFIED BY :chr_passwd;

   if (sqlca.sqlcode)
   {
      APL_GOBACK_FAIL
   }
   else
   {
		

		if (APL_FAILURE == CO_Rtv_RptFileName(	"3D",
														APL_LOGFILE_DESC,
														100,
														argv[5],
														argv,
														&l_flogfile,
														&l_debug_info_ptr ) )
		{
			APL_GOBACK_FAIL
		}

		

		EXEC SQL COMMIT WORK;

		if (sqlca.sqlcode)
		{
			CO_ProcMonitor(l_flogfile, "Could not commit after opening chr_log file", NULL, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			APL_GOBACK_FAIL
		}

		

		if (APL_FAILURE == CO_RtvSysParams(&l_debug_info_ptr))
		{
			CO_ProcMonitor(l_flogfile, "Failure from GetSysParams", &l_debug_info_ptr, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			APL_GOBACK_FAIL
		}

		

		if (APL_FAILURE == CO_SplitStr(	argv[9],
													'|',
													&int_num,
													&temp ))
		{
			CO_ProcMonitor(l_flogfile, "Failure from StrSplitFn", NULL, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			APL_GOBACK_FAIL
		}

		
		

		if (int_num != 6)
		{
			printf("\n no of arguments are |%d|", int_num);
			CO_ProcMonitor(l_flogfile, "Improper Number of arguements", NULL, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			APL_GOBACK_FAIL
		}


			printf("\n no of arguments are |%d|", int_num);
      strcpy(l_dl_deal_amt_struct_h.h_setldt, temp[0]);
      strcpy(l_dl_deal_amt_struct_h.h_confdate, temp[1]);
      strcpy(l_dl_deal_amt_struct_h.h_typeofinstr, temp[2]);
     	strcpy(l_dl_deal_amt_struct_h.h_iposel_ind, temp[3]);
     	strcpy(l_dl_deal_amt_struct_h.h_instr_code, temp[4]);
     	strcpy(l_dl_deal_amt_struct_h.h_selsetldt, temp[5]);
			printf("\n Selected instr_code is  |%s|", l_dl_deal_amt_struct_h.h_instr_code );
			printf("\n Selected Criteria for Settlement Date is  |%s|", l_dl_deal_amt_struct_h.h_selsetldt );

		if( ( strcmp(l_dl_deal_amt_struct_h.h_selsetldt,"=")!=0 )  && ( strcmp(l_dl_deal_amt_struct_h.h_selsetldt,"<=")!=0 ) )
		{
			fprintf(l_flogfile, "Invalid Criteria for Settlement Date : (%s)\n", temp[5] );
			APL_GOBACK_FAIL
		}

		
		if ( (strcmp(l_dl_deal_amt_struct_h.h_iposel_ind,"Y") == 0) )
		{
			if (!strlen(l_dl_deal_amt_struct_h.h_instr_code))
			{
				CO_ProcMonitor(l_flogfile, "Mandatory Data Missing: Instrurity Code ", NULL, NULL);
				CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
				APL_GOBACK_FAIL
			} 

			EXEC SQL SELECT NVL(COUNT(*),0) 
			INTO  :int_l_h_ipotrades:l_i_ipotrades
			FROM DL_DEAL
			WHERE INSTR_CODE = :l_dl_deal_amt_struct_h.h_instr_code AND
			DEAL_CD = '3' AND 
			DEAL_STAT = 'AA' AND
			DL_CLASS IN ('28','29');		

			IS_ANY_ORA_ERROR;

			if (int_l_h_ipotrades == 0)
			{
				CO_ProcMonitor(l_flogfile, "No IPO DVP Transaction Exists for selected Instrurity Code ", NULL, NULL);
				CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
				APL_GOBACK_FAIL
			}
		}
		else
		{
      	strcpy(l_dl_deal_amt_struct_h.h_iposel_ind, APL_NULL_STRING);
      	strcpy(l_dl_deal_amt_struct_h.h_instr_code, APL_NULL_STRING);
		}
		

		

		strcpy(l_intl_env_data_h.usr, argv[3]);
		strcpy(l_intl_env_data_h.h_mode, argv[4]);
		strcpy(l_intl_env_data_h.processtion, argv[5]);
		strcpy(l_intl_env_data_h.auth_req, argv[6]);
		strcpy(l_intl_env_data_h.subprocess, argv[7]);
		strcpy(l_intl_env_data_h.h_process, argv[8]);

		if ( (strcmp(l_dl_deal_amt_struct_h.h_iposel_ind,"Y") == 0) )
			CO_ProcMonitor(l_flogfile, "Calling DL_Proc_AutMt for IPO processing ...  ", NULL, NULL);
		else
			CO_ProcMonitor(l_flogfile, "Calling DL_Proc_AutMt for NON-IPO processing ...  ", NULL, NULL);

      int_l_retval = DL_Proc_AutMt( &l_dl_deal_amt_struct_h, argv, l_flogfile, &l_intl_env_data_h, &l_debug_info_ptr);
      if ( int_l_retval == APL_FAILURE )
      {
			CO_ProcMonitor(l_flogfile, "CDBDoAMTFn returned failure", NULL, NULL);
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
			EXEC SQL ROLLBACK WORK RELEASE;
         APL_GOBACK_FAIL
      }
      else
      {
			
			CO_ProcMonitor(l_flogfile, "Entering Automatching Fn ", NULL, NULL);
			
 	     	
     
			
			
			if ( APL_FAILURE == CO_Chk_CntryEnabled("TRD_SETTLEMENT",
																"AUTOMATCHING",
																&int_l_h_count,
																&l_debug_info_ptr ))
			{
				CO_ProcMonitor(l_flogfile, "Error in selecting from cntry_sys_params Table", NULL, NULL);
				CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
				EXEC SQL ROLLBACK WORK RELEASE;
        		APL_GOBACK_FAIL
			}

			if ( int_l_h_count > 0 )
			{
	   	   if ( APL_FAILURE == DBPoAutoMatFn(argv, l_flogfile, &l_intl_env_data_h, &l_debug_info_ptr))
				{
					CO_ProcMonitor(l_flogfile, "DBPoAutoMatchFn returned failure", NULL, NULL);
					CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);

					EXEC SQL DELETE DL_LOCALREPPROC 
					WHERE CREDITCLIENT = (:l_h_amount);

					if ( (sqlca.sqlcode) && (sqlca.sqlcode != 1403) )
					{
						CO_ProcMonitor(l_flogfile, "Failed to purge CLRPROC for PO AMT records", NULL, NULL);
					}

					EXEC SQL ROLLBACK WORK RELEASE;
         		APL_GOBACK_FAIL
				}
			}

		  EXEC SQL DELETE DL_LOCALREPPROC 
			WHERE CREDITCLIENT = (:l_h_amount);
         
			if ( (sqlca.sqlcode) && (sqlca.sqlcode != 1403) )
			{
				CO_ProcMonitor(l_flogfile, "Failed to purge CLRPROC for PO AMT records", NULL, NULL);
				APL_GOBACK_FAIL
			}

			

         EXEC SQL UPDATE SYS_BATCHPROC
         SET  status = 'completed'
         WHERE PROCESS_NAME=:argv[0]
         AND   PROC_INIT=:argv[1]
         AND   STARTDATE=:argv[2]
         AND   STATUS='started';

         EXEC SQL COMMIT WORK RELEASE;
			CO_Proc_RptClose(l_flogfile, &l_debug_info_ptr);
         APL_GOBACK_SUCCESS
      }

   }


	RETURN_SUCCESS : exit(0);
	RETURN_FAILURE : exit(-1);
}



int DL_Chk_RRMMDL(char *p_client, char *p_instrcode, short *p_validity,  DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
 {
   struct sqlca           sqlca;
	int               int_retval;
	char 					chr_h_accclass[3]   = APL_NULL_STRING; 
   char              chr_h_field_val[21] = APL_NULL_STRING; 
	int 					int_l_rowexists = 0;
	char              chr_l_buf[BUFFER_LEN];
   int               int_l_count=0;
   short             i_field_val=0;
   short             i_accclass=0; 
	
	EXEC SQL VAR chr_h_accclass IS STRING; 
	EXEC SQL VAR chr_h_field_val IS STRING;



   sqlca.sqlcode = 0;

   APL_IF_DEBUG
   {

      CO_ProcMonitor(APL_OUT_FILE,"Entered processtion DL_Chk_RRMMDL\n",NULL,NULL); 

      memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
      sprintf(chr_l_buf,"Account is %s \n",p_client);
       CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,NULL); 

      memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
      sprintf(chr_l_buf,"Instrurity is %s \n",p_instrcode);
		CO_ProcMonitor(APL_OUT_FILE,chr_l_buf,NULL,NULL); 

	}

	

	if ( strlen(p_client))
	{

				memset(chr_h_accclass, NULL, 2);

				EXEC SQL Select CLN_CLAS
				into :chr_h_accclass:i_accclass
				From MT_CLIENT
				Where (CLN_CODE = :p_client);
				
				IS_ANY_ORA_ERROR;
			
				memset(chr_h_field_val, NULL, 40);
	
            EXEC SQL Select FIELD_VAL 
            into :chr_h_field_val:i_field_val
            From PRO_GSSPLVAL 
				where ((MAIN_FUN = 'TRADE_RRMM') AND
						 (SUB_PROCESS = 'ACC_CLASS') AND NATION = :g_mt_commonsys_params_struct_h.nation_code );

				IS_ANY_ORA_ERROR;

				if (strcmp(chr_h_accclass,  chr_h_field_val) != 0 )
				{
					*p_validity = 1;
					APL_GOBACK_SUCCESS;
				}					
				else
				{
					EXEC SQL Select 1 
					into :int_l_rowexists
					From DL_RUCLIENT
					Where (CLIENT = :p_client and RU_CLIENT_STAT = 'AA');
			
					IS_ANY_ORA_ERROR;

				   if (!int_l_rowexists)
               {
						 *p_validity = 0;
						APL_GOBACK_SUCCESS;
					}
					else
					{
						*p_validity = 1;
               }	
					
					if ( strlen(p_instrcode))
					{
						int_l_rowexists = 0;
							EXEC SQL Select 1 
							into :int_l_rowexists 
							FROM DL_RUINSTRUMENT
							Where (INSTR_CODE = :p_instrcode and RU_INSTR_STAT = 'AA' );

							IS_ANY_ORA_ERROR;

            			if (!int_l_rowexists)
            			{
								*p_validity = 0;
							}
							else
							{
								*p_validity = 1;
            			}
 				  }
				}
	}
	
	APL_GOBACK_SUCCESS

   RETURN_SUCCESS :
   {
      APL_IF_DEBUG
        CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CRURRMMTradeFnSUCCESS \n",NULL,NULL); 

      return(APL_SUCCESS);
   }

   RETURN_FAILURE :
   {
      APL_IF_DEBUG
         CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion DL_Chk_RRMMDL Failure \n",NULL,NULL); 

      return(APL_FAILURE);
   }
}


int DL_Rtv_SATDET( SYS_DL_DEAL_STRUCT_H *l_sys_dl_deal_struct_ho, SYS_DL_DEAL_STRUCT_I *l_sys_dl_deal_struct_iq,FILE *p_logfile,
							char *p_sat_client_outer, char *p_sat_code_outer, int *p_unmatched_reason,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

   struct sqlca           sqlca;
   char     **temp;

   int    int_num=0;
   short  i_sat_account_outer = 0;
   short  i_sat_code_outer = 0;
	char	chr_l_sat_line4_outer[261]=APL_NULL_STRING;
	char	chr_l_remstring[261]=APL_NULL_STRING;
	char  chr_l_sat_client_outer[12]                 = APL_NULL_STRING;
	char  chr_l_sat_code_outer[12]                 = APL_NULL_STRING;

	EXEC SQL VAR chr_l_sat_client_outer IS STRING;
	EXEC SQL VAR l_sys_dl_deal_struct_ho->h_dl_client IS STRING;

	memset(chr_l_sat_line4_outer,APL_NULL_CHAR,261);
	memset(chr_l_sat_client_outer,APL_NULL_CHAR,12);
	memset(chr_l_sat_code_outer,APL_NULL_CHAR,12);
	memset(chr_l_remstring,APL_NULL_CHAR,261);

	if ((!strcmp(l_sys_dl_deal_struct_ho->h_dealcd,"2")) || (!strcmp(l_sys_dl_deal_struct_ho->h_dealcd,"4")))
	{
			
							
			EXEC SQL SELECT CLN_CLH, CLN_REG 
			INTO :chr_l_sat_client_outer:i_sat_account_outer, :chr_l_sat_code_outer:i_sat_code_outer 
			FROM MT_CLIENT 
			WHERE CLN_CODE=:l_sys_dl_deal_struct_ho->h_dl_client; 

			IS_ANY_ORA_ERROR;
							
			fprintf(p_logfile, "IPO Selection:Fetching SAT details for Outer Receive Trade |%s|%s|%s|\n",chr_l_sat_client_outer,chr_l_sat_code_outer,l_sys_dl_deal_struct_ho->h_dl_client);
			if (i_sat_account_outer == -1)
				strcpy(chr_l_sat_client_outer,APL_NULL_STRING);

			if (i_sat_code_outer == -1)
				strcpy(chr_l_sat_code_outer,APL_NULL_STRING);
	}
	else
	{
			
			if (l_sys_dl_deal_struct_iq->i_info1 == -1)
			{
				strcpy(chr_l_sat_client_outer,APL_NULL_STRING);
				strcpy(chr_l_sat_code_outer,APL_NULL_STRING);
			}
			else
			{
				int_num = 0;
				strcat(l_sys_dl_deal_struct_ho->h_info1,"\n");
				if (APL_FAILURE == CO_SplitStr(	l_sys_dl_deal_struct_ho->h_info1, '\n', &int_num, &temp ))
				{
					CO_ProcMonitor(p_logfile, "Failure from StrSplitFn", NULL, NULL);
					APL_GOBACK_FAIL;
				}
				strcpy(chr_l_sat_line4_outer,temp[3]);
				if (strlen(chr_l_sat_line4_outer))
				{
					int_num = 0;
					temp = (char **)NULL;
					strcat(chr_l_sat_line4_outer,"_");
					if (APL_FAILURE == CO_SplitStr(	chr_l_sat_line4_outer, '_', &int_num, &temp ))
					{
						CO_ProcMonitor(p_logfile, "Failure from StrSplitFn", NULL, NULL);
						APL_GOBACK_FAIL;
					}
					strcpy(chr_l_sat_client_outer,temp[0]);
					strcpy(chr_l_remstring,temp[1]);

					int_num = 0;
					temp = (char **)NULL;
					strcat(chr_l_remstring,"+");
					if (APL_FAILURE == CO_SplitStr(	chr_l_remstring, '+', &int_num, &temp ))
					{
						CO_ProcMonitor(p_logfile, "Failure from StrSplitFn", NULL, NULL);
						APL_GOBACK_FAIL;
					}
					strcpy(chr_l_sat_code_outer,temp[0]);

					
				}
				else
				{
					strcpy(chr_l_sat_client_outer,APL_NULL_STRING);
					strcpy(chr_l_sat_code_outer,APL_NULL_STRING);
				}
			}
	}

	if (!strlen(chr_l_sat_client_outer))
		*p_unmatched_reason = ABSENT_CLT_IND;

	if (!strlen(chr_l_sat_code_outer))
		*p_unmatched_reason = ABSENT_SATCD_IND;

	if ((!strlen(chr_l_sat_client_outer)) && (!strlen(chr_l_sat_code_outer)))
		*p_unmatched_reason = ABSENT_CLT_SATCD_IND;

	strcpy(p_sat_client_outer,chr_l_sat_client_outer);
	strcpy(p_sat_code_outer,chr_l_sat_code_outer);


	RETURN_SUCCESS : return(APL_SUCCESS);
	RETURN_FAILURE : return(APL_FAILURE);
}

