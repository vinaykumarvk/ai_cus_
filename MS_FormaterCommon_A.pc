/*
 *    COPYRIGHT NOTICE
 *
 *   Copyright 2010 Polaris Software Lab Limited. All rights reserved.
 *
 *   These materials are confidential and proprietary to
 *    Polaris Software Lab Limited and no part of these materials should
 *    be reproduced, published, transmitted or distributed in any form or
 *    by any means, electronic, mechanical, photocopying, recording or
 *    otherwise, or stored in any information storage or retrieval system
 *    of any nature nor should the materials be disclosed to third parties
 *    or used in any other manner for which this is not authorized, without
 *    the prior express written authorization of Polaris Software Lab Limited.
 */
/*********************************************************************
 *
 *
 * File Name           :      MS_FormaterCommon_A.pc
 *
 *
 *            Version Control Block
 *
 * Date        Version			Author				 Description (RFS No)
 * ---------   --------		---------------		 ---------------------------
 * 24/11/2010   1.0.1.26        Sivs Kumar G	    ISKB_3990 :  changes for displaying the eligible positions
 *													in the intimation message of the linked event
 * 21/09/2015                 Anjaneyulu            ISKB_1621 : Swift Message Upgradation
 *************************************************************************/

#include "IV_Control_A.h"
#include "MS_Swift.h"
#include "CA_InterFace.h"
#include "CA_Common.h"
#include <string.h>
#include <strings.h>
#include "stdio_64.h"
#include <stdlib.h>
#include <math.h>

typedef struct{
char detail[51];
}note_desc;

typedef struct{
        char            h_instr_code[APL_INSTRUMENTCODE_LEN];
        char            h_dl_client[APL_CLIENT_LENGTH];
        double  h_safekeep_pos;
        double  h_nval_rec;
        double  h_nval_del;
        double  h_val_rec;
        double   h_val_del;
        double  h_dp_rec;
        double   h_dp_del;
        }S_POSITION_STRUCT_H;


typedef struct{
        short           i_instr_code;
        short           i_dl_client;
        short           i_safekeep_pos;
        short           i_nval_rec;
        short           i_nonval_del;
        short           i_val_rec;
        short           i_val_del;
        short           i_dp_rec;
        short           i_dp_del;
        }S_POSITION_STRUCT_I;



extern int MS_Mod_MsgEntAdd(MS_MSGENT_STRUCT,int *,DEBUG_INFO_STRUCT_H **);
int MS_Proc_599Send(note_desc *,char *,char *,char *,long *,DEBUG_INFO_STRUCT_H **);


int MS_Proc_560Send(note_desc *,char *,char *,MS_STATIC_VAL *p_SEL_VAL,MS_STATIC_VAL *p_STAT_VAL,long *,DEBUG_INFO_STRUCT_H **);
int MS_Proc_568Send(note_desc *,char **,MS_STATIC_VAL *p_SEL_VAL_568,char *,long *,char *,DEBUG_INFO_STRUCT_H **,int);



#define MAX_ITEMS         200
#define SMAXLINE 			  200
#define SMAXCHAR 			  75
#define DEALTYPE_CORP      9

#define MAX_VNAMERR_LEN     30
#define MAX_INAMERR_LEN     30
#define DEALMS_LINK_SEQ_NAME   "CMSGLINK_SEQ"  


#define TAG_IN_MSG_95P         "95P"
#define TAG_IN_MSG_95Q         "95Q"
#define TAG_IN_MSG_95R         "95R"
#define TAG_IN_MSG_97A         "97A"
#define TAG_IN_MSG_97B         "97B"
#define TAG_IN_MSG_95S         "95S"
#define CA_INFOSEQ_LEN				9

#define  MSG_PARAM_STRUCT_SEP ";"    
EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE SQLDA;

extern SQLDA *sqlald();
extern void sqlnul();

char chr_h_sel_msg_stmt[9000];






int MS_Rtv_OTHValues(long *p_next_seq_no_15022,char *chr_p_msgno,int p_rec_no,MS_STATIC_VAL *p_SEL_VAL,MS_STATIC_VAL *p_STAT_VAL,int *p_rownum,long *p_msg_seq_no,FILE *p_Data_File,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{



int CA_Rtv_AccEntlPosMast(CA_CASECEVENT_STRUCT_H   p_asecevt_struct_h,char *chr_p_regbrind,char *chr_p_client,char *p_instr_code, double *p_entpos,double *p_pos001,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

int CA_Rtv_AccEntlPos(CA_CASECEVENT_STRUCT_H   p_asecevt_struct_h,char *chr_p_regbrind, char *chr_p_client, char *p_instr_code,double *p_entpos, double *p_pos001,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);

int MS_Rtv_OTHValues563N02(char *chr_p_msgno,int p_rec_no,MS_STATIC_VAL *p_SEL_VAL,MS_STATIC_VAL *p_STAT_VAL,int *p_rownum,long *p_msg_seq_no,FILE *p_Data_File,DEBUG_INFO_STRUCT_H **l_debug_info_ptr);


char chr_l_emu_ccycode[4]={APL_EMU_CCYCODE};
char chr_l_grd_ccycode[4]={APL_GRD_CCYCODE};
char h_instr_code[APL_INSTRUMENTCODE_LEN]= APL_NULL_STRING;
char l_566_res_instr_code[APL_INSTRUMENTCODE_LEN]= APL_NULL_STRING;
char l_566_res_instr_code_parent[APL_INSTRUMENTCODE_LEN]= APL_NULL_STRING;
char h_loccode[5]=APL_NULL_STRING;
char h_dl_client[APL_CLIENT_LENGTH]= APL_NULL_STRING;
char h_prdt[APL_DATE_LEN] = APL_NULL_STRING;
char h_faildetail[33]=APL_NULL_STRING;
char chr_h_count_vtb[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char h_domestic_cpclr_name[65]=APL_NULL_STRING;
char h_mapword[21]=APL_NULL_STRING;
char h_interdetail[51]=APL_NULL_STRING;
char chr_h_domcpname1[35]=APL_NULL_STRING;
char h_currencycode[APL_CCYCODE_LEN]=APL_NULL_STRING;
char h_currencycode_566[APL_CCYCODE_LEN]=APL_NULL_STRING;
char h_mstclt[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char chr_h_fent_pos[30]=APL_NULL_STRING;
char chr_h_blk_safekeep_pos[30]=APL_NULL_STRING;	/* Added by YOG on 26032009 - ISKB_2249 - For BLCK tag in 551N01/551R01 - BB Event Only */
char chr_h_elig_safekeep_pos[30]=APL_NULL_STRING;
char h_instr_isin[13]=APL_NULL_STRING;
char h_instr_isin_566[13]=APL_NULL_STRING;
char h_instr_name[36]=APL_NULL_STRING;
char h_instr_name_566[36]=APL_NULL_STRING;
char chr_h_tinstrdesc[61]=APL_NULL_STRING;
char chr_h_tinstrdesc_566[61]=APL_NULL_STRING;
char chr_h_code_desc[41]=APL_NULL_STRING;
char h_ratio_perc_ind=APL_NULL_CHAR;
char h_amt_rt_ind=APL_NULL_CHAR;
char h_entitl_base=APL_NULL_CHAR;
char h_typeofinstr[4]=APL_NULL_STRING;
char h_typeofinstr_566[4]=APL_NULL_STRING;
char h_regbrflag[3]=APL_NULL_STRING;
char h_regbrflag_566[3]=APL_NULL_STRING;
char h_instr_parent[9]=APL_NULL_STRING;
char chr_h_cname1[36]=APL_NULL_STRING;
char chr_h_alpha[13]=APL_NULL_STRING;
short i_alpha =0;
char l_pay_in[24] = APL_NULL_STRING;
char l_pay_out[24]=APL_NULL_STRING;
short i_pay_in=0;
short i_pay_out=0;
char chr_pty_bic_code[14] = APL_NULL_STRING; /*Vaibhav Karnik KOTAK-UAT I-SolveID:361*/
char chr_pty_bic_code_548[14] =APL_NULL_STRING; /*Vaibhav Karnik 11July2007 KOTAK I-SolveID:361*/
short i_chr_pty_bic_code = 0; /*Vaibhav Karnik KOTAK-UAT I-SolveID:361*/ 
short i_chr_pty_bic_code_548 = 0; /*Vaibhav Karnik KOTAK-UAT I-SolveID:361*/
char h_info1[51],chr_h_note2[51],chr_h_note3[51],chr_h_note4[51],chr_h_note5[51],chr_h_note6[51];
char chr_h_note7[51],chr_h_note8[51],h_note9[51],h_note10[51],chr_h_note11[51],chr_h_note12[51];
char chr_h_note13[51],chr_h_note14[51],chr_h_note15[51],chr_h_note16[51],chr_h_note17[51];
char chr_h_note18[51],h_note19[51],h_note20[51];
char h_new_dl_ind,chr_h_ratio[10],h_expire_date[7],h_rec_date[7],h_pymt_dt[7];
char h_rights_class,h_ex_date[7],h_respons_date[7],chr_h_sub_ratio[15];
char h_res_instr_code[9],h_info_nbr[5]=APL_NULL_STRING,chr_h_gen_dt[APL_DATE_LEN],h_ca_event[3],h_qty[100],h_code[3];
char h_info_1[1751],h_info_2[1751],h_info_3[1751],h_info_4[1751],h_clnt_clr_name[57];
char h_sub_new_quantity[20],h_sub_base_quantity[5];
char h_new_safek_quantity[8]=APL_NULL_STRING;
char h_old_safek_quantity[5]=APL_NULL_STRING; 				
char chr_h_count_acctyp[APL_FLAG_LENGTH] 	= APL_NULL_STRING;
char chr_h_domcpvtb[APL_CLIENT_LENGTH] 	= APL_NULL_STRING;
char h_taxable_ind[APL_FLAG_LENGTH] = APL_NULL_STRING;
char chr_h_multi_ccycode[APL_CCYCODE_LEN]=APL_NULL_STRING;          

char chr_l_ispartial_flg[APL_FLAG_LENGTH] = APL_NULL_STRING;
char chr_h_trd_cash_client[APL_IBANACC_LEN] = APL_NULL_STRING; 
char chr_h_gl_account[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
char chr_h_prepdate_new[17]=APL_NULL_STRING;
char chr_h_prepdate_new1[20]=APL_NULL_STRING;
char chr_h_em_prepdate_new1[20]=APL_NULL_STRING;
char chr_l_date_time_new[APL_DATE_LEN]=APL_NULL_STRING;
char chr_l_client_53[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
char chr_l_refno_53[17] = APL_NULL_STRING; 



char chr_l_ca_cashacc[APL_IBANACC_LEN] = APL_NULL_STRING;
short i_l_ca_cashacc = 0;	//Onsite fix dated 4th feb 2010 for Scotia - Swamy & Bagee -- Retro By Sana
char chr_l_temp_client[APL_CLIENT_LENGTH] = APL_NULL_STRING; 
char chr_stat[3]=APL_NULL_STRING;
char *z;


char chr_h_ratio_new[10] = APL_NULL_STRING;
char chr_h_decl_dt_new[9] = APL_NULL_STRING;
char chr_h_em_decl_dt_new[11] = APL_NULL_STRING;
char chr_h_ex_dt_new[9] = APL_NULL_STRING;
char chr_h_rec_dt_new[9] = APL_NULL_STRING;
char chr_h_respons_dt_new[9] = APL_NULL_STRING;
char chr_h_pay_dt_new[9] = APL_NULL_STRING;
char chr_h_ca_id_ent_stat[CORP_ID_LEN] = APL_NULL_STRING;
char chr_h_client_ent_stat[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_h_ft_number[5] = APL_NULL_STRING;
char chr_h_rtypeofinstr[4] = APL_NULL_STRING;
char chr_h_note1_new[51]=APL_NULL_STRING;
char chr_h_note2_new[51]=APL_NULL_STRING;
char chr_h_note3_new[51]=APL_NULL_STRING;
char chr_h_note4_new[51]=APL_NULL_STRING;
char chr_h_note5_new[51]=APL_NULL_STRING;
char chr_h_note6_new[51]=APL_NULL_STRING;
char chr_h_note7_new[51]=APL_NULL_STRING;
char chr_h_note8_new[51]=APL_NULL_STRING;
char h_note9_new[51]=APL_NULL_STRING;
char h_note10_new[51]=APL_NULL_STRING;
 
char chr_h_note11_new[51]=APL_NULL_STRING;
char chr_h_note12_new[51]=APL_NULL_STRING;
char chr_h_note13_new[51]=APL_NULL_STRING;
char chr_h_note14_new[51]=APL_NULL_STRING;
char chr_h_note15_new[51]=APL_NULL_STRING;
char chr_h_note16_new[51]=APL_NULL_STRING;
char chr_h_note17_new[51]=APL_NULL_STRING;
char chr_h_note18_new[51]=APL_NULL_STRING;
char h_note19_new[51]=APL_NULL_STRING;
char h_note20_new[51]=APL_NULL_STRING;
char chr_h_note21_new[51],chr_h_note22_new[51],chr_h_note23_new[51],chr_h_note24_new[51],chr_h_note25_new[51];
char chr_h_note26_new[51],chr_h_note27_new[51],chr_h_note28_new[51],h_note29_new[51],h_note30_new[51];

 
 char chr_h_note31_new[51],chr_h_note32_new[51],chr_h_note33_new[51],chr_h_note34_new[51],chr_h_note35_new[51];
 char chr_h_note36_new[51],chr_h_note37_new[51],chr_h_note38_new[51],h_note39_new[51],h_note40_new[51];
 char chr_h_note41_new[51],chr_h_note42_new[51],chr_h_note43_new[51],chr_h_note44_new[51],chr_h_note45_new[51];
 char chr_h_note46_new[51],chr_h_note47_new[51],chr_h_note48_new[51],h_note49_new[51],h_note50_new[51];
 char chr_h_note51_new[51],chr_h_note52_new[51],chr_h_note53_new[51],chr_h_note54_new[51],chr_h_note55_new[51];
 char chr_h_note56_new[51],chr_h_note57_new[51],chr_h_note58_new[51],h_note59_new[51],h_note60_new[51];
 

char h_instrdate[APL_DATE_LEN] = APL_NULL_STRING;
char h_moneydate[APL_DATE_LEN] = APL_NULL_STRING;
short i_instrdate=0;
short l_cond_ru=0;  
char chr_l_sm_recdt[APL_DATE_LEN] = APL_NULL_STRING; 
char chr_l_ns_issueclsdt[APL_DATE_LEN] = APL_NULL_STRING;
char chr_l_em_ns_issueclsdt[APL_DATE_LEN] = APL_NULL_STRING;
char l_tmp_syndmember[16] = APL_NULL_STRING;
char l_fin_syndmember[110] = APL_NULL_STRING;
char chr_l_tmp_issueclsdt[APL_DATE_LEN] = APL_NULL_STRING;
char chr_l_sm_prelim[2] = APL_NULL_STRING; 
char chr_l_systemdate[APL_DATE_LEN] = APL_NULL_STRING; 
char chr_ru_temp[100] = APL_NULL_STRING; 
short i_moneydate=0;
char chr_l_benchmark[10] = APL_NULL_STRING; /* Vedavati*/
char chr_faildesc3[200] = APL_NULL_STRING; /* ISKB 673 Chirag */
/*Nikhil*/
char chr_l_resparent_code[10] = APL_NULL_STRING ;
char chr_l_resparent_name[37] = APL_NULL_STRING ;
short i_resparent_code=0;
short i_resparent_name=0;
short l_i_tmp_syndmember=0;
int int_holiday_flag=0;
int l_count =0;
/*********/
short i_l_benchmark = 0;/*swamy added for sit pace issue # 1375 -- Retro by Sana from scotia */
char chr_h_new_op_type[3]=APL_NULL_STRING;

short i_decl_dt_new=0,i_em_decl_dt_new=0,i_ex_dt_new=0,i_rec_dt_new=0,i_respons_dt_new=0,i_pay_dt_new=0;
short i_ratio_new=0;
short i_sm_recdt = 0; 
short i_ns_issueclsdt= 0;
double   h_amount_recd_iso=0, h_quantity_recd_iso=0,h_instr_inc_bal_iso=0, h_quantity_due_iso=0;
double dbl_h_hold_amount =0;
double l_apply_qty = 0; /* ISKB 696 Chirag */
short i_hold_amount =0;
int      int_count_iso=0;
short i_note1_new=0,i_note2_new=0,i_note3_new=0,i_note4_new=0,i_note5_new=0;
short i_note6_new=0,i_note7_new=0,i_note8_new=0,i_note9_new=0,i_note10_new=0;


short i_note11_new=0,i_note12_new=0,i_note13_new=0,i_note14_new=0,i_note15_new=0;
short i_note16_new=0,i_note17_new=0,i_note18_new=0,i_note19_new=0,i_note20_new=0;
short i_note21_new=0,i_note22_new=0,i_note23_new=0,i_note24_new=0,i_note25_new=0;
short i_note26_new=0,i_note27_new=0,i_note28_new=0,i_note29_new=0,i_note30_new=0;


 short i_note31_new=0,i_note32_new=0,i_note33_new=0,i_note34_new=0,i_note35_new=0;
 short i_note36_new=0,i_note37_new=0,i_note38_new=0,i_note39_new=0,i_note40_new=0;
 short i_note41_new=0,i_note42_new=0,i_note43_new=0,i_note44_new=0,i_note45_new=0;
 short i_note46_new=0,i_note47_new=0,i_note48_new=0,i_note49_new=0,i_note50_new=0;
 short i_note51_new=0,i_note52_new=0,i_note53_new=0,i_note54_new=0,i_note55_new=0;
 short i_note56_new=0,i_note57_new=0,i_note58_new=0,i_note59_new=0,i_note60_new=0;
 
int l_int_temp= 0 ;
double h_safekeep_pos=0,h_fsafekeep_pos=0,h_closing_pr=0,h_nominal_value=0,h_rp_nomval=0,h_delamount=0,h_recamount=0,dbl_h_portval=0,h_mclosing_pr=0,h_safekeep_pos_new=0, l_nomval_568=0;
double h_nominal_value_566=0;
double h_sub_pr=0,h_instr_inc_bal=0,h_quantity_due=0,h_rt=0,h_earnings_rt=0,dbl_h_totshs=0;
short i_nomval_568=0;
 
double h_elig_entitl_pos1=0,dbl_h_int_per_unit = 0,dbl_h_tax_per_unit = 0,h_net_inc_amount = 0,h_tot_tax_amount;
short l_cond_tax=0; 
double l_566_avl_qty=0;
short i_566_avl_qty;
short l_eoc_maint=0;
short i_eocdom=0;
char chr_l_eocdom[66] = APL_NULL_STRING;

short i_closing_pr=0,i_prdt=0,i_faildetail=0,i_count_vtb=0,i_domestic_cpclr_name=0,i_mapword=0,i_portval=0,i_mclosprc=0,i_interdetail=0;
short i_instr_isin=0,i_entitl_base=0,i_ratio=0,i_earnings_rt=0,i_rt=0,i_instr_parent=0,i_safekeep_pos=0;
short i_instr_isin_566=0,i_pinstr_code_566=0;
short i_info1=0,i_note2=0,i_note3=0,i_note4=0,i_note5=0,i_note6=0,i_ratio_pct_ind=0;
short i_note7=0,i_note8=0,i_note9=0,i_note10=0,i_note11=0,i_note12=0;
short i_note13=0,i_note14=0,i_note15=0,i_note16=0,i_note17=0,i_note18=0;
short i_note19=0,i_note20=0,i_typeofinstr=0;
short i_amt_rt_ind = 0,i_info_nbr=0,i_res_instr_code=0,i_expire_date=0,i_min_inputdt=0;
short i_rec_date=0,i_ex_date=0,i_respons_date=0,i_pymt_dt=0,i_sub_pr=0,i_sub_ratio=0,i_rights_class=0,i_quantity_due=0,i_instr_inc_bal=0;
short i_info_1=0,i_info_2=0,i_info_3=0,i_info_4=0,i_new_dl_ind=0;
short i_count_acctyp=0, i_domcpvtb=0;

short i_trd_cash_account=0;
short i_ca_cashacc=0; 
short i_prepdate_new=0;
short i_prepdate_new1=0;
short i_em_prepdate_new1=0;
short i_ibbs_account=0;

short i_new_op_type=0;



char chr_temp_date[APL_DATE_LEN]=APL_NULL_STRING;
char chr_out_date[APL_DATE_LEN]=APL_NULL_STRING;
short i_out_date=0;
short i_temp_date=0;

char	chr_h_min_inputdt[APL_DATE_LEN] = APL_NULL_STRING;



double l_exchggrt = 1.0;
double r_exchggrt =1.0;
double l_grd_pos=0.0;
double  h_blk_safekeep_pos=0.0; /* Added by YOG on 26032009 - ISKB_2249 - For BLCK tag in 551N01/551R01 - BB Event Only */
double  h_elig_safekeep_pos=0.0; /* Added by YOG on 26032009 - ISKB_2249 - For BLCK tag in 551N01/551R01 - BB Event Only */
double h_nominal_value_BB=0; /* Added by YOG on 26032009  - ISKB_2249 - For BLCK tag in 551N01/551R01 - BB Event Only */
double  npos1=0;/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only */
char chr_h_euroconv[2];
char h_indentity_no[17];

char chr_l_emu_locncode[5];
int int_l_emu_locncode_ind = 0;


int int_period_flg=0;

char  chr_l_cont[2] = APL_NULL_STRING;


char chr_h_msg_sent_flg[2];       

char h_status_qual_ind[5]=APL_NULL_STRING;
char h_status_cd[7]=APL_NULL_STRING;
char h_reason_ql[7]=APL_NULL_STRING;
char h_reason_cd[5]=APL_NULL_STRING;
short i_status_qual_ind=0;
short i_status_cd=0;
short i_reason_ql=0;
short i_reason_cd=0;

double l_new_exchgrt_dbl=0.0;
char	 chr_l_new_exchrt_chr[16] = APL_NULL_STRING;
int int_j=0;
double h_new_totportfolio_amt=0;
double h_rflocnsafekeep_pos=0;
double h_dflocnsafekeep_pos=0;
double h_new_tradsafekeep_pos=0; 
double h_rflocnsafekeep_pos1=0;
double h_dflocnsafekeep_pos1=0;
double h_dfsafekeep_pos=0;
double h_rfsafekeep_pos=0;
double h_rflocnsafekeep_pos2=0;
double h_dflocnsafekeep_pos2=0;
int int_no_of_chars_of_footnote = 0; 
int int_used_no_of_chars = 0;        


double res_felig_entitl_pos     = 0.00;
double new_res_felig_entitl_pos = 0.00;
double adj_res_felig_entitl_pos = 0.00;


MS_STATIC_VAL *l_ms_dynamic_val_a=NULL;
note_desc *l_note_new = NULL;

char chr_l_client_568[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char chr_l_country_568[APL_CTRY_CODE_LEN]=APL_NULL_STRING;
char chr_l_ce_typ_568[EVT_CLASS_]=APL_NULL_STRING;
char chr_l_instrcode_568[APL_INSTRUMENTCODE_LEN]=APL_NULL_STRING;
char chr_l_ca_id_568[CORP_ID_LEN]=APL_NULL_STRING;
char chr_l_eventid_568[18]=APL_NULL_STRING;   
char chr_l_refno_568[APL_TXNREFNO_LEN]=APL_NULL_STRING;
char chr_l_curr_msgrefno_568[APL_TXNREFNO_LEN]=APL_NULL_STRING;
char chr_l_prev_msgrefno_568[APL_TXNREFNO_LEN]=APL_NULL_STRING;
char chr_l_msgrefno_568_curr[APL_TXNREFNO_LEN]=APL_NULL_STRING;
char chr_l_msgrefno_568_prev[APL_TXNREFNO_LEN]=APL_NULL_STRING;
char chr_l_prev_msgno_568[7]=APL_NULL_STRING;
char chr_l_frevetyp_568[41]=APL_NULL_STRING;
char chr_l_prepdate_new_568[17]=APL_NULL_STRING;
char chr_l_ftypeofinstr_568[4]=APL_NULL_STRING;
char chr_l_isin_568[13]=APL_NULL_STRING;
char chr_l_instrdesc_568[36]=APL_NULL_STRING;
char chr_l_fent_pos_568[30]=APL_NULL_STRING;
char chr_l_footnote_number[CA_INFOSEQ_LEN]=APL_NULL_STRING;
char chr_h_note_1_new[1751],chr_h_note_2_new[1751],chr_h_note_3_new[1751],chr_h_note_4_new[1751];
char chr_h_note_new[8000] = APL_NULL_STRING;
char chr_l_cont_568[2] = APL_NULL_STRING;
char chr_h_ccycode_new[APL_CCYCODE_LEN] = APL_NULL_STRING;

short i_note_1_new=0,i_note_2_new=0,i_note_3_new=0,i_note_4_new=0;
int  int_l_no_of_lines_shown=0,int_line_no_new=0,int_no_of_chars_new=0;
int  int_temp_sel_ctr=0,l_called_send560=0,int_temp_count_568=0;
int  l_is_563N02=0;
char chr_l_entbasis_568;
long l_msg_seq_no_568=0;
long l_pass_back_seq_no_95=0;
double h_stock_ae_rate = 0;


char chr_h_rt_client[11] = APL_NULL_STRING;
char chr_h_rt_refno[17] = APL_NULL_STRING;
char chr_h_rt_seme[17] = APL_NULL_STRING;
char chr_h_rt_eventid[17] = APL_NULL_STRING;
char chr_h_rt_access_date[APL_DATE_LEN] = APL_NULL_STRING;
char chr_h_access_date[APL_DATE_LEN] = APL_NULL_STRING;
short i_rt_account=0,i_rt_refno=0,i_rt_prevseme=0,i_rt_eventid=0,i_rt_access_date=0;



double l_h_new_avai_safekeep_pos=0;
double l_h_new_navl_safekeep_pos=0;
double l_h_new_subbal_safekeep_pos=0;
char chr_l_h_new_subbal_qual[5]=APL_NULL_STRING;
short l_i_new_subbal_qual=0;

double h_penr_safekeep_pos=0;
double h_pend_safekeep_pos=0;


double   dbl_l_aggr_avai    = 0;
double   dbl_l_aggr_navl    = 0;
double   dbl_l_aggr_penr    = 0;
double   dbl_l_aggr_pend    = 0;
double   l_aggr_rfsafekeep_pos = 0;
double   l_aggr_dfsafekeep_pos = 0;



char chr_h_isin_parent[13]=APL_NULL_STRING;
char chr_h_instrdesc_parent[36]=APL_NULL_STRING;
char l_account_93B[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char l_instr_code_93B[APL_INSTRUMENTCODE_LEN]=APL_NULL_STRING;
char l_entl_basis_93B[2] = APL_NULL_STRING;
double h_total_safek_93B=0;
double h_unAuthTrdPos = 0;
char chr_l_eclr_client[11]=APL_NULL_STRING; 


double l_new_nom_fmt=0;


char h_psetparty[161] = APL_NULL_STRING;
char chr_h_pset_tmp[161] = APL_NULL_STRING;
char chr_h_pset1[161] = APL_NULL_STRING;
char chr_h_pset2[161] = APL_NULL_STRING;
char chr_h_pset3[161] = APL_NULL_STRING;
char chr_h_pset4[161] = APL_NULL_STRING;
char chr_h_dsn[9] = APL_NULL_STRING;
char h_95Rtag[6] = APL_NULL_STRING;
short i_psetparty = 0;
char l_narrative[41] = APL_NULL_STRING;
short i_narrative = 0;
char l_domcp_596N01[12] =APL_NULL_STRING;

char chr_h_link_seq_num[10] =APL_NULL_STRING; 
DL_MSGLINKDET_STRUCT_H l_dl_msglinkdet_struct_h;
DL_MSGLINKDET_STRUCT_I l_dl_msglinkdet_struct_i;

short i_link_seq_num = 0; 
DL_MSGLINK_STRUCT_H   l_dl_msglink_struct_h ; 
PRO_GSEQNUM_STRUCT_H         *l_progseqnum_struct_h     = NULL;
long  chr_l_seq_num = 0;
char chr_l_addinfo_uniq_seme[31]=APL_NULL_STRING;
short  i_addinfo_uniq_seme =0;
char chr_l_input_dt[APL_DATE_LEN]=APL_NULL_STRING;
char chr_l_input_dt_new[APL_DATE_LEN]=APL_NULL_STRING;
short i_new_dt=0;


char chr_l_temp_date[APL_DATE_LEN]=APL_NULL_STRING;
char chr_l_temp_safek1[26]=APL_NULL_STRING;
char chr_l_temp_safek[26]=APL_NULL_STRING;
char chr_l_last_gen_date[APL_DATE_LEN]=APL_NULL_STRING;
short i_last_gen_date =0;
int	int_l_calc_opnbal=0;
char chr_l_date_time_new1[APL_DATE_LEN]=APL_NULL_STRING;



 char chr_l_payment_status[3]= APL_NULL_STRING;
 //char chr_l_pay_srl_nbr[3]=APL_NULL_STRING;
 char chr_l_pay_srl_nbr[501]=APL_NULL_STRING; //Added on 12/06/2012 for AIX UAT Issue
 char chr_l_pay_addinfo_status[3] = APL_NULL_STRING;
char chr_l_temp[2]=APL_NULL_STRING;
EXEC SQL VAR chr_l_temp IS STRING;


char chr_l_dummy_data_fname[PATH_LENGTH] ;


char chr_l_client_mult_ccy[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char chr_l_refno_mult_ccy[APL_TXNREFNO_LEN]=APL_NULL_STRING;
char chr_l_trdccy[APL_CCYCODE_LEN] = APL_NULL_STRING;

char chr_l_h_sysdate[APL_DATE_LEN] = APL_NULL_STRING;
char chr_l_stcoval1[51] = APL_NULL_STRING; 
char chr_l_stcoval2[51] = APL_NULL_STRING; 
char chr_l_stcoval3[51] = APL_NULL_STRING; 
short l_i_sysdate = 0 ;

double l_trdamount=0;
double l_trdcost=0;

short l_cond_mult_ccy=0;
short l_cond_gr_onexchange=0;    
short l_cond_seven_dec=0;
short l_cond_ca_7dec=0;
char chr_h_seven_dec_str[12]=APL_NULL_STRING;



char chr_l_safetag[6] = APL_NULL_STRING;
char chr_l_dereagtag[6] = APL_NULL_STRING;
char chr_l_decurecutag[6] = APL_NULL_STRING;
char chr_l_sellbuyrtag[6] =APL_NULL_STRING;
char chr_l_instrtag[6]      =APL_NULL_STRING;
char chr_l_dereitag[6]      =APL_NULL_STRING;
char l_95RDSN[11]	=APL_NULL_STRING;
char chr_l_domcpacc[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_l_countacc[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_l_clientof[APL_CLIENT_LENGTH] = APL_NULL_STRING;
char chr_l_countacnm[36]    =APL_NULL_STRING;
char chr_l_clientof1[36]   =APL_NULL_STRING;
char chr_h_domcpacbic[13]   = APL_NULL_STRING;
char chr_h_countaccbic[13]  = APL_NULL_STRING;
char chr_h_clientofbic[13] = APL_NULL_STRING;
char chr_l_dbcountaccnm[36] =APL_NULL_STRING;
short i_dbcountaccnm=0;
short i_domcpacbic=0;
short i_countaccbic=0;
short i_accountofbic=0;



double l_earnings_568 = 0 ;
double l_earnings_rt_568 = 0;
char chr_l_decl_julian_dt[4] = APL_NULL_STRING;
char chr_l_decl_year[3] =APL_NULL_STRING;
char chr_l_event_no_563[3]=APL_NULL_STRING;
char chr_l_eventid_563[17]=APL_NULL_STRING;
int int_l_instrcode_len =0;
char chr_l_ce_typ_563[3]=APL_NULL_STRING;
short i_ce_typ_563 =0;
char chr_l_caid_563[21]=APL_NULL_STRING;
short i_caid_563 =0;
char chr_l_note_nbr_563[CA_INFOSEQ_LEN] =APL_NULL_STRING;
short i_note_nbr_563 =0;
char chr_l_instrcode_563[9]=APL_NULL_STRING;
short i_instr_code_563 =0;
char p_temp_pos_93B[30] =APL_NULL_STRING;


char chr_h_rp_isin[13] = APL_NULL_STRING;
short i_rp_isin    = 0;
char chr_h_pinstrcode[9] = APL_NULL_STRING;
char chr_h_pinstrcode_566[9] = APL_NULL_STRING;
short i_pinstr_code  = 0;
char chr_h_rp_instrdesc[36] = APL_NULL_STRING;
int chr_l_txn_type=0;    
char chr_l_unique_ref_num[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING;    


char chr_l_cons_flg[2] = APL_NULL_STRING;


char	chr_h_str_amt[18] = APL_NULL_STRING;
char	chr_h_str_temp[18] = APL_NULL_STRING;
double h_final_amount = 0.0;
double dbl_h_temp_amount;
double dbl_h_temp_amount1;
double dbl_h_ent_pos=0;  /* Vaibhav 18March2008 ISKB:998*/
int int_i_temp_lastdigit = 0;
int int_period_flg1 =0;



char chr_h_caon_no[4] = APL_NULL_STRING;
char chr_h_caop_code[5] = APL_NULL_STRING;
short i_caon_no=0;
short i_caop_code=0;




double l_earnings = 0 ;
double l_EARNINGS_RATE = 0;
int int_l_nrtoend = 0;
int int_l_slash_count= 0;
int int_l_pos = 0;
int int_l_accpopulated=0;

char chr_l_568_ind[5] = APL_NULL_STRING;	
char chr_l_564_prev_seme[17] = APL_NULL_STRING;	

char chr_h_prev_inputdt[APL_DATE_LEN];
char chr_h_prev_msgno[7]=APL_NULL_STRING;
char chr_l_client[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char chr_l_refno[APL_TXNREFNO_LEN]=APL_NULL_STRING;
short int int_i_prev_input_dt = 0, int_i_prev_msgno = 0;
char chr_h_temp_date[9]=APL_NULL_STRING;


char *chr_posofspace = (char *)NULL;
char l_count_vtb[APL_CLIENT_LENGTH]= APL_NULL_STRING;
char chr_l_domcpac[APL_CLIENT_LENGTH]= APL_NULL_STRING;
char h_info[8000]= APL_NULL_STRING;
char chr_l_date[7]=APL_NULL_STRING;
char *chr_temp_part=NULL;
char chr_h_faildesc1[26]=APL_NULL_STRING;
char chr_h_faildesc2[25]=APL_NULL_STRING;
char h_proc_oth[241] = APL_NULL_STRING;
char chr_h_othproc1[61]= APL_NULL_STRING;
char chr_p_ca_id[CORP_ID_LEN]=APL_NULL_STRING;
char chr_prev_client[11] = APL_NULL_STRING;
char chr_new_addr_part[241] = APL_NULL_STRING; 
char chr_new_othproc[36]    = APL_NULL_STRING; 
char *chr_temp_temp_part = NULL;
char chr_l_dot[49]= APL_NULL_STRING;
char chr_l_ddate[11]=APL_NULL_STRING;
char h_custinfo[71]=APL_NULL_STRING;
char chr_h_iscc[2]=APL_NULL_STRING;

char chr_l_sub_new_qty[20]= APL_NULL_STRING;
char chr_l_sub_base_qty[5]= APL_NULL_STRING;

char chr_l_sub_ratio[18]=APL_NULL_STRING;


char chr_l_new_stock_qty[8]=APL_NULL_STRING;
char chr_l_old_stock_qty[5]=APL_NULL_STRING;
char chr_l_new_ratio[18]=APL_NULL_STRING;
char chr_l_new_sub_ratio[18]=APL_NULL_STRING;
int int_dec_pos_new = 0, int_dec_cnt_new = 0;



char chr_h_new_custnote[71]    = APL_NULL_STRING;
char chr_new_custnote_part[71] = APL_NULL_STRING;
char chr_new_custnote1[36]     = APL_NULL_STRING;
char chr_new_custnote2[36]     = APL_NULL_STRING;


double chr_l_exch_rate=0,p_pos=0,npos=0,chr_l_qty_due=0,msttotportval=0,subtotportval=0,msttotshs=0,subtotshs=0,subexistflg = 0;
int int_nlen=0,int_l_diff = 0,int_retstat = 0,int_fetch_cnt=0,int_l_event_nbr=0,int_returnval=0,dbl_i=0,int_dec_pos=0;

double h_prev_settl_quantity=0,h_prev_settl_amount=0,h_curr_settl_quantity=0,h_orig_settl_quantity=0;
double h_curr_settl_amount=0,h_orig_settl_amount=0,h_remain_settl_quantity=0,h_remain_settl_amount=0;

char chr_l_tot[22];
	 char  chr_h_isinuse;
MS_STATIC_VAL *l_ms_dynamic_val = NULL;
note_desc *chr_l_note = NULL;
double pos001=0,h_amt=0,h_delquantity=0,h_recquantity=0;
double dbl_h_hisamount=0,h_hisdelquantity=0,h_hisrecquantity=0;
int msg_line_no=0,int_no_of_chars=0,int_stat_ctr=0,int_dec_cnt=0;
CA_CASECEVENT_STRUCT_H l_casecevent_struct_h;
CA_CASECEVENT_STRUCT_I l_ca_casecevent_struct_ia_a;
char chr_eventrecfnd[2] = APL_NULL_STRING;


char chr_h_count_extacc[16] = APL_NULL_STRING;   
short i_count_extacc    = 0;


double h_whtae_rate_dec = 0.0 ;
char chr_h_netproc_dec[APL_REPDESC_LENGTH] =APL_NULL_STRING;
char chr_h_netproc_int[APL_REPDESC_LENGTH] = APL_NULL_STRING ;
char chr_h_tax_dec[APL_REPDESC_LENGTH] = APL_NULL_STRING ;
char chr_h_tax_int[APL_REPDESC_LENGTH] = APL_NULL_STRING ;



double paid_net = 0.0;
double dbl_ipaid_net = 0.0;
double quantity_paid = 0.0;
double current_quantity = 0.0;
double curr_amt = 0.0;



char h_tag20_caid[CORP_ID_LEN] = APL_NULL_STRING;
EXEC SQL VAR h_tag20_caid IS STRING;


 
short l_cond_tax1 = 0; 
short    l_mccy_cacc_exists = 0;    
char     chr_l_h_sundry_account[APL_CLIENT_LENGTH] = APL_NULL_STRING;   



char chr_l_ca_id[CORP_ID_LEN]=APL_NULL_STRING;
char chr_l_sys_date_time[APL_DATE_LEN]=APL_NULL_STRING;
char chr_l_prelim_ind[2]=APL_NULL_STRING;
char chr_l_curr_msgrefno[APL_TXNREFNO_LEN]=APL_NULL_STRING;
char chr_l_curr_link_type[3]=APL_NULL_STRING;
char chr_l_new_msg_no[7]=APL_NULL_STRING;
char chr_l_lnk_msg_no[7]=APL_NULL_STRING;
char chr_l_lnk_msg[4]=APL_NULL_STRING;
CAMESGLINK_STRUCT_H l_camesglink_struct_h ;


char chr_l_setdet[6]=APL_NULL_STRING;


long int int_l_response_dt = 0;
long int int_l_buyresp_dt = 0;
long int int_l_sellresp_dt = 0;
char chr_l_seqd_val[4]=APL_NULL_STRING;
char chr_l_seqe_val[4]=APL_NULL_STRING;


double l_inst_hold = 0.0;
double l_uninst_hold = 0.0;
short i_inst_hold = 0;

double l_rev_ratio = 0.0;
double l_d_old_stock_quantity = 0.0;
double l_d_new_stock_quantity = 0.0;
double l_d_new_stock_ae_rate = 1.0;
double l_temp_uninbal = 0.0;
double l_temp_inbal = 0.0;




	
char chr_h_updatemode_new=APL_NULL_CHAR;
char chr_h_pricedt_new[9]=APL_NULL_STRING;
char chr_h_roundstring_new[6]=APL_NULL_STRING;
char chr_h_asofdate_new[9]=APL_NULL_STRING;
int	int_h_decimallen_new=0;
short i_updatemode_new=0;
short i_pricedt_new=0;
short l_cond_cacashacc = 0; 
short l_cond_ibanacc = 0; 
	


double dbl_h_572_amount = 0;
double h_572_quantity    = 0;
double h_572_orig_qty= 0;
short i_572_amount  =  0;
short i_572_qty     =  0;
short i_572_origqty =  0;


char chr_l_uniq_seme_refno[APL_TXNREFNO_LEN+1]=APL_NULL_STRING;		//Changed by Sana for debug purpose
memset(chr_l_uniq_seme_refno,APL_NULL_CHAR,sizeof(chr_l_uniq_seme_refno));
memset(chr_l_pay_srl_nbr,APL_NULL_CHAR,sizeof(chr_l_pay_srl_nbr));//Added on 12/06/2012 for AIX UAT Issue
char chr_l_uniq_client[APL_CLIENT_LENGTH]=APL_NULL_STRING;
char chr_l_uniq_msgno[4] = APL_NULL_STRING;

char chr_l_temp_ca_id[CORP_ID_LEN] = APL_NULL_STRING; 
char chr_l_temp_refno[APL_TXNREFNO_LEN] = APL_NULL_STRING; 

char 	chr_l_548_stat_blck_num[4] = 	APL_NULL_STRING;
char 	chr_l_stat_blck_num1[4] = 	APL_NULL_STRING;
char	chr_l_548_stat_qual[5]	=		APL_NULL_STRING;
char	chr_l_548_stat_code[7]	=		APL_NULL_STRING;
char	chr_l_548_reas_qual[7]	=		APL_NULL_STRING;
char	chr_l_548_reas_code[5]	=		APL_NULL_STRING;
char	chr_l_548_note[36]			=		APL_NULL_STRING;
char	chr_l_548_failcode[3]	=		APL_NULL_STRING;
int	int_l_548_subfailcode	=	0	;
char	chr_h_max_access_stamp[20]	=		APL_NULL_STRING;
short	i_548_note=0;
short	i_548_reas_code=0;
short	i_548_reas_qual=0;
short	i_548_stat_code=0;
short	i_548_stat_qual=0;
short i_548_stat_blck_num=0;
short	i_max_access_stamp=0;
short i_548_failcode=0;
short i_548_subfailcode=0;
int	int_l_no_reas_codes	=	0;
char 	chr_l_stat_blck_num2[4] = 	APL_NULL_STRING;
int	int_l_stat_blck_num3		=	0;

char l_sebi_domcp[21] = APL_NULL_STRING;
short i_sebi_domcp= 0;
char l_sebi_countacc[21] = APL_NULL_STRING;
short i_sebi_countacc= 0;
char l_cln_ucc_code[13] = APL_NULL_STRING;
short i_cln_ucc_code= 0;
char l_cln_mapinid[13] = APL_NULL_STRING;
short i_cln_mapinid= 0;

char *chr_h_note_for_sm[SMAXLINE] ;
/* NIKHIL S adding for SM TAIL FIX*/
int l_tail_pos = 0 ;
int l_counter = 0;
int l_temp =0 ;
int l_length =0;
char chr_l_typeoftrd[3] = APL_NULL_STRING;   
char *chr_h_notefld;
short int_l_ctr=0;
char *chr_str_last = APL_NULL_CHAR;
char chr_l_place_code[60] = APL_NULL_STRING;
char  chr_l_563_moneydt[20] =  APL_NULL_STRING;
short l_pay_note_ind = 1; 
int int_l_count 	=	0; 
#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif

double h_eligentitl_pos=0;

/*Added by siva.ganapathi for ISKB_3990 -- Displaying eliglble positions in linked event message-- started*/
char l_attach_corp_id[CORP_ID_LEN] = APL_NULL_STRING;
int l_evt_priority = 0;
short i_evt_priority=0,i_attach_corp_id=0;
/*Added by siva.ganapathi for ISKB_3990 -- Displaying eliglble positions in linked event message-- Ended*/

EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL VAR l_attach_corp_id IS STRING;//Added by siva.ganapathi for ISKB_3990 Displaying eliglble positions in linked event message
EXEC SQL VAR chr_l_dbcountaccnm  IS STRING;
EXEC SQL VAR chr_l_countacc  IS STRING;
EXEC SQL VAR chr_h_domcpacbic  IS STRING;
EXEC SQL VAR chr_h_countaccbic IS STRING;
EXEC SQL VAR chr_h_clientofbic  IS STRING;
EXEC SQL VAR chr_h_isin_parent  IS STRING;
EXEC SQL VAR chr_h_instrdesc_parent IS STRING;
EXEC SQL VAR l_account_93B IS STRING;
EXEC SQL VAR l_instr_code_93B   IS STRING;
EXEC SQL VAR l_cln_mapinid   IS STRING;
EXEC SQL VAR l_cln_ucc_code   IS STRING;
EXEC SQL VAR l_entl_basis_93B   IS STRING;


EXEC SQL VAR chr_h_netproc_dec IS STRING;
EXEC SQL VAR chr_h_netproc_int IS STRING;

EXEC SQL VAR h_instr_code  IS STRING;
EXEC SQL VAR h_sub_new_quantity IS STRING;
EXEC SQL VAR chr_h_fent_pos IS STRING;
EXEC SQL VAR chr_h_blk_safekeep_pos IS STRING;	/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only */

EXEC SQL VAR h_ca_event IS STRING;
EXEC SQL VAR h_code IS STRING;
EXEC SQL VAR chr_h_alpha IS STRING;
EXEC SQL VAR l_pay_in  IS STRING;
EXEC SQL VAR l_pay_out IS STRING;
EXEC SQL VAR h_currencycode IS STRING;
EXEC SQL VAR h_regbrflag IS STRING;
EXEC SQL VAR h_typeofinstr IS STRING;
EXEC SQL VAR h_loccode IS STRING;
EXEC SQL VAR h_dl_client IS STRING;
EXEC SQL VAR h_clnt_clr_name IS STRING;
EXEC SQL VAR chr_h_cname1 IS STRING;
EXEC SQL VAR h_mstclt  IS STRING;
EXEC SQL VAR chr_l_eocdom IS STRING;     
EXEC SQL VAR h_faildetail IS STRING;
EXEC SQL VAR chr_h_count_vtb IS STRING;
EXEC SQL VAR h_domestic_cpclr_name IS STRING;
EXEC SQL VAR chr_h_domcpname1 IS STRING;
EXEC SQL VAR h_instr_isin IS STRING;
EXEC SQL VAR h_qty IS STRING;
EXEC SQL VAR h_instr_name IS STRING;
EXEC SQL VAR chr_h_tinstrdesc IS STRING;
EXEC SQL VAR chr_h_code_desc IS STRING;
EXEC SQL VAR h_info1 IS STRING;
EXEC SQL VAR chr_h_note2 IS STRING;
EXEC SQL VAR chr_h_note3 IS STRING;
EXEC SQL VAR chr_h_note4 IS STRING;
EXEC SQL VAR chr_h_note5 IS STRING;
EXEC SQL VAR chr_h_note6 IS STRING;
EXEC SQL VAR chr_h_note7 IS STRING;
EXEC SQL VAR chr_h_note8 IS STRING;
EXEC SQL VAR h_note9 IS STRING;
EXEC SQL VAR h_note10 IS STRING;
EXEC SQL VAR chr_h_note11 IS STRING;
EXEC SQL VAR chr_h_note12 IS STRING;
EXEC SQL VAR chr_h_note13 IS STRING;
EXEC SQL VAR chr_h_note14 IS STRING;
EXEC SQL VAR chr_h_note15 IS STRING;
EXEC SQL VAR chr_h_note16 IS STRING;
EXEC SQL VAR chr_h_note17 IS STRING;
EXEC SQL VAR chr_h_note18 IS STRING;
EXEC SQL VAR h_note19 IS STRING;
EXEC SQL VAR h_note20 IS STRING;
EXEC SQL VAR h_info_1 IS STRING;
EXEC SQL VAR h_info_2 IS STRING;
EXEC SQL VAR h_info_3 IS STRING;
EXEC SQL VAR h_info_4 IS STRING;
EXEC SQL VAR h_expire_date IS STRING;
EXEC SQL VAR chr_h_min_inputdt IS STRING;
EXEC SQL VAR h_rec_date IS STRING;
EXEC SQL VAR h_res_instr_code IS STRING;
EXEC SQL VAR h_pymt_dt IS STRING;
EXEC SQL VAR h_ex_date IS STRING;
EXEC SQL VAR h_respons_date IS STRING;
EXEC SQL VAR chr_h_sub_ratio IS STRING;
EXEC SQL VAR chr_h_ratio IS STRING;
EXEC SQL VAR h_info_nbr IS STRING;
EXEC SQL VAR h_instr_parent IS STRING;
EXEC SQL VAR chr_h_gen_dt IS STRING;
EXEC SQL VAR h_taxable_ind IS STRING;

EXEC SQL VAR chr_h_euroconv IS STRING;
EXEC SQL VAR h_indentity_no IS STRING;
EXEC SQL VAR chr_l_emu_ccycode IS STRING;
EXEC SQL VAR chr_l_grd_ccycode IS STRING;

EXEC SQL VAR chr_l_emu_locncode IS STRING;

EXEC SQL VAR chr_l_ispartial_flg IS STRING;
EXEC SQL VAR chr_h_trd_cash_client IS STRING;
EXEC SQL VAR chr_h_gl_account IS STRING;
EXEC SQL VAR chr_l_client_53 IS STRING;
EXEC SQL VAR chr_l_refno_53 IS STRING;


EXEC SQL VAR chr_h_msg_sent_flg IS STRING; 
EXEC SQL VAR h_new_safek_quantity IS STRING; 
EXEC SQL VAR h_old_safek_quantity IS STRING; 
EXEC SQL VAR chr_l_sm_recdt IS STRING; 
EXEC SQL VAR chr_l_ns_issueclsdt IS STRING;
EXEC SQL VAR chr_l_em_ns_issueclsdt IS STRING;
EXEC SQL VAR l_tmp_syndmember IS STRING;
EXEC SQL VAR l_fin_syndmember IS STRING;
EXEC SQL VAR chr_l_tmp_issueclsdt IS STRING;
EXEC SQL VAR chr_l_sm_prelim IS STRING;  


EXEC SQL VAR chr_l_h_sysdate   IS STRING ;


EXEC SQL VAR chr_h_prev_inputdt IS STRING;
EXEC SQL VAR chr_h_prev_msgno IS STRING;
EXEC SQL VAR chr_l_client IS STRING;
EXEC SQL VAR chr_l_refno IS STRING;
EXEC SQL VAR chr_h_temp_date IS STRING;



EXEC SQL VAR chr_l_note_nbr_563  IS STRING;
EXEC SQL VAR chr_l_caid_563  IS STRING;
EXEC SQL VAR chr_l_ce_typ_563  IS STRING;
EXEC SQL VAR chr_l_eventid_563  IS STRING;
EXEC SQL VAR chr_l_event_no_563  IS STRING;
EXEC SQL VAR chr_l_decl_year  IS STRING;
EXEC SQL VAR chr_l_decl_julian_dt  IS STRING;
EXEC SQL VAR chr_l_instrcode_563  IS STRING;

EXEC SQL VAR h_status_qual_ind IS STRING;
EXEC SQL VAR h_reason_ql IS STRING;
EXEC SQL VAR h_status_cd IS STRING;
EXEC SQL VAR h_reason_cd IS STRING;


EXEC SQL VAR chr_l_ca_cashacc IS STRING;
EXEC SQL VAR chr_l_temp_client IS STRING;


EXEC SQL VAR   chr_h_ratio_new      IS STRING;
EXEC SQL VAR   chr_h_decl_dt_new    IS STRING;
EXEC SQL VAR   chr_h_em_decl_dt_new    IS STRING;
EXEC SQL VAR   chr_h_ex_dt_new      IS STRING;
EXEC SQL VAR   chr_h_rec_dt_new     IS STRING;
EXEC SQL VAR   chr_h_respons_dt_new IS STRING;
EXEC SQL VAR   chr_h_pay_dt_new     IS STRING;
EXEC SQL VAR   chr_h_ca_id_ent_stat IS STRING;
EXEC SQL VAR   chr_h_client_ent_stat  IS STRING;
EXEC SQL VAR chr_h_ft_number IS STRING;
EXEC SQL VAR chr_h_rtypeofinstr IS STRING;
EXEC SQL VAR chr_h_note1_new IS STRING;
EXEC SQL VAR chr_h_note2_new IS STRING;
EXEC SQL VAR chr_h_note3_new IS STRING;
EXEC SQL VAR chr_h_note4_new IS STRING;
EXEC SQL VAR chr_h_note5_new IS STRING;
EXEC SQL VAR chr_h_note6_new IS STRING;
EXEC SQL VAR chr_h_note7_new IS STRING;
EXEC SQL VAR chr_h_note8_new IS STRING;
EXEC SQL VAR h_note9_new IS STRING;
EXEC SQL VAR h_note10_new IS STRING;


EXEC SQL VAR chr_h_note11_new IS STRING;
EXEC SQL VAR chr_h_note12_new IS STRING;
EXEC SQL VAR chr_h_note13_new IS STRING;
EXEC SQL VAR chr_h_note14_new IS STRING;
EXEC SQL VAR chr_h_note15_new IS STRING;
EXEC SQL VAR chr_h_note16_new IS STRING;
EXEC SQL VAR chr_h_note17_new IS STRING;
EXEC SQL VAR chr_h_note18_new IS STRING;
EXEC SQL VAR h_note19_new IS STRING;
EXEC SQL VAR h_note20_new IS STRING;
EXEC SQL VAR chr_h_note21_new IS STRING;
EXEC SQL VAR chr_h_note22_new IS STRING;
EXEC SQL VAR chr_h_note23_new IS STRING;
EXEC SQL VAR chr_h_note24_new IS STRING;
EXEC SQL VAR chr_h_note25_new IS STRING;
EXEC SQL VAR chr_h_note26_new IS STRING;
EXEC SQL VAR chr_h_note27_new IS STRING;
EXEC SQL VAR chr_h_note28_new IS STRING;
EXEC SQL VAR h_note29_new IS STRING;
EXEC SQL VAR h_note30_new IS STRING;

 
EXEC SQL VAR chr_h_note31_new IS STRING;
EXEC SQL VAR chr_h_note32_new IS STRING;
EXEC SQL VAR chr_h_note33_new IS STRING;
EXEC SQL VAR chr_h_note34_new IS STRING;
EXEC SQL VAR chr_h_note35_new IS STRING;
EXEC SQL VAR chr_h_note36_new IS STRING;
EXEC SQL VAR chr_h_note37_new IS STRING;
EXEC SQL VAR chr_h_note38_new IS STRING;
EXEC SQL VAR h_note39_new IS STRING;
EXEC SQL VAR h_note40_new IS STRING;
EXEC SQL VAR chr_h_note41_new IS STRING;
EXEC SQL VAR chr_h_note42_new IS STRING;
EXEC SQL VAR chr_h_note43_new IS STRING;
EXEC SQL VAR chr_h_note44_new IS STRING;
EXEC SQL VAR chr_h_note45_new IS STRING;
EXEC SQL VAR chr_h_note46_new IS STRING;
EXEC SQL VAR chr_h_note47_new IS STRING;
EXEC SQL VAR chr_h_note48_new IS STRING;

EXEC SQL VAR h_note59_new IS STRING;
EXEC SQL VAR h_note60_new IS STRING;
EXEC SQL VAR chr_l_country_568   IS STRING;
EXEC SQL VAR chr_l_ce_typ_568   IS STRING;
EXEC SQL VAR chr_l_instrcode_568   IS STRING;
EXEC SQL VAR chr_l_ca_id_568   IS STRING;
EXEC SQL VAR chr_l_eventid_568   IS STRING;
EXEC SQL VAR chr_l_refno_568   IS STRING;
EXEC SQL VAR chr_l_curr_msgrefno_568   IS STRING;
EXEC SQL VAR chr_l_prev_msgrefno_568   IS STRING;
EXEC SQL VAR chr_l_msgrefno_568_curr   IS STRING;
EXEC SQL VAR chr_l_msgrefno_568_prev   IS STRING;
EXEC SQL VAR chr_l_prev_msgno_568   IS STRING;
EXEC SQL VAR chr_l_frevetyp_568   IS STRING;
EXEC SQL VAR chr_l_prepdate_new_568   IS STRING;
EXEC SQL VAR chr_l_ftypeofinstr_568   IS STRING;
EXEC SQL VAR chr_l_isin_568   IS STRING;
EXEC SQL VAR chr_l_instrdesc_568   IS STRING;
EXEC SQL VAR chr_l_fent_pos_568   IS STRING;
EXEC SQL VAR chr_l_footnote_number   IS STRING;
EXEC SQL VAR chr_h_note_1_new   IS STRING;
EXEC SQL VAR chr_h_note_2_new   IS STRING;
EXEC SQL VAR chr_h_note_3_new   IS STRING;
EXEC SQL VAR chr_h_note_4_new   IS STRING;
EXEC SQL VAR chr_h_note_new   IS STRING;
EXEC SQL VAR chr_h_ccycode_new IS STRING;

EXEC SQL VAR chr_l_client_mult_ccy   IS STRING;
EXEC SQL VAR chr_l_refno_mult_ccy IS STRING;
EXEC SQL VAR chr_l_trdccy IS STRING;
EXEC SQL var h_psetparty IS STRING;
EXEC SQL var chr_h_link_seq_num IS STRING;
EXEC SQL VAR l_dl_msglinkdet_struct_h.h_sequence_name IS STRING;
EXEC SQL VAR l_dl_msglinkdet_struct_h.h_link_val IS STRING;
EXEC SQL VAR l_dl_msglinkdet_struct_h.h_link_msg_tag IS STRING;
EXEC SQL VAR l_dl_msglinkdet_struct_h.h_msg_tag IS STRING;
EXEC SQL VAR chr_l_addinfo_uniq_seme IS STRING; 
EXEC SQL VAR chr_l_input_dt IS STRING; 
EXEC SQL VAR chr_l_input_dt_new IS STRING; 

EXEC SQL VAR chr_l_temp_date IS STRING;
EXEC SQL VAR chr_l_temp_safek1 IS STRING;
EXEC SQL VAR chr_l_date_time_new1 IS STRING;
EXEC SQL VAR chr_h_rp_isin IS STRING;
EXEC SQL VAR chr_h_pinstrcode IS STRING;
EXEC SQL VAR chr_h_rp_instrdesc IS STRING;
EXEC SQL VAR chr_l_cons_flg IS STRING;
EXEC SQL VAR chr_h_caon_no IS STRING;	
EXEC SQL VAR chr_h_caop_code IS STRING; 
EXEC SQL VAR h_note49_new IS STRING;
EXEC SQL VAR h_note50_new IS STRING;
EXEC SQL VAR chr_h_note51_new IS STRING;
EXEC SQL VAR chr_h_note52_new IS STRING;
EXEC SQL VAR chr_h_note53_new IS STRING;
EXEC SQL VAR chr_h_note54_new IS STRING;
EXEC SQL VAR chr_h_note55_new IS STRING;
EXEC SQL VAR chr_h_note56_new IS STRING;
EXEC SQL VAR chr_h_note57_new IS STRING;
EXEC SQL VAR chr_h_note58_new IS STRING;
EXEC SQL VAR chr_l_ca_id   IS STRING;
EXEC SQL VAR chr_l_548_stat_qual IS STRING;
EXEC SQL VAR chr_l_548_stat_code IS STRING;
EXEC SQL VAR chr_l_548_reas_qual IS STRING;
EXEC SQL VAR chr_l_548_reas_code IS STRING;
EXEC SQL VAR chr_l_548_note IS STRING;
EXEC SQL VAR chr_l_548_failcode IS STRING;
EXEC SQL VAR chr_l_stat_blck_num1 IS STRING;
EXEC SQL VAR chr_h_max_access_stamp IS STRING;
EXEC SQL VAR chr_l_typeoftrd IS STRING;    

EXEC SQL VAR chr_h_prepdate_new1 IS STRING;    
EXEC SQL VAR chr_h_em_prepdate_new1 IS STRING;    
EXEC SQL VAR chr_l_benchmark IS STRING;  /* Vedavati */    
EXEC SQL VAR chr_l_resparent_code IS STRING; /*Nikhil*/
EXEC SQL VAR chr_l_resparent_name IS STRING; /*Nikhil*/
EXEC SQL VAR l_narrative IS STRING;

EXEC SQL END DECLARE SECTION;
chr_temp_part = (char *)calloc(61,sizeof(char));
APL_MALLOC_FAIL(chr_temp_part);

chr_temp_temp_part = chr_temp_part;


chr_h_notefld=(char *)calloc(1,SMAXLINE*SMAXCHAR*sizeof(char));
APL_MALLOC_FAIL(chr_h_notefld);
memset(chr_h_notefld,APL_NULL_CHAR,SMAXLINE*SMAXCHAR*sizeof(char));


l_ms_dynamic_val = (MS_STATIC_VAL *)calloc(20,sizeof(MS_STATIC_VAL));
APL_MALLOC_FAIL(l_ms_dynamic_val);
chr_l_note = (note_desc *)calloc(35,sizeof(note_desc));
APL_MALLOC_FAIL(chr_l_note);


l_ms_dynamic_val_a = (MS_STATIC_VAL *)calloc(1,sizeof(MS_STATIC_VAL));
APL_MALLOC_FAIL(l_ms_dynamic_val_a);


l_note_new = (note_desc *)calloc(201,sizeof(note_desc));

APL_MALLOC_FAIL(l_note_new);

memset(chr_h_blk_safekeep_pos,APL_NULL_CHAR,30);	/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only */
memset(l_narrative,APL_NULL_CHAR,41);
 memset(chr_l_safetag,APL_NULL_CHAR,6);
 memset(chr_l_dereagtag,APL_NULL_CHAR,6);
 memset(chr_l_decurecutag,APL_NULL_CHAR,6);
 memset(chr_l_instrtag,APL_NULL_CHAR,6);
 memset(chr_l_sellbuyrtag,APL_NULL_CHAR,6);
 memset(chr_l_dereitag,APL_NULL_CHAR,6);
 memset(l_95RDSN,APL_NULL_CHAR,11);
 memset(chr_l_domcpacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(chr_l_countacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(chr_l_clientof,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(chr_l_countacnm,APL_NULL_CHAR,36);
 memset(chr_l_clientof1,APL_NULL_CHAR,36);
 memset(chr_h_domcpacbic,APL_NULL_CHAR,13);
 memset(chr_h_countaccbic,APL_NULL_CHAR,13);
 memset(chr_h_clientofbic,APL_NULL_CHAR,13);
 memset(chr_l_dbcountaccnm,APL_NULL_CHAR,13);
memset(h_psetparty,APL_NULL_CHAR,161);


memset(chr_l_dummy_data_fname,APL_NULL_CHAR,PATH_LENGTH);
memset(chr_l_client_568,APL_NULL_CHAR,APL_CLIENT_LENGTH);
memset(chr_l_country_568,APL_NULL_CHAR,APL_CTRY_CODE_LEN);
memset(chr_l_ce_typ_568,APL_NULL_CHAR,EVT_CLASS_);
memset(chr_l_instrcode_568,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
memset(chr_l_ca_id_568,APL_NULL_CHAR,CORP_ID_LEN);
memset(chr_l_eventid_568,APL_NULL_CHAR,18);
memset(chr_l_refno_568,APL_NULL_CHAR,APL_TXNREFNO_LEN);
memset(chr_l_curr_msgrefno_568,APL_NULL_CHAR,APL_TXNREFNO_LEN);
memset(chr_l_prev_msgrefno_568,APL_NULL_CHAR,APL_TXNREFNO_LEN);
memset(chr_l_msgrefno_568_curr,APL_NULL_CHAR,APL_TXNREFNO_LEN);
memset(chr_l_msgrefno_568_prev,APL_NULL_CHAR,APL_TXNREFNO_LEN);
memset(chr_l_prev_msgno_568,APL_NULL_CHAR,7);
memset(chr_l_frevetyp_568,APL_NULL_CHAR,41);
memset(chr_l_prepdate_new_568,APL_NULL_CHAR,17);
memset(chr_l_ftypeofinstr_568,APL_NULL_CHAR,4);
memset(chr_l_isin_568,APL_NULL_CHAR,13);
memset(chr_l_instrdesc_568,APL_NULL_CHAR,36);
memset(chr_l_fent_pos_568,APL_NULL_CHAR,30);
memset(chr_l_footnote_number,APL_NULL_CHAR,CA_INFOSEQ_LEN);
memset(chr_h_note_1_new,APL_NULL_CHAR,1751);
memset(chr_h_note_2_new,APL_NULL_CHAR,1751);
memset(chr_h_note_3_new,APL_NULL_CHAR,1751);
memset(chr_h_note_4_new,APL_NULL_CHAR,1751);
memset(chr_h_note_new,APL_NULL_CHAR,8000);


memset(&l_casecevent_struct_h,NULL,sizeof(CA_CASECEVENT_STRUCT_H));


memset(chr_temp_part,APL_NULL_CHAR,61);
memset(chr_h_iscc,APL_NULL_CHAR,2);
memset(chr_h_faildesc1,APL_NULL_CHAR,26);
memset(h_custinfo,APL_NULL_CHAR,71);
memset(chr_prev_client,APL_NULL_CHAR,11);
memset(chr_l_date,APL_NULL_CHAR,7);
memset(chr_l_dot,APL_NULL_CHAR,49);
memset(chr_h_faildesc2,APL_NULL_CHAR,25);
memset(chr_h_domcpname1,APL_NULL_CHAR,35);
memset(h_info1,APL_NULL_CHAR,51);
memset(chr_h_note2,APL_NULL_CHAR,51);
memset(chr_h_note3,APL_NULL_CHAR,51);
memset(chr_h_note4,APL_NULL_CHAR,51);
memset(chr_h_note5,APL_NULL_CHAR,51);
memset(chr_h_note6,APL_NULL_CHAR,51);
memset(chr_h_note7,APL_NULL_CHAR,51);
memset(chr_h_note8,APL_NULL_CHAR,51);
memset(h_note9,APL_NULL_CHAR,51);
memset(h_note10,APL_NULL_CHAR,51);
memset(chr_h_note11,APL_NULL_CHAR,51);
memset(chr_h_note12,APL_NULL_CHAR,51);
memset(chr_h_note13,APL_NULL_CHAR,51);
memset(chr_h_note14,APL_NULL_CHAR,51);
memset(chr_h_note15,APL_NULL_CHAR,51);
memset(chr_h_note16,APL_NULL_CHAR,51);
memset(chr_h_note17,APL_NULL_CHAR,51);
memset(chr_h_note18,APL_NULL_CHAR,51);
memset(h_note19,APL_NULL_CHAR,51);
memset(h_note20,APL_NULL_CHAR,51);
memset(h_info,APL_NULL_CHAR,8000);
memset(h_currencycode,APL_NULL_CHAR,APL_CCYCODE_LEN);
memset(h_typeofinstr,APL_NULL_CHAR,4);
memset(h_regbrflag,APL_NULL_CHAR,4);
memset(h_proc_oth,APL_NULL_CHAR,106);
memset(chr_h_othproc1,APL_NULL_CHAR,36);


memset(chr_l_sub_new_qty,APL_NULL_CHAR,20);
memset(chr_l_sub_base_qty,APL_NULL_CHAR,5);
/* Changes done by Hardik for ISKB_8203 on 29/02/2016 Start */
memset(h_sub_new_quantity,APL_NULL_CHAR,20);
memset(h_sub_base_quantity,APL_NULL_CHAR,5);
/* Changes done by Hardik for ISKB_8203 on 29/02/2016 End */
memset(chr_l_sub_ratio,APL_NULL_CHAR,18);


memset(chr_l_new_stock_qty,APL_NULL_CHAR,7);
memset(chr_l_old_stock_qty,APL_NULL_CHAR,4);
memset(chr_l_new_ratio,APL_NULL_CHAR,18);
memset(chr_l_new_sub_ratio,APL_NULL_CHAR,18);


memset(chr_p_ca_id,APL_NULL_CHAR,CORP_ID_LEN);
memset(chr_l_tot,APL_NULL_CHAR,22);
h_amt_rt_ind = APL_NULL_CHAR;
h_ratio_perc_ind = APL_NULL_CHAR;


#ifdef EMU_PROCESSING
	memset(h_indentity_no,APL_NULL_CHAR,17);
	memset(chr_h_euroconv,APL_NULL_CHAR,2);
	memset(chr_l_emu_ccycode,APL_NULL_CHAR,4);
	memset(chr_l_grd_ccycode,APL_NULL_CHAR,4);
	strcpy(chr_l_emu_ccycode,APL_EMU_CCYCODE);
	strcpy(chr_l_grd_ccycode,APL_GRD_CCYCODE);
#endif



memset(chr_h_msg_sent_flg,APL_NULL_CHAR,2); 


memset(chr_l_typeoftrd,APL_NULL_CHAR,sizeof(chr_l_typeoftrd)); 
memset(chr_h_note1_new,APL_NULL_CHAR,51);
memset(chr_h_note2_new,APL_NULL_CHAR,51);
memset(chr_h_note3_new,APL_NULL_CHAR,51);
memset(chr_h_note4_new,APL_NULL_CHAR,51);
memset(chr_h_note5_new,APL_NULL_CHAR,51);
memset(chr_h_note6_new,APL_NULL_CHAR,51);
memset(chr_h_note7_new,APL_NULL_CHAR,51);
memset(chr_h_note8_new,APL_NULL_CHAR,51);
memset(h_note9_new,APL_NULL_CHAR,51);
memset(h_note10_new,APL_NULL_CHAR,51);


memset(chr_h_note11_new,APL_NULL_CHAR,51);
memset(chr_h_note12_new,APL_NULL_CHAR,51);
memset(chr_h_note13_new,APL_NULL_CHAR,51);
memset(chr_h_note14_new,APL_NULL_CHAR,51);
memset(chr_h_note15_new,APL_NULL_CHAR,51);
memset(chr_h_note16_new,APL_NULL_CHAR,51);
memset(chr_h_note17_new,APL_NULL_CHAR,51);
memset(chr_h_note18_new,APL_NULL_CHAR,51);
memset(h_note19_new,APL_NULL_CHAR,51);
memset(h_note20_new,APL_NULL_CHAR,51);
memset(chr_h_note21_new,APL_NULL_CHAR,51);
memset(chr_h_note22_new,APL_NULL_CHAR,51);
memset(chr_h_note23_new,APL_NULL_CHAR,51);
memset(chr_h_note24_new,APL_NULL_CHAR,51);
memset(chr_h_note25_new,APL_NULL_CHAR,51);
memset(chr_h_note26_new,APL_NULL_CHAR,51);
memset(chr_h_note27_new,APL_NULL_CHAR,51);
memset(chr_h_note28_new,APL_NULL_CHAR,51);
memset(h_note29_new,APL_NULL_CHAR,51);
memset(h_note30_new,APL_NULL_CHAR,51);
 
 memset(chr_h_note31_new,APL_NULL_CHAR,51);
 memset(chr_h_note32_new,APL_NULL_CHAR,51);
 memset(chr_h_note33_new,APL_NULL_CHAR,51);
 memset(chr_h_note34_new,APL_NULL_CHAR,51);
 memset(chr_h_note35_new,APL_NULL_CHAR,51);
 memset(chr_h_note36_new,APL_NULL_CHAR,51);
 memset(chr_h_note37_new,APL_NULL_CHAR,51);
 memset(chr_h_note38_new,APL_NULL_CHAR,51);
 memset(h_note39_new,APL_NULL_CHAR,51);
 memset(h_note40_new,APL_NULL_CHAR,51);
 memset(chr_h_note41_new,APL_NULL_CHAR,51);
 memset(chr_h_note42_new,APL_NULL_CHAR,51);
 memset(chr_h_note43_new,APL_NULL_CHAR,51);
 memset(chr_h_note44_new,APL_NULL_CHAR,51);
 memset(chr_h_note45_new,APL_NULL_CHAR,51);
 memset(chr_h_note46_new,APL_NULL_CHAR,51);
 memset(chr_h_note47_new,APL_NULL_CHAR,51);
 memset(chr_h_note48_new,APL_NULL_CHAR,51);
 memset(h_note49_new,APL_NULL_CHAR,51);
 memset(h_note50_new,APL_NULL_CHAR,51);
 memset(chr_h_note51_new,APL_NULL_CHAR,51);
 memset(chr_h_note52_new,APL_NULL_CHAR,51);
 memset(chr_h_note53_new,APL_NULL_CHAR,51);
 memset(chr_h_note54_new,APL_NULL_CHAR,51);
 memset(chr_h_note55_new,APL_NULL_CHAR,51);
 memset(chr_h_note56_new,APL_NULL_CHAR,51);
 memset(chr_h_note57_new,APL_NULL_CHAR,51);
 memset(chr_h_note58_new,APL_NULL_CHAR,51);
 memset(h_note59_new,APL_NULL_CHAR,51);
 memset(h_note60_new,APL_NULL_CHAR,51);
 

memset(&l_dl_msglink_struct_h,NULL,sizeof(DL_MSGLINK_STRUCT_H));
l_progseqnum_struct_h = (PRO_GSEQNUM_STRUCT_H *)calloc(1,sizeof(PRO_GSEQNUM_STRUCT_H));
memset(l_progseqnum_struct_h,NULL,sizeof(PRO_GSEQNUM_STRUCT_H));
APL_MALLOC_FAIL(l_progseqnum_struct_h);
memset(l_progseqnum_struct_h,NULL,sizeof(PRO_GSEQNUM_STRUCT_H));
memset(h_instrdate,APL_NULL_CHAR,APL_DATE_LEN);
memset(h_moneydate,APL_NULL_CHAR,APL_DATE_LEN);


memset(chr_h_ccycode_new,APL_NULL_CHAR,APL_CCYCODE_LEN);


memset(chr_l_decl_julian_dt,APL_NULL_CHAR,4);
memset(chr_l_decl_year,APL_NULL_CHAR,3);
memset(chr_l_event_no_563,APL_NULL_CHAR,3);
memset(chr_l_eventid_563,APL_NULL_CHAR,17);
memset(chr_l_ce_typ_563,APL_NULL_CHAR,3);
memset(chr_l_caid_563,APL_NULL_CHAR,21);
memset(chr_l_note_nbr_563,APL_NULL_CHAR,CA_INFOSEQ_LEN);
memset(chr_l_instrcode_563,APL_NULL_CHAR,9);
memset(p_temp_pos_93B,APL_NULL_CHAR,30);



memset(chr_l_client_mult_ccy,APL_NULL_CHAR,APL_CLIENT_LENGTH);
memset(chr_l_refno_mult_ccy,APL_NULL_CHAR,APL_TXNREFNO_LEN);
memset(chr_l_trdccy,APL_NULL_CHAR,APL_CCYCODE_LEN);


memset(chr_l_548_stat_blck_num,APL_NULL_CHAR,5);
memset(chr_l_548_stat_qual,APL_NULL_CHAR,5);
memset(chr_l_548_stat_code,APL_NULL_CHAR,7);
memset(chr_l_548_reas_qual,APL_NULL_CHAR,7);
memset(chr_l_548_reas_code,APL_NULL_CHAR,5);
memset(chr_l_548_note,APL_NULL_CHAR,36);
memset(chr_l_548_failcode,APL_NULL_CHAR,3);

memset(chr_l_568_ind,NULL,5);  
memset(chr_l_564_prev_seme,NULL,16); 

memset(l_attach_corp_id,APL_NULL_CHAR,CORP_ID_LEN);//Added by siva.ganapathi for ISKB_3990 Displaying eliglble positions in linked event message

strcpy(chr_eventrecfnd,"T");

l_cond_seven_dec=0;
if (APL_FAILURE == CO_Chk_CntryEnabled("TRD_QTY_LEN","SEVEN_DEC",&l_cond_seven_dec,l_debug_info_ptr))
{
     APL_GOBACK_FAIL
}

if(l_cond_seven_dec!=0)
{
   memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
   sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
}
else
{
   memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
   sprintf(chr_h_seven_dec_str,"%s","%d%s%lf\n");
}

l_cond_ca_7dec=0;
if (APL_FAILURE == CO_Chk_CntryEnabled("CA_QTY_LEN","SEVEN_DEC",&l_cond_ca_7dec,l_debug_info_ptr))
{
     APL_GOBACK_FAIL
}


for(msg_line_no = 0;msg_line_no < 35;msg_line_no++)
      memset(chr_l_note[msg_line_no].detail,APL_NULL_CHAR,51);

msg_line_no =0;
printf("\n entered in selothervalues  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
fflush(stdout);

l_pass_back_seq_no_95=(*p_msg_seq_no); 



memset(chr_l_lnk_msg_no,APL_NULL_CHAR,7);
memset(chr_l_lnk_msg,APL_NULL_CHAR,4);

printf("\n berore calling MSG_Rtv_NewMsgNo() chr_p_msgno is %s ",chr_p_msgno);
fflush(stdout);

if(strncmp(chr_p_msgno,"535",3)!=0 && strncmp(chr_p_msgno,"508",3)!=0 && strncmp(chr_p_msgno,"54B",3)!=0)
{
   if ( APL_FAILURE == MSG_Rtv_NewMsgNo(chr_p_msgno, chr_l_lnk_msg_no,
                                                  l_debug_info_ptr) )
                {
                   APL_GOBACK_FAIL
                }
	  /*Added debug statements by siva.ganapathi for ISKB_4397 -- start -- 05-oct-2010*/		

   	  printf("\n Before strncpy() chr_l_lnk_msg is %s  chr_l_lnk_msg_no is %s ",chr_l_lnk_msg,chr_l_lnk_msg_no);
	  fflush(stdout);

	  /*Added debug statements by siva.ganapathi for ISKB_4397 End -- 05-oct-2010*/

      strncpy(chr_l_lnk_msg,chr_l_lnk_msg_no,3);
	
  	  /*Added debug statements by siva.ganapathi for ISKB_4397  start -- 05-oct-2010*/			

   	  printf("\n After strncpy() chr_l_lnk_msg is %s  chr_l_lnk_msg_no is %s ",chr_l_lnk_msg,chr_l_lnk_msg_no);

	  fflush(stdout);

	  /*Added debug statements by siva.ganapathi for ISKB_4397  End -- 05-oct-2010*/
}

	if(p_rec_no == 1)
	{
		memset(chr_h_prepdate_new,APL_NULL_CHAR,17);
		memset(chr_l_date_time_new,APL_NULL_CHAR,APL_DATE_LEN);
		i_prepdate_new=0;

		if(APL_FAILURE == CO_RtvSysDtTime(chr_l_date_time_new,l_debug_info_ptr))
  			APL_GOBACK_FAIL


		EXEC SQL SELECT to_char(to_date(:chr_l_date_time_new),'DD/MM/YYYY'),
			to_char(to_date(:chr_l_date_time_new),'DD-MM-YYYY')
			INTO :chr_h_prepdate_new1:i_prepdate_new1,
			:chr_h_em_prepdate_new1:i_em_prepdate_new1
			FROM DUAL;
	IS_ANY_ORA_ERROR

		EXEC SQL SELECT to_char(to_date(:chr_l_date_time_new),'yyyymmddhh24miss')
			INTO :chr_h_prepdate_new:i_prepdate_new
			FROM DUAL;

		IS_ANY_ORA_ERROR

		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EMAILPREPDT=",chr_h_prepdate_new1);
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EM_EMAILPREPDT=",chr_h_em_prepdate_new1);

	}


if ( (p_rec_no == 1) && ( (strncmp(chr_p_msgno,"562",3) == 0) || (strncmp(chr_p_msgno,"596", 3) == 0) ) )
{
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREP_DT=",chr_h_prepdate_new);
	
	if(strncmp(chr_p_msgno,"596", 3) == 0)
	{
		i_domestic_cpclr_name=0;
		if(strcmp(p_STAT_VAL[7].link_val,"DOMESTIC_CP")==0)
		{
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
   		EXEC SQL SELECT replace(replace(pty_name,chr(13),NULL),chr(10),NULL)
				INTO :h_domestic_cpclr_name:i_domestic_cpclr_name
            FROM MT_PARTY
            WHERE pty_code = :p_STAT_VAL[7].link_tag;

   		IS_ANY_ORA_ERROR
   		if(sqlca.sqlcode == 1403 )
   		{
        		CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_STAT_VAL[7].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
				APL_GOBACK_FAIL
   		}
   		if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");

   		memset(chr_temp_part,APL_NULL_CHAR,61);
   		strncpy(chr_temp_part,h_domestic_cpclr_name,35);
   		strcat(chr_temp_part,APL_NULL_STRING);
   		if(strlen(h_domestic_cpclr_name)!=0) 
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",chr_temp_part);
   		else
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
   		if(strlen(h_domestic_cpclr_name) > 35)
   		{
     			chr_temp_part = &h_domestic_cpclr_name[35];
     			strncpy(chr_h_domcpname1,chr_temp_part,30);
     			strcat(chr_h_domcpname1,APL_NULL_STRING);
  
     			if(strlen(chr_h_domcpname1)!=0) 
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",chr_h_domcpname1);
     			else
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		}
   		else
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
			i_domestic_cpclr_name=0;
		}
		if(strcmp(p_SEL_VAL[0].link_val,"DOMESTIC_CPCLT")==0)
		{
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
   		EXEC SQL SELECT replace(replace(pty_name,chr(13),NULL),chr(10),NULL)
				INTO :h_domestic_cpclr_name:i_domestic_cpclr_name
            FROM MT_PARTY
            WHERE pty_code = :p_SEL_VAL[0].link_tag;

   		IS_ANY_ORA_ERROR
   		if(sqlca.sqlcode == 1403 )
   		{
				
				int_l_count=0;
				EXEC SQL SELECT count(*) as CNTDMPC,DOMESTICCP_NAME
					INTO :int_l_count,:h_domestic_cpclr_name:i_domestic_cpclr_name 
					FROM DL_DEALREPAIR
					WHERE IDENTIY_NO = :p_STAT_VAL[2].link_tag
					GROUP BY DOMESTICCP_NAME;
   		IS_ANY_ORA_ERROR
				if (int_l_count == 0 ) 
				{	
        		CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[0].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
				APL_GOBACK_FAIL
				}
				else
					strcpy(p_STAT_VAL[0].link_tag,h_domestic_cpclr_name);
   		}
   		if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");
   		memset(chr_temp_part,APL_NULL_CHAR,61);
   		strncpy(chr_temp_part,h_domestic_cpclr_name,35);
   		strcat(chr_temp_part,APL_NULL_STRING);
			if(strlen(h_domestic_cpclr_name)!=0) 
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",chr_temp_part);
   		else
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
   		if(strlen(h_domestic_cpclr_name) > 35)
   		{
     			chr_temp_part = &h_domestic_cpclr_name[35];
     			strncpy(chr_h_domcpname1,chr_temp_part,30);
     			strcat(chr_h_domcpname1,APL_NULL_STRING);
  
     			if(strlen(chr_h_domcpname1)!=0) 
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",chr_h_domcpname1);
     			else
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		}
   		else
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
			i_domestic_cpclr_name=0;
		}
		
		if ( strcmp(chr_p_msgno,"596P") == 0 )
		{
      	if ( strcmp(p_SEL_VAL[3].link_val,"NEW_CUSTNOTE") == 0 )
      	{
         	memset(chr_h_new_custnote,    APL_NULL_CHAR, 71);
         	strcpy(chr_h_new_custnote, p_SEL_VAL[3].link_tag);

 	        if (strcmp(chr_h_new_custnote, APL_NULL_STRING) != 0)
   	      {
      	      memset(chr_new_custnote_part, APL_NULL_CHAR, 71);
         	   memset(chr_new_custnote1,     APL_NULL_CHAR, 36);

 	            strcpy(chr_new_custnote_part, chr_h_new_custnote);
   	         strncpy(chr_new_custnote1, chr_new_custnote_part, 35);
      	      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CUSTNOTE1=", chr_new_custnote1);

 	            if(strlen(chr_h_new_custnote) > 35)
   	         {
      	         memset(chr_new_custnote_part, APL_NULL_CHAR, 71);
         	      memset(chr_new_custnote2,     APL_NULL_CHAR, 36);

 	              strcpy(chr_new_custnote_part, chr_h_new_custnote + 35);
   	            strncpy(chr_new_custnote2, chr_new_custnote_part, 35);
      	         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CUSTNOTE2=", chr_new_custnote2);
         	   }
            	else
              		 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CUSTNOTE2=", APL_NULL_STRING);
        		}
        	   else
         	{
            	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CUSTNOTE1=", APL_NULL_STRING);
            	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CUSTNOTE2=", APL_NULL_STRING);
         	}
      	}
		}
	}

   if(strncmp(chr_p_msgno,"562", 3) == 0)
   {
     printf ("*****%s********\n",p_SEL_VAL[7].link_tag);
     printf ("*****%s********\n",p_SEL_VAL[4].link_tag);
     printf("\n Vaibs !!! Stat-Val 7 is [%s]:> ",p_STAT_VAL[7].link_val);
     printf("\n Stat-Val 7 value is [%s]:> ",l_mt_message_sys_params_struct_h.swift_cd);
     fflush(stdout);
		// KOTAK UAT AIX
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PROC_INIT=",p_SEL_VAL[4].link_tag);	
		
		if((strcmp(p_STAT_VAL[6].link_tag,"CAST")==0))
		{
			memset(chr_h_caon_no,APL_NULL_CHAR,4);
			memset(chr_h_caop_code,APL_NULL_CHAR,5);
			EXEC SQL SELECT HOLDING_AMT,substr(CA_OPTCD,1,3),substr(CA_OPTCD,5,8)
					INTO :dbl_h_hold_amount:i_hold_amount,:chr_h_caon_no:i_caon_no,:chr_h_caop_code:i_caop_code
					FROM CAREPLYSPLIT 
					WHERE CLIENT=:p_SEL_VAL[7].link_tag
					AND CORP_ID=:p_SEL_VAL[4].link_tag 
               AND srl_num =:p_STAT_VAL[8].link_tag;
		}
		else
		{
			memset(chr_h_caon_no,APL_NULL_CHAR,4);
			memset(chr_h_caop_code,APL_NULL_CHAR,5);
		   EXEC SQL SELECT HOLDING_AMT,substr(CA_OPTCD,1,3),substr(CA_OPTCD,5,8)
               INTO :dbl_h_hold_amount:i_hold_amount,:chr_h_caon_no:i_caon_no,:chr_h_caop_code:i_caop_code
               FROM CAREPLYSPLIT
               WHERE CLIENT=:p_SEL_VAL[7].link_tag
               AND CORP_ID=:p_SEL_VAL[4].link_tag
               AND srl_num = (SELECT MAX(srl_num) FROM CAREPLYSPLIT WHERE CLIENT=:p_SEL_VAL[7].link_tag AND CORP_ID=:p_SEL_VAL[4].link_tag);
		}

     	printf ("*****%f********\n",dbl_h_hold_amount);
     	fflush(stdout);
     	printf ("*****%d********\n",sqlca.sqlcode);
     	fflush(stdout);
      IS_ANY_ORA_ERROR	

    	if(l_cond_ca_7dec!=0)
    	{
      	memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
      	sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
      	fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEWFENTPOS=",dbl_h_hold_amount);
   	}
   	else
      	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NEWFENTPOS=", dbl_h_hold_amount);

		
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OPTIONNO=", chr_h_caon_no);
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OPTIONCODE=", chr_h_caop_code);
      
      Alert("\n 10000000000 Vaibs !!! Stat-Val 7 is [%s]: ",p_STAT_VAL[7].link_val);
      Alert("\n 10000000000 Stat-Val 7 value is [%s]: ",l_mt_message_sys_params_struct_h.swift_cd);        
            		
   }
}

printf("\n Vaibhav Here............Message Number is [%s] >>>>",chr_p_msgno);
fflush(stdout);
if((strcmp(chr_p_msgno,"548N04")==0) || (strcmp(chr_p_msgno,"534")==0))
{
	  if(p_rec_no == 1)
		    {
                                 printf("\n Vaibhav Here.....NOW.......Message Number is [%s] >>>>",chr_p_msgno); 
				 fflush(stdout);
				 if(strcmp(chr_p_msgno,"548N04")==0)
				 {
                                        printf("\n I am here now.....(If Loop)"); 
					fflush(stdout);
				 	memset(l_sebi_countacc,APL_NULL_CHAR,21);
	       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DATE=",chr_h_prepdate_new);
					fflush(stdout);

      				EXEC SQL SELECT pty_sebi_reg_no_1
			        				INTO :l_sebi_countacc:i_sebi_countacc
			        				FROM mt_pty_exch_map
			        	WHERE PTY_CODE=:p_SEL_VAL[0].link_tag
			        	AND EXCH_CODE =:p_SEL_VAL[4].link_tag;
		     			IS_ANY_ORA_ERROR
					fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"BROK_SEBI_NO=",l_sebi_countacc);

				 	memset(l_sebi_countacc,APL_NULL_CHAR,21);
                                        /*Vaibhav KOTAK-UAT I-SolveID:361*/
      				EXEC SQL SELECT pty_sebi_reg_no_1
			        	INTO :l_sebi_countacc:i_sebi_countacc
			        	FROM mt_pty_exch_map
			        	WHERE PTY_CODE=:p_SEL_VAL[0].link_tag
			        	AND EXCH_CODE =:p_SEL_VAL[4].link_tag;
		     		IS_ANY_ORA_ERROR
			  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CNT_SEBI_NO=",l_sebi_countacc);

			  		memset(l_cln_ucc_code,APL_NULL_CHAR,13);
			  		memset(l_cln_mapinid,APL_NULL_CHAR,13);

			  		EXEC SQL SELECT CLN_MAPINID,CLN_UCC_CODE
				  			  INTO :l_cln_mapinid:i_cln_mapinid,
									 :l_cln_ucc_code:i_cln_ucc_code
						  		FROM MT_REGDETAILS
						  		WHERE CLN_CODE =:p_SEL_VAL[5].link_tag;

			  		IS_ANY_ORA_ERROR

                                        /*Vaibhav KOTAK-UAT I-SolveID:361*/  

                                        memset(chr_pty_bic_code_548,APL_NULL_CHAR,14);

					EXEC SQL SELECT PTY_BIC_CODE INTO :chr_pty_bic_code_548:i_chr_pty_bic_code_548
						FROM MT_PARTY
						WHERE pty_code = :p_SEL_VAL[0].link_tag;

					IS_ANY_ORA_ERROR;

					printf("\n Party BIC Code (548Message Mapped)=([%s])",chr_pty_bic_code_548);
					fflush(stdout);
					fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PTY_BIC_CD=",chr_pty_bic_code_548);
                                        /*Vaibhav KOTAK-UAT I-SolveID:361*/
 
			  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CLN_MAPINID=",l_cln_mapinid);
			  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UCC_CODE=",l_cln_ucc_code);

				 }
				 if(strcmp(chr_p_msgno,"534")==0)
				 {
                                 printf("\n I am here now.....(Else Loop)");
					 fflush(stdout);

               memset(l_cln_ucc_code,APL_NULL_CHAR,13);
               memset(l_cln_mapinid,APL_NULL_CHAR,13);

              EXEC SQL SELECT CLN_MAPINID,CLN_UCC_CODE
	                       INTO :l_cln_mapinid:i_cln_mapinid,
                               :l_cln_ucc_code:i_cln_ucc_code
                          FROM MT_REGDETAILS
                          WHERE CLN_CODE =:p_SEL_VAL[2].link_tag;

              IS_ANY_ORA_ERROR

              fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CLN_MAPINID=",l_cln_mapinid);
             fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UCC_CODE=",l_cln_ucc_code);

				 }

		    }
}




if(strncmp(chr_p_msgno,"571",3) == 0 || strcmp(chr_p_msgno,"535B") == 0)
{printf("\n 13client is |%s| \n",chr_l_client);
  if(p_rec_no == 1)
  {
  

      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DATE=",chr_h_prepdate_new);
   }
printf("its here - 3\n");
     fflush(stdout);

 if(strcmp(chr_p_msgno,"571A") != 0)
 {
  memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN); 
  

printf("its here - 61\n");
  fflush(stdout);
  strcpy(h_instr_code,p_SEL_VAL[1].link_tag);
printf("its here - 6\n");
  fflush(stdout);

  strcat(h_instr_code,APL_NULL_STRING);
printf("its here - 7\n");
  fflush(stdout);

  memset(h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH); 


	strcpy(h_dl_client,p_SEL_VAL[6].link_tag);
printf("its here - 8\n");
fflush(stdout);
	Alert(" HM h_dl_client %s",h_dl_client); 

   strcat(h_dl_client,APL_NULL_STRING);
printf("its here - 9\n");
fflush(stdout);

printf("its here - 5\n");
fflush(stdout);

#ifdef EMU_PROCESSING
	if(strcmp(chr_p_msgno,"571") == 0 || strcmp(chr_p_msgno,"535B") == 0)
	{
printf("HERE just inside 571 loop \n");
fflush(stdout);

	
	memset(chr_l_emu_locncode,APL_NULL_CHAR,5);
	
   
	if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
		{
			if((strcmp(p_SEL_VAL[10].link_tag,"") == 0) || (strcmp(p_SEL_VAL[10].link_tag," ") == 0))
			   int_l_emu_locncode_ind = 1;
			else	
				strcpy(chr_l_emu_locncode,p_SEL_VAL[10].link_tag);
		}
	else
			int_l_emu_locncode_ind = 1;

		EXEC SQL SELECT 'Y'
		INTO :chr_h_euroconv
		FROM DUAL
		WHERE EXISTS (SELECT 1 
							FROM PRO_EURO_TEMP 
							WHERE instr_code = :h_instr_code
							AND client = :p_SEL_VAL[9].link_tag 
							AND ( location_cd = :chr_l_emu_locncode OR
									:int_l_emu_locncode_ind = 1 )
							AND DF_IDENTNO IS NOT NULL
							AND PROC_AREA = 'REDEN'
							AND instr(nvl(INFO,' '),'571SENT') = 0);

		EXEC SQL UPDATE PRO_EURO_TEMP
		SET INFO = concat(INFO,'571SENT')
		WHERE instr_code = :h_instr_code
		AND client = :p_SEL_VAL[9].link_tag
		AND (location_cd = :chr_l_emu_locncode OR
				:int_l_emu_locncode_ind = 1 )
		AND DF_IDENTNO IS NOT NULL
		AND PROC_AREA = 'REDEN'
		AND instr(nvl(INFO,' '),'571SENT') = 0;
		
		IS_ANY_ORA_ERROR
		
		if(strcmp(chr_h_euroconv,"Y") == 0)
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
	}
#endif


  if(p_rec_no == 1)
  {
    
		 printf("1h_dl_client is %s\n",h_dl_client);
printf("1its here - 4\n");
		 fflush(stdout);

	 EXEC SQL SELECT cln_currency  INTO :h_currencycode FROM MT_CLIENT
	     WHERE cln_code = :h_dl_client;

		 printf("h_dl_client is %s\n",h_dl_client);
    
printf("its here - 4\n");
		 fflush(stdout);

    IS_ANY_ORA_ERROR
	 if(sqlca.sqlcode == 1403 )
    {
    	CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, h_dl_client, APL_NULL_STRING,
 								APL_NULL_STRING, __LINE__, __FILE__);
    	APL_GOBACK_FAIL
    }


	 int_h_decimallen_new=0;

	strcpy(p_STAT_VAL[18].link_tag,h_currencycode);

    EXEC SQL SELECT DEC_LEN
					INTO :int_h_decimallen_new
               FROM  DL_CURRENCY
               WHERE currency_cd = :h_currencycode;
    IS_ANY_ORA_ERROR

    if(sqlca.sqlcode == 1403)
    {
    	CO_InsertErr(l_debug_info_ptr,ERR_CCY_NOTFND, h_currencycode, APL_NULL_STRING,
 								APL_NULL_STRING, __LINE__, __FILE__);
    	APL_GOBACK_FAIL
    }
	 memset(chr_h_roundstring_new,APL_NULL_CHAR,6);
	 sprintf(chr_h_roundstring_new,"%s%d%s","%.",int_h_decimallen_new,"lf");


printf("HERE just before mt_lymktprc\n");
fflush(stdout);



     EXEC SQL SELECT CLOSING_PR,MODIFYMODE,to_char(PRICE_DATE,'YYYYMMDD') 
              INTO :h_closing_pr:i_closing_pr,
						 :chr_h_updatemode_new:i_updatemode_new,
						 :chr_h_pricedt_new:i_pricedt_new
              FROM MT_DLYMKTPRC
              WHERE instr_code = :h_instr_code  AND
		    PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC
							where instr_code = :h_instr_code and
							PRICE_DATE <= :p_STAT_VAL[2].link_tag);

    IS_ANY_ORA_ERROR

    if(sqlca.sqlcode == 1403 || i_closing_pr == -1)
    {
	h_closing_pr = 0;
	chr_h_updatemode_new = 'H';
	memset(chr_h_pricedt_new,APL_NULL_CHAR,9);
	i_pricedt_new=0;
        EXEC SQL SELECT CLOSING_PR,to_char(PRICE_DATE,'YYYYMMDD') 
              INTO :h_closing_pr:i_closing_pr,
						 :chr_h_pricedt_new:i_pricedt_new
              FROM MT_HISDLYMKTPRC
              WHERE instr_code = :h_instr_code  AND
	            PRICE_DATE = (select MAX(PRICE_DATE) from MT_HISDLYMKTPRC
									where instr_code = :h_instr_code and
									PRICE_DATE <= :p_STAT_VAL[2].link_tag);
        IS_ANY_ORA_ERROR
        if(sqlca.sqlcode == 1403 || i_closing_pr == -1)
            h_closing_pr = 0;
    }

    if(h_closing_pr == 0)
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"MCLOSPRC=0");
    else
	 {
	
	 

      
		fprintf(p_Data_File,"%d%s",*p_rownum,"MCLOSPRC=");
       
       if ( h_closing_pr < 1.0 )
           fprintf(p_Data_File,"%lf",h_closing_pr);
       else
           fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr);

       fprintf(p_Data_File,"\n");
	 }
	 

	 fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"NEW_UPDATEMODE=",chr_h_updatemode_new);
	 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PRICEDATE=",chr_h_pricedt_new);




    if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0) /*if consmsg = 'Y' */
    {
      

     EXEC SQL SELECT MAX(CLOSING_PR)
              INTO :h_mclosing_pr:i_mclosprc
              FROM MT_DLYMKTPRC,DL_SAFEK,MT_CLIENT
              WHERE DL_SAFEK.instr_code = MT_DLYMKTPRC.INSTR_CODE  AND
		    DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
		    MT_CLIENT.CLN_MASTER = :p_SEL_VAL[6].link_tag AND
	     	    MT_DLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC
												where instr_code = DL_SAFEK.instr_code and
												PRICE_DATE <= :p_STAT_VAL[2].link_tag)
			 AND  
			 DL_SAFEK.safekeep_pos!=0;
			
    IS_ANY_ORA_ERROR

    if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
    {
        h_mclosing_pr = 0;
	
        

        EXEC SQL SELECT MAX(CLOSING_PR)
              INTO :h_mclosing_pr:i_mclosprc
              FROM MT_HISDLYMKTPRC,DL_SAFEK,MT_CLIENT 
              WHERE DL_SAFEK.instr_code = MT_HISDLYMKTPRC.INSTR_CODE  AND
		    DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
		    MT_CLIENT.cln_master = :p_SEL_VAL[6].link_tag AND
                    MT_HISDLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_HISDLYMKTPRC
															where instr_code = DL_SAFEK.instr_code and
															PRICE_DATE <= :p_STAT_VAL[2].link_tag) AND
					DL_SAFEK.safekeep_pos!=0;
        IS_ANY_ORA_ERROR
        if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
	{

		if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
		{
     				EXEC SQL SELECT MAX(CLOSING_PR)
              			INTO :h_mclosing_pr:i_mclosprc
              	FROM MT_DLYMKTPRC,DL_SAFEK,MT_CLIENT
              	WHERE DL_SAFEK.instr_code = MT_DLYMKTPRC.INSTR_CODE  AND
          		DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
          		MT_CLIENT.cln_master = :p_SEL_VAL[6].link_tag AND
					DL_SAFEK.LOCATION_CD in (SELECT LOCATION_CD FROM MT_LOCATION WHERE AVAIL_IND='AVAI') AND
             	MT_DLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC
               	                     where instr_code = DL_SAFEK.instr_code and
                  	                  PRICE_DATE <= :p_STAT_VAL[2].link_tag)
          		AND
          		(DL_SAFEK.VAL_REC + DL_SAFEK.VAL_DEL + DL_SAFEK.DP_REC + DL_SAFEK.DP_DEL + DL_SAFEK.NVALRECEIVE + DL_SAFEK.NVALDELIVER)!=0;
					
					IS_ANY_ORA_ERROR

        			if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
					{
     					EXEC SQL SELECT MAX(CLOSING_PR)
              				INTO :h_mclosing_pr:i_mclosprc
              		FROM MT_HISDLYMKTPRC,DL_SAFEK,MT_CLIENT
              		WHERE DL_SAFEK.instr_code = MT_HISDLYMKTPRC.INSTR_CODE  AND
          			DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
          			MT_CLIENT.cln_master = :p_SEL_VAL[6].link_tag AND
						DL_SAFEK.LOCATION_CD in (SELECT LOCATION_CD FROM MT_LOCATION WHERE AVAIL_IND='AVAI') AND
             		MT_HISDLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_HISDLYMKTPRC
               		                     where instr_code = DL_SAFEK.instr_code and
                  		                  PRICE_DATE <= :p_STAT_VAL[2].link_tag)
          			AND
          			(DL_SAFEK.VAL_REC + DL_SAFEK.VAL_DEL + DL_SAFEK.DP_REC + DL_SAFEK.DP_DEL + DL_SAFEK.NVALRECEIVE + DL_SAFEK.NVALDELIVER)!=0;
					
						IS_ANY_ORA_ERROR
        				if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
						{
            				h_mclosing_pr = 0;
						}
					}
		}
		else
            h_mclosing_pr = 0;
	    
	}
    }
    }  /*if consmsg = 'Y' */
    else
    {
	


     EXEC SQL SELECT MAX(CLOSING_PR)
              INTO :h_mclosing_pr:i_mclosprc
              FROM MT_DLYMKTPRC,DL_SAFEK,MT_CLIENT
              WHERE DL_SAFEK.instr_code = MT_DLYMKTPRC.INSTR_CODE  AND
		    DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
		    MT_CLIENT.cln_code = :p_SEL_VAL[9].link_tag AND
                    MT_DLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC
														where instr_code = DL_SAFEK.instr_code and
														PRICE_DATE <= :p_STAT_VAL[2].link_tag)
          AND DL_SAFEK.safekeep_pos!=0;

    IS_ANY_ORA_ERROR

    if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
    {
        h_mclosing_pr = 0;
	
         

        EXEC SQL SELECT MAX(CLOSING_PR)
              INTO :h_mclosing_pr:i_mclosprc
              FROM MT_HISDLYMKTPRC,DL_SAFEK,MT_CLIENT 
              WHERE DL_SAFEK.instr_code = MT_HISDLYMKTPRC.INSTR_CODE  AND
		    DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
		    MT_CLIENT.cln_code = :p_SEL_VAL[9].link_tag AND
                    MT_HISDLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_HISDLYMKTPRC
															where instr_code = DL_SAFEK.instr_code and
															PRICE_DATE <= :p_STAT_VAL[2].link_tag)
          AND DL_SAFEK.safekeep_pos!=0;

        IS_ANY_ORA_ERROR
        if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
			{
		      if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
      		{	
     				EXEC SQL SELECT MAX(CLOSING_PR)
              			INTO :h_mclosing_pr:i_mclosprc
              			FROM MT_DLYMKTPRC,DL_SAFEK,MT_CLIENT
              	WHERE DL_SAFEK.instr_code = MT_DLYMKTPRC.INSTR_CODE  AND
		    		DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
		    		DL_SAFEK.LOCATION_CD in  (SELECT LOCATION_CD FROM MT_LOCATION WHERE AVAIL_IND='AVAI') AND
		    		MT_CLIENT.cln_code = :p_SEL_VAL[9].link_tag AND
               MT_DLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC
														where instr_code = DL_SAFEK.instr_code and
														PRICE_DATE <= :p_STAT_VAL[2].link_tag)
          		AND (DL_SAFEK.VAL_REC + DL_SAFEK.VAL_DEL+DL_SAFEK.DP_REC + DL_SAFEK.DP_DEL+DL_SAFEK.NVALRECEIVE+DL_SAFEK.NVALDELIVER)!=0;

    				IS_ANY_ORA_ERROR
        			if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
					{
     					EXEC SQL SELECT MAX(CLOSING_PR)
              			INTO :h_mclosing_pr:i_mclosprc
              			FROM MT_DLYMKTPRC,DL_SAFEK,MT_CLIENT
              		WHERE DL_SAFEK.instr_code = MT_DLYMKTPRC.INSTR_CODE  AND
		    			DL_SAFEK.CLIENT =  MT_CLIENT.cln_code AND
		    			DL_SAFEK.LOCATION_CD in  (SELECT LOCATION_CD FROM MT_LOCATION WHERE AVAIL_IND='AVAI') AND
		    			MT_CLIENT.cln_code = :p_SEL_VAL[9].link_tag AND
               	MT_DLYMKTPRC.PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC
															where instr_code = DL_SAFEK.instr_code and
															PRICE_DATE <= :p_STAT_VAL[2].link_tag)
          			AND (DL_SAFEK.VAL_REC + DL_SAFEK.VAL_DEL+DL_SAFEK.DP_REC + DL_SAFEK.DP_DEL+DL_SAFEK.NVALRECEIVE+DL_SAFEK.NVALDELIVER)!=0;

 	   				IS_ANY_ORA_ERROR
        				if(sqlca.sqlcode == 1403 || i_mclosprc == -1)
						{
            			h_mclosing_pr = 0;
						}
					}
				}
				else
            h_mclosing_pr = 0;
	    
        }
    }
    } /* if consmsg = 'N' */
  
    
    if(h_mclosing_pr == 0)
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"FCLOSPRC=0");
    else
	 {
	 
       fprintf(p_Data_File,"%d%s",*p_rownum,"FCLOSPRC=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_mclosing_pr);
       fprintf(p_Data_File,"\n");
	 
	 }

    if(strcmp(p_SEL_VAL[0].link_tag,"FMT") == 0)
    {
       fprintf(p_Data_File,"%d%s",*p_rownum,"CLOSPRC=");
       fprintf(p_Data_File,"%lf\n",h_closing_pr*100);
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECCLOSPRC=3");
    }
    else
    {
       fprintf(p_Data_File,"%d%s",*p_rownum,"CLOSPRC=");

       fprintf(p_Data_File,"%lf\n",h_closing_pr);
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECCLOSPRC=3");
    }
    if(APL_FAILURE == IV_Proc_ConvToFxFn(p_SEL_VAL[4].link_tag,h_currencycode,p_STAT_VAL[8].link_tag, APL_NULL_STRING,&chr_l_exch_rate,&int_retstat,l_debug_info_ptr))
    {
		
		chr_l_exch_rate = 1;
    }

	if(strcmp(p_SEL_VAL[4].link_tag,h_currencycode) !=0 )
	{
		if(strcmp(p_STAT_VAL[19].link_val,"NEW_FXQUOTE_IND") == 0)
		{
			l_new_exchgrt_dbl=0;
			memset(chr_l_new_exchrt_chr,APL_NULL_CHAR,16);
	
		
			if(!strcmp(p_STAT_VAL[19].link_tag,"D"))
			{
				if(!strcmp(p_STAT_VAL[8].link_tag,p_SEL_VAL[4].link_tag))
				{
					l_new_exchgrt_dbl = 1/chr_l_exch_rate;	
					fprintf(p_Data_File,"%d%s%s%s%s%s\n",*p_rownum,"NEW_STREXCHGRATE=",h_currencycode,"/",p_SEL_VAL[4].link_tag,"/");
				}
				else if ( !strcmp(p_STAT_VAL[8].link_tag, h_currencycode) )
				
				{
					l_new_exchgrt_dbl = chr_l_exch_rate;
					fprintf(p_Data_File,"%d%s%s%s%s%s\n",*p_rownum,"NEW_STREXCHGRATE=",p_SEL_VAL[4].link_tag,"/",h_currencycode,"/");
				}
				else
				{
					l_new_exchgrt_dbl = chr_l_exch_rate;
					fprintf(p_Data_File,"%d%s%s%s%s%s\n",*p_rownum,"NEW_STREXCHGRATE=",p_SEL_VAL[4].link_tag,"/",h_currencycode,"/");
				}
			}
			else
			{
				if ( !strcmp(p_STAT_VAL[8].link_tag,p_SEL_VAL[4].link_tag) )
				
				{
					l_new_exchgrt_dbl = chr_l_exch_rate;
					fprintf(p_Data_File,"%d%s%s%s%s%s\n",*p_rownum,"NEW_STREXCHGRATE=",p_SEL_VAL[4].link_tag,"/",h_currencycode,"/");
				}
				else if(!strcmp(p_STAT_VAL[8].link_tag,h_currencycode))
				{
					l_new_exchgrt_dbl = 1/chr_l_exch_rate;	
					fprintf(p_Data_File,"%d%s%s%s%s%s\n",*p_rownum,"NEW_STREXCHGRATE=",h_currencycode,"/",p_SEL_VAL[4].link_tag,"/");
				}
				else
				{
					l_new_exchgrt_dbl = chr_l_exch_rate;
					fprintf(p_Data_File,"%d%s%s%s%s%s\n",*p_rownum,"NEW_STREXCHGRATE=",p_SEL_VAL[4].link_tag,"/",h_currencycode,"/");
				}
			}
			sprintf(chr_l_new_exchrt_chr,"%lf",l_new_exchgrt_dbl);
			for(dbl_i=0;dbl_i<15;dbl_i++)
			{
				if(chr_l_new_exchrt_chr[dbl_i] == '.')
				{
					chr_l_new_exchrt_chr[dbl_i] = ',';
					for(int_j=(strlen(chr_l_new_exchrt_chr)-1);int_j>dbl_i;int_j--)
					{
						if(chr_l_new_exchrt_chr[int_j] != '0')
							break;
						else
							chr_l_new_exchrt_chr[int_j] = '\0';
					}
					break;
				}
			}
		}
	}		
	


		if(strcmp(p_SEL_VAL[4].link_tag,h_currencycode) !=0 )
		{
			fprintf(p_Data_File,"%d%s",*p_rownum,"NEW_EXCHGRATE=");
       	fprintf(p_Data_File,"%s\n",chr_l_new_exchrt_chr);
	
		}
	

/*		fprintf(p_Data_File,"specifier =  |%s| cls price = |%lf| link tag = |%s| rate = |%lf| ",
				chr_h_roundstring_new,h_closing_pr,p_SEL_VAL[2].link_tag,chr_l_exch_rate); */
    if(p_SEL_VAL[2].NUM_VAL < 0)
    {
	 
	
       
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NPORTFOLIO=N",h_currencycode);
       fprintf(p_Data_File,"%d%s",*p_rownum,"PORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s",*p_rownum,"APORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,(-1)*h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
    }
    else
    {
	
   
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NPORTFOLIO=",h_currencycode);
       fprintf(p_Data_File,"%d%s",*p_rownum,"PORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s",*p_rownum,"APORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
    }

    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYPORTFOLIO=",h_currencycode);

    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYMPORTFOLIO=",h_currencycode);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYMAPORTFOLIO=",h_currencycode);
    

    if(p_SEL_VAL[2].NUM_VAL < 0)
    {
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NMPORTFOLIO=N",h_currencycode);
       fprintf(p_Data_File,"%d%s",*p_rownum,"MPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s",*p_rownum,"MAPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,(-1)*h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
    }
    else
    {
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NMPORTFOLIO=",h_currencycode);
       fprintf(p_Data_File,"%d%s",*p_rownum,"MPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s",*p_rownum,"MAPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*atof(p_SEL_VAL[2].link_tag)*chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
    }
	




 
	
	
	

   dbl_l_aggr_avai    = 0;
   dbl_l_aggr_navl    = 0;
   dbl_l_aggr_penr    = 0;
   dbl_l_aggr_pend    = 0;
   l_aggr_rfsafekeep_pos = 0;
   l_aggr_dfsafekeep_pos = 0;
	h_safekeep_pos 			= 0;


   if(strcmp(p_STAT_VAL[6].link_tag,"Y") == 0)   /*** HISTORY POSTIONS **/
   {
       if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0 && strcmp(p_STAT_VAL[13].link_tag,"S") == 0)  /** CONS = Y */
       {
         if(strcmp(chr_p_msgno,"535B")==0)
         {
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
					Alert("\n Ashwin ");
/*ISKB_1621 changes have been done in below query */
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
               FROM DL_HISSAFEK int_a,MT_LOCATION int_b
               WHERE int_a.client   = :p_SEL_VAL[9].link_tag AND
                     int_a.instr_code    = :h_instr_code AND
                     int_a.location_cd  = int_b.location_cd(+) AND
                     int_a.POSIT_DATE   = :p_STAT_VAL[2].link_tag
               GROUP BY int_a.client,int_a.instr_code;
               IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 2 lines added*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;
printf("\n HH line 2355 - Avai = |%s|, Navl =|%s|, Penr = |%s|, Pend = |%s|", dbl_l_aggr_avai, dbl_l_aggr_navl, dbl_l_aggr_penr, dbl_l_aggr_pend);


					/*** These queries are of no importance *********/
               EXEC SQL SELECT nvl(sum(QTY),0)
                     INTO  :l_aggr_rfsafekeep_pos
                     FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                     WHERE int_a.TO_LOCATION     = int_b.location_cd and
                           int_a.client   = :p_SEL_VAL[9].link_tag AND
                           int_a.instr_code    = :h_instr_code AND
                           int_b.AVAIL_IND ='AVAI' and
                           int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                           (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);
               IS_ANY_ORA_ERROR

               EXEC SQL SELECT nvl(sum(QTY),0)
                     INTO  :l_aggr_dfsafekeep_pos
                     FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                     WHERE int_a.FRM_LOC =int_b.location_cd and
                           int_a.client = :p_SEL_VAL[9].link_tag AND
                           int_a.instr_code  = :h_instr_code AND
                           int_b.AVAIL_IND ='AVAI' and
                           int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                           (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
               IS_ANY_ORA_ERROR
            }
            else
            {
					Alert("\n Ashwin ");
					printf("\n Testing1 inside first else condition\n");
	/*ISKB_1621 changes have been done in below query */	
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
               FROM DL_HISSAFEK int_a,MT_LOCATION int_b
               WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                     int_a.instr_code  = :h_instr_code AND
                     int_a.location_cd  = int_b.location_cd(+) AND
                     int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               GROUP BY int_a.client,int_a.instr_code;
               IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 2 lines added*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;
            }

         }
         else
         {
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0) /* TRAD_SETT_IND = Y i.e traded = Y */
            {
					Alert("\n Ashwin ");
					/*ISKB_1621 changes have been done in below query */
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                               NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                               NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                               NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                               NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
               FROM MT_CLIENT int_b,DL_HISSAFEK int_a,MT_LOCATION c
               WHERE int_a.client = int_b.cln_code AND
                           int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                           int_a.instr_code  = :h_instr_code AND
                           int_a.location_cd  = c.location_cd(+) AND
                           int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               GROUP BY int_b.cln_master,int_a.instr_code;
               IS_ANY_ORA_ERROR
			    dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 added 2 lines*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend; 
printf("\n HH line 2417 - Avai = |%s|, Navl =|%s|, Penr = |%s|, Pend = |%s|", dbl_l_aggr_avai, dbl_l_aggr_navl, dbl_l_aggr_penr, dbl_l_aggr_pend);

               EXEC SQL SELECT nvl(sum(QTY),0)
                        INTO  :l_aggr_rfsafekeep_pos
                        FROM DL_LOCNCHG int_a, MT_LOCATION int_b , MT_CLIENT c
                        WHERE int_a.TO_LOCATION =int_b.location_cd and
                              int_a.client =c.cln_code and
                              c.cln_master = :p_SEL_VAL[6].link_tag AND
                              int_a.TO_LOCATION  = :p_SEL_VAL[10].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_b.AVAIL_IND ='AVAI' and
                              int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                              (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);
               IS_ANY_ORA_ERROR

               EXEC SQL SELECT nvl(sum(QTY),0)
                        INTO  :l_aggr_dfsafekeep_pos
                        FROM DL_LOCNCHG int_a, MT_LOCATION int_b , MT_CLIENT c
                        WHERE int_a.FRM_LOC =int_b.location_cd and
                              int_a.client =c.cln_code and
                              c.cln_master = :p_SEL_VAL[6].link_tag AND
                              int_a.FRM_LOC  = :p_SEL_VAL[10].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_b.AVAIL_IND ='AVAI' and
                              int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                              (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
               IS_ANY_ORA_ERROR
            }
            else
            {  /* TRAD_SETT_IND = N i.e traded = N  */
					Alert("\n Ashwin ");
				
					/*ISKB_1621 changes have been done in below query */
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
               FROM DL_HISSAFEK int_a,MT_LOCATION int_b
               WHERE int_a.client   = :p_SEL_VAL[9].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                     int_a.location_cd  = int_b.location_cd(+) AND
                              int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               GROUP BY int_a.client,int_a.instr_code;
               IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 2 lines added*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;
            }
         }
       }
       else 
       { /* NON CONSOLIDATED HISTORY */
	   printf("\n Testing1 inside main else condition for non consolidated history and the flag is = |%s|\n", p_SEL_VAL[11].link_tag);
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
					Alert("\n Ashwin ");
/*ISKB_1621 changes have been done in below query */
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                                NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                                NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                                NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                                NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                        INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl , :dbl_l_aggr_penr, :dbl_l_aggr_pend
                        FROM DL_HISSAFEK int_a,MT_LOCATION int_b
                        WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_a.location_cd = int_b.location_cd(+) AND
                              int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                        GROUP BY int_a.client,int_a.instr_code;
               IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 added 2 lines*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend; 
printf("\n HH line 2482 - Avai = |%s|, Navl =|%s|, Penr = |%s|, Pend = |%s|", dbl_l_aggr_avai, dbl_l_aggr_navl, dbl_l_aggr_penr, dbl_l_aggr_pend);

               EXEC SQL SELECT nvl(sum(QTY),0)
                        INTO  :l_aggr_rfsafekeep_pos
                        FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                        WHERE int_a.TO_LOCATION =int_b.location_cd and
                              int_a.client = :p_SEL_VAL[9].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_b.AVAIL_IND ='AVAI' and
                              int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                              (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
                 IS_ANY_ORA_ERROR

                 EXEC SQL SELECT nvl(sum(QTY),0)
                           INTO  :l_aggr_dfsafekeep_pos
                           FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                           WHERE int_a.FRM_LOC =int_b.location_cd and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
                 IS_ANY_ORA_ERROR
            }
            else
            { /* TRAD_SETT_IND = N i.e traded = N  */
					Alert("\n Ashwin ");
				
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
                         FROM DL_HISSAFEK int_a,MT_LOCATION int_b
                         WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                               int_a.instr_code  = :h_instr_code AND
                               int_a.location_cd = int_b.location_cd(+) AND
                               int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                        GROUP BY int_a.client,int_a.instr_code;
               IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 2 lines added*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;
			   
            }
         }
    }
    else
    { /* for non history positions */
printf("\n ***** ISKB_1621 ************** For non history positions Testing1 inside  else condition flag 11 and flag 13 and msgno are = |%s|, |%s|, |%s|\n", p_STAT_VAL[11].link_tag , p_STAT_VAL[13].link_tag, chr_p_msgno); 
       if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0 && strcmp(p_STAT_VAL[13].link_tag,"S") == 0)
       {
         if(strcmp(chr_p_msgno,"535B")==0)
         {
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
					Alert("\n Ashwin ");
/*ISKB_1621 changes have been done in below query */
               EXEC SQL 
SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0) +
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0) +
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                        INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
                        FROM DL_SAFEK int_a,MT_LOCATION int_b
                        WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_a.location_cd = int_b.location_cd(+)
                        GROUP BY int_a.client,int_a.instr_code;
                IS_ANY_ORA_ERROR
				 dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 added 2 lines*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend; 
printf("HH line 2545 - Avai = |%s|, Navl =|%s|, Penr = |%s|, Pend = |%s|", dbl_l_aggr_avai, dbl_l_aggr_navl, dbl_l_aggr_penr, dbl_l_aggr_pend);

                EXEC SQL SELECT nvl(sum(QTY),0)	
                         INTO  :l_aggr_rfsafekeep_pos
                         FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                         WHERE int_a.TO_LOCATION =int_b.location_cd and
                               int_a.client = :p_SEL_VAL[9].link_tag AND
                               int_a.instr_code  = :h_instr_code AND
                               int_b.AVAIL_IND ='AVAI' and
                               to_char(int_a.checker_dt,'DD/MM/YYYY') <=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                               (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                 IS_ANY_ORA_ERROR

                 EXEC SQL SELECT nvl(sum(QTY),0)
                          INTO  :l_aggr_dfsafekeep_pos
                          FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                          WHERE int_a.FRM_LOC =int_b.location_cd and
                                int_a.client = :p_SEL_VAL[9].link_tag AND
                                int_a.instr_code  = :h_instr_code AND
                                int_b.AVAIL_IND ='AVAI' and
                                to_char(int_a.checker_dt,'DD/MM/YYYY') <=
                                  to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                                (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >=
                                  to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
                IS_ANY_ORA_ERROR
            }
            else
            { 
					/* TRAD_SETT_IND = N i.e traded = N */
					Alert("\n Ashwin ");
                EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
               FROM DL_HISSAFEK int_a,MT_LOCATION int_b
                         WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                               int_a.instr_code  = :h_instr_code AND
                     int_a.location_cd  = int_b.location_cd(+) AND
                     int_a.POSIT_DATE   = :p_STAT_VAL[2].link_tag
                         GROUP BY int_a.client,int_a.instr_code;

                 IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 2 lines added*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;
            }
         }
         else
         {
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
					Alert("\n Ashwin ");

               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_Rec,0),0))),0) +
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_A.dp_del,0),0))),0) +
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                        INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
                        FROM MT_CLIENT int_b,DL_SAFEK int_a,MT_LOCATION c
                        WHERE int_a.client = int_b.cln_code AND
                              int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_a.location_cd = c.location_cd(+)
                        GROUP BY int_b.cln_master,int_a.instr_code;
						  dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 added 2 lines*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend; 
printf("HH line 2609 - Avai = |%s|, Navl =|%s|, Penr = |%s|, Pend = |%s|", dbl_l_aggr_avai, dbl_l_aggr_navl, dbl_l_aggr_penr, dbl_l_aggr_pend);


               IS_ANY_ORA_ERROR

               EXEC SQL SELECT nvl(sum(QTY),0)
                        INTO  :l_aggr_rfsafekeep_pos
                        FROM DL_LOCNCHG int_a, MT_LOCATION int_b, MT_CLIENT c
                        WHERE int_a.TO_LOCATION =int_b.location_cd and
                              int_a.client = c.cln_code and
                              c.cln_master = :p_SEL_VAL[6].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_b.AVAIL_IND ='AVAI' and
                              to_char(int_a.checker_dt,'DD/MM/YYYY') <=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                              (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                IS_ANY_ORA_ERROR

               EXEC SQL SELECT nvl(sum(QTY),0)
                        INTO  :l_aggr_dfsafekeep_pos
                        FROM DL_LOCNCHG int_a, MT_LOCATION int_b, MT_CLIENT c
                        WHERE int_a.FRM_LOC =int_b.location_cd and
                              int_a.client = c.cln_code and
                              c.cln_master = :p_SEL_VAL[6].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_b.AVAIL_IND ='AVAI' and
                              to_char(int_a.checker_dt,'DD/MM/YYYY') <=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                              (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

               IS_ANY_ORA_ERROR
            }
            else
            {
					Alert("\n Ashwin ");
				
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
               FROM DL_HISSAFEK int_a,MT_LOCATION int_b
               WHERE int_a.client   = :p_SEL_VAL[9].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                     int_a.location_cd  = int_b.location_cd(+) AND
                     int_a.POSIT_DATE   = :p_STAT_VAL[2].link_tag
               GROUP BY int_a.client,int_a.instr_code;
               IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 2 lines added*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;
            }
         }
       }
       else
       {
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
					Alert("\n Ashwin ");

/*ISKB_1621 changes have been done in below query */
               EXEC SQL 
SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,0,'CABL',int_a.safekeep_pos,0))),0),
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0) +
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0) +
                        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                        INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
                        FROM DL_SAFEK int_a,MT_LOCATION int_b
                        WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
                              int_a.location_cd = int_b.location_cd(+)
                        GROUP BY int_a.client,int_a.instr_code;
						  dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 added 2 lines*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend; 
printf("HH line 2679 - Avai = |%s|, Navl =|%s|, Penr = |%s|, Pend = |%s|", dbl_l_aggr_avai, dbl_l_aggr_navl, dbl_l_aggr_penr, dbl_l_aggr_pend);


                IS_ANY_ORA_ERROR

                EXEC SQL SELECT nvl(sum(QTY),0)
                         INTO  :l_aggr_rfsafekeep_pos
                         FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                         WHERE int_a.TO_LOCATION =int_b.location_cd and
                               int_a.client = :p_SEL_VAL[9].link_tag AND
                               int_a.instr_code  = :h_instr_code AND
                               int_b.AVAIL_IND ='AVAI' and
                               to_char(int_a.checker_dt,'DD/MM/YYYY') <=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                               (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >=
                                 to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                IS_ANY_ORA_ERROR

                EXEC SQL SELECT nvl(sum(QTY),0)
                         INTO  :l_aggr_dfsafekeep_pos
                         FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                         WHERE int_a.FRM_LOC =int_b.location_cd and
                               int_a.client = :p_SEL_VAL[9].link_tag AND
                               int_a.instr_code  = :h_instr_code AND
                               int_b.AVAIL_IND ='AVAI' and
                               to_char(int_a.checker_dt,'DD/MM/YYYY') <=
                                  to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                              (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >=
                                  to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                IS_ANY_ORA_ERROR
            }
            else
            {
					Alert("\n Ashwin ");
				
			
               EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'BLCK',int_a.safekeep_pos,'CABL',int_a.safekeep_pos,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0) +
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :dbl_l_aggr_avai, :dbl_l_aggr_navl, :dbl_l_aggr_penr, :dbl_l_aggr_pend
               FROM DL_SAFEK int_a,MT_LOCATION int_b
                        WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                              int_a.instr_code  = :h_instr_code AND
							int_a.location_cd  = int_b.location_cd(+)
                        GROUP BY int_a.client,int_a.instr_code;

               IS_ANY_ORA_ERROR
			   dbl_l_aggr_avai = dbl_l_aggr_avai - dbl_l_aggr_pend; /*ISKB_1621 2 lines added*/
			   dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;
            }
       }
    }
printf("\n Testing1 values are ****** dbl_l_aggr_penr = |%lf|, l_aggr_rfsafekeep_pos =|%lf|, l_aggr_dfsafekeep_pos=|%lf|\n", dbl_l_aggr_penr, l_aggr_rfsafekeep_pos, l_aggr_dfsafekeep_pos);

    dbl_l_aggr_penr = dbl_l_aggr_penr - l_aggr_rfsafekeep_pos;
    dbl_l_aggr_pend = dbl_l_aggr_pend - l_aggr_dfsafekeep_pos;

	 printf("\n Testing_Before values are ****** dbl_l_aggr_avai = |%lf|, dbl_l_aggr_penr =|%lf|, dbl_l_aggr_pend=|%lf|\n,, dbl_l_aggr_navl=|%lf|\n", dbl_l_aggr_avai, dbl_l_aggr_penr, dbl_l_aggr_pend,dbl_l_aggr_navl);
	 /** Since for custody we are not playing back penr and pend we would be skipping this step 
	dbl_l_aggr_avai = dbl_l_aggr_avai + dbl_l_aggr_penr - dbl_l_aggr_pend;
    dbl_l_aggr_navl = dbl_l_aggr_navl + dbl_l_aggr_pend;ISKB_1621 check */
	
	dbl_l_aggr_avai = dbl_l_aggr_avai + dbl_l_aggr_penr;
	
	 Alert ("After ****** AVAI = |%lf| NAVL = |%lf| PENR = |%lf| PEND = |%lf | ",dbl_l_aggr_avai,dbl_l_aggr_navl,dbl_l_aggr_pend,dbl_l_aggr_penr);
    fflush(stdout);


    if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
      (strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
      (strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
    {
       dbl_l_aggr_avai = dbl_l_aggr_avai * p_SEL_VAL[8].NUM_VAL;
       dbl_l_aggr_navl = dbl_l_aggr_navl * p_SEL_VAL[8].NUM_VAL;
    }

	/* Changes done for contractual position display by Imran Start*/
	printf("\n Here.....NOW.......IMRAN...Message Number is [%s] >>>>",chr_p_msgno); 
	h_safekeep_pos = dbl_l_aggr_avai;
	printf("\n Safekeep_93B:AGGR [%lf] >>>>",h_safekeep_pos);
	/* Changes done for contractual position display by Imran End*/

	 h_rflocnsafekeep_pos1	= l_aggr_rfsafekeep_pos;	
	 h_dflocnsafekeep_pos1	= l_aggr_dfsafekeep_pos;

    fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"AGGR_AVAI=",dbl_l_aggr_avai);
    fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"AGGR_NAVL=",dbl_l_aggr_navl);






	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYTOTPORTFOLIO=",h_currencycode);

	printf("\n ************* tux format specifier = |%s| safekeep = |%lf| closing price = |%lf| exch rate = |%lf| ************",chr_h_roundstring_new,h_safekeep_pos,h_closing_pr,chr_l_exch_rate );
	fflush(stdout);

   if(h_safekeep_pos < 0) 
   {
       fprintf(p_Data_File,"%d%s",*p_rownum,"TOTPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*h_safekeep_pos * chr_l_exch_rate*(-1));
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEGPORT=N");
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NEG_TOTPORTFOLIO=N",h_currencycode);
	}
   else
   {
       fprintf(p_Data_File,"%d%s",*p_rownum,"TOTPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*h_safekeep_pos * chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEGPORT=");
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NEG_TOTPORTFOLIO=",h_currencycode);
   }


   
   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
      (strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
      (strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0))) 
   h_safekeep_pos = h_safekeep_pos * p_SEL_VAL[8].NUM_VAL;

	printf("PRINTING TOTSAFEK VALUE:%lf: \n",h_safekeep_pos);
    fflush(stdout);

	printf("PRINTING h_rflocnsafekeep_pos1 VALUE:%lf: \n",h_rflocnsafekeep_pos1);
    fflush(stdout);

	printf("PRINTING h_dflocnsafekeep_pos1 VALUE:%lf: \n",h_dflocnsafekeep_pos1);
    fflush(stdout);
   
	fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"TOTSAFEK=",h_safekeep_pos);
   fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECTOTSAFEK=4");


    if(strcmp(p_STAT_VAL[6].link_tag,"Y") == 0)  /** traded safek ***/
    {
		if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
		{
					Alert("\n Ashwin ");
		   h_new_totportfolio_amt=0;
			EXEC SQL SELECT NVL(sum(decode(DL_HISSAFEK.BLOCK_TYPE,'FREE',(safekeep_pos + NVALRECEIVE + VAL_REC - NVALDELIVER - VAL_DEL),safekeep_pos)),0) into :h_new_tradsafekeep_pos
 						FROM DL_HISSAFEK ,MT_LOCATION int_b
               	WHERE DL_HISSAFEK.client = :p_SEL_VAL[9].link_tag AND
                     DL_HISSAFEK.instr_code  = :h_instr_code AND
						 	DL_HISSAFEK.location_cd =int_b.location_cd and 	
                     DL_HISSAFEK.POSIT_DATE = :p_STAT_VAL[2].link_tag
               	GROUP by client,instr_code;

         IS_ANY_ORA_ERROR	

			EXEC SQL SELECT nvl(sum(QTY),0) into :h_rflocnsafekeep_pos 
						FROM DL_LOCNCHG int_a, MT_LOCATION int_b
						WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
								int_a.instr_code  = :h_instr_code AND
								int_a.TO_LOCATION =int_b.location_cd and
								int_b.AVAIL_IND ='AVAI' and	
								int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
								(int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);	

			IS_ANY_ORA_ERROR	

			EXEC SQL SELECT nvl(sum(QTY),0) into :h_dflocnsafekeep_pos 
						FROM DL_LOCNCHG  int_a, MT_LOCATION int_b
						WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
								int_a.instr_code  = :h_instr_code AND
								int_a.FRM_LOC =int_b.location_cd and
								int_b.AVAIL_IND ='AVAI' and	
								int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
								(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);	

			IS_ANY_ORA_ERROR	

			EXEC SQL SELECT 
							NVL(round(((:h_new_tradsafekeep_pos + :h_rflocnsafekeep_pos + :h_dflocnsafekeep_pos)*:chr_l_exch_rate*:h_closing_pr),:int_h_decimallen_new),0)  
							INTO :h_new_totportfolio_amt
							FROM  DUAL;
			IS_ANY_ORA_ERROR
		}
		else
		{
					Alert("\n Ashwin ");
			h_new_totportfolio_amt=0;
     		EXEC SQL SELECT NVL(sum(round((safekeep_pos*:chr_l_exch_rate*:h_closing_pr),:int_h_decimallen_new)),0) into :h_new_totportfolio_amt FROM DL_HISSAFEK
        			WHERE client = :p_SEL_VAL[9].link_tag AND
           				instr_code  = :h_instr_code AND
           				POSIT_DATE = :p_STAT_VAL[2].link_tag
        			GROUP by client,instr_code;

	     	IS_ANY_ORA_ERROR
		}

	}
	else
	{
      if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
      {
					Alert("\n Ashwin ");
         h_new_totportfolio_amt=0;
         EXEC SQL SELECT NVL(sum(decode(int_b.AVAIL_IND,'AVAI',(safekeep_pos + NVALRECEIVE + VAL_REC + DP_REC - NVALDELIVER - VAL_DEL - DP_DEL),safekeep_pos)),0) into :h_new_tradsafekeep_pos
                  FROM DL_SAFEK ,MT_LOCATION int_b
                  WHERE DL_SAFEK.client = :p_SEL_VAL[9].link_tag AND
                     DL_SAFEK.instr_code  = :h_instr_code AND
                     DL_SAFEK.location_cd =int_b.location_cd 
                  GROUP by client,instr_code;

         IS_ANY_ORA_ERROR

         EXEC SQL SELECT nvl(sum(QTY),0) into :h_rflocnsafekeep_pos
                  FROM DL_LOCNCHG int_a, MT_LOCATION int_b
                  WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.TO_LOCATION =int_b.location_cd and
                        int_b.AVAIL_IND ='AVAI' and
                        to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                        (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

         IS_ANY_ORA_ERROR

         EXEC SQL SELECT nvl(sum(QTY),0) into :h_dflocnsafekeep_pos
                  FROM DL_LOCNCHG  int_a, MT_LOCATION int_b
                  WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.FRM_LOC =int_b.location_cd and
                        int_b.AVAIL_IND ='AVAI' and
                        to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND
                        (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

         IS_ANY_ORA_ERROR

         EXEC SQL SELECT NVL(round(((:h_new_tradsafekeep_pos + :h_rflocnsafekeep_pos + :h_dflocnsafekeep_pos)*:chr_l_exch_rate*:h_closing_pr),:int_h_decimallen_new),0)
                     INTO :h_new_totportfolio_amt
                     FROM  DUAL;
         IS_ANY_ORA_ERROR
      }
      else
      {
					Alert("\n Ashwin ");
			h_new_totportfolio_amt=0;
     		EXEC SQL SELECT NVL(sum(round((safekeep_pos*:chr_l_exch_rate*:h_closing_pr),:int_h_decimallen_new)),0) into :h_new_totportfolio_amt FROM DL_SAFEK
        			WHERE client = :p_SEL_VAL[9].link_tag AND
           				instr_code  = :h_instr_code 
        			GROUP by client,instr_code;

	     	IS_ANY_ORA_ERROR
		}

	}
		
	if(sqlca.sqlcode == 1403)
		h_new_totportfolio_amt=0;
	
	if(h_new_totportfolio_amt < 0)
	{
		h_new_totportfolio_amt = h_new_totportfolio_amt * (-1);
   	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NEGTOTALPORTFOLIO=N",h_currencycode);
	}
	else
   	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NEGTOTALPORTFOLIO=",h_currencycode);
		
   fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NEW_TOTALPORTFOLIO=",h_new_totportfolio_amt);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYNEW_TOTALPORTFOLIO=",h_currencycode);
	

    if(strcmp(p_STAT_VAL[6].link_tag,"Y") == 0)
    {
       if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0 && 
          strcmp(p_STAT_VAL[13].link_tag,"S") == 0)
       {
		 
			if(strcmp(chr_p_msgno,"535B")==0)
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
					Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
						into :h_safekeep_pos_new FROM DL_HISSAFEK int_a , MT_LOCATION int_b
                  WHERE int_a.location_cd = int_b.location_cd and
								int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.location_cd = :p_SEL_VAL[10].link_tag AND
                        int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                  GROUP by client,instr_code;

                  IS_ANY_ORA_ERROR;

						printf("Q1h_safek_new is %f \n",h_safekeep_pos_new);
						if(sqlca.sqlcode == 1403)
							h_safekeep_pos_new = 0;
                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                        			int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag AND
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                        			int_a.FRM_LOC = :p_SEL_VAL[10].link_tag AND
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR

					}
					else
					{
					Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_HISSAFEK
           			WHERE client = :p_SEL_VAL[9].link_tag AND
               			instr_code  = :h_instr_code AND
								location_cd	= :p_SEL_VAL[10].link_tag AND
                 			POSIT_DATE = :p_STAT_VAL[2].link_tag
           			GROUP by client,instr_code;

						IS_ANY_ORA_ERROR;
						if(sqlca.sqlcode == 1403)
							h_safekeep_pos_new = 0;
				  	}
				}
				else
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
					Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_HISSAFEK int_a,MT_LOCATION int_b
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                  GROUP by client,instr_code;

                  IS_ANY_ORA_ERROR;
						if(sqlca.sqlcode == 1403)
							h_safekeep_pos_new = 0;

						printf("Q2h_safek_new is %f \n",h_safekeep_pos_new);
				fflush(stdout);

                 EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR


               }
               else
					{
						Alert("\n Ashwin ");
						EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_HISSAFEK
							WHERE client = :p_SEL_VAL[9].link_tag AND
							instr_code  = :h_instr_code AND
							POSIT_DATE = :p_STAT_VAL[2].link_tag
							GROUP by client,instr_code;

						IS_ANY_ORA_ERROR;
							if(sqlca.sqlcode == 1403)
								h_safekeep_pos_new = 0;
					}
				}
			}
			else
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");

                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_HISSAFEK int_a,MT_LOCATION int_b ,MT_CLIENT c
                  WHERE int_a.location_cd = int_b.location_cd and
								int_a.client = c.cln_code and 
								c.cln_master = :p_SEL_VAL[6].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.location_cd  = :p_SEL_VAL[10].link_tag AND
                        int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                  GROUP by c.cln_master,int_a.instr_code;

                  IS_ANY_ORA_ERROR;

							printf("Q3h_safek_new is %f \n",h_safekeep_pos_new);
							fflush(stdout);

						if(sqlca.sqlcode == 1403)
							h_safekeep_pos_new = 0;

                 EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b ,MT_CLIENT c
                           where int_a.TO_LOCATION =int_b.location_cd and
											int_a.client =c.cln_code and
                                 int_b.AVAIL_IND ='AVAI' and
                                 c.cln_master = :p_SEL_VAL[6].link_tag AND
                           		int_a.TO_LOCATION  = :p_SEL_VAL[10].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b, MT_CLIENT c
                           where int_a.FRM_LOC =int_b.location_cd and
											int_a.client =c.cln_code and
                                 int_b.AVAIL_IND ='AVAI' and
                                 c.cln_master = :p_SEL_VAL[6].link_tag AND
                           		int_a.FRM_LOC  = :p_SEL_VAL[10].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
               	     into :h_safekeep_pos_new
                    	FROM MT_CLIENT int_b,DL_HISSAFEK int_a
              			WHERE int_a.client = int_b.cln_code AND 
                 				int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                 				int_a.instr_code  = :h_instr_code AND
									int_a.location_cd	= :p_SEL_VAL[10].link_tag AND
                 				int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               		GROUP by int_b.cln_master,int_a.instr_code;

						IS_ANY_ORA_ERROR
							if(sqlca.sqlcode == 1403)
								h_safekeep_pos_new = 0;
					}
				}
				else
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_HISSAFEK int_a,MT_LOCATION int_b ,MT_CLIENT c
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = c.cln_code and
                        c.cln_master = :p_SEL_VAL[6].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                  GROUP by c.cln_master,int_a.instr_code;
						printf("Q4h_safek_new is %f \n",h_safekeep_pos_new);
						if(sqlca.sqlcode == 1403)
							h_safekeep_pos_new = 0;

                EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b ,MT_CLIENT c
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_a.client =c.cln_code and
                                 int_b.AVAIL_IND ='AVAI' and
                                 c.cln_master = :p_SEL_VAL[6].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b ,MT_CLIENT c
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_a.client =c.cln_code and
                                 int_b.AVAIL_IND ='AVAI' and
                                 c.cln_master = :p_SEL_VAL[6].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR


               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
               	     into :h_safekeep_pos_new
                    	FROM MT_CLIENT int_b,DL_HISSAFEK int_a
              			WHERE int_a.client = int_b.cln_code AND 
                 				int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                 				int_a.instr_code  = :h_instr_code AND
                 				int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               		GROUP by int_b.cln_master,int_a.instr_code;

              		IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
				}
			}
       }
       else
       {
			if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
			{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");

                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_HISSAFEK int_a,MT_LOCATION int_b 
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
					  			int_a.location_cd = :p_SEL_VAL[10].link_tag AND
                        int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                  GROUP by client,instr_code;

	printf("Q5h_safek_new is %f \n",h_safekeep_pos_new);
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
                EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b 
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
					  						int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
					  						int_a.FRM_LOC = :p_SEL_VAL[10].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_HISSAFEK
              		WHERE client = :p_SEL_VAL[9].link_tag AND
                 			instr_code  = :h_instr_code AND
					  			location_cd = :p_SEL_VAL[10].link_tag AND
                 			POSIT_DATE = :p_STAT_VAL[2].link_tag
               	GROUP by client,instr_code;

              		IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
			}
			else
			{
             if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
             {
						Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
                                  + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
                                  - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_HISSAFEK int_a,MT_LOCATION int_b
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
                  GROUP by client,instr_code;

              		IS_ANY_ORA_ERROR
	printf("Q6h_safek_new is %f \n",h_safekeep_pos_new);
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
                EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                                 int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                                 (int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);

                  IS_ANY_ORA_ERROR
             }
             else
             {
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_HISSAFEK
              				WHERE client = :p_SEL_VAL[9].link_tag AND
                 			instr_code  = :h_instr_code AND
                 			POSIT_DATE = :p_STAT_VAL[2].link_tag
               	GROUP by client,instr_code;

 	             IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
				}
			}
        }
    }
    else
    {
       if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0 &&
          strcmp(p_STAT_VAL[13].link_tag,"S") == 0)
       {
		 
			if(strcmp(chr_p_msgno,"535B")==0)
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                         + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
                         + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                         - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
                         - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_SAFEK int_a , MT_LOCATION int_b
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.location_cd = :p_SEL_VAL[10].link_tag 
                  GROUP by client,instr_code;

                  IS_ANY_ORA_ERROR
	printf("Q7h_safek_new is %f \n",h_safekeep_pos_new);
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag AND
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.FRM_LOC = :p_SEL_VAL[10].link_tag AND
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                        AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
                  IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_SAFEK
           			WHERE client = :p_SEL_VAL[9].link_tag AND
               			instr_code  = :h_instr_code AND
								location_cd = :p_SEL_VAL[10].link_tag  
           			GROUP by client,instr_code;

 				      IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
				}
				else
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_SAFEK int_a , MT_LOCATION int_b
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code 
                  GROUP by client,instr_code;

                  IS_ANY_ORA_ERROR
	printf("Q8h_safek_new is %f \n",h_safekeep_pos_new);
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
                  IS_ANY_ORA_ERROR
                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                        AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
                  IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_SAFEK
           			WHERE client = :p_SEL_VAL[9].link_tag AND
               			instr_code  = :h_instr_code 
           			GROUP by client,instr_code;

 				      IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
				}
			}
			else
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");

                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_SAFEK int_a,MT_LOCATION int_b ,MT_CLIENT c
                  WHERE int_a.location_cd = int_b.location_cd and
               			int_a.client = c.cln_code AND 
                        int_a.instr_code  = :h_instr_code  and
								int_a.location_cd = :p_SEL_VAL[10].link_tag and
                  	   c.cln_master = :p_SEL_VAL[6].link_tag 
                  GROUP by c.cln_master,instr_code;

	printf("Q9h_safek_new is %f \n",h_safekeep_pos_new);
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
                EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b ,MT_CLIENT c
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = c.cln_code AND
                                 int_a.instr_code  = :h_instr_code AND
											int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag and
                  	   			c.cln_master = :p_SEL_VAL[6].link_tag  and
											to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b, MT_CLIENT c
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = c.cln_code AND
                                 int_a.instr_code  = :h_instr_code AND
											int_a.FRM_LOC = :p_SEL_VAL[10].link_tag and
                  	   			c.cln_master = :p_SEL_VAL[6].link_tag  and
											to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                  IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                    	into :h_safekeep_pos_new
               	FROM MT_CLIENT int_b,DL_SAFEK int_a
               	WHERE int_a.client = int_b.cln_code AND 
                  	   int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                     	int_a.instr_code  = :h_instr_code AND
								int_a.location_cd = :p_SEL_VAL[10].link_tag
               	GROUP by int_b.cln_master,int_a.instr_code;

 		           	IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
				}
				else
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_SAFEK int_a,MT_LOCATION int_b ,MT_CLIENT c
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = c.cln_code AND
                        int_a.instr_code  = :h_instr_code  and
                        c.cln_master = :p_SEL_VAL[6].link_tag
                  GROUP by c.cln_master,int_a.instr_code;

						IS_ANY_ORA_ERROR
	printf("Q10h_safek_new is %f \n",h_safekeep_pos_new);
	printf("|%s|%s|\n",p_SEL_VAL[6].link_tag,chr_h_prepdate_new1);
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;

                EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b ,MT_CLIENT c
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = c.cln_code AND
                                 int_a.instr_code  = :h_instr_code AND
                                 c.cln_master = :p_SEL_VAL[6].link_tag  and
                                 to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b, MT_CLIENT c
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = c.cln_code AND
                                 int_a.instr_code  = :h_instr_code AND
                                 c.cln_master = :p_SEL_VAL[6].link_tag  and
                                 to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

                  IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                  	  into :h_safekeep_pos_new
               	FROM MT_CLIENT int_b,DL_SAFEK int_a
               	WHERE int_a.client = int_b.cln_code AND 
                  	   int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                     	int_a.instr_code  = :h_instr_code 
               	GROUP by int_b.cln_master,int_a.instr_code;

 		           	IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
				}
			}
       }
       else
       {
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_SAFEK int_a , MT_LOCATION int_b
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code AND
                        int_a.location_cd = :p_SEL_VAL[10].link_tag
                  GROUP by client,instr_code;

                  IS_ANY_ORA_ERROR
	printf("Q11h_safek_new is %f \n",h_safekeep_pos_new);
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag AND
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.FRM_LOC = :p_SEL_VAL[10].link_tag AND
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                       AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
                  IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_SAFEK
           			WHERE client = :p_SEL_VAL[9].link_tag AND
               			instr_code  = :h_instr_code AND
								location_cd = :p_SEL_VAL[10].link_tag  
           			GROUP by client,instr_code;

 				      IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
				}
				else
				{
               if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
               {
						Alert("\n Ashwin ");
                  EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
                       + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
                       - NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                  into :h_safekeep_pos_new FROM DL_SAFEK int_a,MT_LOCATION int_b
                  WHERE int_a.location_cd = int_b.location_cd and
                        int_a.client = :p_SEL_VAL[9].link_tag AND
                        int_a.instr_code  = :h_instr_code 
                  GROUP by client,instr_code;

						printf("Q12h_safek_new is %f \n",h_safekeep_pos_new);
						if(sqlca.sqlcode == 1403)
							h_safekeep_pos_new = 0;
                EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_rflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.TO_LOCATION =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         			to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));


                  IS_ANY_ORA_ERROR

                  EXEC SQL SELECT nvl(sum(int_a.QTY),0)
                           INTO :h_dflocnsafekeep_pos2
                           from DL_LOCNCHG int_a, MT_LOCATION int_b
                           where int_a.FRM_LOC =int_b.location_cd and
                                 int_b.AVAIL_IND ='AVAI' and
                                 int_a.client = :p_SEL_VAL[9].link_tag AND
                                 int_a.instr_code  = :h_instr_code AND
                         			to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY')
                        			AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));
	
						IS_ANY_ORA_ERROR
               }
               else
               {
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(safekeep_pos),0) into :h_safekeep_pos_new FROM DL_SAFEK
              		WHERE client = :p_SEL_VAL[9].link_tag AND
                 			instr_code  = :h_instr_code
             		GROUP by client,instr_code;

 		           	IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403)
	h_safekeep_pos_new = 0;
					}
				}
        }
   }

	/** Commented below line since location table is not used *****/
	/** h_safekeep_pos_new = h_safekeep_pos_new + h_dflocnsafekeep_pos2  - h_rflocnsafekeep_pos2 ;**/
	printf("h_safek_new is %f \n",h_safekeep_pos_new);
	fflush(stdout);

	printf("h_dflocnsafek2  is %f \n",h_dflocnsafekeep_pos2 );
	fflush(stdout);

	printf("h_rflocnsafek2 is %f \n",h_rflocnsafekeep_pos2);
    fflush(stdout);

        
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYNEW1_TOTPORTFOLIO=",p_SEL_VAL[4].link_tag);


   if(h_safekeep_pos_new < 0) 
   {
       fprintf(p_Data_File,"%d%s",*p_rownum,"NEW1_TOTPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*h_safekeep_pos_new * chr_l_exch_rate*(-1));
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW1_NEGPORT=N");
		 
		 p_STAT_VAL[15].NUM_VAL = (h_closing_pr*h_safekeep_pos_new * chr_l_exch_rate*(-1));
		 sprintf( p_STAT_VAL[15].link_tag,chr_h_roundstring_new, p_STAT_VAL[15].NUM_VAL);
		 strcpy(p_STAT_VAL[21].link_tag,"N");
		 printf("p_STAT_VAL[15].NUM_VAL is %f\n",p_STAT_VAL[15].NUM_VAL);
		 printf("p_STAT_VAL[15].link_tag is %s\n",p_STAT_VAL[15].link_tag);
		 
	}
   else
   {
       fprintf(p_Data_File,"%d%s",*p_rownum,"NEW1_TOTPORTFOLIO=");
       fprintf(p_Data_File,chr_h_roundstring_new,h_closing_pr*h_safekeep_pos_new * chr_l_exch_rate);
       fprintf(p_Data_File,"\n");
       fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW1_NEGPORT=");
		 
		 p_STAT_VAL[15].NUM_VAL = (h_closing_pr*h_safekeep_pos_new * chr_l_exch_rate);
		 sprintf( p_STAT_VAL[15].link_tag,chr_h_roundstring_new, p_STAT_VAL[15].NUM_VAL);
		 
		 strcpy(p_STAT_VAL[21].link_tag,"Y");
   }


   
   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
      (strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
      (strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0))) 
   h_safekeep_pos_new = h_safekeep_pos_new * p_SEL_VAL[8].NUM_VAL;

   
	fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_TOTSAFEK=",h_safekeep_pos_new);
   fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECNEW_TOTSAFEK=4");



	memset(chr_l_h_new_subbal_qual,APL_NULL_CHAR,5);
	l_i_new_subbal_qual=0;
	l_h_new_subbal_safekeep_pos=0;
	l_h_new_avai_safekeep_pos=0;
	l_h_new_navl_safekeep_pos=0;
	h_penr_safekeep_pos=0;
	h_pend_safekeep_pos=0;
    if(strcmp(p_STAT_VAL[6].link_tag,"Y") == 0)
    {
       
       if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0 && 
          strcmp(p_STAT_VAL[13].link_tag,"S") == 0)
       {
			if(strcmp(chr_p_msgno,"535B")==0)
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
            	if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            	{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(SUM(int_a.safekeep_pos),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										int_b.AVAIL_IND,
										NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
								 into :l_h_new_subbal_safekeep_pos,:chr_l_h_new_subbal_qual:l_i_new_subbal_qual,
										:h_penr_safekeep_pos, :h_pend_safekeep_pos
						FROM DL_HISSAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               			int_a.instr_code  = :h_instr_code AND
								int_a.location_cd	= int_b.location_cd AND
								int_b.location_cd	= :p_SEL_VAL[10].link_tag AND
                 			int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
           			GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

 	          		IS_ANY_ORA_ERROR
						
						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
									int_a.TO_LOCATION  = :p_SEL_VAL[10].link_tag AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
									int_a.FRM_LOC  = :p_SEL_VAL[10].link_tag AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR
					}
					else
					{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(SUM(int_a.safekeep_pos),0),
										int_b.AVAIL_IND into :l_h_new_subbal_safekeep_pos,:chr_l_h_new_subbal_qual:l_i_new_subbal_qual
						FROM DL_HISSAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               			int_a.instr_code  = :h_instr_code AND
								int_a.location_cd	= int_b.location_cd AND
								int_b.location_cd	= :p_SEL_VAL[10].link_tag AND
                 			int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
           			GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

 	          		IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
					}
					if(l_i_new_subbal_qual == -1)
						strcpy(chr_l_h_new_subbal_qual,"");

			

					
					l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
						{
						l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						}

			
					if(l_h_new_subbal_safekeep_pos>0)
   				fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_SUBBAL_SAFEK=",l_h_new_subbal_safekeep_pos);
   				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SUBBAL_QUAL=",chr_l_h_new_subbal_qual);
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_AVAI_SAFEK=0");
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NAVL_SAFEK=0");
					if(h_penr_safekeep_pos>0)
   				fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
					else
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
					if(h_pend_safekeep_pos>0)
   				fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
					else
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
					
			  	}
				else
				{
					

			   if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
                              + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
                              + NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
					INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos ,
						  :h_penr_safekeep_pos,:h_pend_safekeep_pos
					FROM DL_HISSAFEK int_a,MT_LOCATION int_b
           		WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd	= int_b.location_cd(+) AND
                 		int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
           		GROUP by int_a.client,int_a.instr_code;

           		IS_ANY_ORA_ERROR
						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR
				}
				else
				{
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
										NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0)
					INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos FROM DL_HISSAFEK int_a,MT_LOCATION int_b
           		WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd	= int_b.location_cd(+) AND
                 		int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
           		GROUP by int_a.client,int_a.instr_code;

           		IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
				}
   				
					l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						l_h_new_navl_safekeep_pos = l_h_new_navl_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			

					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_AVAI_SAFEK=",l_h_new_avai_safekeep_pos);
					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_NAVL_SAFEK=",l_h_new_navl_safekeep_pos);
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_SAFEK=0");
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_QUAL=");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
			}
			else
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
            	if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            	{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										c.AVAIL_IND,
										 NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										 NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               	     	into :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual,
                             :h_penr_safekeep_pos, :h_pend_safekeep_pos
                  	  	FROM MT_CLIENT int_b,DL_HISSAFEK int_a,MT_LOCATION c
              				WHERE int_a.client = int_b.cln_code AND 
                 					int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                 					int_a.instr_code  = :h_instr_code AND
										int_a.location_cd = c.location_cd(+) AND
										c.location_cd	= :p_SEL_VAL[10].link_tag AND
                 					int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               			GROUP by int_b.cln_master,int_a.instr_code,c.AVAIL_IND;

 	             IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b , MT_CLIENT c
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client =c.cln_code and 
									c.cln_master = :p_SEL_VAL[6].link_tag AND
									int_a.TO_LOCATION  = :p_SEL_VAL[10].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b , MT_CLIENT c
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client =c.cln_code and 
									c.cln_master = :p_SEL_VAL[6].link_tag AND
									int_a.FRM_LOC  = :p_SEL_VAL[10].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR
					}
					else
					{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0),
										c.AVAIL_IND
               	     	into :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual
                  	  	FROM MT_CLIENT int_b,DL_HISSAFEK int_a,MT_LOCATION c
              				WHERE int_a.client = int_b.cln_code AND 
                 					int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                 					int_a.instr_code  = :h_instr_code AND
										int_a.location_cd = c.location_cd(+) AND
										c.location_cd	= :p_SEL_VAL[10].link_tag AND
                 					int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               			GROUP by int_b.cln_master,int_a.instr_code,c.AVAIL_IND;

 	             	IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
					}

					if(l_i_new_subbal_qual == -1)
						strcpy(chr_l_h_new_subbal_qual,"");

					l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}
			
					if(l_h_new_subbal_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_SUBBAL_SAFEK=",l_h_new_subbal_safekeep_pos);
   				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SUBBAL_QUAL=",chr_l_h_new_subbal_qual);
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_AVAI_SAFEK=0");
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NAVL_SAFEK=0");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
				else
				{
					
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                                NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0),
										  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
                		INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos,
									:h_penr_safekeep_pos, :h_pend_safekeep_pos 
                    	FROM MT_CLIENT int_b,DL_HISSAFEK int_a,MT_LOCATION c
              			WHERE int_a.client = int_b.cln_code AND 
                 				int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                 				int_a.instr_code  = :h_instr_code AND
									int_a.location_cd	= c.location_cd(+) AND
                 				int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               		GROUP by int_b.cln_master,int_a.instr_code;

              IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b , MT_CLIENT c
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client =c.cln_code and 
									c.cln_master = :p_SEL_VAL[6].link_tag AND
									int_a.TO_LOCATION  = :p_SEL_VAL[10].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b , MT_CLIENT c
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client =c.cln_code and 
									c.cln_master = :p_SEL_VAL[6].link_tag AND
									int_a.FRM_LOC  = :p_SEL_VAL[10].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR
				}
				else
				{
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                               NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0)
                		INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos 
                    	FROM MT_CLIENT int_b,DL_HISSAFEK int_a,MT_LOCATION c
              			WHERE int_a.client = int_b.cln_code AND 
                 				int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                 				int_a.instr_code  = :h_instr_code AND
									int_a.location_cd	= c.location_cd(+) AND
                 				int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               		GROUP by int_b.cln_master,int_a.instr_code;

              IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
				}
					l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
				
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						l_h_new_navl_safekeep_pos = l_h_new_navl_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			

					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_AVAI_SAFEK=",l_h_new_avai_safekeep_pos);
					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_NAVL_SAFEK=",l_h_new_navl_safekeep_pos);
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_SAFEK=0");
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_QUAL=");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
			}
       }
       else
       {
			if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
			{
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
									+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
									+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
									int_b.AVAIL_IND ,
									  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
									+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
									  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
									+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
					INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual ,
							:h_penr_safekeep_pos, :h_pend_safekeep_pos
					FROM DL_HISSAFEK int_a,MT_LOCATION int_b
              	WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                 		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd = int_b.location_cd(+) AND
					  		int_b.location_cd = :p_SEL_VAL[10].link_tag AND
                 		int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

              IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.TO_LOCATION  = :p_SEL_VAL[10].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.RF_SETL_DATE is null or int_a.RF_SETL_DATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.FRM_LOC  = :p_SEL_VAL[10].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR
				}
				else
				{
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0),
									int_b.AVAIL_IND 
					INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual 
					FROM DL_HISSAFEK int_a,MT_LOCATION int_b
              	WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                 		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd = int_b.location_cd(+) AND
					  		int_b.location_cd = :p_SEL_VAL[10].link_tag AND
                 		int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
               GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

              IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
				}
					if(l_i_new_subbal_qual == -1)
						strcpy(chr_l_h_new_subbal_qual,"");

					l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;

			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
	               h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;	
					}
			
					if(l_h_new_subbal_safekeep_pos>0) 
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_SUBBAL_SAFEK=",l_h_new_subbal_safekeep_pos);
   				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SUBBAL_QUAL=",chr_l_h_new_subbal_qual);
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_AVAI_SAFEK=0");
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NAVL_SAFEK=0");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
			}
			else
			{
				

            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                	              NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0),
										  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL,0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
            	INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos ,
							:h_penr_safekeep_pos, :h_pend_safekeep_pos
					FROM DL_HISSAFEK int_a,MT_LOCATION int_b
           		WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                 int_a.instr_code  = :h_instr_code AND
					  int_a.location_cd = int_b.location_cd(+) AND
                 int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
 	          	GROUP by int_a.client,int_a.instr_code;

 	          	IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
                        	int_a.checker_dt <= :p_STAT_VAL[2].link_tag AND
                        	(int_a.DF_SETLDATE is null or int_a.DF_SETLDATE >= :p_STAT_VAL[2].link_tag);
						
					  IS_ANY_ORA_ERROR
				}
				else
				{
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                	             NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0)
            	INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos 
					FROM DL_HISSAFEK int_a,MT_LOCATION int_b
           		WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                 int_a.instr_code  = :h_instr_code AND
					  int_a.location_cd = int_b.location_cd(+) AND
                 int_a.POSIT_DATE = :p_STAT_VAL[2].link_tag
 	          	GROUP by int_a.client,int_a.instr_code;

 	          	IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
				}
					l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;

			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						l_h_new_navl_safekeep_pos = l_h_new_navl_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			

				fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_AVAI_SAFEK=",l_h_new_avai_safekeep_pos);
				fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_NAVL_SAFEK=",l_h_new_navl_safekeep_pos);
   			fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_SAFEK=0");
   			fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_QUAL=");
            if(h_penr_safekeep_pos>0)
            fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
            else
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
            if(h_pend_safekeep_pos>0)
            fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
            else
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
			}
      }
    }
    else
    {
       if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0 &&
          strcmp(p_STAT_VAL[13].link_tag,"S") == 0)
       {
			if(strcmp(chr_p_msgno,"535B")==0)
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
            	if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            	{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0) 
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										int_b.AVAIL_IND,
								NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
								NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
						INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual ,
                       :h_penr_safekeep_pos, :h_pend_safekeep_pos
						FROM DL_SAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd	= int_b.location_cd(+) AND
							int_b.location_cd = :p_SEL_VAL[10].link_tag  
 	          		GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

 				      IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
									int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag and
					          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
								AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));	

					  	IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
									int_a.FRM_LOC = :p_SEL_VAL[10].link_tag and
					          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
								AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));	

					  IS_ANY_ORA_ERROR
					}	
					else
					{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0) ,
										int_b.AVAIL_IND
						INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual 
						FROM DL_SAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd	= int_b.location_cd(+) AND
							int_b.location_cd = :p_SEL_VAL[10].link_tag  
 	          		GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

 				      IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
					}
					if(l_i_new_subbal_qual == -1)
						strcpy(chr_l_h_new_subbal_qual,"");

					l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			
					if(l_h_new_subbal_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_SUBBAL_SAFEK=",l_h_new_subbal_safekeep_pos);
   				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SUBBAL_QUAL=",chr_l_h_new_subbal_qual);
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_AVAI_SAFEK=0");
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NAVL_SAFEK=0");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
				else
				{
					
            	if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            	{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                      NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0),
								NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
								NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)

               	INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos,
								:h_penr_safekeep_pos, :h_pend_safekeep_pos
						FROM DL_SAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               			int_a.instr_code  = :h_instr_code AND
								int_a.location_cd = int_b.location_cd(+)
           			GROUP by int_a.client,int_a.instr_code;

 				      IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
					          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
								AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));	

					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b 
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client = :p_SEL_VAL[9].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
					          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
								AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));	

					  IS_ANY_ORA_ERROR
					}
					else
					{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                        	        NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0)
               	INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos
						FROM DL_SAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               			int_a.instr_code  = :h_instr_code AND
								int_a.location_cd = int_b.location_cd(+)
           			GROUP by int_a.client,int_a.instr_code;

 				      IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
					}
					l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						l_h_new_navl_safekeep_pos = l_h_new_navl_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			

					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_AVAI_SAFEK=",l_h_new_avai_safekeep_pos);
					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_NAVL_SAFEK=",l_h_new_navl_safekeep_pos);
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_SAFEK=0");
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_QUAL=");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
			}
			else
			{
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
            	if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            	{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
										c.AVAIL_IND,
								NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
									NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
										+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
						INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual ,
                       :h_penr_safekeep_pos, :h_pend_safekeep_pos
               	FROM MT_CLIENT int_b,DL_SAFEK int_a,MT_LOCATION c
               	WHERE int_a.client = int_b.cln_code AND 
                  	   int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                     	int_a.instr_code  = :h_instr_code AND
								int_a.location_cd = c.location_cd(+) AND
								c.location_cd = :p_SEL_VAL[10].link_tag
               	GROUP by int_b.cln_master,int_a.instr_code,c.AVAIL_IND;

 		           	IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_rfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b  , MT_CLIENT c
									WHERE int_a.TO_LOCATION =int_b.location_cd and 
									int_a.client = c.cln_code and
									c.cln_master = :p_SEL_VAL[6].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
									int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag and
					          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
								AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));	

					  IS_ANY_ORA_ERROR

						EXEC SQL SELECT nvl(sum(QTY),0)
									INTO	:h_dfsafekeep_pos
									FROM DL_LOCNCHG int_a, MT_LOCATION int_b  , MT_CLIENT c
									WHERE int_a.FRM_LOC =int_b.location_cd and 
									int_a.client = c.cln_code and
									c.cln_master = :p_SEL_VAL[6].link_tag AND
									int_a.instr_code  = :h_instr_code AND
								   int_b.AVAIL_IND ='AVAI' and
									int_a.FRM_LOC = :p_SEL_VAL[10].link_tag and
					          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
								AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));	

					  IS_ANY_ORA_ERROR
					}
					else
					{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0),
										c.AVAIL_IND
						INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual 
               	FROM MT_CLIENT int_b,DL_SAFEK int_a,MT_LOCATION c
               	WHERE int_a.client = int_b.cln_code AND 
                  	   int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                     	int_a.instr_code  = :h_instr_code AND
								int_a.location_cd = c.location_cd(+) AND
								c.location_cd = :p_SEL_VAL[10].link_tag
               	GROUP by int_b.cln_master,int_a.instr_code,c.AVAIL_IND;

 		           	IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
					}
					if(l_i_new_subbal_qual == -1)
						strcpy(chr_l_h_new_subbal_qual,"");

					l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos - h_rfsafekeep_pos;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			
					if(l_h_new_subbal_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_SUBBAL_SAFEK=",l_h_new_subbal_safekeep_pos);
   				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SUBBAL_QUAL=",chr_l_h_new_subbal_qual);
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_AVAI_SAFEK=0");
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NAVL_SAFEK=0");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
				else
				{
					
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                   NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0),
							NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
							NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos,
                    :h_penr_safekeep_pos, :h_pend_safekeep_pos
               FROM MT_CLIENT int_b,DL_SAFEK int_a,MT_LOCATION c
               WHERE int_a.client = int_b.cln_code AND 
                     int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                     int_a.instr_code  = :h_instr_code AND
							int_a.location_cd = c.location_cd(+)
               GROUP by int_b.cln_master,int_a.instr_code;

            	IS_ANY_ORA_ERROR

					EXEC SQL SELECT nvl(sum(QTY),0)
								INTO	:h_rfsafekeep_pos
								FROM DL_LOCNCHG int_a, MT_LOCATION int_b, MT_CLIENT c
								WHERE int_a.TO_LOCATION =int_b.location_cd and 
								int_a.client = c.cln_code and
								c.cln_master = :p_SEL_VAL[6].link_tag AND
								int_a.instr_code  = :h_instr_code AND
							   int_b.AVAIL_IND ='AVAI' and
				          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
							 AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

					 IS_ANY_ORA_ERROR

					EXEC SQL SELECT nvl(sum(QTY),0)
								INTO	:h_dfsafekeep_pos
								FROM DL_LOCNCHG int_a, MT_LOCATION int_b, MT_CLIENT c
								WHERE int_a.FRM_LOC =int_b.location_cd and 
								int_a.client = c.cln_code and
								c.cln_master = :p_SEL_VAL[6].link_tag AND
								int_a.instr_code  = :h_instr_code AND
							   int_b.AVAIL_IND ='AVAI' and
				          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
							 AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

					 IS_ANY_ORA_ERROR
				}
				else
				{
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                                 NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0)
               INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos
               FROM MT_CLIENT int_b,DL_SAFEK int_a,MT_LOCATION c
               WHERE int_a.client = int_b.cln_code AND 
                     int_b.cln_master = :p_SEL_VAL[6].link_tag AND
                     int_a.instr_code  = :h_instr_code AND
							int_a.location_cd = c.location_cd(+)
               GROUP by int_b.cln_master,int_a.instr_code;

            	IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
				}

					l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						l_h_new_navl_safekeep_pos = l_h_new_navl_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			

					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_AVAI_SAFEK=",l_h_new_avai_safekeep_pos);
					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_NAVL_SAFEK=",l_h_new_navl_safekeep_pos);
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_SAFEK=0");
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_QUAL=");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
			}
       }
       else
       {
				if(strcmp(p_STAT_VAL[4].link_tag,"L") == 0)
				{
            	if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            	{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
								int_b.AVAIL_IND,
								NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
								NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
								+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               	INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual,
                       :h_penr_safekeep_pos, :h_pend_safekeep_pos
						FROM DL_SAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               			int_a.instr_code  = :h_instr_code AND
								int_a.location_cd = int_b.location_cd(+) AND
								int_b.location_cd = :p_SEL_VAL[10].link_tag  
           			GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

 				      IS_ANY_ORA_ERROR

					EXEC SQL SELECT nvl(sum(QTY),0)
								INTO	:h_rfsafekeep_pos
								FROM DL_LOCNCHG int_a, MT_LOCATION int_b
								WHERE int_a.TO_LOCATION =int_b.location_cd and 
								int_a.client = :p_SEL_VAL[9].link_tag AND
								int_a.instr_code  = :h_instr_code AND
							   int_b.AVAIL_IND ='AVAI' and
								int_a.TO_LOCATION = :p_SEL_VAL[10].link_tag  and
				          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
							 AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

					 IS_ANY_ORA_ERROR

					EXEC SQL SELECT nvl(sum(QTY),0)
								INTO	:h_dfsafekeep_pos
								FROM DL_LOCNCHG int_a, MT_LOCATION int_b
								WHERE int_a.FRM_LOC =int_b.location_cd and 
								int_a.client = :p_SEL_VAL[9].link_tag AND
								int_a.instr_code  = :h_instr_code AND
							   int_b.AVAIL_IND ='AVAI' and
								int_a.FRM_LOC = :p_SEL_VAL[10].link_tag  and
				          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
							 AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

					 IS_ANY_ORA_ERROR
					}
					else
					{
						Alert("\n Ashwin ");
           			EXEC SQL SELECT NVL(sum(int_a.safekeep_pos),0),
										int_b.AVAIL_IND 
               	INTO :l_h_new_subbal_safekeep_pos , :chr_l_h_new_subbal_qual:l_i_new_subbal_qual
						FROM DL_SAFEK int_a,MT_LOCATION int_b
           			WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
               			int_a.instr_code  = :h_instr_code AND
								int_a.location_cd = int_b.location_cd(+) AND
								int_b.location_cd = :p_SEL_VAL[10].link_tag  
           			GROUP by int_a.client,int_a.instr_code,int_b.AVAIL_IND;

 				      IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
					}
					if(l_i_new_subbal_qual == -1)
						strcpy(chr_l_h_new_subbal_qual,"");

					printf("l_new_subbal_safek is %f\n",l_h_new_subbal_safekeep_pos);
					printf("h_rfsafek is %f\n",h_rfsafekeep_pos);
					printf("h_dfsafek is %f\n",h_dfsafekeep_pos);
					l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos - h_rfsafekeep_pos; 
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
					printf("l_new_subbal_safek is %f\n",l_h_new_subbal_safekeep_pos);

			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_subbal_safekeep_pos = l_h_new_subbal_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}
			
					if(l_h_new_subbal_safekeep_pos>0) 
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_SUBBAL_SAFEK=",l_h_new_subbal_safekeep_pos);
   				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SUBBAL_QUAL=",chr_l_h_new_subbal_qual);
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_AVAI_SAFEK=0");
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NAVL_SAFEK=0");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
				else
				{
					
            if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
            {
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
                   NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0),
							NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_REC+nvl(int_a.dp_rec,0),0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALRECEIVE,0))),0),
							NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.VAL_DEL+nvl(int_a.dp_del,0),0))),0)
							+ NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.NVALDELIVER,0))),0)
               INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos,
                    :h_penr_safekeep_pos, :h_pend_safekeep_pos
					FROM DL_SAFEK int_a,MT_LOCATION int_b
              	WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                 		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd = int_b.location_cd(+)
             	GROUP by int_a.client,int_a.instr_code;

            	IS_ANY_ORA_ERROR

					EXEC SQL SELECT nvl(sum(QTY),0)
								INTO	:h_rfsafekeep_pos
								FROM DL_LOCNCHG int_a, MT_LOCATION int_b
								WHERE int_a.TO_LOCATION =int_b.location_cd and 
								int_a.client = :p_SEL_VAL[9].link_tag AND
								int_a.instr_code  = :h_instr_code AND
							   int_b.AVAIL_IND ='AVAI' and
				          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
							 AND (int_a.RF_SETL_DATE is null or to_char(int_a.RF_SETL_DATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

					 IS_ANY_ORA_ERROR

					EXEC SQL SELECT nvl(sum(QTY),0)
								INTO	:h_dfsafekeep_pos
								FROM DL_LOCNCHG int_a, MT_LOCATION int_b
								WHERE int_a.FRM_LOC =int_b.location_cd and 
								int_a.client = :p_SEL_VAL[9].link_tag AND
								int_a.instr_code  = :h_instr_code AND
							   int_b.AVAIL_IND ='AVAI' and
				          to_char(int_a.checker_dt,'DD/MM/YYYY') <= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY') 
							 AND (int_a.DF_SETLDATE is null or to_char(int_a.DF_SETLDATE,'DD/MM/YYYY') >= to_char(to_date(:chr_h_prepdate_new1),'DD/MM/YYYY'));

					 IS_ANY_ORA_ERROR
				}
				else
				{
						Alert("\n Ashwin ");
           		EXEC SQL SELECT NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',int_a.safekeep_pos,0))),0),
                                  NVL(SUM(TO_NUMBER(DECODE(int_a.BLOCK_TYPE,'FREE',0,int_a.safekeep_pos))),0)
               INTO :l_h_new_avai_safekeep_pos,:l_h_new_navl_safekeep_pos
					FROM DL_SAFEK int_a,MT_LOCATION int_b
              	WHERE int_a.client = :p_SEL_VAL[9].link_tag AND
                 		int_a.instr_code  = :h_instr_code AND
							int_a.location_cd = int_b.location_cd(+)
             	GROUP by int_a.client,int_a.instr_code;

            	IS_ANY_ORA_ERROR
						h_dfsafekeep_pos = 0;
						h_rfsafekeep_pos = 0;
				}
					l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos - h_rfsafekeep_pos ;
					h_penr_safekeep_pos = h_penr_safekeep_pos - h_rfsafekeep_pos;
					h_pend_safekeep_pos = h_pend_safekeep_pos - h_dfsafekeep_pos;
			

				   if(strcmp(p_SEL_VAL[0].link_tag,"BON") == 0 && strcmp(p_SEL_VAL[7].link_tag,"Y") == 0 &&
							(strcmp(p_STAT_VAL[11].link_tag,"N") == 0 ||
							(strcmp(p_STAT_VAL[13].link_tag,"S") == 0 && strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)))
					{
						l_h_new_avai_safekeep_pos = l_h_new_avai_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
						l_h_new_navl_safekeep_pos = l_h_new_navl_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_penr_safekeep_pos = h_penr_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
                  h_pend_safekeep_pos = h_pend_safekeep_pos * p_SEL_VAL[8].NUM_VAL;
					}

			

					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_AVAI_SAFEK=",l_h_new_avai_safekeep_pos);
					fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"NEW_NAVL_SAFEK=",l_h_new_navl_safekeep_pos);
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_SAFEK=0");
   				fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_SUBBAL_QUAL=");
               if(h_penr_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PR_SAFEK=",h_penr_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PR_SAFEK=0");
               if(h_pend_safekeep_pos>0)
               fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PD_SAFEK=",h_pend_safekeep_pos);
               else
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"PD_SAFEK=0");
				}
        }
   }



   if(strcmp(p_STAT_VAL[11].link_tag,"Y") == 0)
   {
     EXEC SQL SELECT CLN_USE_ISIN_IND into :chr_h_isinuse from MT_CLIENT 
            WHERE cln_code = :p_SEL_VAL[6].link_tag;

      IS_ANY_ORA_ERROR
      if(sqlca.sqlcode == 1403 )
      {
        CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, h_dl_client, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
    	APL_GOBACK_FAIL
      }

      fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"FLGISIN=",chr_h_isinuse);
   }

   EXEC SQL SELECT concat(concat(substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35),' '),substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),36,20))
           into :h_clnt_clr_name
           from MT_CLIENT
           where cln_code = :p_SEL_VAL[9].link_tag;
        IS_ANY_ORA_ERROR
	if(sqlca.sqlcode == 1403)
	{
        CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[9].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
	APL_GOBACK_FAIL
	}
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CNAME=",h_clnt_clr_name);

   memset(h_clnt_clr_name,APL_NULL_CHAR,57);

   EXEC SQL SELECT concat(concat(substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35),' '),substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),36,20))
	    into :h_clnt_clr_name 
	    from MT_CLIENT
	    where cln_code = :p_SEL_VAL[6].link_tag;
        IS_ANY_ORA_ERROR
	if(sqlca.sqlcode == 1403)
	{
        CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[6].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
	APL_GOBACK_FAIL
	}
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TCNAME=",h_clnt_clr_name);
	
  } 
  } 

} 

if(strcmp(chr_p_msgno,"572")==0)
{
	
	
	if((strcmp(p_SEL_VAL[5].link_val,"CLIENT")==0) && (strcmp(p_SEL_VAL[3].link_val,"IDENTIY_NO")==0))
	{
   	if((strlen(p_SEL_VAL[3].link_tag)!=0) && (strlen(p_SEL_VAL[5].link_tag)!=0))
		{
		 if(strcmp(p_SEL_VAL[11].link_tag,"Y")!=0)
		 {
			EXEC SQL SELECT AMOUNT,QTY,ORIG_QTY INTO :dbl_h_572_amount:i_572_amount,h_572_quantity:i_572_qty,h_572_orig_qty:i_572_origqty
			FROM DL_DEAL WHERE CLIENT=:p_SEL_VAL[5].link_tag
			AND IDENTIY_NO=:p_SEL_VAL[3].link_tag;
	
			IS_ANY_ORA_ERROR
			if(sqlca.sqlcode == 1403)
			{

				if ((!strcmp(p_STAT_VAL[9].link_val,"WEEKLY_STM")) && (!strcmp(p_STAT_VAL[9].link_tag,"Y"))) 
				{
				
               EXEC SQL SELECT AMOUNT,QTY,ORIG_QTY INTO :dbl_h_572_amount:i_572_amount,h_572_quantity:i_572_qty,h_572_orig_qty:i_572_origqty
               FROM DL_DEALRST WHERE CLIENT=:p_SEL_VAL[5].link_tag
               AND IDENTIY_NO=:p_SEL_VAL[3].link_tag
					AND instr(nvl(MSG_STAT,' '),'P') > 0;

				}
				else
				{

					memset(chr_l_date_time_new1,APL_NULL_CHAR,APL_DATE_LEN);
    				int_returnval = CO_RtvSysDt(chr_l_date_time_new1,l_debug_info_ptr);
     				if(int_returnval == APL_FAILURE)
      			APL_GOBACK_FAIL
					

					EXEC SQL SELECT AMOUNT,QTY,ORIG_QTY INTO :dbl_h_572_amount:i_572_amount,h_572_quantity:i_572_qty,h_572_orig_qty:i_572_origqty
					FROM DL_DEALRST WHERE CLIENT=:p_SEL_VAL[5].link_tag
					AND IDENTIY_NO=:p_SEL_VAL[3].link_tag
					AND RESET_DT=:chr_l_date_time_new1
					AND ROWNUM<2;
					
				}
				IS_ANY_ORA_ERROR
				if(sqlca.sqlcode == 1403)
				{
        			CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[5].link_tag, p_SEL_VAL[3].link_tag,APL_NULL_STRING, __LINE__, __FILE__);
					APL_GOBACK_FAIL
				}
			 }
			}
			else 
			{
         if (!strcmp(p_STAT_VAL[10].link_val,"LAST_GEN_DATE"))
         {
            EXEC SQL SELECT
                     to_char(to_date(:p_STAT_VAL[10].link_tag,'RRMMDD'),'DD/MM/YYYY')
                     into :chr_l_temp_date  from dual;
            IS_ANY_ORA_ERROR
         }
         else if (!strcmp(p_STAT_VAL[9].link_val,"LAST_GEN_DATE"))
         {
            EXEC SQL SELECT
                     to_char(to_date(:p_STAT_VAL[9].link_tag,'RRMMDD'),'DD/MM/YYYY')
                     into  :chr_l_temp_date from dual;
            IS_ANY_ORA_ERROR
         }
            strcat(chr_l_temp_date," 12:00:00");

				EXEC SQL SELECT AMOUNT,QTY,ORIG_QTY INTO :dbl_h_572_amount:i_572_amount,h_572_quantity:i_572_qty,h_572_orig_qty:i_572_origqty
         FROM DL_COPYHISTORY WHERE CLIENT=:p_SEL_VAL[5].link_tag
         AND IDENTIY_NO=:p_SEL_VAL[3].link_tag
			AND ROWNUM < 2;

         IS_ANY_ORA_ERROR
            if(sqlca.sqlcode == 1403)
            {
               CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[5].link_tag, p_SEL_VAL[3].link_tag,APL_NULL_STRING, __LINE__, __FILE__);
               APL_GOBACK_FAIL
            }
			}
 		   fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"AMOUNT=",dbl_h_572_amount);
 		   fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"QTY=",h_572_quantity);
 		   fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"ORIGQTY=",h_572_orig_qty);
		}
	}
		

	if(p_rec_no == 1)
	{
  
 		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREPDATE=",chr_h_prepdate_new);


	if((strcmp(p_SEL_VAL[8].link_val,"NEW_DOMCPAC")==0) && (strlen(p_SEL_VAL[8].link_tag)!=0))
	{
		memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
		memset(chr_h_domcpname1,APL_NULL_CHAR,35);
   	EXEC SQL SELECT replace(replace(pty_name,chr(13),NULL),chr(10),NULL)
				INTO :h_domestic_cpclr_name
            FROM MT_PARTY
            WHERE pty_code = :p_SEL_VAL[8].link_tag;

   	IS_ANY_ORA_ERROR
   	if(sqlca.sqlcode == 1403 )
   	{
        	CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[8].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
			APL_GOBACK_FAIL
   	}
   	if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");

   	memset(chr_temp_part,APL_NULL_CHAR,61);
   	strncpy(chr_temp_part,h_domestic_cpclr_name,35);
   	strcat(chr_temp_part,APL_NULL_STRING);
   	if(strlen(h_domestic_cpclr_name)!=0) 
      	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",chr_temp_part);
   	else
      	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",APL_NULL_STRING);
   	memset(chr_temp_part,APL_NULL_CHAR,61);
   	if(strlen(h_domestic_cpclr_name) > 35)
   	{
     		chr_temp_part = &h_domestic_cpclr_name[35];
     		strncpy(chr_h_domcpname1,chr_temp_part,30);
     		strcat(chr_h_domcpname1,APL_NULL_STRING);
  
     		if(strlen(chr_h_domcpname1)!=0) 
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",chr_h_domcpname1);
     		else
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   	}
   	else
       	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   	memset(chr_temp_part,APL_NULL_CHAR,61);
		memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
		memset(chr_h_domcpname1,APL_NULL_CHAR,35);
	}
	}

	#ifdef EMU_PROCESSING
		if(p_rec_no == 1)
		{
			memset(h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
			chr_posofspace = strstr(p_SEL_VAL[4].link_tag," ");
			if(chr_posofspace == NULL)
			{
				strcpy(h_instr_code,p_SEL_VAL[4].link_tag);
				strcpy(h_indentity_no,p_SEL_VAL[3].link_tag);
			}

			EXEC SQL SELECT 'Y'
			INTO :chr_h_euroconv
			FROM DUAL
			WHERE EXISTS (SELECT 1 
								FROM PRO_EURO_TEMP
								WHERE instr_code = :h_instr_code
								AND (DF_IDENTNO = :h_indentity_no OR RF_IDENT_NO = :h_indentity_no));

			IS_ANY_ORA_ERROR

			if(strcmp(chr_h_euroconv,"Y") == 0)
				fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
		}
	#endif


 if(p_rec_no == 2)
 {

		memset(chr_h_prepdate_new,APL_NULL_CHAR,17);
		memset(chr_l_date_time_new,APL_NULL_CHAR,APL_DATE_LEN);
		i_prepdate_new=0;

		if(APL_FAILURE == CO_RtvSysDtTime(chr_l_date_time_new,l_debug_info_ptr))
  			APL_GOBACK_FAIL


		EXEC SQL SELECT to_char(to_date(:chr_l_date_time_new),'yyyymmddhh24miss')
			INTO :chr_h_prepdate_new:i_prepdate_new
			FROM DUAL;

		IS_ANY_ORA_ERROR



	memset(chr_h_asofdate_new,APL_NULL_CHAR,9);

	
	printf("\n called with recno=2 , p_stat_val 1 is :%s:",p_STAT_VAL[1].link_tag);
	EXEC SQL SELECT to_char(to_date(:p_STAT_VAL[1].link_tag,'RRMMDD'),'YYYYMMDD')
							INTO :chr_h_asofdate_new
							FROM DUAL;
	printf("sqlca.sqlcode is %d\n",sqlca.sqlcode);

	IS_ANY_ORA_ERROR

		printf("p_STAT_VAL[4].link_tag is %s\n",p_STAT_VAL[4].link_tag);
		printf("p_STAT_VAL[4].link_val is %s\n",p_STAT_VAL[4].link_val);


    if(strcmp(p_STAT_VAL[4].link_tag,"Y")==0)
    {
      EXEC SQL select to_char(SYS_DATE,'dd/mm/yyyy') into :chr_l_h_sysdate:l_i_sysdate from pro_sys_date ;
		printf("here after query sqlca.sqlcode is %d\n",sqlca.sqlcode);
      IS_ANY_ORA_ERROR
	
		if ((!strcmp(p_STAT_VAL[9].link_val,"WEEKLY_STM")) && (!strcmp(p_STAT_VAL[9].link_tag,"Y")))
	{
		
      if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      {
  
			exec sql declare zero_mov_week cursor for select distinct(cln_code),
					  substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35) as CLNT_NAME, CLN_TAXABLE_IND as IND_83C83D
       from MT_CLIENT
		 where (cln_code not in ( select distinct(int_a.client) from dl_deal int_a where (int_a.INSTRUMENT_DT is not null and  int_a.INSTRUMENT_DT <= :p_STAT_VAL[2].link_tag and int_a.INSTRUMENT_DT>:p_STAT_VAL[10].link_tag) or (int_a.MOD_HISPOS_DATE <= :p_STAT_VAL[2].link_tag and int_a.MOD_HISPOS_DATE>:p_STAT_VAL[10].link_tag )or (MOD_HISPOS_IND='Y')) and  (cln_code not in (select distinct(client) from DL_DEALRST where instr(nvl(MSG_STAT,' '),'P')<>0)) and cln_code not in  (  select distinct(client) from DL_COPYHISTORY where (INSTRUMENT_DT<:p_STAT_VAL[2].link_tag and INSTRUMENT_DT>:p_STAT_VAL[10].link_tag) or(MOD_HISPOS_DATE <:p_STAT_VAL[2].link_tag and MOD_HISPOS_DATE>:p_STAT_VAL[10].link_tag)) ) and checker is not null and CLN_BRK_ALL != 'B' and STATUS != 'CA'
and  EXISTS (  SELECT 1 FROM MT_MSGADDRESS
               WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.CLN_CODE
                         OR MT_MSGADDRESS.cln_code = MT_CLIENT.CLN_MASTER)
                         AND MT_MSGADDRESS.MSG_IDENT_NO    = '5');

      }
		else
		{
         exec sql declare zero_mov_acc_week cursor for select distinct(cln_code),
         substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35) as CLNT_NAME,
            CLN_TAXABLE_IND as IND_83C83D
       from MT_CLIENT
       where
       cln_code = :p_STAT_VAL[5].link_tag and
                (cln_code not in (select distinct(int_a.client) from dl_deal int_a where (int_a.INSTRUMENT_DT is not null and  int_a.INSTRUMENT_DT <= :p_STAT_VAL[2].link_tag and int_a.INSTRUMENT_DT>:p_STAT_VAL[11].link_tag) or (int_a.MOD_HISPOS_DATE <= :p_STAT_VAL[2].link_tag and int_a.MOD_HISPOS_DATE>:p_STAT_VAL[11].link_tag )or (MOD_HISPOS_IND='Y')) and (cln_code not in (select distinct(client) from DL_DEALRST where instr(nvl(MSG_STAT,' '),'P')<>0 )) and cln_code not in  (  select distinct(client) from DL_COPYHISTORY where (INSTRUMENT_DT<:p_STAT_VAL[2].link_tag and INSTRUMENT_DT>:p_STAT_VAL[11].link_tag) or(MOD_HISPOS_DATE <:p_STAT_VAL[2].link_tag and MOD_HISPOS_DATE>:p_STAT_VAL[11].link_tag))) and checker is not null and CLN_BRK_ALL != 'B'  and STATUS != 'CA'
         and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
                        WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.cln_code
                                  OR MT_MSGADDRESS.cln_code = MT_CLIENT.cln_master)
                         AND      MT_MSGADDRESS.MSG_IDENT_NO    = '5');

		}
	}
	else
	{

      if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      {
		
		
       
		
	exec sql declare zero_mov cursor for select distinct(cln_code), 
				substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35) as CLNT_NAME, CLN_TAXABLE_IND as IND_83C83D
		 from MT_CLIENT 
		 where (cln_code not in ( select distinct(int_a.client) from dl_deal int_a where (int_a.INSTRUMENT_DT is not null and  int_a.INSTRUMENT_DT <= :p_STAT_VAL[2].link_tag and instr(nvl(int_a.MSG_STAT,' '),'B') = 0 and to_char(access_stamp,'dd/mm/yyyy')=:chr_l_h_sysdate:l_i_sysdate or ( int_a.INSTRUMENT_DT is not null and  int_a.INSTRUMENT_DT <= :p_STAT_VAL[2].link_tag and to_char (access_stamp,'dd/mm/yyyy')=:chr_l_h_sysdate:l_i_sysdate ))) and (cln_code not in (select distinct(client)from DL_DEALRST where RESET_DT = :p_STAT_VAL[2].link_tag and instr(nvl(MSG_STAT,' '),'P')=0))) 
and checker is not null and CLN_BRK_ALL != 'B' and STATUS != 'CA' 


and  EXISTS (  SELECT 1 FROM MT_MSGADDRESS
               WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.cln_code OR MT_MSGADDRESS.cln_code = MT_CLIENT.cln_master)
               AND      MT_MSGADDRESS.MSG_IDENT_NO    = '5');
      }
      else
      {
		
			printf(" inside else for paccount p_STAT_VAL[2].link_tag  is %s\n",p_STAT_VAL[2].link_tag );
			printf(" inside else for paccount chr_l_h_sysdate is %s\n",chr_l_h_sysdate);
       
	exec sql declare zero_mov_acc cursor for select distinct(cln_code), 
				substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35) as CLNT_NAME, CLN_TAXABLE_IND as IND_83C83D
		 from MT_CLIENT 
		 where 
		 cln_code = :p_STAT_VAL[5].link_tag and 
                (cln_code not in ( select distinct(int_a.client) from dl_deal int_a where
                (int_a.INSTRUMENT_DT is not null and  int_a.INSTRUMENT_DT <= :p_STAT_VAL[2].link_tag and instr(nvl(int_a.MSG_STAT,' '),'B') = 0 and to_char(access_stamp,'dd/mm/yyyy')=:chr_l_h_sysdate:l_i_sysdate or ( int_a.INSTRUMENT_DT is not null and  int_a.INSTRUMENT_DT <= :p_STAT_VAL[2].link_tag and to_char (access_stamp,'dd/mm/yyyy')=:chr_l_h_sysdate:l_i_sysdate ))) and (cln_code not in (select distinct(client) from DL_DEALRST where RESET_DT = :p_STAT_VAL[2].link_tag and instr(nvl(MSG_STAT,' '),'P')= 0)))
and checker is not null and CLN_BRK_ALL != 'B'  and STATUS != 'CA'


and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
               WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.cln_code OR MT_MSGADDRESS.cln_code = MT_CLIENT.CLN_MASTER)
               AND      MT_MSGADDRESS.MSG_IDENT_NO    = '5');
      }
	}
 
   
      if ((!strcmp(p_STAT_VAL[9].link_val,"WEEKLY_STM")) && (!strcmp(p_STAT_VAL[9].link_tag,"Y")))
   	{
      	if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      	{
       	 	EXEC SQL OPEN zero_mov_week;
      	}
      	else
        		EXEC SQL OPEN zero_mov_acc_week;
		}
		else
		{
      	if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      	{
       	 	EXEC SQL OPEN zero_mov;
      	}
      	else
        		EXEC SQL OPEN zero_mov_acc;
		}

     IS_ANY_ORA_ERROR

     for( ; ; )
     {
		   
      if ((!strcmp(p_STAT_VAL[9].link_val,"WEEKLY_STM")) && (!strcmp(p_STAT_VAL[9].link_tag,"Y")))
   	{
      	if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
			
     		EXEC SQL  FETCH zero_mov_week into :h_dl_client,:h_clnt_clr_name, :h_taxable_ind;
      	else
     		EXEC SQL  FETCH zero_mov_acc_week into :h_dl_client,:h_clnt_clr_name, :h_taxable_ind;
		}	
		else
		{
      	if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
			
     		EXEC SQL  FETCH zero_mov into :h_dl_client,:h_clnt_clr_name, :h_taxable_ind;
      	else
     		EXEC SQL  FETCH zero_mov_acc into :h_dl_client,:h_clnt_clr_name, :h_taxable_ind;
		}

        if(sqlca.sqlcode == 1403)
              break;

        int_fetch_cnt++;
        fprintf(p_Data_File,"%d%s\n",*p_rownum+1,"EOF=F");
        
        fprintf(p_Data_File,"%d%s%s\n",++*p_rownum,"CLIENT=",h_dl_client);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NACCOUNT=/",h_dl_client);
			
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CNAME=",h_clnt_clr_name);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"IND_83C83D=",h_taxable_ind);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ZEROMOV=","Y");
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PASOFDATE=",p_STAT_VAL[1].link_tag);
         if (!strcmp(p_STAT_VAL[6].link_val,"CONTACTSEQ"))
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRSEQ_NUM=",p_STAT_VAL[6].link_tag);
         else if (!strcmp(p_STAT_VAL[5].link_val,"CONTACTSEQ"))
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRSEQ_NUM=",p_STAT_VAL[5].link_tag);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PROC_INIT=",p_STAT_VAL[0].link_tag);

        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREPDATE=",chr_h_prepdate_new);
		  
			if(strcmp(p_STAT_VAL[6].link_val,"NEW_MNTH") == 0)
				fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,p_STAT_VAL[6].link_val,"=",p_STAT_VAL[6].link_tag);
			else if(strcmp(p_STAT_VAL[7].link_val,"NEW_MNTH") == 0)
				fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,p_STAT_VAL[7].link_val,"=",p_STAT_VAL[7].link_tag);
			else if(strcmp(p_STAT_VAL[8].link_val,"NEW_MNTH") == 0)
				fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,p_STAT_VAL[8].link_val,"=",p_STAT_VAL[8].link_tag);
        
		  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_FROMDATE=",chr_h_asofdate_new);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_TODATE=",chr_h_asofdate_new);



         strcpy(chr_l_uniq_client,h_dl_client);
         if (strlen(chr_l_uniq_client))
         {
            if(APL_FAILURE==MS_Rtv_SEME(chr_l_uniq_client,chr_p_msgno,chr_l_uniq_seme_refno,l_debug_info_ptr) )
            {
               APL_GOBACK_FAIL
            }
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UNIQREFNO=",chr_l_uniq_seme_refno);
         }
			

    if (!strcmp(p_STAT_VAL[9].link_val,"WEEKLY_STM"))
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"WEEKLY_STM=",p_STAT_VAL[9].link_tag);
    else if (!strcmp(p_STAT_VAL[8].link_val,"WEEKLY_STM"))
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"WEEKLY_STM=",p_STAT_VAL[8].link_tag);

    if (!strcmp(p_STAT_VAL[10].link_val,"LAST_GEN_DATE"))
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"LAST_GEN_DATE=",p_STAT_VAL[10].link_tag);
    else if (!strcmp(p_STAT_VAL[9].link_val,"LAST_GEN_DATE"))
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"LAST_GEN_DATE=",p_STAT_VAL[9].link_tag);

			

    }

	  if ((!strcmp(p_STAT_VAL[9].link_val,"WEEKLY_STM")) && (!strcmp(p_STAT_VAL[9].link_tag,"Y")))
     {
    		if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      		exec sql close zero_mov_week;
    		else
      		exec sql close zero_mov_acc_week;
	  }
	  else
	  {
    		if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      		exec sql close zero_mov;
    		else
      		exec sql close zero_mov_acc;
	  }
  }
 }
}

if((strcmp(chr_p_msgno,"586")==0)  && (p_rec_no == 2))
{
      memset(chr_h_prepdate_new,APL_NULL_CHAR,17);
      memset(chr_l_date_time_new,APL_NULL_CHAR,APL_DATE_LEN);
      i_prepdate_new=0;

      if(APL_FAILURE == CO_RtvSysDtTime(chr_l_date_time_new,l_debug_info_ptr))
         APL_GOBACK_FAIL


      EXEC SQL SELECT to_char(to_date(:chr_l_date_time_new),'yyyymmddhh24miss')
         INTO :chr_h_prepdate_new:i_prepdate_new
         FROM DUAL;

      IS_ANY_ORA_ERROR



   memset(chr_h_asofdate_new,APL_NULL_CHAR,9);

   
   printf("\n called with recno=2 , p_stat_val 1 is :%s:",p_STAT_VAL[1].link_tag);
   fflush(stdout);

   EXEC SQL SELECT to_char(to_date(to_char(to_date(:p_STAT_VAL[1].link_tag),'YYMMDD'),'RRMMDD'),'YYYYMMDD')
                     INTO :chr_h_asofdate_new
                     FROM DUAL;

   IS_ANY_ORA_ERROR


    if(strcmp(p_STAT_VAL[4].link_tag,"Y")==0)
    {

	printf("p_stat_val[1].link_tag for MT586 is %s\n",p_STAT_VAL[1].link_tag);
	fflush(stdout);

      if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      {
         EXEC SQL DECLARE ZERO_ALLEGMENT CURSOR
         FOR SELECt DISTINCT(CLN_CODE),
			substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35) as CLNT_NAME,
         CLN_TAXABLE_IND as IND_83C83D
         from MT_CLIENT
          where (CLN_CODE not in ( select distinct(int_a.client) from DL_MISDEAL int_a where int_a.CHECKER_DT is not null and to_date(to_char(int_a.checker_dt,'DD/MM/YYYY')) = to_date(to_char(to_date(:p_STAT_VAL[1].link_tag),'DD/MM/YYYY'))))
         and checker is not null and CLN_BRK_ALL != 'B'  and STATUS != 'CA'
         and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
                  WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.CLN_CODE
                            OR MT_MSGADDRESS.cln_code = MT_CLIENT.CLN_MASTER)
                   AND      MT_MSGADDRESS.MSG_IDENT_NO    = '36');
      }
      else
      {
         EXEC SQL DECLARE ZERO_ALLEGMENT_ACC CURSOR
         FOR SELECt DISTINCT(CLN_CODE),
			substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35) as CLNT_NAME,
         CLN_TAXABLE_IND as IND_83C83D
         from MT_CLIENT
          where
          cln_code = :p_STAT_VAL[5].link_tag and
           (cln_code not in ( select distinct(int_a.client) from DL_MISDEAL int_a where int_a.CHECKER_DT is not null and to_date(to_char(int_a.checker_dt,'DD/MM/YYYY')) = to_date(to_char(to_date(:p_STAT_VAL[1].link_tag),'DD/MM/YYYY'))))
	  
         and checker is not null and CLN_BRK_ALL != 'B'  and STATUS != 'CA'
         and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
                  WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.CLN_CODE
                            OR MT_MSGADDRESS.cln_code = MT_CLIENT.cln_master)
                   AND      MT_MSGADDRESS.MSG_IDENT_NO    = '36');
      }
      if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      {
        EXEC SQL OPEN ZERO_ALLEGMENT;
      }
      else
        EXEC SQL OPEN ZERO_ALLEGMENT_ACC;

     IS_ANY_ORA_ERROR

     for( ; ; )
     {

      if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      EXEC SQL  FETCH ZERO_ALLEGMENT into :h_dl_client,:h_clnt_clr_name, :h_taxable_ind;
      else
      EXEC SQL  FETCH ZERO_ALLEGMENT_ACC into :h_dl_client,:h_clnt_clr_name, :h_taxable_ind;
		IS_ANY_ORA_ERROR;

        if(sqlca.sqlcode == 1403)
              break;

        int_fetch_cnt++;
        fprintf(p_Data_File,"%d%s\n",*p_rownum+1,"EOF=F");

        fprintf(p_Data_File,"%d%s%s\n",++*p_rownum,"ACCOUNT=",h_dl_client);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NACCOUNT=/",h_dl_client);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CNAME=",h_clnt_clr_name);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"IND_83C83D=",h_taxable_ind);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOALLEG=","Y");
         if (!strcmp(p_STAT_VAL[6].link_val,"CONTACTSEQ"))
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRSEQ_NUM=",p_STAT_VAL[6].link_tag);
         else if (!strcmp(p_STAT_VAL[5].link_val,"CONTACTSEQ"))
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRSEQ_NUM=",p_STAT_VAL[5].link_tag);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PROC_INIT=",p_STAT_VAL[0].link_tag);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREP_DT=",chr_h_prepdate_new);
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ASOFDATE=",chr_h_asofdate_new);
		
       if (!strcmp(p_STAT_VAL[8].link_val,"WEEKLY_STM"))
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"WEEKLY_STM=",p_STAT_VAL[8].link_tag);
       else if (!strcmp(p_STAT_VAL[7].link_val,"WEEKLY_STM"))
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"WEEKLY_STM=",p_STAT_VAL[7].link_tag);

       if (!strcmp(p_STAT_VAL[9].link_val,"LAST_GEN_DATE"))
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"LAST_GEN_DATE=",p_STAT_VAL[9].link_tag);
       else if (!strcmp(p_STAT_VAL[8].link_val,"LAST_GEN_DATE"))
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"LAST_GEN_DATE=",p_STAT_VAL[8].link_tag);
		
         strcpy(chr_l_uniq_client,h_dl_client);
         if (strlen(chr_l_uniq_client))
         {
            if(APL_FAILURE==MS_Rtv_SEME(chr_l_uniq_client,chr_p_msgno,chr_l_uniq_seme_refno,l_debug_info_ptr) )
            {
               APL_GOBACK_FAIL
            }
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UNIQREFNO=",chr_l_uniq_seme_refno);
         }

    }
    if(strcmp(p_STAT_VAL[5].link_val,"PACCOUNT"))
      exec sql close ZERO_ALLEGMENT;
    else
      exec sql close ZERO_ALLEGMENT_ACC;
		IS_ANY_ORA_ERROR;
   }
}

if(p_rec_no == 1)
{




if ((strcmp(chr_p_msgno,"534N01") == 0) || (strcmp(chr_p_msgno,"578N02") == 0) || (strcmp(chr_p_msgno,"586") == 0))
{
	if (strcmp(chr_p_msgno,"534N01") == 0)
	{
	EXEC SQL SELECT 'Y'
	INTO :chr_h_msg_sent_flg
	FROM DUAL
	WHERE EXISTS (SELECT 1
						FROM MS_MSGSTAT
						WHERE swift_msg_rep in ('534N01','578N01')
						AND proc_init = :p_SEL_VAL[2].link_tag
						AND client = :p_SEL_VAL[3].link_tag);

	IS_ANY_ORA_ERROR

	if (strcmp(chr_h_msg_sent_flg,"Y") == 0)
	{
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"MSG_SENT_FLG=Y");
	}
	else
	{
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"MSG_SENT_FLG=N");
	}

   if (strcmp(p_SEL_VAL[3].link_tag, " ")!=0 && strlen(p_SEL_VAL[3].link_tag)>0)
         {
           memset(chr_l_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
           memset(chr_l_refno,APL_NULL_CHAR,17);
           memset(chr_l_addinfo_uniq_seme,APL_NULL_CHAR,17);

           strcpy(chr_l_client, p_SEL_VAL[3].link_tag);
           strcpy(chr_l_refno, p_SEL_VAL[2].link_tag);
           printf("value of chr_l_client for MT578 is %s\n",p_SEL_VAL[3].link_tag);
		   fflush(stdout);

           printf("value of chr_l_refno for MT578 is %s\n",p_SEL_VAL[2].link_tag);
		   fflush(stdout);

           EXEC SQL SELECT INFORMATION INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
                  FROM DL_MSGLINK
                  WHERE CLIENT = :chr_l_client
                  AND IDENTIY_NO = :chr_l_refno
                  AND MSG_IN_OUT_IND= 'Z'
                  AND SWIFT_MSG_NO = '578N01'
                  AND DATE_OF_INPUT = (SELECT MAX(DATE_OF_INPUT)
                                    FROM DL_MSGLINK
                                    WHERE CLIENT=:chr_l_client
                                    AND IDENTIY_NO = :chr_l_refno
                                    AND SWIFT_MSG_NO = '578N01'
                                    AND MSG_IN_OUT_IND= 'Z');
           IS_ANY_ORA_ERROR;
           printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
		   fflush(stdout);

           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEMEREFNO=",chr_l_addinfo_uniq_seme);
         }


	} 

	
	if(strcmp(p_SEL_VAL[0].link_val,"DOMESTIC_CPCLT")==0)
	{
			i_domestic_cpclr_name=0;
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
			
			if (APL_FAILURE == CO_Chk_CntryEnabled(  "EOCMAINT","SEND95R",&l_eoc_maint,l_debug_info_ptr))
   		{
         	APL_GOBACK_FAIL
   		}
   		EXEC SQL SELECT RTRIM(LTRIM(NVL(:p_SEL_VAL[0].link_tag,''))) INTO :chr_l_eocdom:i_eocdom FROM DUAL;
   		IS_ANY_ORA_ERROR
  			fflush(stdout);
     		if (((l_eoc_maint == 1) && (i_eocdom != -1 ))||(l_eoc_maint == 0))
      	{		
   			EXEC SQL SELECT replace(replace(pty_name,chr(13),NULL),chr(10),NULL)
				INTO :h_domestic_cpclr_name:i_domestic_cpclr_name
            FROM MT_PARTY
            WHERE pty_code = :p_SEL_VAL[0].link_tag;

   		IS_ANY_ORA_ERROR
   		if(sqlca.sqlcode == 1403 )
   		{
        		CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[0].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
				APL_GOBACK_FAIL
   		}
   		if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");
			}  
			
			if ((l_eoc_maint == 1) && (strlen(p_SEL_VAL[0].link_tag)== 0))
			{
				memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			}
			
   		memset(chr_temp_part,APL_NULL_CHAR,61);
   		strncpy(chr_temp_part,h_domestic_cpclr_name,35);
   		strcat(chr_temp_part,APL_NULL_STRING);
   		if(strlen(h_domestic_cpclr_name)!=0) 
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",chr_temp_part);
   		else
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
   		if(strlen(h_domestic_cpclr_name) > 35)
   		{
     			chr_temp_part = &h_domestic_cpclr_name[35];
     			strncpy(chr_h_domcpname1,chr_temp_part,30);
     			strcat(chr_h_domcpname1,APL_NULL_STRING);
  
     			if(strlen(chr_h_domcpname1)!=0) 
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",chr_h_domcpname1);
     			else
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		}
   		else
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
			i_domestic_cpclr_name=0;


			EXEC SQL SELECT PTY_SEBI_REG_NO_1 
						INTO :l_sebi_domcp:i_sebi_domcp
						FROM mt_pty_exch_map
						WHERE PTY_CODE =:p_SEL_VAL[0].link_tag;
			IS_ANY_ORA_ERROR

				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SEBI_DOMCP=",l_sebi_domcp);
			
	}
		
         printf(" shortly will enter GenUniqSEMERefNo for MT578 :chr_l_client is %s\n",chr_l_client);
		 fflush(stdout);

		
		if (strcmp(chr_p_msgno,"586") == 0)
		{
			strcpy(chr_l_uniq_client,p_SEL_VAL[3].link_tag);
         if (strlen(chr_l_uniq_client))
         {
            if(APL_FAILURE==MS_Rtv_SEME(chr_l_uniq_client,chr_p_msgno,chr_l_uniq_seme_refno,l_debug_info_ptr) )
            {
               APL_GOBACK_FAIL
            }
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UNIQREFNO=",chr_l_uniq_seme_refno);
         }
		}
}



if(strcmp(chr_p_msgno,"573") == 0)
{
	if((strcmp(p_SEL_VAL[17].link_val,"NEW_DOMCPAC")==0) && (strlen(p_SEL_VAL[17].link_tag)!=0))
	{
		memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
		memset(chr_h_domcpname1,APL_NULL_CHAR,35);
   	EXEC SQL SELECT replace(replace(pty_name,chr(13),NULL),chr(10),NULL)
				INTO :h_domestic_cpclr_name
            FROM MT_PARTY
            WHERE pty_code = :p_SEL_VAL[17].link_tag;

   	IS_ANY_ORA_ERROR
   	if(sqlca.sqlcode == 1403 )
   	{
        	CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[17].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
			APL_GOBACK_FAIL
   	}
   	if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");

   	memset(chr_temp_part,APL_NULL_CHAR,61);
   	strncpy(chr_temp_part,h_domestic_cpclr_name,35);
   	strcat(chr_temp_part,APL_NULL_STRING);
   	if(strlen(h_domestic_cpclr_name)!=0) 
      	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",chr_temp_part);
   	else
      	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",APL_NULL_STRING);
   	memset(chr_temp_part,APL_NULL_CHAR,61);
   	if(strlen(h_domestic_cpclr_name) > 35)
   	{
     		chr_temp_part = &h_domestic_cpclr_name[35];
     		strncpy(chr_h_domcpname1,chr_temp_part,30);
     		strcat(chr_h_domcpname1,APL_NULL_STRING);
  
     		if(strlen(chr_h_domcpname1)!=0) 
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",chr_h_domcpname1);
     		else
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   	}
   	else
       	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPNAME1=",APL_NULL_STRING);
   	memset(chr_temp_part,APL_NULL_CHAR,61);
		memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
		memset(chr_h_domcpname1,APL_NULL_CHAR,35);
	}
}

if( (strcmp(chr_p_msgno,"573") == 0) || (strcmp(chr_p_msgno,"534") == 0) ||
	 (strcmp(chr_p_msgno,"539") == 0)  || (strcmp(chr_p_msgno,"548N04")==0) )
{
	

   
   memset(h_faildetail, APL_NULL_CHAR, 33);
   memset(h_mapword, APL_NULL_CHAR, 21);
   memset(h_interdetail, APL_NULL_CHAR, 51);
   memset(h_status_qual_ind, APL_NULL_CHAR, 5);
   memset(h_status_cd, APL_NULL_CHAR, 7);
   memset(h_reason_ql, APL_NULL_CHAR, 7);
   memset(h_reason_cd, APL_NULL_CHAR, 5);
   i_faildetail = 0;
   i_mapword = 0;
   i_interdetail = 0;
   i_status_qual_ind = 0;
   i_status_cd = 0;
   i_reason_ql = 0;
   i_reason_cd =0;

  	if ( (strcmp(chr_p_msgno,"573") == 0) || (strcmp(chr_p_msgno,"534") == 0 ) )
  	{	
     if(strcmp(chr_p_msgno,"573") == 0)
      {
         if(atof(p_SEL_VAL[11].link_tag) < 0 || atof(p_SEL_VAL[12].link_tag) < 0)
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NCCYCODE=Y");
         else
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_NCCYCODE=N");
				
				sqlca.sqlcode=0L;
				
				if(strcmp(p_SEL_VAL[19].link_tag,"N")==0)
				{

						memset(chr_h_max_access_stamp,APL_NULL_CHAR,20);


						EXEC SQL SELECT MAX(ACCESS_STAMP) 
									INTO :chr_h_max_access_stamp:i_max_access_stamp
									FROM DL_MULT_REAS_CODES 
									WHERE CLIENT=:p_SEL_VAL[13].link_tag
									AND IDENTIY_NO=:p_SEL_VAL[15].link_tag
									AND FAILREASON_CD=:p_SEL_VAL[0].link_tag
									AND nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[16].NUM_VAL,0);
						IS_ANY_ORA_ERROR
						printf("MAX_ACCESS_STAP is %s\n",chr_h_max_access_stamp);
						fflush(stdout);

						EXEC SQL SELECT  int_a.failreason_cd,int_a.sub_fail_cd,int_a.STAT_QUAL,int_a.STATUS_CD,int_a.REASON_QL,int_a.REASON_CD,int_a.INFO,int_b.MAPWORD,int_b.FAILREASON_DET,int_b.FAIL_DESC
									INTO 	:chr_l_548_failcode:i_548_failcode,
											:int_l_548_subfailcode:i_548_subfailcode,
										   :h_status_qual_ind:i_status_qual_ind,
											:h_status_cd:i_status_cd,
											:h_reason_ql:i_reason_ql,
											:h_reason_cd:i_reason_cd,
											:chr_l_548_note:i_548_note,
										   :h_mapword:i_mapword,
											:h_faildetail:i_faildetail,
											:h_interdetail:i_interdetail
									FROM DL_MULT_REAS_CODES int_a , PRO_FAILCODES int_b
									WHERE  CLIENT=:p_SEL_VAL[13].link_tag
									AND 	 IDENTIY_NO=:p_SEL_VAL[15].link_tag	
									AND  	 ACCESS_STAMP =:chr_h_max_access_stamp
									AND STAT_BLCKNO!=11
									AND int_a.failreason_cd=int_b.failreason_cd and int_a.sub_fail_cd=int_b.sub_fail_cd
									AND 	 STAT_BLCKNO = (SELECT MAX(STAT_BLCKNO) 	
																	FROM DL_MULT_REAS_CODES 
																	WHERE CLIENT=:p_SEL_VAL[13].link_tag
																	AND IDENTIY_NO=:p_SEL_VAL[15].link_tag
																	AND STAT_BLCKNO!=11
                     										AND ACCESS_STAMP =:chr_h_max_access_stamp);
						IS_ANY_ORA_ERROR	

				printf("faildec>is %s\n",h_faildetail);
				fflush(stdout);

				printf("interdesc is %s\n",h_interdetail);
				fflush(stdout);

				printf("SQLCA>SQCODE is %d\n",sqlca.sqlcode);
				fflush(stdout);

				if((sqlca.sqlcode==1403) || (strcmp(chr_l_548_failcode,p_SEL_VAL[0].link_tag)!=0) ||(int_l_548_subfailcode!=p_SEL_VAL[16].NUM_VAL))
					int_l_no_reas_codes = 1;
				else
					int_l_no_reas_codes = 0;
				}

				if((int_l_no_reas_codes==1) || (strcmp(p_SEL_VAL[19].link_tag,"Y")==0))
				{
            	EXEC SQL select 1 into :l_int_temp from PRO_FAILCODES where failreason_cd = :p_SEL_VAL[0].link_tag and sub_fail_cd = nvl(:p_SEL_VAL[16].NUM_VAL, 0);

	
         	if ( strcmp(p_SEL_VAL[0].link_val,"FAILREASON_CD")==0 && strlen(p_SEL_VAL[0].link_tag)!=0 &&  strcmp(p_SEL_VAL[0].link_tag," ")!= 0 && (sqlca.sqlcode==0) )
			  	{	
					sqlca.sqlcode=0L;
         		EXEC SQL SELECT FAILREASON_DET,MAPWORD,FAIL_DESC,status_qual_ind,status_cd,nvl(reason_ql,NULL),nvl(reason_cd,NULL)
               	INTO :h_faildetail:i_faildetail,:h_mapword:i_mapword,
                  	   :h_interdetail:i_interdetail,:h_status_qual_ind:i_status_qual_ind,:h_status_cd:i_status_cd,:h_reason_ql:i_reason_ql,:h_reason_cd:i_reason_cd
               	FROM PRO_FAILCODES
               	WHERE failreason_cd = :p_SEL_VAL[0].link_tag
						AND   nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[16].NUM_VAL,0); 
			  	}
			}
      }
      else
      {
        	if ( strcmp(p_SEL_VAL[0].link_val,"FAILREASON_CD")==0 && strlen(p_SEL_VAL[0].link_tag)!=0 && strcmp(p_SEL_VAL[0].link_tag," ")!= 0)
			  {	
			sqlca.sqlcode=0L;
         EXEC SQL SELECT FAILREASON_DET,MAPWORD,FAIL_DESC,status_qual_ind,status_cd,nvl(reason_ql,NULL),nvl(reason_cd,NULL)
               INTO :h_faildetail:i_faildetail,:h_mapword:i_mapword,
                     :h_interdetail:i_interdetail,:h_status_qual_ind:i_status_qual_ind,:h_status_cd:i_status_cd,:h_reason_ql:i_reason_ql,:h_reason_cd:i_reason_cd
               FROM PRO_FAILCODES
               WHERE failreason_cd = :p_SEL_VAL[0].link_tag
					AND   nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[1].NUM_VAL,0); 
					IS_ANY_ORA_ERROR
				}
     
		}
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREPDATE=",chr_h_prepdate_new);
	}
   else if (strcmp(chr_p_msgno,"548N04") == 0)
   {
			    printf("HERE!!!!!!!!!!!!!!!!!!!!!!!!\n");
				fflush(stdout);

			    sqlca.sqlcode=0L;
			    EXEC SQL SELECT FAILREASON_DET,MAPWORD,FAIL_DESC,
			                    status_qual_ind,status_cd,
			                    nvl(reason_ql,NULL),nvl(reason_cd,NULL)
			             INTO :h_faildetail:i_faildetail,:h_mapword:i_mapword,
			                  :h_interdetail:i_interdetail,:h_status_qual_ind:i_status_qual_ind,
			                  :h_status_cd:i_status_cd,:h_reason_ql:i_reason_ql,
			                  :h_reason_cd:i_reason_cd
			              FROM PRO_FAILCODES
			              WHERE failreason_cd = :p_SEL_VAL[2].link_tag
					          AND   nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[3].NUM_VAL,0);
				     IS_ANY_ORA_ERROR

   }
	else
	{
      if ( strcmp(p_SEL_VAL[4].link_val,"FAILREASON_CD")==0 && strlen(p_SEL_VAL[4].link_tag)!=0  &&  strcmp(p_SEL_VAL[4].link_tag," ")!= 0)
      {
      sqlca.sqlcode=0L;
  		EXEC SQL SELECT FAILREASON_DET,MAPWORD,FAIL_DESC 
      	     INTO :h_faildetail:i_faildetail,:h_mapword:i_mapword,
		:h_interdetail:i_interdetail
           FROM PRO_FAILCODES
           WHERE failreason_cd = :p_SEL_VAL[4].link_tag
					AND   nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[8].NUM_VAL,0); 
  IS_ANY_ORA_ERROR
		
		}
	}

  

  if(sqlca.sqlcode != 0 )
  {
           strcpy(h_faildetail,"");
           strcpy(h_mapword,"");
           strcpy(h_interdetail,"");

         strcpy(h_status_cd,"");
         strcpy(h_status_qual_ind,"");
         strcpy(h_reason_cd,"");
         strcpy(h_reason_ql,"");
  }
          
	sqlca.sqlcode=0;

  if( i_faildetail == -1 )
           strcpy(h_faildetail,"");

  if( i_mapword == -1 )
           strcpy(h_mapword,"");

  if( i_interdetail == -1 )
           strcpy(h_interdetail,"");

   if(i_status_cd == -1)
      strcpy(h_status_cd,"");

   if(i_status_qual_ind == -1)
      strcpy(h_status_qual_ind,"");

   if(i_reason_ql == -1)
      strcpy(h_reason_ql,"");

   if(i_reason_cd == -1)
      strcpy(h_reason_cd,"");

  strncpy(chr_h_faildesc1,h_faildetail,25);
  strcat(chr_h_faildesc1,APL_NULL_STRING);
  if(strlen(h_faildetail) > 25)
  {
     chr_temp_part = &h_faildetail[25];
     strncpy(chr_h_faildesc2,chr_temp_part,10);
     strcat(chr_h_faildesc1,APL_NULL_STRING);
  }
  else
     strcpy(chr_h_faildesc2,"");
  

	  	if ((strcmp(chr_p_msgno,"534")==0) && ((strcmp(p_STAT_VAL[5].link_tag,APL_NULL_STRING)!=0) && (strncmp(p_STAT_VAL[5].link_tag,"ALL",3)!=0)))  
		{
			printf("No to print STAT_QUAL\n");
			fflush(stdout);

		}
		else if((strcmp(chr_p_msgno,"573")==0) && (int_l_no_reas_codes==0))
		{
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC1=",chr_h_faildesc1);
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC2=",chr_h_faildesc2);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CODEWORD=",h_mapword);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"STATUS_QUAL=",h_status_qual_ind);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"STATUS_CODE=",h_status_cd);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"REAS_QUAL=",h_reason_ql);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"REAS_CODE=",h_reason_cd);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",chr_l_548_note);

			/* ISKB 673 Chirag 22022008 SEBI word should not come in swift message */
			Alert("Chirag FailDesc found |%s| \n",chr_h_faildesc1);
			if(strncmp(chr_h_faildesc1,"SEBI-",5) == 0)
			{
				EXEC SQL SELECT substr(:chr_h_faildesc1,6,length(:chr_h_faildesc1)) 
				INTO :chr_faildesc3 from dual;
				Alert("sqlca.sqlcode |%d| \n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR
					Alert("Got SEBI removed |%s| \n",chr_faildesc3);
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC3=",chr_faildesc3);
			}	
			else
			{
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC3=",chr_h_faildesc1);
			}
			/* ISKB 673 Chirag 22022008 SEBI word should not come in swift message */

		}
		else
		{
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC1=",chr_h_faildesc1);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC2=",chr_h_faildesc2);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CODEWORD=",h_mapword);

  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"STATUS_QUAL=",h_status_qual_ind);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"STATUS_CODE=",h_status_cd);
/* ISKB 947 Chirag 13032008 Token STATUS_CD added as per CTL */
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"STATUS_CD=",h_status_cd);
/* ISKB 947 Chirag 13032008 Token STATUS_CD added as per CTL */
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"REAS_QUAL=",h_reason_ql);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"REAS_CODE=",h_reason_cd);

			/* ISKB 673 Chirag 22022008 SEBI word should not come in swift message */
			Alert("Chirag FailDesc found |%s| \n",chr_h_faildesc1);
			if(strncmp(chr_h_faildesc1,"SEBI-",5) == 0)
			{
				EXEC SQL SELECT substr(:chr_h_faildesc1,6,length(:chr_h_faildesc1)) 
				INTO :chr_faildesc3 from dual;
				Alert("sqlca.sqlcode |%d| \n",sqlca.sqlcode);
				IS_ANY_ORA_ERROR
					Alert("Got SEBI removed |%s| \n",chr_faildesc3);
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC3=",chr_faildesc3);
			}	
			else
			{
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FAILDESC3=",chr_h_faildesc1);
			}
			/* ISKB 673 Chirag 22022008 SEBI word should not come in swift message */

		}
  memset(chr_temp_part,APL_NULL_CHAR,61);

  memset(chr_h_faildesc1,APL_NULL_CHAR,26);
  memset(chr_h_faildesc2,APL_NULL_CHAR,25);
  strncpy(chr_h_faildesc1,h_interdetail,25);
  strcat(chr_h_faildesc1,APL_NULL_STRING);
  if(strlen(h_interdetail) > 25)
  {
     chr_temp_part = &h_interdetail[25];
     strncpy(chr_h_faildesc2,chr_temp_part,24);
     strcat(chr_h_faildesc1,APL_NULL_STRING);
  }
  else
     strcpy(chr_h_faildesc2,"");
  

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INTERDESC1=",chr_h_faildesc1);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INTERDESC2=",chr_h_faildesc2);

/* ISKB 673  Chirag 22022008 SEBI word should not come in swift message */
  Alert("Chirag FailDesc found |%s| \n",chr_h_faildesc1);
  if(strncmp(chr_h_faildesc1,"SEBI-",5) == 0)
  {
  	memset(chr_temp_part,APL_NULL_CHAR,61);
	EXEC SQL SELECT substr(:chr_h_faildesc1,6,length(:chr_h_faildesc1)) INTO :chr_faildesc3 from dual;
	Alert("sqlca.sqlcode |%d| \n",sqlca.sqlcode);
	IS_ANY_ORA_ERROR
	Alert("Got SEBI removed |%s| \n",chr_faildesc3);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INTERDESC3=",chr_faildesc3);
  }	
  else
  {
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INTERDESC3=",chr_h_faildesc1);
  }
/* ISKB 673 Chirag 22022008 SEBI word should not come in swift message */

  memset(chr_temp_part,APL_NULL_CHAR,61);


	if(strcmp(chr_p_msgno,"534")==0)
	{
	i_domestic_cpclr_name=0;
		if(strcmp(p_SEL_VAL[4].link_val,"NEW_DOMCPAC")==0)
		{
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
   		EXEC SQL SELECT replace(replace(pty_name,chr(13),NULL),chr(10),NULL)
				INTO :h_domestic_cpclr_name:i_domestic_cpclr_name
            FROM MT_PARTY
            WHERE pty_code = :p_SEL_VAL[4].link_tag;

   		IS_ANY_ORA_ERROR
   		if(sqlca.sqlcode == 1403 )
   		{
        		CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[4].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
				APL_GOBACK_FAIL
   		}
   		if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");

   		
   		strncpy(chr_temp_part,h_domestic_cpclr_name,35);
   		strcat(chr_temp_part,APL_NULL_STRING);
   		if(strlen(h_domestic_cpclr_name)!=0) 
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",chr_temp_part);
   		else
      		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
   		if(strlen(h_domestic_cpclr_name) > 35)
   		{
     			chr_temp_part = &h_domestic_cpclr_name[35];
     			strncpy(chr_h_domcpname1,chr_temp_part,30);
     			strcat(chr_h_domcpname1,APL_NULL_STRING);
  
     			if(strlen(chr_h_domcpname1)!=0) 
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",chr_h_domcpname1);
     			else
       			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		}
   		else
       		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPACNAME1=",APL_NULL_STRING);
   		memset(chr_temp_part,APL_NULL_CHAR,61);
			memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
			memset(chr_h_domcpname1,APL_NULL_CHAR,35);
			i_domestic_cpclr_name=0;
		}
	}

		
		
	if(strcmp(chr_p_msgno,"534")==0)
	{
		if (strcmp(p_STAT_VAL[5].link_tag,APL_NULL_STRING)!=0)
		{
			if(strcmp(p_STAT_VAL[5].link_tag,"ALL")==0)
			{
				EXEC SQL DECLARE CMULTREAS_CUR CURSOR FOR
							SELECT STAT_BLCKNO,
									 substr(STAT_BLCKNO,1,1),
									 STAT_QUAL,
                            STATUS_CD,
                            REASON_QL,
                            REASON_CD,
                            INFO
							FROM DL_MULT_REAS_CODES
							WHERE CLIENT =:p_SEL_VAL[2].link_tag
							AND IDENTIY_NO =:p_SEL_VAL[3].link_tag
							AND FAILREASON_CD =:p_SEL_VAL[0].link_tag
							AND nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[1].NUM_VAL,0)
							AND STAT_BLCKNO !=11
							AND ACCESS_STAMP = (SELECT MAX(ACCESS_STAMP) 
													  FROM DL_MULT_REAS_CODES 
													  WHERE  CLIENT =:p_SEL_VAL[2].link_tag
													  AND IDENTIY_NO =:p_SEL_VAL[3].link_tag
														AND FAILREASON_CD =:p_SEL_VAL[0].link_tag
														AND nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[1].NUM_VAL,0));
					
				 IS_ANY_ORA_ERROR
			
				 EXEC SQL OPEN CMULTREAS_CUR;
				 IS_ANY_ORA_ERROR
		
				 for(;;)
				 {
					EXEC SQL FETCH CMULTREAS_CUR 
										INTO 	:chr_l_548_stat_blck_num:i_548_stat_blck_num,
								  				:chr_l_stat_blck_num1,
												:chr_l_548_stat_qual:i_548_stat_qual,
                          				:chr_l_548_stat_code:i_548_stat_code,
                          				:chr_l_548_reas_qual:i_548_reas_qual,
                          				:chr_l_548_reas_code:i_548_reas_code,
                          				:chr_l_548_note:i_548_note;
					IS_ANY_ORA_ERROR
					
					if(sqlca.sqlcode==1403)
					break;
					
					if(strcmp(chr_l_stat_blck_num1,"1")==0)
					{
						fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,"STATUS_QUAL_IND","=",chr_l_548_stat_qual);	
						fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,"STATUS_CD","=",chr_l_548_stat_code);	
					}
					else
					{
						fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"STAT_QUAL",chr_l_stat_blck_num1,"=",chr_l_548_stat_qual);	
						fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"STAT_CD",chr_l_stat_blck_num1,"=",chr_l_548_stat_code);	
					}
					fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"REASQUAL",chr_l_548_stat_blck_num,"=",chr_l_548_reas_qual);	
					fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"REASCODE",chr_l_548_stat_blck_num,"=",chr_l_548_reas_code);	
					fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"CUST_NOTE",chr_l_548_stat_blck_num,"=",chr_l_548_note);	
				 }
				
					EXEC SQL CLOSE CMULTREAS_CUR;
					IS_ANY_ORA_ERROR

			}
			else
			{
				EXEC SQL SELECT STAT_QUAL,
									substr(STAT_BLCKNO,1,1),
									 STATUS_CD,
									 REASON_QL,
									 REASON_CD,
									 INFO
							INTO :chr_l_548_stat_qual:i_548_stat_qual,
								  :chr_l_stat_blck_num1,
								  :chr_l_548_stat_code:i_548_stat_code,
						 		  :chr_l_548_reas_qual:i_548_reas_qual,
								  :chr_l_548_reas_code:i_548_reas_code,
								  :chr_l_548_note:i_548_note
							FROM DL_MULT_REAS_CODES
							WHERE STAT_BLCKNO =:p_STAT_VAL[5].link_tag
							AND CLIENT =:p_SEL_VAL[2].link_tag
							AND IDENTIY_NO =:p_SEL_VAL[3].link_tag
							AND FAILREASON_CD =:p_SEL_VAL[0].link_tag
							AND nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[1].NUM_VAL,0)
                     AND ACCESS_STAMP = (SELECT MAX(ACCESS_STAMP)
                                         FROM DL_MULT_REAS_CODES
                                         WHERE  CLIENT =:p_SEL_VAL[2].link_tag
                                         AND IDENTIY_NO =:p_SEL_VAL[3].link_tag
														AND FAILREASON_CD =:p_SEL_VAL[0].link_tag
														AND nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[1].NUM_VAL,0));
				IS_ANY_ORA_ERROR	
					if(strcmp(chr_l_stat_blck_num1,"1")==0)
					{
						fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,"STATUS_QUAL_IND","=",chr_l_548_stat_qual);	
						fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,"STATUS_CD","=",chr_l_548_stat_code);	
					}
					else
					{
						fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"STAT_QUAL",chr_l_stat_blck_num1,"=",chr_l_548_stat_qual);	
						fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"STAT_CD",chr_l_stat_blck_num1,"=",chr_l_548_stat_code);	
					}
				
				fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"REASQUAL",p_STAT_VAL[5].link_tag,"=",chr_l_548_reas_qual);	
				fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"REASCODE",p_STAT_VAL[5].link_tag,"=",chr_l_548_reas_code);	
				fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"CUST_NOTE",p_STAT_VAL[5].link_tag,"=",chr_l_548_note);	
			}
		}
	}

	if(strcmp(chr_p_msgno,"573")==0)
	{
		printf("i have entered the 573 LOOOP\n");
		fflush(stdout);

		if(strcmp(p_SEL_VAL[19].link_tag,"Y")==0)
		{
            EXEC SQL DECLARE CMULTREAS_CUR1 CURSOR FOR
                     SELECT STAT_BLCKNO,
                            substr(STAT_BLCKNO,1,1),
                            STAT_QUAL,
                            STATUS_CD,
                            REASON_QL,
                            REASON_CD,
                            INFO
                     FROM DL_MULT_REAS_CODES
                     WHERE CLIENT =:p_SEL_VAL[13].link_tag
                     AND IDENTIY_NO =:p_SEL_VAL[15].link_tag
                     AND FAILREASON_CD =:p_SEL_VAL[0].link_tag
							AND STAT_BLCKNO !=11
							AND nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[16].NUM_VAL,0)
                     AND ACCESS_STAMP = (SELECT MAX(ACCESS_STAMP)
                                         FROM DL_MULT_REAS_CODES
                                         WHERE  CLIENT =:p_SEL_VAL[13].link_tag
                                         AND IDENTIY_NO =:p_SEL_VAL[15].link_tag
                     						  AND FAILREASON_CD =:p_SEL_VAL[0].link_tag
													AND nvl(sub_fail_cd,0) = nvl(:p_SEL_VAL[16].NUM_VAL,0));

             IS_ANY_ORA_ERROR

             EXEC SQL OPEN CMULTREAS_CUR1;
             IS_ANY_ORA_ERROR

             for(;;)
             {
               EXEC SQL FETCH CMULTREAS_CUR1
                              INTO  :chr_l_548_stat_blck_num:i_548_stat_blck_num,
                                    :chr_l_stat_blck_num1,
                                    :chr_l_548_stat_qual:i_548_stat_qual,
                                    :chr_l_548_stat_code:i_548_stat_code,
                                    :chr_l_548_reas_qual:i_548_reas_qual,
                                    :chr_l_548_reas_code:i_548_reas_code,
                                    :chr_l_548_note:i_548_note;
					IS_ANY_ORA_ERROR

               if(sqlca.sqlcode==1403)
               break;
				

               if(strcmp(chr_l_stat_blck_num1,"1")==0)
               {
                  fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,"STATUS_QUAL_IND","=",chr_l_548_stat_qual);

                  fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,"STATUS_CD","=",chr_l_548_stat_code);

               }
               else
               {
                  fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"STAT_QUAL",chr_l_stat_blck_num1,"=",chr_l_548_stat_qual);
                  fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"STAT_CD",chr_l_stat_blck_num1,"=",chr_l_548_stat_code);
                }
               fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"REASQUAL",chr_l_548_stat_blck_num,"=",chr_l_548_reas_qual);
               fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"REASCODE",chr_l_548_stat_blck_num,"=",chr_l_548_reas_code);
               fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"CUST_NOTE",chr_l_548_stat_blck_num,"=",chr_l_548_note);
             }
               EXEC SQL CLOSE CMULTREAS_CUR1;
               IS_ANY_ORA_ERROR
		}
	}

  
  #ifdef EMU_PROCESSING
  	if(strcmp(chr_p_msgno,"573") == 0)
  	{
		EXEC SQL SELECT 'Y'
		INTO :chr_h_euroconv
		FROM DUAL
		WHERE EXISTS (SELECT 1
						FROM PRO_EURO_TEMP
						WHERE client = :p_SEL_VAL[13].link_tag
						AND instr_code = :p_SEL_VAL[14].link_tag
						AND DF_IDENTNO = :p_SEL_VAL[15].link_tag
						AND instr(nvl(INFO,' '),'573SENT') = 0
						);

		EXEC SQL UPDATE PRO_EURO_TEMP
		SET INFO = concat(INFO,'573SENT')
		WHERE client = :p_SEL_VAL[13].link_tag
		AND instr_code = :p_SEL_VAL[14].link_tag
		AND DF_IDENTNO = :p_SEL_VAL[15].link_tag
		AND instr(nvl(INFO,' '),'573SENT') = 0;

		IS_ANY_ORA_ERROR

		if(strcmp(chr_h_euroconv,"Y") == 0)
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
	}
#endif


} 

int_l_calc_opnbal=0;
printf("HERE RE ...\n");
if(strcmp(p_SEL_VAL[0].link_val,"OPNBAL")==0)
{
printf("HERE RE OPNBAL...\n");
	fflush(stdout);

	if(((strcmp(p_STAT_VAL[9].link_val,"WEEKLY_STM")==0) 
		&& (strcmp(p_STAT_VAL[9].link_tag,"Y")==0))
   ||((strcmp(p_STAT_VAL[8].link_val,"WEEKLY_STM")==0) 
		&&(strcmp(p_STAT_VAL[8].link_tag,"Y")==0))) 
	{
		int_l_calc_opnbal=1;
		memset(chr_l_last_gen_date,APL_NULL_CHAR,APL_DATE_LEN);
		h_safekeep_pos=0;
		EXEC SQL SELECT to_char(PREV_GEN_DATE,'RRRRMMDD'),CLOSING_BAL
					INTO :chr_l_last_gen_date:i_last_gen_date,:h_safekeep_pos
					FROM DL_WEEKTXNBAL
					WHERE CLIENT=:p_SEL_VAL[5].link_tag
					AND INSTR_CODE=:p_SEL_VAL[4].link_tag
					AND PREV_GEN_DATE = (SELECT MAX(PREV_GEN_DATE) FROM DL_WEEKTXNBAL
											 WHERE CLIENT=:p_SEL_VAL[5].link_tag
											 AND INSTR_CODE=:p_SEL_VAL[4].link_tag);
		IS_ANY_ORA_ERROR
		printf("L_LAST_GEN_DATE FROM WEEKTXNBAL is %s\n",chr_l_last_gen_date);
		fflush(stdout);

		printf("H_SAFEK FROM WEEKTXNBAL is %lf\n",h_safekeep_pos);
		fflush(stdout);

		printf("l_calc_opnbal is %d\n",int_l_calc_opnbal);
		fflush(stdout);

		if (sqlca.sqlcode==1403)
		{
			if (!strcmp(p_STAT_VAL[10].link_val,"LAST_GEN_DATE"))
			{
				EXEC SQL SELECT  
							to_char(to_date(:p_STAT_VAL[10].link_tag,'RRMMDD'),'DD/MM/YYYY') 
							into :chr_l_temp_date  from dual;
				IS_ANY_ORA_ERROR
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREV_GEN_DATE=",p_STAT_VAL[10].link_tag);
			}
			else if (!strcmp(p_STAT_VAL[9].link_val,"LAST_GEN_DATE"))
			{
				EXEC SQL SELECT  
							to_char(to_date(:p_STAT_VAL[9].link_tag,'RRMMDD'),'DD/MM/YYYY') 
							into  :chr_l_temp_date from dual;
				IS_ANY_ORA_ERROR
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREV_GEN_DATE=",p_STAT_VAL[9].link_tag);
			}
				strcat(chr_l_temp_date," 12:00:00");

			EXEC SQL SELECT  NVL(sum(safekeep_pos),0) 
						INTO :h_safekeep_pos
						FROM DL_HISSAFEK 
						WHERE CLIENT=:p_SEL_VAL[5].link_tag
						AND INSTR_CODE=:p_SEL_VAL[4].link_tag
						AND POSIT_DATE =:chr_l_temp_date;
			IS_ANY_ORA_ERROR
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NEW_OPNBAL=",h_safekeep_pos);	
		}	
		else
		{
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NEW_OPNBAL=",h_safekeep_pos);
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREV_GEN_DATE=",chr_l_last_gen_date);
		}
	}
		l_new_nom_fmt=1;
		if(strcmp(p_SEL_VAL[10].link_tag,"Y")==0)
		{
			EXEC SQL SELECT NOMINAL_VALUE INTO :l_new_nom_fmt FROM MT_INSTRUMENT
			WHERE instr_code = :p_SEL_VAL[4].link_tag;

			IS_ANY_ORA_ERROR
   		if(sqlca.sqlcode == 1403)
				l_new_nom_fmt=1;
		}
		else
			l_new_nom_fmt=1;

	if(int_l_calc_opnbal==0)
	{
   	
   	memset(chr_temp_date,APL_NULL_CHAR,APL_DATE_LEN);
   	memset(chr_out_date,APL_NULL_CHAR,APL_DATE_LEN);
   	i_temp_date=0;
   	i_out_date=0;

 	  EXEC SQL SELECT TO_CHAR(TO_DATE(:p_STAT_VAL[2].link_tag) -1) into :chr_temp_date:i_temp_date
   	FROM DUAL;
   	IS_ANY_ORA_ERROR

 	  EXEC SQL select min(H_DATE) - 1
   	into  :chr_out_date:i_out_date
   	from MT_HOLIDAY
   	where STATUS='AA'/*Smita - Changed Col NAme - HDFCCA Base Version*/
		AND BANK_IND='Y'
   	connect by prior H_DATE - 1 = H_DATE
   	and prior STATUS = 'AA'
		and prior BANK_IND = BANK_IND
   	start with H_DATE=:chr_temp_date and STATUS='AA' and BANK_IND='Y';

 	  IS_ANY_ORA_ERROR

   	if (i_out_date == -1)
   	{
     	strcpy(chr_out_date,chr_temp_date);
   	}

   	exec sql select NVL(sum(safekeep_pos),0) into :h_safekeep_pos from DL_HISSAFEK
      	      where POSIT_DATE  =  :chr_out_date
         	         and client = :p_SEL_VAL[5].link_tag
            	      and instr_code = :p_SEL_VAL[4].link_tag
            	group by client,instr_code;
   		IS_ANY_ORA_ERROR

 	  if(sqlca.sqlcode == 1403)
		h_safekeep_pos = 0;

		

		
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"OPNBAL=",(h_safekeep_pos*l_new_nom_fmt));
   	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NEW_OPNBAL=",(h_safekeep_pos*l_new_nom_fmt));
	}
   if(strcmp(p_SEL_VAL[1].link_val,"TAMT")==0)
   {


     exec sql select NVL(sum(decode(deal_cd,3,AMOUNT,4,-AMOUNT,5,-AMOUNT,7,-AMOUNT,AMOUNT)),0),
                 NVL(sum(decode(deal_cd,1,QTY,3,QTY,7,QTY,0)),0),
                 NVL(sum(decode(deal_cd,2,QTY,4,QTY,8,QTY,0)),0)
           into :h_amt,:h_delquantity,:h_recquantity
           from dl_deal
           where client = :p_SEL_VAL[5].link_tag and
                 instr_code = :p_SEL_VAL[4].link_tag and
                 INSTRUMENT_DT >= :p_STAT_VAL[2].link_tag and
                 INSTRUMENT_DT <= :p_STAT_VAL[7].link_tag;
   	IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403)
   {
      h_amt = 0;
      h_delquantity = 0;
      h_recquantity = 0;
   }



		EXEC SQL	select NVL(sum(decode(deal_cd,3,AMOUNT,4,-AMOUNT,5,-AMOUNT,7,-AMOUNT,AMOUNT)),0),
                 NVL(sum(decode(deal_cd,1,QTY,decode(deal_cd,3,QTY,7,QTY,0))),0),
                 NVL(sum(decode(deal_cd,2,QTY,decode(deal_cd,4,QTY,8,QTY,0))),0)
           into :dbl_h_hisamount,:h_hisdelquantity,:h_hisrecquantity
           from DL_HISDEAL
           where client = :p_SEL_VAL[5].link_tag and
                 instr_code = :p_SEL_VAL[4].link_tag and
                 INSTRUMENT_DT >= :p_STAT_VAL[2].link_tag and
                 INSTRUMENT_DT <= :p_STAT_VAL[7].link_tag;
   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403)
   {
      dbl_h_hisamount = 0;
      h_hisdelquantity = 0;
      h_hisrecquantity = 0;
   }
		
		h_amt 	= 	h_amt + dbl_h_hisamount;
		h_delquantity =		h_delquantity	+ h_hisdelquantity;
		h_recquantity		=	h_recquantity	+ h_hisrecquantity;
		

   fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"TOTAMT=",h_amt);
   fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"TOTDEBIT=",h_delquantity);
   fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"TOTCREDIT=",h_recquantity);
   fprintf(p_Data_File,"%d%s%0.4lf\n",*p_rownum,"CBAL=",h_safekeep_pos + h_recquantity - h_delquantity);

   }
	printf("HI!!!!!!!!!!!!!!!!!!!!!!");
	fflush(stdout);

	printf("p_SEL_VAL[4].link_tag is %s\n",p_SEL_VAL[4].link_tag);
	fflush(stdout);

	printf("p_SEL_VAL[5].link_tag is %s\n",p_SEL_VAL[5].link_tag);
	fflush(stdout);

   h_safekeep_pos = 0;

   exec sql select NVL(sum(safekeep_pos),0) into :h_safekeep_pos from DL_SAFEK
                  where instr_code = :p_SEL_VAL[4].link_tag
                  and client = :p_SEL_VAL[5].link_tag
            group by client,instr_code;
   IS_ANY_ORA_ERROR

	printf("AFTER sqlca.sqlcode %d\n",sqlca.sqlcode);
	fflush(stdout);

	printf("AFTER h_safekeep_pos %lf\n",h_safekeep_pos);
	fflush(stdout);


   if(sqlca.sqlcode == 1403)
	h_safekeep_pos = 0;

	
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CLOSBAL=",(h_safekeep_pos*l_new_nom_fmt));
   fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NEW_CLOSBAL=",(h_safekeep_pos*l_new_nom_fmt));
}

if(strcmp(p_SEL_VAL[1].link_val,"CA_EVENT")==0)
{

 if(strcmp(p_SEL_VAL[6].link_tag,"19") == 0)
 {
		i_new_op_type=0;
		strcpy(chr_h_new_op_type,"");
		strcpy(h_ca_event,"");

     EXEC SQL  select decode(dl_class,'19',decode(CA_EVENT,'BO','17', 'SD','18','RD','23','RT','11','SP','19', decode(CA_EVENT,'SP','19',decode(deal_cd,1,'12',decode(deal_cd,3,'12',7,'12','11'))) )),OP_EVT_CLASS,CA_EVENT into :h_code,:chr_h_new_op_type:i_new_op_type,h_ca_event
       from dl_deal, CACHEQUE,CAEVENT
       where dl_deal.client = :p_SEL_VAL[5].link_tag and
             CACHEQUE.client = dl_deal.client and
             CACHEQUE.DEAL_IDENTITY_NO = :p_SEL_VAL[3].link_tag and
             CACHEQUE.DEAL_IDENTITY_NO = dl_deal.IDENTIY_NO and 
             CAEVENT.corp_id = CACHEQUE.corp_id ;

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403)
   {
     if(strcmp(p_SEL_VAL[7].link_tag,"1") == 0 ||
        strcmp(p_SEL_VAL[7].link_tag,"3") == 0)
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"CATYP=12");
     else
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"CATYP=11");

      
      if((strncmp(p_SEL_VAL[3].link_tag,"STKSPL",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0))
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"SP_CATYP=Y");
      }
		else if((strncmp(p_SEL_VAL[3].link_tag,"STKSPR",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0)) /** RVSL **/
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"RVSP_CATYP=Y");
		}
		else if((strncmp(p_SEL_VAL[3].link_tag,"AMALGM",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0)) /** RVSL **/
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"AMAL_CATYP=Y");
		}
		else if((strncmp(p_SEL_VAL[3].link_tag,"TKOVER",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0)) /** RVSL **/
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"TKOV_CATYP=Y");
		}
      else
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=N");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"SP_CATYP=N");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"RVSP_CATYP=N"); /**** RVSL ****/
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"AMAL_CATYP=N"); /**** AMAL ****/
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"TKOV_CATYP=N"); /**** TAKO ****/
      }
		if((strncmp(p_SEL_VAL[3].link_tag,"OFFPRC",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0))
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=CV");
		else if((strncmp(p_SEL_VAL[3].link_tag,"OFFPRW",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0))
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=WC");
		else if((strncmp(p_SEL_VAL[3].link_tag,"OFFPRT",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0))
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=TO");
		else if((strncmp(p_SEL_VAL[3].link_tag,"OFFPRD",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0))
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=DO");
		else if((strncmp(p_SEL_VAL[3].link_tag,"OFFPRR",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0))
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=DR");
		else if((strncmp(p_SEL_VAL[3].link_tag,"OFFPRM",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0))
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=MG");    
		else
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");
   }
   else
	{	
		
		if(strcmp(h_ca_event,"OP")==0)
		{
			if(i_new_op_type!=-1)
			{
				if(strcmp(chr_h_new_op_type,"PR")!=0)
					fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OP_CATYP=",chr_h_new_op_type);
				else
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");
			}
			else
			{
				fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");
			}
		}
		else
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");
     	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CATYP=",h_code);

	  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
 		strcpy(h_ca_event,"");
	}
 }
  
}

if(strcmp(chr_p_msgno,"573")==0)
{
	i_new_op_type=0;
 	strcpy(chr_h_new_op_type,"");
 	strcpy(h_ca_event,"");

 if(strcmp(p_SEL_VAL[4].link_tag,"19") == 0)
 {
     EXEC SQL  select decode(dl_class,'19',decode(CA_EVENT,'BO','17', 'SD','18','RD','23','RT','11','SP','19', decode(CA_EVENT,'SP','19',decode(deal_cd,1,'12',decode(deal_cd,3,'12',7,'12','11'))) )),OP_EVT_CLASS,CA_EVENT into :h_code,:chr_h_new_op_type:i_new_op_type,h_ca_event
       from dl_deal, CACHEQUE,CAEVENT
       where dl_deal.client = :p_SEL_VAL[13].link_tag and
             CACHEQUE.client = dl_deal.client and
             CACHEQUE.DEAL_IDENTITY_NO = :p_SEL_VAL[15].link_tag and
             CACHEQUE.DEAL_IDENTITY_NO = dl_deal.IDENTIY_NO and
             CAEVENT.corp_id = CACHEQUE.corp_id ;

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403)
   {
     if(strcmp(p_SEL_VAL[9].link_tag,"1") == 0 ||
        strcmp(p_SEL_VAL[9].link_tag,"3") == 0)
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"CATYP=12");
     else
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"CATYP=11");
	

      
      if((strncmp(p_SEL_VAL[15].link_tag,"STKSPL",6)==0) && (strcmp(p_SEL_VAL[18].link_tag,"G") == 0))
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"SP_CATYP=Y");
      }
		else if((strncmp(p_SEL_VAL[3].link_tag,"STKSPR",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0)) /** RVSL **/
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"RVSP_CATYP=Y");
		}
		else if((strncmp(p_SEL_VAL[3].link_tag,"AMALGM",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0)) /** RVSL **/
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"AMAL_CATYP=Y");
		}
		else if((strncmp(p_SEL_VAL[3].link_tag,"TKOVER",6)==0) && (strcmp(p_SEL_VAL[9].link_tag,"G") == 0)) /** RVSL **/
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"TKOV_CATYP=Y");
		}
      else
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=N");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"SP_CATYP=N");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"RVSP_CATYP=N"); /*** RVSL ***/
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"AMAL_CATYP=N"); /**** AMAL ****/
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"TKOV_CATYP=N"); /**** TAKO ****/
      }
		if((strncmp(p_SEL_VAL[15].link_tag,"OFFPRC",6)==0) && (strcmp(p_SEL_VAL[18].link_tag,"G") == 0))
      	fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=CV");
      else if((strncmp(p_SEL_VAL[15].link_tag,"OFFPRW",6)==0) && (strcmp(p_SEL_VAL[18].link_tag,"G") == 0))
     		fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=WC");
 		else if((strncmp(p_SEL_VAL[15].link_tag,"OFFPRT",6)==0) && (strcmp(p_SEL_VAL[18].link_tag,"G") == 0))
  			fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=TO");
 		else if((strncmp(p_SEL_VAL[15].link_tag,"OFFPRD",6)==0) && (strcmp(p_SEL_VAL[18].link_tag,"G") == 0))
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=DO");
      else if((strncmp(p_SEL_VAL[15].link_tag,"OFFPRR",6)==0) && (strcmp(p_SEL_VAL[18].link_tag,"G") == 0))
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=DR");
      else if((strncmp(p_SEL_VAL[15].link_tag,"OFFPRM",6)==0) && (strcmp(p_SEL_VAL[18].link_tag,"G") == 0))
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=MG");   
      else
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");
   }
   else
	{
		
      if(strcmp(h_ca_event,"OP")==0)
      {
         if(i_new_op_type!=-1)
         {
				if(strcmp(chr_h_new_op_type,"PR")!=0)
            	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OP_CATYP=",chr_h_new_op_type);
				else
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");
         }
         else
         {
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");
         }
      }
      else
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"OP_CATYP=");

     	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CATYP=",h_code);

	  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW_CATYPIND=Y");
		strcpy(h_ca_event,"");
	}
 }

}

  printf("here just checking before custnote\n");
  fflush(stdout);


if(strcmp(p_SEL_VAL[1].link_val,"SCUSTNOTE")==0)
{
  printf("here inside custnote \n");
  fflush(stdout);

  memset(h_custinfo,APL_NULL_CHAR,71);
  memset(h_domestic_cpclr_name,APL_NULL_CHAR,35);
  memset(chr_temp_part,APL_NULL_CHAR,61);
  strcpy(h_custinfo,p_SEL_VAL[1].link_tag);
  strncpy(chr_temp_part,h_custinfo,34);
  strcat(chr_temp_part,APL_NULL_STRING);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CUSTNOTE=",chr_temp_part);
  if(strlen(h_custinfo) > 35)
  {
     memset(chr_temp_part,APL_NULL_CHAR,61);
     chr_temp_part = &h_custinfo[34];
     strncpy(h_domestic_cpclr_name,chr_temp_part,34);
     strcat(h_domestic_cpclr_name,APL_NULL_STRING);
  }
  else
     strcpy(h_domestic_cpclr_name,"");
  

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CUSTNOTE1=",h_domestic_cpclr_name);
  memset(chr_temp_part,APL_NULL_CHAR,61);

}

if(strcmp(p_SEL_VAL[5].link_val,"SCONFDT")==0)
{
	printf("here inside confdt \n");
	fflush(stdout);

 if(strcmp(p_SEL_VAL[5].link_tag," ")!=0 &&
    strcmp(p_SEL_VAL[5].link_tag,"")!=0)
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CONFDT=",p_SEL_VAL[5].link_tag);
 else
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CONFDT=",APL_NULL_STRING);

 if(strcmp(p_SEL_VAL[3].link_tag," ")!=0 &&
    strcmp(p_SEL_VAL[3].link_tag,"")!=0)
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INSTR_DT=",p_SEL_VAL[3].link_tag);
 else
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INSTR_DT=",APL_NULL_STRING);

 if(strcmp(p_SEL_VAL[10].link_tag," ")!=0 &&
    strcmp(p_SEL_VAL[10].link_tag,"")!=0)
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"MONEYDT=",p_SEL_VAL[10].link_tag);
 else
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"MONEYDT=",APL_NULL_STRING);

 if(strcmp(p_SEL_VAL[3].link_tag," ")!=0 &&
    strcmp(p_SEL_VAL[3].link_tag,"")!=0)
 {
    if((strcmp(p_SEL_VAL[10].link_tag," ")==0 ||
       strcmp(p_SEL_VAL[10].link_tag,"")==0) &&
       (strcmp(p_SEL_VAL[9].link_tag,"3")== 0 ||
       strcmp(p_SEL_VAL[9].link_tag,"4")== 0))
     
     fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"DESCRIPTION=","SECS SETTLED ",p_SEL_VAL[7].link_tag," PEND FUNDS");
    
 }
 else if(strcmp(p_SEL_VAL[5].link_tag," ")!=0 &&
    strcmp(p_SEL_VAL[5].link_tag,"")!=0)
 {
    if((strcmp(p_SEL_VAL[10].link_tag," ")!=0 &&
       strcmp(p_SEL_VAL[10].link_tag,"")!=0) &&
       (strcmp(p_SEL_VAL[9].link_tag,"3")== 0 ||
       strcmp(p_SEL_VAL[9].link_tag,"4")== 0))
     
     fprintf(p_Data_File,"%d%s%s%s%s\n",*p_rownum,"DESCRIPTION=","FUNDS SETTLED ",p_SEL_VAL[8].link_tag," PEND SECS");
    
 }
 else
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DESCRIPTION=",APL_NULL_STRING);

}


  printf("here just checking before 52x\n");
  fflush(stdout);

if((strcmp(chr_p_msgno,MS_MSGNO_52X) == 0) || (strcmp(chr_p_msgno, MS_SWIFT_BOG_NO)==0) || (strcmp(chr_p_msgno,"592")==0))
{
  fprintf(p_Data_File,"%d%s%.8s\n",*p_rownum,"NEW_DATE=",chr_h_prepdate_new);
  memset(l_count_vtb,APL_NULL_CHAR,APL_CLIENT_LENGTH); 
  	if(strcmp(chr_p_msgno,"592")==0)
  	{
      chr_posofspace = strstr(p_SEL_VAL[1].link_tag," ");
      if(chr_posofspace == NULL)
         strcpy(l_count_vtb,p_SEL_VAL[1].link_tag);
      else
      {
         int_nlen = chr_posofspace - p_SEL_VAL[1].link_tag;
         strncpy(l_count_vtb,p_SEL_VAL[1].link_tag,int_nlen);
			strcat(l_count_vtb,APL_NULL_STRING);
      }
      memset(chr_l_domcpac,APL_NULL_CHAR,APL_CLIENT_LENGTH);
      chr_posofspace = strstr(p_SEL_VAL[3].link_tag," ");
      if(chr_posofspace == NULL)
         strcpy(chr_l_domcpac,p_SEL_VAL[3].link_tag);
      else
      {
         int_nlen = chr_posofspace - p_SEL_VAL[3].link_tag;
         strncpy(chr_l_domcpac,p_SEL_VAL[3].link_tag,int_nlen);
			strcat(chr_l_domcpac,APL_NULL_STRING);
      }

  	}
  	else
  	{
  		chr_posofspace = strstr(p_SEL_VAL[0].link_tag," ");
  		if(chr_posofspace == NULL) 
      	strcpy(l_count_vtb,p_SEL_VAL[0].link_tag);
  		else
  		{
      	int_nlen = chr_posofspace - p_SEL_VAL[0].link_tag;
      	strncpy(l_count_vtb,p_SEL_VAL[0].link_tag,int_nlen);
      	strcat(l_count_vtb,APL_NULL_STRING);
  		}


  		memset(chr_l_domcpac,APL_NULL_CHAR,APL_CLIENT_LENGTH); 
  		chr_posofspace = strstr(p_SEL_VAL[1].link_tag," ");
  		if(chr_posofspace == NULL) 
      	strcpy(chr_l_domcpac,p_SEL_VAL[1].link_tag);
  		else
  		{
      	int_nlen = chr_posofspace - p_SEL_VAL[1].link_tag;
      	strncpy(chr_l_domcpac,p_SEL_VAL[1].link_tag,int_nlen);
      	strcat(chr_l_domcpac,APL_NULL_STRING);
  		}
	}

  

 

 	EXEC SQL SELECT cln_vtb_client, CLN_CLAS, CLN_CLH
				into :chr_h_count_vtb:i_count_vtb,
						:chr_h_count_acctyp:i_count_acctyp,
						:chr_h_count_extacc:i_count_extacc
				from MT_CLIENT
				where cln_code = :l_count_vtb;

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403 || i_count_vtb == -1)
           strcpy(chr_h_count_vtb,"");

  if(sqlca.sqlcode == 1403 || i_count_acctyp == -1)
           strcpy(chr_h_count_acctyp,APL_NULL_STRING);

  if(sqlca.sqlcode == 1403 || i_count_extacc == -1)
			  strcpy(chr_h_count_extacc,APL_NULL_STRING);

  fprintf(p_Data_File,"%d%s%c%s\n",*p_rownum,"COUNTVTB=",'/',chr_h_count_vtb);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEWCOUNTVTB=",chr_h_count_vtb);

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"COUNTACCTYP=",chr_h_count_acctyp);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"COUNTEXTACC=",chr_h_count_extacc);

  EXEC SQL SELECT cln_name, lpad(substr(cln_vtb_client,2),4,'0')
           into :h_domestic_cpclr_name:i_domestic_cpclr_name,
					 :chr_h_domcpvtb:i_domcpvtb
           from MT_CLIENT
           where cln_code = :chr_l_domcpac;

  IS_ANY_ORA_ERROR


  if(sqlca.sqlcode == 1403 || i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");

  if(sqlca.sqlcode == 1403 || i_domcpvtb == -1)
           strcpy(chr_h_domcpvtb,APL_NULL_STRING);

  memset(chr_temp_part,APL_NULL_CHAR,61);

  strncpy(chr_temp_part,h_domestic_cpclr_name,35);
	if(strcmp(chr_p_msgno,"592")==0)
	{
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DCPNAME=",chr_temp_part);
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DCPVTB=",chr_h_domcpvtb);
	}
	else
  	{
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DOMCPNAME=",chr_temp_part);
  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DOMCPVTB=",chr_h_domcpvtb);
	}
  memset(chr_temp_part,APL_NULL_CHAR,61);

} 
		if(strcmp(chr_p_msgno,"592")==0)
		{
			strcpy(chr_l_uniq_client,p_SEL_VAL[2].link_tag);
			strcpy(chr_l_client,p_SEL_VAL[2].link_tag);
         strcpy(chr_l_refno,p_STAT_VAL[2].link_tag); 
         if (strlen(chr_l_uniq_client))
         {
				
				EXEC SQL SELECT INFORMATION INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
                       FROM DL_MSGLINK
                      WHERE CLIENT  = :chr_l_client
                        AND IDENTIY_NO    = :chr_l_refno
                        AND MSG_IN_OUT_IND   = 'O'
                        AND SWIFT_MSG_NO   = '54B'
                        AND DATE_OF_INPUT = (SELECT MAX(DATE_OF_INPUT)
                                          FROM DL_MSGLINK
                                         WHERE CLIENT = :chr_l_client
                                           AND IDENTIY_NO   = :chr_l_refno
                                           AND SWIFT_MSG_NO  = '54B'
                                           AND MSG_IN_OUT_IND  = 'O');
            IS_ANY_ORA_ERROR;
            printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEME=",chr_l_addinfo_uniq_seme);

			}
		}


if(strcmp(chr_p_msgno, MS_MSGNO_52XN01) == 0)
{
	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREP_DT=",chr_h_prepdate_new);
}


  printf("here just checking before asofdate\n");
  fflush(stdout);

if(strcmp(p_SEL_VAL[2].link_val,"ASOFDATE")==0)
{
	printf("here inside as of date\n");
	fflush(stdout);

   exec sql select substr(to_char(to_date(:p_STAT_VAL[1].link_tag),'DD/MM/YYYY'),1,10)
                   into :chr_l_ddate from dual;

   IS_ANY_ORA_ERROR
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TASOFDATE=",chr_l_ddate);
}

if(strcmp(p_SEL_VAL[0].link_val,"PMSTACC")==0)
{
	printf("Before cursor\n");
	fflush(stdout);

   exec sql declare mst_cur cursor for
	    select int_b.cln_master,sum(int_a.safekeep_pos)*d.CLOSING_PR,
                   c.instr_code,c.currency_cd,decode(c.INSTR_TYPE,'SHS',sum(int_a.safekeep_pos)*d.CLOSING_PR,0)
	    from DL_SAFEK int_a,MT_CLIENT int_b,MT_INSTRUMENT c,MT_DLYMKTPRC d
	    where int_b.cln_master = :p_SEL_VAL[2].link_tag and
      		  int_a.client = int_b.cln_code and
      		  int_a.instr_code = c.instr_code and
                  d.instr_code = int_a.instr_code and
      		  d.PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC d where instr_code = int_a.instr_code
		  	       and PRICE_DATE <= :p_STAT_VAL[1].link_tag )
	    group by int_b.cln_master,c.instr_code,c.currency_cd,c.INSTR_TYPE,d.CLOSING_PR 
	    UNION
	    select int_b.cln_master,sum(int_a.safekeep_pos)*d.CLOSING_PR,
                   c.instr_code,c.currency_cd,decode(c.INSTR_TYPE,'SHS',sum(int_a.safekeep_pos)*d.CLOSING_PR,0)
	    from DL_SAFEK int_a,MT_CLIENT int_b,MT_INSTRUMENT c,MT_HISDLYMKTPRC d
	    where int_b.cln_master = :p_SEL_VAL[2].link_tag and
      	    	  int_a.client = int_b.cln_code and
      	          int_a.instr_code = c.instr_code and
                  d.instr_code = int_a.instr_code and
      	          d.PRICE_DATE = (select MAX(PRICE_DATE) from MT_HISDLYMKTPRC d where instr_code = int_a.instr_code
		         and PRICE_DATE <= :p_STAT_VAL[1].link_tag )
      	          and int_a.instr_code != (select distinct(instr_code) from MT_DLYMKTPRC d
                          where instr_code = int_a.instr_code
		         and PRICE_DATE <= :p_STAT_VAL[1].link_tag )
	    group by int_b.cln_master,c.instr_code,c.currency_cd,c.INSTR_TYPE,d.CLOSING_PR 
            UNION
	    select int_b.cln_master,sum(int_a.safekeep_pos)*d.CLOSING_PR,
                   c.instr_code,c.currency_cd,decode(c.INSTR_TYPE,'SHS',sum(int_a.safekeep_pos)*d.CLOSING_PR,0)
	    from DL_SAFEK int_a,MT_CLIENT int_b,MT_INSTRUMENT c,MT_DLYMKTPRC d
	    where int_b.cln_master = :p_SEL_VAL[2].link_tag and
      		  int_a.client = int_b.cln_code and
      		  int_a.instr_code = c.instr_code and
                  d.instr_code = int_a.instr_code and
      		  d.PRICE_DATE = (select min(PRICE_DATE) from MT_DLYMKTPRC d where instr_code = int_a.instr_code
		  	       and PRICE_DATE > :p_STAT_VAL[1].link_tag  AND
			       instr_code != (select distinct(instr_code) from 
					  MT_DLYMKTPRC 
                                          where instr_code = int_a.instr_code and
					  PRICE_DATE <= :p_STAT_VAL[1].link_tag) and
			       instr_code != (select distinct(instr_code) from 
					  MT_HISDLYMKTPRC 
                                          where instr_code = int_a.instr_code and
					  PRICE_DATE <= :p_STAT_VAL[1].link_tag) )
	    group by int_b.cln_master,c.instr_code,c.currency_cd,c.INSTR_TYPE,d.CLOSING_PR ;

     exec sql open mst_cur;

	  printf("HERE after opening cursor\n");
	  fflush(stdout);

     IS_ANY_ORA_ERROR

     for( ; ; )
     {
            exec sql fetch mst_cur into :h_dl_client,:dbl_h_portval:i_portval,
                                        :h_instr_code,:h_currencycode,:dbl_h_totshs;
            if(sqlca.sqlcode == 1403)
            {
                 if(int_fetch_cnt == 0)
                 	msttotportval = 0;
                 break;
            }
            int_fetch_cnt++;
            int_returnval = IV_Proc_ConvToFxFn(h_currencycode,p_STAT_VAL[2].link_tag,p_STAT_VAL[3].link_tag,APL_NULL_STRING,&chr_l_exch_rate,&int_retstat,l_debug_info_ptr);
	    if(int_returnval == APL_FAILURE)
		chr_l_exch_rate = 0;

            msttotportval = msttotportval + (dbl_h_portval * chr_l_exch_rate); 
            msttotshs = msttotshs + (dbl_h_totshs * chr_l_exch_rate);
   }  
   exec sql close mst_cur;
   int_fetch_cnt = 0;

   exec sql select substr(to_char(to_date(:p_STAT_VAL[1].link_tag),'DD/MM/YYYY'),1,10)
                   into :chr_l_ddate from dual;

   IS_ANY_ORA_ERROR
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TASOFDATE=",chr_l_ddate);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYTOTPORTVAL=",p_STAT_VAL[2].link_tag);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYSUBTOTPORTVAL=",p_STAT_VAL[2].link_tag);
  
   if(strcmp(p_STAT_VAL[4].link_tag,"S")==0)
   {

   exec sql declare sub_cur cursor for
	    select int_a.client,sum(int_a.safekeep_pos)*d.CLOSING_PR,
                   c.instr_code,c.currency_cd,decode(c.INSTR_TYPE,'SHS',sum(int_a.safekeep_pos)*d.CLOSING_PR,0)
	    from DL_SAFEK int_a,MT_CLIENT int_b,MT_INSTRUMENT c,MT_DLYMKTPRC d
	    where int_b.cln_master = :p_SEL_VAL[2].link_tag and
      		  int_a.client = int_b.cln_code and
      		  int_a.instr_code = c.instr_code and
                  d.instr_code = int_a.instr_code and
                  int_b.cln_code != int_b.cln_master and 
      		  d.PRICE_DATE = (select MAX(PRICE_DATE) from MT_DLYMKTPRC d where instr_code = int_a.instr_code
		  	       and PRICE_DATE <= :p_STAT_VAL[1].link_tag )
	    group by int_a.client,c.instr_code,c.currency_cd,c.INSTR_TYPE,d.CLOSING_PR 
	    UNION
	    select int_a.client,sum(int_a.safekeep_pos)*d.CLOSING_PR,
                   c.instr_code,c.currency_cd,decode(c.INSTR_TYPE,'SHS',sum(int_a.safekeep_pos)*d.CLOSING_PR,0)
	    from DL_SAFEK int_a,MT_CLIENT int_b,MT_INSTRUMENT c,MT_HISDLYMKTPRC d
	    where int_b.cln_master = :p_SEL_VAL[2].link_tag and
      	    int_a.client = int_b.cln_code and
      	    int_a.instr_code = c.instr_code and
            d.instr_code = int_a.instr_code and
            int_b.cln_code != int_b.cln_master and 
      	    d.PRICE_DATE = (select MAX(PRICE_DATE) from MT_HISDLYMKTPRC d where instr_code = int_a.instr_code
		         and PRICE_DATE <= :p_STAT_VAL[1].link_tag) 
      	          and int_a.instr_code != (select distinct(instr_code) from MT_DLYMKTPRC d
                          where instr_code = int_a.instr_code
		         and PRICE_DATE <= :p_STAT_VAL[1].link_tag )
	    group by int_a.client,c.instr_code,c.currency_cd,c.INSTR_TYPE,d.CLOSING_PR 
	    UNION
	    select int_a.client,sum(int_a.safekeep_pos)*d.CLOSING_PR,
                   c.instr_code,c.currency_cd,decode(c.INSTR_TYPE,'SHS',sum(int_a.safekeep_pos)*d.CLOSING_PR,0)
	    from DL_SAFEK int_a,MT_CLIENT int_b,MT_INSTRUMENT c,MT_DLYMKTPRC d
	    where int_b.cln_master = :p_SEL_VAL[2].link_tag and
      		  int_a.client = int_b.cln_code and
      		  int_a.instr_code = c.instr_code and
                  d.instr_code = int_a.instr_code and
                  int_b.cln_code != int_b.cln_master and 
      		  d.PRICE_DATE = (select min(PRICE_DATE) from MT_DLYMKTPRC d where instr_code = int_a.instr_code
		  	       and PRICE_DATE > :p_STAT_VAL[1].link_tag  and 
                               instr_code != (select distinct(instr_code) from MT_DLYMKTPRC d where instr_code = int_a.instr_code and PRICE_DATE <= :p_STAT_VAL[1].link_tag) and 
                               instr_code != (select distinct(instr_code) from MT_HISDLYMKTPRC d where instr_code = int_a.instr_code and PRICE_DATE <= :p_STAT_VAL[1].link_tag) )
	    group by int_a.client,c.instr_code,c.currency_cd,c.INSTR_TYPE,d.CLOSING_PR ;

     exec sql open sub_cur;

     IS_ANY_ORA_ERROR

     for( ; ; )
     {
            exec sql fetch sub_cur into :h_dl_client,:dbl_h_portval:i_portval,
                                        :h_instr_code,:h_currencycode,:dbl_h_totshs;
            if(strlen(chr_prev_client) == 0)
              strcpy(chr_prev_client,h_dl_client);
            if(strcmp(chr_prev_client,h_dl_client)!=0)
            {
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"EOF=F");
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ACCOUNT=",p_SEL_VAL[2].link_tag);
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PROC_INIT=","DUMMY");
            fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"TOTPORTVAL=",msttotportval);
				if(APL_DOUBLE_EQUAL(msttotportval, 0.0))
				{
            	fprintf(p_Data_File,"%d%s%0.3f\n",*p_rownum,"SHSRATIO=",0.0); //AIX - Warnings Removal
            	fprintf(p_Data_File,"%d%s%0.3f\n",*p_rownum,"OTHRATIO=",0.0);
				}
				else 
				{
	            fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"SHSRATIO=",(msttotshs/msttotportval)*100);
   	         fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"OTHRATIO=",((msttotportval - msttotshs)/msttotportval)*100);
				}
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SUBACCOUNT=",chr_prev_client);
            fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"SUBTOTPORTVAL=",subtotportval);
				if(APL_DOUBLE_EQUAL(subtotportval, 0))
				{
            	fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"SUBSHSRATIO=",0.0); //AIX - Warnings Removal
            	fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"SUBOTHRATIO=",0.0);
				}
				else
				{
                fprintf(p_Data_File,"%d%s\n",*p_rownum,"FLGSUB=T");
	        subexistflg = 1;
            	fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"SUBSHSRATIO=",(subtotshs/subtotportval)*100);
           		fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"SUBOTHRATIO=",((subtotportval - subtotshs)/subtotportval)*100);
				}
            fprintf(p_Data_File,"%d%s",*p_rownum,"DOTTEDLINE=");
            for(dbl_i=0;dbl_i<=45;dbl_i++)
          	fprintf(p_Data_File,"%c",'.');
  	    fprintf(p_Data_File,"\n");
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TASOFDATE=",chr_l_ddate);
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYTOTPORTVAL=",p_STAT_VAL[2].link_tag);
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYSUBTOTPORTVAL=",p_STAT_VAL[2].link_tag);
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECSUBTOTPORTVAL=3");
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECTOTPORTVAL=3");
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECSHSRATIO=3");
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECOTHRATIO=3");
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECSUBSHSRATIO=3");
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECSUBOTHRATIO=3");
            int_stat_ctr=0;
            while(strlen(p_STAT_VAL[int_stat_ctr].link_val) != 0)
            {
            fprintf(p_Data_File,"%d",*p_rownum);
            fprintf(p_Data_File,"%s", p_STAT_VAL[int_stat_ctr].link_val);
            fprintf(p_Data_File,"=");
            fprintf(p_Data_File,"%s\n", p_STAT_VAL[int_stat_ctr].link_tag);
            int_stat_ctr++;


            }
            
            (*p_rownum)++;
            strcpy(chr_prev_client,h_dl_client);
            subtotportval = 0;
            subtotshs = 0;
            }
            strcpy(h_dl_client," ");
            if(sqlca.sqlcode != 1403)
            {
            int_fetch_cnt++;
            int_returnval = IV_Proc_ConvToFxFn(h_currencycode,p_STAT_VAL[2].link_tag,p_STAT_VAL[3].link_tag,APL_NULL_STRING,&chr_l_exch_rate,&int_retstat,l_debug_info_ptr);
	    if(int_returnval == APL_FAILURE)
		chr_l_exch_rate = 0;

            subtotportval = subtotportval + (dbl_h_portval * chr_l_exch_rate); 
            subtotshs = subtotshs + (dbl_h_totshs * chr_l_exch_rate);
            }
            if(sqlca.sqlcode == 1403)
            {
                 if(int_fetch_cnt == 0)
                 	subtotportval = 0;
                 else
                        (*p_rownum)--;
                 break;
            }
            chr_l_exch_rate = 0;
            dbl_h_portval=0;
            dbl_h_totshs=0;
     }
     exec sql close sub_cur;
     }
     if( ( subexistflg == 0 && 
          strcmp(p_STAT_VAL[4].link_tag,"S")==0) ||
          strcmp(p_STAT_VAL[4].link_tag,"M")==0 )
     {
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ACCOUNT=",p_SEL_VAL[2].link_tag);
            fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TOTPORTVAL=",msttotportval);
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"FLGSUB=F");
				if(APL_DOUBLE_EQUAL(msttotportval, 0.0))
				{
            	fprintf(p_Data_File,"%d%s%d\n",*p_rownum,"SHSRATIO=",0); //AIX - Warnings Removal
            	fprintf(p_Data_File,"%d%s%d\n",*p_rownum,"OTHRATIO=",0);
				}
				else
				{
            	fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"SHSRATIO=",(msttotshs/msttotportval)*100);
            	fprintf(p_Data_File,"%d%s%0.3lf\n",*p_rownum,"OTHRATIO=",((msttotportval - msttotshs)/msttotportval)*100);
				}
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SUBACCOUNT=",p_SEL_VAL[2].link_tag);
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECTOTPORTVAL=3");
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECSHSRATIO=3");
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECOTHRATIO=3");
            fprintf(p_Data_File,"%d%s",*p_rownum,"DOTTEDLINE=");
            for(dbl_i=0;dbl_i<=45;dbl_i++)
          	fprintf(p_Data_File,"%s",".");
  	    fprintf(p_Data_File,"\n");
     }
     
     

}

  printf("here just checking before C3tot\n");
  fflush(stdout);

if(strcmp(p_SEL_VAL[0].link_val,"C3TOT")==0)
{
   exec sql select substr(to_char(to_date(:p_STAT_VAL[2].link_tag),'MM/DD/YYYY'),1,10)
                   into :chr_l_ddate from dual;

   IS_ANY_ORA_ERROR
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TASOFDATE=",chr_l_ddate);
   memset(chr_l_ddate,APL_NULL_CHAR,11);
   exec sql select substr(to_char(to_date(:p_STAT_VAL[2].link_tag),'MM/DD/YYYY'),1,10)
                   into :chr_l_ddate from dual;

   IS_ANY_ORA_ERROR
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SASOFDATE=",chr_l_ddate);
  
  
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CNET=",fabs(atof(p_SEL_VAL[0].link_tag) - atof(p_SEL_VAL[1].link_tag)));
  if(atof(p_SEL_VAL[0].link_tag)-atof(p_SEL_VAL[1].link_tag) > 0)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CONDBCR=","CREDIT");
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CONDBCR=","DEBIT");

  
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PNET=",fabs(atof(p_SEL_VAL[3].link_tag) - atof(p_SEL_VAL[4].link_tag)));
  if(atof(p_SEL_VAL[3].link_tag)-atof(p_SEL_VAL[4].link_tag) > 0)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PENDBCR=","CREDIT");
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PENDBCR=","DEBIT");

  
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"SNET=",fabs(atof(p_SEL_VAL[5].link_tag) - atof(p_SEL_VAL[6].link_tag)));
  if(atof(p_SEL_VAL[5].link_tag)-atof(p_SEL_VAL[6].link_tag) > 0)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SECDBCR=","CREDIT");
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SECDBCR=","DEBIT");

  
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RTOT=",fabs(atof(p_SEL_VAL[1].link_tag) + atof(p_SEL_VAL[4].link_tag) + atof(p_SEL_VAL[6].link_tag)));
  
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"DTOT=",fabs(atof(p_SEL_VAL[0].link_tag) + atof(p_SEL_VAL[3].link_tag) + atof(p_SEL_VAL[5].link_tag)));
  
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NET=",fabs((atof(p_SEL_VAL[0].link_tag) + atof(p_SEL_VAL[3].link_tag) + atof(p_SEL_VAL[5].link_tag)) - (atof(p_SEL_VAL[1].link_tag) + atof(p_SEL_VAL[4].link_tag) + atof(p_SEL_VAL[6].link_tag))));

  if((atof(p_SEL_VAL[0].link_tag)+atof(p_SEL_VAL[3].link_tag)+atof(p_SEL_VAL[5].link_tag))-(atof(p_SEL_VAL[1].link_tag)+atof(p_SEL_VAL[4].link_tag)+atof(p_SEL_VAL[6].link_tag)) > 0)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NCRDBIND=","CREDIT");
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NCRDBIND=","DEBIT");

  fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECCNET=3");
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"REF_CCY=",p_SEL_VAL[7].link_tag);
  fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECSNET=3");
  fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECPNET=3");

}

  printf("here just checking before Instrument_dt\n");
  fflush(stdout);

if(strcmp(p_SEL_VAL[3].link_val,"INSTRUMENT_DT") == 0)
{
  if((strlen(p_SEL_VAL[3].link_tag)!=0) &&
     (strcmp(p_SEL_VAL[3].link_tag," ") != 0))
  {
    if(APL_FAILURE == CO_Pro_DateComp(p_SEL_VAL[3].link_tag,p_STAT_VAL[2].link_tag,&int_l_diff,l_debug_info_ptr))
    {
       APL_GOBACK_FAIL
    }

    if(int_l_diff >= 0 )
    {
       exec sql select substr(to_char(to_date(:p_SEL_VAL[3].link_tag),'YYMMDD'),1,6) into 
                       :chr_l_date from dual;
       IS_ANY_ORA_ERROR
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SINSTR_DT=",chr_l_date);
       if(strcmp(p_SEL_VAL[1].link_tag,"1")==0 || strcmp(p_SEL_VAL[1].link_tag,"3") == 0)
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DESCRIPTION=","/SECURS DELIVERED OUT-AWATG CASH/");
       else
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DESCRIPTION=","/SECURS RECEIVED-CASH TO BE PAID/");

    }
    else
    { 
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SINSTR_DT=",APL_NULL_STRING);
       if(strcmp(p_SEL_VAL[1].link_tag,"1")==0 || strcmp(p_SEL_VAL[1].link_tag,"3") == 0)
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DESCRIPTION=","/CASH RECD-SECURS TO DELIVER OUT/");
       else
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DESCRIPTION=","/CASH PAID OUT-AWAITING SECURS/");
    }
  }
  else
  {
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SINSTR_DT=",APL_NULL_STRING);
       if(strcmp(p_SEL_VAL[1].link_tag,"1")==0 || strcmp(p_SEL_VAL[1].link_tag,"3") == 0)
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DESCRIPTION=","/CASH RECD-SECURS TO DELIVER OUT/");
       else
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DESCRIPTION=","/CASH PAID OUT-AWAITING SECURS/");

  } 
}

if(strcmp(p_SEL_VAL[8].link_val,"DOTTEDLINE") == 0)
{
            fprintf(p_Data_File,"%d%s",*p_rownum,"DOTTEDLINE=");
            for(dbl_i=0;dbl_i<=45;dbl_i++)
          	fprintf(p_Data_File,"%c",'.');
  	    fprintf(p_Data_File,"\n");
   
}


if((strcmp(p_SEL_VAL[0].link_val,"DOMESTIC_CPCLT")==0) && (strcmp(chr_p_msgno, "592")!=0)&& (strcmp(chr_p_msgno,"586")!=0))
{
	if (((l_eoc_maint == 1) && (i_eocdom != -1 ))||(l_eoc_maint == 0))
	{
		i_domestic_cpclr_name =0;
   EXEC SQL SELECT substr(replace(replace(pty_name,chr(13),NULL),chr(10),NULL),1,35),
		PTY_SHORTNM into :h_domestic_cpclr_name:i_domestic_cpclr_name,:chr_h_alpha:i_alpha
            from MT_PARTY
            where pty_code = :p_SEL_VAL[0].link_tag;
	printf("i_domestic_cpclr_name is |%s|\n",h_domestic_cpclr_name);

   IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403 )
   {
			
				int_l_count = 0;
				strcpy(chr_h_alpha,APL_NULL_STRING);
				EXEC SQL SELECT count(*) as CNTDMPC,DOMESTICCP_NAME
					INTO :int_l_count,:h_domestic_cpclr_name:i_domestic_cpclr_name 
					FROM DL_DEALREPAIR
					WHERE IDENTIY_NO = :p_STAT_VAL[2].link_tag
					GROUP BY DOMESTICCP_NAME;
   		IS_ANY_ORA_ERROR
				if (int_l_count == 0 ) 
				{	
        		CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[0].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
				APL_GOBACK_FAIL
				}
				else
					strcpy(p_STAT_VAL[0].link_tag,h_domestic_cpclr_name);   
   }
   /**if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");**/
	printf("1i_domestic_cpclr_name is |%s|\n",h_domestic_cpclr_name);
	fflush(stdout);

	}
	/***if ((l_eoc_maint == 1) && (strlen(p_SEL_VAL[0].link_tag)== 0))
   {
      memset(h_domestic_cpclr_name,APL_NULL_CHAR,65);
	printf("i_domestic_cpclr_name is |%s|\n",h_domestic_cpclr_name);
   }***/
	
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DALPHA=",chr_h_alpha);
   /***memset(chr_temp_part,APL_NULL_CHAR,61);**/
	printf("i_domestic_cpclr_name is |%s|\n",h_domestic_cpclr_name);
	fflush(stdout);

	printf("h_domestic_cpclr_name is |%s|\n",h_domestic_cpclr_name);
	fflush(stdout);

   strncpy(chr_temp_part,h_domestic_cpclr_name,35);
	printf("chr_temp_part is |%s|\n",chr_temp_part);
	fflush(stdout);

   strcat(chr_temp_part,APL_NULL_STRING);
   if(strlen(h_domestic_cpclr_name)!=0) 
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DOMCPNAME=",chr_temp_part);
   else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DOMCPNAME=",APL_NULL_STRING);
   memset(chr_temp_part,APL_NULL_CHAR,61);
   if(strlen(h_domestic_cpclr_name) > 35)
   {
     chr_temp_part = &h_domestic_cpclr_name[35];
     strncpy(chr_h_domcpname1,chr_temp_part,30);
     strcat(chr_h_domcpname1,APL_NULL_STRING);
  
     if(strlen(chr_h_domcpname1)!=0) 
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DOMCPNAME1=",chr_h_domcpname1);
     else
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DOMCPNAME1=",APL_NULL_STRING);
   }
   else
       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DOMCPNAME1=",APL_NULL_STRING);
   memset(chr_temp_part,APL_NULL_CHAR,61);
}

if(strcmp(p_SEL_VAL[1].link_val,"CP_CLT")==0 && (strcmp(chr_p_msgno,"586")!=0))
{
  if(strcmp(p_SEL_VAL[1].link_tag,"") != 0 &&
     strcmp(p_SEL_VAL[1].link_tag," ") != 0)
  {
   EXEC SQL SELECT substr(replace(replace(pty_name,chr(13),NULL),chr(10),NULL),1,35)
		into :h_domestic_cpclr_name
            from MT_PARTY
            where pty_code = :p_SEL_VAL[1].link_tag;

   IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403 )
   {
        CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[0].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
	APL_GOBACK_FAIL
   }
   if(i_domestic_cpclr_name == -1)
           strcpy(h_domestic_cpclr_name,"");

   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"COUNTACCNM=",h_domestic_cpclr_name);
  }
  else
  {
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"COUNTACCNM=",APL_NULL_STRING);
  }
}


if(strcmp(p_SEL_VAL[1].link_val,"PARTIAL_IND")==0)
{
  if(strcmp(p_SEL_VAL[1].link_tag,"Y")==0)
  {
   exec sql select sum(AMOUNT) into :h_safekeep_pos:i_safekeep_pos from dl_deal
            where client = :p_SEL_VAL[3].link_tag and
                  IDENTIY_NO = :p_STAT_VAL[3].link_tag and
                  QTY != ORIG_QTY;

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
	h_safekeep_pos = 0;
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"AMOUNT=",h_safekeep_pos);
  }
  else
      fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"AMOUNT=",p_SEL_VAL[4].NUM_VAL);
}

  printf("p_SEL_VAL[2].link_val is %s\n",p_SEL_VAL[2].link_val);
  fflush(stdout);

  printf("p_SEL_VAL[2].link_tag is %s\n",p_SEL_VAL[2].link_tag);
  fflush(stdout);

if(strcmp(p_SEL_VAL[2].link_val,"CLN_MASTER")==0) 
{
  printf("here just checking inside  cln_master\n");
  fflush(stdout);


  EXEC SQL SELECT concat(concat(substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35),' '),substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),36,20)),
           substr(replace(replace(cln_name,chr(13),NULL),chr(10),NULL),1,35)
           into :h_clnt_clr_name,:chr_h_cname1
           from MT_CLIENT 
           where cln_code = :p_SEL_VAL[2].link_tag;
  printf("sqlca.sqlcode is %d\n",sqlca.sqlcode);
  fflush(stdout);

  printf("p_SEL_VAL[2].link_tag is |%s|\n",p_SEL_VAL[2].link_tag);
  fflush(stdout);


  IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403 )
   {
        CO_InsertErr(l_debug_info_ptr,ERR_ACCNOT_FND, p_SEL_VAL[2].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        APL_GOBACK_FAIL
   }
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"MNAME=",h_clnt_clr_name);
  if(strlen(chr_h_cname1)!=0 || strcmp(chr_h_cname1," ")!=0) 
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"MSTNAME=",chr_h_cname1);
  else
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"MSTNAME=",APL_NULL_STRING);
}
if(strcmp(p_SEL_VAL[3].link_val,"SPC40")==0)
{
  fprintf(p_Data_File,"%d%s",*p_rownum,"SPC40=");
  for(dbl_i=0;dbl_i<=40;dbl_i++)
     fprintf(p_Data_File,"%s"," ");
  fprintf(p_Data_File,"\n");
}
if(strcmp(p_SEL_VAL[6].link_val,"SPC49")==0)
{
  fprintf(p_Data_File,"%d%s",*p_rownum,"SPC49=");
  for(dbl_i=0;dbl_i<=49;dbl_i++)
     fprintf(p_Data_File,"%s"," ");
  fprintf(p_Data_File,"\n");
}
if(strcmp(p_SEL_VAL[5].link_val,"SPC22")==0)
{
  fprintf(p_Data_File,"%d%s",*p_rownum,"SPC22=");
  for(dbl_i=0;dbl_i<=22;dbl_i++)
     fprintf(p_Data_File,"%s"," ");
  fprintf(p_Data_File,"\n");
}

if ((strcmp(chr_p_msgno,"563N05")==0) && (strcmp(p_SEL_VAL[11].link_val,"AMOUNT")==0))
{
		memset(chr_l_563_moneydt,APL_NULL_CHAR,20);
		if (strcmp(p_SEL_VAL[14].link_tag," ")==0)
			memset(chr_l_563_moneydt,APL_NULL_CHAR,20);
		else
			strcpy(chr_l_563_moneydt,p_SEL_VAL[14].link_tag);
  exec sql select NVL(sum(AMOUNT),0)
            into :h_delamount
            from dl_deal int_a
            where int_a.client = :p_SEL_VAL[7].link_tag and
                  (int_a.deal_cd = 3 or int_a.deal_cd = 6 or int_a.deal_cd = 8)  and int_a.INSTRUMENT_DT <= :p_SEL_VAL[13].link_tag and int_a.MONEY_SETL_DT <= :chr_l_563_moneydt 
            group by client;
  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
	h_delamount = 0;

  exec sql select NVL(sum(AMOUNT),0)
            into :h_recamount
            from dl_deal int_a
            where int_a.client = :p_SEL_VAL[7].link_tag and
                  (int_a.deal_cd = 4 or int_a.deal_cd = 5 or int_a.deal_cd = 7) and int_a.INSTRUMENT_DT <= :p_SEL_VAL[13].link_tag and int_a.MONEY_SETL_DT <= :chr_l_563_moneydt 
            group by client;
  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
	h_recamount = 0;
  if(h_delamount == 0)
  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"TOTALDRAMT=0");
  else
  	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TOTALDRAMT=",h_delamount);
  if(h_recamount == 0)
  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"TOTALCRAMT=0");
  else
  	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TOTALCRAMT=",h_recamount);
  if(h_delamount - h_recamount != 0)
  {
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NETAMT=",fabs(h_delamount-h_recamount));
  if(h_delamount - h_recamount > 0)
  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"DBCR=C");
  else
  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"DBCR=D");
  }
  else
      fprintf(p_Data_File,"%d%s\n",*p_rownum,"NETAMT=0");
} 
if(strcmp(p_SEL_VAL[4].link_val,"DL_CLASS")==0)
{
  EXEC SQL SELECT map_desc into :chr_h_code_desc
           from PRO_SGENSTAT
           where map_type = 'TYPEOFTRD' and
                 map_val = :p_SEL_VAL[4].link_tag
                 and nation_code = :p_STAT_VAL[2].link_tag;
  IS_ANY_ORA_ERROR
  if(sqlca.sqlcode == 1403)
  {  
    EXEC SQL SELECT map_desc into :chr_h_code_desc
             from PRO_SGENSTAT
             where map_type = 'TYPEOFTRD' and
                   map_val = :p_SEL_VAL[4].link_tag
                   and nation_code = 'XX';
  IS_ANY_ORA_ERROR

  }

  if(sqlca.sqlcode == 1403)
	strcpy(chr_h_code_desc,APL_NULL_STRING);

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TRDDESC=",chr_h_code_desc);
  
}


if(strcmp(p_STAT_VAL[3].link_val,"OINSTR_CODE") == 0)
{
  if (strlen(p_STAT_VAL[3].link_tag) == 0)
  {
    fprintf(p_Data_File,"%d%s\n",*p_rownum,"OINSTR_CODE=");
    fprintf(p_Data_File,"%d%s\n",*p_rownum,"OFTYPEOFINSTR=");
    fprintf(p_Data_File,"%d%s\n",*p_rownum,"OFENT_POS=");
    fprintf(p_Data_File,"%d%s\n",*p_rownum,"OINSTR_NAME=");
    fprintf(p_Data_File,"%d%s\n",*p_rownum,"OISIN=");
    fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ORGCCYCODE=/",'/');
  }
  else
 {
  chr_l_qty_due = p_SEL_VAL[2].NUM_VAL;
  EXEC SQL SELECT int_b.INSTR_ISIN,substr(replace(replace(int_b.instr_name,chr(13),NULL),chr(10),NULL),1,35),
		  int_b.currency_cd,int_b.REG_BR_IND,
		  decode(int_b.INSTR_TYPE,'BON',decode(int_a.CLN_FMT_RPTIND,'Y','FMT',int_b.INSTR_TYPE),int_b.INSTR_TYPE) as FTYPEOFINSTR ,
                  decode(int_b.INSTR_TYPE,'BON',decode(int_a.CLN_FMT_RPTIND,'Y',to_char(:chr_l_qty_due*int_b.NOMINAL_VALUE),:chr_l_qty_due),:chr_l_qty_due) as FENT_POS
		  into :h_instr_isin:i_instr_isin,:h_instr_name,:h_currencycode,:h_regbrflag,
		       :h_typeofinstr,:h_qty
		  from MT_CLIENT int_a,MT_INSTRUMENT int_b
		  where int_a.cln_code = :p_SEL_VAL[1].link_tag and
			int_b.instr_code = :p_STAT_VAL[3].link_tag;

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
  {
      strcpy(h_instr_isin,APL_NULL_STRING);
      strcpy(h_instr_name,APL_NULL_STRING);
      strcpy(h_currencycode,APL_NULL_STRING);
      strcpy(h_regbrflag,APL_NULL_STRING);
      strcpy(h_typeofinstr,APL_NULL_STRING);
      strcpy(h_qty,APL_NULL_STRING);
        CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[3].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        APL_GOBACK_FAIL

  }

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OINSTR_CODE=",p_STAT_VAL[3].link_tag);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OFTYPEOFINSTR=",h_typeofinstr);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OFENT_POS=",h_qty);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OINSTR_NAME=",h_instr_name);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OISIN=",h_instr_isin);
  fprintf(p_Data_File,"%d%s%s%c%s\n",*p_rownum,"ORGCCYCODE=/",h_currencycode,'/',h_regbrflag);
 }
}

} 

		if (strcmp(chr_p_msgno,"538") == 0)
		{

			if(p_rec_no==1)
			{
           if((strcmp(p_STAT_VAL[5].link_val,"WEEKLY_STM") != 0) || (strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") != 0))
            {
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREPDATE=",chr_h_prepdate_new);
         	strcpy(chr_l_uniq_client,p_SEL_VAL[0].link_tag);
         	if (strlen(chr_l_uniq_client))
         	{
            	if(APL_FAILURE==MS_Rtv_SEME(chr_l_uniq_client,
																chr_p_msgno,
																chr_l_uniq_seme_refno,
																l_debug_info_ptr) )
            	{
               	APL_GOBACK_FAIL
            	}

	            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UNIQREFNO=",chr_l_uniq_seme_refno);
   	      }
         	EXEC SQL DELETE DL_MSGLINK
            	  WHERE CLIENT = :p_SEL_VAL[0].link_tag
              			  AND MSG_IN_OUT_IND= 'O'
              			  AND SWIFT_MSG_NO ='538';
         	IS_ANY_ORA_ERROR;
			 	memset(chr_l_addinfo_uniq_seme,APL_NULL_CHAR,31);	
       		EXEC SQL SELECT INFORMATION INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
         	         FROM DL_MSGLINK
            	      WHERE CLIENT = :chr_l_uniq_client
               	   AND IDENTIY_NO = :p_SEL_VAL[1].link_tag
                  	AND MSG_IN_OUT_IND= 'Z'
                  	AND SWIFT_MSG_NO ='508';

	         IS_ANY_ORA_ERROR;
   	      printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
		  fflush(stdout);

      	   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEME=",chr_l_addinfo_uniq_seme);

            memset(chr_l_input_dt,APL_NULL_CHAR,APL_DATE_LEN);
            EXEC SQL SELECT to_char(DATE_OF_INPUT,'YYYYMMDD') INTO :chr_l_input_dt:i_new_dt
                     FROM DL_MSGLINK
                     WHERE CLIENT = :chr_l_uniq_client
                     AND MSG_IN_OUT_IND= 'Z'
                     AND SWIFT_MSG_NO ='538';

            IS_ANY_ORA_ERROR;

            printf("l_input_dt is %s\n", chr_l_input_dt);
			fflush(stdout);

            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"LAST_DATE=",chr_l_input_dt);

					if(strlen(chr_l_input_dt)==0)
					{
						memset(&l_dl_msglink_struct_h,NULL,sizeof(DL_MSGLINK_STRUCT_H));
               	strcpy(l_progseqnum_struct_h->sequencename ,DEALMS_LINK_SEQ_NAME);
               	chr_l_seq_num=0;
               	chr_l_seq_num = CO_RtvNxtSeqNum(l_progseqnum_struct_h , l_debug_info_ptr);
               	if (APL_FAILURE == chr_l_seq_num)
               	{
                  	CO_ProcMonitor(APL_OUT_FILE,
                     	      "Failed To Get The Next Sequence Number For CMSGLINK\n",
                        	    NULL,NULL);
                  	APL_GOBACK_FAIL
               	}
               	strcpy(l_dl_msglink_struct_h.h_dl_client,chr_l_uniq_client);
               	strcpy(l_dl_msglink_struct_h.h_indentity_no,"");
               	strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"O");
               	strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"538");
               	if (APL_FAILURE == CO_RtvMachDtTime( l_dl_msglink_struct_h.h_new_dt,
                  	                                       l_debug_info_ptr ))
               	{
                  	APL_GOBACK_FAIL
               	}
               	strcpy(l_dl_msglink_struct_h.h_information,chr_l_uniq_seme_refno);
               	l_dl_msglink_struct_h.h_sequence_num=chr_l_seq_num;
               	if(APL_FAILURE==DL_Mod_DLLinkNew(&l_dl_msglink_struct_h,l_debug_info_ptr))
               	{
                  	CO_ProcMonitor(APL_OUT_FILE,
                     	      "Failed To Insert into CMSGLINK Table\n",
                        	   NULL,NULL);
                  	APL_GOBACK_FAIL
               	}
					}
               else
               {
                  if (APL_FAILURE == CO_RtvMachDtTime( chr_l_input_dt_new,
                                                            l_debug_info_ptr ))
                  {
                     APL_GOBACK_FAIL
                  }

                  EXEC SQL UPDATE DL_MSGLINK SET  DATE_OF_INPUT=:chr_l_input_dt_new
                        WHERE CLIENT = :chr_l_uniq_client
                        AND MSG_IN_OUT_IND= 'Z'
                        AND SWIFT_MSG_NO ='538';
                  IS_ANY_ORA_ERROR

               }
				}
			}
	
			if(p_rec_no==2)
			{
				printf("p_STAT_VAL[5].link_val is %s\n",p_STAT_VAL[5].link_val);
				fflush(stdout);

				printf("p_STAT_VAL[6].link_val is %s\n",p_STAT_VAL[6].link_val);
				fflush(stdout);

				printf("p_STAT_VAL[5].link_tag is %s\n",p_STAT_VAL[5].link_tag);
				fflush(stdout);

				printf("p_STAT_VAL[6].link_tag is %s\n",p_STAT_VAL[6].link_tag);
				fflush(stdout);

				if(strcmp(p_STAT_VAL[1].link_tag,"Y")==0)
				{
					memset(chr_l_h_sysdate,APL_NULL_CHAR,APL_DATE_LEN);
					EXEC SQL select to_char(SYS_DATE,'dd/mm/yyyy') into :chr_l_h_sysdate:l_i_sysdate from pro_sys_date ;
					IS_ANY_ORA_ERROR;

   				memset(chr_h_asofdate_new,APL_NULL_CHAR,9);

   				printf("\n called with recno=2 , p_stat_val 2 is :%s:",p_STAT_VAL[2].link_tag);
				fflush(stdout);

   				EXEC SQL SELECT to_char(to_date(:p_STAT_VAL[2].link_tag,'RRMMDD'),'YYYYMMDD')
                     INTO :chr_h_asofdate_new
                     FROM DUAL;

   				IS_ANY_ORA_ERROR

			      memset(chr_h_prepdate_new,APL_NULL_CHAR,17);
      			memset(chr_l_date_time_new,APL_NULL_CHAR,APL_DATE_LEN);
      			i_prepdate_new=0;

			      if(APL_FAILURE == CO_RtvSysDtTime(chr_l_date_time_new,l_debug_info_ptr))
         			APL_GOBACK_FAIL


 		     		 EXEC SQL SELECT to_char(to_date(:chr_l_date_time_new),'yyyymmddhh24miss')
      		   	INTO :chr_h_prepdate_new:i_prepdate_new
         			FROM DUAL;

	        		 IS_ANY_ORA_ERROR

            
				if((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") != 0) || ((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") == 0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") != 0))) 
            {
					if(strcmp(p_STAT_VAL[3].link_val,"PACCOUNT")!=0)
					{
						EXEC SQL DECLARE NO_LOCNCHG CURSOR FOR
								SELECT cln_code FROM MT_CLIENT 
								WHERE cln_code NOT IN 
													(SELECT DISTINCT(A.CLIENT) 
													 FROM DL_LOCNCHG A,MT_LOCATION B,MT_LOCATION C
													 WHERE LOC_CHNG_STAT IN ('AA','II')
													 AND to_char(A.access_stamp,'dd/mm/yyyy')=:chr_l_h_sysdate:l_i_sysdate 
												AND A.FRM_LOC = B.LOCATION_CD(+) 
												AND A.TO_LOCATION = C.LOCATION_CD
												AND B.ISO_LOCNCD <> C.ISO_LOCNCD)
								AND STATUS!='CA'
								and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
                  							WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.cln_code
                            				OR MT_MSGADDRESS.cln_code = MT_CLIENT.cln_master)
                   							AND      MT_MSGADDRESS.MSG_IDENT_NO    = '37');



							
						IS_ANY_ORA_ERROR;
					}
					else
					{
						EXEC SQL DECLARE NO_LOCNCHG_ACC CURSOR FOR
								SELECT cln_code FROM MT_CLIENT 
								WHERE cln_code = :p_STAT_VAL[3].link_tag
								AND cln_code NOT IN 
													(SELECT DISTINCT(A.CLIENT) 
													 FROM DL_LOCNCHG  A, MT_LOCATION B , MT_LOCATION C
													 WHERE LOC_CHNG_STAT IN ('AA','II')
													 AND to_char(A.access_stamp,'dd/mm/yyyy')=:chr_l_h_sysdate:l_i_sysdate 
                                    AND A.FRM_LOC = B.LOCATION_CD(+)
                                    AND A.TO_LOCATION = C.LOCATION_CD
                                    AND B.ISO_LOCNCD <> C.ISO_LOCNCD)
								AND STATUS!='CA'
								and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
                  							WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.cln_code
                            				OR MT_MSGADDRESS.cln_code = MT_CLIENT.cln_master)
                   							AND      MT_MSGADDRESS.MSG_IDENT_NO    = '37');



								
						IS_ANY_ORA_ERROR;
					}
				}
				else if((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") == 0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") == 0))
				{
					printf("I LOCNCHG1 LOOP\n");
            	EXEC SQL SELECT
               	      to_char(to_date(:p_STAT_VAL[7].link_tag,'RRMMDD'),'DD/MM/YYYY')
                  	   into  :chr_l_temp_date from dual;
            	IS_ANY_ORA_ERROR
					printf("LOCCHG1 chr_l_temp_date id %s\n",chr_l_temp_date);


               if(strcmp(p_STAT_VAL[3].link_val,"PACCOUNT")!=0)
               {
                  EXEC SQL DECLARE NO_LOCNCHG1 CURSOR FOR
                        SELECT cln_code FROM MT_CLIENT
                        WHERE cln_code NOT IN
                                       (SELECT DISTINCT(A.CLIENT)
                                        FROM DL_LOCNCHG A,MT_LOCATION B,MT_LOCATION C
                                        WHERE LOC_CHNG_STAT IN ('AA','II')
                                        AND to_char(A.access_stamp,'dd/mm/yyyy')>:chr_l_temp_date
                                    AND A.FRM_LOC = B.LOCATION_CD(+)
                                    AND A.TO_LOCATION = C.LOCATION_CD
                                    AND B.ISO_LOCNCD <> C.ISO_LOCNCD)
                        AND STATUS!='CA'
                        and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
                                       WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.cln_code
                                       OR MT_MSGADDRESS.cln_code = MT_CLIENT.cln_master)
                                       AND      MT_MSGADDRESS.MSG_IDENT_NO    = '37');



                  IS_ANY_ORA_ERROR;
               }
               else
               {
                  EXEC SQL DECLARE NO_LOCNCHG_ACC1 CURSOR FOR
                        SELECT cln_code FROM MT_CLIENT
                        WHERE cln_code = :p_STAT_VAL[3].link_tag
                        AND cln_code NOT IN
                                       (SELECT DISTINCT(A.CLIENT)
                                        FROM DL_LOCNCHG  A, MT_LOCATION B , MT_LOCATION C
                                        WHERE LOC_CHNG_STAT IN ('AA','II')
                                        AND to_char(A.access_stamp,'dd/mm/yyyy')>:chr_l_temp_date
                                    AND A.FRM_LOC = B.LOCATION_CD(+)
                                    AND A.TO_LOCATION = C.LOCATION_CD
                                    AND B.ISO_LOCNCD <> C.ISO_LOCNCD)
                        AND STATUS!='CA'
                        and EXISTS (   SELECT 1 FROM MT_MSGADDRESS
                                       WHERE    (MT_MSGADDRESS.cln_code = MT_CLIENT.cln_code
                                       OR MT_MSGADDRESS.cln_code = MT_CLIENT.cln_MASTER)
                                       AND      MT_MSGADDRESS.MSG_IDENT_NO    = '37');



                  IS_ANY_ORA_ERROR;
               }

				}

				
				if((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") != 0) || ((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") == 0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") != 0)))
				{
					if(strcmp(p_STAT_VAL[3].link_val,"PACCOUNT")!=0)
					{
						EXEC SQL OPEN NO_LOCNCHG;
					}
					else
					{
						EXEC SQL OPEN NO_LOCNCHG_ACC;
					}
				}
				else if(((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") == 0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") == 0)))
				{
               if(strcmp(p_STAT_VAL[3].link_val,"PACCOUNT")!=0)
               {
                  EXEC SQL OPEN NO_LOCNCHG1;
               }
               else
               {
                  EXEC SQL OPEN NO_LOCNCHG_ACC1;
               }
				}				
					IS_ANY_ORA_ERROR;

					for(;;)
					{
						if ((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") != 0) || ((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") ==0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") != 0)))
            		{
							if(strcmp(p_STAT_VAL[3].link_val,"PACCOUNT")!=0)	
							{
								EXEC SQL FETCH NO_LOCNCHG INTO :h_dl_client;
							}
							else
							{
								EXEC SQL FETCH NO_LOCNCHG_ACC INTO :h_dl_client;
							}
						}
						else if((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") == 0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") == 0))
            		{
	                  if(strcmp(p_STAT_VAL[3].link_val,"PACCOUNT")!=0)
                     {
                        EXEC SQL FETCH NO_LOCNCHG1 INTO :h_dl_client;
                     }
                     else
                     {
                        EXEC SQL FETCH NO_LOCNCHG_ACC1 INTO :h_dl_client;
                     }	
						}
						if(sqlca.sqlcode==1403)
							break;
						int_fetch_cnt++;
				
       			 	fprintf(p_Data_File,"%d%s\n",*p_rownum+1,"EOF=F");
	
			        	fprintf(p_Data_File,"%d%s%s\n",++*p_rownum,"ACCOUNT=",h_dl_client);
      			  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NACCOUNT=/",h_dl_client);
						fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"LOCCHG=","N");	
         			if (!strcmp(p_STAT_VAL[3].link_val,"CONTACTSEQ"))
            			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRSEQ_NUM=",p_STAT_VAL[3].link_tag);
         			else if (!strcmp(p_STAT_VAL[4].link_val,"CONTACTSEQ"))
            			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRSEQ_NUM=",p_STAT_VAL[4].link_tag);
        				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PROC_INIT=",p_STAT_VAL[0].link_tag);
						fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREPDATE=",chr_h_prepdate_new);
						fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ASOFDATE=",chr_h_asofdate_new);
         			if(strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") == 0)
            			fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,p_STAT_VAL[6].link_val,"=",p_STAT_VAL[6].link_tag);
         			else if(strcmp(p_STAT_VAL[5].link_val,"WEEKLY_STM") == 0)
            			fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,p_STAT_VAL[5].link_val,"=",p_STAT_VAL[5].link_tag);
         			if(strcmp(p_STAT_VAL[7].link_val,"LAST_GEN_DATE") == 0)
            			fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,p_STAT_VAL[7].link_val,"=",p_STAT_VAL[7].link_tag);
         			else if(strcmp(p_STAT_VAL[6].link_val,"LAST_GEN_DATE") == 0)
            			fprintf(p_Data_File,"%d%s%s%s\n",*p_rownum,p_STAT_VAL[6].link_val,"=",p_STAT_VAL[6].link_tag);

	         	strcpy(chr_l_uniq_client,h_dl_client);
   	      	if (strlen(chr_l_uniq_client))
      	   	{
         	   	if(APL_FAILURE==MS_Rtv_SEME(chr_l_uniq_client,
																	chr_p_msgno,
																	chr_l_uniq_seme_refno,
																	l_debug_info_ptr) )
            		{	
               		APL_GOBACK_FAIL
            		}	
            		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UNIQREFNO=",chr_l_uniq_seme_refno);
         		}	
				if((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") != 0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") ==0))
				{
         	EXEC SQL DELETE DL_MSGLINK
            	  WHERE CLIENT = :h_dl_client
              			  AND MSG_IN_OUT_IND= 'O'
              			  AND SWIFT_MSG_NO ='538';
         	IS_ANY_ORA_ERROR;
            	memset(chr_l_input_dt,APL_NULL_CHAR,APL_DATE_LEN);
            	EXEC SQL SELECT to_char(DATE_OF_INPUT,'YYYYMMDD') INTO :chr_l_input_dt:i_new_dt
               	      FROM DL_MSGLINK
                  	   WHERE CLIENT = :chr_l_uniq_client
                     	AND MSG_IN_OUT_IND= 'Z'
                     	AND SWIFT_MSG_NO ='538';

 	           IS_ANY_ORA_ERROR;
   	         printf("input_dt is %s\n", chr_l_input_dt);
			 fflush(stdout);

      	      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"LAST_DATE=",chr_l_input_dt);

					if(strlen(chr_l_input_dt)==0)
					{
               	memset(&l_dl_msglink_struct_h,NULL,sizeof(DL_MSGLINK_STRUCT_H));
               	strcpy(l_progseqnum_struct_h->sequencename ,DEALMS_LINK_SEQ_NAME);
               	chr_l_seq_num=0;
               	chr_l_seq_num = CO_RtvNxtSeqNum(l_progseqnum_struct_h , l_debug_info_ptr);
               	if (APL_FAILURE == chr_l_seq_num)
               	{
                  	CO_ProcMonitor(APL_OUT_FILE,
                     	      "Failed To Get The Next Sequence Number For CMSGLINK\n",
                        	    NULL,NULL);
                  	APL_GOBACK_FAIL
               	}
               	strcpy(l_dl_msglink_struct_h.h_dl_client,chr_l_uniq_client);
               	strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"O");
               	strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"538");
               	if (APL_FAILURE == CO_RtvMachDtTime( l_dl_msglink_struct_h.h_new_dt,
                  	                                       l_debug_info_ptr ))
               	{	
                  	APL_GOBACK_FAIL
               	}
               	strcpy(l_dl_msglink_struct_h.h_information,chr_l_uniq_seme_refno);
               	l_dl_msglink_struct_h.h_sequence_num=chr_l_seq_num;
               	if(APL_FAILURE==DL_Mod_DLLinkNew(&l_dl_msglink_struct_h,l_debug_info_ptr))
               	{
                  	CO_ProcMonitor(APL_OUT_FILE,
                    	       "Failed To Insert into CMSGLINK Table\n",
                     	      NULL,NULL);
                  	APL_GOBACK_FAIL
               	}
					}
					else
					{
                  if (APL_FAILURE == CO_RtvMachDtTime( chr_l_input_dt_new,
                                                            l_debug_info_ptr ))
                  {
                     APL_GOBACK_FAIL
                  }

						EXEC SQL UPDATE DL_MSGLINK SET  DATE_OF_INPUT=:chr_l_input_dt_new
                        WHERE CLIENT = :chr_l_uniq_client
                        AND MSG_IN_OUT_IND= 'Z'
                        AND SWIFT_MSG_NO ='538';
						IS_ANY_ORA_ERROR
				
					}
				 }
		 		}
				if ((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") != 0) || ((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") ==0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") != 0)))
				{
       			if(strcmp((p_STAT_VAL)[3].link_val,"PACCOUNT")!=0)
       			{
         			EXEC SQL CLOSE NO_LOCNCHG;
       			}
       			else
       			{
        	 			EXEC SQL CLOSE NO_LOCNCHG_ACC;
       			}
				}
				else if((strcmp(p_STAT_VAL[6].link_val,"WEEKLY_STM") == 0) && (strcmp(p_STAT_VAL[6].link_tag,"Y") ==0))
				{
       			if(strcmp((p_STAT_VAL)[3].link_val,"PACCOUNT")!=0)
       			{
         			EXEC SQL CLOSE NO_LOCNCHG1;
       			}
       			else
       			{
        	 			EXEC SQL CLOSE NO_LOCNCHG_ACC1;
       			}
				}
       			IS_ANY_ORA_ERROR;
			}
		}
	}


printf("came here 3!!!! -- Biju\n");
fflush(stdout);


if(p_rec_no == 3 ||
   p_rec_no == 1)
{ 
   /**************VaibhavK 18March2008   ISKB:998**************************/
   printf("\n *****Message Number is [%s].",chr_p_msgno);
   fflush(stdout);

   printf("\n Corp Id is [%s]",p_SEL_VAL[10].link_tag);
   fflush(stdout);

   printf("\n Client Code is [%s]",p_SEL_VAL[9].link_tag);
   fflush(stdout);


    if(strcmp(chr_p_msgno,"566N09") == 0)
    { 
        EXEC SQL SELECT ELIG_ENTITL_POS INTO: dbl_h_ent_pos
        FROM CAENTITLEMENT
        WHERE CORP_ID||CLIENT IN
        (SELECT DISTINCT CORP_ID||CLN_CODE FROM CA_APPLICATION 
         WHERE CORP_ID =  :p_SEL_VAL[10].link_tag 
         AND   CLN_CODE = :p_SEL_VAL[9].link_tag);

        IS_ANY_ORA_ERROR;

        printf("\n **18Mar2008** Ent_Pos [%lf] :>",dbl_h_ent_pos);
		fflush(stdout);


       fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"ENT_POS=",dbl_h_ent_pos);

    }
   /**************VaibhavK 18March2008**************************/

  printf("here just checking before res_instr_code\n");
  fflush(stdout);

if( strcmp(p_SEL_VAL[0].link_val,"RES_INSTR_CODE") == 0)
{
 if(strcmp(p_SEL_VAL[0].link_tag," ")!=0 &&
   strcmp(p_SEL_VAL[0].link_tag,APL_NULL_STRING) !=0)
 {
   memset(h_currencycode,APL_NULL_CHAR,APL_CCYCODE_LEN);
	
   memset(h_instr_isin,APL_NULL_CHAR,13);
   memset(h_instr_name,APL_NULL_CHAR,131);
   memset(chr_h_tinstrdesc,APL_NULL_CHAR,131);
   memset(h_typeofinstr,APL_NULL_CHAR,4);
   memset(h_regbrflag,APL_NULL_CHAR,3);
   memset(chr_h_rp_isin,APL_NULL_CHAR,13); 
   memset(chr_h_pinstrcode,APL_NULL_CHAR,9);  
   memset(chr_h_rp_instrdesc,APL_NULL_CHAR,131); 

	printf("\nSearching for record form mt_instrument for |%s|\n",p_SEL_VAL[0].link_tag);
	fflush(stdout);


   EXEC SQL SELECT instr_isin,substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35),substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,60),
                   currency_cd,INSTR_TYPE,REG_BR_IND,NOMINAL_VALUE,INSTR_PARENT
            INTO :h_instr_isin:i_instr_isin,:h_instr_name,:chr_h_tinstrdesc,:h_currencycode,:h_typeofinstr,
                 :h_regbrflag,:h_nominal_value,:chr_h_pinstrcode:i_pinstr_code
            FROM MT_INSTRUMENT 
            WHERE INSTR_CODE = :p_SEL_VAL[0].link_tag;

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403 )
  {
           CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[1].link_tag,
                                                  APL_NULL_STRING,
 			  APL_NULL_STRING, __LINE__, __FILE__);
           APL_GOBACK_FAIL;
  }
    

 /* Vaibhav EXER Changes  I-SOlveID: 316 KOTAK-UAT  22 May******/ 
  printf("\n ***** Message number ======([%s])=========",chr_p_msgno);
 fflush(stdout);

  if((strcmp(chr_p_msgno,"551N01") == 0) || (strcmp(chr_p_msgno,"551R01") == 0) || (strcmp(chr_p_msgno,"562N01") == 0))
  {
      if(i_pinstr_code != -1)
      {
          	EXEC SQL SELECT instr_isin,substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35),nominal_value
                    INTO :chr_h_rp_isin:i_rp_isin,:chr_h_rp_instrdesc,:h_rp_nomval
                    FROM MT_INSTRUMENT
                    WHERE INSTR_CODE = :chr_h_pinstrcode;
	Alert("sqlca.sqlcode is |%d|\n",sqlca.sqlcode);

           IS_ANY_ORA_ERROR

           if(sqlca.sqlcode == 1403 )
           {
                    CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[1].link_tag,
                                                  APL_NULL_STRING,
                    APL_NULL_STRING, __LINE__, __FILE__);
                    APL_GOBACK_FAIL;
           }

           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPISIN=",chr_h_rp_isin);
           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPINSTR_NAME=",chr_h_rp_instrdesc);
           fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RPNOMVAL=",h_rp_nomval);
           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPINSTR_CODE=",chr_h_pinstrcode);
      }
      else
      {
           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPISIN=",h_instr_isin);
           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPINSTR_NAME=",h_instr_name);
           fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RPNOMVAL=",h_nominal_value);
/* ISKB 985 Chirag 13032008 */
	   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPINSTR_CODE=",p_SEL_VAL[0].link_tag);
/* ISKB 985 Chirag 13032008 */
		//Alert("p_Data_File is |%s|",p_Data_File);
      }

  }
Alert("After If\n");

  


  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RES_INSTR_CODE=",p_SEL_VAL[0].link_tag);
  fprintf(p_Data_File,"%d%s%s%c%s\n",*p_rownum,"RCCYCODE=/",h_currencycode,'/',h_regbrflag);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RTYPEOFINSTR=",h_typeofinstr);
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RESNOMVAL=",h_nominal_value);
	
  if((strcmp(chr_p_msgno,"563N03") == 0) || (strcmp(chr_p_msgno,"566R03")==0) || (strcmp(chr_p_msgno,"555R01") == 0) || (strncmp(chr_p_msgno,"552",3) == 0))
	{
		sqlca.sqlcode=0;
  		printf("ACCOUNT selval7 is :%s:\n",p_SEL_VAL[7].link_tag);
		fflush(stdout);

  		printf("INSTR_CODE selval4 is :%s:\n",p_SEL_VAL[4].link_tag);
		fflush(stdout);

		
		if ((strcmp(chr_p_msgno,"563N03") == 0) || (strcmp(chr_p_msgno,"566R03")==0) )
		{
			EXEC SQL SELECT
			decode(int_b.INSTR_TYPE,'BON',decode(int_a.CLN_FMT_RPTIND,'Y','FMT',int_b.INSTR_TYPE),int_b.INSTR_TYPE) 
			into :chr_h_rtypeofinstr
			from MT_CLIENT int_a,MT_INSTRUMENT int_b
			where int_a.cln_code = :p_SEL_VAL[7].link_tag and
			int_b.instr_code = :p_SEL_VAL[0].link_tag;

			IS_ANY_ORA_ERROR
		}
		if (strcmp(chr_p_msgno,"555R01") == 0)
		{
			EXEC SQL SELECT
			decode(int_b.INSTR_TYPE,'BON',decode(int_a.CLN_FMT_RPTIND,'Y','FMT',int_b.INSTR_TYPE),int_b.INSTR_TYPE) 
			into :chr_h_rtypeofinstr
			from MT_CLIENT int_a,MT_INSTRUMENT int_b
			where int_a.cln_code = :p_SEL_VAL[9].link_tag and
			int_b.instr_code = :p_SEL_VAL[0].link_tag;

			IS_ANY_ORA_ERROR
		}
		if (strncmp(chr_p_msgno,"552",3) == 0)
		{
			EXEC SQL SELECT
			decode(int_b.INSTR_TYPE,'BON',decode(int_a.CLN_FMT_RPTIND,'Y','FMT',int_b.INSTR_TYPE),int_b.INSTR_TYPE) 
			into :chr_h_rtypeofinstr
			from MT_CLIENT int_a,MT_INSTRUMENT int_b
			where int_a.cln_code = :p_SEL_VAL[2].link_tag and
			int_b.instr_code = :p_SEL_VAL[0].link_tag;

			IS_ANY_ORA_ERROR
		}
  		printf("sqlca.sqlcode is :%d:\n",sqlca.sqlcode);
		fflush(stdout);

		
		if(sqlca.sqlcode == 1403)
		{
				CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[0].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
				APL_GOBACK_FAIL
		}
  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FRTYPEOFINSTR=",chr_h_rtypeofinstr);
	}
	

  if(strcmp(p_SEL_VAL[13].link_val,"QUANTITY_BAL")==0) 
  {
    	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"QTY_DUE=",p_SEL_VAL[13].NUM_VAL);
    	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"FQTY_DUE=",p_SEL_VAL[13].NUM_VAL*h_nominal_value);
  }
  if((strcmp(p_SEL_VAL[13].link_val,"QUANTITY_RECEIVED")==0) || ((strcmp(chr_p_msgno,"555R01")==0) && (strcmp(p_SEL_VAL[15].link_val,"QUANTITY_RECEIVED")==0)))
  {
    if(l_cond_ca_7dec!=0)
    {
      memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
      sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
		if(strcmp(chr_p_msgno,"555R01")==0)
		{
      	fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"RUQTY_RECD=",p_SEL_VAL[15].NUM_VAL);
      	fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"FQTY_RECD=",p_SEL_VAL[15].NUM_VAL*h_nominal_value);
		}
		else
		{
      	fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"RUQTY_RECD=",p_SEL_VAL[13].NUM_VAL);
      	fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"FQTY_RECD=",p_SEL_VAL[13].NUM_VAL*h_nominal_value);
		}
    }
    else
    {
    	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"QTY_RECD=",p_SEL_VAL[13].NUM_VAL);
    	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"FQTY_RECD=",p_SEL_VAL[13].NUM_VAL*h_nominal_value);
	 }
  }
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RISIN=",h_instr_isin);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RESINSTR_NAME=",h_instr_name);
  fprintf(p_Data_File,"%d%s",*p_rownum,"RESSECFLG=");
  if(strncmp(chr_p_msgno,"552",3) == 0 ||
     strncmp(chr_p_msgno,"562",3) == 0)
  	fprintf(p_Data_File,"%c\n",'Y');
  else if(strcmp(p_SEL_VAL[0].link_tag,p_SEL_VAL[4].link_tag) == 0)
  	fprintf(p_Data_File,"%c\n",'N');
  else
  	fprintf(p_Data_File,"%c\n",'Y');

 }
 else
 {
  fprintf(p_Data_File,"%d%s\n",*p_rownum,"RESSECFLG=N");
 } 
Alert("Gouse :: At 8365 \n");
}


 if((!strcmp(chr_p_msgno,"563N05")) || (!strcmp(chr_p_msgno,"563N04")))
 {
   if (!strcmp(chr_p_msgno,"563N05"))
   {
     printf("corprefno is %s\n",p_STAT_VAL[5].link_tag);
	 fflush(stdout);


      if(strcmp(p_STAT_VAL[5].link_tag,"NONREF")!=0)
      {
         strcpy(chr_l_eventid_563,p_STAT_VAL[5].link_tag);
         int_l_instrcode_len = strlen(chr_l_eventid_563) - 8;
         strncpy(chr_l_instrcode_563,chr_l_eventid_563,int_l_instrcode_len);
         strncpy(chr_l_decl_julian_dt,chr_l_eventid_563+(int_l_instrcode_len + 2),3);
         strncpy(chr_l_decl_year,chr_l_eventid_563+int_l_instrcode_len,2);
         strncpy(chr_l_event_no_563,chr_l_eventid_563+(int_l_instrcode_len + 5),2);

         EXEC SQL  SELECT CA_EVENT,corp_id,INFO_SEQ
                   INTO :chr_l_ce_typ_563:i_ce_typ_563,
                        :chr_l_caid_563:i_caid_563,
                        :chr_l_note_nbr_563:i_note_nbr_563
                FROM CAEVENT WHERE
                            INSTR_CODE =:chr_l_instrcode_563 AND
                            TO_CHAR(DECLARE_DT,'DDD') =:chr_l_decl_julian_dt AND
                            TO_CHAR(DECLARE_DT,'YY') =:chr_l_decl_year AND
                            CA_EVENT='RT' AND
                            EVNT_INDNT = to_number(:chr_l_event_no_563);
               IS_ANY_ORA_ERROR
         strcpy(p_SEL_VAL[6].link_tag,chr_l_note_nbr_563);
         printf("l_note_nbr_563 is %s\n",chr_l_note_nbr_563);
		 fflush(stdout);

         printf("p_SEL_VAL[6].link_tag is %s\n",p_SEL_VAL[6].link_tag);
		 fflush(stdout);

		}
      else
      {
         strcpy(chr_l_note_nbr_563,APL_NULL_STRING);
      }
   }
	
   if (!strcmp(chr_p_msgno,"563N04"))
   {
     printf("corprefno is %s\n",p_STAT_VAL[6].link_tag);
	 fflush(stdout);


      if(strcmp(p_STAT_VAL[6].link_tag,"NONREF")!=0)
      {
         strcpy(chr_l_eventid_563,p_STAT_VAL[6].link_tag);
         int_l_instrcode_len = strlen(chr_l_eventid_563) - 8;
         strncpy(chr_l_instrcode_563,chr_l_eventid_563,int_l_instrcode_len);
         strncpy(chr_l_decl_julian_dt,chr_l_eventid_563+(int_l_instrcode_len + 2),3);
         strncpy(chr_l_decl_year,chr_l_eventid_563+int_l_instrcode_len,2);
         strncpy(chr_l_event_no_563,chr_l_eventid_563+(int_l_instrcode_len + 5),2);

         EXEC SQL  SELECT CA_EVENT,corp_id,INFO_SEQ
                   INTO :chr_l_ce_typ_563:i_ce_typ_563,
                        :chr_l_caid_563:i_caid_563,
                        :chr_l_note_nbr_563:i_note_nbr_563
                FROM CAEVENT WHERE
                            INSTR_CODE =:chr_l_instrcode_563 AND
                            TO_CHAR(DECLARE_DT,'DDD') =:chr_l_decl_julian_dt AND
                            TO_CHAR(DECLARE_DT,'YY') =:chr_l_decl_year AND
                            CA_EVENT='RT' AND
                            EVNT_INDNT = to_number(:chr_l_event_no_563);
               IS_ANY_ORA_ERROR
         strcpy(p_SEL_VAL[6].link_tag,chr_l_note_nbr_563);
         printf("l_note_nbr_563 is %s\n",chr_l_note_nbr_563);
		 fflush(stdout);

         printf("p_SEL_VAL[6].link_tag is %s\n",p_SEL_VAL[6].link_tag);
		 fflush(stdout);

		}
      else
      {
         strcpy(chr_l_note_nbr_563,APL_NULL_STRING);
      }
   }
         if (strlen(chr_l_caid_563) !=0)
         {
            if(APL_FAILURE == CA_Proc_FtNtData(chr_l_caid_563,
                                             chr_p_msgno,
                                             p_Data_File,
                                             p_rownum,
                                             l_debug_info_ptr))
               APL_GOBACK_FAIL
         }
 }




if ((strcmp(chr_p_msgno,"554N01") == 0) || (strcmp(chr_p_msgno,"554R01") == 0) || (strcmp(chr_p_msgno,"555N01") == 0) || (strcmp(chr_p_msgno,"555R01") == 0) || (strcmp(chr_p_msgno,"556N02") == 0) || (strcmp(chr_p_msgno,"556R02") == 0) || (strcmp(chr_p_msgno,"563N01") == 0) || (strcmp(chr_p_msgno,"563N02") == 0) || (strcmp(chr_p_msgno,"563N03") == 0) || (strcmp(chr_p_msgno,"566R03") == 0) || (strcmp(chr_p_msgno,"563N04") == 0) || (strcmp(chr_p_msgno,"563N05") == 0))
{
	l_pay_note_ind = 0;
}
else
{
	l_pay_note_ind = 1;
}

	
if( !(strcmp(p_SEL_VAL[6].link_val,"INFO_SEQ"))  || 
    !(strcmp(p_SEL_VAL[6].link_val,"ENTITL_INFONO") ))
{
	
	
		if(strcmp(p_SEL_VAL[6].link_tag," ") != 0 &&
				strcmp(p_SEL_VAL[6].link_tag,"") != 0)
   {
   exec sql select decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1,35)),
		   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),36,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),71,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),106,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),141,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),176,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),36,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),71,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),106,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),141,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),176,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),211,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),246,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),281,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),316,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),351,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),386,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),421,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),456,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),491,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),526,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),561,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),596,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),631,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),666,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),701,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),736,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),771,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),806,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),841,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),876,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),911,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),946,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),981,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1016,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1016,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1051,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1086,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1121,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1156,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1191,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1226,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1261,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1296,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1331,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1366,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1401,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1436,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1471,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1506,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1541,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1576,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1611,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1646,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1681,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1716,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),1,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),36,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),71,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),106,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),141,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),176,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),211,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),246,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),281,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),316,35))
            into :h_info1:i_info1,
            	 :chr_h_note2:i_note2,
            	 :chr_h_note3:i_note3,
            	 :chr_h_note4:i_note4,
            	 :chr_h_note5:i_note5,
            	 :chr_h_note6:i_note6,
                 :chr_h_note1_new:i_note1_new,
                 :chr_h_note2_new:i_note2_new,
                 :chr_h_note3_new:i_note3_new,
                 :chr_h_note4_new:i_note4_new,
                 :chr_h_note5_new:i_note5_new,
                 :chr_h_note6_new:i_note6_new,
                 :chr_h_note7_new:i_note7_new,
                 :chr_h_note8_new:i_note8_new,
                 :h_note9_new:i_note9_new,
                 :h_note10_new:i_note10_new,
                 :chr_h_note11_new:i_note11_new,
                 :chr_h_note12_new:i_note12_new,
                 :chr_h_note13_new:i_note13_new,
                 :chr_h_note14_new:i_note14_new,
                 :chr_h_note15_new:i_note15_new,
                 :chr_h_note16_new:i_note16_new,
                 :chr_h_note17_new:i_note17_new,
                 :chr_h_note18_new:i_note18_new,
                 :h_note19_new:i_note19_new,
                 :h_note20_new:i_note20_new,
                 :chr_h_note21_new:i_note21_new,
                 :chr_h_note22_new:i_note22_new,
                 :chr_h_note23_new:i_note23_new,
                 :chr_h_note24_new:i_note24_new,
                 :chr_h_note25_new:i_note25_new,
                 :chr_h_note26_new:i_note26_new,
                 :chr_h_note27_new:i_note27_new,
                 :chr_h_note28_new:i_note28_new,
                 :h_note29_new:i_note29_new,
                 :h_note30_new:i_note30_new,
                 :h_note30_new:i_note30_new,
                 :chr_h_note31_new:i_note31_new,
                 :chr_h_note32_new:i_note32_new,
                 :chr_h_note33_new:i_note33_new,
                 :chr_h_note34_new:i_note34_new,
                 :chr_h_note35_new:i_note35_new,
                 :chr_h_note36_new:i_note36_new,
                 :chr_h_note37_new:i_note37_new,
                 :chr_h_note38_new:i_note38_new,
                 :h_note39_new:i_note39_new,
                 :h_note40_new:i_note40_new,
                 :chr_h_note41_new:i_note41_new,
                 :chr_h_note42_new:i_note42_new,
                 :chr_h_note43_new:i_note43_new,
                 :chr_h_note44_new:i_note44_new,
                 :chr_h_note45_new:i_note45_new,
                 :chr_h_note46_new:i_note46_new,
                 :chr_h_note47_new:i_note47_new,
                 :chr_h_note48_new:i_note48_new,
                 :h_note49_new:i_note49_new,
                 :h_note50_new:i_note50_new,
                 :chr_h_note51_new:i_note51_new,
                 :chr_h_note52_new:i_note52_new,
                 :chr_h_note53_new:i_note53_new,
                 :chr_h_note54_new:i_note54_new,
                 :chr_h_note55_new:i_note55_new,
                 :chr_h_note56_new:i_note56_new,
                 :chr_h_note57_new:i_note57_new,
                 :chr_h_note58_new:i_note58_new,
                 :h_note59_new:i_note59_new,
                 :h_note60_new:i_note60_new
            from CANOTE
            where INFO_SEQ = :p_SEL_VAL[6].link_tag;

  IS_ANY_ORA_ERROR

  
if (sqlca.sqlcode == 1403)
{
		int_nlen = 1;
		while(int_nlen <= 60)
		{
		 if(int_nlen <= 6)
		 {
		  	fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"INFO",int_nlen,'=',APL_NULL_STRING);
		 }
		  fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"NEW_NOTE",int_nlen,'=',APL_NULL_STRING);
		  int_nlen++;
		}
		  int_nlen = 0;
}
else
{
  if(i_info1 != -1)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",h_info1);
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",APL_NULL_STRING);
  if(i_note2 != -1)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE2=",chr_h_note2);
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE2=",APL_NULL_STRING);
  if(i_note3 != -1)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE3=",chr_h_note3);
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE3=",APL_NULL_STRING);
  if(i_note4 != -1)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE4=",chr_h_note4);
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE4=",APL_NULL_STRING);
  if(i_note5 != -1)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE5=",chr_h_note5);
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE5=",APL_NULL_STRING);
  if(i_note6 != -1)
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE6=",chr_h_note6);
  else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE6=",APL_NULL_STRING);
  
  if (l_pay_note_ind == 1)
  {
  if(i_note1_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE1=",chr_h_note1_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE1=",APL_NULL_STRING);
  if(i_note2_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE2=",chr_h_note2_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE2=",APL_NULL_STRING);
  if(i_note3_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE3=",chr_h_note3_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE3=",APL_NULL_STRING);
  if(i_note4_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE4=",chr_h_note4_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE4=",APL_NULL_STRING);
  if(i_note5_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE5=",chr_h_note5_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE5=",APL_NULL_STRING);
  if(i_note6_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE6=",chr_h_note6_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE6=",APL_NULL_STRING);
  if(i_note7_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE7=",chr_h_note7_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE7=",APL_NULL_STRING);
  if(i_note8_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE8=",chr_h_note8_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE8=",APL_NULL_STRING);
  if(i_note9_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE9=",h_note9_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE9=",APL_NULL_STRING);
  if(i_note10_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE10=",h_note10_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE10=",APL_NULL_STRING);
  
   if(i_note11_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE11=",chr_h_note11_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE11=",APL_NULL_STRING);
  if(i_note12_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE12=",chr_h_note12_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE12=",APL_NULL_STRING);
  if(i_note13_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE13=",chr_h_note13_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE13=",APL_NULL_STRING);
  if(i_note14_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE14=",chr_h_note14_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE14=",APL_NULL_STRING);
  if(i_note15_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE15=",chr_h_note15_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE15=",APL_NULL_STRING);
  if(i_note16_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE16=",chr_h_note16_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE16=",APL_NULL_STRING);
  if(i_note17_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE17=",chr_h_note17_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE17=",APL_NULL_STRING);
  if(i_note18_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE18=",chr_h_note18_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE18=",APL_NULL_STRING);
  if(i_note19_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE19=",h_note19_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE19=",APL_NULL_STRING);
  if(i_note20_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE20=",h_note20_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE20=",APL_NULL_STRING);
   if(i_note21_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE21=",chr_h_note21_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE21=",APL_NULL_STRING);
  if(i_note22_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE22=",chr_h_note22_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE22=",APL_NULL_STRING);
  if(i_note23_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE23=",chr_h_note23_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE23=",APL_NULL_STRING);
  if(i_note24_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE24=",chr_h_note24_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE24=",APL_NULL_STRING);
  if(i_note25_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE25=",chr_h_note25_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE25=",APL_NULL_STRING);
  if(i_note26_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE26=",chr_h_note26_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE26=",APL_NULL_STRING);
  if(i_note27_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE27=",chr_h_note27_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE27=",APL_NULL_STRING);
  if(i_note28_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE28=",chr_h_note28_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE28=",APL_NULL_STRING);
  if(i_note29_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE29=",h_note29_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE29=",APL_NULL_STRING);
  if(i_note30_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE30=",h_note30_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE30=",APL_NULL_STRING);
  if(i_note31_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE31=",chr_h_note31_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE31=",APL_NULL_STRING);
   if(i_note32_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE32=",chr_h_note32_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE32=",APL_NULL_STRING);
   if(i_note33_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE33=",chr_h_note33_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE33=",APL_NULL_STRING);
   if(i_note34_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE34=",chr_h_note34_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE34=",APL_NULL_STRING);
   if(i_note35_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE35=",chr_h_note35_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE35=",APL_NULL_STRING);
   if(i_note36_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE36=",chr_h_note36_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE36=",APL_NULL_STRING);
   if(i_note37_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE37=",chr_h_note37_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE37=",APL_NULL_STRING);
  if(i_note38_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE38=",chr_h_note38_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE38=",APL_NULL_STRING);
   if(i_note39_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE39=",h_note39_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE39=",APL_NULL_STRING);
   if(i_note40_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE40=",h_note40_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE40=",APL_NULL_STRING);
   if(i_note41_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE41=",chr_h_note41_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE41=",APL_NULL_STRING);
   if(i_note42_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE42=",chr_h_note42_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE42=",APL_NULL_STRING);
   if(i_note43_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE43=",chr_h_note43_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE43=",APL_NULL_STRING);
   if(i_note44_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE44=",chr_h_note44_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE44=",APL_NULL_STRING);
   if(i_note45_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE45=",chr_h_note45_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE45=",APL_NULL_STRING);
   if(i_note46_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE46=",chr_h_note46_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE46=",APL_NULL_STRING);
   if(i_note47_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE47=",chr_h_note47_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE47=",APL_NULL_STRING);
   if(i_note48_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE48=",chr_h_note48_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE48=",APL_NULL_STRING);
   if(i_note49_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE49=",h_note49_new);
  else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE49=",APL_NULL_STRING);
   if(i_note50_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE50=",h_note50_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE50=",APL_NULL_STRING);
   if(i_note51_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE51=",chr_h_note51_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE51=",APL_NULL_STRING);
   if(i_note52_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE52=",chr_h_note52_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE52=",APL_NULL_STRING);
   if(i_note53_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE53=",chr_h_note53_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE53=",APL_NULL_STRING);
   if(i_note54_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE54=",chr_h_note54_new);
   else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE54=",APL_NULL_STRING);
   if(i_note55_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE55=",chr_h_note55_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE55=",APL_NULL_STRING);
   if(i_note56_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE56=",chr_h_note56_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE56=",APL_NULL_STRING);
   if(i_note57_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE57=",chr_h_note57_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE57=",APL_NULL_STRING);
   if(i_note58_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE58=",chr_h_note58_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE58=",APL_NULL_STRING);
   if(i_note59_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE59=",h_note59_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE59=",APL_NULL_STRING);
   if(i_note60_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE60=",h_note60_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE60=",APL_NULL_STRING);
	}
	}
  }
  else
  {
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE2=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE3=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE4=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE5=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE6=",APL_NULL_STRING);
	
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE1=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE2=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE3=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE4=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE5=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE6=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE7=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE8=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE9=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE10=",APL_NULL_STRING);
   
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE11=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE12=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE13=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE14=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE15=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE16=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE17=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE18=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE19=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE20=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE21=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE22=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE23=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE24=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE25=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE26=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE27=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE28=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE29=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE30=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE31=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE32=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE33=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE34=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE35=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE36=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE37=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE38=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE39=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE40=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE41=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE42=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE43=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE44=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE45=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE46=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE47=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE48=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE49=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE50=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE51=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE52=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE53=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE54=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE55=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE56=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE57=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE58=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE59=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE60=",APL_NULL_STRING);   
  }
}




if( !(strcmp(p_SEL_VAL[6].link_val,"LNOTE_NBR"))  ||
    !(strcmp(p_SEL_VAL[6].link_val,"LENTNOTE_NO") ))
{
	if(strcmp(p_SEL_VAL[6].link_tag," ") != 0 &&
			strcmp(p_SEL_VAL[6].link_tag,"") != 0)
   {

   exec sql select decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),51,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),101,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),151,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),201,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),251,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),301,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),351,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),401,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),451,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),501,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),551,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),601,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),651,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),701,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),751,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),801,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),851,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),901,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),951,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),36,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),71,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),106,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),141,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),176,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),211,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),246,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),281,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),316,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),351,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),386,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),421,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),456,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),491,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),526,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),561,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),596,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),631,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),666,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),701,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),736,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),771,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),806,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),841,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),876,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),911,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),946,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),981,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1016,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1016,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1051,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1086,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1121,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1156,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1191,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1226,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1261,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1296,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1331,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1366,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1401,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1436,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1471,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1506,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1541,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1576,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1611,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1646,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1681,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1716,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),1,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),36,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),71,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),106,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),141,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),176,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),211,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),246,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),281,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),316,35))
            into :h_info1:i_info1,
                 :chr_h_note2:i_note2,
                 :chr_h_note3:i_note3,
                 :chr_h_note4:i_note4,
                 :chr_h_note5:i_note5,
                 :chr_h_note6:i_note6,
                 :chr_h_note7:i_note7,
                 :chr_h_note8:i_note8,
                 :h_note9:i_note9,
                 :h_note10:i_note10,
                 :chr_h_note11:i_note11,
                 :chr_h_note12:i_note12,
                 :chr_h_note13:i_note13,
                 :chr_h_note14:i_note14,
                 :chr_h_note15:i_note15,
                 :chr_h_note16:i_note16,
                 :chr_h_note17:i_note17,
                 :chr_h_note18:i_note18,
                 :h_note19:i_note19,
                 :h_note20:i_note20,
                 :chr_h_note1_new:i_note1_new,
                 :chr_h_note2_new:i_note2_new,
                 :chr_h_note3_new:i_note3_new,
                 :chr_h_note4_new:i_note4_new,
                 :chr_h_note5_new:i_note5_new,
                 :chr_h_note6_new:i_note6_new,
                 :chr_h_note7_new:i_note7_new,
                 :chr_h_note8_new:i_note8_new,
                 :h_note9_new:i_note9_new,
                 :h_note10_new:i_note10_new,
                 :chr_h_note11_new:i_note11_new,
                 :chr_h_note12_new:i_note12_new,
                 :chr_h_note13_new:i_note13_new,
                 :chr_h_note14_new:i_note14_new,
                 :chr_h_note15_new:i_note15_new,
                 :chr_h_note16_new:i_note16_new,
                 :chr_h_note17_new:i_note17_new,
                 :chr_h_note18_new:i_note18_new,
                 :h_note19_new:i_note19_new,
                 :h_note20_new:i_note20_new,
                 :chr_h_note21_new:i_note21_new,
                 :chr_h_note22_new:i_note22_new,
                 :chr_h_note23_new:i_note23_new,
                 :chr_h_note24_new:i_note24_new,
                 :chr_h_note25_new:i_note25_new,
                 :chr_h_note26_new:i_note26_new,
                 :chr_h_note27_new:i_note27_new,
                 :chr_h_note28_new:i_note28_new,
                 :h_note29_new:i_note29_new,
                 :h_note30_new:i_note30_new,
                 :h_note30_new:i_note30_new,
                 :chr_h_note31_new:i_note31_new,
                 :chr_h_note32_new:i_note32_new,
                 :chr_h_note33_new:i_note33_new,
                 :chr_h_note34_new:i_note34_new,
                 :chr_h_note35_new:i_note35_new,
                 :chr_h_note36_new:i_note36_new,
                 :chr_h_note37_new:i_note37_new,
                 :chr_h_note38_new:i_note38_new,
                 :h_note39_new:i_note39_new,
                 :h_note40_new:i_note40_new,
                 :chr_h_note41_new:i_note41_new,
                 :chr_h_note42_new:i_note42_new,
                 :chr_h_note43_new:i_note43_new,
                 :chr_h_note44_new:i_note44_new,
                 :chr_h_note45_new:i_note45_new,
                 :chr_h_note46_new:i_note46_new,
                 :chr_h_note47_new:i_note47_new,
                 :chr_h_note48_new:i_note48_new,
                 :h_note49_new:i_note49_new,
                 :h_note50_new:i_note50_new,
                 :chr_h_note51_new:i_note51_new,
                 :chr_h_note52_new:i_note52_new,
                 :chr_h_note53_new:i_note53_new,
                 :chr_h_note54_new:i_note54_new,
                 :chr_h_note55_new:i_note55_new,
                 :chr_h_note56_new:i_note56_new,
                 :chr_h_note57_new:i_note57_new,
                 :chr_h_note58_new:i_note58_new,
                 :h_note59_new:i_note59_new,
                 :h_note60_new:i_note60_new
            from CANOTE
            where INFO_SEQ = :p_SEL_VAL[6].link_tag;

  IS_ANY_ORA_ERROR

	
if (sqlca.sqlcode == 1403)
{
		int_nlen = 1;
		while(int_nlen <= 60)
		{
		 if(int_nlen <= 20)
		 {
		  fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"INFO",int_nlen,'=',APL_NULL_STRING);
		 }	
		  fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"NEW_NOTE",int_nlen,'=',APL_NULL_STRING);
		  int_nlen++;
		}
		  int_nlen = 0;
}
else
{

   

	int_used_no_of_chars = 750 + strlen(p_SEL_VAL[2].link_tag);

  if ( (i_info1 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",h_info1);
        int_used_no_of_chars += strlen(h_info1);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",APL_NULL_STRING);
  if ( (i_note2 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE2=",chr_h_note2);
      int_used_no_of_chars += strlen(chr_h_note2);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE2=",APL_NULL_STRING);
  if ( (i_note3 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE3=",chr_h_note3);
         int_used_no_of_chars += strlen(chr_h_note3);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE3=",APL_NULL_STRING);
  if ( (i_note4 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE4=",chr_h_note4);
         int_used_no_of_chars += strlen(chr_h_note4);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE4=",APL_NULL_STRING);
  if ( (i_note5 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE5=",chr_h_note5);
         int_used_no_of_chars += strlen(chr_h_note5);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE5=",APL_NULL_STRING);
  if ( (i_note6 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE6=",chr_h_note6);
         int_used_no_of_chars += strlen(chr_h_note6);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE6=",APL_NULL_STRING);
  if ( (i_note7 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE7=",chr_h_note7);
         int_used_no_of_chars += strlen(chr_h_note7);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE7=",APL_NULL_STRING);
  if ( (i_note8 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE8=",chr_h_note8);
         int_used_no_of_chars += strlen(chr_h_note8);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE8=",APL_NULL_STRING);
  if ( (i_note9 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE9=",h_note9);
         int_used_no_of_chars += strlen(h_note9);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE9=",APL_NULL_STRING);
  if ( (i_note10 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE10=",h_note10);
         int_used_no_of_chars += strlen(h_note10);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE10=",APL_NULL_STRING);
  if ( (i_note11 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE11=",chr_h_note11);
         int_used_no_of_chars += strlen(chr_h_note11);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE11=",APL_NULL_STRING);
  if ( (i_note12 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE12=",chr_h_note12);
         int_used_no_of_chars += strlen(chr_h_note12);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE12=",APL_NULL_STRING);
  if ( (i_note13 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {

        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE13=",chr_h_note13);
         int_used_no_of_chars += strlen(chr_h_note13);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE13=",APL_NULL_STRING);
  if ( (i_note14 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE14=",chr_h_note14);
         int_used_no_of_chars += strlen(chr_h_note14);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE14=",APL_NULL_STRING);
  if ( (i_note15 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE15=",chr_h_note15);
         int_used_no_of_chars += strlen(chr_h_note15);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE15=",APL_NULL_STRING);
  if ( (i_note16 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE16=",chr_h_note16);
         int_used_no_of_chars += strlen(chr_h_note16);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE16=",APL_NULL_STRING);
  if ( (i_note17 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE17=",chr_h_note17);
         int_used_no_of_chars += strlen(chr_h_note17);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE17=",APL_NULL_STRING);
  if ( (i_note18 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE18=",chr_h_note18);
         int_used_no_of_chars += strlen(chr_h_note18);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE18=",APL_NULL_STRING);
  if ( (i_note19 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE19=",h_note19);
         int_used_no_of_chars += strlen(h_note19);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE19=",APL_NULL_STRING);
  if ( (i_note20 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE20=",h_note20);
         int_used_no_of_chars += strlen(h_note20);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE20=",APL_NULL_STRING);
  
  if (l_pay_note_ind == 1)
  {
  if(i_note1_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE1=",chr_h_note1_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE1=",APL_NULL_STRING);
  if(i_note2_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE2=",chr_h_note2_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE2=",APL_NULL_STRING);
  if(i_note3_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE3=",chr_h_note3_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE3=",APL_NULL_STRING);
  if(i_note4_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE4=",chr_h_note4_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE4=",APL_NULL_STRING);
  if(i_note5_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE5=",chr_h_note5_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE5=",APL_NULL_STRING);
  if(i_note6_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE6=",chr_h_note6_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE6=",APL_NULL_STRING);
  if(i_note7_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE7=",chr_h_note7_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE7=",APL_NULL_STRING);
  if(i_note8_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE8=",chr_h_note8_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE8=",APL_NULL_STRING);
  if(i_note9_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE9=",h_note9_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE9=",APL_NULL_STRING);
  if(i_note10_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE10=",h_note10_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE10=",APL_NULL_STRING);
  
  
   if(i_note11_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE11=",chr_h_note11_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE11=",APL_NULL_STRING);
  if(i_note12_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE12=",chr_h_note12_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE12=",APL_NULL_STRING);
  if(i_note13_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE13=",chr_h_note13_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE13=",APL_NULL_STRING);
  if(i_note14_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE14=",chr_h_note14_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE14=",APL_NULL_STRING);
  if(i_note15_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE15=",chr_h_note15_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE15=",APL_NULL_STRING);
  if(i_note16_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE16=",chr_h_note16_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE16=",APL_NULL_STRING);
  if(i_note17_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE17=",chr_h_note17_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE17=",APL_NULL_STRING);
  if(i_note18_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE18=",chr_h_note18_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE18=",APL_NULL_STRING);
  if(i_note19_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE19=",h_note19_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE19=",APL_NULL_STRING);
  if(i_note20_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE20=",h_note20_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE20=",APL_NULL_STRING);
   if(i_note21_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE21=",chr_h_note21_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE21=",APL_NULL_STRING);
  if(i_note22_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE22=",chr_h_note22_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE22=",APL_NULL_STRING);
  if(i_note23_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE23=",chr_h_note23_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE23=",APL_NULL_STRING);
  if(i_note24_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE24=",chr_h_note24_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE24=",APL_NULL_STRING);
  if(i_note25_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE25=",chr_h_note25_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE25=",APL_NULL_STRING);
  if(i_note26_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE26=",chr_h_note26_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE26=",APL_NULL_STRING);
  if(i_note27_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE27=",chr_h_note27_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE27=",APL_NULL_STRING);
  if(i_note28_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE28=",chr_h_note28_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE28=",APL_NULL_STRING);
  if(i_note29_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE29=",h_note29_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE29=",APL_NULL_STRING);
  if(i_note30_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE30=",h_note30_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE30=",APL_NULL_STRING);
  if(i_note31_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE31=",chr_h_note31_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE31=",APL_NULL_STRING);
   if(i_note32_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE32=",chr_h_note32_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE32=",APL_NULL_STRING);
   if(i_note33_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE33=",chr_h_note33_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE33=",APL_NULL_STRING);
   if(i_note34_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE34=",chr_h_note34_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE34=",APL_NULL_STRING);
   if(i_note35_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE35=",chr_h_note35_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE35=",APL_NULL_STRING);
   if(i_note36_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE36=",chr_h_note36_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE36=",APL_NULL_STRING);
   if(i_note37_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE37=",chr_h_note37_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE37=",APL_NULL_STRING);
   if(i_note38_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE38=",chr_h_note38_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE38=",APL_NULL_STRING);
   if(i_note39_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE39=",h_note39_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE39=",APL_NULL_STRING);
   if(i_note40_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE40=",h_note40_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE40=",APL_NULL_STRING);
   if(i_note41_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE41=",chr_h_note41_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE41=",APL_NULL_STRING);
   if(i_note42_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE42=",chr_h_note42_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE42=",APL_NULL_STRING);
   if(i_note43_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE43=",chr_h_note43_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE43=",APL_NULL_STRING);
   if(i_note44_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE44=",chr_h_note44_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE44=",APL_NULL_STRING);
   if(i_note45_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE45=",chr_h_note45_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE45=",APL_NULL_STRING);
   if(i_note46_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE46=",chr_h_note46_new);
   else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE46=",APL_NULL_STRING);
   if(i_note47_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE47=",chr_h_note47_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE47=",APL_NULL_STRING);
   if(i_note48_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE48=",chr_h_note48_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE48=",APL_NULL_STRING);
   if(i_note49_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE49=",h_note49_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE49=",APL_NULL_STRING);
   if(i_note50_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE50=",h_note50_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE50=",APL_NULL_STRING);
   if(i_note51_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE51=",chr_h_note51_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE51=",APL_NULL_STRING);
   if(i_note52_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE52=",chr_h_note52_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE52=",APL_NULL_STRING);
   if(i_note53_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE53=",chr_h_note53_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE53=",APL_NULL_STRING);
   if(i_note54_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE54=",chr_h_note54_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE54=",APL_NULL_STRING);
   if(i_note55_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE55=",chr_h_note55_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE55=",APL_NULL_STRING);
   if(i_note56_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE56=",chr_h_note56_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE56=",APL_NULL_STRING);
    if(i_note57_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE57=",chr_h_note57_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE57=",APL_NULL_STRING);
   if(i_note58_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE58=",chr_h_note58_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE58=",APL_NULL_STRING);
   if(i_note59_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE59=",h_note59_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE59=",APL_NULL_STRING);
   if(i_note60_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE60=",h_note60_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE60=",APL_NULL_STRING);
	}
	}
  }
  else
  {
      int_nlen = 1;
      while(int_nlen <= 60) 
      {
        if(int_nlen <= 20)
        fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"INFO",int_nlen,'=',APL_NULL_STRING);
		  
				
         
      	fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"NEW_NOTE",int_nlen,'=',APL_NULL_STRING);
			

			int_nlen++;
      }
      int_nlen = 0;
  }
}





if(( (strcmp(p_SEL_VAL[9].link_val,"SUB_BASE_QUANTITY") == 0) || 
	 (strcmp(p_SEL_VAL[13].link_val,"SUB_BASE_QUANTITY") == 0) ||
	 (strcmp(p_SEL_VAL[15].link_val,"SUB_BASE_QUANTITY") == 0) ||
	 (strcmp(p_SEL_VAL[16].link_val,"SUB_BASE_QUANTITY") == 0) ) &&
	 ((strcmp(p_SEL_VAL[3].link_tag,"RD") != 0) &&
	 (strcmp(p_SEL_VAL[3].link_tag,"BI") != 0)  &&
	 (strcmp(p_SEL_VAL[3].link_tag,"OP") != 0)  ) )
	 




{

printf("\nHardik setvalue p_SEL_VAL[9].link_val = |%s| ,  p_SEL_VAL[9].NUM_VAL = |%lf| p_SEL_VAL[10].NUM_VAL = |%lf|" ,p_SEL_VAL[9].link_val, p_SEL_VAL[9].NUM_VAL, p_SEL_VAL[10].NUM_VAL);
fflush(stdout);

printf("\nHardik setvalue p_SEL_VAL[13].link_val = |%s| , p_SEL_VAL[13].NUM_VAL = |%lf| p_SEL_VAL[12].NUM_VAL = |%lf|" ,p_SEL_VAL[13].link_val, p_SEL_VAL[13].NUM_VAL, p_SEL_VAL[12].NUM_VAL);
fflush(stdout);

printf("\nHardik setvalue p_SEL_VAL[16].link_val = |%s| , p_SEL_VAL[16].NUM_VAL = |%lf| p_SEL_VAL[15].NUM_VAL = |%lf|" ,p_SEL_VAL[16].link_val, p_SEL_VAL[15].NUM_VAL,p_SEL_VAL[15].NUM_VAL);
fflush(stdout);

printf("\nHardik setvalue p_SEL_VAL[15].link_val = |%s| , p_SEL_VAL[15].NUM_VAL = |%lf| p_SEL_VAL[14].NUM_VAL = |%lf|" ,p_SEL_VAL[15].link_val, p_SEL_VAL[15].NUM_VAL,p_SEL_VAL[14].NUM_VAL);
fflush(stdout);


memset(chr_l_sub_new_qty,APL_NULL_CHAR,20);
memset(chr_l_sub_base_qty,APL_NULL_CHAR,5);
memset(h_sub_new_quantity,APL_NULL_CHAR,20);
memset(h_sub_base_quantity,APL_NULL_CHAR,5);

  	 if (strcmp(p_SEL_VAL[9].link_val,"SUB_BASE_QUANTITY") == 0)
	{
		CO_ToStr(p_SEL_VAL[9].NUM_VAL,4,0,chr_l_sub_base_qty);
   		CO_ToStr(p_SEL_VAL[10].NUM_VAL,10,6,chr_l_sub_new_qty);
	}

	if (strcmp(p_SEL_VAL[13].link_val,"SUB_BASE_QUANTITY") == 0)
        {
                CO_ToStr(p_SEL_VAL[13].NUM_VAL,4,0,chr_l_sub_base_qty);
                CO_ToStr(p_SEL_VAL[12].NUM_VAL,10,6,chr_l_sub_new_qty);
        }

	if (strcmp(p_SEL_VAL[16].link_val,"SUB_BASE_QUANTITY") == 0)
	{
		CO_ToStr(p_SEL_VAL[16].NUM_VAL,4,0,chr_l_sub_base_qty);
		CO_ToStr(p_SEL_VAL[15].NUM_VAL,10,6,chr_l_sub_new_qty);
	}
	

	if (strcmp(p_SEL_VAL[15].link_val,"SUB_BASE_QUANTITY") == 0)
	{
		 CO_ToStr(p_SEL_VAL[15].NUM_VAL,4,0,chr_l_sub_base_qty);
		 CO_ToStr(p_SEL_VAL[14].NUM_VAL,10,6,chr_l_sub_new_qty);
	}
	


 	  memset(chr_l_sub_ratio,APL_NULL_CHAR,18);
	memset(chr_l_new_sub_ratio,APL_NULL_CHAR,18);
	
	strcat(chr_l_sub_new_qty,APL_NULL_STRING);
	
   	EXEC SQL SELECT INSTR(nvl(:chr_l_sub_new_qty,0),'.') into :int_dec_pos from DUAL;
   	IS_ANY_ORA_ERROR
 
   if(int_dec_pos != 0)
   {
   EXEC SQL SELECT ltrim(replace(:chr_l_sub_new_qty,'.',',')) into :h_sub_new_quantity
            FROM DUAL;

   IS_ANY_ORA_ERROR
   }
   else
   {
       strcat(h_sub_new_quantity,",");
   }

   int_dec_cnt = strlen(h_sub_new_quantity) - 1;
   while(int_dec_cnt > 0)
   {
      if(h_sub_new_quantity[int_dec_cnt] != '0')
         break;
      if(h_sub_new_quantity[int_dec_cnt] == '0')
         h_sub_new_quantity[int_dec_cnt] = '\0';
      int_dec_cnt--; 
   }

 
 if( APL_FAILURE == CO_Trim(chr_l_sub_base_qty,' ','L',h_sub_base_quantity,l_debug_info_ptr) )
    {
     APL_GOBACK_FAIL
    }

   strcpy(chr_l_sub_ratio,h_sub_new_quantity);
   strcat(chr_l_sub_ratio,"/");
   strcat(chr_l_sub_ratio,p_SEL_VAL[8].link_tag);
   strcat(chr_l_sub_ratio,h_sub_base_quantity);
   strcat(chr_l_sub_ratio,",");

   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SUB_RATIO=",chr_l_sub_ratio);

	
	strcpy(chr_l_new_sub_ratio, h_sub_new_quantity);
	strcat(chr_l_new_sub_ratio, "/");
	strcat(chr_l_new_sub_ratio, h_sub_base_quantity);
	strcat(chr_l_new_sub_ratio, ",");
	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SUB_RATIO=",chr_l_new_sub_ratio);
}
} 

if(p_rec_no == 1)
{
	
	#ifdef EMU_PROCESSING
	if( ((strcmp(chr_p_msgno,"550N01") == 0)|| (strcmp(chr_p_msgno,"550C01") == 0) || (strcmp(chr_p_msgno,"550R01") == 0)) && ( strcmp(p_SEL_VAL[12].link_tag,"GRD") == 0  ) )
	{

	if ( CO_Chk_EMU_Period(APL_NULL_STRING,&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
	{
			APL_GOBACK_FAIL
	}

	if ( (int_period_flg == 2) || (int_period_flg == 3) )
	  
	{


	if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
	{
	EXEC SQL SELECT
	int_a.EXCHGRT INTO :l_exchggrt
	FROM MT_EXCHRATE int_a
	WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
	AND int_a.currency_cd = :chr_l_grd_ccycode
	AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
							FROM MT_EXCHRATE int_b
							WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode
							AND int_b.currency_cd = :chr_l_grd_ccycode
						);
	}
	else
		if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
		{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode 
			AND int_a.currency_cd = :chr_l_emu_ccycode
			AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
									FROM MT_EXCHRATE int_b
									WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode
									AND int_b.currency_cd = :chr_l_emu_ccycode
								);
		}



		if(sqlca.sqlcode == 0)
		{
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"EXCH=",l_exchggrt);
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYEXCH=EUR");
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"ECCYCODE=EUR");
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CSUB_PRICE=",p_SEL_VAL[13].NUM_VAL/l_exchggrt);
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CP_SUBS_AMT=",atof(p_SEL_VAL[17].link_tag)/l_exchggrt);
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYCSUB_PRICE=EUR");
		}
     } 
	}
	


   
   
   if( (strcmp(chr_p_msgno,"563N03") == 0) || (strcmp(chr_p_msgno,"566R03")==0))
   {

   if ( CO_Chk_EMU_Period(APL_NULL_STRING,&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
   {
         APL_GOBACK_FAIL
   }

   if ( (int_period_flg == 2) || (int_period_flg == 3) ) 
     
    {


   if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
   {
   EXEC SQL SELECT
   int_a.EXCHGRT INTO :l_exchggrt
   FROM MT_EXCHRATE int_a
   WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
   AND int_a.currency_cd = :chr_l_grd_ccycode
   AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
                     FROM MT_EXCHRATE int_b
                     WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode
                     AND int_b.currency_cd = :chr_l_grd_ccycode
                  );
   }
   else
      if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
      {
         EXEC SQL SELECT
         int_a.EXCHGRT INTO :l_exchggrt
         FROM MT_EXCHRATE int_a
         WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode
         AND int_a.currency_cd = :chr_l_emu_ccycode
         AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
                           FROM MT_EXCHRATE int_b
                           WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode
                           AND int_b.currency_cd = :chr_l_emu_ccycode
                        );
      }



      if(sqlca.sqlcode == 0)
      {
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
         fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"EXCH=",l_exchggrt);
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYEXCH=EUR");
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"ECCYCODE=EUR");

         fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CSUB_PRICE=",
                  atof(p_SEL_VAL[14].link_tag)/l_exchggrt);
         fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYCSUB_PRICE=EUR");
      }
   	  }
   } 



#endif

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added Condition for 552N01 and 552R01 */
if((strcmp(p_SEL_VAL[11].link_val,"FTYPEOFINSTR")==0)||(strcmp(chr_p_msgno,"552N01") == 0) ||(strcmp(chr_p_msgno,"552R01") == 0))
{
      memset(l_account_93B,APL_NULL_CHAR,APL_CLIENT_LENGTH);
      memset(l_instr_code_93B,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
      memset(chr_l_cons_flg,APL_NULL_CHAR,2);   
      memset(l_entl_basis_93B,APL_NULL_CHAR,2);
      
      h_safekeep_pos = 0;

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added Condition for 552N01 and 552R01 */
      if ((strcmp(chr_p_msgno,"552N01") == 0)||(strcmp(chr_p_msgno,"552R01") == 0))
      {
            strcpy(l_account_93B,p_SEL_VAL[2].link_tag);
			strcpy(l_instr_code_93B,p_SEL_VAL[4].link_tag);
      
			EXEC SQL SELECT NOMINAL_VALUE INTO :h_nominal_value_BB
                 FROM MT_INSTRUMENT
                 WHERE instr_code = :p_SEL_VAL[4].link_tag;

	  }
	  else
	  {	
      strcpy(l_account_93B,p_SEL_VAL[0].link_tag);
      strcpy(l_instr_code_93B,p_SEL_VAL[4].link_tag);
	  }

      EXEC SQL SELECT distinct('Y') into :chr_l_cons_flg FROM MT_MSGADDRESS
      WHERE cln_code=:l_account_93B
      AND COMB_MSG='Y' AND MSG_IDENT_NO IN ('3','31')
      AND EXISTS (SELECT cln_master FROM MT_CLIENT WHERE cln_master=:l_account_93B);

      IS_ANY_ORA_ERROR

      if(sqlca.sqlcode == 1403)
		{
			strcpy(chr_l_cons_flg,"N");
      }

      EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
                      FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and
                      INSTR_TYPE = :p_SEL_VAL[8].link_tag;

      IS_ANY_ORA_ERROR

      
      if (APL_FAILURE == CO_Chk_CntryEnabled(  "EVNT_INIT",
                                             "SM_RECDT",
                                              &l_cond_ru,
                                              l_debug_info_ptr ))
      {
                 APL_GOBACK_FAIL
      } 
      
      if (((strcmp(chr_p_msgno,"560N01") == 0)||(strcmp(chr_p_msgno,"560R01") == 0) )&& (l_cond_ru)) /*I-Solve:362*/
      {
                  EXEC SQL SELECT NVL(to_char(REC_DATE,'dd/mm/yyyy hh:mi:ss'),''), PRELIMINARY_FLAG into :chr_l_sm_recdt:i_sm_recdt,:chr_l_sm_prelim
                  FROM CAEVENT
                  WHERE corp_id = :p_SEL_VAL[30].link_tag;

                  IS_ANY_ORA_ERROR

                  if(APL_FAILURE == CO_RtvSysDt(chr_l_systemdate,l_debug_info_ptr))
                               APL_GOBACK_FAIL
      }

      if(strcmp(chr_l_cons_flg,"Y")==0)
      {
	      printf("Entered in Consolidated ZONE\n");
		  fflush(stdout);

	      if (((strcmp(chr_p_msgno,"560N01") == 0)||(strcmp(chr_p_msgno,"560R01") == 0) ) && (l_cond_ru)) /*I-Solve:362*/
              {
                        if (strcmp(chr_l_systemdate, chr_l_sm_recdt) == 0 || (strcmp(chr_l_sm_prelim, "Y") == 0 && i_sm_recdt == -1))
                        {
                                EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_safekeep_pos
                                FROM DL_SAFEK
                                WHERE  instr_code = :l_instr_code_93B
                                AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);

                                IS_ANY_ORA_ERROR
                        }
                        else
                        {
                                EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_safekeep_pos
                                FROM DL_HISSAFEK
                                WHERE  instr_code = :l_instr_code_93B
                                AND    POSIT_DATE = :chr_l_sm_recdt
                                AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);

                                IS_ANY_ORA_ERROR
                        }
              }
              else
	      {
	      if (strcmp(l_entl_basis_93B,"T")==0)	
		   {
             EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
		                        +	NVL(SUM(NVALRECEIVE),0)
				   					-	NVL(SUM(NVALDELIVER),0)
				   					+  NVL(SUM(VAL_REC),0)
				   				   -	NVL(SUM(VAL_DEL),0)
				   					+  NVL(SUM(DP_REC),0)
				   				   -	NVL(SUM(DP_DEL),0) into :h_safekeep_pos
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B); 
             IS_ANY_ORA_ERROR

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added Condition for 552N01 and 552R01 - Start*/
			EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
		                        +	NVL(SUM(NVALRECEIVE),0)
				   					-	NVL(SUM(NVALDELIVER),0)
				   					+  NVL(SUM(VAL_REC),0)
				   				   -	NVL(SUM(VAL_DEL),0)
				   					+  NVL(SUM(DP_REC),0)
				   				   -	NVL(SUM(DP_DEL),0) into :h_blk_safekeep_pos
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B)
							 		  AND (BLOCK_TYPE ='BLCK' OR BLOCK_TYPE='CABL');  /* Both BLOCK and CABL should display */

             IS_ANY_ORA_ERROR
		printf("\n YOG *****sqlca.sqlcode = |%d|********\n",sqlca.sqlcode);
		 fflush(stdout);
		/* Kotak UAT AIX Added by Chava */
			EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
				   					+  NVL(SUM(VAL_REC),0)
				   				   -	NVL(SUM(VAL_DEL),0)
				   					+  NVL(SUM(DP_REC),0)
				   				   -	NVL(SUM(DP_DEL),0) into :h_elig_safekeep_pos
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);

             IS_ANY_ORA_ERROR

		printf("\n Cons_T: Block+CABL Positions = |%lf|\n", h_blk_safekeep_pos);
		fflush(stdout);
		printf("\n Cons_T: Elig Positions = |%lf|\n", h_elig_safekeep_pos);
		fflush(stdout);

		printf("\n Cons_T: instr_code = |%s| \n",l_instr_code_93B);
		fflush(stdout);


/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added Condition for 552N01 and 552R01 - End*/
				/*Changes for E-mail Elig tag 20-02-07*/
				if((strcmp(chr_p_msgno,"560N01") == 0) || 
				   (strcmp(chr_p_msgno,"551N01") == 0) ||
				   (strcmp(chr_p_msgno,"552N01") == 0))
				{	
					printf("\n E-mail FENT_POS");
					fflush(stdout);

					printf("\n E-mail  h_safekeep_pos:%lf:",h_safekeep_pos);
					fflush(stdout);

					printf("\n E-mail l_instr_code_93B :%s:",l_instr_code_93B);
					fflush(stdout);

					printf("\n E-mail l_account_93B :%s:",l_account_93B);
					fflush(stdout);

					h_unAuthTrdPos = 0;
					EXEC SQL SELECT
					DECODE(NULL,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY)),0,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY))) 
					INTO :h_unAuthTrdPos 
					FROM dl_deal
					WHERE  instr_code = :l_instr_code_93B
					AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B)
					AND  DEAL_STAT ='UU'; 
					IS_ANY_ORA_ERROR
					printf("\n E-mail  h_unAuthTrdPos:%lf:",h_unAuthTrdPos);
					h_safekeep_pos= h_safekeep_pos + h_unAuthTrdPos;
					printf("\n E-mail  h_safekeep_pos:%lf:",h_safekeep_pos);
					
				}
				/*Changes for E-mail Elig tag Ends*/
		   }
	      else if (strcmp(l_entl_basis_93B,"S")==0)	
		   {
             EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
			   					  into :h_safekeep_pos
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND   client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);
             IS_ANY_ORA_ERROR

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - Start*/
             EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
			   					  into :h_blk_safekeep_pos
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND   client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B)
							 AND BLOCK_TYPE = 'BLCK';	
             IS_ANY_ORA_ERROR
		printf("\n YOG *****sqlca.sqlcode = |%d|********\n",sqlca.sqlcode);
			 fflush(stdout);

		printf("\n Cons_S: Block Positions = |%lf|\n", h_blk_safekeep_pos);
		fflush(stdout);

		printf("\n Cons_S: instr_code = |%s| \n",l_instr_code_93B);
		fflush(stdout);


/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - End*/			
		   }
		}    
      }   
      else
      {
		printf("Entered in NON Consolidated ZONE\n");
		fflush(stdout);

		
                if (((strcmp(chr_p_msgno,"560N01") == 0)||(strcmp(chr_p_msgno,"560R01") == 0) ) && (l_cond_ru)) /*I-Solve:362*/
                {
                        if (strcmp(chr_l_systemdate, chr_l_sm_recdt) == 0 || (strcmp(chr_l_sm_prelim, "Y") == 0 && i_sm_recdt == -1))
                        {
                                EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_safekeep_pos
                                FROM DL_SAFEK
                                WHERE  instr_code = :l_instr_code_93B
                                AND    client =:l_account_93B
                                GROUP BY instr_code,client;

                                IS_ANY_ORA_ERROR
                        }
                        else
                        {
                                EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_safekeep_pos
                                FROM DL_HISSAFEK
                                WHERE  instr_code = :l_instr_code_93B
                                AND    POSIT_DATE = :chr_l_sm_recdt
                                AND    client =:l_account_93B
                                GROUP BY instr_code,client;

                                IS_ANY_ORA_ERROR
                        }
      }   
      else
      {
        	if (strcmp(l_entl_basis_93B,"T")==0)
        	{
         	 EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
            	               +  SUM(NVL(NVALRECEIVE,0))
               	            -  SUM(NVL(NVALDELIVER,0))
                  	         +  SUM(NVL(VAL_REC,0))
                     	      -  SUM(NVL(VAL_DEL,0))
                  	         +  SUM(NVL(DP_REC,0))
                     	      -  SUM(NVL(DP_DEL,0)) into :h_safekeep_pos
                  	        FROM DL_SAFEK
                     	     WHERE  instr_code = :l_instr_code_93B
                        	  AND   client = :l_account_93B
                             GROUP BY instr_code,client;
           	IS_ANY_ORA_ERROR

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - Start*/			
         	 EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
            	               +  SUM(NVL(NVALRECEIVE,0))
               	            -  SUM(NVL(NVALDELIVER,0))
                  	         +  SUM(NVL(VAL_REC,0))
                     	      -  SUM(NVL(VAL_DEL,0))
                  	         +  SUM(NVL(DP_REC,0))
                     	      -  SUM(NVL(DP_DEL,0)) into :h_blk_safekeep_pos
                  	        FROM DL_SAFEK
                     	     WHERE  instr_code = :l_instr_code_93B
                        	  AND   client = :l_account_93B
							  		  AND (BLOCK_TYPE ='BLCK' OR BLOCK_TYPE='CABL') 
                             GROUP BY instr_code,client;
           	IS_ANY_ORA_ERROR
		printf("\n YOG *****sqlca.sqlcode = |%d|********\n",sqlca.sqlcode);
		fflush(stdout);
         	 
				EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
                  	         +  SUM(NVL(VAL_REC,0))
                     	      -  SUM(NVL(VAL_DEL,0))
                  	         +  SUM(NVL(DP_REC,0))
                     	      -  SUM(NVL(DP_DEL,0)) into :h_elig_safekeep_pos
                  	        FROM DL_SAFEK
                     	     WHERE  instr_code = :l_instr_code_93B
                        	  AND   client = :l_account_93B
                             GROUP BY instr_code,client;
           	IS_ANY_ORA_ERROR

		printf("\n 10112 *****sqlca.sqlcode = |%d|********\n",sqlca.sqlcode);
		fflush(stdout);

		printf("\n Single_T: Block+CABL Positions = |%lf|\n", h_blk_safekeep_pos);
		fflush(stdout);

		printf("\n Single_T: Elig Positions = |%lf|\n", h_elig_safekeep_pos);
		fflush(stdout);

		printf("\n Single_T: instr_code = |%s| \n",l_instr_code_93B);
		fflush(stdout);


/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - End*/			

				/*Nikhil Changes for E-mail Elig tag 20-02-07*/
				if((strcmp(chr_p_msgno,"560N01") == 0) || 
				   (strcmp(chr_p_msgno,"551N01") == 0) ||
				   (strcmp(chr_p_msgno,"552N01") == 0))
				{	
					printf("\n E-mail  FENT_POS");
					fflush(stdout);

					printf("\n E-mail  h_safekeep_pos :%lf:",h_total_safek_93B);
					fflush(stdout);

					printf("\n E-mail l_instr_code_93B :%s:",l_instr_code_93B);
					fflush(stdout);

					printf("\n E-mail l_account_93B :%s:",l_account_93B);
					fflush(stdout);


					h_unAuthTrdPos = 0;
					EXEC SQL SELECT 
					DECODE(NULL,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY)),0,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY))) 
					INTO :h_unAuthTrdPos 
					FROM dl_deal
					WHERE  instr_code = :l_instr_code_93B
					AND    client = :l_account_93B
					AND    DEAL_STAT ='UU';

					IS_ANY_ORA_ERROR
					h_safekeep_pos= h_safekeep_pos+ h_unAuthTrdPos;
					printf("\n E-mail  h_unAuthTrdPos :%lf:",h_unAuthTrdPos);
					fflush(stdout);

					printf("\n E-mail  h_safekeep_pos:%lf:",h_safekeep_pos);
					fflush(stdout);

					
				}
				/*Nikhil Changes for E-mail Elig tag Ends*/
         }
         else if (strcmp(l_entl_basis_93B,"S")==0)
         {
             EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
                             into :h_safekeep_pos
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND   client = :l_account_93B
                             GROUP BY instr_code,client;
             IS_ANY_ORA_ERROR

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - Start*/
             EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
                             into :h_blk_safekeep_pos
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND   client = :l_account_93B
							 AND   BLOCK_TYPE = 'BLCK'
                             GROUP BY instr_code,client;
             IS_ANY_ORA_ERROR
		printf("\n YOG *****sqlca.sqlcode = |%d|********\n",sqlca.sqlcode);
		 fflush(stdout);

		printf("\n Single_S: Block Positions = |%lf|\n", h_blk_safekeep_pos);
		fflush(stdout);

		printf("\n Single_S: instr_code = |%s| \n",l_instr_code_93B);
		fflush(stdout);


/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - End*/
          }
		}  
      }


      sprintf(chr_ru_temp,"ROHAN :: :: System Date = %s, Record Date = %s, FENT_POS = %f, Prelim = %s", chr_l_systemdate, chr_l_sm_recdt, h_safekeep_pos, chr_l_sm_prelim);
      CO_ProcMonitor(APL_OUT_FILE,chr_ru_temp, NULL, NULL);



  if(strcmp(p_SEL_VAL[11].link_tag,"FMT")== 0)
  {
    if((h_safekeep_pos != 0)||(h_blk_safekeep_pos != 0)||(h_elig_safekeep_pos != 0))
    {
        npos = h_safekeep_pos * p_SEL_VAL[12].NUM_VAL;
	     EXEC SQL SELECT to_char(:npos) into :chr_h_fent_pos from dual;
        IS_ANY_ORA_ERROR

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - Start*/
		npos1 = h_blk_safekeep_pos * h_nominal_value_BB;
	     EXEC SQL SELECT to_char(:npos1) into :chr_h_blk_safekeep_pos from dual;
        IS_ANY_ORA_ERROR
/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - End*/			

        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FENT_POS=",chr_h_fent_pos); 
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"BLOK_POS=",chr_h_blk_safekeep_pos); /* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only */
			/* Kotak UAT AIX Chava */

		 	npos1 = 0;
			npos1 = h_elig_safekeep_pos * h_nominal_value_BB;
	     EXEC SQL SELECT to_char(:npos1) into :chr_h_elig_safekeep_pos from dual;
        IS_ANY_ORA_ERROR
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ELIG_POS=",chr_h_elig_safekeep_pos);

	     	npos = 0;
		 	npos1 = 0; /* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only */
    }
    else
	 {
		  memset(chr_h_fent_pos,APL_NULL_CHAR,30); 
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"FENT_POS=0");
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"BLOK_POS=0"); /* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only*/			
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"ELIG_POS=0"); /* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only*/			
	 }
        
  }
  else
  {
    if((h_safekeep_pos != 0)||(h_blk_safekeep_pos != 0)||(h_elig_safekeep_pos != 0))
    {
	     EXEC SQL SELECT to_char(:h_safekeep_pos) into :chr_h_fent_pos from dual;
        IS_ANY_ORA_ERROR
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FENT_POS=",chr_h_fent_pos);

/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - Start*/	
	     EXEC SQL SELECT to_char(:h_blk_safekeep_pos) into :chr_h_blk_safekeep_pos from dual;
        IS_ANY_ORA_ERROR
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"BLOK_POS=",chr_h_blk_safekeep_pos);
/* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only - Added SQL Stmt for 552N01 and 552R01 - End*/
			/* Kotak AIX UAT Chava */
	     EXEC SQL SELECT to_char(:h_elig_safekeep_pos) into :chr_h_elig_safekeep_pos from dual;
        IS_ANY_ORA_ERROR
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ELIG_POS=",chr_h_elig_safekeep_pos);

    }
    else
	 {
		  memset(chr_h_fent_pos,APL_NULL_CHAR,30); 
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"FENT_POS=0");
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"BLOK_POS=0"); /* Added by YOG on 26032009 - ISKB_2249  - For BLCK tag in 551N01/551R01 - BB Event Only*/
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"ELIG_POS=0");
	 }
  }

}

if(strcmp(p_SEL_VAL[7].link_val,"TNOTE_NBR")==0)
{
   if(strcmp(p_SEL_VAL[7].link_tag," ") !=0 &&
      strcmp(p_SEL_VAL[7].link_tag,"") != 0)
   {
   exec sql select replace(replace(INFO_1,chr(13),NULL),chr(10),NULL),
                   replace(replace(INFO_2,chr(13),NULL),chr(10),NULL),
                   replace(replace(INFO_3,chr(13),NULL),chr(10),NULL),
                   replace(replace(INFO_4,chr(13),NULL),chr(10),NULL)
            into :h_info_1:i_info_1, :h_info_2:i_info_2,
                 :h_info_3:i_info_3,:h_info_4:i_info_4
            from CANOTE 
            where INFO_SEQ = :p_SEL_VAL[7].link_tag;

   IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403)
   {
      strcpy(h_info_1,APL_NULL_STRING);
      strcpy(h_info_2,APL_NULL_STRING);
      strcpy(h_info_3,APL_NULL_STRING);
      strcpy(h_info_4,APL_NULL_STRING);
		

   }


   if(i_info_1 == -1)
	strcpy(h_info_1,APL_NULL_STRING);
   if(i_info_2 == -1)
	strcpy(h_info_2,APL_NULL_STRING);
   if(i_info_3 == -1)
	strcpy(h_info_3,APL_NULL_STRING);
   if(i_info_4 == -1)
	strcpy(h_info_4,APL_NULL_STRING);





	int_no_of_chars= int_used_no_of_chars - 750 - strlen(p_SEL_VAL[2].link_tag); 

   if(strlen(h_info_1) > int_no_of_chars)  
   {
	
    if(strcmp(chr_p_msgno,"560N01") || strcmp(chr_p_msgno,"560R01") ) /*I-Solve:362*/ 
	  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"IS599=Y");
  		 
	}
   else
   {
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"IS599=N");
        strcpy(h_info_1,APL_NULL_STRING);
   }

   if(strlen(h_info_1) > int_no_of_chars)  
   {
   	msg_line_no = 0;
   	strcpy(h_info,h_info_1);
   	strcat(h_info,h_info_2);
   	strcat(h_info,h_info_3);
   	strcat(h_info,h_info_4);
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"ISCONT=Y");
		int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
      
      		
		printf("\n entered in h_info_1 > int_no_of_chars  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
		fflush(stdout);

   	while(strlen(h_info) != 0)
   	{
      	memset(chr_l_note[msg_line_no].detail,APL_NULL_CHAR,51);
      	strncpy(chr_l_note[msg_line_no].detail,h_info+int_no_of_chars,50);
      	strcat(chr_l_note[msg_line_no].detail,APL_NULL_STRING);
      	int_no_of_chars = int_no_of_chars + 50;
			int_no_of_chars_of_footnote = (msg_line_no + 1) * 50; 

			
			

			
    		

			if ( (int_no_of_chars_of_footnote > ((MAXSWIFTLEN - 800) - strlen(p_SEL_VAL[2].link_tag))) || (int_no_of_chars >= strlen(h_info)) )

     		{
				if(!strcmp(chr_p_msgno,"560N01") || !strcmp(chr_p_msgno,"560R01")) /*I-Solve:362*/
				{
					memset(chr_l_cont,APL_NULL_CHAR,2);
					if(int_no_of_chars < strlen(h_info))
						strcpy(chr_l_cont,"Y");
					else
						strcpy(chr_l_cont,"N");
                                       // printf("\n Now calling send560 .. seq no is :%ld:",p_msg_seq_no); Changes done for AIX Migration
					printf("\n Now calling send560 .. seq no is :%ld:",(*p_msg_seq_no));
					fflush(stdout);

					MS_Proc_560Send(chr_l_note,chr_p_msgno,chr_l_cont,p_SEL_VAL,p_STAT_VAL,p_msg_seq_no,l_debug_info_ptr);	 		
					l_called_send560=1;
				}
				else
				{
					MS_Proc_599Send(chr_l_note,p_SEL_VAL[0].link_tag,p_SEL_VAL[5].link_tag,p_SEL_VAL[4].link_tag,p_msg_seq_no,l_debug_info_ptr);
					l_called_send560=1;
				}
   			msg_line_no = 0;
				
				for(dbl_i=0;dbl_i<=20;dbl_i++)
     				memset(chr_l_note[dbl_i].detail,APL_NULL_CHAR,51);
     		}
      	else
        		msg_line_no++;

      	if(int_no_of_chars >= strlen(h_info))
         	break;
   	}
   }
 }
}

if( !(strcmp(p_SEL_VAL[7].link_val,"NPOS")) )
{
    if(strcmp(chr_p_msgno,"552N01") == 0 ||
       strcmp(chr_p_msgno,"552C01") == 0 ||
       strcmp(chr_p_msgno,"552R01") == 0)
    {
      if(strcmp(p_SEL_VAL[0].link_tag," ")!=0 &&
         strcmp(p_SEL_VAL[0].link_tag,APL_NULL_STRING) !=0)
      {
        EXEC SQL SELECT REG_BR_IND,NOMINAL_VALUE INTO :h_regbrflag,:h_nominal_value
                 FROM MT_INSTRUMENT
                 WHERE instr_code = :p_SEL_VAL[4].link_tag;

        IS_ANY_ORA_ERROR

   	if(sqlca.sqlcode == 1403 )
   	{
        	CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[4].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        	APL_GOBACK_FAIL
   	}


        EXEC SQL SELECT *  INTO :l_casecevent_struct_h:l_ca_casecevent_struct_ia_a 
                 FROM CASECEVENT where CA_EVENT = :p_SEL_VAL[3].link_tag and 
                                    INSTR_TYPE = :p_SEL_VAL[8].link_tag;

        IS_ANY_ORA_ERROR

   	if(sqlca.sqlcode == 1403 )
   	{
        	CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[3].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        	APL_GOBACK_FAIL
   	}


        if(strcmp(p_STAT_VAL[7].link_tag,"Y") == 0)
        {
          CA_Rtv_AccEntlPos(l_casecevent_struct_h,h_regbrflag,p_SEL_VAL[2].link_tag,p_SEL_VAL[4].link_tag,&h_safekeep_pos,&pos001,l_debug_info_ptr);

          fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"POS=",h_safekeep_pos);
          fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NPOS=",h_safekeep_pos*(p_SEL_VAL[9].NUM_VAL/p_SEL_VAL[11].NUM_VAL));
    	  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"FPOS=",h_safekeep_pos*(p_SEL_VAL[9].NUM_VAL/p_SEL_VAL[11].NUM_VAL)*h_nominal_value) ;
        }
        else
        {
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"POS=0");
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"NPOS=0");
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"FPOS=0");
          fprintf(p_Data_File,"%d%s\n",*p_rownum,"STPOS=0");
        }
      }
      else
      {
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"POS=0");
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"NPOS=0");
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"FPOS=0");
          fprintf(p_Data_File,"%d%s\n",*p_rownum,"STPOS=0");
      }
    }
    else if(strcmp(chr_p_msgno,"551N01") == 0 ||
       strcmp(chr_p_msgno,"551C01") == 0 ||
       strcmp(chr_p_msgno,"551R01") == 0 ||
		 strcmp(chr_p_msgno,"564N91") == 0 ||
		 strcmp(chr_p_msgno,"564R91") == 0 )
    {

        EXEC SQL SELECT REG_BR_IND,NOMINAL_VALUE INTO :h_regbrflag,:h_nominal_value
                 FROM MT_INSTRUMENT
                 WHERE instr_code = :p_SEL_VAL[4].link_tag;

        IS_ANY_ORA_ERROR

   	if(sqlca.sqlcode == 1403 )
   	{
        	CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[0].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        	APL_GOBACK_FAIL
   	}
		
	if (((strcmp(chr_p_msgno,"551N01") == 0) ||(strcmp(chr_p_msgno,"551R01") == 0)) && ( (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0)|| (strcmp(p_SEL_VAL[3].link_tag,"RD") == 0) ))
	{  
		
      l_earnings = atof(p_SEL_VAL[21].link_tag);
      l_EARNINGS_RATE = atof(p_SEL_VAL[20].link_tag);
      printf("l_income is %lf\n:", l_earnings);
	  fflush(stdout);

      printf("l_income_rt is %lf\n:", l_EARNINGS_RATE);
	  fflush(stdout);

		

	   if (l_EARNINGS_RATE==0)
	   {
               EXEC SQL SELECT *  INTO :l_casecevent_struct_h:l_ca_casecevent_struct_ia_a 
                 FROM CASECEVENT where CA_EVENT = :p_SEL_VAL[3].link_tag and 
                                   INSTR_TYPE ='BON';
	   }	
	   else if (l_earnings==0)
	   {

               EXEC SQL SELECT *  INTO :l_casecevent_struct_h:l_ca_casecevent_struct_ia_a 
                 FROM CASECEVENT where CA_EVENT = :p_SEL_VAL[3].link_tag and 
                                   INSTR_TYPE ='FMT';
	   }
	}		
	else
	{
          EXEC SQL SELECT *  INTO :l_casecevent_struct_h:l_ca_casecevent_struct_ia_a 
                 FROM CASECEVENT where CA_EVENT = :p_SEL_VAL[3].link_tag and 
                                    INSTR_TYPE = :p_SEL_VAL[8].link_tag;
	}
        IS_ANY_ORA_ERROR
   	if(sqlca.sqlcode == 1403 )
   	{
        	CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[3].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        	APL_GOBACK_FAIL
   	}
        

		  if(strcmp(p_STAT_VAL[7].link_tag,"Y") == 0 || strcmp(l_casecevent_struct_h.h_ca_event,"RN") == 0)
        {
          if(strcmp(l_casecevent_struct_h.h_ca_event,"RN") == 0)
				strcpy(l_casecevent_struct_h.h_entitl_base,ENTL_BASE_DL);
			
			
			 CA_Rtv_AccEntlPos(l_casecevent_struct_h,h_regbrflag,p_SEL_VAL[2].link_tag,p_SEL_VAL[4].link_tag,&h_safekeep_pos,&pos001,l_debug_info_ptr);

          fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"POS=",h_safekeep_pos);
          fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NPOS=",h_safekeep_pos);
          fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"FPOS=",h_safekeep_pos*h_nominal_value);
          fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"STPOS=",pos001);
        }
        else
        {
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"POS=0");
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"NPOS=0");
    	  fprintf(p_Data_File,"%d%s\n",*p_rownum,"FPOS=0");
          fprintf(p_Data_File,"%d%s\n",*p_rownum,"STPOS=0");
        }
    }
    else
    {
    	fprintf(p_Data_File,"%d%s\n",*p_rownum,"POS=0");
    	fprintf(p_Data_File,"%d%s\n",*p_rownum,"NPOS=0");
    	fprintf(p_Data_File,"%d%s\n",*p_rownum,"FPOS=0");
        fprintf(p_Data_File,"%d%s\n",*p_rownum,"STPOS=0");
    }
}



if(strcmp(p_SEL_VAL[1].link_val,"DISP_OF_FRACT") == 0)
{
  EXEC SQL SELECT map_desc
           INTO :chr_h_code_desc
           FROM PRO_SGENSTAT
           WHERE map_type = 'FRACT_DISP_TYPE' AND
                 map_val = :p_SEL_VAL[1].link_tag;

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
	strcpy(chr_h_code_desc,APL_NULL_STRING);

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FRACT_DESC=",chr_h_code_desc);
}

if(strcmp(p_SEL_VAL[3].link_val,"CA_EVENT") == 0)
{
 if(strcmp(chr_p_msgno,"563N02") != 0)
 {
	 if((strcmp(chr_p_msgno,"562N01")==0) && (strcmp(p_SEL_VAL[3].link_tag,"BB")==0))
	 {
  		EXEC SQL SELECT RATIO_PERC_IND,amount_ratio_flg,entitl_base,AUTO_DLCRT_IND
           INTO :h_ratio_perc_ind:i_ratio_pct_ind,
                :h_amt_rt_ind:i_amt_rt_ind,
                :h_entitl_base:i_entitl_base,
                :h_new_dl_ind:i_new_dl_ind
           FROM CASECEVENT
           WHERE CA_EVENT = :p_SEL_VAL[3].link_tag
                 and INSTR_TYPE = :p_SEL_VAL[8].link_tag;
  		IS_ANY_ORA_ERROR
	 }
	 /*else if(((strcmp(chr_p_msgno,"551N01")!=0) || (strcmp(chr_p_msgno,"551R01")!=0) || (strcmp(chr_p_msgno,"554C02")!=0) || (strcmp(chr_p_msgno,"554N02")!=0)) && ( (strcmp(p_SEL_VAL[3].link_tag,"BI") != 0) || (strcmp(p_SEL_VAL[3].link_tag,"RD") != 0)  )) */
	 else if((((strcmp(chr_p_msgno,"551N01")!=0) || (strcmp(chr_p_msgno,"551R01")!=0) || (strcmp(chr_p_msgno,"554C02")!=0) || (strcmp(chr_p_msgno,"554N02")!=0)) && ( (strcmp(p_SEL_VAL[3].link_tag,"BI") != 0) || (strcmp(p_SEL_VAL[3].link_tag,"RD") != 0)  )) )
	{
  		EXEC SQL SELECT RATIO_PERC_IND,amount_ratio_flg,entitl_base,AUTO_DLCRT_IND
           INTO :h_ratio_perc_ind:i_ratio_pct_ind,
                :h_amt_rt_ind:i_amt_rt_ind,
                :h_entitl_base:i_entitl_base,
                :h_new_dl_ind:i_new_dl_ind
           FROM CASECEVENT
           WHERE CA_EVENT = :p_SEL_VAL[3].link_tag
                 and INSTR_TYPE = :p_SEL_VAL[8].link_tag;
  		IS_ANY_ORA_ERROR
	}
	
	else
	{
       if(((strcmp(chr_p_msgno,"551N01")==0) || (strcmp(chr_p_msgno,"551R01")==0)) && ( (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0) || (strcmp(p_SEL_VAL[3].link_tag,"RD") == 0) ))
		{
		printf("WE HAVE COME HERE IN 551 LOOP\n");
		fflush(stdout);

      	l_earnings = atof(p_SEL_VAL[21].link_tag);
      	l_EARNINGS_RATE = atof(p_SEL_VAL[20].link_tag);
      	printf("l_income is %lf\n:", l_earnings);
		fflush(stdout);

      	printf("l_income_rt is %lf\n:", l_EARNINGS_RATE);
		fflush(stdout);

		}
		else if((strcmp(chr_p_msgno,"554N02")==0) && (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
		{
			#ifdef EMU_PROCESSING
				l_earnings=p_SEL_VAL[15].NUM_VAL;
				l_EARNINGS_RATE=p_SEL_VAL[18].NUM_VAL;
			#else
				l_earnings=p_SEL_VAL[16].NUM_VAL;
				l_EARNINGS_RATE=p_SEL_VAL[17].NUM_VAL;
			#endif
		}
		else if((strcmp(chr_p_msgno,"554C02")==0) && (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
		{
				l_earnings=p_SEL_VAL[16].NUM_VAL;
				l_EARNINGS_RATE=p_SEL_VAL[17].NUM_VAL;
		}
		printf("l_income is %lf\n",l_earnings);
		fflush(stdout);

		printf("l_income_rt is %lf\n",l_EARNINGS_RATE);
		fflush(stdout);

		if(l_EARNINGS_RATE==0)
		{
     		EXEC SQL SELECT RATIO_PERC_IND,amount_ratio_flg,entitl_base,AUTO_DLCRT_IND
        	  INTO :h_ratio_perc_ind:i_ratio_pct_ind,
           	    :h_amt_rt_ind:i_amt_rt_ind,
              	 :h_entitl_base:i_entitl_base,
               	:h_new_dl_ind:i_new_dl_ind
          		FROM CASECEVENT
          		WHERE CA_EVENT = :p_SEL_VAL[3].link_tag
           	     and INSTR_TYPE ='BON' ;
     		IS_ANY_ORA_ERROR
		}
		else if ( l_earnings==0)
		{
     		EXEC SQL SELECT RATIO_PERC_IND,amount_ratio_flg,entitl_base,AUTO_DLCRT_IND
          	INTO :h_ratio_perc_ind:i_ratio_pct_ind,
           	    :h_amt_rt_ind:i_amt_rt_ind,
              	 :h_entitl_base:i_entitl_base,
               	 :h_new_dl_ind:i_new_dl_ind
       	FROM CASECEVENT
        	WHERE CA_EVENT = :p_SEL_VAL[3].link_tag
        	     and INSTR_TYPE = 'FMT';
     	   IS_ANY_ORA_ERROR
		}
	}
	


   if(sqlca.sqlcode == 1403 )
   {
        CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[3].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        APL_GOBACK_FAIL
   }


  if(i_amt_rt_ind == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ATTYP=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ATTYP=",h_amt_rt_ind);

  if(i_ratio_pct_ind == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"RTTYP=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"RTTYP=",h_ratio_perc_ind);
  if(i_entitl_base == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ENTBASIS=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ENTBASIS=",h_entitl_base);
  if(i_new_dl_ind == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"CR_TRD=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"CR_TRD=",h_new_dl_ind);
  if( !strcmp(p_SEL_VAL[3].link_tag,"CD") || !strcmp(p_SEL_VAL[3].link_tag,"DV") || !strcmp(p_SEL_VAL[3].link_tag,"CR"))   
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'A');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'A');
	
	if(strcmp(p_SEL_VAL[3].link_tag,"CD") ==0)
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","CASH DIVIDEND");
   else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","DECREASE IN VALUE");  




#ifdef EMU_PROCESSING


	if((strcmp(chr_p_msgno,"551N02") == 0 ||
		 strcmp(chr_p_msgno,"551R03") == 0 ||
		 strcmp(chr_p_msgno,"551C05") == 0
		) && 
		 (strcmp(p_SEL_VAL[3].link_tag,"CD") == 0 || strcmp(p_SEL_VAL[3].link_tag,"DV") == 0 ) &&
		(strcmp(p_SEL_VAL[11].link_tag,APL_GRD_CCYCODE)== 0) )   
		


	{
		

      if ( CO_Chk_EMU_Period(APL_NULL_STRING,&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
      {
            APL_GOBACK_FAIL
      }

      if ( (int_period_flg == 2) || (int_period_flg == 3) )
      
		{
			if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
			{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
			AND int_a.currency_cd = :chr_l_grd_ccycode
		   AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
							FROM MT_EXCHRATE int_b
							WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode 
							AND int_b.currency_cd = :chr_l_grd_ccycode
						);
	}
	else
		if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
		{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode
			AND int_a.currency_cd = :chr_l_emu_ccycode
			AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
									FROM MT_EXCHRATE int_b
									WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode 
									AND int_b.currency_cd = :chr_l_emu_ccycode
								);
		}
		if(sqlca.sqlcode == 0)
		{
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"EXCH=",l_exchggrt);
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYEXCH=EUR");
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"ECCYCODE=EUR");
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINC_DUE=",atof(p_SEL_VAL[10].link_tag)/l_exchggrt);
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",atof(p_SEL_VAL[12].link_tag)/l_exchggrt);
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CRATE_INC=",atof(p_SEL_VAL[13].link_tag)/l_exchggrt);
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYCINC_DUE=EUR");
		}
	}
}
#endif


  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"BI") || !strcmp(p_SEL_VAL[3].link_tag,"CV"))
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'B');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'B');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","BOND INTEREST");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"SD") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'C');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'C');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","STOCK DIVIDEND");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"RT") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'D');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'D');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","RIGHTS SUBSCRIPTION");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"BO") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'E');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'E');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","BONUS");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"SP") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'L');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'L');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","STOCK SPLIT");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"MS") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'F');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'F');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","MAJOR STOCK SPLIT");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"MT") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'G');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'G');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","MATURITIES");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"MR") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'H');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'H');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","MANDATORY REDEMPTION");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"CN") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'I');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'I');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","CONVERSION");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"TO")  || !strcmp(p_SEL_VAL[3].link_tag,"BB"))
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'J');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'J');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","TENDER OFFER");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"ME") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'K');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'K');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","INVERSE STOCK SPLIT");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"RD") )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'X');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'X');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","BOND REDEMPTION");
  }
  else if( ( !strcmp(p_SEL_VAL[3].link_tag,"SM") ) || (!strcmp(p_SEL_VAL[3].link_tag,"OT")) )
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'X');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'X');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","SHAREHOLDERS MEETING");
  }
  else if( !strcmp(p_SEL_VAL[3].link_tag,"OP") || !strcmp(p_SEL_VAL[3].link_tag,"NS"))
  {
  	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'M');
	sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'M');
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","OFFER/PRIVILEGE");
  }
  
  #ifdef EMU_PROCESSING
  	else if( !strcmp(p_SEL_VAL[3].link_tag,"RN") )
  	{
  		fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'X');
		sprintf(chr_l_eventid_568,"%s%c",p_SEL_VAL[5].link_tag,'X');
  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CETYPSTR=","REDENOMINATION");
  	}
  #endif
  
 } 

} 


 
  if (   (!strncmp(chr_p_msgno,"550",3))
		|| (!strncmp(chr_p_msgno,"551",3))
      || (!strncmp(chr_p_msgno,"552",3))
      || (!strncmp(chr_p_msgno,"554",3))
      || (!strncmp(chr_p_msgno,"555",3))
      || (!strncmp(chr_p_msgno,"556",3))
      || (!strncmp(chr_p_msgno,"563",3))
      || (!strcmp(chr_p_msgno,"566R03"))
		|| (!strcmp(chr_p_msgno,"564N91"))
		|| (!strcmp(chr_p_msgno,"564R91"))
	  )
{


  memset(chr_l_ca_cashacc,APL_NULL_CHAR,APL_IBANACC_LEN);
  memset(chr_l_temp_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);


  printf("\nmsg_no is :%s: *****\n",chr_p_msgno);
  fflush(stdout);

  printf("\nselval2 is :%s: *****\n",p_SEL_VAL[2].link_tag);
  fflush(stdout);

  printf("\nselval4 is :%s: *****\n",p_SEL_VAL[4].link_tag);
  fflush(stdout);

  printf("\nselval9 is :%s: *****\n",p_SEL_VAL[9].link_tag);
  fflush(stdout);

  printf("\nselval7 is :%s: *****\n",p_SEL_VAL[7].link_tag);
  fflush(stdout);

  printf("\nselval12 is :%s: *****\n",p_SEL_VAL[12].link_tag);
  fflush(stdout);

  printf("\nselval10 is :%s: *****\n",p_SEL_VAL[10].link_tag);
  fflush(stdout);


  	if (   (!strncmp(chr_p_msgno,"550",3))
		|| (!strncmp(chr_p_msgno,"551",3))
      || (!strncmp(chr_p_msgno,"552",3))
      || (!strncmp(chr_p_msgno,"554",3))
		|| (!strcmp(chr_p_msgno,"564N91"))
		|| (!strcmp(chr_p_msgno,"564R91"))
 	  )
     		strcpy(chr_l_temp_client,p_SEL_VAL[2].link_tag);
 
  	if (strncmp(chr_p_msgno,"556",3)==0)
     strcpy(chr_l_temp_client,p_SEL_VAL[4].link_tag);
  
	if (strncmp(chr_p_msgno,"555",3)==0)
     strcpy(chr_l_temp_client,p_SEL_VAL[9].link_tag);
  
   if (strcmp(chr_p_msgno,"563N01")==0)
		{
  			#ifdef EMU_PROCESSING
     			strcpy(chr_l_temp_client,p_SEL_VAL[12].link_tag);
			#else 
     			strcpy(chr_l_temp_client,p_SEL_VAL[10].link_tag);
			#endif  
		}
  
	if (strcmp(chr_p_msgno,"563N02")==0)
     strcpy(chr_l_temp_client,p_SEL_VAL[6].link_tag);
	
	if ((strcmp(chr_p_msgno,"563N03")==0) || (strcmp(chr_p_msgno,"566R03")==0))
     strcpy(chr_l_temp_client,p_SEL_VAL[7].link_tag);
   
  	if (   (!strcmp(chr_p_msgno,"563N04"))
		 || (!strcmp(chr_p_msgno,"563N05"))
		)
     strcpy(chr_l_temp_client,p_SEL_VAL[1].link_tag);



   printf("\n******* Searching for cash client for client :%s: *****\n",chr_l_temp_client);
   fflush(stdout);

	  /*NIKHIL FOR IPO*/
	if(strcmp(p_SEL_VAL[3].link_tag,"NS")==0)
	{
		EXEC SQL DECLARE synd_member_cur CURSOR FOR
	   SELECT synd_code from casyndmem
		where  corp_id = :p_SEL_VAL[14].link_tag;

		EXEC SQL OPEN synd_member_cur;
		
		IS_ANY_ORA_ERROR
		strcpy(l_fin_syndmember,"");
      l_count=0;
		for( ; ; )
		{

			fflush(stdout);

			strcpy(l_tmp_syndmember,"");
				EXEC SQL  FETCH synd_member_cur into :l_tmp_syndmember:l_i_tmp_syndmember;

			if(sqlca.sqlcode == 1403)
				break;
			if(l_count>0)
				strcat(l_fin_syndmember,",");
			strcat(l_fin_syndmember,l_tmp_syndmember);
			l_count++;
		}
		EXEC SQL CLOSE synd_member_cur;
		
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SYND_MEMBER=",l_fin_syndmember);
	  i_ns_issueclsdt=-1;
	  printf("$$$$$$$$$NIkhil |%s| ",p_SEL_VAL[14].link_tag);
	  fflush(stdout);

	  printf("$$$$$$$$$NIkhil  p_SEL_VAL[3].link_tag |%s| ",p_SEL_VAL[3].link_tag);
	  fflush(stdout);

	  strcpy(chr_l_ns_issueclsdt,"");
	  EXEC SQL SELECT NVL(to_char(BC_TO_DATE,'dd/mm/yyyy hh:mi:ss'),'') into :chr_l_ns_issueclsdt:i_ns_issueclsdt
		  FROM CAEVENT
		  WHERE corp_id = :p_SEL_VAL[14].link_tag;

	  IS_ANY_ORA_ERROR
	  l_count=1;
	  
	  while(l_count>0)
	  {
		  exec sql select to_date(:chr_l_ns_issueclsdt,'dd/mm/yyyy hh:mi:ss')-1 
		  into :chr_l_tmp_issueclsdt from dual;
		  int_holiday_flag = 0;
		  if (  CO_Chk_Holiday(chr_l_tmp_issueclsdt,
					  &int_holiday_flag,
					  l_debug_info_ptr,APL_NULL_STRING)
				  == APL_FAILURE
			  )
		  {
			  APL_GOBACK_FAIL
		  }
		  printf(" $$$$$$$$$$$$$$ int_holiday_flag -|%d|",int_holiday_flag);
		  fflush(stdout);

		  if ( int_holiday_flag<=0 )
		  {
			  printf("Nikhil --- it's not a holiday");
			  fflush(stdout);

		     l_count=0;
		  }
		  else
		  {
			  strcpy(chr_l_ns_issueclsdt,chr_l_tmp_issueclsdt);
			  strcpy(chr_l_tmp_issueclsdt,"");
			  printf("Nikhil --- it's a holiday");
			  fflush(stdout);

		  }
			  
	  }
	  strcpy(chr_l_ns_issueclsdt,"");
	  exec sql select to_char(to_date(:chr_l_tmp_issueclsdt,'dd/mm/yyyy hh:mi:ss'),'yyyymmdd'),
	  to_char(to_date(:chr_l_tmp_issueclsdt,'dd/mm/yyyy hh:mi:ss'),'dd-mm-yyyy')
	  into  :chr_l_ns_issueclsdt,:chr_l_em_ns_issueclsdt 
	  from dual;
	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"IPO_REPLY=",chr_l_ns_issueclsdt);
	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EM_IPO_REPLY=",chr_l_em_ns_issueclsdt);
	}

   /* NIKHIL  564N11 Email Message*/
	if ((strcmp(chr_p_msgno,"551N01")==0) && (strcmp(p_SEL_VAL[3].link_tag,"RT")==0))
	{
		i_resparent_code=-1;
		i_resparent_name=-1;
		memset(chr_l_resparent_code,'\0',10);
		memset(chr_l_resparent_name,'\0',37);
		printf("\n$$$$$$$$$$$$$$$$$$$$ p_SEL_VAL[0].link_tag -|%s| \n",p_SEL_VAL[0].link_tag);
		fflush(stdout);

		printf("\n$$$$$$$$$$$$$$$$$$$$ p_SEL_VAL[0].link_val -|%s| \n",p_SEL_VAL[0].link_val);
		fflush(stdout);

		if(!strcmp(p_SEL_VAL[0].link_val,"RES_INSTR_CODE"))
		{
			EXEC SQL SELECT
				m.instr_parent
			   into :chr_l_resparent_code:i_resparent_code
				from mt_instrument m 
				where m.instr_code=:p_SEL_VAL[0].link_tag;

			IS_ANY_ORA_ERROR
			if(i_resparent_code==-1)	
				strcpy(chr_l_resparent_code,p_SEL_VAL[0].link_tag);
		
			EXEC SQL SELECT
				substr(replace(replace(m.instr_name,chr(13),NULL),chr(10),NULL),1,35)
				into :chr_l_resparent_name:i_resparent_name
				from mt_instrument m
				where m.instr_code=:chr_l_resparent_code;

			IS_ANY_ORA_ERROR
			printf("\n$$$$$$$$$$$$$$$$$$$$ The chr_l_resparent_code is : |%s| \n",chr_l_resparent_code);
			fflush(stdout);

			printf("\n$$$$$$$$$$$$$$$$$$$$ The chr_l_resparent_name is : |%s| \n",chr_l_resparent_name);
			fflush(stdout);

		
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PRNT_RES_CD=",chr_l_resparent_code);
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PRNT_RES_NM=",chr_l_resparent_name);
		}
		
	}

	      /* Vedavati 564N11 Email Message*/
	     if ((strcmp(chr_p_msgno,"551N01")==0) && (strcmp(p_SEL_VAL[3].link_tag,"BI")==0))
		  {
			  /* Vedavati 564N11 Email Message*/
			  printf("\n$$$$$$$$$$$$$$$$$$$$ vedi oUTside if  $$$$$$$$$$$$$$$$$$$$$$$$\n");
			  fflush(stdout);

			  printf("\n$$$$$$$$$$$$$$$$$$$$ p_SEL_VAL[4].link_val -|%s| \n",p_SEL_VAL[4].link_val);
			  fflush(stdout);

			  printf("\n$$$$$$$$$$$$$$$$$$$$ p_SEL_VAL[4].link_tag -|%s| \n",p_SEL_VAL[4].link_tag);
			  fflush(stdout);

			  printf("\n$$$$$$$$$$$$$$$$$$$$ p_SEL_VAL[25].link_tag -|%s| \n",p_SEL_VAL[25].link_tag);
			  fflush(stdout);

			  printf("\n$$$$$$$$$$$$$$$$$$$$ p_SEL_VAL[25].link_val -|%s| \n",p_SEL_VAL[25].link_val);
			  fflush(stdout);

			  
			  if(!strcmp(p_SEL_VAL[25].link_val,"INTEREST_TYPE") && !strcmp(p_SEL_VAL[25].link_tag,"L") )
			  {

				  EXEC SQL SELECT
					  BENCHMARK_CODE  into :chr_l_benchmark:i_l_benchmark 
					  from mt_flrate_instrument a where
					  a.INSTR_CODE = :p_SEL_VAL[4].link_tag;

				  IS_ANY_ORA_ERROR
					  printf("sqlca.sqlcode is : |%d|\n", sqlca.sqlcode);
				  fflush(stdout);

				  printf("\n$$$$$$$$$$$$$$$$$$$$ The Benchmark Value is : |%s| \n",chr_l_benchmark);
				  fflush(stdout);
			  }
			  printf("\n$$$$$$$$$$$$$$$$$$$$ The Benchmark Value is : |%s| \n",chr_l_benchmark);
			  fflush(stdout);

			  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"BENCHMARK=",chr_l_benchmark);
		  }
			  /*********/

if (APL_FAILURE == CO_Chk_CntryEnabled("CACASHACC_MSG","SETTLMENT_ACC",&l_cond_cacashacc,l_debug_info_ptr))
   {
         APL_GOBACK_FAIL
   }
    if ( (l_cond_cacashacc == 1))
      {
         EXEC SQL SELECT GL_ACCOUNT
               INTO :chr_l_ca_cashacc
               FROM DL_CASHCLT
               WHERE CLIENT=:chr_l_temp_client
               AND   DEFAULT_CCY='Y';

         IS_ANY_ORA_ERROR
      }
      else
      { 
	if(APL_FAILURE == CO_Chk_CntryEnabled("CACASHACC","IBANACC",&l_cond_ibanacc,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}
	if(l_cond_ibanacc == 1)
	{
	    EXEC SQL SELECT IBAN_CLT
		INTO :chr_l_ca_cashacc:i_ca_cashacc
		FROM DL_CASHCLT
		WHERE CLIENT=:chr_l_temp_client
		AND DEFAULT_CCY ='A';

		IS_ANY_ORA_ERROR
	
		if(strcmp(chr_l_ca_cashacc,APL_NULL_STRING)==0)
		{
			EXEC SQL SELECT IBAN_CLT
			INTO :chr_l_ca_cashacc:i_ca_cashacc
			FROM DL_CASHCLT
			WHERE CLIENT=:chr_l_temp_client
			AND DEFAULT_CCY ='X'
			AND ROWNUM<2;

		if(strcmp(chr_l_ca_cashacc,APL_NULL_STRING)==0)
		{
		    EXEC SQL SELECT GL_ACCOUNT
			INTO :chr_l_ca_cashacc:i_ca_cashacc
			FROM DL_CASHCLT
			WHERE CLIENT=:chr_l_temp_client
			AND DEFAULT_CCY = 'A';

			IS_ANY_ORA_ERROR

			if(sqlca.sqlcode == 1403)
			{
			   EXEC SQL SELECT GL_ACCOUNT 
			   INTO :chr_l_ca_cashacc:i_ca_cashacc
			   FROM DL_CASHCLT
			   WHERE CLIENT=:chr_l_temp_client
			   AND DEFAULT_CCY = 'X'
			   AND ROWNUM < 2;

			if(sqlca.sqlcode == 1403)
			{
			   EXEC SQL SELECT IBAN_CLT
				INTO :chr_l_ca_cashacc:i_ca_cashacc
				FROM DL_CASHCLT
				WHERE CLIENT=:chr_l_temp_client
				AND DEFAULT_CCY='Y';

				IS_ANY_ORA_ERROR

				if(strcmp(chr_l_ca_cashacc,APL_NULL_STRING)==0)
				{
				   EXEC SQL SELECT GL_ACCOUNT
					INTO :chr_l_ca_cashacc:i_ca_cashacc
					FROM DL_CASHCLT
					WHERE CLIENT=:chr_l_temp_client
					AND DEFAULT_CCY='Y';

					IS_ANY_ORA_ERROR

				if(sqlca.sqlcode == 1403)
				{
				    EXEC SQL SELECT IBAN_CLT
				       INTO :chr_l_ca_cashacc:i_ca_cashacc
				       FROM DL_CASHCLT
				       WHERE CLIENT = :chr_l_temp_client
				       AND GL_ACCOUNT = (SELECT GL_ACCOUNT 
								FROM MT_CLIENT
								WHERE cln_code = :chr_l_temp_client)
					AND ROWNUM < 2;

					IS_ANY_ORA_ERROR

					if(strcmp(chr_l_ca_cashacc,APL_NULL_STRING)==0)
					{
					   EXEC SQL SELECT CLN_GL_ACCOUNT
					      INTO :chr_l_ca_cashacc:i_ca_cashacc
					      FROM MT_CLIENT
					      WHERE cln_code = :chr_l_temp_client;

					      IS_ANY_ORA_ERROR
					}

				}
			}
		   }	
	   	}
		}
	   }
	   }
   else
      {

         
         if ( CO_Chk_CntryEnabled( "MULTI_CCY",
                               "CASH_ACC",
                               &l_mccy_cacc_exists,
                               l_debug_info_ptr
                            ) == APL_FAILURE
          )
         {
          APL_GOBACK_FAIL
         }
         
			if ((!strcmp(p_SEL_VAL[3].link_tag,"RD")||!strcmp(p_SEL_VAL[3].link_tag,"BI")) && l_mccy_cacc_exists && ((strcmp(chr_h_multi_ccycode,"EUR")==0) || (strcmp(chr_h_multi_ccycode,"USD")==0)))
         {

         
            memset(chr_h_ca_id_ent_stat,APL_NULL_CHAR,CORP_ID_LEN);

            if  (!strncmp(chr_p_msgno,"554",3))
               strcpy(chr_h_ca_id_ent_stat,p_SEL_VAL[0].link_tag);
            else if  (!strncmp(chr_p_msgno,"556",3))
                strcpy(chr_h_ca_id_ent_stat,p_SEL_VAL[10].link_tag);
            else if  ((!strcmp(chr_p_msgno,"551N01")) || (!strcmp(chr_p_msgno,"551R01")))
                strcpy(chr_h_ca_id_ent_stat,p_SEL_VAL[14].link_tag);

            EXEC SQL SELECT CA_CURRENCY INTO :chr_h_multi_ccycode
            FROM CAEVENT WHERE CORP_ID=:chr_h_ca_id_ent_stat;

            IS_ANY_ORA_ERROR

            if (sqlca.sqlcode == 1403)
               APL_GOBACK_FAIL

            EXEC SQL SELECT GL_ACCOUNT
            INTO :chr_l_ca_cashacc
            FROM DL_CASHCLT
            WHERE CLIENT=:chr_l_temp_client
            AND CURRENCY_CD = :chr_h_multi_ccycode
            AND DEFAULT_CCY IN ('A', 'X');

            IS_ANY_ORA_ERROR

            if (sqlca.sqlcode == 1403)
            {
               memset(chr_l_h_sundry_account,APL_NULL_CHAR,APL_CLIENT_LENGTH);
               if(APL_FAILURE == CO_Rtv_FldVal("CASH_ACC_MAINT","SUNDRY_ACCOUNT",chr_l_h_sundry_account,l_debug_info_ptr))
               {
                  APL_GOBACK_FAIL
               }

               EXEC SQL SELECT GL_ACCOUNT
               INTO :chr_l_ca_cashacc
               FROM DL_CASHCLT
               WHERE CLIENT=:chr_l_h_sundry_account
               AND CURRENCY_CD = :chr_h_multi_ccycode
               AND DEFAULT_CCY IN ('A', 'X');

               IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,"CASH ACCOUNT FOR SUNDRY ACCOUNT for: ",chr_h_multi_ccycode,APL_NULL_STRING)
            }
         }
         else
         {
     			EXEC SQL SELECT GL_ACCOUNT
            	   INTO :chr_l_ca_cashacc:i_l_ca_cashacc
               	FROM DL_CASHCLT
               	WHERE CLIENT=:chr_l_temp_client
               	AND   DEFAULT_CCY='A';

     			IS_ANY_ORA_ERROR

     			if(sqlca.sqlcode==1403)
     			{
         		EXEC SQL SELECT CLIENT
               	INTO :chr_l_ca_cashacc:i_l_ca_cashacc
               	FROM DL_CASHCLT
               	WHERE CLIENT=:chr_l_temp_client
               	AND   DEFAULT_CCY='Y';

 		         IS_ANY_ORA_ERROR
     			}
				/***********/

   		} /* End of else part*/
		}
   }
     if(sqlca.sqlcode == 1403)
        strcpy(chr_l_ca_cashacc,APL_NULL_STRING);
     printf("\n******* Got cash client :%s: *****\n",chr_l_ca_cashacc);
     fflush(stdout);
     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CACASHACC=",chr_l_ca_cashacc);
	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREPDATE=",chr_h_prepdate_new);

}
Alert("strcmp(p_SEL_VAL[10].link_val is |%s|\n",p_SEL_VAL[10].link_val);
if(   (strcmp(p_SEL_VAL[10].link_val,"OP_EVT_CLASS")==0) 
	|| (strcmp(p_SEL_VAL[11].link_val,"OP_EVT_CLASS")==0))  
{

if((strcmp(p_SEL_VAL[10].link_val,"OP_EVT_CLASS")==0))
  {
	Alert(" In First If \n");
  EXEC SQL SELECT map_desc 
           INTO :chr_h_code_desc
           FROM PRO_SGENSTAT
           WHERE map_type = 'OP_EVENT_TYPE' AND
                 map_val = :p_SEL_VAL[10].link_tag;

  IS_ANY_ORA_ERROR
	Alert("sqlca.sqlcode is |%d| \n",sqlca.sqlcode);
  }


if((strcmp(p_SEL_VAL[11].link_val,"OP_EVT_CLASS")==0))
  {
  EXEC SQL SELECT map_desc 
           INTO :chr_h_code_desc
           FROM PRO_SGENSTAT
           WHERE map_type = 'OP_EVENT_TYPE' AND
                 map_val = :p_SEL_VAL[11].link_tag;

  IS_ANY_ORA_ERROR
	Alert("sqlca.sqlcode is |%d| \n",sqlca.sqlcode);
  }

	
  if(sqlca.sqlcode == 1403)
	strcpy(chr_h_code_desc,APL_NULL_STRING);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"FREVETYP=",chr_h_code_desc);
  strcpy(chr_l_frevetyp_568,chr_h_code_desc); 

	Alert("chr_h_code_desc is |%s|\n",chr_h_code_desc);	
	
   if((strcmp(chr_h_code_desc,"CONVERSN")==0) || (strcmp(chr_h_code_desc,"MERGER")==0))
	{
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1CR=T");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1DB=F");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV2DB=T");
	}
   if((strcmp(chr_h_code_desc,"DVOP")==0) || (strcmp(chr_h_code_desc,"DRIP")==0))
	{
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1CR=T");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1DB=F");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV2DB=F");
	}
   if(strcmp(chr_h_code_desc,"REFPRIVL")==0)
	{
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1CR=F");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1DB=T");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV2DB=F");
	}
   
   
   if(strcmp(chr_h_code_desc,"REFWRTS")==0)
	{
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1CR=F");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1DB=F");
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV2DB=T");
	}
   if(strcmp(chr_h_code_desc,"REOFFER")==0)
        {
                fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1CR=T");
                fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV1DB=F");
                fprintf(p_Data_File,"%d%s\n",*p_rownum,"SMV2DB=T");
        }

}
if ((strcmp(chr_p_msgno,"564N91")==0) || (strcmp(chr_p_msgno,"564R91")==0))
{
	strcpy(chr_h_code_desc,APL_NULL_STRING);
	strcpy(chr_h_code_desc,p_SEL_VAL[22].link_tag);
	strcpy(chr_l_frevetyp_568,chr_h_code_desc);
}
Alert("p_SEL_VAL[1].link_val is |%s| \n",p_SEL_VAL[1].link_val);
if(strcmp(p_SEL_VAL[1].link_val,"INSTR_PARENT")==0)
{
Alert(" \n 1 \n");
 if(strcmp(chr_p_msgno,"563N01")==0)
 {
  EXEC SQL SELECT INSTR_TYPE,instr_isin,substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35),currency_cd ,REG_BR_IND
           into :h_typeofinstr,:h_instr_isin:i_instr_isin,:h_instr_name,:h_currencycode,:h_regbrflag
           from MT_INSTRUMENT 
           where instr_code = :p_SEL_VAL[1].link_tag;
  IS_ANY_ORA_ERROR
   if(sqlca.sqlcode == 1403 )
   {
        CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[1].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        APL_GOBACK_FAIL
   }

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PINSTR_CODE=",p_SEL_VAL[1].link_tag);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PTYPEOFINSTR=",h_typeofinstr);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PISIN=",h_instr_isin);
  fprintf(p_Data_File,"%d%s%s%c%s\n",*p_rownum,"PCCYCODE=/",h_currencycode,'/',h_regbrflag);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PINSTR_NAME=",h_instr_name);

	
   EXEC SQL SELECT
	substr(concat(e.instr_code,concat(concat(to_char(to_date(e.DECLARE_DT),'YY'),          lpad(((to_date(e.DECLARE_DT) - to_date(concat(concat('01/01/',to_char(e.DECLARE_DT,'YYYY')),' 12:00:00')))+1),3,'0')),lpad(substr(to_char(e.EVNT_INDNT),1,2),2,'0'))),1,16) 
	INTO :h_tag20_caid
	FROM CAEVENT e
   where e.corp_id = :p_SEL_VAL[9].link_tag; 

	
	printf("Selecting for N01 using corp_id - (%s)\n",p_SEL_VAL[9].link_tag);
	if (APL_ZERO_RESULT_SET)
	{
		strcpy(h_tag20_caid,"NONREF");
  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EVENTID=",h_tag20_caid);
	}
	else
	{
      
  		fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",h_tag20_caid,'D');
	}
	

#ifdef EMU_PROCESSING
	if (!strcmp(p_SEL_VAL[11].link_tag,"RN"))
	{
	
	if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
	{
	EXEC SQL SELECT
	int_a.EXCHGRT INTO :l_exchggrt
	FROM MT_EXCHRATE int_a
	WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
	AND int_a.currency_cd = :chr_l_grd_ccycode
	AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
							FROM MT_EXCHRATE int_b
							WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode 
							AND int_b.currency_cd = :chr_l_grd_ccycode
						);
	}
	else
		if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
		{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode
			AND int_a.currency_cd = :chr_l_emu_ccycode
			AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
									FROM MT_EXCHRATE int_b
									WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode 
									AND int_b.currency_cd = :chr_l_emu_ccycode
								);
		}

	EXEC SQL SELECT grd_pos
		INTO :l_grd_pos
		FROM PRO_EURO_TEMP
	   WHERE instr_code = :p_SEL_VAL[1].link_tag
	   AND location_cd = :p_SEL_VAL[13].link_tag
	   AND client = :p_SEL_VAL[12].link_tag
		AND PROC_AREA = 'REDEN';

	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"FENT_POS=",l_grd_pos);
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"EXCH=",l_exchggrt);
	}
	
	
	else if (!strcmp(p_SEL_VAL[11].link_tag,"RL") && !strcmp(p_SEL_VAL[14].link_tag,"GRD"))
	{
				
		if ( CO_Chk_EMU_Period(APL_NULL_STRING,&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
		{
				APL_GOBACK_FAIL
		}

		if ( (int_period_flg == 2) || (int_period_flg == 3) )
		  
		{
			if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
			{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
			AND int_a.currency_cd = :chr_l_grd_ccycode
			AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
							FROM MT_EXCHRATE int_b
							WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode 
							AND int_b.currency_cd = :chr_l_grd_ccycode
						);
		}
		else
		if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
		{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode
			AND int_a.currency_cd = :chr_l_emu_ccycode
			AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
									FROM MT_EXCHRATE int_b
									WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode 
									AND int_b.currency_cd = :chr_l_emu_ccycode
								);
		}
		
		if(sqlca.sqlcode == 0)
		{
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
			

			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CSUB_PRICE=",atof(p_SEL_VAL[15].link_tag)/l_exchggrt);
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCCYSUB_PRICE=EUR");
			
		}
	 }
	}
	
	
#endif

 }
 else if(strcmp(chr_p_msgno,"563N02")==0)
 {

  EXEC SQL SELECT INSTR_PARENT INTO :h_instr_parent:i_instr_parent FROM MT_INSTRUMENT 
           WHERE instr_code = :p_SEL_VAL[1].link_tag;

  IS_ANY_ORA_ERROR

  if(i_instr_parent == -1 || sqlca.sqlcode == 1403)
	strcpy(h_instr_parent,p_SEL_VAL[1].link_tag);

  int_l_event_nbr = p_SEL_VAL[5].NUM_VAL;


	printf ("***TRACE STATEMENT : I'm looking for event with caId = (%s)***\n",p_SEL_VAL[9].link_tag );

 exec sql select substr(concat(concat(int_a.NEW_SAFEK_QTY,':'),int_a.OLD_STK_QTY),1,9) ,int_a.NEW_SAFEK_RT,int_a.RES_INSTR_CODE,
                  decode(int_a.EARNINGS_RATE,0,'0',int_a.EARNINGS_RATE),
                  substr(to_char(int_a.EXPIRY_DATE,'YYMMDD'),1,6),
                  substr(to_char(int_a.EX_DATE,'YYMMDD'),1,6),
                  substr(to_char(int_a.REC_DATE,'YYMMDD'),1,6),
                  substr(to_char(int_a.RESPONSE_DATE,'YYMMDD'),1,6),
                  substr(to_char(int_a.dateof_payment,'YYMMDD'),1,6),
                  int_a.SUB_PR,int_b.currency_cd,
                  concat(concat(int_a.SUB_BASE_QUANTITY,':'),int_a.SUB_NEW_QUANTITY),
                  int_a.RHTS_CLASS,
                  c.QUANTITY_BAL,c.INSTR_INC_BAL,int_b.INSTR_TYPE,
					
					substr(concat(int_a.instr_code,concat(concat(to_char(to_date(int_a.DECLARE_DT),'YY'),lpad(((to_date(int_a.DECLARE_DT) - to_date(concat(concat('01/01/',to_char(int_a.DECLARE_DT,'YYYY')),' 12:00:00')))+1),3,'0')),lpad(substr(to_char(int_a.EVNT_INDNT),1,2),2,'0'))),1,16), 
					
               
               substr(to_char(int_a.DECLARE_DT,'YYYYMMDD'),1,8),
               substr(to_char(int_a.DECLARE_DT,'DD-MM-YYYY'),1,10) as EM_DECL_DT,
                substr(to_char(int_a.EX_DATE,'YYYYMMDD'),1,8),
                substr(to_char(int_a.REC_DATE,'YYYYMMDD'),1,8),
                substr(to_char(int_a.RESPONSE_DATE,'YYYYMMDD'),1,8),
                substr(to_char(int_a.dateof_payment,'YYYYMMDD'),1,8),
                substr(concat(concat(concat(int_a.NEW_SAFEK_QTY,',/'),int_a.OLD_STK_QTY),','),1,11),
					 decode(int_a.NEW_SAFEK_RT,NULL,'0',0,'0',int_a.NEW_SAFEK_RT),int_b.currency_cd 
               
					
					
           into :chr_h_ratio:i_ratio,:h_rt:i_rt,:h_res_instr_code:i_res_instr_code,
                :h_earnings_rt:i_earnings_rt,
                :h_expire_date:i_expire_date,:h_ex_date:i_ex_date,:h_rec_date:i_rec_date,
                :h_respons_date:i_respons_date,:h_pymt_dt:i_pymt_dt,
                :h_sub_pr:i_sub_pr,:h_currencycode,
                :chr_h_sub_ratio:i_sub_ratio,:h_rights_class:i_rights_class,
                :h_quantity_due:i_quantity_due,
                :h_instr_inc_bal:i_instr_inc_bal,:h_typeofinstr:i_typeofinstr,
					 :h_tag20_caid,
                :chr_h_decl_dt_new:i_decl_dt_new,
                :chr_h_em_decl_dt_new:i_em_decl_dt_new,
					 :chr_h_ex_dt_new:i_ex_dt_new,:chr_h_rec_dt_new:i_rec_dt_new,
                :chr_h_respons_dt_new:i_respons_dt_new,:chr_h_pay_dt_new:i_pay_dt_new,
                :chr_h_ratio_new,:h_stock_ae_rate,:chr_h_ccycode_new
           from CAEVENT int_a,MT_INSTRUMENT int_b,CAENTITLEMENT c
           where int_a.corp_id = :p_SEL_VAL[9].link_tag and
                 int_a.corp_id = c.corp_id and
                 c.client = :p_SEL_VAL[6].link_tag and
                 int_a.instr_code = int_b.instr_code;
					  

  IS_ANY_ORA_ERROR

	
	printf("Selecting for N02 using corp_id - (%s)\n",p_SEL_VAL[9].link_tag);

  if(sqlca.sqlcode == 1403)
  {
	h_earnings_rt = 0;
	strcpy(h_res_instr_code," ");
	strcpy(h_typeofinstr,"");
	strcpy(h_expire_date,"UNKNOWN");
	strcpy(h_ex_date,"UNKNOWN");
	strcpy(h_rec_date,"UNKNOWN");
	strcpy(h_pymt_dt,"UNKNOWN");
	strcpy(h_respons_date,"UNKNOWN");
	h_rt = 0;
	strcpy(chr_h_ratio,"UNKNOWN");
   
   strcpy(chr_h_ratio_new,"UNKNOWN");
   strcpy(chr_h_decl_dt_new,"UNKNOWN");
   strcpy(chr_h_em_decl_dt_new,"UNKNOWN");
   strcpy(chr_h_ex_dt_new,"UNKNOWN");
   strcpy(chr_h_rec_dt_new,"UNKNOWN");
   strcpy(chr_h_pay_dt_new,"UNKNOWN");
   strcpy(chr_h_respons_dt_new,"UNKNOWN");
   
	strcpy(chr_h_sub_ratio,"UNKNOWN");

	h_quantity_due = 0;
	h_instr_inc_bal = 0;
	h_sub_pr = 0;
	h_rights_class = APL_NULL_CHAR;
	strcpy( chr_eventrecfnd,"F");
	
	strcpy(h_tag20_caid,"NONREF");
	
   h_stock_ae_rate = 0; 
	strcpy(chr_h_ccycode_new,"UKN"); 
  }
	else
	{
		strcpy( chr_eventrecfnd,"T");
	}

  if(i_earnings_rt == -1)
	h_earnings_rt = 0;
  if(i_res_instr_code == -1)
	strcpy(h_res_instr_code," ");
  if(i_typeofinstr == -1)
	strcpy(h_typeofinstr,"");
  if(i_expire_date == -1)
	strcpy(h_expire_date,APL_NULL_STRING);
  if(i_ex_date == -1)
	strcpy(h_ex_date,APL_NULL_STRING);
  if(i_rec_date == -1)
	strcpy(h_rec_date,APL_NULL_STRING);
  if(i_pymt_dt == -1)
	strcpy(h_pymt_dt,APL_NULL_STRING);
  if(i_respons_date == -1)
	strcpy(h_respons_date,APL_NULL_STRING);
  if(i_rt == -1)
	h_rt = 0;
  if(i_ratio == -1)
	strcpy(chr_h_ratio,APL_NULL_STRING);
  if(i_sub_ratio == -1)
	strcpy(chr_h_sub_ratio,APL_NULL_STRING);
  if(i_sub_pr == -1)
	h_sub_pr = 0;
  if(i_quantity_due  == -1)
	h_quantity_due = 0;
  if(i_instr_inc_bal  == -1)
	h_instr_inc_bal = 0;
  if(i_rights_class == -1)
	h_rights_class = APL_NULL_CHAR;

  
  if(i_decl_dt_new == -1)
   strcpy(chr_h_decl_dt_new,APL_NULL_STRING);
  if(i_em_decl_dt_new == -1)
   strcpy(chr_h_em_decl_dt_new,APL_NULL_STRING);
  if(i_ex_dt_new == -1)
   strcpy(chr_h_ex_dt_new,APL_NULL_STRING);
  if(i_rec_dt_new == -1)
   strcpy(chr_h_rec_dt_new,APL_NULL_STRING);
  if(i_pay_dt_new == -1)
   strcpy(chr_h_pay_dt_new,APL_NULL_STRING);
  if(i_respons_dt_new == -1)
   strcpy(chr_h_respons_dt_new,APL_NULL_STRING);

 
	 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RATIO=",chr_h_ratio);

    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_RATIO=",chr_h_ratio_new);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DECL_DT=",chr_h_decl_dt_new);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EM_DECL_DT=",chr_h_em_decl_dt_new);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_EX_DT=",chr_h_ex_dt_new);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_REC_DT=",chr_h_rec_dt_new);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_RESP_DT=",chr_h_respons_dt_new);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PAY_DT=",chr_h_pay_dt_new);

    fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"STOCK_RATE=",h_stock_ae_rate); 
    fprintf(p_Data_File,"%d%s\n",*p_rownum,"DECSTOCK_RATE=12"); 

	 
	 if (strcmp(chr_h_ccycode_new,"UKN") == 0) 
	 {
    	fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYSTOCK_RATE=UNKNOWN"); 
	 }
	 else 
	 {
    	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYSTOCK_RATE=",chr_h_ccycode_new); 
	 }

 
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RATE=",h_rt);

  	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"INCOME_RT=",h_earnings_rt);
 
	 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EXPIRE_DT=",h_expire_date);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EX_DT=",h_ex_date);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"REC_DT=",h_rec_date);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RESPONS_DT=",h_respons_date);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PAY_DT=",h_pymt_dt);

  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PSUB_PRICE=",h_sub_pr);
	 

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYPSUB_PRICE=",h_currencycode);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYINCOME_RT=",h_currencycode);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SUB_RATIO=",chr_h_sub_ratio);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EVNTRECFND=",chr_eventrecfnd);
	
   
   if (strcmp(h_tag20_caid,"NONREF"))
   {
	fprintf(p_Data_File,"%d%s%s%c\n",*p_rownum,"EVENTID=",h_tag20_caid,'D');
	}
   else
   {
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"EVENTID=",h_tag20_caid);
   }
   
  if ( h_rights_class == APL_NULL_CHAR )
	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RIGHTS_TYPE=","UNKNOWN");
  else
	  fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"RIGHTS_TYPE=",h_rights_class);

      if(l_cond_ca_7dec!=0)
      {
         memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
         sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
         fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"QTY_DUE=",h_quantity_due);
      }
      else
	  		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"QTY_DUE=",h_quantity_due);

  	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"INC_DUE=",h_instr_inc_bal);

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYINC_DUE=",h_currencycode);

  

  if(strcmp(h_typeofinstr,"") != 0)
  {
  EXEC SQL SELECT RATIO_PERC_IND,amount_ratio_flg,entitl_base,AUTO_DLCRT_IND
           INTO :h_ratio_perc_ind:i_ratio_pct_ind,
                :h_amt_rt_ind:i_amt_rt_ind,
                :h_entitl_base:i_entitl_base,
                :h_new_dl_ind:i_new_dl_ind
           FROM CASECEVENT
           WHERE CA_EVENT = 'RT'
                 and INSTR_TYPE = :h_typeofinstr;
  IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403 )
   {
        CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, h_typeofinstr, "RT",APL_NULL_STRING, __LINE__, __FILE__);
        APL_GOBACK_FAIL
   }

  } 
  else
  {
      i_amt_rt_ind = -1;
      i_ratio_pct_ind = -1;
      i_entitl_base = -1;
      i_new_dl_ind = -1;
  } 
  if(i_amt_rt_ind == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ATTYP=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ATTYP=",h_amt_rt_ind);

  if(i_ratio_pct_ind == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"RTTYP=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"RTTYP=",h_ratio_perc_ind);
  if(i_entitl_base == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ENTBASIS=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ENTBASIS=",h_entitl_base);
  if(i_new_dl_ind == -1)
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"CR_TRD=",APL_NULL_CHAR);
  else
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"CR_TRD=",h_new_dl_ind);
 
  strcpy(l_ms_dynamic_val[0].link_val,"RES_INSTR_CODE");
  strcpy(l_ms_dynamic_val[0].link_tag,h_res_instr_code);
  strcpy(l_ms_dynamic_val[1].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[2].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[3].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[4].link_val,"INSTR_CODE");
  strcpy(l_ms_dynamic_val[4].link_tag,h_instr_parent);
  strcpy(l_ms_dynamic_val[5].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[6].link_val,"LNOTE_NBR");
  if(i_info_nbr == -1)
      strcpy(h_info_nbr,APL_NULL_STRING);
  strcpy(l_ms_dynamic_val[6].link_tag,p_SEL_VAL[11].link_tag);
  strcpy(l_ms_dynamic_val[7].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[8].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[9].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[10].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[11].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[12].link_val,"DUMMY");
  strcpy(l_ms_dynamic_val[13].link_val,"QUANTITY_RECEIVED");
  l_ms_dynamic_val[13].NUM_VAL = p_SEL_VAL[13].NUM_VAL;
  strcpy(l_ms_dynamic_val[14].link_val,"");
  strcpy(l_ms_dynamic_val[14].link_tag,"");
  	
  if(APL_FAILURE == MS_Rtv_OTHValues563N02(chr_p_msgno,3,l_ms_dynamic_val,p_STAT_VAL,p_rownum,p_msg_seq_no,p_Data_File,l_debug_info_ptr))
      APL_GOBACK_FAIL
  else
		l_is_563N02=1; 
     

 } 
}
if(((l_is_563N02 != 1) && (strcmp(p_SEL_VAL[12].link_val,"PROC_OTH")==0)) ||((strcmp(chr_p_msgno,"555R01")==0) && (strcmp(p_SEL_VAL[14].link_val,"PROC_OTH")==0))) 
{
  memset(chr_temp_part,APL_NULL_CHAR,61);
  memset(h_proc_oth,APL_NULL_CHAR,241);
  if(strcmp(chr_p_msgno,"555R01")==0)
  {
  		strcpy(h_proc_oth,p_SEL_VAL[14].link_tag);
  }
  else
  		strcpy(h_proc_oth,p_SEL_VAL[12].link_tag);
  if(strcmp(h_proc_oth,APL_NULL_STRING)!=0)
  {

  	strncpy(chr_temp_part,h_proc_oth,35);

  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC1=",chr_temp_part);

  	memset(chr_temp_part,APL_NULL_CHAR,61);
	if(strlen(h_proc_oth) > 35)
	{
  	chr_temp_part = &h_proc_oth[35];
  	strncpy(chr_h_othproc1,chr_temp_part,35);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC2=",chr_h_othproc1);
	}
	else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC2=",APL_NULL_STRING);

	if(strlen(h_proc_oth) > 70)
	{
  	chr_temp_part = &h_proc_oth[70];
  	memset(chr_h_othproc1,APL_NULL_CHAR,61);
  	strncpy(chr_h_othproc1,chr_temp_part,35);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC3=",chr_h_othproc1);
	}
	else
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC3=",APL_NULL_STRING);
  }
  else
  {
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC1=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC2=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"OTHPROC3=",APL_NULL_STRING);
  }
  memset(chr_temp_part,APL_NULL_CHAR,61);
  
} 

printf("\n Vaibhav 11Sept2007 INCUS070 Start.....");
printf("\n Value of l_is_563N02:=[%d]",l_is_563N02);
printf("\n Value of p_SEL_VAL[2].link_val := [%s]",p_SEL_VAL[2].link_val);
printf("\n Value of p_SEL_VAL[26].link_val := [%s]",p_SEL_VAL[26].link_val);
printf("\n Value of p_SEL_VAL[26].link_tag := [%s]",p_SEL_VAL[26].link_tag);
printf("\n Vaibhav 11Sept2007 INCUS070 End.....");

if((l_is_563N02 != 1) && ((strcmp(p_SEL_VAL[2].link_val,"CONTACT_DETAILS")==0) || (strcmp(p_SEL_VAL[26].link_val,"CONTACT_DETAILS")==0))) 
{

  memset(chr_temp_part,APL_NULL_CHAR,61);

  memset(h_proc_oth,APL_NULL_CHAR,241);

  if(strcmp(p_SEL_VAL[2].link_val,"CONTACT_DETAILS")==0)  /* Vaibhav 11Sept2007 INCUS070 Start.... */
  { 
  strcpy(h_proc_oth,p_SEL_VAL[2].link_tag);
  }
  if(strcmp(p_SEL_VAL[26].link_val,"CONTACT_DETAILS")==0)
  {
  strcpy(h_proc_oth,p_SEL_VAL[26].link_tag);
  }                                                      /* Vaibhav 11Sept2007  INCUS070 End.... */
  if(strcmp(h_proc_oth,APL_NULL_STRING)!=0)
  {

  	strncpy(chr_temp_part,h_proc_oth,60);

  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS1=",chr_temp_part);

  	memset(chr_temp_part,APL_NULL_CHAR,61);
	if(strlen(h_proc_oth) > 60)
        {
  	chr_temp_part = &h_proc_oth[60];
  	strncpy(chr_h_othproc1,chr_temp_part,60); 
        if(strlen(chr_h_othproc1)!=0)
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS2=",chr_h_othproc1);
        else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS2=",APL_NULL_STRING);
	}
	else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS2=",APL_NULL_STRING);

	if(strlen(h_proc_oth) > 120)
        {
  	chr_temp_part = &h_proc_oth[120];
  	memset(chr_h_othproc1,APL_NULL_CHAR,61);
  	strncpy(chr_h_othproc1,chr_temp_part,60);
        if(strlen(chr_h_othproc1)!=0)
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS3=",chr_h_othproc1);
        else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS3=",APL_NULL_STRING);
	}
	else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS3=",APL_NULL_STRING);

	if(strlen(h_proc_oth) > 180)
        {
  	chr_temp_part = &h_proc_oth[180];
  	memset(chr_h_othproc1,APL_NULL_CHAR,61);
  	strncpy(chr_h_othproc1,chr_temp_part,60);
        if(strlen(chr_h_othproc1)!=0)
  	   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS4=",chr_h_othproc1);
        else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS4=",APL_NULL_STRING);
	}
	else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS4=",APL_NULL_STRING);
 
   memset(chr_new_addr_part, APL_NULL_CHAR, 241);
   memset(chr_new_othproc, APL_NULL_CHAR, 36);
   strcpy(chr_new_addr_part, h_proc_oth);
   strncpy(chr_new_othproc, chr_new_addr_part, 35);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS1=",chr_new_othproc);


   if(strlen(h_proc_oth) > 35)
   {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 35);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

		if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS2=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS2=",APL_NULL_STRING);
   }
   else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS2=",APL_NULL_STRING);


   if(strlen(h_proc_oth) > 70)
   {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 70);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

      if(strlen(chr_new_othproc) != 0)   
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS3=",chr_new_othproc);
      else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS3=",APL_NULL_STRING);
   }
   else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS3=",APL_NULL_STRING);


   if(strlen(h_proc_oth) > 105)
   {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 105);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

		if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS4=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS4=",APL_NULL_STRING);
   }
   else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS4=",APL_NULL_STRING);


   if(strlen(h_proc_oth) > 140)
   {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 140);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

		if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS5=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS5=",APL_NULL_STRING);
   }
 else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS5=",APL_NULL_STRING);


   if(strlen(h_proc_oth) > 175)
   {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 175);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

		if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS6=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS6=",APL_NULL_STRING);
   }
   else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS6=",APL_NULL_STRING);


   if(strlen(h_proc_oth) > 210)
   {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 210);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);
	
		if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS7=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS7=",APL_NULL_STRING);
   }
   else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS7=",APL_NULL_STRING);


   

  }
  else
  {
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS1=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS2=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS3=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ADDRESS4=",APL_NULL_STRING);

 
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS1=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS2=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS3=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS4=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS5=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS6=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_ADDRESS7=",APL_NULL_STRING);
  

  }

  memset(chr_temp_part,APL_NULL_CHAR,61);
  

} 

if((l_is_563N02 != 1) && (strcmp(p_SEL_VAL[1].link_val,"CA_ADDRDET")==0)) 
{
  memset(chr_temp_part,APL_NULL_CHAR,61);
  memset(h_proc_oth,APL_NULL_CHAR,241);
  strcpy(h_proc_oth,p_SEL_VAL[1].link_tag);
  if(strcmp(h_proc_oth,APL_NULL_STRING)!=0)
  {

  	strncpy(chr_temp_part,h_proc_oth,60);

  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD1=",chr_temp_part);

  	memset(chr_temp_part,APL_NULL_CHAR,61);

	if(strlen(h_proc_oth) > 60)
	{
  	chr_temp_part = &h_proc_oth[60];
  	strncpy(chr_h_othproc1,chr_temp_part,60); 
        if(strlen(chr_h_othproc1)!=0)
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD2=",chr_h_othproc1);
        else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD2=",APL_NULL_STRING);
	}
	else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD2=",APL_NULL_STRING);

	if(strlen(h_proc_oth) > 120)
	{
  	chr_temp_part = &h_proc_oth[120];
  	memset(chr_h_othproc1,APL_NULL_CHAR,61);
  	strncpy(chr_h_othproc1,chr_temp_part,60);
        if(strlen(chr_h_othproc1)!=0)
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD3=",chr_h_othproc1);
        else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD3=",APL_NULL_STRING);
	}
	else
  	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD3=",APL_NULL_STRING);
   
   memset(chr_new_addr_part, APL_NULL_CHAR, 241);
   memset(chr_new_othproc, APL_NULL_CHAR, 36);
   strcpy(chr_new_addr_part, h_proc_oth);
   strncpy(chr_new_othproc, chr_new_addr_part, 35);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD1=",chr_new_othproc);

  if(strlen(h_proc_oth) > 35)
  {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 35);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

      if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD2=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD2=",APL_NULL_STRING);
  }
  else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD2=",APL_NULL_STRING);

  if(strlen(h_proc_oth) > 70)
  {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 70);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

      if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD3=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD3=",APL_NULL_STRING);
  }
  else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD3=",APL_NULL_STRING);


  if(strlen(h_proc_oth) > 105)
  {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 105);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

      if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD4=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD4=",APL_NULL_STRING);
  }
  else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD4=",APL_NULL_STRING);

  if(strlen(h_proc_oth) > 140)
  {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 140);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

      if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD5=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD5=",APL_NULL_STRING);
  }
  else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD5=",APL_NULL_STRING);


  if(strlen(h_proc_oth) > 175)
  {
      memset(chr_new_addr_part, APL_NULL_CHAR, 241);
      memset(chr_new_othproc, APL_NULL_CHAR, 36);
      strcpy(chr_new_addr_part, h_proc_oth + 175);
      strncpy(chr_new_othproc, chr_new_addr_part, 35);

      if(strlen(chr_new_othproc) != 0)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD6=",chr_new_othproc);
      else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD6=",APL_NULL_STRING);
  }
  else
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD6=",APL_NULL_STRING);

   

  }
  else
  {
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD1=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD2=",APL_NULL_STRING);
  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CORP_ADD3=",APL_NULL_STRING);
   
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD1=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD2=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD3=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD4=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD5=",APL_NULL_STRING);
   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_CORP_ADD6=",APL_NULL_STRING);
   

  }
  memset(chr_temp_part,APL_NULL_CHAR,61);
  
} 


if (strncmp(chr_p_msgno,"551",3) == 0)
{
	 
	 res_felig_entitl_pos     = 0.00;
	 new_res_felig_entitl_pos = 0.00;
	 adj_res_felig_entitl_pos = 0.00;

	if((strcmp(chr_p_msgno,"551N01")==0) || (strcmp(chr_p_msgno,"551R01")==0) || (strcmp(chr_p_msgno,"564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0) )
	{
	 CA_Rtv_AccEntlPos(l_casecevent_struct_h,h_regbrflag,p_SEL_VAL[2].link_tag,p_SEL_VAL[4].link_tag,&h_safekeep_pos,&pos001,l_debug_info_ptr);
	}
	else
	{
    CA_Rtv_AccEntlPosMast(l_casecevent_struct_h, h_regbrflag, p_SEL_VAL[2].link_tag, p_SEL_VAL[4].link_tag, &h_safekeep_pos, &pos001, l_debug_info_ptr);
	}

    if ( h_ratio_perc_ind == 'R' )
      res_felig_entitl_pos = h_safekeep_pos * (p_SEL_VAL[10].NUM_VAL / p_SEL_VAL[11].NUM_VAL);
    
	 if ( h_ratio_perc_ind == 'P' )
		res_felig_entitl_pos = h_safekeep_pos * (atof(p_SEL_VAL[16].link_tag) / 100);

	new_res_felig_entitl_pos = floor(res_felig_entitl_pos);

	if((res_felig_entitl_pos - new_res_felig_entitl_pos) > 0)
	{
		if (strncmp(p_SEL_VAL[17].link_tag,FRACT_DISP_RNDOFF,1) == 0)
			adj_res_felig_entitl_pos = ceil(res_felig_entitl_pos);

		else if ( (strncmp(p_SEL_VAL[17].link_tag,CASH_IND,1) == 0) ||
					 (strncmp(p_SEL_VAL[17].link_tag,DISRGD_IND,1) == 0) )
			adj_res_felig_entitl_pos = new_res_felig_entitl_pos;

      
      else if (strncmp(p_SEL_VAL[17].link_tag,FRACT_DISP_STDRND,1) == 0)
      {
           if((res_felig_entitl_pos - new_res_felig_entitl_pos) >= 0.5)
               adj_res_felig_entitl_pos = (new_res_felig_entitl_pos + 1);
           else
               adj_res_felig_entitl_pos = new_res_felig_entitl_pos;
      }
      else if (strncmp(p_SEL_VAL[17].link_tag,FRACT_DISP_IND,1) == 0)
         adj_res_felig_entitl_pos = res_felig_entitl_pos;
	}
	else
	{
		adj_res_felig_entitl_pos = new_res_felig_entitl_pos;
	}

    	if(l_cond_ca_7dec!=0)
    	{
      	memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
      	sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
			fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"RES_FENT_POS=", adj_res_felig_entitl_pos) ;
		}
		else
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RES_FENT_POS=", adj_res_felig_entitl_pos) ;

        
	if ((strcmp(chr_p_msgno,"551N02") == 0) || (strcmp(chr_p_msgno,"551R03") == 0) || (strcmp(chr_p_msgno,"551C05") == 0))
	{
                Alert("\n 1. VaibhavK... im here.... On Boxing Day.........");
		l_earnings = atof(p_SEL_VAL[12].link_tag);
		l_EARNINGS_RATE = atof(p_SEL_VAL[15].link_tag);

      if(l_earnings == 0)
      {
            Alert("\n 2.VaibhavK... im here.... On Boxing Day.........");
            printf("\n TAg is :[%s]",p_SEL_VAL[15].link_val);
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME1=","");
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME_RT1=",p_SEL_VAL[15].link_tag);
            printf("\n INCOME_RT1= [%s]",p_SEL_VAL[15].link_tag);
      }
      else if(l_EARNINGS_RATE == 0)
      {
            Alert("\n 3.VaibhavK... im here.... On Boxing Day.........");
            printf("\n TAg is :[%s]",p_SEL_VAL[12].link_val);
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME_RT1=","");
            fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME1=",p_SEL_VAL[12].link_tag);
            printf("\n INCOME1= [%s]",p_SEL_VAL[12].link_tag);
            
      }
		l_earnings=0;
      l_EARNINGS_RATE=0;
	 }

	if ((strcmp(chr_p_msgno,"551N01") == 0) || (strcmp(chr_p_msgno,"551R01") == 0))
	{
		l_earnings = atof(p_SEL_VAL[21].link_tag);
		l_EARNINGS_RATE = atof(p_SEL_VAL[20].link_tag);
		printf("l_income is %lf\n:", l_earnings);
		printf("l_income_rt is %lf\n:", l_EARNINGS_RATE);

		if(l_earnings == 0)
		{
  	   		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME1=","");
	   		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME_RT1=",p_SEL_VAL[20].link_tag);
		}
		else if(l_EARNINGS_RATE == 0)
		{
	   		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME_RT1=","");
	   		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCOME1=",p_SEL_VAL[21].link_tag);
		}
		l_earnings=0;
        	l_EARNINGS_RATE=0;
	 }

}




if((l_is_563N02 != 1) && (strcmp(p_SEL_VAL[3].link_val,"CLIENT")==0)) 
{
  EXEC SQL SELECT SUM(int_a.SAFEKEEP_POS),SUM(int_a.SAFEKEEP_POS)*int_b.NOMINAL_VALUE into :h_safekeep_pos,:h_fsafekeep_pos
           FROM DL_SAFEK int_a, MT_INSTRUMENT int_b
           WHERE int_a.client = :p_SEL_VAL[3].link_tag and
                 int_a.instr_code = :p_SEL_VAL[4].link_tag and
                 int_a.instr_code = int_b.instr_code 
           GROUP BY int_a.client,int_a.instr_code,int_b.NOMINAL_VALUE;

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
  {
	h_safekeep_pos = 0;
	h_fsafekeep_pos = 0;
  }

  if(h_safekeep_pos > 0)
  {
  	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"FENT_POS=",h_fsafekeep_pos);
  	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NPOS=",h_safekeep_pos);
  }
  else
  {
  	fprintf(p_Data_File,"%d%s%d\n",*p_rownum,"FENT_POS=",0); //AIX - Warnings Removal
  	fprintf(p_Data_File,"%d%s%d\n",*p_rownum,"NPOS=",0);
  }
  
}



if((l_is_563N02 != 1) && (strcmp(p_SEL_VAL[9].link_val,"CORP_ID")==0)) 
{
  if(strcmp(p_SEL_VAL[3].link_tag,"RT")==0)
  {
    EXEC SQL SELECT distinct(substr(to_char(generate_dt,'YYMMDD'),1,6))  
             INTO :chr_h_gen_dt
             FROM MS_MSGSTAT
             WHERE swift_msg_rep = '550N01' and
                 proc_init = :p_SEL_VAL[9].link_tag and
                 client = :p_SEL_VAL[7].link_tag;
  

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
	strcpy(chr_h_gen_dt,APL_NULL_STRING);

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SENT550DT=",chr_h_gen_dt);
  } 

  else if(strcmp(p_SEL_VAL[3].link_tag,"OP")==0)
  {
    EXEC SQL SELECT distinct(substr(to_char(generate_dt,'YYMMDD'),1,6))  
             INTO :chr_h_gen_dt
             FROM MS_MSGSTAT
             WHERE swift_msg_rep = '552N02' and
                 proc_init = :p_SEL_VAL[9].link_tag and
                 client = :p_SEL_VAL[7].link_tag;
  

  IS_ANY_ORA_ERROR
  if(sqlca.sqlcode == 1403)
	strcpy(chr_h_gen_dt,APL_NULL_STRING);

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SENT550DT=",chr_h_gen_dt);
  } 

  else 
  {
    EXEC SQL SELECT distinct(substr(to_char(generate_dt,'YYMMDD'),1,6))  
             INTO :chr_h_gen_dt
             FROM MS_MSGSTAT
             WHERE swift_msg_rep = '551N02' and
                 proc_init = :p_SEL_VAL[9].link_tag and
                 client = :p_SEL_VAL[7].link_tag;
  

  IS_ANY_ORA_ERROR
  if(sqlca.sqlcode == 1403)
	strcpy(chr_h_gen_dt,APL_NULL_STRING);

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SENT550DT=",chr_h_gen_dt);
  } 

}
strcpy(chr_stat, STATUS_AUTH);


if(strncmp(chr_p_msgno,"556",3) == 0)
{
   
   if((strcmp(chr_p_msgno,"556N01") == 0)||(strcmp(chr_p_msgno,"556C01") == 0)||(strcmp(chr_p_msgno,"556R01") == 0))
   {

       EXEC SQL SELECT NVL(CUSTODYTAXRT,0) INTO :h_whtae_rate_dec
       FROM MT_WHTRATE
       WHERE NATION_CD = (SELECT COUNTRY  FROM MT_CLIENT WHERE cln_code = rtrim(:p_SEL_VAL[4].link_tag))
       AND   prod_class  = (SELECT prod_class FROM MT_INSTRUMENT WHERE instr_code = rtrim(:p_SEL_VAL[7].link_tag))
		 AND STATUS = :chr_stat;
       IS_ANY_ORA_ERROR

       if (sqlca.sqlcode == 1403)
       {
          h_whtae_rate_dec = 0;
       }
       fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TAX_RATE=",h_whtae_rate_dec);
    }
}


if(strncmp(chr_p_msgno,"554",3) == 0)
{
	
   if((strcmp(chr_p_msgno,"554N02") == 0)||(strcmp(chr_p_msgno,"554C02") == 0)||(strcmp(chr_p_msgno,"554R02") == 0))
	{
	  
	    EXEC SQL SELECT CUSTODYTAX_RATE INTO :h_whtae_rate_dec
				FROM CAENTITLEMENT WHERE
				CORP_ID    = rtrim(:p_SEL_VAL[0].link_tag) AND
				CLIENT  = rtrim(:p_SEL_VAL[2].link_tag);


	    IS_ANY_ORA_ERROR

	    if (sqlca.sqlcode == 1403)
	    {
			 h_whtae_rate_dec = 0;
       }
    }
	 else
	 {

	    EXEC SQL SELECT CUSTODYTAXRT INTO :h_whtae_rate_dec
				FROM MT_WHTRATE WHERE
				NATION_CD = (SELECT COUNTRY  FROM MT_CLIENT WHERE cln_code = rtrim(:p_SEL_VAL[2].link_tag)) AND
				PROD_CLASS = (SELECT PROD_CLASS FROM MT_INSTRUMENT WHERE INSTR_CODE = rtrim(:p_SEL_VAL[1].link_tag))
				AND STATUS = :chr_stat;


	    IS_ANY_ORA_ERROR

	    if (sqlca.sqlcode == 1403)
	    {
		    EXEC SQL SELECT NVL(CUSTODY_TAX_RT,0)
    								INTO :h_whtae_rate_dec
									FROM MT_CORE_SYS_PARAMS;
		    IS_ANY_ORA_ERROR

	    }
	 }


if( (strcmp(chr_p_msgno,"554N02") == 0) || ( strcmp(chr_p_msgno,"554R02") == 0) || ( strcmp(chr_p_msgno,"554C02") == 0) )
		{
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TAX_RATE=",h_whtae_rate_dec);
	 }
	 if(strcmp(chr_p_msgno,"554N02") == 0)
	 {
	        
	 }	
	 else
	 {
	        

	 }
	
	
	 

	if (APL_FAILURE == CO_Chk_CntryEnabled(  "ENTMSG_TAX","TAX_ROUND_DOWN",&l_cond_tax,l_debug_info_ptr))
	{
			APL_GOBACK_FAIL
	}
	 if ((strcmp(chr_p_msgno,"554N02") == 0) && (l_cond_tax ==1))
		{
		EXEC SQL SELECT  INSTR_INC_BAL,ELIG_ENTITL_POS INTO :h_instr_inc_bal,:h_elig_entitl_pos1  FROM CAENTITLEMENT
		WHERE CORP_ID = :p_SEL_VAL[0].link_tag AND CLIENT = :p_SEL_VAL[2].link_tag;
		IS_ANY_ORA_ERROR

		EXEC SQL SELECT to_char(:h_instr_inc_bal/:h_elig_entitl_pos1) into :dbl_h_int_per_unit 	
		from dual;

		EXEC SQL SELECT to_char(trunc((:dbl_h_int_per_unit)*(:h_whtae_rate_dec/100))) 
		into :dbl_h_tax_per_unit from dual;

		EXEC SQL SELECT to_char(:dbl_h_tax_per_unit * :h_elig_entitl_pos1) into :h_tot_tax_amount from dual;
		EXEC SQL SELECT to_char(:h_instr_inc_bal - :h_tot_tax_amount) into :h_net_inc_amount from dual; 	


		EXEC SQL SELECT to_char(:h_instr_inc_bal - (trunc((:h_instr_inc_bal)*(:h_whtae_rate_dec/100)))),
		 to_char(:h_instr_inc_bal - trunc((:h_elig_entitl_pos1)*:dbl_h_tax_per_unit)),
		 to_char((trunc(trunc(:h_instr_inc_bal)*(:h_whtae_rate_dec/100)))),
		 to_char((trunc(trunc(:dbl_h_int_per_unit)*(:h_whtae_rate_dec/100))* :h_elig_entitl_pos1))
		 INTO :chr_h_netproc_int,:chr_h_netproc_dec,:chr_h_tax_int,:chr_h_tax_dec
					 FROM DUAL;


		}
	else
	{
	EXEC SQL SELECT INSTR_INC_BAL INTO :h_instr_inc_bal FROM CAENTITLEMENT WHERE CORP_ID = :p_SEL_VAL[0].link_tag AND CLIENT = :p_SEL_VAL[2].link_tag;
	IS_ANY_ORA_ERROR

	EXEC SQL SELECT to_char(:h_instr_inc_bal - (trunc((:h_instr_inc_bal)*(:h_whtae_rate_dec/100)))),
	to_char((:h_instr_inc_bal * (100 -(:h_whtae_rate_dec))/100)),
	to_char((trunc(trunc(:h_instr_inc_bal)*(:h_whtae_rate_dec/100)))),
	to_char((:h_instr_inc_bal * :h_whtae_rate_dec/100))
	into :chr_h_netproc_int,:chr_h_netproc_dec,:chr_h_tax_int,:chr_h_tax_dec
	FROM DUAL;
	IS_ANY_ORA_ERROR
	}
	printf("h_inc_due = |%lf|\n",h_instr_inc_bal);
	printf("h_whtrate_dec = |%lf|\n",h_whtae_rate_dec);
	//printf("h_tax_int = |%lf|\n",chr_h_tax_int); Changes done for AIX Migration
	printf("h_tax_int = |%s|\n",chr_h_tax_int);
	printf("h_netproc_dec = |%s|\n",chr_h_netproc_dec);
	printf("h_netproc_int = |%s|\n",chr_h_netproc_int);

	


#ifdef EMU_PROCESSING
	if(strcmp(chr_p_msgno,"554N02") == 0 && (strcmp(p_SEL_VAL[3].link_tag,"CD") == 0 || strcmp(p_SEL_VAL[3].link_tag,"BI") == 0 || strcmp(p_SEL_VAL[3].link_tag,"DV") == 0 ) && strcmp(p_SEL_VAL[13].link_tag,APL_GRD_CCYCODE)== 0 )  
	{
	

      if ( CO_Chk_EMU_Period(APL_NULL_STRING,&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
      {
            APL_GOBACK_FAIL
      }

      if ( (int_period_flg == 2) || (int_period_flg == 3) )
        
      {

	
	if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
	{
	EXEC SQL SELECT
	int_a.EXCHGRT INTO :l_exchggrt
	FROM MT_EXCHRATE int_a
	WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
	AND int_a.currency_cd = :chr_l_grd_ccycode
	AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
							FROM MT_EXCHRATE int_b
							WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode 
							AND int_b.currency_cd = :chr_l_grd_ccycode
						);
	}
	else
		if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
		{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode
			AND int_a.currency_cd = :chr_l_emu_ccycode
			AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
									FROM MT_EXCHRATE int_b
									WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode 
									AND int_b.currency_cd = :chr_l_emu_ccycode
								);
		}

	if(sqlca.sqlcode == 0)
	{
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"EXCH=",l_exchggrt);
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"ECCYCODE=EUR");
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINC_DUE=",atof(p_SEL_VAL[14].link_tag)/l_exchggrt);
		if(strcmp(p_SEL_VAL[3].link_tag,"BI") == 0)
		{
			l_earnings =p_SEL_VAL[15].NUM_VAL;
			l_EARNINGS_RATE=p_SEL_VAL[18].NUM_VAL;
			if(l_earnings > 0)
			{
				fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",(p_SEL_VAL[15].NUM_VAL)/l_exchggrt);
			}
			if (l_EARNINGS_RATE > 0)
			{
				fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",p_SEL_VAL[18].NUM_VAL);
			}
		 }
		 else
		 {
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",(p_SEL_VAL[15].NUM_VAL)/l_exchggrt);
		 }
		}
	}
}
#endif

	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NET_ITAX=",atof(chr_h_tax_int)/l_exchggrt);
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NET_TAX=",atof(chr_h_tax_dec)/l_exchggrt);
	
	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYNET_INETPROC=",p_SEL_VAL[13].link_tag);


	
	if ( (!strcmp(chr_p_msgno,"554N01")) || (!strcmp(chr_p_msgno,"554R01")) )
	{

  			  EXEC SQL SELECT RATIO_PERC_IND,amount_ratio_flg,entitl_base,AUTO_DLCRT_IND
           INTO :h_ratio_perc_ind:i_ratio_pct_ind,
                :h_amt_rt_ind:i_amt_rt_ind,
                :h_entitl_base:i_entitl_base,
                :h_new_dl_ind:i_new_dl_ind
           FROM CASECEVENT
           WHERE CA_EVENT = :p_SEL_VAL[3].link_tag
                 and INSTR_TYPE = :p_SEL_VAL[8].link_tag;
  IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403 )
   {
        CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[3].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        APL_GOBACK_FAIL
   }

 

		if (APL_FAILURE == CO_Chk_CntryEnabled(  "ENTMSG_TAX","TAX_ROUND_DOWN",&l_cond_tax1,l_debug_info_ptr))
		{
				APL_GOBACK_FAIL
		}

		if (l_cond_tax1)
		{
		 EXEC SQL SELECT
       NVL(SUM(NVL(curr_pymt,0) -trunc((NVL(CURR_PYMT,0)/QUANTITY_PAID)*(NVL(TAX_RATE,0)/100)) * nvl(quantity_paid,0)- nvl(OTHER_CHRGS,0) ),0)
       into :paid_net
       from CACHEQUE
       where
       CORP_ID = :p_SEL_VAL[0].link_tag
	        AND CLIENT = :p_SEL_VAL[2].link_tag
	      AND  STAT_PYMT='CP';

					 IS_ANY_ORA_ERROR

		}
		else
		{
		EXEC SQL SELECT
		NVL( SUM( NVL(curr_pymt,0) - round( NVL(tax_rate,0)/100 * NVL(curr_pymt,0),2) - NVL(OTHER_CHRGS,0) ) ,0 )
		INTO :paid_net
		FROM CACHEQUE
		WHERE
			 CORP_ID = :p_SEL_VAL[0].link_tag 
		AND CLIENT = :p_SEL_VAL[2].link_tag	
		AND  STAT_PYMT='CP';

		IS_ANY_ORA_ERROR
		}

	EXEC SQL SELECT
	 NVL (SUM(NVL(curr_pymt,0) -trunc(NVL(tax_rate,0)/100 * NVL(curr_pymt,0)) - NVL(OTHER_CHRGS,0) ),0) 
		INTO :dbl_ipaid_net
		FROM CACHEQUE
		WHERE
			 CORP_ID = :p_SEL_VAL[0].link_tag 
		AND CLIENT = :p_SEL_VAL[2].link_tag	
		AND  STAT_PYMT='CP';

		IS_ANY_ORA_ERROR

	if ( (!strcmp(p_SEL_VAL[8].link_tag,"BON")) && (!strcmp(p_SEL_VAL[7].link_tag,"Y") )&& (!strcmp(p_SEL_VAL[3].link_tag,"CD")) && (!strcmp(p_SEL_VAL[3].link_tag, "DV")))	
	{	
	EXEC SQL SELECT
	 NVL( SUM( NVL(quantity_paid,0) * :p_SEL_VAL[10].NUM_VAL),0 )   
		INTO :quantity_paid
		FROM CACHEQUE
		WHERE
			 CORP_ID = :p_SEL_VAL[0].link_tag 
		AND CLIENT = :p_SEL_VAL[2].link_tag	
		AND  STAT_PYMT='CP';

		IS_ANY_ORA_ERROR

	EXEC SQL SELECT
	  NVL(quantity_paid,0)   * :p_SEL_VAL[10].NUM_VAL  
		INTO :current_quantity
		FROM CACHEQUE
		WHERE
			 CORP_ID = :p_SEL_VAL[0].link_tag 
		AND CLIENT = :p_SEL_VAL[2].link_tag	
		AND  SEQNUM_PAY=:p_SEL_VAL[4].NUM_VAL ;

		IS_ANY_ORA_ERROR

	}
	else if (!strcmp(p_SEL_VAL[3].link_tag,"CD") || !strcmp(p_SEL_VAL[3].link_tag,"DV"))   
	{
	EXEC SQL SELECT
	 NVL ( SUM( NVL(quantity_paid,0) ) , 0 ) 
		INTO :quantity_paid
		FROM CACHEQUE
		WHERE
			 CORP_ID = :p_SEL_VAL[0].link_tag 
		AND CLIENT = :p_SEL_VAL[2].link_tag	
		AND  STAT_PYMT='CP';

		IS_ANY_ORA_ERROR

	EXEC SQL SELECT
	  NVL(quantity_paid,0)  
		INTO :current_quantity
		FROM CACHEQUE
		WHERE
			 CORP_ID = :p_SEL_VAL[0].link_tag 
		AND CLIENT = :p_SEL_VAL[2].link_tag	
		AND  SEQNUM_PAY=:p_SEL_VAL[4].NUM_VAL;

		IS_ANY_ORA_ERROR
	}
	else
	{
		if((strcmp(chr_p_msgno,"554N01")==0) && (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
      {
         #ifdef EMU_PROCESSING
            l_earnings=p_SEL_VAL[19].NUM_VAL;
            l_EARNINGS_RATE=p_SEL_VAL[22].NUM_VAL;
         #else
            l_earnings=p_SEL_VAL[16].NUM_VAL;
            l_EARNINGS_RATE=p_SEL_VAL[17].NUM_VAL;
         #endif
      }
      else if((strcmp(chr_p_msgno,"554R01")==0) && (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
		{
	     l_earnings=p_SEL_VAL[16].NUM_VAL;
        l_EARNINGS_RATE=p_SEL_VAL[17].NUM_VAL;
		}
		if(l_earnings==0)
		{
			printf("QTY_PAID in l_earnings==0 part\n");
   		EXEC SQL SELECT
    		NVL( SUM( NVL(quantity_paid,0) * :p_SEL_VAL[10].NUM_VAL),0 )
      		INTO :quantity_paid
      		FROM CACHEQUE
      		WHERE
          	CORP_ID = :p_SEL_VAL[0].link_tag
      	AND CLIENT = :p_SEL_VAL[2].link_tag
      	AND  STAT_PYMT='CP';

 	     IS_ANY_ORA_ERROR
			printf("QTY_PAID in l_earnings==0 part is %lf\n",quantity_paid);

 	  EXEC SQL SELECT
   	  NVL(quantity_paid,0)   * :p_SEL_VAL[10].NUM_VAL
      	INTO :current_quantity
      	FROM CACHEQUE
      	WHERE
         	 CORP_ID = :p_SEL_VAL[0].link_tag
      		AND CLIENT = :p_SEL_VAL[2].link_tag
      		AND  SEQNUM_PAY=:p_SEL_VAL[4].NUM_VAL ;

	      IS_ANY_ORA_ERROR

		}
		else if (l_EARNINGS_RATE==0)
		{
			printf("QTY_PAID in l_EARNINGS_RATE==0 part is \n");
   		EXEC SQL SELECT
    		NVL ( SUM( NVL(quantity_paid,0) ) , 0 )
      		INTO :quantity_paid
      		FROM CACHEQUE
      	WHERE
          CORP_ID = :p_SEL_VAL[0].link_tag
      	 AND CLIENT = :p_SEL_VAL[2].link_tag
      	 AND  STAT_PYMT='CP';

 		     IS_ANY_ORA_ERROR

			printf("QTY_PAID in l_EARNINGS_RATE==0 part is %lf\n",quantity_paid);
 		  EXEC SQL SELECT
     		NVL(quantity_paid,0)
      	INTO :current_quantity
      	FROM CACHEQUE
      	WHERE
         	 CORP_ID = :p_SEL_VAL[0].link_tag
      	AND CLIENT = :p_SEL_VAL[2].link_tag
      	AND  SEQNUM_PAY=:p_SEL_VAL[4].NUM_VAL;

 	     IS_ANY_ORA_ERROR
		}
	}

		EXEC SQL SELECT
		NVL(curr_pymt,0)
		INTO :curr_amt
		FROM CACHEQUE
		WHERE
			 CORP_ID = :p_SEL_VAL[0].link_tag 
		AND CLIENT = :p_SEL_VAL[2].link_tag	
		AND  SEQNUM_PAY=:p_SEL_VAL[4].NUM_VAL; 

		IS_ANY_ORA_ERROR


#ifdef EMU_PROCESSING
	if((!strcmp(chr_p_msgno,"554N01")   && (strcmp(p_SEL_VAL[3].link_tag,"CD") == 0 || strcmp(p_SEL_VAL[3].link_tag,"BI") == 0 || strcmp(p_SEL_VAL[3].link_tag,"DV") == 0) && strcmp(p_SEL_VAL[17].link_tag,APL_GRD_CCYCODE)== 0 ) || (!strcmp(chr_p_msgno,"554R01")   && (strcmp(p_SEL_VAL[3].link_tag,"CD") == 0 || strcmp(p_SEL_VAL[3].link_tag,"BI") == 0  || strcmp(p_SEL_VAL[3].link_tag,"DV") == 0 ) && strcmp(p_SEL_VAL[15].link_tag,APL_GRD_CCYCODE)== 0 ))     
	{
	 

      if ( CO_Chk_EMU_Period(APL_NULL_STRING,&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
      {
            APL_GOBACK_FAIL
      }

      if ( (int_period_flg == 2) || (int_period_flg == 3) )
        
      {
	
	if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
	{
	EXEC SQL SELECT
	int_a.EXCHGRT INTO :l_exchggrt
	FROM MT_EXCHRATE int_a
	WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
	AND int_a.currency_cd = :chr_l_grd_ccycode
	AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
							FROM MT_EXCHRATE int_b
							WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode 
							AND int_b.currency_cd = :chr_l_grd_ccycode
						);
	}
	else
		if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
		{
			EXEC SQL SELECT
			int_a.EXCHGRT INTO :l_exchggrt
			FROM MT_EXCHRATE int_a
			WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode
			AND int_a.currency_cd = :chr_l_emu_ccycode
			AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
									FROM MT_EXCHRATE int_b
									WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode 
									AND int_b.currency_cd = :chr_l_emu_ccycode
								);
		}

	if(sqlca.sqlcode == 0)
	{
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"EXCH=",l_exchggrt);
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"ECCYCODE=EUR");
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINETPROC=",atof(p_SEL_VAL[13].link_tag)/l_exchggrt);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CNETPROC=",atof(p_SEL_VAL[14].link_tag)/l_exchggrt);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CITAX=",atof(p_SEL_VAL[15].link_tag)/l_exchggrt);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CTAX=",atof(p_SEL_VAL[16].link_tag)/l_exchggrt);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"COTH_CHR=",(p_SEL_VAL[18].NUM_VAL)/l_exchggrt);
	
      if ((!strcmp(chr_p_msgno,"554N01"))&& (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
      {
	 		l_earnings=p_SEL_VAL[19].NUM_VAL;
	 		l_EARNINGS_RATE=p_SEL_VAL[22].NUM_VAL;
	 		if (l_earnings > 0 )
	 		{
     	 		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",(p_SEL_VAL[19].NUM_VAL)/l_exchggrt);
	 		}
	 		if (l_EARNINGS_RATE > 0)
	 		{
				fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",p_SEL_VAL[22].NUM_VAL);
	 		}
      }
      else if ((!strcmp(chr_p_msgno,"554R01")) && (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
      {
 			l_earnings=p_SEL_VAL[16].NUM_VAL;
			l_EARNINGS_RATE=p_SEL_VAL[17].NUM_VAL;
			if(l_earnings > 0 )
			{
    			 fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",(p_SEL_VAL[16].NUM_VAL)/l_exchggrt);
			}
			if(l_EARNINGS_RATE > 0)
			{
		 		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",p_SEL_VAL[17].NUM_VAL);
	 		}
      }
		else
		{
      	if (!strcmp(chr_p_msgno,"554N01"))
      		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",(p_SEL_VAL[19].NUM_VAL)/l_exchggrt);
      	else if (!strcmp(chr_p_msgno,"554R01"))
      		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",(p_SEL_VAL[16].NUM_VAL)/l_exchggrt);
		}
	}
	}	 
}
#endif
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PAID_NET=",(paid_net/l_exchggrt));
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"IPAID_NET=",(dbl_ipaid_net/l_exchggrt));
	
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"QTY_PAID=",quantity_paid);
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CURRENT_AMOUNT=",curr_amt/l_exchggrt);


	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CURRENT_QTY=",current_quantity);
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TAX_NEW=",h_whtae_rate_dec);
  	fprintf(p_Data_File,"%d%s%c\n",*p_rownum,"ATTYP=",h_amt_rt_ind);

	}
   #ifdef EMU_PROCESSING
    if   (!strcmp(chr_p_msgno,"554R02")   && (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0) && strcmp(p_SEL_VAL[15].link_tag,APL_GRD_CCYCODE))    
   {
      if ( CO_Chk_EMU_Period(APL_NULL_STRING,&int_period_flg,l_debug_info_ptr) == APL_FAILURE )
      {
            APL_GOBACK_FAIL
      }

      if ( (int_period_flg == 2) || (int_period_flg == 3) )
        
      {
   
   if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"I") == 0)
   {
   EXEC SQL SELECT
   int_a.EXCHGRT INTO :l_exchggrt
   FROM MT_EXCHRATE int_a
   WHERE int_a.DENOM_CCY = :chr_l_emu_ccycode
   AND int_a.currency_cd = :chr_l_grd_ccycode
   AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
                     FROM MT_EXCHRATE int_b
                     WHERE int_b.DENOM_CCY = :chr_l_emu_ccycode
                     AND int_b.currency_cd = :chr_l_grd_ccycode
                  );
   }
   else
      if( strcmp(l_mt_core_sys_params_struct_h.dir_indir_fxqt_ind,"D") == 0)
      {
         EXEC SQL SELECT
         int_a.EXCHGRT INTO :l_exchggrt
         FROM MT_EXCHRATE int_a
         WHERE int_a.DENOM_CCY = :chr_l_grd_ccycode
         AND int_a.currency_cd = :chr_l_emu_ccycode
         AND int_a.RATE_DATE = ( SELECT MAX(int_b.RATE_DATE)
                           FROM MT_EXCHRATE int_b
                           WHERE int_b.DENOM_CCY = :chr_l_grd_ccycode
                           AND int_b.currency_cd = :chr_l_emu_ccycode
                        );
      }

       if(sqlca.sqlcode == 0)
         {
	    l_earnings=p_SEL_VAL[16].NUM_VAL;
	    l_EARNINGS_RATE=p_SEL_VAL[17].NUM_VAL;
	    if (l_earnings > 0 )
	    {
            	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",(p_SEL_VAL[16].NUM_VAL)/l_exchggrt);
            }
	    if (l_EARNINGS_RATE > 0)
	    {
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"CINCOME=",p_SEL_VAL[17].NUM_VAL); 
	    }
	    fprintf(p_Data_File,"%d%s\n",*p_rownum,"EUROCONV=Y");
         } 
      }
   }
#endif
	
	
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NET_INETPROC=",(atof(chr_h_netproc_int)/l_exchggrt));
	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"NET_NETPROC=",(atof(chr_h_netproc_dec)/l_exchggrt));
	

	
	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYNET_INETPROC=",p_SEL_VAL[13].link_tag);
}

if( (!strcmp(chr_p_msgno,"554N01"))
   || (!strcmp(chr_p_msgno,"554R01"))
   ||  (!strcmp(chr_p_msgno,"555N01"))
   || (!strcmp(chr_p_msgno,"555R01")) )
{
   strcpy(chr_l_pay_srl_nbr,p_STAT_VAL[6].link_tag);
   printf("value of p_STAT_VAL[6] is %s \n",p_STAT_VAL[6].link_tag);
}

if (  (!strcmp(chr_p_msgno,"556N02"))
   || (!strcmp(chr_p_msgno,"556R02")) )
{
   strcpy(chr_l_pay_srl_nbr,p_STAT_VAL[7].link_tag);
   printf("value of p_STAT_VAL[7]  is %s \n",p_STAT_VAL[7].link_tag);
}

if (  (!strcmp(chr_p_msgno,"563N03")) || (!strcmp(chr_p_msgno,"566R03")))
{
   strcpy(chr_l_pay_srl_nbr,p_STAT_VAL[4].link_tag);
   printf("value of p_STAT_VAL[4]  is %s \n",p_STAT_VAL[4].link_tag);
}
 if (  (!strcmp(chr_p_msgno,"563N01")) )
{
   strcpy(chr_l_pay_srl_nbr,p_STAT_VAL[5].link_tag);
   printf("value of p_STAT_VAL[5]  is %s \n",p_STAT_VAL[5].link_tag);
}




  if (   (!strcmp(chr_p_msgno,"554N01"))
      || (!strcmp(chr_p_msgno,"554R01"))
      || (!strcmp(chr_p_msgno,"555N01"))
      || (!strcmp(chr_p_msgno,"555R01"))
      || (!strcmp(chr_p_msgno,"556N02"))
      || (!strcmp(chr_p_msgno,"556R02"))
      || (!strcmp(chr_p_msgno,"563N03"))
      || (!strcmp(chr_p_msgno,"566R03"))
      ) 
   {
         memset(chr_h_ca_id_ent_stat,APL_NULL_CHAR,CORP_ID_LEN);
         memset(chr_h_client_ent_stat,APL_NULL_CHAR,APL_CLIENT_LENGTH);

         if  ((!strcmp(chr_p_msgno,"554N01")) || (!strcmp(chr_p_msgno,"554R01")))
         {
            strcpy(chr_h_ca_id_ent_stat,p_SEL_VAL[0].link_tag);
            strcpy(chr_h_client_ent_stat,p_SEL_VAL[2].link_tag);
         }
         if  ((!strcmp(chr_p_msgno,"555N01")) || (!strcmp(chr_p_msgno,"555R01")))
         {
            strcpy(chr_h_ca_id_ent_stat,p_SEL_VAL[10].link_tag);
            strcpy(chr_h_client_ent_stat,p_SEL_VAL[9].link_tag);
         }
         if  ((!strcmp(chr_p_msgno,"556N02")) || (!strcmp(chr_p_msgno,"556R02")))
         {
            strcpy(chr_h_ca_id_ent_stat,p_SEL_VAL[10].link_tag);
            strcpy(chr_h_client_ent_stat,p_SEL_VAL[4].link_tag);
         }
         if  ((!strcmp(chr_p_msgno,"563N03")) || (!strcmp(chr_p_msgno,"566R03")))
         {
            strcpy(chr_h_ca_id_ent_stat,p_SEL_VAL[9].link_tag);
            strcpy(chr_h_client_ent_stat,p_SEL_VAL[7].link_tag);
         }


   if (   (!strcmp(chr_p_msgno,"554N01"))
      || (!strcmp(chr_p_msgno,"555N01"))
      || (!strcmp(chr_p_msgno,"556N02"))
      || (!strcmp(chr_p_msgno,"563N03"))
      || (!strcmp(chr_p_msgno,"566R03"))
       )
      {
         EXEC SQL SELECT NVL(RECEIVED_AMT,0),NVL(quantity_received,0),
                        NVL(INSTR_INC_BAL,0), NVL(quantity_bal,0)
         INTO :h_amount_recd_iso,:h_quantity_recd_iso,:h_instr_inc_bal_iso,:h_quantity_due_iso
         FROM CAENTITLEMENT
         WHERE corp_id    = :chr_h_ca_id_ent_stat
         AND   client  = :chr_h_client_ent_stat;
         IS_ANY_ORA_ERROR

         printf("\n Searching for CA_ID :%s: ",chr_h_ca_id_ent_stat);
         printf("\n Searching for Account :%s: ",chr_h_client_ent_stat);
         printf("\n h_amount_recd_iso is :%f: ",h_amount_recd_iso);
         printf("\n h_amount_recd_iso is :%f: ",h_amount_recd_iso);
         printf("\n h_quantity_recd_iso is :%f: ",h_quantity_recd_iso);
         printf("\n h_instr_inc_bal_iso is :%f: ",h_instr_inc_bal_iso);
         printf("\n h_quantity_due_iso is :%f: ",h_quantity_due_iso);


         if (  (h_instr_inc_bal_iso <= h_amount_recd_iso) &&
               (h_quantity_due_iso <= h_quantity_recd_iso)
            )
         {
            EXEC SQL SELECT NVL(COUNT(*),0) INTO :int_count_iso
            FROM CACHEQUE
            WHERE corp_id    = :chr_h_ca_id_ent_stat
            AND   client  = :chr_h_client_ent_stat
            AND   stat_pymt not in ('CP','RV','DL');
            IS_ANY_ORA_ERROR

         printf("\n int_count_iso is :%d: ",int_count_iso);

            if (int_count_iso == 0)
            {
              fprintf(p_Data_File,"%d%s\n",*p_rownum,"ENT_STAT=CP");
					 
					strcpy(chr_l_payment_status,"CP");
            }
            else
           {
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"ENT_STAT=PP");
					 
					strcpy(chr_l_payment_status,"PP");
            }
         }
         else
         {
            fprintf(p_Data_File,"%d%s\n",*p_rownum,"ENT_STAT=PP");
				
				strcpy(chr_l_payment_status,"PP");
         }
		}
   }
	if ( (!strcmp(chr_p_msgno,"563N04")) || (!strcmp(chr_p_msgno,"563N01"))|| (!strcmp(chr_p_msgno,"563N02")))
	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREPDATE=",chr_h_prepdate_new);
		

} 



if  ( !strcmp(chr_p_msgno,"512_E") ) 
{
	EXEC SQL SELECT MIN(DATEOF_INPUT)
	INTO :chr_h_min_inputdt:i_min_inputdt
	FROM dl_deal
	WHERE client=:p_SEL_VAL[3].link_tag
	AND	DEAL_FRM_ORD='Y'
	AND	ORIG_REFNO=:p_SEL_VAL[2].link_tag;

	IS_ANY_ORA_ERROR
	
	if ( !strcmp(chr_h_min_inputdt,p_SEL_VAL[1].link_tag) )
	{
  		fprintf(p_Data_File,"%d%s\n",*p_rownum,"NEW=NEW");
	}
	else
	{
  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW=",p_SEL_VAL[2].link_tag);
	}



}


if (( !strcmp(chr_p_msgno,"100N01")) && (p_rec_no == 1) ) 
{
 

         if ( APL_FAILURE ==
									  IV_Proc_ConvToFxFn(p_STAT_VAL[4].link_tag,p_STAT_VAL[3].link_tag,
										g_mt_commonsys_params_struct_h.dom_ccy, APL_NULL_STRING,
										&chr_l_exch_rate, &int_retstat, l_debug_info_ptr) )
            {
				  fprintf(APL_OUT_FILE,"Fatal Error occured while Trying to get the Exchange rate\n");
				  APL_GOBACK_FAIL
            }
        
		   h_amt = (atof(p_STAT_VAL[5].link_tag)*chr_l_exch_rate);
			
		   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYEAMOUNT=",p_STAT_VAL[3].link_tag);
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"EAMOUNT=",h_amt);
}

if((p_rec_no==1) && (strncmp(chr_p_msgno,"53x",3)==0))
{
	memset(l_pay_in,APL_NULL_CHAR,24);
	memset(l_pay_out, APL_NULL_CHAR,24);
		EXEC SQL SELECT substr(PAY_IN_ACC,9) ,substr(PAY_OUT_ACC ,9)
		INTO :l_pay_in:i_pay_in,:l_pay_out:i_pay_out
	  	FROM 	IV_CLIENTSETUP
	  	WHERE CLIENT =:p_SEL_VAL[7].link_tag;
	IS_ANY_ORA_ERROR
		if (strcmp(p_SEL_VAL[12].link_tag,"3")==0)
	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"GL_CASHACC=",l_pay_in);
		else if (strcmp(p_SEL_VAL[12].link_tag,"4")==0)
	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"GL_CASHACC=",l_pay_out);
		else
	fprintf(p_Data_File,"%d%s\n",*p_rownum,"GL_CASHACC=");

	if(strcmp(chr_p_msgno,"53x")==0)
	{
		EXEC SQL SELECT pty_sebi_reg_no_1  
				INTO :l_sebi_countacc:i_sebi_countacc
				FROM mt_pty_exch_map
				WHERE PTY_CODE=:p_SEL_VAL[13].link_tag
				AND EXCH_CODE =:p_SEL_VAL[18].link_tag;
		IS_ANY_ORA_ERROR
	}
	else
	{
		EXEC SQL SELECT pty_sebi_reg_no_1
			INTO :l_sebi_countacc:i_sebi_countacc
			FROM mt_pty_exch_map
			 WHERE PTY_CODE=:p_SEL_VAL[14].link_tag
			 AND EXCH_CODE =:p_SEL_VAL[15].link_tag;
		IS_ANY_ORA_ERROR

	}
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SEBI_COUNT=",l_sebi_countacc);
}

	if(	(p_rec_no == 1)&&
			((strcmp(chr_p_msgno,"534N01") == 0)
		|| (strcmp(chr_p_msgno,"578N02") == 0)   
 		|| (strcmp(chr_p_msgno,"539") == 0)
 		|| (strcmp(chr_p_msgno,"53x") == 0)
 		|| (strcmp(chr_p_msgno,"534") == 0)
 		|| (strcmp(chr_p_msgno,"596N02") == 0)
 		|| (strcmp(chr_p_msgno,"596P") == 0)
 		|| (strcmp(chr_p_msgno,"53xN01") == 0) ))
	{
		l_cond_mult_ccy	=	0;
		if (APL_FAILURE == CO_Chk_CntryEnabled("SETUP_MULT_CCY","MULTI_CCY",&l_cond_mult_ccy,l_debug_info_ptr))
		{
				APL_GOBACK_FAIL
		}
		if ( (l_cond_mult_ccy == 1))
		{
			if (strcmp(chr_p_msgno,"534N01") == 0)
			{
      		strcpy(chr_l_client_mult_ccy,p_SEL_VAL[3].link_tag);
      		strcpy(chr_l_refno_mult_ccy,p_SEL_VAL[2].link_tag);
			}
			else if (strcmp(chr_p_msgno,"578N02") == 0)			
         {
            strcpy(chr_l_client_mult_ccy,p_SEL_VAL[3].link_tag);
            strcpy(chr_l_refno_mult_ccy,p_SEL_VAL[2].link_tag);
         }
			else if (strcmp(chr_p_msgno,"539") == 0)
			{
      		strcpy(chr_l_client_mult_ccy,p_SEL_VAL[5].link_tag);
      		strcpy(chr_l_refno_mult_ccy,p_SEL_VAL[6].link_tag);
			}
			else if (strcmp(chr_p_msgno,"53x") == 0)
			{
      		strcpy(chr_l_client_mult_ccy,p_SEL_VAL[7].link_tag);
      		strcpy(chr_l_refno_mult_ccy,p_SEL_VAL[1].link_tag);
			}
			else if (strcmp(chr_p_msgno,"534") == 0)
			{
      		strcpy(chr_l_client_mult_ccy,p_SEL_VAL[2].link_tag);
      		strcpy(chr_l_refno_mult_ccy,p_SEL_VAL[3].link_tag);
				 
			}
			else if (strcmp(chr_p_msgno,"596N02") == 0)
			{
      		strcpy(chr_l_client_mult_ccy,p_SEL_VAL[3].link_tag);
      		strcpy(chr_l_refno_mult_ccy,p_STAT_VAL[3].link_tag);
			}
			else if (strcmp(chr_p_msgno,"596P") == 0)
			{
      		strcpy(chr_l_client_mult_ccy,p_SEL_VAL[1].link_tag);
      		strcpy(chr_l_refno_mult_ccy,p_STAT_VAL[2].link_tag);
			}
			else if (strcmp(chr_p_msgno,"53xN01") == 0)
			{
      		strcpy(chr_l_client_mult_ccy,p_SEL_VAL[7].link_tag);
      		strcpy(chr_l_refno_mult_ccy,p_SEL_VAL[1].link_tag);
			}
			
			printf("\n*************** MultiCurrency ENH-008 ****************");
			printf("\np_msgno is :%s:",chr_p_msgno);
			printf("\nl_account_mult_ccy is :%s:",chr_l_client_mult_ccy);
			printf("\nl_refno_mult_ccy is :%s:",chr_l_refno_mult_ccy);
			printf("\n*************** MultiCurrency ENH-008 ****************\n");

			sqlca.sqlcode=0;

			EXEC SQL SELECT currency_cd , AMOUNT ,COST  
						into   :chr_l_trdccy,:l_trdamount,:l_trdcost
						FROM DL_DEAL
						WHERE
						CLIENT = :chr_l_client_mult_ccy
				AND	IDENTIY_NO = :chr_l_refno_mult_ccy;

			IS_ANY_ORA_ERROR

         if ((strcmp(chr_p_msgno,"596N02") == 0) && (sqlca.sqlcode == 1403))
         {
            sqlca.sqlcode=0;
            EXEC SQL SELECT currency_cd , AMOUNT ,COST
                  into   :chr_l_trdccy,:l_trdamount,:l_trdcost
                  FROM DL_HISDEAL
                  WHERE
                  CLIENT = :chr_l_client_mult_ccy
            AND   IDENTIY_NO = :chr_l_refno_mult_ccy
            AND   TO_CHAR(DATEOF_INPUT,'YYMMDD') = :p_SEL_VAL[10].link_tag;

         IS_ANY_ORA_ERROR

         if (sqlca.sqlcode == 1403)
         {
            sqlca.sqlcode=0;
            EXEC SQL SELECT currency_cd , AMOUNT ,COST
                  into   :chr_l_trdccy,:l_trdamount,:l_trdcost
                  FROM DL_DEALREPAIR
                  WHERE
                  CLIENT = :chr_l_client_mult_ccy
            AND   IDENTIY_NO = :chr_l_refno_mult_ccy;

         IS_ANY_ORA_ERROR

         }
         }

	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TRDCCYCODE=",chr_l_trdccy);
	  		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TRDAMOUNT=",l_trdamount);
	  		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TRDPRICE=",l_trdcost);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYTRDAMOUNT=",chr_l_trdccy);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYTRDPRICE=",chr_l_trdccy);
		}
		else
		{
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TRDCCYCODE=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TRDAMOUNT=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TRDPRICE=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYTRDAMOUNT=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYTRDPRICE=",APL_NULL_STRING);
		}
	}




printf("\n KarnikVaibhav Message Number is |%s| and P_rec_no is |%d|",chr_p_msgno,p_rec_no);
if (((strcmp(chr_p_msgno,"53x")==0) || (strcmp(chr_p_msgno,"539")==0)) && (p_rec_no == 1))
{


        printf("\n here im..53x...p_SEL_VAL[11].link_tag = |%s|",p_SEL_VAL[11].link_tag);
        printf("\n here im..53x...p_SEL_VAL[11].link_val = |%s|",p_SEL_VAL[11].link_val);
	
        printf("\n here im..539...p_SEL_VAL[17].link_tag = |%s|",p_SEL_VAL[11].link_tag);
        printf("\n here im..539...p_SEL_VAL[17].link_val = |%s|",p_SEL_VAL[11].link_val);
	
	

	memset(chr_l_client_53,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(chr_l_refno_53,APL_NULL_CHAR,17);


	if (strcmp(chr_p_msgno,"53x")==0)
	{  
		strcpy(chr_l_ispartial_flg,p_SEL_VAL[9].link_tag);
		strcpy(chr_l_client_53,p_SEL_VAL[7].link_tag);
		strcpy(chr_l_refno_53,p_SEL_VAL[1].link_tag);
	}
	if (strcmp(chr_p_msgno,"539")==0)
	{  
		strcpy(chr_l_ispartial_flg,p_SEL_VAL[7].link_tag);
		strcpy(chr_l_client_53,p_SEL_VAL[5].link_tag);
		strcpy(chr_l_refno_53,p_SEL_VAL[6].link_tag);
   }

	
        if (strcmp(chr_p_msgno,"53x")==0)
	{
		if ((strcmp(chr_l_ispartial_flg,"") != 0) && (strcmp(chr_l_ispartial_flg," ") != 0))
		{
 
		/*  ISKB-361: ASHISH 24-01-2008 Start */			
		/*	EXEC SQL SELECT NVL(sum(QTY),0), NVL(sum(AMOUNT),0)
			INTO :h_prev_settl_quantity, :h_prev_settl_amount
			FROM DL_DEAL
			WHERE CLIENT = :chr_l_client_53 AND
				ORIG_REFNO = ( SELECT ORIG_REFNO FROM DL_DEAL
										WHERE   CLIENT=:chr_l_client_53
										AND IDENTIY_NO=:chr_l_refno_53)
			AND   DEAL_STAT ='CS'
			AND   IDENTIY_NO <>:chr_l_refno_53
			AND   instr(nvl(MSG_STAT,' '),'A')<>0;

			IS_ANY_ORA_ERROR

        EXEC SQL SELECT nvl(QTY,0),nvl(ORIG_QTY,0),nvl(AMOUNT,0),nvl(ORIG_AMOUNT,0),INSTRUMENT_DT,MONEY_SETL_DT
		  INTO :h_curr_settl_quantity,:h_orig_settl_quantity,:h_curr_settl_amount,:h_orig_settl_amount,:h_instrdate:i_instrdate,:h_moneydate:i_moneydate
		  FROM DL_DEAL
		  WHERE   CLIENT=:chr_l_client_53
		  AND IDENTIY_NO=:chr_l_refno_53;

      	 IS_ANY_ORA_ERROR

		*/
		EXEC SQL SELECT NVL(sum(QTY),0), NVL(sum(NET_AMT),0)
			INTO :h_prev_settl_quantity, :h_prev_settl_amount
			FROM DL_DEAL
			WHERE CLIENT = :chr_l_client_53 AND
				ORIG_REFNO = ( SELECT ORIG_REFNO FROM DL_DEAL
										WHERE   CLIENT=:chr_l_client_53
										AND IDENTIY_NO=:chr_l_refno_53)
			AND   DEAL_STAT ='CS'
			AND   IDENTIY_NO <>:chr_l_refno_53
			AND   instr(nvl(MSG_STAT,' '),'A')<>0;

			IS_ANY_ORA_ERROR

		EXEC SQL SELECT nvl(sum(NET_AMT),0)
			     INTO:h_orig_settl_amount
			     FROM DL_DEAL
			     WHERE CLIENT = :chr_l_client_53
			     AND ORIG_REFNO = (SELECT ORIG_REFNO FROM DL_DEAL
										WHERE   CLIENT=:chr_l_client_53
										AND IDENTIY_NO=:chr_l_refno_53);
				IS_ANY_ORA_ERROR


        EXEC SQL SELECT nvl(QTY,0),nvl(ORIG_QTY,0),nvl(NET_AMT,0),nvl(:h_orig_settl_amount,0),INSTRUMENT_DT,MONEY_SETL_DT
		  INTO :h_curr_settl_quantity,:h_orig_settl_quantity,:h_curr_settl_amount,:h_orig_settl_amount,:h_instrdate:i_instrdate,:h_moneydate:i_moneydate
		  FROM DL_DEAL
		  WHERE   CLIENT=:chr_l_client_53
		  AND IDENTIY_NO=:chr_l_refno_53;

      	 IS_ANY_ORA_ERROR
		
		 /* ISKB-361: ASHISH 24-01-2008 End */

       if (i_instrdate == -1 )
         {
         strcpy(h_instrdate,APL_NULL_STRING);
         }
 
       if (i_moneydate == -1)
         {
         strcpy(h_moneydate,APL_NULL_STRING);
         }
                       
	printf("\n here im..... Prev Settle Qty = |%lf|",h_prev_settl_quantity); 	
        printf("\n here im.....p_SEL_VAL[10].link_tag = |%s|",p_SEL_VAL[10].link_tag); 
        printf("\n here im.....p_SEL_VAL[11].link_tag = |%lf|",p_SEL_VAL[11].NUM_VAL);
        printf("\n here im.....p_SEL_VAL[11].link_val = |%s|",p_SEL_VAL[11].link_val);
        printf("\n here im.....p_SEL_VAL[19].link_val = |%s|",p_SEL_VAL[19].link_val);
        printf("\n here im.....p_SEL_VAL[19].link_tag = |%s|",p_SEL_VAL[19].link_tag);
        
		if((!strcmp(p_SEL_VAL[9].link_tag,"Y"))&&(!strcmp(p_SEL_VAL[19].link_tag,"FMT"))) /*VaibhavK Before it is 10 im changes to 9 KOTAK_UAT I-SolveID:361*/
		{
                        printf("\n Im in If Loooooooooop......................");
                      
			h_orig_settl_quantity = h_orig_settl_quantity * p_SEL_VAL[11].NUM_VAL;
			h_prev_settl_quantity = h_prev_settl_quantity * p_SEL_VAL[11].NUM_VAL;
			h_curr_settl_quantity = h_curr_settl_quantity * p_SEL_VAL[11].NUM_VAL;
                       
                        printf("\n Org Settle Qty = |%lf|",h_orig_settl_quantity);
                        printf("\n Prev Settle Qty = |%lf|",h_prev_settl_quantity);
                        printf("\n Current Settle Qty = |%lf|",h_curr_settl_quantity); 
		}
      
      if ( (strcmp(h_instrdate,APL_NULL_STRING)== 0 ) && (strcmp(h_moneydate,APL_NULL_STRING)== 0) && (strcmp(chr_p_msgno,"53x")==0))
         {
          h_remain_settl_quantity = h_orig_settl_quantity  -  h_prev_settl_quantity  + h_curr_settl_quantity;
          h_remain_settl_amount = h_orig_settl_amount  -  h_prev_settl_amount  + h_curr_settl_amount;
    
          printf("\n {Inside if Loop} Remaining Qty =|%lf|",h_remain_settl_quantity);
          printf("\n {Inside if Loop} Remaining AMT =|%lf|",h_remain_settl_amount);
         }
      else
         {
		    h_remain_settl_quantity = h_orig_settl_quantity  -  h_prev_settl_quantity  -  h_curr_settl_quantity;
		    h_remain_settl_amount = h_orig_settl_amount  -  h_prev_settl_amount  -  h_curr_settl_amount;

                    printf("\n {Inside else Loop} Remaining Qty =|%lf|",h_remain_settl_quantity);
                    printf("\n {Inside else Loop} Remaining AMT =|%lf|",h_remain_settl_amount);
         }
      


	if(l_cond_seven_dec!=0)
	{
   	memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
   	sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
		fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PFENT_POS=",h_prev_settl_quantity);
		fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"RFENT_POS=",h_remain_settl_quantity);
	}
	else
	{
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PFENT_POS=",h_prev_settl_quantity);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RFENT_POS=",h_remain_settl_quantity);
	}

		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PAMOUNT=",h_prev_settl_amount);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RAMOUNT=",h_remain_settl_amount);

		
		if ( (l_cond_mult_ccy == 1))
		{
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PTRDAMOUNT=",h_prev_settl_amount);
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RTRDAMOUNT=",h_remain_settl_amount);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYPTRDAMOUNT=",chr_l_trdccy);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYRTRDAMOUNT=",chr_l_trdccy);
		}
		else
		{
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PTRDAMOUNT=",APL_NULL_STRING);
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RTRDAMOUNT=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYPTRDAMOUNT=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYRTRDAMOUNT=",APL_NULL_STRING);
		}
		

	}
	/* For ISKB 673 */
	else
	{
		Alert("Chirag ....here in else part of 53x\n");
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RFENT_POS=",APL_NULL_STRING);
	}
	/* For ISKB 673 */

		printf("\n KarnikV TAG: ([%s])",p_SEL_VAL[0].link_val);
		printf("\n KarnikV TAG: ([%s])",p_SEL_VAL[0].link_tag);
		/*  Vaibhav Karnik 26June2007 KOTAK-UAT I-SolveID:361   Start*/
		if(strcmp(p_SEL_VAL[0].link_val,"DOMESTIC_CPCLT")==0)
		{
			memset(chr_pty_bic_code,APL_NULL_CHAR,14);

			EXEC SQL SELECT PTY_BIC_CODE INTO :chr_pty_bic_code:i_chr_pty_bic_code
				FROM MT_PARTY
				WHERE pty_code = :p_SEL_VAL[0].link_tag;

			IS_ANY_ORA_ERROR;

			printf("\n Party BIC Code=([%s])",chr_pty_bic_code);
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PTY_BIC_CODE=",chr_pty_bic_code);
		}




	}

    /* VaibhavK I-Solve:361 10-Dec-2007 Start*/

	printf("\n KarnikVaibhav Message Number is |%s|",chr_p_msgno);
	if (strcmp(chr_p_msgno,"539")==0)
	{
		if ((strcmp(chr_l_ispartial_flg,"") != 0) && (strcmp(chr_l_ispartial_flg," ") != 0))
		{

			printf("\n KarnikVaibhav Client = |%s|",chr_l_client_53);
			printf("\n KarnikVaibhav Identiy No |%s|= ",chr_l_refno_53);
 
			
			EXEC SQL SELECT NVL(sum(QTY),0), NVL(sum(AMOUNT),0)
			INTO :h_prev_settl_quantity, :h_prev_settl_amount
			FROM DL_DEAL
			WHERE CLIENT = :chr_l_client_53 AND
				ORIG_REFNO = ( SELECT ORIG_REFNO FROM DL_DEAL
										WHERE   CLIENT=:chr_l_client_53
										AND IDENTIY_NO=:chr_l_refno_53)
			AND   DEAL_STAT IN ('SS','CS')
		/*	AND   DEAL_STAT IN ('CS') commented by Chirag 18022008 */
			AND   IDENTIY_NO <>:chr_l_refno_53
			AND   (instr(nvl(MSG_STAT,' '),'A')<>0 OR instr(nvl(MSG_STAT,' '),'C')<>0);
			/*AND   instr(nvl(MSG_STAT,' '),'A')<>0; commented by Chirag 18022008 */

/* Two conditions chnged in above qry to consider Security Settle deal for which MSG_STAT field updated with 
	value 'C'  For ISKB 659 */
			IS_ANY_ORA_ERROR

		Alert("Chirag here...Security Settle deal found....\n");

            printf("\n KarnikVaibhav Prev Sett Qty: |%lf|",h_prev_settl_quantity);
			printf("\n KarnikVaibhav Prev Sett Amt: |%lf|",h_prev_settl_amount);



		
		  
        EXEC SQL SELECT nvl(QTY,0),nvl(ORIG_QTY,0),nvl(AMOUNT,0),nvl(ORIG_AMOUNT,0),INSTRUMENT_DT,MONEY_SETL_DT
		  INTO :h_curr_settl_quantity,:h_orig_settl_quantity,:h_curr_settl_amount,:h_orig_settl_amount,:h_instrdate:i_instrdate,:h_moneydate:i_moneydate
		  FROM DL_DEAL
		  WHERE   CLIENT=:chr_l_client_53
		  AND IDENTIY_NO=:chr_l_refno_53;
	
      	 IS_ANY_ORA_ERROR

       if (i_instrdate == -1 )
         {
         strcpy(h_instrdate,APL_NULL_STRING);
         }
 
       if (i_moneydate == -1)
         {
         strcpy(h_moneydate,APL_NULL_STRING);
         }

	printf("\n here im..... Prev Settle Qty = |%lf|",h_prev_settl_quantity); 	
        printf("\n here im.....p_SEL_VAL[10].link_tag = |%s|",p_SEL_VAL[10].link_tag); 
        printf("\n here im.....p_SEL_VAL[17].link_tag = |%lf|",p_SEL_VAL[17].NUM_VAL);
        printf("\n here im.....p_SEL_VAL[17].link_val = |%s|",p_SEL_VAL[17].link_val);
        printf("\n here im.....p_SEL_VAL[16].link_val = |%s|",p_SEL_VAL[16].link_val);
        printf("\n here im.....p_SEL_VAL[16].link_tag = |%s|",p_SEL_VAL[16].link_tag);
		
		if((!strcmp(p_SEL_VAL[7].link_tag,"Y"))&&(!strcmp(p_SEL_VAL[16].link_tag,"FMT"))) /*VaibhavK Before it is 10 im changes to 9 KOTAK_UAT I-SolveID:361*/
		{
                        printf("\n Im in If Loooooooooop......................");
                      
			h_orig_settl_quantity = h_orig_settl_quantity * p_SEL_VAL[17].NUM_VAL;
			h_prev_settl_quantity = h_prev_settl_quantity * p_SEL_VAL[17].NUM_VAL;
			h_curr_settl_quantity = h_curr_settl_quantity * p_SEL_VAL[17].NUM_VAL;
                       
                        printf("\n Org Settle Qty = |%lf|",h_orig_settl_quantity);
                        printf("\n Prev Settle Qty = |%lf|",h_prev_settl_quantity);
                        printf("\n Current Settle Qty = |%lf|",h_curr_settl_quantity); 
		}
      
      if ( (strcmp(h_instrdate,APL_NULL_STRING)== 0 ) && (strcmp(h_moneydate,APL_NULL_STRING)== 0) && (strcmp(chr_p_msgno,"539")==0))
         {
          h_remain_settl_quantity = h_orig_settl_quantity  -  h_prev_settl_quantity  + h_curr_settl_quantity;
          h_remain_settl_amount = h_orig_settl_amount  -  h_prev_settl_amount  + h_curr_settl_amount;
    
          printf("\n {Inside if Loop} Remaining Qty =|%lf|",h_remain_settl_quantity);
          printf("\n {Inside if Loop} Remaining AMT =|%lf|",h_remain_settl_amount);
         }
      else
         {
		    h_remain_settl_quantity = h_orig_settl_quantity  -  h_prev_settl_quantity  -  h_curr_settl_quantity;
		    h_remain_settl_amount = h_orig_settl_amount  -  h_prev_settl_amount  -  h_curr_settl_amount;

                    printf("\n {Inside else Loop} Remaining Qty =|%lf|",h_remain_settl_quantity);
                    printf("\n {Inside else Loop} Remaining AMT =|%lf|",h_remain_settl_amount);
         }
      


	if(l_cond_seven_dec!=0)
	{
   	memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
   	sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
		fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"PFENT_POS=",h_prev_settl_quantity);
		fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"RFENT_POS=",h_remain_settl_quantity);
	}
	else
	{
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PFENT_POS=",h_prev_settl_quantity);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RFENT_POS=",h_remain_settl_quantity);
	}

		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PAMOUNT=",h_prev_settl_amount);
		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RAMOUNT=",h_remain_settl_amount);

		
		if ( (l_cond_mult_ccy == 1))
		{
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"PTRDAMOUNT=",h_prev_settl_amount);
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RTRDAMOUNT=",h_remain_settl_amount);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYPTRDAMOUNT=",chr_l_trdccy);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYRTRDAMOUNT=",chr_l_trdccy);
		}
		else
		{
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PTRDAMOUNT=",APL_NULL_STRING);
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RTRDAMOUNT=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYPTRDAMOUNT=",APL_NULL_STRING);
	  		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CCYRTRDAMOUNT=",APL_NULL_STRING);
		}
		

	}
	/* For ISKB 673 */
	else
	{
		Alert("Chirag ....here in else part of 539\n");
		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RFENT_POS=",APL_NULL_STRING);
	}
	/* For ISKB 673 */


		printf("\n KarnikV TAG: ([%s])",p_SEL_VAL[0].link_val);
		printf("\n KarnikV TAG: ([%s])",p_SEL_VAL[0].link_tag);
		/*  Vaibhav Karnik 26June2007 KOTAK-UAT I-SolveID:361   Start*/
		if(strcmp(p_SEL_VAL[0].link_val,"DOMESTIC_CPCLT")==0)
		{
			memset(chr_pty_bic_code,APL_NULL_CHAR,14);

			EXEC SQL SELECT PTY_BIC_CODE INTO :chr_pty_bic_code:i_chr_pty_bic_code
				FROM MT_PARTY
				WHERE pty_code = :p_SEL_VAL[0].link_tag;

			IS_ANY_ORA_ERROR;

			printf("\n Party BIC Code=([%s])",chr_pty_bic_code);
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PTY_BIC_CODE=",chr_pty_bic_code);
		}
		/*  Vaibhav Karnik 26June2007 KOTAK-UAT I-SolveID:361   END*/



	}
	/* VaibhavK I-Solve:361 10-Dec-2007  End*/
		

		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREPDATE=",chr_h_prepdate_new);

		

		memset(chr_h_trd_cash_client,APL_NULL_CHAR,APL_IBANACC_LEN);
		memset(chr_h_gl_account,APL_NULL_CHAR,APL_CLIENT_LENGTH);

		
      
		EXEC SQL SELECT DL_CLASS into :chr_l_typeoftrd FROM DL_DEAL WHERE CLIENT=:chr_l_client_53 AND IDENTIY_NO=:chr_l_refno_53;
      IS_ANY_ORA_ERROR
      l_cond_gr_onexchange = 0;
      if (APL_FAILURE == CO_Chk_CntryEnabled("REMOTE_TRADING","GR_ON_EXCHANGE",&l_cond_gr_onexchange,l_debug_info_ptr))
      {
         APL_GOBACK_FAIL
      }
      
		l_cond_ibanacc = 0;
		if (APL_FAILURE == CO_Chk_CntryEnabled("CACASHACC","IBANACC",&l_cond_ibanacc,l_debug_info_ptr))
		{
		    APL_GOBACK_FAIL
	        }
		if(l_cond_ibanacc==1)
		{
		   EXEC SQL SELECT IBAN_CLT 
		   INTO :chr_h_trd_cash_client:i_trd_cash_account
		   FROM DL_CASHCLT
		   WHERE CLIENT = :chr_l_client_53
		   AND DEFAULT_CCY IN ('Y','N')
		   AND GL_ACCOUNT=(SELECT GL_CLIENT FROM DL_DEAL
					WHERE CLIENT=:chr_l_client_53
					AND IDENTIY_NO=:chr_l_refno_53)
		   AND ROWNUM < 2;	

			IS_ANY_ORA_ERROR

		if(strcmp(chr_h_trd_cash_client,APL_NULL_STRING)==0)
		{
			EXEC SQL SELECT GL_CLIENT
				 INTO :chr_h_trd_cash_client:i_trd_cash_account
				 FROM DL_DEAL
				 WHERE CLIENT=:chr_l_client_53
				 AND IDENTIY_NO=:chr_l_refno_53;

			IS_ANY_ORA_ERROR

		   if(strcmp(chr_h_trd_cash_client,APL_NULL_STRING)==0)
		   {
			EXEC SQL SELECT IBAN_CLT
			INTO :chr_h_trd_cash_client:i_trd_cash_account
			FROM DL_CASHCLT
			WHERE CLIENT = :chr_l_client_53
			AND DEFAULT_CCY = 'Y';
			
			IS_ANY_ORA_ERROR

			if(strcmp(chr_h_trd_cash_client,APL_NULL_STRING)==0)
			{
			   EXEC SQL SELECT GL_ACCOUNT
			   INTO :chr_h_trd_cash_client:i_trd_cash_account
			   FROM DL_CASHCLT
			   WHERE CLIENT = :chr_l_client_53
			   AND DEFAULT_CCY = 'Y';

			   IS_ANY_ORA_ERROR

			if(sqlca.sqlcode == 1403)
			{
			    EXEC SQL SELECT IBAN_CLT
			    INTO :chr_h_trd_cash_client:i_trd_cash_account
			    FROM DL_CASHCLT
			    WHERE CLIENT =:chr_l_client_53
			    AND GL_ACCOUNT=(SELECT CLN_GL_ACCOUNT FROM MT_CLIENT
						WHERE cln_code=:chr_l_client_53)
			    AND ROWNUM < 2;

			    IS_ANY_ORA_ERROR

			    if(strcmp(chr_h_trd_cash_client,APL_NULL_STRING)==0)
			    {
			       EXEC SQL SELECT CLN_GL_ACCOUNT
			       INTO :chr_h_trd_cash_client:i_trd_cash_account
			       FROM MT_CLIENT
			       WHERE cln_code =:chr_l_client_53;

			       IS_ANY_ORA_ERROR
			    } 

		       }
		     }	
		}	
		}
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CASH_ACCOUNT=",chr_h_trd_cash_client);
		 }
		else if( (l_cond_gr_onexchange > 0) && (strcmp(chr_l_typeoftrd,"50") == 0 ) ) 
      {
          EXEC SQL SELECT ADDITION_ACC
          INTO :chr_h_trd_cash_client:i_trd_cash_account
          FROM DL_CASHCLT
          WHERE   CLIENT=:chr_l_client_53
                  AND DEFAULT_CCY='Y';
          IS_ANY_ORA_ERROR
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CASH_ACCOUNT=",chr_h_trd_cash_client);
      }
		else
		{
		EXEC SQL SELECT GL_CLIENT
		INTO :chr_h_trd_cash_client:i_trd_cash_account
		FROM DL_DEAL
		WHERE   CLIENT=:chr_l_client_53
		AND IDENTIY_NO=:chr_l_refno_53;

		IS_ANY_ORA_ERROR

		if (i_trd_cash_account == -1)
		{
			EXEC SQL SELECT CLN_GL_ACCOUNT
			INTO :chr_h_gl_account:i_ibbs_account
			FROM MT_CLIENT
			WHERE cln_code=:chr_l_client_53;

			IS_ANY_ORA_ERROR

			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CASH_ACCOUNT=",chr_h_gl_account);
		}
		else
		{
			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CASH_ACCOUNT=",chr_h_trd_cash_client);
		}
		}

      
      if(((strcmp(h_instrdate,APL_NULL_STRING)== 0 ) && (strcmp(h_moneydate,APL_NULL_STRING)== 0) && (strcmp(chr_p_msgno,"53x")==0)) || (strcmp(chr_p_msgno,"539")==0))
      {

       EXEC SQL SELECT INFORMATION INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
                  FROM DL_MSGLINK
                  WHERE CLIENT = :chr_l_client_53
                  AND IDENTIY_NO = :chr_l_refno_53
                  AND MSG_IN_OUT_IND= 'Z'
						AND SWIFT_MSG_NO !='548N03'
                  AND DATE_OF_INPUT = (SELECT MAX(DATE_OF_INPUT)
                                    FROM DL_MSGLINK
                                    WHERE CLIENT=:chr_l_client_53
                                    AND IDENTIY_NO = :chr_l_refno_53
												AND SWIFT_MSG_NO !='548N03'
                                    AND MSG_IN_OUT_IND= 'Z');
         IS_ANY_ORA_ERROR;
         printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEME=",chr_l_addinfo_uniq_seme);

      }
      
}


		if ( (!strncmp(chr_p_msgno, "53x", 3)) || (!strcmp(chr_p_msgno,"539")) ||(strcmp(chr_p_msgno,MS_SWIFT_BOG_NO)==0) || (strcmp(chr_p_msgno,MS_MSGNO_52X)==0) || (strcmp(chr_p_msgno, MS_MSGNO_52XN01)==0) ||(strcmp(chr_p_msgno, MS_MSGNO_54XN02)==0))
		{
			if (!strncmp(chr_p_msgno,"53x",3))
				strcpy(chr_l_uniq_client, p_SEL_VAL[7].link_tag);

			if (!strcmp(chr_p_msgno,"53x")) 
				{
				if (!strcmp((p_SEL_VAL[12].link_tag),"1"))
					strcpy(chr_l_uniq_msgno,"546");
				if (!strcmp((p_SEL_VAL[12].link_tag),"2"))
					strcpy(chr_l_uniq_msgno,"544");
				if (!strcmp((p_SEL_VAL[12].link_tag),"3"))
					strcpy(chr_l_uniq_msgno,"547");
				if (!strcmp((p_SEL_VAL[12].link_tag),"4"))
					strcpy(chr_l_uniq_msgno,"545");
				}

			if (!strcmp(chr_p_msgno,"53xN01")) 
				 strcpy(chr_l_uniq_msgno,chr_p_msgno);

			if  (!strcmp(chr_p_msgno,"539")) 
				{
            if (!strcmp((p_SEL_VAL[1].link_tag),"1"))
               strcpy(chr_l_uniq_msgno,"546");
            if (!strcmp((p_SEL_VAL[1].link_tag),"2"))
               strcpy(chr_l_uniq_msgno,"544");
            if (!strcmp((p_SEL_VAL[1].link_tag),"3"))
               strcpy(chr_l_uniq_msgno,"547");
            if (!strcmp((p_SEL_VAL[1].link_tag),"4"))
               strcpy(chr_l_uniq_msgno,"545");

				 strcpy(chr_l_uniq_client, chr_l_client_53);
 				}
			
			if ((strcmp(chr_p_msgno,MS_SWIFT_BOG_NO)==0) || (strcmp(chr_p_msgno,MS_MSGNO_52X)==0) )
				{
					strcpy(chr_l_uniq_client, p_SEL_VAL[2].link_tag);
					if(strcmp(p_SEL_VAL[4].link_tag,"1")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_542);
					if(strcmp(p_SEL_VAL[4].link_tag,"2")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_540);
					if(strcmp(p_SEL_VAL[4].link_tag,"3")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_543);
					if(strcmp(p_SEL_VAL[4].link_tag,"4")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_541);
				}
			
			
			if ((strcmp(chr_p_msgno,MS_MSGNO_54XN02)==0) || (strcmp(chr_p_msgno,MS_MSGNO_52XN01)==0) )
				{
					strcpy(chr_l_uniq_client, p_SEL_VAL[2].link_tag);
					if(strcmp(p_SEL_VAL[2].link_tag,"1")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_542);
					if(strcmp(p_SEL_VAL[2].link_tag,"2")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_540);
					if(strcmp(p_SEL_VAL[2].link_tag,"3")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_543);
					if(strcmp(p_SEL_VAL[2].link_tag,"4")==0)
               	strcpy(chr_l_uniq_msgno, MS_MSGNO_541);
				}
			
         if (strlen(chr_l_uniq_client)) 
         {
			
				
				if((!strcmp(chr_p_msgno,"53x")) ||(!strcmp(chr_p_msgno,"539")) || (!strcmp(chr_p_msgno,MS_SWIFT_BOG_NO)) ) 
            {
               strcpy(l_progseqnum_struct_h->sequencename ,DEALMS_LINK_SEQ_NAME);
					chr_l_seq_num=0;
               chr_l_seq_num = CO_RtvNxtSeqNum(l_progseqnum_struct_h , l_debug_info_ptr);
               if (APL_FAILURE == chr_l_seq_num)
               {
                  CO_ProcMonitor(APL_OUT_FILE,"Failed To Get The Next Sequence Number For CMSGLINK\n",NULL,NULL);
                  APL_GOBACK_FAIL
               }
               strcpy(l_dl_msglink_struct_h.h_dl_client,chr_l_uniq_client);
               strcpy(l_dl_msglink_struct_h.h_indentity_no,chr_l_refno_53);
               strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"O");
               
					if(!strcmp(chr_p_msgno,"53x"))
					{
						strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"54x");
						strcpy(l_dl_msglink_struct_h.h_information,p_SEL_VAL[17].link_tag);
					}
					else if(!strcmp(chr_p_msgno,"539"))
					{
						strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"54xN01");
						strcpy(l_dl_msglink_struct_h.h_information,p_SEL_VAL[13].link_tag);
					}
					else if(!strcmp(chr_p_msgno,MS_SWIFT_BOG_NO)) 
               {
						strcpy(l_dl_msglink_struct_h.h_indentity_no,p_SEL_VAL[3].link_tag);
                  strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"54B");
						strcpy(l_dl_msglink_struct_h.h_information,p_SEL_VAL[5].link_tag);
               }
					
               if (APL_FAILURE == CO_RtvMachDtTime( l_dl_msglink_struct_h.h_new_dt,
                                                         l_debug_info_ptr ))
               {
                  APL_GOBACK_FAIL
               }
               l_dl_msglink_struct_h.h_sequence_num=chr_l_seq_num;
               if(APL_FAILURE==DL_Mod_DLLinkNew(&l_dl_msglink_struct_h,l_debug_info_ptr))
               {
                  CO_ProcMonitor(APL_OUT_FILE,
									"Failed To Insert into CMSGLINK Table\n",
									NULL,NULL);
                  APL_GOBACK_FAIL
               }
            }
         }
      }
		printf("p_rec_no is %d\n",p_rec_no);


		/* Kalyannnnnnnnnnnnnnnnn - 060308 */
        printf("\n 11client is\n");
		printf("Kalyan-- Going for Orig Deal Code [%s] \n",chr_p_msgno);
		printf("\n 12client is |%s| \n",chr_l_client);


		if(!strncmp(chr_p_msgno, "53x", 3) || !strncmp(chr_p_msgno, "54x", 3))
		{
			char 	l_tempdealcd[4] ;
			char 	l_origrefno[17] ;
			memset(l_tempdealcd,APL_NULL_CHAR,sizeof(l_tempdealcd));
			memset(l_origrefno,APL_NULL_CHAR,sizeof(l_origrefno));
			memset(chr_l_refno,APL_NULL_CHAR,sizeof(chr_l_refno));
			memset(chr_l_client,APL_NULL_CHAR,sizeof(chr_l_client));

			if ( strlen(p_SEL_VAL[1].link_tag) && strlen(p_SEL_VAL[7].link_tag) )
			{
				strcpy(chr_l_refno, p_SEL_VAL[1].link_tag);
				strcpy(chr_l_client, p_SEL_VAL[7].link_tag);
			}


			EXEC SQL SELECT DL_CLASS, ORIG_REFNO
				INTO :l_tempdealcd,:l_origrefno
				FROM DL_DEAL
				WHERE CLIENT = :chr_l_client
				AND IDENTIY_NO   = :chr_l_refno ;

			IS_ANY_ORA_ERROR

			if(strcmp(l_tempdealcd,"59")==0)
			{
				printf("This is shortage trade...[%s]\n",l_origrefno);

				memset(l_tempdealcd,APL_NULL_CHAR,sizeof(l_tempdealcd));

				EXEC SQL SELECT DEAL_CD 
						INTO :l_tempdealcd
						FROM DL_DEAL
						WHERE CLIENT = :chr_l_client
						AND IDENTIY_NO   = :l_origrefno;

				IS_ANY_ORA_ERROR

			}
			else
			{
				printf("This is not a shortage trade...\n");

				memset(l_tempdealcd,APL_NULL_CHAR,sizeof(l_tempdealcd));

				EXEC SQL SELECT DEAL_CD
						INTO :l_tempdealcd
						FROM DL_DEAL
						WHERE CLIENT = :chr_l_client
						AND IDENTIY_NO   = :chr_l_refno ;

				IS_ANY_ORA_ERROR
			}

							
			if (sqlca.sqlcode == 0)
			{
				printf("FINAL DEAL CD %s\n", l_tempdealcd);
				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ORG_DL_CD=",l_tempdealcd);
			}
		}




	if ( p_rec_no == 1 ) 
	{
    printf("\n 13client is |%s| \n",chr_l_client);
		memset(chr_l_client, APL_NULL_CHAR, APL_CLIENT_LENGTH);
		memset(chr_l_ca_id, APL_NULL_CHAR, CORP_ID_LEN);
		memset(chr_l_refno, APL_NULL_CHAR, APL_TXNREFNO_LEN);
		memset(chr_l_prelim_ind, APL_NULL_CHAR, 2);

		strcpy(chr_l_prelim_ind, "N");

		if ( !strncmp(chr_p_msgno, "550", 3) )
		{
			if ( strlen(p_SEL_VAL[2].link_tag) && strlen(p_SEL_VAL[14].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[2].link_tag);
				strcpy(chr_l_ca_id, p_SEL_VAL[14].link_tag);
			}
		}
		else if ( ( !strncmp(chr_p_msgno, "551", 3) ) || (strcmp(chr_p_msgno,"564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0))
		{
			if ( strlen(p_SEL_VAL[2].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[2].link_tag);
			}

			if ( !strcmp(chr_p_msgno, "551N02") )
			{
				if ( strlen(p_SEL_VAL[14].link_tag) )
				{
					strcpy(chr_l_ca_id, p_SEL_VAL[14].link_tag);
				}
			}
			
			
			
			else if ( !strcmp(chr_p_msgno, "551N01") || !strcmp(chr_p_msgno, "551R01") || !strcmp(chr_p_msgno, "551R03") || !strcmp(chr_p_msgno, "551C05")  || (strcmp(chr_p_msgno, "564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0) )
			{
		
				if ( strlen(p_SEL_VAL[14].link_tag) )
				{
					strcpy(chr_l_ca_id, p_SEL_VAL[14].link_tag);
				}
			}
			else if ( strlen(p_SEL_VAL[10].link_tag) )
			{
				strcpy(chr_l_ca_id, p_SEL_VAL[10].link_tag);
			}

			if ( ( !strcmp(chr_p_msgno, "551N01") ) || (strcmp(chr_p_msgno,"564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0) )
			{
				printf("******The chr_value of prelim indicator is: %s\n",p_SEL_VAL[15].link_tag);
				strcpy(chr_l_prelim_ind, p_SEL_VAL[15].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "552", 3) )
		{
			if ( strlen(p_SEL_VAL[2].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[2].link_tag);
			}
			if ( !strcmp(chr_p_msgno, "552N01") || !strcmp(chr_p_msgno, "552C01") 
				 || !strcmp(chr_p_msgno, "552R01") )
			{
				if ( strlen(p_SEL_VAL[16].link_tag) )
				{
					strcpy(chr_l_ca_id, p_SEL_VAL[16].link_tag);
				}

				strcpy(chr_l_prelim_ind, p_SEL_VAL[17].link_tag);
			}
			else if ( strlen(p_SEL_VAL[15].link_tag) )
			{
				strcpy(chr_l_ca_id, p_SEL_VAL[15].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "554", 3) )
		{
			if ( strlen(p_SEL_VAL[0].link_tag) && strlen(p_SEL_VAL[2].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[2].link_tag);
				strcpy(chr_l_ca_id, p_SEL_VAL[0].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "555", 3) )
		{
			if ( strlen(p_SEL_VAL[9].link_tag) && strlen(p_SEL_VAL[10].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[9].link_tag);
				strcpy(chr_l_ca_id, p_SEL_VAL[10].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "556", 3) )
		{
			if ( strlen(p_SEL_VAL[4].link_tag) && strlen(p_SEL_VAL[10].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[4].link_tag);
				strcpy(chr_l_ca_id, p_SEL_VAL[10].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "560", 3) )
		{
			if ( strlen(p_SEL_VAL[0].link_tag) && strlen(p_SEL_VAL[30].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[0].link_tag);
				strcpy(chr_l_ca_id, p_SEL_VAL[30].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "562", 3) )
		{
			if ( strlen(p_SEL_VAL[4].link_tag) && strlen(p_SEL_VAL[7].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[7].link_tag);
				strcpy(chr_l_ca_id, p_SEL_VAL[4].link_tag);
			}
		}
		else if ( !strcmp(chr_p_msgno, "566N09") || !strcmp(chr_p_msgno, "566N19") || !strcmp(chr_p_msgno, "566N29"))
		{
			printf("\n Inside 566N09 Or 566N19 \n");
			printf("\n ca id is |%s| & client is |%s| \n",p_SEL_VAL[10].link_tag,p_SEL_VAL[9].link_tag);
			if ( strlen(p_SEL_VAL[10].link_tag) )
			{
				strcpy(chr_l_ca_id, p_SEL_VAL[10].link_tag);
			}
			if ( strlen(p_SEL_VAL[9].link_tag) )
			{
				strcpy(chr_l_client, p_SEL_VAL[9].link_tag);
			}
			printf("\n ca id is |%s| & client is |%s| \n",chr_l_ca_id,chr_l_client);
		}
		//!strcmp(chr_p_msgno, "566R03") - Added by Chirag 17012008 below code
		else if ( !strncmp(chr_p_msgno, "563", 3) || !strcmp(chr_p_msgno, "566R03"))
		{
			Alert("Chirag here ....Corp ID - |%s|\n",p_SEL_VAL[9].link_tag);

			if ( !strcmp(chr_p_msgno, "563N01") )
			{
				if ( strlen(p_SEL_VAL[9].link_tag) )
				{
					strcpy(chr_l_ca_id, p_SEL_VAL[9].link_tag);
				}
				#ifdef EMU_PROCESSING
					if ( strlen(p_SEL_VAL[12].link_tag))
					{
						
						strcpy(chr_l_client, p_SEL_VAL[12].link_tag);
					}
				#else
					if ( strlen(p_SEL_VAL[10].link_tag))
					{
						
						strcpy(chr_l_client, p_SEL_VAL[10].link_tag);
					}
				#endif
			}
			else if ( !strcmp(chr_p_msgno, "563N02") )
			{
				if ( strlen(p_SEL_VAL[9].link_tag) )
				{
					strcpy(chr_l_ca_id, p_SEL_VAL[9].link_tag);
				}
				if ( strlen(p_SEL_VAL[6].link_tag) )
				{
					strcpy(chr_l_client, p_SEL_VAL[6].link_tag);
				}
			}
			else if ( !strcmp(chr_p_msgno, "563N03") || !strcmp(chr_p_msgno, "566R03"))
			{
				if ( strlen(p_SEL_VAL[9].link_tag) )
				{
					strcpy(chr_l_ca_id, p_SEL_VAL[9].link_tag);
				}
				if ( strlen(p_SEL_VAL[7].link_tag) )
				{
					strcpy(chr_l_client, p_SEL_VAL[7].link_tag);
				}
			}
		}
		else if ( !strncmp(chr_p_msgno, "53x", 3) )
		{
			if ( strlen(p_SEL_VAL[1].link_tag) && strlen(p_SEL_VAL[7].link_tag) )
			{
				strcpy(chr_l_refno, p_SEL_VAL[1].link_tag);
				strcpy(chr_l_client, p_SEL_VAL[7].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "572", 3) )
		{
			if ( strlen(p_SEL_VAL[3].link_tag) && strlen(p_SEL_VAL[5].link_tag) )
			{
				strcpy(chr_l_refno, p_SEL_VAL[3].link_tag);
				strcpy(chr_l_client, p_SEL_VAL[5].link_tag);
			}
		}
		else if ( !strncmp(chr_p_msgno, "573", 3) ) 
		{
			if ( !strcmp(p_SEL_VAL[13].link_val, "CLIENT") &&  
				  !strcmp(p_SEL_VAL[15].link_val, "IDENTIY_NO") )
			{
				if (strlen(p_SEL_VAL[13].link_tag) && strlen(p_SEL_VAL[15].link_tag))
				{
					strcpy(chr_l_client, p_SEL_VAL[13].link_tag);
					strcpy(chr_l_refno, p_SEL_VAL[15].link_tag);
				}
			}
		}
		else if ( !strcmp(chr_p_msgno, "596N01") ) 
		{
			if (strlen(p_SEL_VAL[0].link_tag) && strlen(p_SEL_VAL[1].link_tag))
			{
				strcpy(chr_l_client, p_SEL_VAL[0].link_tag);
				strcpy(chr_l_refno, p_SEL_VAL[1].link_tag);
			}
         
         strcpy(l_domcp_596N01,p_STAT_VAL[8].link_tag);
         printf("l_domcp_596N01 %s\n",l_domcp_596N01);
         if (l_domcp_596N01[0] =='/')
         {
             fprintf(p_Data_File,"%d%s\n",*p_rownum,"SLASH_IND=Y");
         }
         else
         {
             fprintf(p_Data_File,"%d%s\n",*p_rownum,"SLASH_IND=");
         }
		}
		else if ( !strcmp(chr_p_msgno, "596N02") ) 
		{
			if (strlen(p_SEL_VAL[3].link_tag) && strlen(p_SEL_VAL[5].link_tag))
			{
				strcpy(chr_l_client, p_SEL_VAL[3].link_tag);
				strcpy(chr_l_refno, p_SEL_VAL[5].link_tag);
			}
		}
		else if ( !strcmp(chr_p_msgno, "596P") ) 
		{
			if (strlen(p_SEL_VAL[1].link_tag) && strlen(p_SEL_VAL[2].link_tag))
			{
				strcpy(chr_l_client, p_SEL_VAL[1].link_tag);
				strcpy(chr_l_refno, p_SEL_VAL[2].link_tag);
			}
		}
      else if ( !strcmp(chr_p_msgno, "534") ) 
      {
         if (strlen(p_SEL_VAL[1].link_tag) && strlen(p_SEL_VAL[2].link_tag))
         {
            strcpy(chr_l_client, p_SEL_VAL[2].link_tag);
            strcpy(chr_l_refno, p_SEL_VAL[3].link_tag);
				
         }
      }
      else if ( !strcmp(chr_p_msgno, "54B") ) 
      {
         if (strlen(p_SEL_VAL[2].link_tag) && strlen(p_SEL_VAL[3].link_tag))
         {
            strcpy(chr_l_client, p_SEL_VAL[2].link_tag);
            strcpy(chr_l_refno, p_SEL_VAL[3].link_tag);
         }
      }
		

		if(strlen(chr_l_ca_id) > 0)
		{
			if(CO_Trim(chr_l_ca_id, ' ', 'R', chr_l_temp_ca_id, l_debug_info_ptr)== APL_FAILURE) 
				{
			  	APL_GOBACK_FAIL
				}
	   	strcpy(chr_l_ca_id, chr_l_temp_ca_id);
		}

		
		if(strlen(chr_l_client) > 0)
		{
			if(CO_Trim(chr_l_client, ' ', 'R', chr_l_temp_client, l_debug_info_ptr)== APL_FAILURE) 
				{
			  	APL_GOBACK_FAIL
				}
	   	strcpy(chr_l_client, chr_l_temp_client);
		}

		
		if(strlen(chr_l_refno) > 0)
		{
			if(CO_Trim(chr_l_refno, ' ', 'R', chr_l_temp_refno, l_debug_info_ptr)== APL_FAILURE) 
				{
			  	APL_GOBACK_FAIL
				}
	   	strcpy(chr_l_refno, chr_l_temp_refno);
		}


		printf("\n L_ACCOUNT is :%s:",chr_l_client);
		printf("\n chr_l_ca_id is :%s:",chr_l_ca_id);
      printf("\n chr_l_refno is :%s:",chr_l_refno);
      printf("\n int_len chr_l_ca_id :%d:\n",(int)strlen(chr_l_ca_id)); //AIX - Warnings Removal
      printf("\n int_len chr_l_refno :%d:\n",(int)strlen(chr_l_refno));


		if ( strlen(chr_l_client) && strlen(chr_l_refno) ) 
		{


			memset(chr_h_prev_inputdt, APL_NULL_CHAR, APL_DATE_LEN);
			memset(chr_h_prev_msgno, APL_NULL_CHAR, 7);

			EXEC SQL SELECT TO_CHAR(DATE_OF_INPUT, 'YYYYMMDD'), SWIFT_MSG_NO
						INTO :chr_h_prev_inputdt INDICATOR :int_i_prev_input_dt, 
							  :chr_h_prev_msgno INDICATOR :int_i_prev_msgno
						FROM DL_MSGLINK
						WHERE CLIENT = :chr_l_client AND
								IDENTIY_NO = :chr_l_refno AND
						MSG_IN_OUT_IND = 'I' AND 
						ROWNUM < 2 ;  

			IS_ANY_ORA_ERROR


			if ( APL_ZERO_RESULT_SET ) 
			{

				fprintf(p_Data_File,"%d%s\n",*p_rownum,"INCMSGNO=");
				fprintf(p_Data_File,"%d%s\n",*p_rownum,"INCMSGINPUTDT=");
			}
			else
			{
			printf("\n Inside data int_found..\n");
				if ( !strcmp(chr_h_prev_msgno, MS_MSGNO_540) || !strcmp(chr_h_prev_msgno, MS_MSGNO_541) 
					 || !strcmp(chr_h_prev_msgno, MS_MSGNO_542) || !strcmp(chr_h_prev_msgno, MS_MSGNO_543))
				{
			printf("\n Inside MT messages..\n");
					fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCMSGNO=", 
							  chr_h_prev_msgno);
				}
				else
				{
			printf("\n Inside else of MT messages..\n");
					fprintf(p_Data_File,"%d%s\n",*p_rownum,"INCMSGNO=");
				}

				fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INCMSGINPUTDT=", 
						  chr_h_prev_inputdt);
			}
		}
		else if ( (strlen(chr_l_client) != 0) && (strlen(chr_l_ca_id)!=0 ))   
		{
			

			if (strcmp(chr_l_ca_id," ") != 0) 
			{
		    memset(&l_camesglink_struct_h, NULL, sizeof(CAMESGLINK_STRUCT_H));
		    memset(chr_l_curr_link_type, APL_NULL_CHAR, 3);

		    if ( !strcmp(chr_p_msgno, "552N01") || !strcmp(chr_p_msgno, "551N01") || !strcmp(chr_p_msgno,"564N91") )
		    
		    {
			    strcpy(chr_l_curr_link_type, "VN");
		    }
		    else if ( !strcmp(chr_p_msgno, "552R01") || !strcmp(chr_p_msgno, "551R01")  || !strcmp(chr_p_msgno,"564R91") )
		    
		    {
			    strcpy(chr_l_curr_link_type, "VR");
		    }
		    else if ( !strcmp(chr_p_msgno, "550N01") || !strcmp(chr_p_msgno, "551N02") 
					    || !strcmp(chr_p_msgno, "554N02") || !strcmp(chr_p_msgno, "556N01") 
					    || !strcmp(chr_p_msgno, "552N02") ) 
		    {
			    strcpy(chr_l_curr_link_type, "TN");
		    }
		    else if ( !strcmp(chr_p_msgno, "551C05") || !strcmp(chr_p_msgno, "554C02") 
					    || !strcmp(chr_p_msgno, "550C01") || !strcmp(chr_p_msgno, "556C01") 
					    || !strcmp(chr_p_msgno, "552C02") ) 
		    {
			    strcpy(chr_l_curr_link_type, "TC");
		    }
		    else if ( !strcmp(chr_p_msgno, "552R03") || !strcmp(chr_p_msgno, "554R02")
					    || !strcmp(chr_p_msgno, "550R01") || !strcmp(chr_p_msgno, "556R01") 
					    || !strcmp(chr_p_msgno, "551R03") )
		    
		    {
			    strcpy(chr_l_curr_link_type, "TR");
		    }
		    else if ( !strcmp(chr_p_msgno, "563N01") || !strcmp(chr_p_msgno, "563N02") 
					    || !strcmp(chr_p_msgno, "563N03")  || !strcmp(chr_p_msgno, "554N01") 
					    || !strcmp(chr_p_msgno, "555N01") || !strcmp(chr_p_msgno, "556N02")) 
		    {
				if((strcmp(p_SEL_VAL[10].link_tag,"TO")==0) && (!strcmp(chr_p_msgno, "563N03")) )
				{
					strcpy(chr_l_curr_link_type,"VN");
				}
				else
			    strcpy(chr_l_curr_link_type, "PN");
		    }
		    else if ( !strcmp(chr_p_msgno, "556R02") || !strcmp(chr_p_msgno, "554R01") 
					    || !strcmp(chr_p_msgno, "555R01")|| !strcmp(chr_p_msgno, "566R03") ) 
		    {
			    strcpy(chr_l_curr_link_type, "PR");
		    }
		    else if ( !strcmp(chr_p_msgno, "562N01") ) 
		    {
			    strcpy(chr_l_curr_link_type, "TC");

		    }
		    else if ( !strcmp(chr_p_msgno, "562N02") ) 
		    {
				 if (strcmp(p_STAT_VAL[6].link_val,"INST_TYPE")==0)
				 {
					if (strcmp(p_STAT_VAL[6].link_tag,"EVST")==0)
					{
						strcpy(chr_l_curr_link_type, "VS");
					}
					else if ((strcmp(p_STAT_VAL[6].link_tag,"INST")==0) || (strcmp(p_STAT_VAL[6].link_tag,"CAST")==0))
					{
						strcpy(chr_l_curr_link_type, "NC"); 
					}
             	else if (strcmp(p_STAT_VAL[6].link_tag,"NPAY")==0)
               {
                  strcpy(chr_l_curr_link_type, "PR");
               }
				 }
				 else
				 {
			    	strcpy(chr_l_curr_link_type, "PR");
				 }
		    }
			 else if ( !strcmp(chr_p_msgno, "560N01") || !strcmp(chr_p_msgno, "560R01"))  /*Isolve:362*/
          {
             strcpy(chr_l_curr_link_type, "VN"); 
          }
			 else if ( (strcmp(chr_p_msgno, "566N09")==0) || (strcmp(chr_p_msgno, "566N19")==0)) 
          {
				 printf("\n For 566N09 or 566N19 Setting value of link type to PN \n");
             strcpy(chr_l_curr_link_type, "PN"); 
          }
			 else if  (strcmp(chr_p_msgno, "566N29")==0) 
          {
				 printf("\n For 566N09 or 566N19 Setting value of link type to PN \n");
             strcpy(chr_l_curr_link_type, "TN"); 
          }

			 		
		    if (strcmp(chr_p_msgno,"563N02") != 0) 
			 {

            
           if ( (!strcmp(chr_p_msgno,"556R02"))
             || (!strcmp(chr_p_msgno,"554R01"))
             || (!strcmp(chr_p_msgno,"555R01"))
               )
				{
                  if ( APL_FAILURE == CA_Rtv_CALinkInfo(chr_l_ca_id, chr_l_client, APL_NULL_STRING, chr_l_curr_link_type,APL_NULL_STRING, &l_camesglink_struct_h,chr_l_pay_srl_nbr, l_debug_info_ptr) )
						{
							APL_GOBACK_FAIL
						}
				}
				else
				{
					printf("\n Callling CA_Rtv_CALinkInfo with caid=|%s|, client=|%s|, linktype=|%s| \n",chr_l_ca_id, chr_l_client,chr_l_curr_link_type);
					fflush(stdout);

		    		if ( APL_FAILURE == CA_Rtv_CALinkInfo(chr_l_ca_id, chr_l_client, APL_NULL_STRING, chr_l_curr_link_type, APL_NULL_STRING, &l_camesglink_struct_h,APL_NULL_STRING, l_debug_info_ptr) )
		    		{
			   	 APL_GOBACK_FAIL
		    		}
				}
			 }
				printf("\n After returning CA_Rtv_CALinkInfo \n");	
				printf("\n l_camesglink_struct_h.h_swift_msg_no=|%s|",l_camesglink_struct_h.h_swift_msg_no);
				printf("\n l_camesglink_struct_h.h_swift_msgrefno=|%s|",l_camesglink_struct_h.h_swift_msgrefno);
				printf("\n chr_h_temp_date=|%s|",chr_h_temp_date);
				printf("\n");

			 

			 strcpy(chr_l_564_prev_seme,l_camesglink_struct_h.h_swift_msgrefno);

		    if ( strlen(l_camesglink_struct_h.h_swift_msg_no) )
		    {

			    memset(chr_h_temp_date, APL_NULL_CHAR, 9);
			    memset(chr_l_new_msg_no, APL_NULL_CHAR, 7);
			    i_temp_date = 0;


			    if ( APL_FAILURE == MSG_Rtv_NewMsgNo(l_camesglink_struct_h.h_swift_msg_no, chr_l_new_msg_no,
														     l_debug_info_ptr) )
			    {
				    APL_GOBACK_FAIL
			    }


			    memset(l_camesglink_struct_h.h_swift_msg_no, APL_NULL_CHAR, 7);
			    strncpy(l_camesglink_struct_h.h_swift_msg_no, chr_l_new_msg_no, 3);

			    EXEC SQL SELECT TO_CHAR(TO_DATE(:l_camesglink_struct_h.h_new_dt), 'YYYYMMDD')
						    INTO  :chr_h_temp_date INDICATOR :i_temp_date
						    FROM DUAL;

			    IS_ANY_ORA_ERROR


			    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVMSGNO=",
					      l_camesglink_struct_h.h_swift_msg_no);	
			    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVMSGREFNO=",
					      l_camesglink_struct_h.h_swift_msgrefno);	
			    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVMSGINPUTDT=",
					      chr_h_temp_date);	
				strcpy(chr_l_prev_msgrefno_568,l_camesglink_struct_h.h_swift_msgrefno);
				strcpy(chr_l_prev_msgno_568,l_camesglink_struct_h.h_swift_msg_no);     	
		    }
		    else 
		    {
			    fprintf(p_Data_File,"%d%s\n",*p_rownum,"PREVMSGNO=");	
			    fprintf(p_Data_File,"%d%s\n",*p_rownum,"PREVMSGREFNO=");	
			    fprintf(p_Data_File,"%d%s\n",*p_rownum,"PREVMSGINPUTDT=");
		    }

	Alert("Chirag -- l_camesglink_struct_h.h_swift_msg_no |%s|\n",l_camesglink_struct_h.h_swift_msg_no);
	Alert("Chirag -- l_camesglink_struct_h.h_swift_msgrefno |%s|\n",l_camesglink_struct_h.h_swift_msgrefno);
	Alert("Chirag -- chr_h_temp_date |%s|\n",chr_h_temp_date);





   if ( (!strcmp(chr_p_msgno,"556R02"))
      || (!strcmp(chr_p_msgno,"554R01"))
      || (!strcmp(chr_p_msgno,"555R01"))
      )
      {
	 fflush(stdout);
         printf("l_amsglink.h_information is %s \n",l_camesglink_struct_h.h_information);
	 fflush(stdout);

         strncpy(chr_l_pay_addinfo_status,l_camesglink_struct_h.h_information+3,2);
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ENT_STAT=",chr_l_pay_addinfo_status);
      }


		     memset(&l_camesglink_struct_h, NULL, sizeof(CAMESGLINK_STRUCT_H));
		     memset(chr_l_sys_date_time, APL_NULL_CHAR, APL_DATE_LEN);
		     memset(chr_l_curr_msgrefno, APL_NULL_CHAR, APL_TXNREFNO_LEN);
		     Alert("Before CO_RtvSysDtTime ");
		     if (APL_FAILURE == CO_RtvSysDtTime(chr_l_sys_date_time, l_debug_info_ptr))
		     {
			     APL_GOBACK_FAIL
		     }

			  
		     Alert("Before MS_Rtv_SEME");
			  
			  if (APL_FAILURE == MS_Rtv_SEME(chr_l_client, chr_p_msgno, chr_l_curr_msgrefno, l_debug_info_ptr))
			  {
				 APL_GOBACK_FAIL
			  }
			  
				strcpy(l_camesglink_struct_h.h_corp_id, chr_l_ca_id);
			  strcpy(l_camesglink_struct_h.h_preliminary_flag, chr_l_prelim_ind);
		     strcpy(l_camesglink_struct_h.h_dl_client, chr_l_client);
		     strcpy(l_camesglink_struct_h.h_swift_msg_no, chr_p_msgno);
		     strcpy(l_camesglink_struct_h.h_msg_in_out_ind, "O");
				if((strcmp(p_SEL_VAL[10].link_tag,"TO")==0) && ((strcmp(chr_p_msgno,"563N03")==0) || (strcmp(chr_p_msgno,"566R03")==0)))
					strcpy(l_camesglink_struct_h.h_link_class,"PN");
				else
			  		strcpy(l_camesglink_struct_h.h_link_class, chr_l_curr_link_type);


if ( (!strcmp(chr_p_msgno,"563N01"))
 || (!strcmp(chr_p_msgno,"554N01"))
 || (!strcmp(chr_p_msgno,"555N01"))
 || (!strcmp(chr_p_msgno,"563N03"))
 || (!strcmp(chr_p_msgno,"566R03"))
 || (!strcmp(chr_p_msgno,"556N02")) )
         {
      		printf(" chr_l_pay_srl_nbr is %s \n",chr_l_pay_srl_nbr);
	 fflush(stdout);
		Alert("chr_l_temp is |%s|",chr_l_temp);
		//memset(chr_l_temp,NULL,sizeof(chr_l_temp));
            	if (strlen(chr_l_pay_srl_nbr) == 1)
               	{
                	exec sql select rpad(' ',1) into :chr_l_temp from dual;
               		IS_ANY_ORA_ERROR
               	}
		Alert("chr_l_temp is |%s|",chr_l_temp);
        
		strcat(chr_l_pay_srl_nbr,chr_l_temp);

		printf(" chr_l_pay_srl_nbr - second time is  qqq %s aaa \n",chr_l_pay_srl_nbr);
            
		strcpy(l_camesglink_struct_h.h_information,chr_l_pay_srl_nbr);
            	strcat(l_camesglink_struct_h.h_information,";");
            	strcat(l_camesglink_struct_h.h_information,chr_l_payment_status);
			
         }
      else
         {
           strcpy(l_camesglink_struct_h.h_information, APL_NULL_STRING);
         }



		printf("\n ******** Before if msg no is |%s| ******** \n",chr_p_msgno);
	 fflush(stdout);
   if (( strncmp(chr_p_msgno,"550",3) == 0) ||
    ( strncmp(chr_p_msgno,"551",3) == 0) ||
    ( strncmp(chr_p_msgno,"554",3) == 0) ||
    ( strncmp(chr_p_msgno,"555",3) == 0) ||
    ( strncmp(chr_p_msgno,"552",3) == 0) ||
    ( strncmp(chr_p_msgno,"568",3) == 0) ||
	 ( strcmp(chr_p_msgno,"564N91") == 0) ||
	 ( strcmp(chr_p_msgno,"564R91") == 0) ||
	 ( strcmp(chr_p_msgno,"566N09") == 0) ||
	 ( strcmp(chr_p_msgno,"566N19") == 0) ||
	 ( strcmp(chr_p_msgno,"566N29") == 0) 
	 )
   {
		printf("\n ******** Calling MS_Rtv_RefNo_A for |%s| ******** \n",chr_p_msgno);
	 fflush(stdout);
      chr_l_txn_type=DEALTYPE_CORP;
      if (MS_Rtv_RefNo_A(chr_l_txn_type,chr_l_unique_ref_num,l_debug_info_ptr) == APL_FAILURE)
         {
             CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, NULL);
             APL_GOBACK_FAIL;
         }
		printf("\n ******** After Calling MS_Rtv_RefNo_A for |%s| SEME is|%s| ******** \n",chr_p_msgno,chr_l_unique_ref_num);
	 fflush(stdout);
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CURRMSGREFNO=",chr_l_unique_ref_num);
      strcpy(l_camesglink_struct_h.h_swift_msgrefno, chr_l_unique_ref_num);
   }	
   if ( strncmp(chr_p_msgno,"560",3) == 0)
   {
      strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[32].link_tag);
   }
   else if ( strncmp(chr_p_msgno,"562",3) == 0)
   {
      strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[17].link_tag);
   }
   else if ( strncmp(chr_p_msgno,"556",3) == 0)
   {
      strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[15].link_tag);
   }
   //Chirag added strcmp(chr_p_msgno,"566R03")==0 in below code 17012008
   else if ( strncmp(chr_p_msgno,"563",3) == 0 || strcmp(chr_p_msgno,"566R03")==0)
   {
      if (strcmp(chr_p_msgno,"563N01")==0)
         strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[14].link_tag);
      if (strcmp(chr_p_msgno,"563N02")==0)
         strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[14].link_tag);
      if ((strcmp(chr_p_msgno,"563N03")==0) || (strcmp(chr_p_msgno,"566R03")==0))
         strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[17].link_tag);
      if (strcmp(chr_p_msgno,"563N04")==0)
         strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[7].link_tag);
      if (strcmp(chr_p_msgno,"563N05")==0)
         strcpy(l_camesglink_struct_h.h_swift_msgrefno,p_SEL_VAL[12].link_tag);
   }	


		     strcpy(l_camesglink_struct_h.h_new_dt, chr_l_sys_date_time);
		     
Alert("Chirag --- l_camesglink_struct_h.h_swift_msgrefno |%s|\n",l_camesglink_struct_h.h_swift_msgrefno);
			 		
		    if(strcmp(chr_p_msgno,"563N02") != 0)
			 {
		     		Alert("Calling CA_Mod_CALinkNew for msg no |%s|\n",chr_p_msgno);
		     if ( APL_FAILURE == CA_Mod_CALinkNew(&l_camesglink_struct_h, l_debug_info_ptr) )
		     {
			     APL_GOBACK_FAIL
		     }
			}
		     
      	 } 
    	} 
           
 	
  else if(((strcmp(chr_p_msgno,"563N01") == 0) || (strcmp(chr_p_msgno,"563N02") == 0) ||(strcmp(chr_p_msgno,"563N04") == 0)|| (strcmp(chr_p_msgno,"563N05") == 0) || (strcmp(chr_p_msgno,"566N09") == 0) || (strcmp(chr_p_msgno,"566N19") == 0) || (strcmp(chr_p_msgno,"566N29") == 0)) && ((strcmp(chr_l_ca_id," ")==0)|| (strlen(chr_l_ca_id)==0)) ) 
        {

  
           if (APL_FAILURE == MS_Rtv_SEME(chr_l_client, chr_p_msgno, chr_l_curr_msgrefno, l_debug_info_ptr))
           {
             APL_GOBACK_FAIL
           }      

			  if ((strcmp(chr_p_msgno,"566N09") == 0) || (strcmp(chr_p_msgno,"566N19") == 0) || (strcmp(chr_p_msgno,"566N29") == 0))
			  {
      			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"CURRMSGREFNO=",chr_l_curr_msgrefno);
			  }
          
        }


  		if ((strcmp (chr_p_msgno,"566N19") == 0) || (strcmp (chr_p_msgno,"566N29") ==0) )
		{
			printf("\nSearching for max avl qty from ca applications for |%s|,|%s|\n",p_SEL_VAL[10].link_tag,p_SEL_VAL[9].link_tag);
         EXEC SQL SELECT nvl(max(avl_qty),0) into :l_566_avl_qty:i_566_avl_qty
                  FROM CA_APPLICATION
                  WHERE corp_id = :p_SEL_VAL[10].link_tag and 
								cln_code= :p_SEL_VAL[9].link_tag;

                  IS_ANY_ORA_ERROR
			printf("\nGot max avl qty from ca applications |%lf|\n",l_566_avl_qty);
    		fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"AVL_QTY_FOR566=",l_566_avl_qty);

		/**************VaibhavK 18March2008***** RT Allotment Message ISKB:998**********************/
		printf("\n *****Message Number is [%s].",chr_p_msgno);
		printf("\n Corp Id is [%s]",p_SEL_VAL[10].link_tag);
		printf("\n Client Code is [%s]",p_SEL_VAL[9].link_tag);

			EXEC SQL SELECT ELIG_ENTITL_POS INTO: dbl_h_ent_pos
				FROM CAENTITLEMENT
				WHERE CORP_ID||CLIENT IN
				(SELECT DISTINCT CORP_ID||CLN_CODE FROM CA_APPLICATION
				 WHERE CORP_ID =  :p_SEL_VAL[10].link_tag
				 AND   CLN_CODE = :p_SEL_VAL[9].link_tag);

			IS_ANY_ORA_ERROR;

			printf("\n **18Mar2008** Ent_Pos [%lf] :>",dbl_h_ent_pos);

			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"ENT_POS=",dbl_h_ent_pos);

		/**************VaibhavK 18March2008**************************/ 
			
			if (strcmp (chr_p_msgno,"566N19") == 0)
			{
				printf("\nSearching for Resultant instrument from event |%s| \n",p_SEL_VAL[10].link_tag);
	         EXEC SQL SELECT res_instr_code into :l_566_res_instr_code
	                  FROM CAEVENT
	                  WHERE corp_id = :p_SEL_VAL[10].link_tag; 
	
	                  IS_ANY_ORA_ERROR
							
				printf("\nSearching for Resultant instruments |%s| parent from mt_instrument\n",l_566_res_instr_code);
	         EXEC SQL SELECT instr_parent into :l_566_res_instr_code_parent
	                  FROM mt_instrument
	                  WHERE instr_code = :l_566_res_instr_code;
	
	                  IS_ANY_ORA_ERROR
	
				printf("\nGot parent of instrument |%s| as |%s|\n",l_566_res_instr_code,l_566_res_instr_code_parent);
	
	
	   		EXEC SQL SELECT instr_isin,substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35),substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,60),
	                   currency_cd,INSTR_TYPE,REG_BR_IND,NOMINAL_VALUE,INSTR_PARENT
	            INTO :h_instr_isin_566:i_instr_isin_566,:h_instr_name_566,:chr_h_tinstrdesc_566,:h_currencycode_566,:h_typeofinstr_566,
	                 :h_regbrflag_566,:h_nominal_value_566,:chr_h_pinstrcode_566:i_pinstr_code_566
	            FROM MT_INSTRUMENT 
	            WHERE INSTR_CODE = :l_566_res_instr_code_parent;
	
	  			IS_ANY_ORA_ERROR
	
	  			if(sqlca.sqlcode == 1403 )
	  			{
	           CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, l_566_res_instr_code_parent,
	                                                  APL_NULL_STRING,
	 			  APL_NULL_STRING, __LINE__, __FILE__);
	           APL_GOBACK_FAIL;
	  			}
						
	  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RES_INSTR_CODE_566=",l_566_res_instr_code_parent);
	  			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RESNOMVAL_566=",h_nominal_value_566);
	  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RESINSTR_NAME_566=",h_instr_name_566);
	  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RISIN_566=",h_instr_isin_566);
			}
		}

		if (strcmp(chr_p_msgno,"572")==0)
      {

		if(strcmp(p_SEL_VAL[11].link_tag,"Y")==0)
		{
		 printf("I am AT SELECTION FROM CTMPMSGLINK");
       if(strcmp(p_SEL_VAL[6].link_tag,"19") == 0) 
       {
         EXEC SQL SELECT CAMESGLINK.SWIFT_MSGREFNO INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
                    FROM DL_DEAL, CACHEQUE, CAMESGLINK
                   WHERE DL_DEAL.CLIENT     = :chr_l_client
                     AND DL_DEAL.IDENTIY_NO       = :chr_l_refno
                     AND CACHEQUE.CLIENT   = DL_DEAL.CLIENT
                     AND CACHEQUE.DEAL_IDENTITY_NO = DL_DEAL.IDENTIY_NO
                     AND CAMESGLINK.CORP_ID     = CACHEQUE.CORP_ID
                     AND CAMESGLINK.CLIENT   = CACHEQUE.CLIENT
                     AND CAMESGLINK.TYPEOF_MSG_LNK = 'PN'
							AND ROWNUM < 2
							ORDER BY CAMESGLINK.DATE_OF_INPUT;

         IS_ANY_ORA_ERROR
         if( sqlca.sqlcode ==  0)
         {
           printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
           fprintf(p_Data_File,"%d%s\n",*p_rownum,"PREVMSGNO=566");
           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEME=",chr_l_addinfo_uniq_seme);
         }
       }
       if( (strcmp(p_SEL_VAL[6].link_tag,"19") != 0)  || ( APL_ZERO_RESULT_SET ) )
       {
          memset(chr_l_lnk_msg_no,APL_NULL_CHAR,7);
          
          EXEC SQL SELECT INFORMATION, SWIFT_MSG_NO INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme, :chr_l_lnk_msg_no
                  FROM DL_TMPMSGLINK
                  WHERE CLIENT = :chr_l_client
                  AND IDENTIY_NO = :chr_l_refno
						AND ROWNUM<2
                  AND MSG_IN_OUT_IND= 'Z'
						AND SWIFT_MSG_NO NOT IN ('548N03','54xN01')
                  AND DATE_OF_INPUT = (SELECT MAX(DATE_OF_INPUT)
                                    FROM DL_TMPMSGLINK
                                    WHERE CLIENT=:chr_l_client
                                    AND IDENTIY_NO = :chr_l_refno
												AND SWIFT_MSG_NO!='548N03'
                                    AND MSG_IN_OUT_IND= 'Z');
		}
		else
		{
        EXEC SQL SELECT INFORMATION INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
                  FROM DL_MSGLINK
                  WHERE CLIENT = :chr_l_client
                  AND IDENTIY_NO = :chr_l_refno
                  AND MSG_IN_OUT_IND= 'Z'
						AND SWIFT_MSG_NO NOT IN ('548N03','54xN01')
                  AND DATE_OF_INPUT = (SELECT MAX(DATE_OF_INPUT)
                                    FROM DL_MSGLINK
                                    WHERE CLIENT=:chr_l_client
                                    AND IDENTIY_NO = :chr_l_refno
												AND SWIFT_MSG_NO!='548N03'
                                    AND MSG_IN_OUT_IND= 'Z');
		}
		          IS_ANY_ORA_ERROR;
          if (sqlca.sqlcode == 0 )
          {
            if(strncmp(chr_l_lnk_msg_no,"548",3) == 0)
            {
              printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
              fprintf(p_Data_File,"%d%s\n",*p_rownum,"PREVMSGNO=548");
              fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEME=",chr_l_addinfo_uniq_seme);
            }
            else if (strncmp(chr_l_lnk_msg_no,"54x",3) == 0)
            {
               memset(chr_l_lnk_msg_no,APL_NULL_CHAR,7);
               EXEC SQL SELECT DECODE(DEAL_CD,1,'546',2,'544',3,'547',4,'545',5,'545',6,'547',7,'547',8,'545')
                          INTO :chr_l_lnk_msg_no
                          FROM DL_DEAL
                         WHERE CLIENT = :chr_l_client
                           AND IDENTIY_NO   = :chr_l_refno ;

               IS_ANY_ORA_ERROR
               if (sqlca.sqlcode == 0)
               {
                 printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVMSGNO=",chr_l_lnk_msg_no);
                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEME=",chr_l_addinfo_uniq_seme);
               }
            }
          } 
       }
      } 
		else if (strcmp(chr_p_msgno,"573")==0)		
		{
		 
       

			       EXEC SQL SELECT INFORMATION INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
                  FROM DL_MSGLINK
                  WHERE CLIENT = :chr_l_client
                  AND IDENTIY_NO = :chr_l_refno
                  AND MSG_IN_OUT_IND= 'Z'
                  AND DATE_OF_INPUT = (SELECT MAX(DATE_OF_INPUT)
                                    FROM DL_MSGLINK
                                    WHERE CLIENT=:chr_l_client
                                    AND IDENTIY_NO = :chr_l_refno
                                    AND MSG_IN_OUT_IND= 'Z')
												AND ROWNUM < 2;

         IS_ANY_ORA_ERROR;
         printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREVSEME=",chr_l_addinfo_uniq_seme);
		}
		else if (strcmp(chr_p_msgno,"586")==0)		
		{
		memset(chr_l_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
		memset(chr_l_refno,APL_NULL_CHAR,17);
		strcpy(chr_l_client, p_SEL_VAL[3].link_tag);
		strcpy(chr_l_refno, p_SEL_VAL[2].link_tag);
		printf("value of chr_l_client for MT 586 is %s\n",p_SEL_VAL[3].link_tag);
		printf("value of chr_l_refno for MT586 is %s\n",p_SEL_VAL[2].link_tag);
       EXEC SQL SELECT INFORMATION INTO :chr_l_addinfo_uniq_seme:i_addinfo_uniq_seme
                  FROM DL_MSGLINK
                  WHERE CLIENT = :chr_l_client
                  AND IDENTIY_NO = :chr_l_refno
                  AND MSG_IN_OUT_IND= 'Z'
						AND SWIFT_MSG_NO='578N01'
                  AND DATE_OF_INPUT = (SELECT MAX(DATE_OF_INPUT)
                                    FROM DL_MSGLINK
                                    WHERE CLIENT=:chr_l_client
                                    AND IDENTIY_NO = :chr_l_refno
												AND SWIFT_MSG_NO='578N01'
                                    AND MSG_IN_OUT_IND= 'Z');
         IS_ANY_ORA_ERROR;
         printf("Addinfo is %s\n", chr_l_addinfo_uniq_seme);
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREV_SEME=",chr_l_addinfo_uniq_seme);
		}

		
      

         if (strlen(chr_l_ca_id) !=0)
         {
            if(APL_FAILURE ==CA_Proc_FtNtData(chr_l_ca_id,chr_p_msgno,p_Data_File,p_rownum,l_debug_info_ptr))
               APL_GOBACK_FAIL
         }


      
	} 


	if(
		( !strcmp(chr_p_msgno, "571A"))	||
		( !strcmp(chr_p_msgno, "571")) 	||
		( !strcmp(chr_p_msgno, "535B"))		||
		( !strncmp(chr_p_msgno, "572", 3)) ||
		( !strncmp(chr_p_msgno, "573", 3)) ||
		( !strncmp(chr_p_msgno, "596", 3)) ||
		( !strncmp(chr_p_msgno, "534", 3)) ||
		( !strcmp(chr_p_msgno, "508")) )
		{
			printf(" shortly will enter GenUniqSEMERefNo :chr_l_client is %s\n",chr_l_client);
	
			if (!strcmp(chr_p_msgno, "534") )
			{
				strcpy(chr_l_client,p_SEL_VAL[2].link_tag);
				strcpy(chr_l_refno, APL_NULL_STRING);
				strcpy(chr_l_refno,p_SEL_VAL[3].link_tag);
			}
			if (!strcmp(chr_p_msgno, "508") ) 
				strcpy(chr_l_client,p_SEL_VAL[0].link_tag);
			if (!strcmp(chr_p_msgno, "596P")) 
			{
				strcpy(chr_l_client, p_SEL_VAL[1].link_tag);
				strcpy(chr_l_refno, APL_NULL_STRING);
				strcpy(chr_l_refno, p_STAT_VAL[2].link_tag);
			}
			if ( !strcmp(chr_p_msgno, "596N01") )  
				 strcpy(chr_l_client, p_SEL_VAL[0].link_tag);
			if ( !strcmp(chr_p_msgno, "596N02") ) 
			{
				strcpy(chr_l_client, p_SEL_VAL[3].link_tag);
				strcpy(chr_l_refno, APL_NULL_STRING);
				strcpy(chr_l_refno, p_STAT_VAL[3].link_tag);
			}
			if ( !strcmp(chr_p_msgno, "571A") ) 
				strcpy(chr_l_client, p_SEL_VAL[2].link_tag);
			if (( !strcmp(chr_p_msgno, "571")) || ( !strcmp(chr_p_msgno, "535B"))) 
				strcpy(chr_l_client, p_SEL_VAL[6].link_tag);
			if ( !strncmp(chr_p_msgno, "573",3)) 
			{
				strcpy(chr_l_client, p_SEL_VAL[13].link_tag);
            strcpy(chr_l_refno, p_SEL_VAL[15].link_tag);
			}

			Alert("HM chr_l_client11 %s",chr_l_client);
			Alert("HM chr_l_client22 %s",p_SEL_VAL[6].link_tag);
			Alert("HM chr_l_client22 %s",p_SEL_VAL[1].link_tag);
			Alert("HM chr_l_client22 %s",p_SEL_VAL[2].link_tag);
			Alert("HM chr_l_client22 %s",p_SEL_VAL[13].link_tag);
			Alert("HM chr_l_client22 %s",p_SEL_VAL[3].link_tag);
			Alert("HM chr_l_client22 %s",p_SEL_VAL[0].link_tag);
		
			if (( !strncmp(chr_p_msgno, "573", 3))||( !strncmp(chr_p_msgno, "572", 3))||( !strncmp(chr_p_msgno, "571", 3))||
			( !strcmp(chr_p_msgno, "535B")))
			{
			if (strlen(chr_l_client))
				{
					if(APL_FAILURE==MS_Rtv_SEME(chr_l_client,chr_p_msgno,chr_l_uniq_seme_refno,l_debug_info_ptr) )
					{
						APL_GOBACK_FAIL
					}
					fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UNIQREFNO=",chr_l_uniq_seme_refno);	
				}
			}	
            if(((!strcmp(chr_p_msgno,"534")) || (!strcmp(chr_p_msgno,"508")) || (!strcmp(chr_p_msgno,"534N01")) || (!strcmp(chr_p_msgno,"578N02"))) && (p_rec_no==1)) 
            {
               strcpy(l_progseqnum_struct_h->sequencename ,DEALMS_LINK_SEQ_NAME);
					chr_l_seq_num=0;
               chr_l_seq_num = CO_RtvNxtSeqNum(l_progseqnum_struct_h , l_debug_info_ptr);
               if (APL_FAILURE == chr_l_seq_num)
               {
                  CO_ProcMonitor(APL_OUT_FILE,
									"Failed To Get The Next Sequence Number For CMSGLINK\n",
									 NULL,NULL);
                  APL_GOBACK_FAIL
               }
					if(!strcmp(chr_p_msgno,"534"))
					{
               	strcpy(l_dl_msglink_struct_h.h_dl_client,p_SEL_VAL[2].link_tag);
               	strcpy(l_dl_msglink_struct_h.h_indentity_no,p_SEL_VAL[3].link_tag);
               	strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"O");
						strcpy(l_dl_msglink_struct_h.h_information,p_SEL_VAL[9].link_tag);
               	strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"548N03");
					}
					else if (!strcmp(chr_p_msgno,"508"))
					{
                  strcpy(l_dl_msglink_struct_h.h_dl_client,p_SEL_VAL[0].link_tag);
                  strcpy(l_dl_msglink_struct_h.h_indentity_no,p_SEL_VAL[1].link_tag);
						strcpy(l_dl_msglink_struct_h.h_information,p_SEL_VAL[2].link_tag);
                  strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"O");
                  strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"508");
					}
					else if (!strcmp(chr_p_msgno,"534N01"))
					{
               strcpy(l_dl_msglink_struct_h.h_dl_client,p_SEL_VAL[3].link_tag);
               strcpy(l_dl_msglink_struct_h.h_indentity_no,p_SEL_VAL[2].link_tag);
					strcpy(l_dl_msglink_struct_h.h_information,p_SEL_VAL[4].link_tag);
               strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"O");
               strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"578N01");
					}	
					else if (!strcmp(chr_p_msgno,"578N02")) 			
               {
               strcpy(l_dl_msglink_struct_h.h_dl_client,p_SEL_VAL[3].link_tag);
               strcpy(l_dl_msglink_struct_h.h_indentity_no,p_SEL_VAL[2].link_tag);
               strcpy(l_dl_msglink_struct_h.h_information,p_SEL_VAL[4].link_tag);
               strcpy(l_dl_msglink_struct_h.h_msg_in_out_ind,"O");
               strcpy(l_dl_msglink_struct_h.h_swift_msg_no,"578N02");
               }
               if (APL_FAILURE == CO_RtvMachDtTime( l_dl_msglink_struct_h.h_new_dt,
                                                         l_debug_info_ptr ))
               {
                  APL_GOBACK_FAIL
               }
               l_dl_msglink_struct_h.h_sequence_num=chr_l_seq_num;
               if(APL_FAILURE==DL_Mod_DLLinkNew(&l_dl_msglink_struct_h,l_debug_info_ptr))
               {
                  CO_ProcMonitor(APL_OUT_FILE,
									"Failed To Insert into CMSGLINK Table\n",
									NULL,NULL);
                  APL_GOBACK_FAIL
               }
            }
		}

         
         
						
    if ((p_rec_no ==1) && ((!strcmp(chr_p_msgno, "572") ) || (!strncmp(chr_p_msgno,"53x",3))|| (!strncmp(chr_p_msgno, "539",3) )|| (!strcmp(chr_p_msgno,"52xN02") ) || ((!strncmp(chr_p_msgno,"596",3)) && (strcmp(chr_p_msgno, "596N01") != 0))|| (!strcmp(chr_p_msgno, "534")) || (!strncmp(chr_p_msgno, "573",3)) || (!strcmp(chr_p_msgno, "54B")) ))
         {
				  printf("\n Inside if of so many messages ...msg no is |%s|\n",chr_p_msgno);	
            if (!(strncmp(chr_p_msgno,"53x",3)) || (!strcmp(chr_p_msgno, "539") ) )
            {
					 memset(h_psetparty,APL_NULL_CHAR,161);
               EXEC SQL SELECT PSETPARTY,INDEN_NUM,NARRATIVE into :h_psetparty:i_psetparty,:chr_h_link_seq_num:i_link_seq_num,l_narrative:i_narrative from DL_MSGLINK
               where client=:chr_l_client_53
               and IDENTIY_NO = :chr_l_refno_53
               and msg_in_out_ind='I'
					and rownum < 2 ; 
               

               IS_ANY_ORA_ERROR
            }
				else if (!(strncmp(chr_p_msgno,"596",3)) || (!strcmp(chr_p_msgno, "534") ) || (!strcmp(chr_p_msgno, "54B") ) )
				{
					 memset(h_psetparty,APL_NULL_CHAR,161);
               EXEC SQL SELECT PSETPARTY,INDEN_NUM into :h_psetparty:i_psetparty,:chr_h_link_seq_num:i_link_seq_num from DL_MSGLINK
               where client=:chr_l_client
					and IDENTIY_NO = :chr_l_refno
					and msg_in_out_ind='I'
               and rownum < 2 ;

				

					IS_ANY_ORA_ERROR
            }	
            else if((!strncmp(chr_p_msgno,"572",3)) ||(!strncmp(chr_p_msgno,"573",3)) )
            {
               printf("value of chr_l_client is %s\n",chr_l_client);
               printf("value of chr_l_uniq_seme_refno is %s\n",chr_l_uniq_seme_refno);
               
               
					

               
					if ((!strncmp(chr_p_msgno,"572",3)) && (strcmp(p_SEL_VAL[11].link_tag,"Y")==0))
					{	
						printf("l_account is %s\n",chr_l_client);
						printf("l_refno is %s\n",chr_l_refno);
						printf("l_temp_date is %s\n",chr_l_temp_date);
		 				printf("I am AT SELECTION FROM CTMPMSGLINK for PSET");
						
            	   EXEC SQL SELECT PSETPARTY,INDEN_NUM 
						INTO :h_psetparty:i_psetparty,:chr_h_link_seq_num:i_link_seq_num 
						FROM DL_TMPMSGLINK
               	WHERE CLIENT=:chr_l_client
               	AND IDENTIY_NO = :chr_l_refno
          			AND MSG_IN_OUT_IND='I'
               	AND ROWNUM < 2 ;

					}
					else
					{
            	   EXEC SQL SELECT PSETPARTY,INDEN_NUM 
						INTO :h_psetparty:i_psetparty,:chr_h_link_seq_num:i_link_seq_num 
						FROM DL_MSGLINK
               	WHERE CLIENT=:chr_l_client
               	AND IDENTIY_NO = :chr_l_refno
          			AND MSG_IN_OUT_IND='I'
               	AND ROWNUM < 2 ;
					
					}
               IS_ANY_ORA_ERROR
               
            }
            else if(!strcmp(chr_p_msgno,"52xN02") )
            {
               printf("SEL_VAL3.fldval is %s\n",p_SEL_VAL[3].link_tag);
               printf("p_SEL_VAL[1].link_tag is %s\n",p_SEL_VAL[1].link_tag);
               printf("l_uniq_account is %s\n",chr_l_uniq_client);
               EXEC SQL SELECT PSETPARTY,INDEN_NUM
               INTO :h_psetparty:i_psetparty,:chr_h_link_seq_num:i_link_seq_num
               FROM DL_MSGLINK
               WHERE CLIENT=:p_SEL_VAL[1].link_tag
               AND IDENTIY_NO = :p_SEL_VAL[3].link_tag
					AND MSG_IN_OUT_IND='I'
					and rownum < 2 ; 

					

               IS_ANY_ORA_ERROR
            }


						

						if (!strncmp(h_psetparty,":95R:",5))
						{
							strcpy(chr_h_pset_tmp,h_psetparty);
							printf(" chr_h_pset_tmp is %s\n",chr_h_pset_tmp);
				
							
							strcpy(chr_h_pset_tmp,h_psetparty+11);
							printf("h_pset_tmp is %s\n",chr_h_pset_tmp);
							printf("h_pset+11  is %s\n",h_psetparty+11);
							if(chr_h_pset_tmp[0]!='/')
							{
								if(strcmp(chr_h_pset_tmp,APL_NULL_STRING)==0)
									strcpy(chr_h_dsn,APL_NULL_STRING);
								else
									strcpy(chr_h_dsn,strtok(chr_h_pset_tmp,"/"));
								fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DSNNAME=",chr_h_dsn);
								fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"95RTAG=",h_95Rtag);
							}
						}
						if ((strlen(chr_h_dsn)==0) && (!strncmp(h_psetparty,":95R:",5)))
						{
                  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"PSET1=");
                  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"PSET2=");
                  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"PSET3=");
                  	fprintf(p_Data_File,"%d%s\n",*p_rownum,"PSET4=");
						}
						else
						{
							printf("\n Inside else of dsn and psetparty psetparty is |%s|\n",h_psetparty);
						if(strcmp(h_psetparty,APL_NULL_STRING) ==0)
						{
						 memset(h_psetparty,APL_NULL_CHAR,161);
						 memset(chr_h_pset1,APL_NULL_CHAR,161);
						 memset(chr_h_pset2,APL_NULL_CHAR,161);
						 memset(chr_h_pset3,APL_NULL_CHAR,161);
						 memset(chr_h_pset4,APL_NULL_CHAR,161);
                  strcpy(chr_h_pset1,APL_NULL_STRING);
                  strcpy(chr_h_pset2,APL_NULL_STRING);
                  strcpy(chr_h_pset3,APL_NULL_STRING);
                  strcpy(chr_h_pset4,APL_NULL_STRING);
						}
						else
						{
						 	memset(chr_h_pset1,APL_NULL_CHAR,161);
						 	memset(chr_h_pset2,APL_NULL_CHAR,161);
						 	memset(chr_h_pset3,APL_NULL_CHAR,161);
						 	memset(chr_h_pset4,APL_NULL_CHAR,161);
							printf("HERE I am1\n");
							printf("pset is h_psetparty |%s|\n",h_psetparty);
							fflush(stdout);
							if (strlen(h_psetparty) >0 ) /*** TUX ***/
                  	strcpy(chr_h_pset1,strtok_r(h_psetparty,"|",&z));
							printf("after pset1\n");
							fflush(stdout);
		/***					if (strlen(z) > 0)  
								strcpy(chr_h_pset2,strtok_r(NULL,"|",&z));
							printf("after pset2\n");
							fflush(stdout);
							if (strlen(z) > 0) 
								strcpy(chr_h_pset3,strtok_r(NULL,"|",&z));
							printf("after pset3\n");
							fflush(stdout);
							if (strlen(z) > 0)  
								strcpy(chr_h_pset4,strtok_r(NULL,"|",&z));
							printf("after pset4\n");
							fflush(stdout);***/
						}
                  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PSET1=",chr_h_pset1);
                  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PSET2=",chr_h_pset2);
                  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PSET3=",chr_h_pset3);
                  	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PSET4=",chr_h_pset4);

						}
                  if (!strncmp(h_psetparty,":95C:",5))
                     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"95a=","95C");

                  if (!(strncmp(chr_p_msgno,"53x",3)) || (!strcmp(chr_p_msgno, "539"))||(!strcmp(chr_p_msgno,"52xN02")) || ((!(strncmp(chr_p_msgno,"596",3))) && (strcmp(chr_p_msgno, "596N01") != 0)) || (!strcmp(chr_p_msgno, "534"))|| (!strcmp(chr_p_msgno, "572")) || (!strcmp(chr_p_msgno, "573")) || (!strcmp(chr_p_msgno, "54B")) )
                  {
								fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PLOFTRD=",l_narrative);

							if ((!strncmp(chr_p_msgno,"572",3)) && (strcmp(p_SEL_VAL[11].link_tag,"Y")==0))
							{
                     	EXEC SQL DECLARE linkinfo_cur1 CURSOR FOR
                        	SELECT INDEN_NUM,SEQUENCE_NAME,link_val ,link_tag ,MSG_TAG_REP_NO,MSG_LINE_NO ,msg_tag FROM DL_TMPMSGLINKDET WHERE INDEN_NUM=:chr_h_link_seq_num and msg_tag in(':20C:',':22F:','94B','94F');

 	                    EXEC SQL OPEN linkinfo_cur1;
	
   	                 IS_ANY_ORA_ERROR 
				
							}
							else
							{
                     	EXEC SQL DECLARE linkinfo_cur CURSOR FOR
                        	SELECT * FROM DL_MSGLINKDET WHERE INDEN_NUM=:chr_h_link_seq_num;

	                     EXEC SQL OPEN linkinfo_cur;
			
         	             IS_ANY_ORA_ERROR
							}
                     memset(chr_l_safetag,APL_NULL_CHAR,6);
                     memset(chr_l_dereagtag,APL_NULL_CHAR,6);
                     memset(chr_l_decurecutag,APL_NULL_CHAR,6);
                     memset(chr_l_instrtag,APL_NULL_CHAR,6);
                     memset(chr_l_sellbuyrtag,APL_NULL_CHAR,6);
                     memset(chr_l_dereitag,APL_NULL_CHAR,6);
                     memset(l_95RDSN,APL_NULL_CHAR,11);
                     memset(chr_l_domcpacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                     memset(chr_l_countacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                     memset(chr_l_clientof,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                     memset(chr_l_countacnm,APL_NULL_CHAR,36);
                     memset(chr_l_clientof1,APL_NULL_CHAR,36);

                      for( ; ; )
                      {

							fflush(stdout);
								if ((!strncmp(chr_p_msgno,"572",3)) && (strcmp(p_SEL_VAL[11].link_tag,"Y")==0))
								{
                          EXEC SQL  FETCH linkinfo_cur1 into :l_dl_msglinkdet_struct_h:l_dl_msglinkdet_struct_i;
								}
								else
								{
                          EXEC SQL  FETCH linkinfo_cur into :l_dl_msglinkdet_struct_h:l_dl_msglinkdet_struct_i;
								}

                          if(sqlca.sqlcode == 1403)
                           break;
									if (strcmp(l_dl_msglinkdet_struct_h.h_sequence_name,"LINK")==0)
									{
                        	   if(strcmp(l_dl_msglinkdet_struct_h.h_link_val,"POOL")==0)
                          	 	{
                          	  		  if(strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":20C:")==0)
                          	  		  {
                          	  		     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"POOL_REFNO=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                          	  		  }
                          	  		  else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":13A:")==0)
                          	  		  {
                          	  		     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"POOL_NUMBER_IDENT=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                          	  		  }
                          	  		  else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":22F:")==0)
                          	  		  {
                          	  		     
                             			 }
                           	}
                           	else if(strcmp(l_dl_msglinkdet_struct_h.h_link_val,"PREV")==0)
                           	{
                              	if(strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":20C:")==0)
                              	{
                                		
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":13A:")==0)
                              	{
                                 	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PREV_NUMBER_IDENT=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":22F:")==0)
                              	{
                                 	
                              	}
                           	}
                           	else if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"RELA")==0)
                           	{
                              	if(strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":20C:")==0)
                              	{
                                 	
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":13A:")==0)
                              	{
                                 	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RELA_NUMBER_IDENT=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":22F:")==0)
                              	{
                                 	
                              	}
                           	}
                           	else if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"TRRF")==0)
                           	{
                              	if(strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":20C:")==0)
                              	{
                                 	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TRRF_REFNO=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":13A:")==0)
                              	{
                                 	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"TRRF_NUMBER_IDENT=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":22F:")==0)
                              	{
                                 	
                              	}
                           	}
                           	else if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"COMM")==0)
                           	{
                              	if(strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":20C:")==0)
                              	{
                                 	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"COMM_REFNO=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":13A:")==0)
                              	{
                                 	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"COMM_NUMBER_IDENT=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              	}
                              	else if (strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,":22F:")==0)
                              	{
                                 	
                              	}
                           	}
									}
                           
                           else if (strcmp(l_dl_msglinkdet_struct_h.h_sequence_name,"AMOUNT")==0)
                           {
                              if ((!strncmp(l_dl_msglinkdet_struct_h.h_link_val,"QL_",3)) ||
                                 (!strncmp(l_dl_msglinkdet_struct_h.h_link_val,"OC_",3)))
                                 fprintf(p_Data_File,"%d%s=%s\n",*p_rownum,l_dl_msglinkdet_struct_h.h_link_val,l_dl_msglinkdet_struct_h.h_link_msg_tag);
                           }
									else if (strcmp(l_dl_msglinkdet_struct_h.h_sequence_name,"SETD")==0)
									{
										if(strstr(l_dl_msglinkdet_struct_h.h_link_msg_tag,"CEDE")!=0)
										{
											fprintf(p_Data_File,"%d%s=%s%s\n",*p_rownum,"SETR_CEDE",l_dl_msglinkdet_struct_h.h_link_val,l_dl_msglinkdet_struct_h.h_link_msg_tag);
										}
										else if (strstr(l_dl_msglinkdet_struct_h.h_link_msg_tag,"ECLR")!=0)
										{
											fprintf(p_Data_File,"%d%s=%s%s\n",*p_rownum,"SETR_ECLR",l_dl_msglinkdet_struct_h.h_link_val,l_dl_msglinkdet_struct_h.h_link_msg_tag);
				
										}
										
										
                              if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"TRCA")==0)
                              {
                                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_TRCA=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              }
                              if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"SETR")==0)
                              {
                                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SETR=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                              }
                              if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"STCO1")==0)
                              {
                                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_STCO1=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
											if(strcmp(l_dl_msglinkdet_struct_h.h_link_msg_tag+strlen(l_dl_msglinkdet_struct_h.h_link_msg_tag)-4,"PHYS")==0)
                                 {
                                    strcpy(chr_l_stcoval1,l_dl_msglinkdet_struct_h.h_link_msg_tag);
                                 }
                              }
                              if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"STCO2")==0)
                              {
                                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_STCO2=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
											if(strcmp(l_dl_msglinkdet_struct_h.h_link_msg_tag+strlen(l_dl_msglinkdet_struct_h.h_link_msg_tag)-4,"PHYS")==0)
                                 {
                                    strcpy(chr_l_stcoval2,l_dl_msglinkdet_struct_h.h_link_msg_tag);
                                 }
                              }
										if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"STCO3")==0)
                              {
                                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_STCO3=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
											if(strcmp(l_dl_msglinkdet_struct_h.h_link_msg_tag+strlen(l_dl_msglinkdet_struct_h.h_link_msg_tag)-4,"PHYS")==0)
                                 {
                                    strcpy(chr_l_stcoval3,l_dl_msglinkdet_struct_h.h_link_msg_tag);
                                 }
                              }		
				if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"BENE")==0)
                                {
                                    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"BENE_VAL=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                                } 
                                if (strcmp(l_dl_msglinkdet_struct_h.h_link_val,"REGT")==0)
                                {
                                    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"REGT_VAL=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
                                }
									}
									

                           
	  	           else if (strcmp(l_dl_msglinkdet_struct_h.h_sequence_name,"SETPR")==0)
			   {
				   if (strncmp(chr_p_msgno,"572",3)!=0)
					{
				strcpy(chr_l_setdet,"SETPR");
			  	 if ((strstr(l_dl_msglinkdet_struct_h.h_link_val,":DEAG")!=0) ||
			        	(strstr(l_dl_msglinkdet_struct_h.h_link_val,":REAG")!=0))
			  	{
			      		strcpy(chr_l_dereagtag,l_dl_msglinkdet_struct_h.h_msg_tag);
			      		if(strcmp(chr_l_dereagtag,TAG_IN_MSG_95S)==0)
		              		{
				     		fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DEREAGTAG=",TAG_IN_MSG_95Q);
			      		}
			     		else
		             		{
						fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DEREAGTAG=",l_dl_msglinkdet_struct_h.h_msg_tag);
			      		}
			  	}
			  	else if ((strstr(l_dl_msglinkdet_struct_h.h_link_val,":SELL")!=0) ||
				     (strstr(l_dl_msglinkdet_struct_h.h_link_val,":BUYR")!=0))
			       {
				    strcpy(chr_l_sellbuyrtag,l_dl_msglinkdet_struct_h.h_msg_tag);
				    
			       }
			       else if ((strstr(l_dl_msglinkdet_struct_h.h_link_val,":DECU")!=0) ||
			               (strstr(l_dl_msglinkdet_struct_h.h_link_val,":RECU")!=0))
			       {
				     strcpy(chr_l_decurecutag,l_dl_msglinkdet_struct_h.h_msg_tag);
			             
			    	}
			        else if ((strstr(l_dl_msglinkdet_struct_h.h_link_val,"INSTR")!=0))
			        {
				    strcpy(chr_l_instrtag,l_dl_msglinkdet_struct_h.h_msg_tag);
				    if(strcmp(chr_l_instrtag,TAG_IN_MSG_95S)==0)
				    {
			               fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_INSTRTAG=",TAG_IN_MSG_95Q);
			            }
			            else
			            {
				       fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_INSTRTAG=",l_dl_msglinkdet_struct_h.h_msg_tag);
                                    }
				}	
			       else if ((strstr(l_dl_msglinkdet_struct_h.h_link_val,":REI1")!=0) ||
				     	(strstr(l_dl_msglinkdet_struct_h.h_link_val,":DEI1")!=0))
			       {
				   strcpy(chr_l_dereitag,l_dl_msglinkdet_struct_h.h_msg_tag);
				   if(strcmp(chr_l_dereitag,TAG_IN_MSG_95S)==0)
				   {
				        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_INTRTAG=",TAG_IN_MSG_95Q);
				   }
				   else
				   {
				      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_INTRTAG=",l_dl_msglinkdet_struct_h.h_msg_tag);
			           }
			      }
			      else if (strstr(l_dl_msglinkdet_struct_h.h_link_val,"DGSFE")!=0)
			      {
			          strcpy(chr_l_safetag,l_dl_msglinkdet_struct_h.h_msg_tag);
		                  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DEREAGSAFE_TAG=",l_dl_msglinkdet_struct_h.h_msg_tag);
			       }
			      else if (strstr(l_dl_msglinkdet_struct_h.h_link_val,"BSSFE")!=0)
			      {
			          strcpy(chr_l_safetag,l_dl_msglinkdet_struct_h.h_msg_tag);
		                  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_BYSELLSAFE_TAG=",l_dl_msglinkdet_struct_h.h_msg_tag);
						
						memset(chr_l_eclr_client,APL_NULL_CHAR,11);
						strcpy(chr_l_eclr_client,l_dl_msglinkdet_struct_h.h_link_msg_tag+7);
						fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ECLRACC=",chr_l_eclr_client);
						
			       }
			      else if (strstr(l_dl_msglinkdet_struct_h.h_link_val,"DCSFE")!=0)
			      {
			          strcpy(chr_l_safetag,l_dl_msglinkdet_struct_h.h_msg_tag);
		                  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DEREC97A=",l_dl_msglinkdet_struct_h.h_msg_tag);
			       }
			      else if (strstr(l_dl_msglinkdet_struct_h.h_link_val,"DEREI")!=0)
			      {
			          strcpy(chr_l_safetag,l_dl_msglinkdet_struct_h.h_msg_tag);
		                  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DEREISAFE_TAG=",l_dl_msglinkdet_struct_h.h_msg_tag);
			       }
			      else if (strstr(l_dl_msglinkdet_struct_h.h_link_val,"SESFE")!=0)
			      {
			          strcpy(chr_l_safetag,l_dl_msglinkdet_struct_h.h_msg_tag);
		                  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_SELLBYSAFE_TAG=",l_dl_msglinkdet_struct_h.h_msg_tag);
						
						memset(chr_l_eclr_client,APL_NULL_CHAR,11);
						strcpy(chr_l_eclr_client,l_dl_msglinkdet_struct_h.h_link_msg_tag+7);
						fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"ECLRACC=",chr_l_eclr_client);
						
			       }

                              	
					int_l_accpopulated=1;
			   if((strcmp(l_dl_msglinkdet_struct_h.h_msg_tag,TAG_IN_MSG_95R)==0))
			   {
				 int_l_slash_count = 0;
				 int_l_nrtoend = 0;
				 int_l_pos = 0;
				 

			    memset(l_95RDSN,APL_NULL_CHAR,10); 	 

				 for(dbl_i=0;dbl_i<strlen(l_dl_msglinkdet_struct_h.h_link_msg_tag);dbl_i++)
			  	 {
					
				    if(((l_dl_msglinkdet_struct_h.h_link_msg_tag[dbl_i])=='/'))
				    {
					int_l_slash_count = int_l_slash_count+1;
				    }	
				    if(int_l_slash_count == 1) 
				    {
					if(((l_dl_msglinkdet_struct_h.h_link_msg_tag[dbl_i])=='/'))
					{
						printf("****The chr_value of link_tag[dbl_i] is=  %c\n",l_dl_msglinkdet_struct_h.h_link_msg_tag[dbl_i]);
						fflush(stdout);
				        }
					else
					{
						l_95RDSN[int_l_pos] = l_dl_msglinkdet_struct_h.h_link_msg_tag[dbl_i];
						int_l_pos++;
					}
				    }
				    if(((l_dl_msglinkdet_struct_h.h_link_msg_tag[dbl_i])=='/') && (int_l_slash_count == 2))
				    {
					l_95RDSN[int_l_pos] = '/';
					int_l_pos++;
					l_95RDSN[int_l_pos] = '\0';
				    }	
		        	 }	
				printf("****The chr_value of link_tag is  :%s\n",l_dl_msglinkdet_struct_h.h_link_msg_tag);
				fflush(stdout);

				if((strcmp(l_dl_msglinkdet_struct_h.h_link_val,":DEAG")==0) || (strcmp(l_dl_msglinkdet_struct_h.h_link_val,":REAG")==0))
				{
				   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DEAG_95R_DSN=",l_95RDSN);
				}
				if((strcmp(l_dl_msglinkdet_struct_h.h_link_val,":DEI1")==0) || (strcmp(l_dl_msglinkdet_struct_h.h_link_val,":REI1")==0))
				{
				   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DEI1_95R_DSN=",l_95RDSN);
				}
				if((strcmp(l_dl_msglinkdet_struct_h.h_link_val,":DECU")==0) || (strcmp(l_dl_msglinkdet_struct_h.h_link_val,":RECU")==0))
				{
				   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DECU_95R_DSN=",l_95RDSN);
				}
				if((strcmp(l_dl_msglinkdet_struct_h.h_link_val,":SELL")==0) || (strcmp(l_dl_msglinkdet_struct_h.h_link_val,":BUYR")==0))
				{
				   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SELL_95R_DSN=",l_95RDSN);
				}
				if(strcmp(l_dl_msglinkdet_struct_h.h_link_val,"INSTR")==0)
				{
				   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"INSTR_95R_DSN=",l_95RDSN);
				}
				printf("****The chr_value of l_95RDSN is :%s\n",l_95RDSN);
				fflush(stdout);
			   }
				}
			   }
			      
			else if(strcmp(l_dl_msglinkdet_struct_h.h_sequence_name,"FIAC")==0)
                           {
                              if(strcmp(l_dl_msglinkdet_struct_h.h_link_val,"SAFE")==0)
                              {
                                 memset(chr_l_place_code,APL_NULL_CHAR,60);
                                 strcat(chr_l_place_code,":");
                                 strcat(chr_l_place_code,l_dl_msglinkdet_struct_h.h_msg_tag);
                                 strcat(chr_l_place_code,":");
                                 strcat(chr_l_place_code,l_dl_msglinkdet_struct_h.h_link_msg_tag);
                                 
                                 strcat(chr_l_place_code,APL_NULL_STRING);
                                 fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PL_OF_TRADE=",chr_l_place_code);
                              }
                           }	
				
			 else if(strcmp(l_dl_msglinkdet_struct_h.h_sequence_name,"TRADD")==0)
          {
          	if(strcmp(l_dl_msglinkdet_struct_h.h_link_val,"TRAD") == 0)
            {
            	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"PL_OF_ORIG_TRADE=",l_dl_msglinkdet_struct_h.h_link_msg_tag);
            }
          }
		  }	 		
 memset(chr_l_domcpacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(chr_l_countacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
 memset(chr_l_clientof,APL_NULL_CHAR,APL_CLIENT_LENGTH);
			      
			     if (strncmp(chr_p_msgno,"572",3)!=0)
				  {
			      	if(!(strncmp(chr_p_msgno,"53x",3)))
			      	{

						  fflush(stdout);
				   	  strcpy(chr_l_domcpacc,p_SEL_VAL[0].link_tag);
				   	  strcpy(chr_l_countacc,p_SEL_VAL[13].link_tag);
				   	  strcpy(chr_l_clientof,p_SEL_VAL[14].link_tag);
				   	  strcpy(chr_l_countacnm,p_SEL_VAL[15].link_tag);
				   	  strcpy(chr_l_clientof1,p_SEL_VAL[16].link_tag);
						  printf("\n Done with Copying values for 53x ...\n"); 
						  fflush(stdout);
			      	}	
			      	else if(strcmp(chr_p_msgno,"534")==0)
			      	{
				    		strcpy(chr_l_domcpacc,p_SEL_VAL[4].link_tag);
				   		strcpy(chr_l_countacc,p_SEL_VAL[5].link_tag);
				   		strcpy(chr_l_clientof,p_SEL_VAL[6].link_tag);
			      		strcpy(chr_l_countacnm,p_SEL_VAL[7].link_tag);
                  printf("\n Hello !! KVaibhavK****** chr_l_countacc =[%s] and chr_l_countacnm =[%s]. *** ",chr_l_countacc,chr_l_countacnm);
				  fflush(stdout);
		        			strcpy(chr_l_clientof1,p_SEL_VAL[8].link_tag);
			      	}
			      	else if(!(strcmp(chr_p_msgno,"596N02")))
			      	{
				   		strcpy(chr_l_domcpacc,p_SEL_VAL[0].link_tag);
				   		strcpy(chr_l_countacc,p_SEL_VAL[6].link_tag);
				   		strcpy(chr_l_clientof,p_SEL_VAL[7].link_tag);
			           	strcpy(chr_l_countacnm,p_SEL_VAL[8].link_tag);
		        	   	strcpy(chr_l_clientof1,p_SEL_VAL[9].link_tag);
			      	}		
			      	else if(!(strcmp(chr_p_msgno,MS_MSGNO_52XN01)))
			      	{
				   		strcpy(chr_l_domcpacc,p_SEL_VAL[0].link_tag);
				   		strcpy(chr_l_countacc,p_SEL_VAL[4].link_tag);
				   		strcpy(chr_l_clientof,p_SEL_VAL[5].link_tag);
			           	strcpy(chr_l_countacnm,p_SEL_VAL[6].link_tag);
		        	   	strcpy(chr_l_clientof1,p_SEL_VAL[7].link_tag);
			      	}	
			      	else if(!(strcmp(chr_p_msgno,"539")))
			      	{
				   		strcpy(chr_l_domcpacc,p_SEL_VAL[0].link_tag);
				   		strcpy(chr_l_countacc,p_SEL_VAL[9].link_tag);
				   		strcpy(chr_l_clientof,p_SEL_VAL[10].link_tag);
			           	strcpy(chr_l_countacnm,p_SEL_VAL[11].link_tag);
		        	   	strcpy(chr_l_clientof1,p_SEL_VAL[12].link_tag);
			      	}	
			      	else if(!(strcmp(chr_p_msgno,"596P")))
			      	{
				   		strcpy(chr_l_domcpacc,p_SEL_VAL[0].link_tag);
				   		strcpy(chr_l_countacc,p_SEL_VAL[4].link_tag);
				   		strcpy(chr_l_clientof,p_SEL_VAL[6].link_tag);
			           	strcpy(chr_l_countacnm,p_SEL_VAL[5].link_tag);
		        	   	strcpy(chr_l_clientof1,p_SEL_VAL[7].link_tag);
			      	}


                  if((strcmp(chr_l_countacc,"")==0) || (strcmp(chr_l_countacc," ")==0))
                  {
                   memset(chr_l_countacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                  }
                  if((strcmp(chr_l_clientof,"")==0) || (strcmp(chr_l_clientof," ")==0))
                  {
                      memset(chr_l_clientof,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                  }
                  if((strcmp(chr_l_domcpacc,"")==0) || (strcmp(chr_l_domcpacc," ")==0))
                  {
                      memset(chr_l_domcpacc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
                  }
                  if((strcmp(chr_l_countacnm,"")==0) || (strcmp(chr_l_countacnm," ")==0))
                  {
                      memset(chr_l_countacnm,APL_NULL_CHAR,36);
                  }
                  printf("\n Hello !! VaibhavK****** chr_l_countacc =[%s] and chr_l_countacnm =[%s]. *** ",chr_l_countacc,chr_l_countacnm);
				  fflush(stdout);
                  if((strcmp(chr_l_countacc,APL_NULL_STRING)!=0)   && (strcmp(chr_l_countacnm,APL_NULL_STRING)==0))
                  {
                     EXEC SQL SELECT decode(ltrim(rtrim(substr(pty_name,1,35))),NULL,NULL,ltrim(rtrim(substr(pty_name,1,35)))  )
                              INTO :chr_l_dbcountaccnm:i_dbcountaccnm
                              FROM MT_PARTY
                              WHERE pty_code=:chr_l_countacc;
                     IS_ANY_ORA_ERROR;
                     fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DBCOUNTNM=",chr_l_dbcountaccnm);
                  }
                  
                  memset(chr_h_clientofbic,APL_NULL_CHAR,13);
                  memset(chr_h_countaccbic,APL_NULL_CHAR,13);
                  memset(chr_h_domcpacbic,APL_NULL_CHAR,13);


                  printf("\n Value of chr_l_dereagtag = [%s] , Broker = [%s] , Message No = [%s] \n",chr_l_dereagtag,chr_l_domcpacc,chr_p_msgno);
				  fflush(stdout);


                  if((strcmp(chr_p_msgno,"534")==0))    /* Vaibhav Karnik KOTAK-UAT I-SolveID:361*/
                  {
                     memset(chr_h_domcpacbic,APL_NULL_CHAR,13);
                     EXEC SQL SELECT PTY_BIC_CODE
                          INTO :chr_h_domcpacbic:i_domcpacbic FROM MT_PARTY
                                WHERE pty_code=:chr_l_domcpacc;  
                     IS_ANY_ORA_ERROR; 
                  } 

                  if((strcmp(chr_l_dereagtag,TAG_IN_MSG_95P)==0))
                  {
                     memset(chr_h_domcpacbic,APL_NULL_CHAR,13);
                     EXEC  SQL SELECT PTY_SWF_ADD
                           INTO :chr_h_domcpacbic:i_domcpacbic FROM MT_PARTY
                                   WHERE pty_code=:chr_l_domcpacc;
                     IS_ANY_ORA_ERROR;
                  }
                  if((strcmp(chr_l_sellbuyrtag,TAG_IN_MSG_95P)==0))
                  {
                     memset(chr_h_countaccbic,APL_NULL_CHAR,13);
                     EXEC SQL SELECT PTY_SWF_ADD
                     INTO :chr_h_countaccbic:i_countaccbic FROM MT_PARTY
                     WHERE pty_code=:chr_l_countacc;
                     IS_ANY_ORA_ERROR;
                  }
                  if((strcmp(chr_l_decurecutag,TAG_IN_MSG_95P)==0))
                  {
                     memset(chr_h_clientofbic,APL_NULL_CHAR,13);
                     EXEC SQL SELECT PTY_SWF_ADD
                     INTO :chr_h_clientofbic:i_accountofbic FROM MT_PARTY
                     WHERE pty_code=:chr_l_clientof;
                     IS_ANY_ORA_ERROR;
                  }
		         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DOMCPBIC_CODE=",chr_h_domcpacbic);
			    	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NCBIC=",chr_h_countaccbic);
			     	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NABIC=",chr_h_clientofbic);

      

               printf("l_countacc is ***%s******************\n",chr_l_countacc);
			   fflush(stdout);
              // printf("strlen chr_l_countacc is ***%d******************\n",strlen(chr_l_countacc)); Changes done for AIX Migration
               printf("strlen chr_l_countacc is ***%d******************\n",(int)strlen(chr_l_countacc));
			   fflush(stdout);
            if((strcmp(chr_l_setdet,APL_NULL_STRING)!=0))
            {
               if((strcmp(chr_l_sellbuyrtag,TAG_IN_MSG_95S)==0) || ((strcmp(chr_l_sellbuyrtag,TAG_IN_MSG_95P)==0) && (strcmp(chr_h_countaccbic,APL_NULL_STRING)==0)) || (strcmp(chr_l_countacc,APL_NULL_STRING)==0) || ((strcmp(chr_l_countacc,APL_NULL_STRING)!=0) && (strcmp(chr_l_countacnm,APL_NULL_STRING)==0)))
               {
                  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"STG=",TAG_IN_MSG_95Q);
               }
               else
               {
                   fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"STG=",chr_l_sellbuyrtag);
               }
               if((strcmp(chr_l_decurecutag,TAG_IN_MSG_95S)==0) || ((strcmp(chr_l_decurecutag,TAG_IN_MSG_95P)==0) && (strcmp(chr_h_clientofbic,APL_NULL_STRING)==0)) || ((strcmp(chr_l_clientof,APL_NULL_STRING)!=0) && (strcmp(chr_l_clientof1,APL_NULL_STRING)==0))|| (strcmp(chr_l_clientof1,APL_NULL_STRING)!=0) && (strcmp(chr_l_decurecutag,APL_NULL_STRING)==0) || ((strcmp(chr_l_clientof,APL_NULL_STRING)==0) && (strcmp(chr_l_clientof1,APL_NULL_STRING)!=0)))
               {
                    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DTG=",TAG_IN_MSG_95Q);
               }
               else
               {
                  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"DTG=",chr_l_decurecutag);
               }
            }


           if ( (strcmp(chr_l_clientof1,APL_NULL_STRING)!=0) || (strcmp(chr_l_clientof,APL_NULL_STRING)!=0) || (strcmp(chr_h_clientofbic,APL_NULL_STRING)!=0))
                             {
	                 	 fprintf(p_Data_File,"%d%s\n",*p_rownum,"PRINT_DECURECU=Y");
			     }
			     else
			     {
	                 	 fprintf(p_Data_File,"%d%s\n",*p_rownum,"PRINT_DECURECU=");

			     }

          if ( (strcmp(chr_l_countacnm,APL_NULL_STRING) !=0) || (strcmp(chr_l_countacc,APL_NULL_STRING)!=0) || (strcmp(chr_h_countaccbic,APL_NULL_STRING) !=0) )
			     {
             			     fprintf(p_Data_File,"%d%s\n",*p_rownum,"PRINT_SELL=Y");
		             }
                             else
			     {
             			     fprintf(p_Data_File,"%d%s\n",*p_rownum,"PRINT_SELL=");
			     }
				}
            if((strcmp(chr_l_setdet,APL_NULL_STRING)==0))
            {
            	fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_DEREAGTAG=","");
            	fprintf(p_Data_File,"%d%s\n",*p_rownum,"STG=95Q");
             	fprintf(p_Data_File,"%d%s\n",*p_rownum,"DTG=95Q");
               fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_INSTRTAG=","");
               fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_INTRTAG=","");
			   }
				
			      
		  
								if ((!strncmp(chr_p_msgno,"572",3)) && (strcmp(p_SEL_VAL[11].link_tag,"Y")==0))
								{
                        	EXEC SQL CLOSE linkinfo_cur1;
								}
								else
								{
                        	EXEC SQL CLOSE linkinfo_cur;
								}
                        IS_ANY_ORA_ERROR;

								if ((strlen(chr_l_stcoval1)>0) || (strlen(chr_l_stcoval2)>0) || (strlen(chr_l_stcoval3)>0))
                        {
                           fprintf(p_Data_File,"%d%s\n",*p_rownum,"FOUND_PHYS=Y");
                        }
                        if (strlen(chr_l_stcoval1)>0)
                        {
                           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_STCOPHYS=",chr_l_stcoval1);
                        }
                        if ((strlen(chr_l_stcoval1)==0) && (strlen(chr_l_stcoval2)>0))
                        {
                           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_STCOPHYS=",chr_l_stcoval2);
                        }
                        if ((strlen(chr_l_stcoval1)==0) && (strlen(chr_l_stcoval2)==0) && (strlen(chr_l_stcoval3)>0))
                        {
                           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_STCOPHYS=",chr_l_stcoval3);
                        }
                  }

         }
	
	if ( ( p_rec_no == 1 ) && (!strncmp(chr_p_msgno,"550",3)))
	{
		EXEC SQL SELECT instr_isin,substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35),nominal_value,instr_code
           into :chr_h_isin_parent:i_instr_isin,:chr_h_instrdesc_parent,:h_rp_nomval,:chr_h_pinstrcode
           from MT_INSTRUMENT
           where instr_code = (select INSTR_PARENT from MT_INSTRUMENT where instr_code = :p_SEL_VAL[0].link_tag);
  		IS_ANY_ORA_ERROR
   	if(sqlca.sqlcode == 1403 )
   	{
			EXEC SQL SELECT instr_isin,substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35),nominal_value,instr_code
           into :chr_h_isin_parent:i_instr_isin,:chr_h_instrdesc_parent,:h_rp_nomval,:chr_h_pinstrcode
           from MT_INSTRUMENT
           where instr_code = :p_SEL_VAL[0].link_tag;
  			IS_ANY_ORA_ERROR

   		if(sqlca.sqlcode == 1403 )
   		{
        		CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[0].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        		APL_GOBACK_FAIL
   		}
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"P_RISIN=",chr_h_isin_parent);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"P_RESINSTR_NAME=",chr_h_instrdesc_parent);
				fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"P_RESNOMVAL=",h_rp_nomval);
           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPINSTR_CODE=",chr_h_pinstrcode);
		}
		else
		{
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"P_RISIN=",chr_h_isin_parent);
  			fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"P_RESINSTR_NAME=",chr_h_instrdesc_parent);
				fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"P_RESNOMVAL=",h_rp_nomval);
           fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RPINSTR_CODE=",chr_h_pinstrcode);
		}
		
	   if ( CO_Chk_CcyConvDt("",&int_period_flg1,l_debug_info_ptr) == APL_FAILURE )
      {
         APL_GOBACK_FAIL
      }
    if ((int_period_flg1 ==1) && (strcmp(g_mt_commonsys_params_struct_h.nation_code,"TR")==0 ))
    {

		printf("p_SEL_VAL[21].link_val is %s\n",p_SEL_VAL[21].link_val);
		fflush(stdout);
		printf("p_SEL_VAL[21].link_tag is %s\n",p_SEL_VAL[21].link_tag);
		fflush(stdout);
		printf("p_SEL_VAL[21].NUM_VAL is %lf\n",p_SEL_VAL[21].NUM_VAL);
		fflush(stdout);

		if ((strcmp(p_SEL_VAL[21].link_val,"TR_SUBS_AMT")==0) && (atof(p_SEL_VAL[21].link_tag)>0))
		{
			strcpy(chr_h_str_amt,p_SEL_VAL[21].link_tag);
			dbl_h_temp_amount=atof(p_SEL_VAL[21].link_tag);

			dbl_i=0;
			if(strchr(chr_h_str_amt,'.')!=0)
			{
         	while(chr_h_str_amt[dbl_i]!='.') 
         	{
            	chr_h_str_temp[dbl_i]= chr_h_str_amt[dbl_i];
            	dbl_i=dbl_i+1;
         	}
			}
			memset(chr_h_str_temp,APL_NULL_CHAR,18);
		   strcpy(chr_h_str_temp,chr_h_str_amt+dbl_i+1);	
			
			if(atoi(chr_h_str_temp)>100)
         	int_i_temp_lastdigit=1;
			printf("h_i_temp_lastdigit is %d\n",int_i_temp_lastdigit);
			fflush(stdout);
         if (int_i_temp_lastdigit > 0)
         {
            fflush(stdout);
            EXEC SQL SELECT TRUNC(:dbl_h_temp_amount,2) INTO :dbl_h_temp_amount1 FROM DUAL;
              IS_ANY_ORA_ERROR

             h_final_amount= dbl_h_temp_amount1 + 0.01;
			printf("h_final_amt is %lf\n",h_final_amount);
            fflush(stdout);
         }	
			else
				h_final_amount= dbl_h_temp_amount;
			
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TR_TRD_AMT=",h_final_amount);
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYTR_TRD_AMT=TRY");
		}
		else
		{
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"TR_TRD_AMT=",h_final_amount);
			fprintf(p_Data_File,"%d%s\n",*p_rownum,"CCYTR_TRD_AMT=TRY");
		}
	}
	
	}

	


if((p_rec_no == 1) &&
   (( strncmp(chr_p_msgno,"550",3) == 0) ||
    ( strncmp(chr_p_msgno,"551",3) == 0) ||
    ( strncmp(chr_p_msgno,"552",3) == 0) ||
    ( strncmp(chr_p_msgno,"554",3) == 0) ||
    ( strncmp(chr_p_msgno,"556",3) == 0) ||
	 ( strcmp(chr_p_msgno,"564N91") == 0) ||
	 (strcmp(chr_p_msgno,"564R91") == 0)	 ||
	 (strncmp(chr_p_msgno,"560",3) == 0)
	))
	{
		printf("112233:Entered in if cond loop...\n");
		fflush(stdout);
		memset(l_account_93B,APL_NULL_CHAR,APL_CLIENT_LENGTH);
		memset(l_instr_code_93B,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
		memset(l_entl_basis_93B,APL_NULL_CHAR,2);
		memset(chr_l_cons_flg,APL_NULL_CHAR,2);   

   	if (( strncmp(chr_p_msgno,"550",3) == 0) || ( strncmp(chr_p_msgno,"551",3) == 0) || ( strncmp(chr_p_msgno,"552",3) == 0) || 
			(strcmp(chr_p_msgno,"564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0) ) 
		{
			strcpy(l_account_93B,p_SEL_VAL[2].link_tag);
			strcpy(l_instr_code_93B,p_SEL_VAL[4].link_tag);
		}
		else if ( strncmp(chr_p_msgno,"554",3) == 0) 
		{
			strcpy(l_account_93B,p_SEL_VAL[2].link_tag);
			strcpy(l_instr_code_93B,p_SEL_VAL[1].link_tag);
		}
		else if ( strncmp(chr_p_msgno,"556",3) == 0) 
		{
			strcpy(l_account_93B,p_SEL_VAL[4].link_tag);
			strcpy(l_instr_code_93B,p_SEL_VAL[7].link_tag);
		}
      else if ( strncmp(chr_p_msgno,"560",3) == 0) 
      {
         strcpy(l_account_93B,p_SEL_VAL[0].link_tag);
         strcpy(l_instr_code_93B,p_SEL_VAL[4].link_tag);
      }
		
		
		if((strncmp(chr_p_msgno,"554",3)==0) && (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
		{
		#ifdef EMU_PROCESSING	
			if(strcmp(chr_p_msgno,"554N02")==0) 
			{
				l_earnings = p_SEL_VAL[15].NUM_VAL;
				l_EARNINGS_RATE = p_SEL_VAL[18].NUM_VAL; 
				printf("l_income is %lf\n",l_earnings);
				fflush(stdout);
				printf("l_income_rt is %lf\n",l_EARNINGS_RATE);
				fflush(stdout);
				if(l_earnings > 0 )
				{
 					printf("my earnings is >0 hence dbl_i have entered earnings>0 loop \n");
					fflush(stdout);
     		 		EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
        		   	FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and 
              	   	                INSTR_TYPE = 'BON';
				}
				else if(l_EARNINGS_RATE > 0 )
				{
 					printf("my income_rt is >0 hence dbl_i have entered income_rt>0 loop \n");
					fflush(stdout);
     		 			EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
        		   		FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and 
              	      	          	   INSTR_TYPE ='FMT';
				}
			}
			else if ((strcmp(chr_p_msgno,"554R02")==0) || (strcmp(chr_p_msgno,"554C02")==0))
			{
				l_earnings=p_SEL_VAL[16].NUM_VAL;
				l_EARNINGS_RATE=p_SEL_VAL[17].NUM_VAL;
				if( l_earnings > 0 )
				{
            	  EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
			    		FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and
         		   	 	INSTR_TYPE = 'BON';
				}
				else if( l_EARNINGS_RATE  > 0 )
				{
            	    		 EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
			    		FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and
         		   	 	INSTR_TYPE = 'FMT';
				}
			}
	  IS_ANY_ORA_ERROR
	  #else	

		if(((strcmp(chr_p_msgno,"554N02")==0) || (strcmp(chr_p_msgno,"554R02")==0) || (strcmp(chr_p_msgno,"554C02")==0) )&& (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0))
		{
			l_earnings = p_SEL_VAL[16].NUM_VAL;
			/* Nikhil Commented this for BI TRAD TAG
			l_EARNINGS_RATE = p_SEL_VAL[17].NUM_VAL; */
			l_EARNINGS_RATE = atof(p_SEL_VAL[17].link_tag);
			printf("l_income is %lf\n",l_earnings);
			fflush(stdout);
			printf("l_income_rt is %lf\n",l_EARNINGS_RATE);
			fflush(stdout);
			if(l_earnings > 0 )
			{
     		 	EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
        		   FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and 
              	                   INSTR_TYPE = 'BON';
			}
			else if(l_EARNINGS_RATE > 0 )
			{
     		 		EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
        		   	FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and 
              	                	   INSTR_TYPE ='FMT';
			}
		}
		IS_ANY_ORA_ERROR
	  #endif
	  }
      else if ((strcmp(chr_p_msgno,"551N01")==0) && ( (strcmp(p_SEL_VAL[3].link_tag,"BI") == 0) || (strcmp(p_SEL_VAL[3].link_tag,"RD") == 0) ))
      {
         
         l_earnings = atof(p_SEL_VAL[21].link_tag);
         l_EARNINGS_RATE = atof(p_SEL_VAL[20].link_tag);
         printf("l_income is %lf\n:", l_earnings);
		 fflush(stdout);
         printf("l_income_rt is %lf\n:", l_EARNINGS_RATE);
		 fflush(stdout);
         

         if(l_EARNINGS_RATE == 0 )
         {
         printf("SELECTION FOR ASECEVT FOR 551N01 and R01551N01 l_EARNINGS_RATE ==0\n:");
		 fflush(stdout);
                      EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
               FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and
                     INSTR_TYPE = 'BON';
         }
         else if(l_earnings  == 0 )
         {
         printf("SELECTION FOR ASECEVT FOR 551N01 and R01 l_earnings == 0\n:");
		 fflush(stdout);
                      EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
               FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and
                     INSTR_TYPE = 'FMT';
         }
			IS_ANY_ORA_ERROR
       }
		else 
		{
     		 	EXEC SQL SELECT ENTITL_BASE  INTO :l_entl_basis_93B
        		   FROM CASECEVENT where CA_EVENT =  :p_SEL_VAL[3].link_tag and 
			    INSTR_TYPE = :p_SEL_VAL[8].link_tag;
      		IS_ANY_ORA_ERROR
		}



   	if(sqlca.sqlcode == 1403 )
   	{
        	CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[3].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
        	APL_GOBACK_FAIL
   	}
		printf("\n Calculating safekeep_pos for client:%s: for instr_code :%s: for entl basis :%s: ",l_account_93B,l_instr_code_93B,l_entl_basis_93B);
		fflush(stdout);

      
                /*Isolve:362*/
		if((strcmp(chr_p_msgno,"551N01")==0)||(strcmp(chr_p_msgno,"551R01")==0)||(strcmp(chr_p_msgno,"552R01")==0)||(strcmp(chr_p_msgno,"552N01")==0)||(strcmp(chr_p_msgno,"560N01")==0)||(strcmp(chr_p_msgno,"560R01")==0)||(strcmp(chr_p_msgno,"564N91")==0)||(strcmp(chr_p_msgno,"564R91")==0 ))
		{
         EXEC SQL SELECT distinct('Y') into :chr_l_cons_flg FROM MT_MSGADDRESS
         WHERE cln_code=:l_account_93B
         AND COMB_MSG='Y' AND MSG_IDENT_NO IN ('3','31')
         AND EXISTS (SELECT cln_master FROM MT_CLIENT WHERE cln_master=:l_account_93B);

         IS_ANY_ORA_ERROR
      }
		else
		{
			strcpy(chr_l_cons_flg,"N");
      }
      
      if (APL_FAILURE == CO_Chk_CntryEnabled(  "EVNT_INIT",
                                             "SM_RECDT",
                                              &l_cond_ru,
                                              l_debug_info_ptr ))
      {
                 APL_GOBACK_FAIL
      } 
      
      if (((strcmp(chr_p_msgno,"560N01") == 0) || (strcmp(chr_p_msgno,"560R01") == 0)) && (l_cond_ru)) /*Isolve:362*/
      {
                  EXEC SQL SELECT NVL(to_char(REC_DATE,'dd/mm/yyyy hh:mi:ss'),''), PRELIMINARY_FLAG into :chr_l_sm_recdt:i_sm_recdt,:chr_l_sm_prelim
                  FROM CAEVENT
                  WHERE corp_id = :p_SEL_VAL[30].link_tag;

                  IS_ANY_ORA_ERROR

                  if(APL_FAILURE == CO_RtvSysDt(chr_l_systemdate,l_debug_info_ptr))
                               APL_GOBACK_FAIL
      }

      if(strcmp(chr_l_cons_flg,"Y")==0)
      {
			printf("111.Entered in Consolidated ZONE\n");
			fflush(stdout);
	      
			printf("Consolidated ZONE chr_p_msgno is %s and l_entl_basis_93B is %s client is %s \n",chr_p_msgno,l_entl_basis_93B,l_account_93B);
			fflush(stdout);
			
	      if (((strcmp(chr_p_msgno,"560N01") == 0) ||(strcmp(chr_p_msgno,"560R01") == 0)) && (l_cond_ru))	/*Isolve:362*/
	      {		
			if (strcmp(chr_l_systemdate, chr_l_sm_recdt) == 0 || (strcmp(chr_l_sm_prelim, "Y") == 0 && i_sm_recdt == -1))
			{
				EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B
				FROM DL_SAFEK 
			        WHERE  instr_code = :l_instr_code_93B
                                AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);
				
				IS_ANY_ORA_ERROR

				/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010 -- Displaying eliglble positions in linked event message -- STARTED */

				if (h_total_safek_93B == 0)
				{
						  printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
						  fflush(stdout);
					
						   EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
								 INTO :l_evt_priority:i_evt_priority,
									  :l_attach_corp_id:i_attach_corp_id
								 FROM CAEVENT
								 WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

							printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
 	 						fflush(stdout);
										
			    		    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						    fflush(stdout);

						    IS_ANY_ORA_ERROR

						     if ( l_evt_priority == 2 )
								{
										EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B
												 FROM DL_SAFEK 
												 WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
												 AND   client = :l_account_93B
												 GROUP BY instr_code,client;

											    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										        fflush(stdout);
											
										        IS_ANY_ORA_ERROR
								}
				}

				/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010 -- Displaying eliglble positions in linked event message -- ENDED */
				
			}	 
			else
			{
				EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B
                                FROM DL_HISSAFEK
                                WHERE  instr_code = :l_instr_code_93B
				AND    POSIT_DATE = :chr_l_sm_recdt
                                AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);

                                IS_ANY_ORA_ERROR
				
					/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010 Displaying eliglble positions in linked event message -- STARTED */

					if (h_total_safek_93B == 0)
					{
						  printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
						  fflush(stdout);
					
						   EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
								 INTO :l_evt_priority:i_evt_priority,
									  :l_attach_corp_id:i_attach_corp_id
								 FROM CAEVENT
								 WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

							printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
 	 						fflush(stdout);
										
			    		    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						    fflush(stdout);

						    IS_ANY_ORA_ERROR

						     if ( l_evt_priority == 2 )
								{
										EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B
												 FROM DL_HISSAFEK
												 WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
												 AND    POSIT_DATE = :chr_l_sm_recdt
												 AND   client = :l_account_93B
												 GROUP BY instr_code,client;

											    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										        fflush(stdout);
											
										        IS_ANY_ORA_ERROR
								}
						}

						/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010 Displaying eliglble positions in linked event message  --ENDED */				
			}
	      }
	      else
	      {
			printf("Entered in else loop of l_entl_basis_93B is 'T' of Consolidated ZONE\n"); 
			fflush(stdout);
	      if (strcmp(l_entl_basis_93B,"T")==0)	
		   {
				/* Added below cond by Chava KOTAK AIX ,only for BB events it should pick FREE safek for TRAD: tab */
				if ((strcmp(chr_p_msgno,"552N01")==0) || (strcmp(chr_p_msgno,"552R01")==0))
				{
				 printf("Entered in BB Event Condition: chr_p_msgno is [%s]\n",chr_p_msgno);
				 fflush(stdout);
             EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
		                        +	NVL(SUM(NVALRECEIVE),0)
				   					-	NVL(SUM(NVALDELIVER),0)
				   					+  NVL(SUM(VAL_REC),0)
				   				   -	NVL(SUM(VAL_DEL),0)
				   					+  NVL(SUM(DP_REC),0)
				   				   -	NVL(SUM(DP_DEL),0) into :h_total_safek_93B
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B)
									  AND BLOCK_TYPE='FREE';	
            IS_ANY_ORA_ERROR
				}
				else
				{
             EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
		                        +	NVL(SUM(NVALRECEIVE),0)
				   					-	NVL(SUM(NVALDELIVER),0)
				   					+  NVL(SUM(VAL_REC),0)
				   				   -	NVL(SUM(VAL_DEL),0)
				   					+  NVL(SUM(DP_REC),0)
				   				   -	NVL(SUM(DP_DEL),0) into :h_total_safek_93B
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);
            IS_ANY_ORA_ERROR
				}
				
			   printf("123.Safek Positions are::[%lf]\n",h_total_safek_93B);
			   fflush(stdout);	
				
				/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010 Displaying eliglble positions in linked event message -- STARTED */

				if (h_total_safek_93B == 0)
				{
						  printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
						  fflush(stdout);
					
						   EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
								 INTO :l_evt_priority:i_evt_priority,
									  :l_attach_corp_id:i_attach_corp_id
								 FROM CAEVENT
								 WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

							printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
 	 						fflush(stdout);
										
			    		    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						    fflush(stdout);

						    IS_ANY_ORA_ERROR

						     if ( l_evt_priority == 2 )
								{
										 EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
															+	NVL(SUM(NVALRECEIVE),0)
				   											-	NVL(SUM(NVALDELIVER),0)
										   					+   NVL(SUM(VAL_REC),0)
				   											-	NVL(SUM(VAL_DEL),0)
				   											+   NVL(SUM(DP_REC),0)
										   					-	NVL(SUM(DP_DEL),0) into :h_total_safek_93B
											     FROM DL_SAFEK
											  	 WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
												 AND   client = :l_account_93B
												 GROUP BY instr_code,client;

											    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										        fflush(stdout);
											
										        IS_ANY_ORA_ERROR
								}
				}

				/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010 Displaying eliglble positions in linked event message --ENDED */
				/*Changes for E-mail Elig tag 20-02-07*/
				if((strcmp(chr_p_msgno,"560N01") == 0) || 
				   (strcmp(chr_p_msgno,"551N01") == 0) ||
				   (strcmp(chr_p_msgno,"552N01") == 0))
				{	
					printf("\n  Siva 1 E-mail  h_total_safek_93B :%lf:",h_total_safek_93B);
					fflush(stdout);
					printf("\n Siva 1 E-mail l_instr_code_93B :%s:",l_instr_code_93B);
					fflush(stdout);
					printf("\n Siva 1 E-mail l_account_93B :%s:",l_account_93B);
					fflush(stdout);

					h_unAuthTrdPos = 0;
					EXEC SQL SELECT
					DECODE(NULL,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY)),0,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY))) 
					INTO :h_unAuthTrdPos 
					FROM dl_deal
					WHERE  instr_code = :l_instr_code_93B
					AND    client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B)
					AND  DEAL_STAT ='UU'; 
					IS_ANY_ORA_ERROR
					printf("\n E-mail  h_unAuthTrdPos:%lf:",h_unAuthTrdPos);
					fflush(stdout);
					h_total_safek_93B = h_total_safek_93B + h_unAuthTrdPos;
					printf("\n  Siva 2 E-mail  h_total_safek_93B :%lf:",h_total_safek_93B);
					fflush(stdout);
					
				}
				/*Changes for E-mail Elig tag Ends*/


		   }
	      else if (strcmp(l_entl_basis_93B,"S")==0)	
		   {
             EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
			   					  into :h_total_safek_93B
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND   client IN (SELECT cln_code FROM MT_CLIENT WHERE cln_master=:l_account_93B);
             IS_ANY_ORA_ERROR

				 	/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  -- STARTED */

					if (h_total_safek_93B == 0)
					{
						  printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
						  fflush(stdout);
					
						   EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
								 INTO :l_evt_priority:i_evt_priority,
									  :l_attach_corp_id:i_attach_corp_id
								 FROM CAEVENT
								 WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

							printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
 	 						fflush(stdout);
										
			    		    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						    fflush(stdout);

						    IS_ANY_ORA_ERROR

						     if ( l_evt_priority == 2 )
								{
												EXEC SQL SELECT 		NVL(SUM(safekeep_pos),0)
			   									INTO :h_total_safek_93B
												FROM DL_SAFEK
												WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
												AND   client = :l_account_93B
												GROUP BY instr_code,client;

											    printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										        fflush(stdout);
											
										        IS_ANY_ORA_ERROR
								}
						}
						/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  --ENDED */
		   }
		} 
      }   
      else
      {
			printf("\n11111.Entered in NON Consolidated ZONE");		
			fflush(stdout);
			printf("\n NON Consolidated ZONE chr_p_msgno is %s and l_entl_basis_93B is %s client is %s",chr_p_msgno,l_entl_basis_93B,l_account_93B);
			fflush(stdout);
		
		if (((strcmp(chr_p_msgno,"560N01") == 0)|| (strcmp(chr_p_msgno,"560R01") == 0)) && (l_cond_ru)) /*Isolve:362*/
                {
                        if (strcmp(chr_l_systemdate, chr_l_sm_recdt) == 0 || (strcmp(chr_l_sm_prelim, "Y") == 0 && i_sm_recdt == -1))
                        {
                                EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B
                                FROM DL_SAFEK
                                WHERE  instr_code = :l_instr_code_93B
                                AND    client =:l_account_93B
				GROUP BY instr_code,client;

                                IS_ANY_ORA_ERROR
				 
								/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  -- STARTED */

								if (h_total_safek_93B == 0)
								{
									 	printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
									    fflush(stdout);
					
										EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
												 INTO :l_evt_priority:i_evt_priority,
													  :l_attach_corp_id:i_attach_corp_id
										FROM CAEVENT
										WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

										printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
										fflush(stdout);
										
										printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										fflush(stdout);

										IS_ANY_ORA_ERROR

										if ( l_evt_priority == 2 )
										{
												  EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B														   FROM DL_SAFEK
														   WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
														   AND   client = :l_account_93B
														   GROUP BY instr_code,client;

											printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										   fflush(stdout);
											
										   IS_ANY_ORA_ERROR
										}
								}

								/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  --ENDED */
                        }
                        else
                        {
                                EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B
                                FROM DL_HISSAFEK
                                WHERE  instr_code = :l_instr_code_93B
                                AND    POSIT_DATE = :chr_l_sm_recdt
                                AND    client =:l_account_93B
				GROUP BY instr_code,client;

                                IS_ANY_ORA_ERROR
				
								/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  -- STARTED */

								if (h_total_safek_93B == 0)
								{
									 	printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
									    fflush(stdout);
					
										EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
												 INTO :l_evt_priority:i_evt_priority,
													  :l_attach_corp_id:i_attach_corp_id
										FROM CAEVENT
										WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

										printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
										fflush(stdout);
										
										printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										fflush(stdout);

										IS_ANY_ORA_ERROR

										if ( l_evt_priority == 2 )
										{
												EXEC SQL SELECT NVL(SUM(safekeep_pos),0) into :h_total_safek_93B
														 FROM DL_HISSAFEK		   
														 WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
													     AND    POSIT_DATE = :chr_l_sm_recdt
														 AND   client = :l_account_93B
														 GROUP BY instr_code,client;

											printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
										   fflush(stdout);
											
										   IS_ANY_ORA_ERROR
										}
								}
		
								/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  --ENDED */
                        }
                }
		else
		{	
        	if (strcmp(l_entl_basis_93B,"T")==0)
        	{
				/* Added below cond by Chava KOTAK AIX ,only for BB events it should pick FREE safek for TRAD: tab */
				if((strcmp(chr_p_msgno,"552N01")==0) || (strcmp(chr_p_msgno,"552R01")==0))
				{
				 printf("\n Entered in BB event cond...chr_p_msgno is [%s]",chr_p_msgno);	
				 fflush(stdout);
         	 EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
            	               +  SUM(NVL(NVALRECEIVE,0))
               	            -  SUM(NVL(NVALDELIVER,0))
                  	         +  SUM(NVL(VAL_REC,0))
                     	      -  SUM(NVL(VAL_DEL,0))
                  	         +  SUM(NVL(DP_REC,0))
                     	      -  SUM(NVL(DP_DEL,0)) into :h_total_safek_93B
                  	        FROM DL_SAFEK
                     	     WHERE  instr_code = :l_instr_code_93B
                        	  AND   client = :l_account_93B
									  AND BLOCK_TYPE='FREE'
                           GROUP BY instr_code,client;
				
				printf ("sqlcode :%d: sqlmsg :%s: h_total_safek_93B:%lf: \n",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc,h_total_safek_93B);
				fflush(stdout);
           	IS_ANY_ORA_ERROR
				}
				else
				{
         	 EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
            	               +  SUM(NVL(NVALRECEIVE,0))
               	            -  SUM(NVL(NVALDELIVER,0))
                  	         +  SUM(NVL(VAL_REC,0))
                     	      -  SUM(NVL(VAL_DEL,0))
                  	         +  SUM(NVL(DP_REC,0))
                     	      -  SUM(NVL(DP_DEL,0)) into :h_total_safek_93B
                  	        FROM DL_SAFEK
                     	     WHERE  instr_code = :l_instr_code_93B
                        	  AND   client = :l_account_93B
                             GROUP BY instr_code,client;
				printf ("sqlcode :%d: sqlmsg :%s:\n",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc);
           	IS_ANY_ORA_ERROR
				}
				
				printf("CHAVA 111\n");
			   printf("\n 124.SafeKeep Positions are::[%lf]",h_total_safek_93B);
				fflush(stdout);

				/*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  -- STARTED */

				if (h_total_safek_93B == 0)
				{
				 	printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
				   fflush(stdout);
					
						EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
									INTO :l_evt_priority:i_evt_priority,
										 :l_attach_corp_id:i_attach_corp_id
									FROM CAEVENT
									WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

						printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
						fflush(stdout);
						
						printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						fflush(stdout);

						IS_ANY_ORA_ERROR

						if ( l_evt_priority == 2 )
						{
								EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
								                 +  SUM(NVL(NVALRECEIVE,0))
								    			 -  SUM(NVL(NVALDELIVER,0))
												 +  SUM(NVL(VAL_REC,0))
									    		 -  SUM(NVL(VAL_DEL,0))
												 +  SUM(NVL(DP_REC,0))
												 -  SUM(NVL(DP_DEL,0)) 
										   into :h_total_safek_93B
										   FROM DL_SAFEK
										   WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
										   AND   client = :l_account_93B
										   GROUP BY instr_code,client;

							printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						   fflush(stdout);
							
						   IS_ANY_ORA_ERROR
						}
				}

            /*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  --ENDED */				 

				/*Nikhil Changes for E-mail Elig tag 20-02-07*/
				if((strcmp(chr_p_msgno,"560N01") == 0) || 
				   (strcmp(chr_p_msgno,"551N01") == 0) ||
				   (strcmp(chr_p_msgno,"552N01") == 0))
				{	
					printf("\n  Siva 3 E-mail  h_total_safek_93B :%lf:",h_total_safek_93B);
					fflush(stdout);
					printf("\n Siva 3 E-mail l_instr_code_93B :%s:",l_instr_code_93B);
					fflush(stdout);
					printf("\n Siva 3 E-mail l_account_93B :%s:",l_account_93B);
					fflush(stdout);

					h_unAuthTrdPos = 0;
					EXEC SQL SELECT 
					DECODE(NULL,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY)),0,SUM(DECODE(DEAL_CD,'1',QTY,'2',-QTY,'3',QTY,'4',-QTY))) 
					INTO :h_unAuthTrdPos 
					FROM dl_deal
					WHERE  instr_code = :l_instr_code_93B
					AND    client = :l_account_93B
					AND    DEAL_STAT ='UU';

					IS_ANY_ORA_ERROR
					h_total_safek_93B = h_total_safek_93B + h_unAuthTrdPos;
					printf("\n E-mail  h_unAuthTrdPos :%lf:",h_unAuthTrdPos);
					fflush(stdout);
					printf("\n Siva 4 E-mail  h_total_safek_93B :%lf:",h_total_safek_93B);
					fflush(stdout);
					
				}
				/*Nikhil Changes for E-mail Elig tag Ends*/
         }
         else if (strcmp(l_entl_basis_93B,"S")==0)
         {
             EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
                             into :h_total_safek_93B
                             FROM DL_SAFEK
                             WHERE  instr_code = :l_instr_code_93B
                             AND   client = :l_account_93B
                             GROUP BY instr_code,client;
             IS_ANY_ORA_ERROR

			 /*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  -- STARTED */

				if (h_total_safek_93B == 0)
				{
					 	printf("\n Event corpid is %s",p_SEL_VAL[14].link_tag);
					    fflush(stdout);
					
						EXEC SQL SELECT PRIORITY , ATTACH_CORP_ID
									INTO :l_evt_priority:i_evt_priority,
										 :l_attach_corp_id:i_attach_corp_id
									FROM CAEVENT
									WHERE CORP_ID	=	:p_SEL_VAL[14].link_tag;

						printf("\n l_attach_corp_id is %s i_attach_corp_id  %d",l_attach_corp_id,i_attach_corp_id);
						fflush(stdout);
						
						printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						fflush(stdout);

						IS_ANY_ORA_ERROR

						if ( l_evt_priority == 2 )
						{
					             EXEC SQL SELECT     SUM(NVL(safekeep_pos,0))
								          INTO :h_total_safek_93B
									      FROM DL_SAFEK
										  WHERE  instr_code = (SELECT INSTR_CODE FROM CAEVENT WHERE CORP_ID = :l_attach_corp_id  )
										  AND   client = :l_account_93B
										  GROUP BY instr_code,client;

							printf("\n l_evt_priority is %d indicator is %d sqlcode is %d",l_evt_priority,i_evt_priority,sqlca.sqlcode);
						   fflush(stdout);
							
						   IS_ANY_ORA_ERROR
						}
				}

            /*ADDED BY SIVA.GANAPATHI FOR ISKB_3990 ON 16-NOV-2010  --ENDED */

          }
	 } 
      }
      

      
      if ( strncmp(chr_p_msgno,"551",3)== 0)
      {
         if ( (strcmp(chr_p_msgno,"551N02") == 0) || (strcmp(chr_p_msgno,"551R03") == 0) || (strcmp(chr_p_msgno,"551C05") == 0) )
            {
               if(!strcmp(p_SEL_VAL[16].link_tag,"Y"))
                  {
                     h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[17].NUM_VAL;
                  }
            }
         else if ( (strcmp(chr_p_msgno,"551N01") == 0) || (strcmp(chr_p_msgno,"551R01") == 0) )
            {
                
					if( l_EARNINGS_RATE > 0 )
						{
                     h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[18].NUM_VAL;
                  }
            }
         else
            {
               if(!strcmp(p_SEL_VAL[11].link_tag,"Y"))
                  {
                     h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[12].NUM_VAL;
                  }
            }
      }
      if ( (strcmp(chr_p_msgno,"564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0 ))
      {
         if(!strcmp(p_SEL_VAL[23].link_tag,"Y"))
          {
            h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[24].NUM_VAL;
          }
      }
	   if ( strncmp(chr_p_msgno,"556",3) == 0) 
		{
					l_earnings = atof(p_SEL_VAL[13].link_tag);
               l_EARNINGS_RATE = atof(p_SEL_VAL[14].link_tag);
         if ( (strcmp(chr_p_msgno,"556N01") == 0) || (strcmp(chr_p_msgno,"556C01") == 0) || (strcmp(chr_p_msgno,"556R01") == 0) )
         {
               if( l_EARNINGS_RATE > 0 )
             
            {
               h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[12].NUM_VAL;
            }
         }
		}

	   if ( strncmp(chr_p_msgno,"554",3) == 0) 
		{
      #ifdef EMU_PROCESSING
	   	if (( strcmp(chr_p_msgno,"554N01") == 0) && (!strcmp(p_SEL_VAL[20].link_tag,"Y")))
			{
					h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[21].NUM_VAL;
			}	
	   	else if (( strcmp(chr_p_msgno,"554N02") == 0) && (!strcmp(p_SEL_VAL[16].link_tag,"Y")))
			{
					h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[17].NUM_VAL;
			}	
	   	else if (!strcmp(p_SEL_VAL[13].link_tag,"Y"))
			{
					h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[14].NUM_VAL;
			}	
      #else
			
				if ( (strcmp(chr_p_msgno,"554N02")==0) || (strcmp(chr_p_msgno,"554C02")==0) || (strcmp(chr_p_msgno,"554R02")==0) )
         {
               l_earnings = p_SEL_VAL[16].NUM_VAL;
               /* l_EARNINGS_RATE = p_SEL_VAL[17].NUM_VAL; 23012007 Changes for Trad of BI*/
		printf("\n NIkhil S l_EARNINGS_RATE :%lf:",l_EARNINGS_RATE);
		fflush(stdout);
		l_EARNINGS_RATE = atof(p_SEL_VAL[17].link_tag);
		printf("\n NIkhil S l_EARNINGS_RATE :%lf:",l_EARNINGS_RATE);
		fflush(stdout);
		printf("\n NIkhil S h_total_safek_93B 1 :%lf:",h_total_safek_93B);
		fflush(stdout);
               if( l_EARNINGS_RATE > 0 )
               {
                  h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[15].NUM_VAL;
               }
		printf("\n NIkhil S h_total_safek_93B 2 :%lf:",h_total_safek_93B);
		fflush(stdout);
         }
         else if (!strcmp(p_SEL_VAL[14].link_tag,"Y"))
         {
               h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[15].NUM_VAL;
         }
      #endif
		}

		
      if ( (strncmp(chr_p_msgno,"560",3)==0) && (!strcmp(p_SEL_VAL[11].link_tag,"FMT")) )
		{
			h_total_safek_93B = h_total_safek_93B * p_SEL_VAL[12].NUM_VAL;
		}
		
		if (h_total_safek_93B < 0)
      {
               fprintf(p_Data_File,"%d%s\n",*p_rownum,"SIGN_POS_93B=N");
      }
      else
      {
              fprintf(p_Data_File,"%d%s\n",*p_rownum,"SIGN_POS_93B=");
      }
		

      if(l_cond_ca_7dec!=0)
      {
         memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
         sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
         fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"POS_93B=",h_total_safek_93B);
         printf("ENTERED SEVEN DECLOOP h_total_safek_93B is %.7lf\n", h_total_safek_93B);
		 fflush(stdout);
      }
      else
	  {
			/*Added by Anjaneyulu on 21/09/2015 for ISKB_1621 POS_93B=0- Starts*/
	  if((strcmp(chr_p_msgno,"550C01") == 0) || 
	  (strcmp(chr_p_msgno,"551C05") == 0) || 
	  (strcmp(chr_p_msgno,"552C02") == 0) || 
	  (strcmp(chr_p_msgno,"554C02") == 0) ||
	  (strcmp(chr_p_msgno,"556C01") == 0)
	  )
	  {
		printf("\n if h_total_safek_93B=0 then:\n");
		
		EXEC SQL SELECT NVL(ELIG_ENTITL_POS,0) INTO :h_eligentitl_pos FROM CAENTITLEMENT WHERE CORP_ID = :chr_l_ca_id 
		AND CLIENT = :l_account_93B;
		
	IS_ANY_ORA_ERROR
	

		Alert("prev_elig_hold is :|%lf|",h_eligentitl_pos);
		
		if(APL_DOUBLE_EQUAL(h_eligentitl_pos,0))
		{
				Alert("\nAnjaneyulu: in if part\n");
				fprintf(p_Data_File,"%d%s\n",*p_rownum,"HOLD_FLG=Y");
		}
		else
		{
				Alert("\nAnjaneyulu: in else part\n");
				fprintf(p_Data_File,"%d%s\n",*p_rownum,"HOLD_FLG=N");
		}
		 printf("\n POS_93B=%lf\n",h_total_safek_93B);
                        fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"POS_93B=",h_total_safek_93B);
                         printf("\n 111111-POS_93B=%lf\n",h_total_safek_93B);		
	  }
	  /*Added by Anjaneyulu on 21/09/2015 for ISKB_1621 POS_93B=0 - Ends*/
		else 
		{	
			printf("\n POS_93B=%lf\n",h_total_safek_93B);
  			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"POS_93B=",h_total_safek_93B);
			 printf("\n 111111-POS_93B=%lf\n",h_total_safek_93B);
		}
	  }
	  
	}
	




if((p_rec_no == 1) &&
   ((( strncmp(chr_p_msgno,"551",3) == 0)&&( strcmp(chr_p_msgno,"551R02") != 0))||
    (( strncmp(chr_p_msgno,"552",3) == 0)&&( strcmp(chr_p_msgno,"552R02") != 0))||
    ( strncmp(chr_p_msgno,"554",3) == 0)||
    ( strncmp(chr_p_msgno,"560",3) == 0)||
    ( strncmp(chr_p_msgno,"563",3) == 0)||
    ( strncmp(chr_p_msgno,"555",3) == 0)||
    ( strncmp(chr_p_msgno,"550",3) == 0)||
    ( strncmp(chr_p_msgno,"562",3) == 0)||
    ( strncmp(chr_p_msgno,"556",3) == 0)||
	 ( strcmp(chr_p_msgno,"564N91") == 0)||
	 ( strcmp(chr_p_msgno,"564R91") == 0) 
   ))
{



   


   if  ( (strncmp(chr_p_msgno,"551",3)==0) || (strcmp(chr_p_msgno,"564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0) )
   {
      strcpy(chr_l_client_568,p_SEL_VAL[2].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[8].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[4].link_tag);
      if (  (strcmp(chr_p_msgno,"551N01")==0) || (strcmp(chr_p_msgno,"551N02")==0) || (strcmp(chr_p_msgno,"551R01")==0) || (strcmp(chr_p_msgno,"551C05")==0) || (strcmp(chr_p_msgno,"551R03")==0) || (strcmp(chr_p_msgno,"564N91") == 0) || (strcmp(chr_p_msgno,"564R91") == 0))
      {
         strcpy(chr_l_ca_id_568,p_SEL_VAL[14].link_tag);
      }
      else
      {
         strcpy(chr_l_ca_id_568,p_SEL_VAL[10].link_tag);
      }
   }

   else if  (strncmp(chr_p_msgno,"552",3)==0)
   {
      strcpy(chr_l_client_568,p_SEL_VAL[2].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[8].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[4].link_tag);
      if (  (strcmp(chr_p_msgno,"552N01")!=0) && (strcmp(chr_p_msgno,"552C01")!=0) && (strcmp(chr_p_msgno,"552R01")!=0) )
      {
         strcpy(chr_l_ca_id_568,p_SEL_VAL[15].link_tag);
      }
      else
      {
         strcpy(chr_l_ca_id_568,p_SEL_VAL[16].link_tag);
      }
   }

   else if  (strncmp(chr_p_msgno,"554",3)==0)
   {
      strcpy(chr_l_client_568,p_SEL_VAL[2].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[5].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[1].link_tag);
      strcpy(chr_l_ca_id_568,p_SEL_VAL[0].link_tag);
   }

   else if  (strncmp(chr_p_msgno,"560",3)==0)
   {
      strcpy(chr_l_client_568,p_SEL_VAL[0].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[4].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[4].link_tag);
      strcpy(chr_l_ca_id_568,p_SEL_VAL[30].link_tag);
   }
   
	else if  (strcmp(chr_p_msgno,"563N01")==0)
   {
      strcpy(chr_l_eventid_568,h_tag20_caid);
      strcpy(chr_l_refno_568,p_STAT_VAL[2].link_tag);
      #ifdef EMU_PROCESSING
         strcpy(chr_l_client_568,p_SEL_VAL[12].link_tag);
         strcpy(chr_l_instrcode_568,p_SEL_VAL[16].link_tag);
      #else
         strcpy(chr_l_client_568,p_SEL_VAL[10].link_tag);
         strcpy(chr_l_instrcode_568,p_SEL_VAL[11].link_tag);
      #endif
      strcpy(chr_l_country_568,p_STAT_VAL[4].link_tag);
		strcpy(chr_l_ce_typ_568,"RT");
   }

   else if  (strcmp(chr_p_msgno,"563N02")==0)
   {
      strcpy(chr_l_eventid_568,h_tag20_caid);
      strcpy(chr_l_refno_568,p_STAT_VAL[4].link_tag);
      strcpy(chr_l_client_568,p_SEL_VAL[6].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[13].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[6].link_tag);
		printf("for 563N02 PRINTING p_SEL_VAL[3].link_tag :%s:\n",p_SEL_VAL[3].link_tag);
		fflush(stdout);
		strcpy(chr_l_ce_typ_568,"RT");
		printf("for 563N02 PRINTING chr_l_ce_typ_568 :%s:\n",chr_l_ce_typ_568);
		fflush(stdout);
   }

   else if  ((strcmp(chr_p_msgno,"563N03")==0) || (strcmp(chr_p_msgno,"566R03")==0))
   {
      strcpy(chr_l_client_568,p_SEL_VAL[7].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[4].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[3].link_tag);
      strcpy(chr_l_ca_id_568,p_SEL_VAL[9].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
   }
   else if (strncmp(chr_p_msgno,"555",3)==0) 
   {

      strcpy(chr_l_client_568,p_SEL_VAL[9].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[4].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[5].link_tag);
      strcpy(chr_l_ca_id_568,p_SEL_VAL[10].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
   }
   else if (strncmp(chr_p_msgno,"556",3)==0)
   {
      strcpy(chr_l_client_568,p_SEL_VAL[4].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[7].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[6].link_tag);
      strcpy(chr_l_ca_id_568,p_SEL_VAL[10].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
   }
   else if (strncmp(chr_p_msgno,"550",3)==0)
   {
      strcpy(chr_l_client_568,p_SEL_VAL[2].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[4].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[5].link_tag);
      strcpy(chr_l_ca_id_568,p_SEL_VAL[14].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
   }
   else if (strncmp(chr_p_msgno,"562",3)==0)
   {
      strcpy(chr_l_client_568,p_SEL_VAL[7].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[16].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[5].link_tag);
      strcpy(chr_l_ca_id_568,p_SEL_VAL[4].link_tag);
      strcpy(chr_l_ce_typ_568,p_SEL_VAL[3].link_tag);
   }
   else if(strcmp(chr_p_msgno,"563N05")==0)
   {
      strcpy(chr_l_eventid_568,p_STAT_VAL[5].link_tag);
      strcpy(chr_l_client_568,p_SEL_VAL[1].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[0].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[4].link_tag);
      strcpy(chr_l_ca_id_568,chr_l_caid_563);
      strcpy(chr_l_ce_typ_568,"RT");
   }
   else if(strcmp(chr_p_msgno,"563N04")==0)
   {
      strcpy(chr_l_eventid_568,p_STAT_VAL[6].link_tag);
      strcpy(chr_l_client_568,p_SEL_VAL[1].link_tag);
      strcpy(chr_l_instrcode_568,p_SEL_VAL[5].link_tag);
      strcpy(chr_l_country_568,p_STAT_VAL[4].link_tag);
      strcpy(chr_l_ca_id_568,chr_l_caid_563);
      strcpy(chr_l_ce_typ_568,"RT");
   }


	
		
	
	if (strlen(chr_l_unique_ref_num)==0)
	{
		strcpy(chr_l_curr_msgrefno_568,l_camesglink_struct_h.h_swift_msgrefno);
	}
	else
	{
		strcpy(chr_l_curr_msgrefno_568,chr_l_unique_ref_num);  
	}

   strncpy(chr_l_prev_msgno_568,l_camesglink_struct_h.h_swift_msg_no,3);

	
   
    
if((strcmp(chr_l_ce_typ_568,"OP")==0) || (strcmp(chr_p_msgno,"563N03")==0) || (strcmp(chr_p_msgno,"566R03")==0) || (strncmp(chr_p_msgno,"555",3)==0))
   {
      int_l_no_of_lines_shown = 54;
   }
   else if(strcmp(chr_l_ce_typ_568,"SM")==0)
   {
      if(strncmp(chr_p_msgno,"562",3)==0) /*Vaibhav 15-Mar-2007*/
	   {
		printf("\n This is SM Event and Reminder Message.");
		fflush(stdout);
		  int_l_no_of_lines_shown = 57;
       }
	   else
	   {
	      printf("\n This is SM Event and Intimation Message.");	
		  fflush(stdout);
	      int_l_no_of_lines_shown = 0; 
	   }
   }
   else if(((strcmp(chr_l_ce_typ_568,"RT") == 0) && (strncmp(chr_p_msgno,"550",3)==0)) || (strncmp(chr_p_msgno,"562",3)==0))  //AIX - Warnings Removal
   {
      int_l_no_of_lines_shown = 56; 
   }
   else 
   {
      int_l_no_of_lines_shown = 57;
   }


   strcpy(chr_l_prepdate_new_568,chr_h_prepdate_new);

   if (strcmp(chr_p_msgno,"563N01")==0)
   {
      
   	chr_l_entbasis_568=APL_NULL_CHAR;
   }
   else if (strcmp(chr_p_msgno,"563N02")==0)
   {
      
   	chr_l_entbasis_568=APL_NULL_CHAR;
   }
   else
   {
      strcpy(chr_l_refno_568,APL_NULL_STRING);
   	chr_l_entbasis_568=h_entitl_base;
   }
  


           /*Isolve:362*/	
   if ( !((strcmp(chr_p_msgno,"563N01")==0) || (strcmp(chr_p_msgno,"563N02")==0)))
	{
		
	   if (  (strcmp(chr_p_msgno,"551N01")==0)
	      || (strcmp(chr_p_msgno,"551R01")==0)
	      || (strcmp(chr_p_msgno,"552N01")==0)
	      || (strcmp(chr_p_msgno,"552R01")==0)
	      || (strcmp(chr_p_msgno,"560N01")==0)
              || (strcmp(chr_p_msgno,"560R01")==0)
                        || (strcmp(chr_p_msgno,"564N91")==0)
			|| (strcmp(chr_p_msgno,"564R91")==0)
	      )
	   {
			
	      EXEC SQL select decode(c.INSTR_TYPE,'BON',decode(int_b.CLN_FMT_RPTIND,'Y','FMT',c.INSTR_TYPE),c.INSTR_TYPE),
	                   c.INSTR_ISIN,substr(replace(replace(c.instr_name,chr(13),NULL),chr(10),NULL),1,35)
	            into   :chr_l_ftypeofinstr_568,:chr_l_isin_568:i_instr_isin,:chr_l_instrdesc_568
	            from   MT_INSTRUMENT c, MT_CLIENT int_b
	            where  int_b.cln_code=:chr_l_client_568 and
	                   c.instr_code=:chr_l_instrcode_568; 
				
              printf("\n 1.VK For Instrument|%s| ISIN = |%s|",chr_l_instrcode_568,chr_l_isin_568); 
			  fflush(stdout);
	      IS_ANY_ORA_ERROR
	   }
   	else if((strcmp(chr_p_msgno,"563N04")==0) || (strcmp(chr_p_msgno,"563N05")==0))
   	{
         EXEC SQL select decode(c.INSTR_TYPE,'BON',decode(int_b.CLN_FMT_RPTIND,'Y','FMT',c.INSTR_TYPE),c.INSTR_TYPE),
                      c.INSTR_ISIN,substr(replace(replace(c.instr_name,chr(13),NULL),chr(10),NULL),1,35)
               into   :chr_l_ftypeofinstr_568,:chr_l_isin_568:i_instr_isin,:chr_l_instrdesc_568
               from   MT_INSTRUMENT c, MT_CLIENT int_b
               where  int_b.cln_code=:chr_l_client_568 and
                      c.instr_code=:chr_l_instrcode_568;
              printf("\n 2.VK For Instrument|%s| ISIN = |%s|",chr_l_instrcode_568,chr_l_isin_568);
			  fflush(stdout);
         IS_ANY_ORA_ERROR

         strcpy(chr_l_fent_pos_568,APL_NULL_STRING);
   	}
	   else
	   {
         if ((strcmp(chr_l_ce_typ_568,"BI")==0) || (strcmp(chr_l_ce_typ_568,"RD")==0))
         {
             EXEC SQL select nvl(int_a.EARNINGS,0),nvl(int_a.EARNINGS_RATE,0),c.INSTR_ISIN,
                      substr(replace(replace(c.instr_name,chr(13),NULL),chr(10),NULL),1,35),
                      d.ELIG_ENTITL_POS
               INTO :l_earnings_568,
						  :l_earnings_rt_568,
			 			  :chr_l_isin_568:i_instr_isin,
						  :chr_l_instrdesc_568,
						  :chr_l_fent_pos_568
               from   CAEVENT int_a, MT_INSTRUMENT c, MT_CLIENT int_b, CAENTITLEMENT d
               where  int_a.corp_id=:chr_l_ca_id_568 and
                      int_a.corp_id=d.corp_id and
                      int_b.cln_code=:chr_l_client_568 and
                      c.instr_code=:chr_l_instrcode_568 and
                      int_b.cln_code=d.client;
            IS_ANY_ORA_ERROR

            printf("income is %lf\n",l_earnings_568);
			fflush(stdout);
            printf("income_rt is %lf\n",l_earnings_rt_568);
			fflush(stdout);
            if(l_earnings_568 > 0)
            {
               strcpy(chr_l_ftypeofinstr_568,"BON");
            }
            else if (l_earnings_rt_568 > 0)
            {
               strcpy(chr_l_ftypeofinstr_568,"FMT");
            }
            /* VaibhavK I-Solve:317 KOTAK-UAT 26/09/2007 START*/ 
            EXEC SQL select decode(c.INSTR_TYPE,'BON',decode(int_b.CLN_FMT_RPTIND,'Y','FMT',c.INSTR_TYPE),c.INSTR_TYPE),
                           c.INSTR_ISIN,substr(replace(replace(c.instr_name,chr(13),NULL),chr(10),NULL),1,35)
                    into   :chr_l_ftypeofinstr_568,:chr_l_isin_568:i_instr_isin,:chr_l_instrdesc_568
                    from   MT_INSTRUMENT c, MT_CLIENT int_b
                    where  int_b.cln_code=:chr_l_client_568 and
                           c.instr_code=:chr_l_instrcode_568;

                printf("\n VK CA_Event is [%s] For Instrument|%s| ISIN = |%s|",chr_l_ce_typ_568,chr_l_instrcode_568,chr_l_isin_568);
				fflush(stdout);
                 IS_ANY_ORA_ERROR
            /* VaibhavK I-Solve:317 KOTAK-UAT 26/09/2007 END*/
         }
         else
         {
			
	      EXEC SQL select decode(c.INSTR_TYPE,'BON',decode(int_b.CLN_FMT_RPTIND,'Y','FMT',c.INSTR_TYPE),c.INSTR_TYPE),
	                   c.INSTR_ISIN,substr(replace(replace(c.instr_name,chr(13),NULL),chr(10),NULL),1,35),
	                   decode(c.INSTR_TYPE,'BON',decode(int_b.CLN_FMT_RPTIND,'Y',to_char((d.ELIG_ENTITL_POS)*c.NOMINAL_VALUE),
	                   to_char((d.ELIG_ENTITL_POS))),to_char((d.ELIG_ENTITL_POS)))
	            into   :chr_l_ftypeofinstr_568,:chr_l_isin_568:i_instr_isin,:chr_l_instrdesc_568,:chr_l_fent_pos_568
	            from   MT_INSTRUMENT c, MT_CLIENT int_b, CAENTITLEMENT d
	            where  d.corp_id=:chr_l_ca_id_568 and
	                   int_b.cln_code=:chr_l_client_568 and
	                   c.instr_code=:chr_l_instrcode_568 and  
					       int_b.cln_code=d.client;			
                     printf("\n 3.VK CA_EVENT=|%s| For Instrument|%s| ISIN = |%s|",chr_l_ce_typ_568,chr_l_instrcode_568,chr_l_isin_568);
					 fflush(stdout);

	      IS_ANY_ORA_ERROR

              if(strcmp(chr_l_ce_typ_568,"BB")==0 || strcmp(chr_l_ce_typ_568,"SM")==0)  /*VaibhavK KOTAK-UAT I-Solve:317 START*/
              {
                EXEC SQL select decode(c.INSTR_TYPE,'BON',decode(int_b.CLN_FMT_RPTIND,'Y','FMT',c.INSTR_TYPE),c.INSTR_TYPE),
                           c.INSTR_ISIN,substr(replace(replace(c.instr_name,chr(13),NULL),chr(10),NULL),1,35)
                    into   :chr_l_ftypeofinstr_568,:chr_l_isin_568:i_instr_isin,:chr_l_instrdesc_568
                    from   MT_INSTRUMENT c, MT_CLIENT int_b
                    where  int_b.cln_code=:chr_l_client_568 and
                           c.instr_code=:chr_l_instrcode_568;

                printf("\n 3A.VK For Instrument|%s| ISIN = |%s|",chr_l_instrcode_568,chr_l_isin_568);  
				fflush(stdout);
                 IS_ANY_ORA_ERROR
              }  /* VaibhavK I-Solve:317 KOTAK-UAT END*/

	   }
	   }
	}
	else 
	{
		
	      EXEC SQL select decode(c.INSTR_TYPE,'BON',decode(int_b.CLN_FMT_RPTIND,'Y','FMT',c.INSTR_TYPE),c.INSTR_TYPE),
	                   c.INSTR_ISIN,substr(replace(replace(c.instr_name,chr(13),NULL),chr(10),NULL),1,35)
	            into   :chr_l_ftypeofinstr_568,:chr_l_isin_568:i_instr_isin,:chr_l_instrdesc_568
	            from   MT_INSTRUMENT c, MT_CLIENT int_b
	            where  int_b.cln_code=:chr_l_client_568 and
	                   c.instr_code=:chr_l_instrcode_568; 
                printf("\n 4.VK For Instrument|%s| ISIN = |%s|",chr_l_instrcode_568,chr_l_isin_568); 
				fflush(stdout);
	      IS_ANY_ORA_ERROR

		if(strcmp(chr_p_msgno,"563N01")==0)
		{
      	#ifdef EMU_PROCESSING
      		strcpy(chr_l_fent_pos_568,p_SEL_VAL[17].link_tag);
      	#else
      		strcpy(chr_l_fent_pos_568,p_SEL_VAL[12].link_tag);
      	#endif
		}
		else if(strcmp(chr_p_msgno,"563N02")==0)
		{
      	strcpy(chr_l_fent_pos_568,p_SEL_VAL[12].link_tag);
		}
	}

   if((strcmp(chr_l_fent_pos_568,"")==0)||(strcmp(chr_l_fent_pos_568," ")==0))
      strcpy(chr_l_fent_pos_568,"0");
   if (strcmp(chr_p_msgno,"560N01")==0 || strcmp(chr_p_msgno,"560R01")==0) /*Isolve:362*/
	{
      strcpy(chr_l_fent_pos_568,chr_h_fent_pos);
   }		
	
      if(l_cond_ca_7dec!=0)
      {
         memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
         sprintf(chr_h_seven_dec_str,"%s%d%s","%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
         sprintf(p_temp_pos_93B,chr_h_seven_dec_str,h_total_safek_93B);
      }
      else
			sprintf(p_temp_pos_93B,"%lf",h_total_safek_93B);


   
      chr_l_txn_type=DEALTYPE_CORP;
      memset(chr_l_unique_ref_num,APL_UNIQUE_REF_NUM_LEN,APL_NULL_CHAR);
      if (MS_Rtv_RefNo_A(chr_l_txn_type,chr_l_unique_ref_num,l_debug_info_ptr) == APL_FAILURE)
         {
             CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, NULL);
             APL_GOBACK_FAIL;
         }
		
	/*NIkhil Adding Inst Name in Tail Msg of Rmdr msg of SM event*/
	if(strcmp(chr_p_msgno,"562N01")==0)
	{
					EXEC SQL SELECT 
					substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35)
					into :chr_l_instrdesc_568
               from   MT_INSTRUMENT
               where  instr_code=:chr_l_instrcode_568;
					
            IS_ANY_ORA_ERROR
		printf("\n\n Om chr_l_instrdesc_568 -n '%s'",chr_l_instrdesc_568);
			fflush(stdout);
		printf("\n\n Om chr_l_instrcode_568 -n '%s'",chr_l_instrcode_568);
		fflush(stdout);
		
	}
   l_ms_dynamic_val_a = realloc(l_ms_dynamic_val_a,sizeof(MS_STATIC_VAL)*27); 
   strcpy(l_ms_dynamic_val_a[0].link_val,"EVENTID");
   strcpy(l_ms_dynamic_val_a[0].link_tag,chr_l_eventid_568);
   strcpy(l_ms_dynamic_val_a[1].link_val,"CA_EVENT");
   strcpy(l_ms_dynamic_val_a[1].link_tag,chr_l_ce_typ_568);
   strcpy(l_ms_dynamic_val_a[2].link_val,"CLIENT");
   strcpy(l_ms_dynamic_val_a[2].link_tag,chr_l_client_568);
   strcpy(l_ms_dynamic_val_a[3].link_val,"NATION");
   strcpy(l_ms_dynamic_val_a[3].link_tag,chr_l_country_568);
   strcpy(l_ms_dynamic_val_a[4].link_val,"INSTR_CODE");
   strcpy(l_ms_dynamic_val_a[4].link_tag,chr_l_instrcode_568);
   strcpy(l_ms_dynamic_val_a[5].link_val,"CORP_ID");
   strcpy(l_ms_dynamic_val_a[5].link_tag,chr_l_ca_id_568);
   strcpy(l_ms_dynamic_val_a[6].link_val,"CURRMSGREFNO");
	strcpy(l_ms_dynamic_val_a[6].link_tag,chr_l_unique_ref_num);
   
   strcpy(l_ms_dynamic_val_a[7].link_val,"PREVMSGREFNO");
   
   strcpy(l_ms_dynamic_val_a[8].link_val,"PREVMSGNO");
   strcpy(l_ms_dynamic_val_a[8].link_tag,chr_l_prev_msgno_568);
   strcpy(l_ms_dynamic_val_a[9].link_val,"FREVETYP");
   strcpy(l_ms_dynamic_val_a[9].link_tag,chr_l_frevetyp_568);
   strcpy(l_ms_dynamic_val_a[10].link_val,"PREPDATE");
   strcpy(l_ms_dynamic_val_a[10].link_tag,chr_l_prepdate_new_568);
   strcpy(l_ms_dynamic_val_a[11].link_val,"IDENTIY_NO");
   strcpy(l_ms_dynamic_val_a[11].link_tag,chr_l_refno_568);
   strcpy(l_ms_dynamic_val_a[12].link_val,"ENTBASIS");
   l_ms_dynamic_val_a[12].link_tag[0]=chr_l_entbasis_568;
   l_ms_dynamic_val_a[12].link_tag[1]=APL_NULL_CHAR;
   strcpy(l_ms_dynamic_val_a[13].link_val,"FTYPEOFINSTR");
   strcpy(l_ms_dynamic_val_a[13].link_tag,chr_l_ftypeofinstr_568);
   strcpy(l_ms_dynamic_val_a[14].link_val,"INSTR_ISIN");
   strcpy(l_ms_dynamic_val_a[14].link_tag,chr_l_isin_568);
   strcpy(l_ms_dynamic_val_a[15].link_val,"INSTR_NAME");
   strcpy(l_ms_dynamic_val_a[15].link_tag,chr_l_instrdesc_568);
   strcpy(l_ms_dynamic_val_a[16].link_val,"FENT_POS");
   strcpy(l_ms_dynamic_val_a[16].link_tag,chr_l_fent_pos_568);
   strcpy(l_ms_dynamic_val_a[17].link_val,"PROC_INIT");
   strcpy(l_ms_dynamic_val_a[17].link_tag,p_STAT_VAL[0].link_tag);
   strcpy(l_ms_dynamic_val_a[18].link_val,"EVENT_IND");
	if(strcmp(chr_p_msgno,"560N01")==0 || strcmp(chr_p_msgno,"560R01")==0) /*Isolve:362*/
   strcpy(l_ms_dynamic_val_a[18].link_tag,p_SEL_VAL[31].link_tag);
	else if(strcmp(chr_p_msgno,"562N01")==0)/*Nikhil added for CAEV in SM RMDR msg*/
	 strcpy(l_ms_dynamic_val_a[18].link_tag,p_SEL_VAL[24].link_tag);
	else
   strcpy(l_ms_dynamic_val_a[18].link_tag,"");
   strcpy(l_ms_dynamic_val_a[19].link_val,"POS_93B");
	if((strcmp(chr_p_msgno,"550C01")==0) || (strcmp(chr_p_msgno,"551C05")==0) || (strcmp(chr_p_msgno,"552C02")==0) || (strcmp(chr_p_msgno,"554C02")==0) || (strcmp(chr_p_msgno,"556C01")==0) || (strcmp(chr_p_msgno,"550R01")==0) || (strcmp(chr_p_msgno,"551R03")==0) || (strcmp(chr_p_msgno,"552R03")==0) || (strcmp(chr_p_msgno,"554R02")==0) || (strcmp(chr_p_msgno,"556R01")==0) || (strcmp(chr_p_msgno,"550N01")==0))
   strcpy(l_ms_dynamic_val_a[19].link_tag,p_temp_pos_93B);
	else
   strcpy(l_ms_dynamic_val_a[19].link_tag,"0");
	
	memset(chr_l_568_ind,NULL,5);
   if (APL_FAILURE == MS_Rtv_568Ind(chr_l_564_prev_seme,chr_p_msgno,&chr_l_568_ind,l_debug_info_ptr))
   {
      APL_GOBACK_FAIL
   }
   strcpy(l_ms_dynamic_val_a[20].link_val,"23G_IND");
   strcpy(l_ms_dynamic_val_a[20].link_tag,chr_l_568_ind);

   
   if(strcmp(chr_p_msgno,"560N01")==0 || strcmp(chr_p_msgno,"560R01")==0) /*Isolve:362*/
   {
    strcpy(l_ms_dynamic_val_a[21].link_val,"WEBB_ADD1");
    strcpy(l_ms_dynamic_val_a[21].link_tag,p_SEL_VAL[33].link_tag);
    strcpy(l_ms_dynamic_val_a[22].link_val,"WEBB_ADD2");
    strcpy(l_ms_dynamic_val_a[22].link_tag,p_SEL_VAL[34].link_tag);
    strcpy(l_ms_dynamic_val_a[23].link_val,"WEBB_ADD3");
    strcpy(l_ms_dynamic_val_a[23].link_tag,p_SEL_VAL[35].link_tag);
    strcpy(l_ms_dynamic_val_a[24].link_val,"NOMINAL_VALUE");
    strcpy(l_ms_dynamic_val_a[24].link_tag,ltoa(p_SEL_VAL[12].NUM_VAL));
    strcpy(l_ms_dynamic_val_a[25].link_val,"");
    strcpy(l_ms_dynamic_val_a[25].link_tag,"");
   }
   else
   {
		EXEC SQL SELECT nominal_value INTO :l_nomval_568:i_nomval_568
					FROM MT_INSTRUMENT
					WHERE INSTR_CODE =:l_ms_dynamic_val_a[4].link_tag;
		IS_ANY_ORA_ERROR

		strcpy(l_ms_dynamic_val_a[21].link_val,"NOMINAL_VALUE");
		strcpy(l_ms_dynamic_val_a[21].link_tag,ltoa(l_nomval_568));
                strcpy(l_ms_dynamic_val_a[22].link_val,"PART_REDEM");
                strcpy(l_ms_dynamic_val_a[23].link_val,"OP_EVT_CLASS");
          
		printf("\n Part Redem Value = |%s|",p_SEL_VAL[25].link_tag);
		fflush(stdout);
		printf("\n Op Evt Class = |%s|",p_SEL_VAL[10].link_tag); 
		fflush(stdout);
		printf("\n Message Number = |%s|",chr_p_msgno);
		fflush(stdout);
	 if((strcmp(chr_p_msgno,"551N01")==0) || (strcmp(chr_p_msgno,"551R01")==0))
	 {
		 printf("\n ***Vaibhav im here in If Loop ");
		 fflush(stdout);
                 strcpy(l_ms_dynamic_val_a[22].link_tag,p_SEL_VAL[26].link_tag);
	         printf("\n PART_REDEM = |%s|\n",l_ms_dynamic_val_a[22].link_tag);
			 fflush(stdout);
                 strcpy(l_ms_dynamic_val_a[23].link_tag,p_SEL_VAL[27].link_tag);
	 }
         else if((strcmp(chr_p_msgno,"551N02")==0)    /*Vaibhav I-Solve:332 START*/ 
                || (strcmp(chr_p_msgno,"551C05")==0)
                || (strcmp(chr_p_msgno,"551R03")==0))
         {
               printf("\n Vaibhav Karnik <Op Evt Class> =|%s|\n",p_SEL_VAL[16].link_tag);
			   fflush(stdout);
               strcpy(l_ms_dynamic_val_a[23].link_tag,p_SEL_VAL[16].link_tag);
               
         }                                           /*Vaibhav I-Solve:332 END*/
	 else if(strcmp(chr_p_msgno,"551C01")==0)
	 {
		 printf("\n ***Vaibhav im here in Else-If Loop ");
		 fflush(stdout);
		 strcpy(l_ms_dynamic_val_a[22].link_tag,p_SEL_VAL[11].link_tag);
		 printf("\n PART_REDEM = |%s|\n",l_ms_dynamic_val_a[22].link_tag);
		 fflush(stdout);
		 strcpy(l_ms_dynamic_val_a[23].link_tag,p_SEL_VAL[12].link_tag);
	 }
	 else if((strcmp(chr_p_msgno,"556N01")==0) 
		 || (strcmp(chr_p_msgno,"556C01")==0) 
		 || (strcmp(chr_p_msgno,"556R01")==0)
		 || (strcmp(chr_p_msgno,"556N02")==0)
		 || (strcmp(chr_p_msgno,"556R02")==0))
	 {
		 strcpy(l_ms_dynamic_val_a[22].link_tag,p_SEL_VAL[16].link_tag);
		 strcpy(l_ms_dynamic_val_a[23].link_tag,p_SEL_VAL[17].link_tag);
	 }
         else if((strcmp(chr_p_msgno,"562N01")==0))  /* Vaibhavk KOTAK UAT FIX I-SolveID:159 START*/
         {
	   /* As we are using same CTL for the tails messages of event, entl and Reminder
	      we need to differentiate between the tail message of Reminder and others.
	      For Reminder tail we are always displaying BPUT whereas for others we are displaying 
	      Either PCAL or BPUT in CAEV tag. Hence added a flag REMIND_FLG which is "Y" only for 
	      Tail of Reminder of RD - PO event*/
	
		
             printf("\n Vaibhav $$$$$$$$$$$$$$$$$ Karnik \n");  
			 fflush(stdout);
             strcpy(l_ms_dynamic_val_a[22].link_tag,p_SEL_VAL[25].link_tag);
             strcpy(l_ms_dynamic_val_a[23].link_tag,p_SEL_VAL[10].link_tag);
             strcpy(l_ms_dynamic_val_a[24].link_val,"REMIND_FLG");
             if(strcmp(p_SEL_VAL[10].link_tag,"PO")==0)
             	strcpy(l_ms_dynamic_val_a[24].link_tag,"Y");
	     else
             	strcpy(l_ms_dynamic_val_a[24].link_tag,"N");
            Alert("\n 20000000000 Vaibs !!! Stat-Val 7 is [%s]: ",p_STAT_VAL[7].link_val);
            Alert("\n 20000000000 Stat-Val 7 value is [%s]: ",l_mt_message_sys_params_struct_h.swift_cd);
       
         }
if(strcmp(chr_p_msgno,"562N01")!=0)
{
	strcpy(l_ms_dynamic_val_a[24].link_val,"REMIND_FLG");
	strcpy(l_ms_dynamic_val_a[24].link_tag,"N");
}
    strcpy(l_ms_dynamic_val_a[25].link_val,"");
    strcpy(l_ms_dynamic_val_a[25].link_tag,"");  /* Vaibhavk KOTAK UAT FIX I-SolveID:159 END*/      
   }



   memset(chr_l_footnote_number,APL_NULL_CHAR,CA_INFOSEQ_LEN);

  	if ( !strcmp(chr_p_msgno, "563N02") )
	{
     	 strcpy(chr_l_footnote_number,p_SEL_VAL[11].link_tag );
  	}
  	else if(strcmp(chr_p_msgno,"562N02")!=0)
  	{
  	    strcpy(chr_l_footnote_number,p_SEL_VAL[6].link_tag );
  	}



   if(strcmp(chr_l_footnote_number," ") !=0 &&
      strcmp(chr_l_footnote_number,"") != 0)
   {

   if(strcmp(chr_l_ce_typ_568,"SM")!=0 )
	{
	if (l_pay_note_ind == 1)
	{
   exec sql select replace(replace(substr(INFO_1,1,1750),chr(13),' '),chr(10),' '),
                   replace(replace(substr(INFO_2,1,1750),chr(13),' '),chr(10),' '),
                   replace(replace(substr(INFO_3,1,1750),chr(13),' '),chr(10),' '),
                   replace(replace(substr(INFO_4,1,1750),chr(13),' '),chr(10),' ')
            into :chr_h_note_1_new:i_note_1_new, :chr_h_note_2_new:i_note_2_new,
                 :chr_h_note_3_new:i_note_3_new,:chr_h_note_4_new:i_note_4_new
            from CANOTE
            where INFO_SEQ = :chr_l_footnote_number;

   IS_ANY_ORA_ERROR


   if(sqlca.sqlcode == 1403)
   {
      strcpy(chr_h_note_1_new,APL_NULL_STRING);
      strcpy(chr_h_note_2_new,APL_NULL_STRING);
      strcpy(chr_h_note_3_new,APL_NULL_STRING);
      strcpy(chr_h_note_4_new,APL_NULL_STRING);
		
   }



  	if(i_note_1_new == -1)
   	strcpy(chr_h_note_1_new,APL_NULL_STRING);
   if(i_note_2_new == -1)
   	strcpy(chr_h_note_2_new,APL_NULL_STRING);
   if(i_note_3_new == -1)
   	strcpy(chr_h_note_3_new,APL_NULL_STRING);
   if(i_note_4_new == -1)
   	strcpy(chr_h_note_4_new,APL_NULL_STRING);




      
      strcpy(chr_h_note_new,chr_h_note_1_new);
      strcat(chr_h_note_new,chr_h_note_2_new);
      strcat(chr_h_note_new,chr_h_note_3_new);
      strcat(chr_h_note_new,chr_h_note_4_new);

	  printf("\n *****vaibhav chr_h_note_new = |%s|",chr_h_note_new);
	  fflush(stdout);
	  //printf("\n *****vaibhav Length[chr_h_note_new] = |%d|",strlen(chr_h_note_new)); CHanges done for AIX Migration
	  printf("\n *****vaibhav Length[chr_h_note_new] = |%d|",(int)strlen(chr_h_note_new));
		fflush(stdout);

      
   if(strlen(chr_h_note_new) > int_l_no_of_lines_shown*35)
   {

      int_line_no_new = 0;
      int_no_of_chars_new = int_l_no_of_lines_shown * 35;
	  printf("\n *****vaibhav int_no_of_chars_new =|%d|",int_no_of_chars_new);
	  fflush(stdout);
		if(l_called_send560 == 1)
		{
			printf("\n Siva 1 ------ p_next_seq_no_15022 is %ld p_msg_seq_no is %ld",*p_next_seq_no_15022,*p_msg_seq_no);
			fflush(stdout);

      	(*p_next_seq_no_15022)=(*p_msg_seq_no);

			printf("\n Siva 2 ------ p_next_seq_no_15022 is %ld p_msg_seq_no is %ld",*p_next_seq_no_15022,*p_msg_seq_no);
			fflush(stdout);

         int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
     		
			printf("\n entered in l_called_send560 == 1  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
			fflush(stdout);
		}
		else
		{
         int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
     		
			printf("\n Siva 3 ------ p_next_seq_no_15022 is %ld p_msg_seq_no is %ld",*p_next_seq_no_15022,*p_msg_seq_no);
			fflush(stdout);

      	(*p_next_seq_no_15022)=(*p_msg_seq_no);

			printf("\n Siva 4 ------ p_next_seq_no_15022 is %ld p_msg_seq_no is %ld",*p_next_seq_no_15022,*p_msg_seq_no);
			fflush(stdout);

     		int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
         
			printf("\n entered in l_called_send560 <> 1  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
			fflush(stdout);
		}
		fprintf(p_Data_File,"%d%s\n",*p_rownum,"IS_568_FOLLOW=Y");
		int_temp_count_568=0;
      while(strlen(chr_h_note_new) != 0)
      {
         memset(l_note_new[int_line_no_new].detail,APL_NULL_CHAR,36);
         strncpy(l_note_new[int_line_no_new].detail,chr_h_note_new+int_no_of_chars_new,35);
         strcat(l_note_new[int_line_no_new].detail,APL_NULL_STRING);
         int_no_of_chars_new = int_no_of_chars_new + 35;
         
       if(((strcmp(chr_l_ce_typ_568,"SM")==0) && (int_line_no_new ==169) ) || (int_line_no_new == 200)||(int_no_of_chars_new >= strlen(chr_h_note_new)))
         {
					memset(chr_l_cont_568,APL_NULL_CHAR,2);
					if(int_no_of_chars_new < strlen(chr_h_note_new))
						strcpy(chr_l_cont_568,"Y");
					else
						strcpy(chr_l_cont_568,"N");
					
					

					
			  		
			  		if (APL_FAILURE == MS_Rtv_SEME(chr_l_client_568, "568", chr_l_msgrefno_568_curr, l_debug_info_ptr))
			  		{
				 		APL_GOBACK_FAIL
			  		}
					if(int_temp_count_568==0)
					{
						printf("\n Im Here(When int_temp_count_568==0) !!!!!!!! Vaibhav");
						fflush(stdout);
						strcpy(l_ms_dynamic_val_a[6].link_tag,chr_l_unique_ref_num);   
						strcpy(l_ms_dynamic_val_a[7].link_tag,chr_l_curr_msgrefno_568);
				
						strcpy(l_ms_dynamic_val_a[8].link_tag,chr_l_lnk_msg);
					}
					else
					{
						printf("\n Im Here(When int_temp_count_568!=0) !!!!!!!! Vaibhav");
						fflush(stdout);
						strcpy(l_ms_dynamic_val_a[6].link_tag,chr_l_msgrefno_568_curr);
						strcpy(l_ms_dynamic_val_a[7].link_tag,chr_l_msgrefno_568_prev);
						strcpy(l_ms_dynamic_val_a[8].link_tag,"568");
					}
					printf("\n calling send568 with  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
					fflush(stdout);
         if(strcmp(chr_l_ce_typ_568,"NS")!=0 )     
			{
               if(MS_Proc_568Send(l_note_new,NULL,l_ms_dynamic_val_a,chr_l_cont_568,p_msg_seq_no,chr_p_msgno,l_debug_info_ptr,strlen(chr_h_note_new))==APL_FAILURE)
					{
						printf("Failure from MS_Proc_568Send \n");
						fflush(stdout);
						CO_ProcMonitor(APL_OUT_FILE,"Failure from MS_Proc_568Send",NULL, NULL);
						APL_GOBACK_FAIL;
					}
					else
					{
						CO_ProcMonitor(APL_OUT_FILE,"Success from MS_Proc_568Send",NULL, NULL);
						printf("\n return back from send568 with  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
						fflush(stdout);
					}
			}
					strcpy(chr_l_msgrefno_568_prev,chr_l_msgrefno_568_curr);
               int_line_no_new = 0;
               
					for(dbl_i=0;dbl_i<=200;dbl_i++)
                  memset(l_note_new[dbl_i].detail,APL_NULL_CHAR,36);
			int_temp_count_568++;
         }
         else
            int_line_no_new++;
         if(int_no_of_chars_new >= strlen(chr_h_note_new))
            break;
      }
      *p_msg_seq_no=l_msg_seq_no_568;
		printf("\n after setting p_msg_seq_no=l_msg_seq_no_568  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
		fflush(stdout);
   }
	} 

 }
 else
 {
  

   /*Nik CommEXEC SQL SELECT INFO_1,INFO_2,INFO_3,INFO_4 INTO
						 :chr_h_note_1_new:i_note_1_new, :chr_h_note_2_new:i_note_2_new,
						 :chr_h_note_3_new:i_note_3_new,:chr_h_note_4_new:i_note_4_new
   FROM CANOTE 
	WHERE INFO_SEQ = :chr_l_footnote_number;*/

   exec sql select replace(replace(INFO_1,chr(13),' '),chr(10),' '),
                   replace(replace(INFO_2,chr(13),' '),chr(10),' '),
                   replace(replace(INFO_3,chr(13),' '),chr(10),' '),
                   replace(replace(INFO_4,chr(13),' '),chr(10),' ')
            into :chr_h_note_1_new:i_note_1_new, :chr_h_note_2_new:i_note_2_new,
                 :chr_h_note_3_new:i_note_3_new,:chr_h_note_4_new:i_note_4_new
            from CANOTE
            where INFO_SEQ = :chr_l_footnote_number;


	IS_ANY_ORA_ERROR

   if(sqlca.sqlcode == 1403)
   {
      strcpy(chr_h_note_1_new,APL_NULL_STRING);
      strcpy(chr_h_note_2_new,APL_NULL_STRING);
      strcpy(chr_h_note_3_new,APL_NULL_STRING);
      strcpy(chr_h_note_4_new,APL_NULL_STRING);
		

   }

   if(i_note_1_new == -1)
      strcpy(chr_h_note_1_new,APL_NULL_STRING);
   if(i_note_2_new == -1)
      strcpy(chr_h_note_2_new,APL_NULL_STRING);
   if(i_note_3_new == -1)
      strcpy(chr_h_note_3_new,APL_NULL_STRING);
   if(i_note_4_new == -1)
      strcpy(chr_h_note_4_new,APL_NULL_STRING);

      strcpy(chr_h_note_new,chr_h_note_1_new);
      strcat(chr_h_note_new,chr_h_note_2_new);
      strcat(chr_h_note_new,chr_h_note_3_new);
      strcat(chr_h_note_new,chr_h_note_4_new);

		printf("\n ****Vaibhav NOTE:=|%s|",chr_h_note_new); 
		fflush(stdout);
		if (strlen(chr_h_note_new) > 0 )
		{
		
		int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
		printf("\n Siva 5 ------ p_next_seq_no_15022 is %ld p_msg_seq_no is %ld",*p_next_seq_no_15022,*p_msg_seq_no);
                fflush(stdout);
      (*p_next_seq_no_15022)=(*p_msg_seq_no);

		printf("\n Siva 6 ------ p_next_seq_no_15022 is %ld p_msg_seq_no is %ld",*p_next_seq_no_15022,*p_msg_seq_no);
                fflush(stdout);
      int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
	   fprintf(p_Data_File,"%d%s\n",*p_rownum,"IS_568_FOLLOW=Y");

/*	strcpy(chr_h_notefld,chr_h_note_new);
	int_l_ctr=0;
	chr_h_note_for_sm[0] = strtok_r(chr_h_notefld, "\n", &chr_str_last); 
  	
	while (chr_h_note_for_sm[++int_l_ctr] = strtok_r(NULL, "\n", &chr_str_last));
	Commented on 260207 for SM TAIL */
	printf("\n \n Nikhil SM TAIL ");
	fflush(stdout);
	
	l_tail_pos = 0;
	l_counter = 0;
	l_temp = 0;
	l_length = strlen(chr_h_note_new);

    printf("\n ******Vaibhav Length:=|%d|",l_length); 
	fflush(stdout);
	printf("\n ******Vaibhav Tail Pos:=|%d|",l_tail_pos);
	fflush(stdout);
	while(l_tail_pos < l_length)
	{
		chr_h_note_for_sm[l_counter]=(char *)calloc(36,sizeof(char));
		APL_MALLOC_FAIL(chr_h_note_for_sm[l_counter]);
		
		if((l_length - l_tail_pos) < 35)
		{
			printf("\n ******Vaibhav[In Side If Loop]");
			fflush(stdout);
			for(l_temp=0;l_length>l_tail_pos;l_temp++)
			{
				chr_h_note_for_sm[l_counter][l_temp]=chr_h_note_new[l_tail_pos++];
			}
				chr_h_note_for_sm[l_counter][l_temp]='\0';
		}
		else
		{
			printf("\n ******Vaibhav[In Side Else Loop]");
			fflush(stdout);
			strncpy(chr_h_note_for_sm[l_counter],chr_h_note_new+l_tail_pos,35);
			chr_h_note_for_sm[l_counter][36]='\0';
		}
	  l_counter++;
	  l_tail_pos = l_tail_pos +35;
	}

	chr_l_txn_type=DEALTYPE_CORP;   
	if (MS_Rtv_RefNo_A(chr_l_txn_type,chr_l_msgrefno_568_curr,l_debug_info_ptr) == APL_FAILURE)
	{
		CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, NULL);
		APL_GOBACK_FAIL;
	}

	strcpy(l_ms_dynamic_val_a[6].link_tag,chr_l_msgrefno_568_curr);
	strcpy(l_ms_dynamic_val_a[7].link_tag,chr_l_curr_msgrefno_568);
	strcpy(l_ms_dynamic_val_a[8].link_tag,chr_l_lnk_msg); 

		printf("\n calling send568 with  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
		fflush(stdout);

	
   	/*Commented on 260207 for SM tail 
		MS_Proc_568Send(l_note_new,&chr_h_note_for_sm[0],l_ms_dynamic_val_a,chr_l_cont_568,p_msg_seq_no,chr_p_msgno,l_debug_info_ptr);*/
   	if(MS_Proc_568Send(l_note_new,chr_h_note_for_sm,l_ms_dynamic_val_a,chr_l_cont_568,p_msg_seq_no,chr_p_msgno,l_debug_info_ptr,l_length) == APL_FAILURE )//AIX - Warnings Removal - & removed for chr_h_note
		{
			printf("Failure from MS_Proc_568Send \n");
			fflush(stdout);
			CO_ProcMonitor(APL_OUT_FILE,"Failure from MS_Proc_568Send",NULL, NULL);
			APL_GOBACK_FAIL;
		}
		else
		{
			CO_ProcMonitor(APL_OUT_FILE,"Success from MS_Proc_568Send",NULL, NULL);
			printf("\n return back from send568 with  swift_msg_seqno is :%ld: ",(*p_msg_seq_no));
			fflush(stdout);
		}

	printf("\n***Vaibhav 2nd Last Printf chr_l_msgrefno_568_prev:=|%s|",chr_l_msgrefno_568_prev);
	fflush(stdout);
	printf("\n***Vaibhav Last Printf chr_l_msgrefno_568_curr:=|%s|",chr_l_msgrefno_568_curr);
	fflush(stdout);
	strcpy(chr_l_msgrefno_568_prev,chr_l_msgrefno_568_curr);
	*p_msg_seq_no=l_msg_seq_no_568;
	}
 } 

 }



}




if((p_rec_no == 1) &&
   (( strcmp(chr_p_msgno, "551N01") == 0) ||
    ( strcmp(chr_p_msgno, "551R01") == 0) ||
    ( strcmp(chr_p_msgno, "552R01") == 0) ||
    ( strcmp(chr_p_msgno, "562N01") == 0) ||
    ( strcmp(chr_p_msgno, "550N01") == 0) ||
    ( strcmp(chr_p_msgno, "550R01") == 0) ||
    ( strcmp(chr_p_msgno, "550C01") == 0)
   ))
{
  if ( strcmp(p_SEL_VAL[3].link_val, "CA_EVENT") == 0 && strcmp(p_SEL_VAL[3].link_tag, "RT") == 0 )
  { 
    if( strcmp(chr_p_msgno, "551N01") == 0 || strcmp(chr_p_msgno, "551R01") == 0 )
    {
     if( strlen(p_SEL_VAL[22].link_tag) != 0 )
         int_l_response_dt = atol(p_SEL_VAL[22].link_tag);
     if( strlen(p_SEL_VAL[23].link_tag) != 0 )
         int_l_buyresp_dt  = atol(p_SEL_VAL[23].link_tag);
     if( strlen(p_SEL_VAL[24].link_tag) != 0 )
         int_l_sellresp_dt = atol(p_SEL_VAL[24].link_tag);
    }
    else if( strncmp(chr_p_msgno,"550",3) == 0 || strcmp(chr_p_msgno, "552R01") == 0 || strcmp(chr_p_msgno, "562N01") == 0) 
    {
     if( strlen(p_SEL_VAL[18].link_tag) != 0 )
         int_l_response_dt = atol(p_SEL_VAL[18].link_tag);
     if( strlen(p_SEL_VAL[19].link_tag) != 0 )
         int_l_buyresp_dt  = atol(p_SEL_VAL[19].link_tag);
     if( strlen(p_SEL_VAL[20].link_tag) != 0 )
         int_l_sellresp_dt = atol(p_SEL_VAL[20].link_tag);
    }
     
     if (int_l_response_dt != 0 && int_l_buyresp_dt != 0 && int_l_sellresp_dt != 0)
     {
         if( int_l_response_dt == int_l_buyresp_dt && int_l_buyresp_dt == int_l_sellresp_dt ) 
             strcpy(chr_l_seqd_val, "RESP");                                      
         else
             strcpy(chr_l_seqe_val, "ALL");    
     }
     else if (int_l_buyresp_dt == 0 && int_l_response_dt != 0 && int_l_sellresp_dt !=0) 
     {
         if( int_l_response_dt == int_l_sellresp_dt )
            strcpy(chr_l_seqd_val, "RESP");
         if( int_l_response_dt < int_l_sellresp_dt )
            strcpy(chr_l_seqe_val, "RESP");
         if( int_l_sellresp_dt < int_l_response_dt )
            strcpy(chr_l_seqe_val, "SELL");
    }
    else if (int_l_buyresp_dt != 0 && int_l_response_dt != 0 && int_l_sellresp_dt == 0 )
    {
         if( int_l_response_dt == int_l_buyresp_dt )
            strcpy(chr_l_seqd_val, "RESP");
         if( int_l_response_dt < int_l_buyresp_dt )
            strcpy(chr_l_seqe_val, "RESP");
         if( int_l_buyresp_dt < int_l_response_dt )
            strcpy(chr_l_seqe_val, "BUY");
    }
    else if (int_l_buyresp_dt ==0 && int_l_response_dt != 0 && int_l_sellresp_dt == 0 )
    {
         strcpy(chr_l_seqd_val, "RESP");
    }
    else
    {   
         strcpy(chr_l_seqd_val,"RESP");
    }
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SEQD_VAL=",chr_l_seqd_val);
    fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"SEQE_VAL=",chr_l_seqe_val);
  }
}




if((p_rec_no == 1) && ( strcmp(chr_p_msgno, "562N01") == 0)) 
	{
	  l_inst_hold = 0.0;
     i_inst_hold = 0;
	  l_uninst_hold = 0.0;
     l_d_old_stock_quantity = 0.0; 
     l_d_new_stock_quantity = 0.0; 


	  EXEC SQL SELECT nvl(INSTR_HOLD,0) into :l_inst_hold:i_inst_hold
				  FROM CAREPLY
				  WHERE corp_id = :chr_l_ca_id_568
				  AND   client = :p_SEL_VAL[7].link_tag ;

     IS_ANY_ORA_ERROR
		Alert("sqlca.sqlcode is |%d| \n",sqlca.sqlcode);

     if(sqlca.sqlcode == 1403)
		 l_inst_hold = 0.0;
/* Added Chirag ISKB 696 05-03-2008 */
	if(strcmp(p_SEL_VAL[3].link_tag,"RT") == 0)
	{
		EXEC SQL SELECT nvl(sum(APPLIED_QTY),0) into :l_apply_qty
			FROM CA_APPLICATION
			WHERE corp_id = :chr_l_ca_id_568
			AND   cln_code = :p_SEL_VAL[7].link_tag 
			AND STATUS = 'AA';
		IS_ANY_ORA_ERROR
                 /* Added by VaibhavK ISKB: 671 12March2008 */
                l_uninst_hold = atof(p_SEL_VAL[13].link_tag) - l_inst_hold + l_apply_qty;
Alert("UNINST_QTY = |%lf| \n Applied Qty = |%lf| \n Instructed Qty = |%lf|\n",l_uninst_hold,l_apply_qty,l_inst_hold);

		Alert("sqlca.sqlcode is |%d| \n",sqlca.sqlcode);

	}
/* Added Chirag ISKB 696 05-03-2008 */
	else
	{
           /* Added by VaibhavK ISKB: 671 12March2008 */ 
           l_uninst_hold = atof(p_SEL_VAL[13].link_tag) - l_inst_hold;
	}

      printf("\n here..........Vaibhav............l_cond_ca_7dec =|%d|",l_cond_ca_7dec);
	  fflush(stdout);
      printf("\n Instruct Qty = |%lf|",l_inst_hold);
	  fflush(stdout);
      if(l_cond_ca_7dec!=0)
      {
         memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
         sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
         fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"UNINST_QTY=",l_uninst_hold);
			fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"INST_QTY=",l_inst_hold); 
      }
      else
		{
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"UNINST_QTY=",l_uninst_hold);
			fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"INST_QTY=",l_inst_hold);   
		}	


     

     l_rev_ratio = 0.0;
	
		printf("\n * 15530 *** %s %s", p_SEL_VAL[3].link_tag, p_SEL_VAL[10].link_tag);
		fflush(stdout);
		/* PJ Need to skip rev ratio for these events */
  		if( strcmp(p_SEL_VAL[3].link_tag,"SM") == 0 
				|| strcmp(p_SEL_VAL[3].link_tag,"BB") == 0 
				|| (strcmp(p_SEL_VAL[3].link_tag,"RD") ==0 && strcmp(p_SEL_VAL[10].link_tag, "PO") ==0)
			)
		{
			l_rev_ratio = 1.0;
		}
		else
		{
          EXEC SQL SELECT NVL(OLD_STK_QTY,0),NVL(NEW_SAFEK_QTY,0), 100/decode(NEW_SAFEK_RT,NULL,1,'',1,' ',1,0,1,NEW_SAFEK_RT)
          INTO :l_d_old_stock_quantity, :l_d_new_stock_quantity, :l_rev_ratio
          FROM CAEVENT
          WHERE corp_id = :chr_l_ca_id_568;
		

     IS_ANY_ORA_ERROR

     if ( l_d_old_stock_quantity != 0 )
     {
        l_rev_ratio = l_d_old_stock_quantity/l_d_new_stock_quantity;
     }
		}

      
      printf("\n here..........Vaibhav2............l_cond_ca_7dec =|%d|",l_cond_ca_7dec);
	  fflush(stdout);
      if(l_cond_ca_7dec!=0)
      {
         memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
         sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
         EXEC SQL SELECT ROUND((:l_uninst_hold*:l_rev_ratio),:l_mt_core_sys_params_struct_h.qty_dec_len)
                  INTO :l_temp_uninbal FROM DUAL;
         IS_ANY_ORA_ERROR

         EXEC SQL SELECT ROUND((:l_inst_hold*:l_rev_ratio),:l_mt_core_sys_params_struct_h.qty_dec_len)
                  INTO :l_temp_inbal FROM DUAL;
         IS_ANY_ORA_ERROR

         printf("\nInBal =====|%lf|",l_temp_inbal);
		 fflush(stdout);
         printf("\n UnBal =====|%lf|",l_temp_uninbal);
		 fflush(stdout);

         if ( strcmp(p_SEL_VAL[22].link_tag, "FMT") != 0 )
         {
            fprintf( p_Data_File,chr_h_seven_dec_str,*p_rownum,"UNINBAL=", l_temp_uninbal );
            fprintf( p_Data_File,chr_h_seven_dec_str,*p_rownum,"INBAL=",l_temp_inbal );
         }
         else   
         {
            fprintf( p_Data_File,chr_h_seven_dec_str,*p_rownum,"UNINBAL=",l_temp_uninbal*p_SEL_VAL[21].NUM_VAL );
            fprintf( p_Data_File,chr_h_seven_dec_str,*p_rownum,"INBAL=",l_temp_inbal*p_SEL_VAL[21].NUM_VAL);
         }
      }
      else
      {
     		if ( strcmp(p_SEL_VAL[22].link_tag, "FMT") != 0 )
     		{
				printf("\n 1558 %lf \n", l_rev_ratio );
				fflush(stdout);
          	fprintf( p_Data_File,"%d%s%lf\n",*p_rownum,"UNINBAL=",round(l_uninst_hold*l_rev_ratio) );
          	fprintf( p_Data_File,"%d%s%lf\n",*p_rownum,"INBAL=",round(l_inst_hold*l_rev_ratio) );
     		}
     		else   
     		{
         	fprintf( p_Data_File,"%d%s%lf\n",*p_rownum,"UNINBAL=",round(l_uninst_hold*p_SEL_VAL[21].NUM_VAL*l_rev_ratio) );
          	fprintf( p_Data_File,"%d%s%lf\n",*p_rownum,"INBAL=",round(l_inst_hold*p_SEL_VAL[21].NUM_VAL*l_rev_ratio) );
			}
     }
	}
	


if((p_rec_no == 1) &&
   (( strcmp(chr_p_msgno,"551N01") == 0)||
    ( strcmp(chr_p_msgno,"551R01") == 0)||
    ( strcmp(chr_p_msgno,"552N01") == 0)||
    ( strcmp(chr_p_msgno,"552R01") == 0)||
    ( strncmp(chr_p_msgno,"560",3) == 0)||
	 (strcmp(chr_p_msgno,"564N91") == 0) ||
	 (strcmp(chr_p_msgno,"564R91") == 0)
   ))
	{
	  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_PREP_DT=",chr_h_prepdate_new);
	}

   if((p_rec_no == 1) && ( strcmp(chr_p_msgno,"563N05") == 0))
     {
           memset(chr_h_rt_client,APL_NULL_CHAR,11);
           memset(chr_h_rt_refno,APL_NULL_CHAR,17);
           memset(chr_h_rt_seme,APL_NULL_CHAR,17);
           memset(chr_h_rt_eventid,APL_NULL_CHAR,17);
           memset(chr_h_rt_access_date,APL_NULL_CHAR,APL_DATE_LEN);

        if (APL_FAILURE == CO_RtvMachDtTime(chr_h_access_date, l_debug_info_ptr))
           {
            APL_GOBACK_FAIL
           }

        strcpy(chr_h_rt_client,p_SEL_VAL[1].link_tag);
        strcpy(chr_h_rt_refno,p_SEL_VAL[10].link_tag);
        strcpy(chr_h_rt_seme,p_SEL_VAL[12].link_tag); 

         if (!strcmp(p_STAT_VAL[5].link_tag,"NONREF"))
             strcpy(chr_h_rt_eventid,APL_NULL_STRING);
         else
             strcpy(chr_h_rt_eventid,p_STAT_VAL[5].link_tag);

        strcpy(chr_h_rt_access_date,chr_h_access_date);
       printf("Account is %s\n ",chr_h_rt_client);
	   fflush(stdout);
       printf("Refno is %s\n ",chr_h_rt_refno);
	   fflush(stdout);
       printf("Prevseme is %s\n ",chr_h_rt_seme);
	   fflush(stdout);
       printf("eventidis %s\n ",chr_h_rt_eventid);
	   fflush(stdout);

 EXEC SQL INSERT INTO DEAL_EVNTIDLINK VALUES ('563N05',:chr_h_rt_client,:chr_h_rt_refno,:chr_h_rt_seme,:chr_h_rt_eventid,:chr_h_rt_access_date);
        IS_ANY_ORA_ERROR
    }

if(p_rec_no==1)
{
if ( !strcmp(chr_p_msgno, "548N04") )
      {
       printf("15528inside if ---- *********Vaibhav********\n");
	   fflush(stdout);
         strcpy(chr_l_uniq_client,h_dl_client);
          if(APL_FAILURE==MS_Rtv_SEME(chr_l_uniq_client,chr_p_msgno,chr_l_uniq_seme_refno,l_debug_info_ptr))
          {
              APL_GOBACK_FAIL
          }
          fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"UNIQREFNO=",chr_l_uniq_seme_refno);
          printf("*************Uniq Ref No = |%s|*************\n",chr_l_uniq_seme_refno);
		  fflush(stdout);
      }
}
	Alert("\n exiting from selothervalues with  swift_msg_seqno as l_pass_back is :%ld: ",(*p_msg_seq_no));
	 
		(*p_msg_seq_no) = l_pass_back_seq_no_95; 
		printf("\n exiting from selothervalues with  swift_msg_seqno as l_pass_back is :%ld: ",(*p_msg_seq_no));
		fflush(stdout);

APL_GOBACK_SUCCESS // AIX - Warnings removal
	
RETURN_SUCCESS:
	APL_FREE(l_ms_dynamic_val);
	APL_FREE(l_ms_dynamic_val_a);
	APL_FREE(chr_temp_temp_part);
	APL_FREE(chr_l_note);
	APL_FREE(l_note_new); 
	APL_FREE(chr_h_notefld); 
	APL_FREE(l_progseqnum_struct_h); 
        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Rtv_OTHValues\n",NULL,NULL);

        return APL_SUCCESS;

RETURN_FAILURE:
	APL_FREE(l_ms_dynamic_val);
	APL_FREE(l_ms_dynamic_val_a);
	APL_FREE(chr_temp_temp_part);
	APL_FREE(chr_l_note);
	APL_FREE(l_note_new); 
	APL_FREE(chr_h_notefld); 
	APL_FREE(l_progseqnum_struct_h); 
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of MS_Rtv_OTHValues\n",NULL,NULL);
        return APL_FAILURE;



} 

int MS_Proc_599Send(note_desc *p_note,char *chr_p_client,char *p_eventid,char *p_instr_code,long *p_msg_seq_no,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   FILE *chr_finifile,*Data_File;
   char chr_inifile[PATH_LENGTH],chr_fl_msgdatafile[PATH_LENGTH];
   char chr_l_data_fname[PATH_LENGTH],chr_l_date_time[APL_DATE_LEN],chr_h_date_time[9];
   int  int_h_max_msg_seq_no=0;
   short i_Max_MSG_SEQ_NO=0;
   int msg_line_no = 0,int_returnval=0,int_retstat=0;
   MS_MSGENT_STRUCT l_ms_msgent_struct;

long l_dummy_msgseqno  = 0 ;
 char chr_l_dummy_data_fname[PATH_LENGTH];
#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif

   memset(chr_inifile,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_fl_msgdatafile,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_l_data_fname,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_l_date_time,APL_NULL_CHAR,APL_DATE_LEN);
   memset(chr_h_date_time,APL_NULL_CHAR,9);
   
   memset(chr_l_dummy_data_fname,APL_NULL_CHAR,PATH_LENGTH);

	  strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
	  strcat(chr_inifile,"/intl_sun.cfg");
	  if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
          {
                        CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING,
                                                                APL_NULL_STRING,
 APL_NULL_STRING, __LINE__, __FILE__);
                        APL_GOBACK_FAIL;
          }




 	  if(CO_ReadToken(chr_finifile,"INTL_MS_DATA_PATH",chr_fl_msgdatafile,l_debug_info_ptr) == APL_FAILURE)
          {
                        CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING,
                                                                APL_NULL_STRING,
 APL_NULL_STRING, __LINE__, __FILE__);
                        APL_GOBACK_FAIL;
          }

          int_returnval = MS_Rtv_DataFlName(chr_l_data_fname,&l_dummy_msgseqno,l_debug_info_ptr);
          if(int_returnval == APL_FAILURE)
              APL_GOBACK_FAIL;

          strcat(chr_fl_msgdatafile,chr_l_data_fname);
 	  if((Data_File = fopen(chr_fl_msgdatafile,"w")) == (FILE *)NULL)
 	  {
     		CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
                APL_GOBACK_FAIL;
  
 	  }

  	  fprintf(Data_File,"%s\n","1EOF=F");
      
		while(msg_line_no <= 20)
          {
	     if(strcmp(p_note[msg_line_no].detail,"") != 0)
	     {
  	  	fprintf(Data_File,"%d%s%d%c%s\n",1,"INFO",msg_line_no+1,'=',p_note[msg_line_no].detail);
	     }
	     else
		break;
             msg_line_no++;
          }
  	  fprintf(Data_File,"%d%s%s%c\n",1,"REFNO=",p_eventid,'X');
          int_returnval = CO_RtvSysDtTime(chr_l_date_time,l_debug_info_ptr);
          if(int_returnval == APL_FAILURE)
		APL_GOBACK_FAIL

          exec sql select to_char(to_date(:chr_l_date_time),'DDMMMISS') into
                   :chr_h_date_time from dual;

          IS_ANY_ORA_ERROR
        
  	  fprintf(Data_File,"%d%s%s\n",1,"DTIME=",chr_h_date_time);
  	  fprintf(Data_File,"%d%s%s\n",1,"ACCOUNT=",chr_p_client);
  	  fprintf(Data_File,"%d%s%s\n",1,"PROC_INIT=",p_eventid);
  	  fprintf(Data_File,"%d%s%s\n",1,"INSTR_CODE=",p_instr_code);
  	  fprintf(Data_File,"%s\n","2EOF=T");
  	  fprintf(Data_File,"%s\n","2ACCOUNT=");
  	  fprintf(Data_File,"%s\n","2PROC_INIT=");

          l_ms_msgent_struct.swift_msg_seqno = *p_msg_seq_no;
         int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
        
          strcpy(l_ms_msgent_struct.swift_msg_no,"599SM");
          strcpy(l_ms_msgent_struct.proc_init,APL_NULL_STRING);
          strcpy(l_ms_msgent_struct.client,chr_p_client);
          strcpy(l_ms_msgent_struct.info_file,chr_l_data_fname);
          strcpy(l_ms_msgent_struct.proc_data,APL_NULL_STRING);
          l_ms_msgent_struct.auto_tran_ind[0] = 'Y';
			 l_ms_msgent_struct.auto_tran_ind[1]=APL_NULL_CHAR;
          l_ms_msgent_struct.status_ind[0] = 'D';
          l_ms_msgent_struct.status_ind[1] = APL_NULL_CHAR;
          l_ms_msgent_struct.swift_count = 0;
          l_ms_msgent_struct.gcn_count = 0;
          l_ms_msgent_struct.telex_count = 0;
          l_ms_msgent_struct.fax_count = 0;
          l_ms_msgent_struct.clts_count = 0;

				
		
          int_returnval = MS_Mod_MsgEntAdd(l_ms_msgent_struct,&int_retstat,l_debug_info_ptr);

          APL_GOBACK_SUCCESS

RETURN_SUCCESS:

        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Proc_599Send\n",NULL,NULL);
        fclose(Data_File);
        return APL_SUCCESS;

RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of send599\n",NULL,NULL);
        fclose(Data_File);
        return APL_FAILURE;
}



int CA_Rtv_AccEntlPos(CA_CASECEVENT_STRUCT_H   p_asecevt_struct_h,char *chr_p_regbrind,char *chr_p_client,char *p_instr_code, double *p_entpos,double *p_pos001,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
        struct sqlca sqlca;
        char   chr_prev_rec_dt[APL_DATE_LEN];
        char    chr_mainfuncarea_h[APL_MAINFUNCAREA_LEN];
        char    chr_condid_h[APL_CONDID_LEN];
        short Cond_exists_h;
        int    chr_h_count=0,int_curflg=0;
        double  posn_adj=0.00,h_pos001=0.00;
        double  dbl_h_date_diff=0;
        double  h_sum_hissafekeep_pos;
        S_POSITION_STRUCT_H position_h;
		 
			S_POSITION_STRUCT_I position_i={0,0,0,0,0,0,0};
			short   i_date_diff,i_sum_hissafek,i_pos001;
		


#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif
			memset(position_h.h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
			memset(position_h.h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
			position_h.h_safekeep_pos = 0.00;
			position_h.h_nval_rec = 0.00;
			position_h.h_nval_del = 0.00;
			position_h.h_val_rec = 0.00;
			position_h.h_val_del = 0.00;
			position_h.h_dp_rec = 0.00;
			position_h.h_dp_del = 0.00;

        if(!strcmp(p_asecevt_struct_h.h_entitl_base,ENTL_BASE_REG)
           && (!strcmp(chr_p_regbrind,APL_INSTRU_REGD)))
        {
                

                strcpy(chr_mainfuncarea_h,"CA_REGN_PROC");
                strcpy(chr_condid_h,"ALL_STATUSES");
                Cond_exists_h = 0;

                if(CO_Chk_CntryEnabled(   chr_mainfuncarea_h, chr_condid_h, &Cond_exists_h, l_debug_info_ptr)==APL_FAILURE)
                        APL_GOBACK_FAIL
                if(Cond_exists_h>0)
                        int_curflg=1;
                else
                        int_curflg=2;
        }
        else if(strcmp(p_asecevt_struct_h.h_entitl_base, ENTL_BASE_SETL)==0)
        {
                
                int_curflg=4;
        }
        else
        {
                int_curflg=3;
        }
        printf("p_asecevt_struct_h.h_entitl_base is %s\n",p_asecevt_struct_h.h_entitl_base);
		fflush(stdout);


        switch(int_curflg)
        {
                         case 1 :
                          EXEC SQL SELECT instr_code,client,SUM(NVL(safekeep_pos,0)),
                          SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                          SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                          SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) INTO
                          :position_h:position_i
                          FROM DL_SAFEK
                          WHERE  instr_code = :p_instr_code
                          AND   client =:chr_p_client
                          AND STATUS in ('000','001','002','003')
                          GROUP BY instr_code,client;
                          IS_ANY_ORA_ERROR
                                break;

                         case 2 :
                          EXEC SQL SELECT instr_code,client,SUM(NVL(safekeep_pos,0)),
                          SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                          SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                          SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) into
                          :position_h:position_i
                          FROM DL_SAFEK
                          WHERE  instr_code = :p_instr_code
                          AND   client =:chr_p_client
                          AND STATUS in ('002','003')
                          GROUP BY instr_code,client;
                          IS_ANY_ORA_ERROR
                                break;

                         case 3 :
                          EXEC SQL SELECT instr_code,client,SUM(NVL(safekeep_pos,0)),
                          SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                          SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                          SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) into
                          :position_h:position_i
                          FROM DL_SAFEK
                          WHERE  instr_code = :p_instr_code
                          AND   client =:chr_p_client
                          GROUP BY instr_code,client;
                          IS_ANY_ORA_ERROR
                                break;
                        case 4 :
                           EXEC SQL SELECT instr_code,client,SUM(NVL(safekeep_pos,0)),
                           SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                           SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                           SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) into
                           :position_h :position_i
                           FROM DL_SAFEK A,MT_LOCATION B
                           WHERE A.INSTR_CODE = :p_instr_code
                           AND A.LOCATION_CD=B.LOCATION_CD
                           AND INSTR(NVL(B.STATUS_POS,' '),'Y')!=0
                           AND A.CLIENT =:chr_p_client
                           GROUP BY A.INSTR_CODE,A.CLIENT;
                           IS_ANY_ORA_ERROR
                           break;
         }
         EXEC SQL SELECT  SUM(NVL(safekeep_pos,0)) INTO
                          :h_pos001:i_pos001
                          FROM DL_SAFEK
                          WHERE  instr_code = :p_instr_code
                          AND   client =:chr_p_client
                          AND STATUS =  '001'
                          GROUP BY instr_code,client;
         IS_ANY_ORA_ERROR

         *p_pos001 = h_pos001;

         if(!strcmp(p_asecevt_struct_h.h_entitl_base, ENTL_BASE_DL)    )
         {
                        *p_entpos = position_h.h_safekeep_pos + position_h.h_val_rec + position_h.h_dp_rec + position_h.h_nval_rec - position_h.h_val_del - position_h.h_dp_del - position_h.h_nval_del ;

         }
         else if(!strcmp(p_asecevt_struct_h.h_entitl_base , ENTL_BASE_SETL)    )
         {
                         *p_entpos = position_h.h_safekeep_pos;
         }
         else if(!strcmp(p_asecevt_struct_h.h_entitl_base, ENTL_BASE_REG)     )
         {

                        strcpy(chr_mainfuncarea_h,"CA_REGN_PROC");
                        strcpy(chr_condid_h,"TRD_ADJ");
                        if(CO_Chk_CntryEnabled(   chr_mainfuncarea_h, chr_condid_h, &Cond_exists_h, l_debug_info_ptr)==APL_FAILURE)
                                APL_GOBACK_FAIL
                        else
                        {
                                if(Cond_exists_h>0)
                                {
                                        double  markstamp_quantity_h=0.0;
                                        short           markstamp_qty_i;

                                        EXEC SQL SELECT SUM(MRK_DL_FAILQTY + STAMP_QTY) 
                                        INTO    :markstamp_quantity_h:markstamp_qty_i
                                        FROM    DL_DEAL
                                        WHERE client   = :chr_p_client
                                        AND     instr_code  = :p_instr_code;

                                        IS_ANY_ORA_ERROR
                                        *p_entpos = ((position_h.h_safekeep_pos) - markstamp_quantity_h);
                                }
                       }
        }

        
        APL_GOBACK_SUCCESS
        RETURN_SUCCESS:
        {
                return (APL_SUCCESS);
        }
        RETURN_FAILURE:
        {
                return (APL_FAILURE);
        }
}

int CA_Rtv_AccEntlPosMast(CA_CASECEVENT_STRUCT_H   p_asecevt_struct_h,char *chr_p_regbrind,char *chr_p_client,char *p_instr_code, double *p_entpos,double *p_pos001,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
        struct sqlca sqlca;
        char   chr_prev_rec_dt[APL_DATE_LEN];
        char    chr_mainfuncarea_h[APL_MAINFUNCAREA_LEN];
        char    chr_condid_h[APL_CONDID_LEN];
        short Cond_exists_h;
        int    chr_h_count=0,int_curflg=0;
        double  posn_adj=0.00,h_pos001=0.00;
        double  dbl_h_date_diff=0;
        double  h_sum_hissafekeep_pos;
        S_POSITION_STRUCT_H position_h;
       
         S_POSITION_STRUCT_I position_i={0,0,0,0,0,0,0};
         short   i_date_diff,i_sum_hissafek,i_pos001;
      


#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif
         memset(position_h.h_instr_code,APL_NULL_CHAR,APL_INSTRUMENTCODE_LEN);
         memset(position_h.h_dl_client,APL_NULL_CHAR,APL_CLIENT_LENGTH);
         position_h.h_safekeep_pos = 0.00;
         position_h.h_nval_rec = 0.00;
         position_h.h_nval_del = 0.00;
         position_h.h_val_rec = 0.00;
         position_h.h_val_del = 0.00;
         position_h.h_dp_rec = 0.00;
         position_h.h_dp_del = 0.00;

        if(!strcmp(p_asecevt_struct_h.h_entitl_base,ENTL_BASE_REG)
           && (!strcmp(chr_p_regbrind,APL_INSTRU_REGD)))
       {
                

                strcpy(chr_mainfuncarea_h,"CA_REGN_PROC");
                strcpy(chr_condid_h,"ALL_STATUSES");
                Cond_exists_h = 0;

                if(CO_Chk_CntryEnabled(   chr_mainfuncarea_h, chr_condid_h, &Cond_exists_h, l_debug_info_ptr)==APL_FAILURE)
                        APL_GOBACK_FAIL
                if(Cond_exists_h>0)
                        int_curflg=1;
                else
                        int_curflg=2;
        }
        else if(!strcmp(p_asecevt_struct_h.h_entitl_base, ENTL_BASE_SETL)    )
        {
                
                int_curflg=4;
        }
        else
        {
                int_curflg=3;
        }
        printf("CURFLG is %d\n",int_curflg);
		fflush(stdout);
		  printf("p_asecevt_struct_h.h_entitl_base is %s\n",p_asecevt_struct_h.h_entitl_base);
		  fflush(stdout);

        switch(int_curflg)
        {
                         case 1 :
                          EXEC SQL SELECT instr_code,client,SUM(NVL(safekeep_pos,0)),
                          SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                          SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                          SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) INTO
                          :position_h:position_i
                          FROM DL_SAFEK
                          WHERE  instr_code = :p_instr_code
                          AND   client =:chr_p_client
                          AND STATUS in ('000','001','002','003')
                          GROUP BY instr_code,client;
                          IS_ANY_ORA_ERROR
                                break;
                      case 2 :
                          EXEC SQL SELECT instr_code,client,SUM(NVL(safekeep_pos,0)),
                          SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                          SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                          SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) into
                          :position_h:position_i
                          FROM DL_SAFEK
                          WHERE  instr_code = :p_instr_code
                          AND   client =:chr_p_client
                          AND STATUS in ('002','003')
                          GROUP BY instr_code,client;
                          IS_ANY_ORA_ERROR
                                break;

                         case 3 :
								  EXEC SQL SELECT instr_code, NULL, SUM(NVL(safekeep_pos,0)),
                          SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                          SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                          SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) into
                          :position_h:position_i
                          FROM DL_SAFEK
                          WHERE client in (select  cln_code from MT_CLIENT where cln_master= :chr_p_client)
                          AND instr_code = :p_instr_code
                          GROUP BY instr_code;
                          IS_ANY_ORA_ERROR
                          strcpy(position_h.h_dl_client,chr_p_client);
                          break;


                        case 4 :
                           EXEC SQL SELECT instr_code,NULL,SUM(NVL(safekeep_pos,0)),
                           SUM(NVL(NVALRECEIVE,0)),SUM(NVL(NVALDELIVER,0)),
                           SUM(NVL(VAL_REC,0)),SUM(NVL(VAL_DEL,0)),
                           SUM(NVL(DP_REC,0)),SUM(NVL(DP_DEL,0)) into
                           :position_h :position_i
                           FROM DL_SAFEK A,MT_LOCATION B
                           WHERE      A.INSTR_CODE = :p_instr_code
                           AND A.LOCATION_CD=B.LOCATION_CD
                           AND INSTR(NVL(B.STATUS_POS,' '),'Y')!=0
                           AND A.CLIENT in ( select  cln_code
                                              from MT_CLIENT
                                              where cln_master=:chr_p_client)
                           GROUP BY A.INSTR_CODE;
                           IS_ANY_ORA_ERROR
                           break;



         }
EXEC SQL SELECT  SUM(NVL(safekeep_pos,0)) INTO
                          :h_pos001:i_pos001
                          FROM DL_SAFEK
                          WHERE  instr_code = :p_instr_code
                          AND   client =:chr_p_client
                          AND STATUS =  '001'
                          GROUP BY instr_code,client;
         IS_ANY_ORA_ERROR

         *p_pos001 = h_pos001;

         if(!strcmp(p_asecevt_struct_h.h_entitl_base, ENTL_BASE_DL)    )
         {
                        *p_entpos = position_h.h_safekeep_pos + position_h.h_val_rec + position_h.h_dp_rec+ position_h.h_nval_rec - position_h.h_val_del - position_h.h_dp_del - position_h.h_nval_del ;

         }
         else if(!strcmp(p_asecevt_struct_h.h_entitl_base , ENTL_BASE_SETL)    )
         {
                         *p_entpos = position_h.h_safekeep_pos;
         }
         else if(!strcmp(p_asecevt_struct_h.h_entitl_base, ENTL_BASE_REG)     )
         {

                        strcpy(chr_mainfuncarea_h,"CA_REGN_PROC");
                        strcpy(chr_condid_h,"TRD_ADJ");
                        if(CO_Chk_CntryEnabled(   chr_mainfuncarea_h, chr_condid_h, &Cond_exists_h, l_debug_info_ptr)==APL_FAILURE)
                                APL_GOBACK_FAIL
                        else
                        {
                                if(Cond_exists_h>0)
                                {
                                        double  markstamp_quantity_h=0.0;
                                      short           markstamp_qty_i;

                                        EXEC SQL SELECT SUM(MRK_DL_FAILQTY + STAMP_QTY)
                                        INTO    :markstamp_quantity_h:markstamp_qty_i
                                        FROM    DL_DEAL
                                        WHERE client   = :chr_p_client
                                        AND     instr_code  = :p_instr_code;

                                        IS_ANY_ORA_ERROR
                                        *p_entpos = ((position_h.h_safekeep_pos) - markstamp_quantity_h);
                                }
                       }
        }

        
        APL_GOBACK_SUCCESS
        RETURN_SUCCESS:
        {
                return (APL_SUCCESS);
        }
        RETURN_FAILURE:
        {
                return (APL_FAILURE);
        }
}

int     CA_Rtv_RefNo( char                 *chr_p_ca_id,
                                                  const char    *p_instr_code,
                                                  const char    *p_ce_type,
                                                  const char    *p_decl_dt,
                                                  const double  *p_evnt_nbr,
                                                  DEBUG_INFO_STRUCT_H         **l_debug_info_ptr
                                                )
{
        char    chr_temp_decl_date[APL_DATE_LEN];
        char    chr_char_event_nbr[3];
        char    *chr_pos;

        #ifdef APL_THREADS
                APL_SET_CONTEXT
                EXEC SQL CONTEXT USE :my_ctx_local;
        #endif

        strcpy(chr_temp_decl_date,p_decl_dt);
        strcpy(chr_char_event_nbr,APL_NULL_STRING);
        strcpy(chr_p_ca_id,p_instr_code);
        strcat(chr_p_ca_id,p_ce_type);
        strcat(chr_p_ca_id,strtok_r(chr_temp_decl_date,"/",&chr_pos));
        strcat(chr_p_ca_id,strtok_r(NULL,"/",&chr_pos));
        strcat(chr_p_ca_id,strtok_r(NULL," ",&chr_pos));
        /* strcpy( (char*)chr_char_event_nbr,(char *)ltoa((int) *p_evnt_nbr)); */
 	strcat(chr_p_ca_id,chr_char_event_nbr);


        
        APL_GOBACK_SUCCESS
        RETURN_SUCCESS:
        {
                return (APL_SUCCESS);
        }
/* AIX - Warnings removal
        RETURN_FAILURE:
        {
                return (APL_FAILURE);
        }
*/
}



int MS_Proc_560Send(note_desc *p_note,char * chr_p_msgno,char * p_cont,MS_STATIC_VAL *p_SEL_VAL,MS_STATIC_VAL *p_STAT_VAL,long *p_msg_seq_no,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   FILE *chr_finifile=NULL;
		  FILE *Data_File=NULL;
   char chr_inifile[PATH_LENGTH],chr_fl_msgdatafile[PATH_LENGTH];
   char chr_l_data_fname[PATH_LENGTH],chr_l_date_time[APL_DATE_LEN],chr_h_date_time[9];
   int  int_h_max_msg_seq_no=0;
   short i_Max_MSG_SEQ_NO=0;
   short l_cond_ru = 0;  
   char  chr_l_sm_recdt[APL_DATE_LEN] = APL_NULL_STRING; 
   char  chr_l_sm_prelim[APL_DATE_LEN] = APL_NULL_STRING; 
   char  chr_l_systemdate[APL_DATE_LEN] = APL_NULL_STRING; 
   int msg_line_no = 0,int_returnval=0,int_retstat=0;
	int int_sel_ctr=0,int_stat_ctr=0,rownum=1;
   MS_MSGENT_STRUCT l_ms_msgent_struct;

long l_dummy_msgseqno = 0 ;
char chr_l_dummy_data_fname[PATH_LENGTH];
int chr_l_txn_type=0;    
char chr_l_unique_ref_num[APL_UNIQUE_REF_NUM_LEN]=APL_NULL_STRING;    

   EXEC SQL BEGIN DECLARE SECTION;
		char h_proc_oth[241] = APL_NULL_STRING;
		char chr_h_othproc1[61] = APL_NULL_STRING;
		char chr_h_fent_pos[30] = APL_NULL_STRING;
		char h_ratio_perc_ind,h_amt_rt_ind,h_entitl_base,h_new_dl_ind;
		char *chr_temp_part = NULL;
		double h_safekeep_pos=0,npos=0;
		short i_ratio_pct_ind=0,i_amt_rt_ind=0,i_entitl_base=0,i_new_dl_ind=0;
		short i_sm_recdt = 0; 
	EXEC SQL END DECLARE SECTION;

	EXEC SQL VAR chr_h_fent_pos IS STRING;
	EXEC SQL VAR chr_l_sm_recdt IS STRING; 
	EXEC SQL VAR chr_l_sm_prelim IS STRING; 
	
	#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
	#endif
	

	h_ratio_perc_ind=APL_NULL_CHAR;
	h_amt_rt_ind=APL_NULL_CHAR;
	h_entitl_base=APL_NULL_CHAR;
	h_new_dl_ind=APL_NULL_CHAR;

	chr_temp_part = (char *)calloc(61,sizeof(char));
	APL_MALLOC_FAIL(chr_temp_part);


   memset(chr_inifile,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_fl_msgdatafile,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_l_data_fname,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_l_date_time,APL_NULL_CHAR,APL_DATE_LEN);
   memset(chr_h_date_time,APL_NULL_CHAR,9);
   memset(chr_l_sm_recdt,APL_NULL_CHAR,APL_DATE_LEN);  
   memset(chr_l_sm_prelim,APL_NULL_CHAR,APL_DATE_LEN);  
   memset(chr_l_systemdate,APL_NULL_CHAR,APL_DATE_LEN);  
   
   memset(chr_l_dummy_data_fname,APL_NULL_CHAR,PATH_LENGTH);

	CO_ProcMonitor(APL_OUT_FILE,"\nEntered processtion MS_Proc_560Send\n\n",NULL,NULL);
	  strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
	  strcat(chr_inifile,"/intl_sun.cfg");
	  if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
     {
         CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
         APL_GOBACK_FAIL;
     }

 	  if(CO_ReadToken(chr_finifile,"INTL_MS_DATA_PATH",chr_fl_msgdatafile,l_debug_info_ptr) == APL_FAILURE)
     {
         CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
         APL_GOBACK_FAIL;
     }

     int_returnval = MS_Rtv_DataFlName(chr_l_data_fname,&l_dummy_msgseqno,l_debug_info_ptr);
     if(int_returnval == APL_FAILURE)
        APL_GOBACK_FAIL;

     strcat(chr_fl_msgdatafile,chr_l_data_fname);
 	  if((Data_File = fopen(chr_fl_msgdatafile,"w")) == (FILE *)NULL)
 	  {
     		CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
         APL_GOBACK_FAIL;
 	  }

  	  fprintf(Data_File,"%s\n","1EOF=F");
	  
	  while(strlen(p_SEL_VAL[int_sel_ctr].link_val)!=0)
	  {
		if(strlen(p_SEL_VAL[int_sel_ctr].link_tag)!=0)
			fprintf(Data_File,"%d%s%s%s\n",rownum,p_SEL_VAL[int_sel_ctr].link_val,"=",p_SEL_VAL[int_sel_ctr].link_tag);
		else
		{
			if(floor(p_SEL_VAL[int_sel_ctr].NUM_VAL) == p_SEL_VAL[int_sel_ctr].NUM_VAL) 
				//fprintf(Data_File,"%d%s%s%.0lf\n",rownum,p_SEL_VAL[int_sel_ctr].link_val,"=",(int)sizeof(int),p_SEL_VAL[int_sel_ctr].NUM_VAL); Changes done for AIX Migration
				fprintf(Data_File,"%d%s%s%.0lf\n",rownum,p_SEL_VAL[int_sel_ctr].link_val,"=",p_SEL_VAL[int_sel_ctr].NUM_VAL);
			else
				fprintf(Data_File,"%d%s%s%*lf\n",rownum,p_SEL_VAL[int_sel_ctr].link_val,"=",(int)sizeof(double),p_SEL_VAL[int_sel_ctr].NUM_VAL);
		}
				
		int_sel_ctr++;	
	  }

	  fprintf(Data_File,"%d%s\n",rownum,"IS599=N"); 
	  if(!strcmp(p_cont,"Y"))
	  	fprintf(Data_File,"%d%s\n",rownum,"ISCONT=Y"); 
	 
      chr_l_txn_type=DEALTYPE_CORP;
      if (MS_Rtv_RefNo_A(chr_l_txn_type,chr_l_unique_ref_num,l_debug_info_ptr) == APL_FAILURE)
         {
             CO_ProcMonitor(APL_OUT_FILE,"Failure from GenUniqRefNum", NULL, NULL);
             APL_GOBACK_FAIL;
         }
      fprintf(Data_File,"%d%s%s\n",rownum,"NEW_CURRMSGREFNO=",chr_l_unique_ref_num);
    
	
	  while(msg_line_no <= 20)
	  
     {
	  	if(strcmp(p_note[msg_line_no].detail,"") != 0)
		{
  	  		fprintf(Data_File,"%d%s%d%c%s\n",1,"INFO",msg_line_no+1,'=',p_note[msg_line_no].detail);
	  	}
	  	else
			break;
      msg_line_no++;
     }
		
	
		
                if (APL_FAILURE == CO_Chk_CntryEnabled(  "EVNT_INIT",
                                                       "SM_RECDT",
                                                        &l_cond_ru,
                                                        l_debug_info_ptr ))
                {
                  	 APL_GOBACK_FAIL
                } 
               
                if (((strcmp(chr_p_msgno,"560N01") == 0)||(strcmp(chr_p_msgno,"560R01") == 0)) && (l_cond_ru)) /*Isolve:362*/
                {
                    EXEC SQL SELECT NVL(to_char(REC_DATE,'dd/mm/yyyy hh:mi:ss'),''), PRELIMINARY_FLAG into :chr_l_sm_recdt:i_sm_recdt,:chr_l_sm_prelim
                    FROM CAEVENT
                    WHERE corp_id = :p_SEL_VAL[30].link_tag;

                    IS_ANY_ORA_ERROR

                    if(APL_FAILURE == CO_RtvSysDt(chr_l_systemdate,l_debug_info_ptr))
                               APL_GOBACK_FAIL
                }
		h_safekeep_pos = 0;
		
		/*Isolve:362*/ 
		if (((strcmp(chr_p_msgno,"560N01") == 0)||(strcmp(chr_p_msgno,"560R01") == 0) )&& (l_cond_ru) && (strcmp(chr_l_systemdate, chr_l_sm_recdt) != 0) && (i_sm_recdt != -1))
		{
			EXEC SQL SELECT NVL(SUM(safekeep_pos),0) INTO :h_safekeep_pos
                  	FROM DL_HISSAFEK
                	WHERE client = :p_SEL_VAL[0].link_tag 
			AND POSIT_DATE = :chr_l_sm_recdt
                	AND instr_code  = :p_SEL_VAL[4].link_tag
                	GROUP BY client,instr_code;

			IS_ANY_ORA_ERROR
		}	
		else
		{
  		EXEC SQL SELECT NVL(SUM(safekeep_pos),0) INTO :h_safekeep_pos
		FROM DL_SAFEK	
		WHERE client = :p_SEL_VAL[0].link_tag AND 
		instr_code  = :p_SEL_VAL[4].link_tag
		GROUP BY client,instr_code;

		IS_ANY_ORA_ERROR
		}
		
		if(sqlca.sqlcode == 1403)
			h_safekeep_pos = 0;

		if(strcmp(p_SEL_VAL[11].link_tag,"FMT")== 0)
		{
			if(h_safekeep_pos != 0)
			{
				npos = h_safekeep_pos * p_SEL_VAL[12].NUM_VAL;
				
				EXEC SQL SELECT to_char(:npos) into :chr_h_fent_pos from dual;
			
				IS_ANY_ORA_ERROR
				fprintf(Data_File,"%d%s%s\n",rownum,"FENT_POS=",chr_h_fent_pos);
				npos = 0;
			}
			else
				fprintf(Data_File,"%d%s\n",rownum,"FENT_POS=0");

		}
		else
		{
			if(h_safekeep_pos != 0)
			{
				EXEC SQL SELECT to_char(:h_safekeep_pos) into :chr_h_fent_pos from dual;
				IS_ANY_ORA_ERROR
				fprintf(Data_File,"%d%s%s\n",rownum,"FENT_POS=",chr_h_fent_pos);
			 }
			else
				fprintf(Data_File,"%d%s\n",rownum,"FENT_POS=0");
		}

		EXEC SQL SELECT RATIO_PERC_IND,amount_ratio_flg,entitl_base,AUTO_DLCRT_IND
		INTO :h_ratio_perc_ind:i_ratio_pct_ind,
				:h_amt_rt_ind:i_amt_rt_ind,
				:h_entitl_base:i_entitl_base,
				:h_new_dl_ind:i_new_dl_ind
		FROM CASECEVENT
		WHERE CA_EVENT = :p_SEL_VAL[3].link_tag
				AND INSTR_TYPE = :p_SEL_VAL[8].link_tag;

		IS_ANY_ORA_ERROR

		if(sqlca.sqlcode == 1403 )
		{
			CO_InsertErr(l_debug_info_ptr,ERR_REC_NOTFND, p_SEL_VAL[3].link_tag, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
			APL_GOBACK_FAIL
		}

		if(i_amt_rt_ind == -1)
			fprintf(Data_File,"%d%s%c\n",rownum,"ATTYP=",APL_NULL_CHAR);
		else
			fprintf(Data_File,"%d%s%c\n",rownum,"ATTYP=",h_amt_rt_ind);

		if(i_ratio_pct_ind == -1)
			fprintf(Data_File,"%d%s%c\n",rownum,"RTTYP=",APL_NULL_CHAR);
		else
			fprintf(Data_File,"%d%s%c\n",rownum,"RTTYP=",h_ratio_perc_ind);
		if(i_entitl_base == -1)
			fprintf(Data_File,"%d%s%c\n",rownum,"ENTBASIS=",APL_NULL_CHAR);
		else
			fprintf(Data_File,"%d%s%c\n",rownum,"ENTBASIS=",h_entitl_base);
		if(i_new_dl_ind == -1)
			fprintf(Data_File,"%d%s%c\n",rownum,"CR_TRD=",APL_NULL_CHAR);
		else
			fprintf(Data_File,"%d%s%c\n",rownum,"CR_TRD=",h_new_dl_ind);

		fprintf(Data_File,"%d%s%s%c\n",rownum,"EVENTID=",p_SEL_VAL[5].link_tag,'X');
		fprintf(Data_File,"%d%s%s\n",rownum,"CETYPSTR=","SHAREHOLDERS MEETING");
	 
		memset(chr_temp_part,APL_NULL_CHAR,61);
		memset(h_proc_oth,APL_NULL_CHAR,241);
		strcpy(h_proc_oth,p_SEL_VAL[2].link_tag);
		if(strcmp(h_proc_oth,APL_NULL_STRING)!=0)
		{
			strncpy(chr_temp_part,h_proc_oth,60);
			fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS1=",chr_temp_part);
			memset(chr_temp_part,APL_NULL_CHAR,61);
			if(strlen(h_proc_oth) > 60)
			{
				chr_temp_part = &h_proc_oth[60];
				strncpy(chr_h_othproc1,chr_temp_part,60); 
				if(strlen(chr_h_othproc1)!=0)
					fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS2=",chr_h_othproc1);
				else
					fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS2=",APL_NULL_STRING);
			}
			else
				fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS2=",APL_NULL_STRING);

			if(strlen(h_proc_oth) > 120)
			{
				chr_temp_part = &h_proc_oth[120];
				memset(chr_h_othproc1,APL_NULL_CHAR,61);
				strncpy(chr_h_othproc1,chr_temp_part,60);
				if(strlen(chr_h_othproc1)!=0)
					fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS3=",chr_h_othproc1);
				else
					fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS3=",APL_NULL_STRING);
			}
			else
				fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS3=",APL_NULL_STRING);

			if(strlen(h_proc_oth) > 180)
			{	
				chr_temp_part = &h_proc_oth[180];
				memset(chr_h_othproc1,APL_NULL_CHAR,61);
				strncpy(chr_h_othproc1,chr_temp_part,60);
				if(strlen(chr_h_othproc1)!=0)
					fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS4=",chr_h_othproc1);
				else
					fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS4=",APL_NULL_STRING); 
			}
			else
				fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS4=",APL_NULL_STRING);
		}
		else
		{
			fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS1=",APL_NULL_STRING);
			fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS2=",APL_NULL_STRING);
			fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS3=",APL_NULL_STRING);
			fprintf(Data_File,"%d%s%s\n",rownum,"ADDRESS4=",APL_NULL_STRING);
		}
		memset(chr_temp_part,APL_NULL_CHAR,61);

		memset(h_proc_oth,APL_NULL_CHAR,241);
		strcpy(h_proc_oth,p_SEL_VAL[1].link_tag);
		if(strcmp(h_proc_oth,APL_NULL_STRING)!=0)
		{
			strncpy(chr_temp_part,h_proc_oth,60);
			fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD1=",chr_temp_part);
			memset(chr_temp_part,APL_NULL_CHAR,61);
			if(strlen(h_proc_oth) > 60)
			{
				chr_temp_part = &h_proc_oth[60];
				strncpy(chr_h_othproc1,chr_temp_part,60); 
				if(strlen(chr_h_othproc1)!=0)
					fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD2=",chr_h_othproc1);
				else
					fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD2=",APL_NULL_STRING);
			}
			else
				fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD2=",APL_NULL_STRING);

			if(strlen(h_proc_oth) > 120)
			{
				chr_temp_part = &h_proc_oth[120];
				memset(chr_h_othproc1,APL_NULL_CHAR,61);
				strncpy(chr_h_othproc1,chr_temp_part,60);
				if(strlen(chr_h_othproc1)!=0)
					fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD3=",chr_h_othproc1);
				else
					fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD3=",APL_NULL_STRING);
			}
			else
				fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD3=",APL_NULL_STRING);
		}
		else
		{
			fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD1=",APL_NULL_STRING);
			fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD2=",APL_NULL_STRING);
			fprintf(Data_File,"%d%s%s\n",rownum,"CORP_ADD3=",APL_NULL_STRING);
		}
		memset(chr_temp_part,APL_NULL_CHAR,61);

		while(strlen(p_STAT_VAL[int_stat_ctr].link_val)!=0)
		{
			fprintf(Data_File,"%d%s%s%s\n",rownum,p_STAT_VAL[int_stat_ctr].link_val,"=",p_STAT_VAL[int_stat_ctr].link_tag);
			int_stat_ctr++;
		}

    
  	  
	  fprintf(Data_File,"%s\n","2EOF=T");
  	  fprintf(Data_File,"%s\n","2ACCOUNT=");
  	  fprintf(Data_File,"%s\n","2PROC_INIT=");

     l_ms_msgent_struct.swift_msg_seqno = *p_msg_seq_no;
      int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
     
     strcpy(l_ms_msgent_struct.swift_msg_no,chr_p_msgno);
     strcpy(l_ms_msgent_struct.proc_init,p_STAT_VAL[0].link_tag);
     strcpy(l_ms_msgent_struct.client,p_SEL_VAL[0].link_tag);
     strcpy(l_ms_msgent_struct.info_file,chr_l_data_fname);
     strcpy(l_ms_msgent_struct.proc_data,APL_NULL_STRING);
     l_ms_msgent_struct.auto_tran_ind[0] = 'Y';
     l_ms_msgent_struct.auto_tran_ind[1] = APL_NULL_CHAR;
     l_ms_msgent_struct.status_ind[0] = 'D';
     l_ms_msgent_struct.status_ind[1] = APL_NULL_CHAR;
     l_ms_msgent_struct.swift_count = 0;
     l_ms_msgent_struct.gcn_count = 0;
     l_ms_msgent_struct.telex_count = 0;
     l_ms_msgent_struct.fax_count = 0;
     l_ms_msgent_struct.clts_count = 0;

      if(APL_FAILURE == MS_Mod_MsgEntAdd(l_ms_msgent_struct,&int_retstat,l_debug_info_ptr))
		{
			CO_ProcMonitor(APL_OUT_FILE,"\nFailure in MS_Mod_MsgEntAdd. Called through MS_Proc_560Send\n\n",NULL,NULL);
			APL_GOBACK_FAIL
		}
		else
      	APL_GOBACK_SUCCESS

RETURN_SUCCESS:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Proc_560Send\n",NULL,NULL);
        fclose(Data_File);
        fclose(chr_finifile);
        return APL_SUCCESS;

RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of send560\n",NULL,NULL);
        fclose(Data_File);
        fclose(chr_finifile);
        return APL_FAILURE;
}



int MS_Proc_568Send(note_desc *p_note,char **p_note_for_sm,MS_STATIC_VAL *p_SEL_VAL_568,char *p_cont_568,long *p_msg_seq_no,char *chr_p_msgno,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,int p_length)
{
   FILE *chr_finifile=NULL;
   FILE *Data_File=NULL;
   char chr_inifile[PATH_LENGTH]=APL_NULL_STRING;
	char chr_fl_msgdatafile[PATH_LENGTH]=APL_NULL_STRING;
   char chr_l_data_fname[PATH_LENGTH] = APL_NULL_STRING;
   int int_returnval=0;
   int int_sel_ctr=0;
	int rownum=1;
	int int_retstat=0;
	int msg_line_no=0;
	int l_length=p_length;
   MS_MSGENT_STRUCT l_ms_msgent_struct;

long l_dummy_msgseqno = 0;
char chr_l_dummy_data_fname[PATH_LENGTH] =APL_NULL_STRING;
char  chr_msg_param_struct[100]=APL_NULL_STRING;    
char h_generate_flag[2]=APL_NULL_STRING; 				
   #ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
   #endif
   
	memset(h_generate_flag,APL_NULL_CHAR,2);				 
	memset(chr_inifile,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_fl_msgdatafile,APL_NULL_CHAR,PATH_LENGTH);
   memset(chr_l_data_fname,APL_NULL_CHAR,PATH_LENGTH);
   memset(&l_ms_msgent_struct,NULL,sizeof(MS_MSGENT_STRUCT));

    memset(chr_l_dummy_data_fname,APL_NULL_CHAR,PATH_LENGTH);

   CO_ProcMonitor(APL_OUT_FILE,"\nEntered processtion MS_Proc_568Send\n\n",NULL,NULL);
   strcpy(chr_inifile,getenv("INTL_ROOT_PATH"));
   strcat(chr_inifile,"/intl_sun.cfg");
   if ( (chr_finifile = fopen(chr_inifile,"r") ) == NULL)
   {
       CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
       APL_GOBACK_FAIL;
   }

   if(CO_ReadToken(chr_finifile,"INTL_MS_DATA_PATH",chr_fl_msgdatafile,l_debug_info_ptr) == APL_FAILURE)
   {
       CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
       APL_GOBACK_FAIL;
   }
   int_returnval = MS_Rtv_DataFlName(chr_l_data_fname,&l_dummy_msgseqno,l_debug_info_ptr);
   if(int_returnval == APL_FAILURE)
      APL_GOBACK_FAIL;

	printf("\n After MS_Rtv_DataFlName h_file name is :%s:",chr_l_data_fname);
	fflush(stdout);

   strcat(chr_fl_msgdatafile,chr_l_data_fname);
	printf("\n full h_file name is :%s:",chr_fl_msgdatafile);
	fflush(stdout);
   if((Data_File = fopen(chr_fl_msgdatafile,"w")) == (FILE *)NULL)
   {
      CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND, APL_NULL_STRING, APL_NULL_STRING,APL_NULL_STRING, __LINE__, __FILE__);
      APL_GOBACK_FAIL;
   }
	printf("\n  h_file name is :%s:",chr_l_data_fname);
	fflush(stdout);

   fprintf(Data_File,"%s\n","1EOF=F");

    printf("\n ***Karnik Int_sel_ctr = [%s]\n",p_SEL_VAL_568[int_sel_ctr].link_val);
	fflush(stdout);

   while(strlen(p_SEL_VAL_568[int_sel_ctr].link_val)!=0)
   {
      printf("\n***Karnik****** |%s| => |%s|******\n",p_SEL_VAL_568[int_sel_ctr].link_val,p_SEL_VAL_568[int_sel_ctr].link_tag);
	  fflush(stdout);
      fprintf(Data_File,"%d%s%s%s\n",rownum,p_SEL_VAL_568[int_sel_ctr].link_val,"=",p_SEL_VAL_568[int_sel_ctr].link_tag);
      int_sel_ctr++;
   }
	printf("\n  h_file name is :%s:",chr_l_data_fname);
	fflush(stdout);
	
        /*Isolve:362*/	
	if(strstr("551N01^551R01^552R01^552N01^560N01^560R01^564N91^564R91^568N01^568N02^568N03",chr_p_msgno) != NULL )	
	{
	EXEC SQL SELECT nvl(CLN_GENERATE_IND,'N') INTO :h_generate_flag FROM MT_CLIENT WHERE cln_code = :p_SEL_VAL_568[2].link_tag;
	IS_ANY_ORA_ERROR
	fprintf(Data_File,"%d%s%s\n",rownum,"CLN_GENERATE_IND=",h_generate_flag);
	printf("\n\n*** *** GENR ind IS = |%s|\n\n",h_generate_flag);
	fflush(stdout);
	}
	else
	{
		printf("\n\n\n***********  here searching for SM  CLN_GENERATE_IND ***********");
		fflush(stdout);
		fprintf(Data_File,"%d%s\n",rownum,"CLN_GENERATE_IND=N");
	}
	

   /* ASHISH 27-06-2008
      Max length of a line of footer in message and DAT file = 35(Lines break up in function MS_Rtv_OTHValues())
      Total No. of characters in ADTX                        = 7000(Front End Validation)
	  Therefore, max no of line in Footer                    = (7000/35) = 200
   */

	Alert("msg_line_no is |%d|",msg_line_no);
	printf("Check ::: msg_line_no is |%d|\n",msg_line_no);
	fflush(stdout);
   
	while(msg_line_no <= 200)
    {
		Alert("Inside loop ... he ho ha...");
		fflush(stdout);
		Alert("l_length is |%d|",l_length);
		 if(strcmp(p_SEL_VAL_568[1].link_tag,"SM")==0)   
		 {
				Alert("\n msg_line_no is |%d| and l_length is |%d|\n",msg_line_no,l_length);
				fflush(stdout);
				//printf("\n p_note_for_sm[msg_line_no] is |%s|",p_note_for_sm[msg_line_no]);
				//fflush(stdout);
				//Breaking the loop in case length of the footnote becomes zero [ Production Issue ]
				if(l_length <= 0)
					break;
				if((p_note_for_sm[msg_line_no])!=NULL && l_length > 0)
				{	
					  if(strcmp(p_note_for_sm[msg_line_no],APL_NULL_STRING) != 0)
					  {
						Alert(p_note_for_sm[msg_line_no]);
					  Alert("l_length is |%d|",l_length);
						 fprintf(Data_File,"%d%s%d%c%s\n",rownum,"NEW_NOTE",msg_line_no+1,'=',p_note_for_sm[msg_line_no]);

						l_length=(l_length-strlen(p_note_for_sm[msg_line_no]));
							/* NULL asign : To Remove the chances of appending the previous message footer to next one */
							 strcpy(p_note_for_sm[msg_line_no],APL_NULL_STRING);   /* ISKB - 1628 ASHISH 27-06-2008 */
					  }
					  else
					  {
						 break;
					  }

					  msg_line_no++;
				}
		  
				else
				{
					break;
				}
		 }
		 else
		 {
				if(strcmp(p_note[msg_line_no].detail,APL_NULL_STRING)!=0 && l_length > 0)
				{	
					  Alert("p_note[msg_line_no].detail is |%s|",p_note[msg_line_no].detail);
					  Alert("l_length is |%d|",l_length);
					  if(strcmp(p_note[msg_line_no].detail,APL_NULL_STRING) != 0)
					  {
						 fprintf(Data_File,"%d%s%d%c%s\n",rownum,"NEW_NOTE",msg_line_no+1,'=',p_note[msg_line_no].detail);

						l_length=(l_length-strlen(p_note[msg_line_no].detail));
								/* NULL asign : To Remove the chances of appending the previous message footer to next one */
								strcpy(p_note[msg_line_no].detail,APL_NULL_STRING); /* ISKB - 1628 ASHISH 27-06-2008 */

					  }
					  else
					  {
						   break;
					  }
			
					  msg_line_no++;
				}
				else
				{
					  break;
				}
		  }
    }
	Alert("Checking for additional footnote tag");	
	fflush(stdout);
	
	if(strcmp(p_SEL_VAL_568[1].link_tag,"SM")==0)
   {
   	if(APL_FAILURE == CA_Proc_FtNtData(p_SEL_VAL_568[5].link_tag,
                                    	chr_p_msgno,
                                    	Data_File,
                                    	&rownum,
                                    	l_debug_info_ptr))
   	{
   		APL_GOBACK_FAIL
   	}
   }

	printf("\n  h_file name is :%s:",chr_l_data_fname);
	fflush(stdout);
	
	if(strcmp(p_cont_568,"Y")==0)
	  	fprintf(Data_File,"%d%s\n",rownum,"IS_568_CONT=Y"); 
	else
	  	fprintf(Data_File,"%d%s\n",rownum,"IS_568_CONT=N"); 
   fprintf(Data_File,"%s\n","2EOF=T");
   fprintf(Data_File,"%s\n","2ACCOUNT=");
   fprintf(Data_File,"%s\n","2PROC_INIT=");

   l_ms_msgent_struct.swift_msg_seqno = *p_msg_seq_no;
	printf("\n  h_file name is :%s:",chr_l_data_fname);
	fflush(stdout);
	printf("\n inside send568 p_msg_seq_no is :%ld: ",(*p_msg_seq_no));
	fflush(stdout);
   int_returnval = MS_Rtv_DataFlName(chr_l_dummy_data_fname,p_msg_seq_no,l_debug_info_ptr);
   
	printf("\n increamented p_msg_seq_no is :%ld: ",(*p_msg_seq_no));
	fflush(stdout);
	printf("\n  h_file name is :%s:",chr_l_data_fname);
	fflush(stdout);
	if(strcmp(p_SEL_VAL_568[1].link_tag,"SM")==0)
   	strcpy(l_ms_msgent_struct.swift_msg_no,"568N01");
	else
   	strcpy(l_ms_msgent_struct.swift_msg_no,"568N02");
	if((strcmp(chr_p_msgno,"563N01")==0) || (strcmp(chr_p_msgno,"563N02")==0) )
   	strcpy(l_ms_msgent_struct.proc_init,APL_NULL_STRING);
	else if((strcmp(chr_p_msgno,"563N03")==0) || (strcmp(chr_p_msgno,"566R03")==0)) 
   	strcpy(l_ms_msgent_struct.proc_init,p_SEL_VAL_568[5].link_tag);
	else
   	strcpy(l_ms_msgent_struct.proc_init,p_SEL_VAL_568[17].link_tag);

	printf("\n  h_file name is :%s:",chr_l_data_fname);
	fflush(stdout);
   strcpy(l_ms_msgent_struct.client,p_SEL_VAL_568[2].link_tag);
   strcpy(l_ms_msgent_struct.info_file,chr_l_data_fname);
   
	
        /*Isolve:362*/	
	if(strstr("551N01^551R01^552R01^552N01^560N01^560R01^564N91^564R91^568N01^568N02^568N03",chr_p_msgno) != NULL )
		{
			memset(chr_msg_param_struct,APL_NULL_CHAR,100);
			EXEC SQL SELECT :l_ms_msgent_struct.proc_init||access_stamp INTO :chr_msg_param_struct FROM CAEVENT WHERE CORP_ID = :l_ms_msgent_struct.proc_init;
			IS_ANY_ORA_ERROR
			strcpy(l_ms_msgent_struct.proc_data,chr_msg_param_struct);
			printf("*** *** MS_Proc_568Send Value of l_ms_msgent_struct.proc_data is |%s|\n",l_ms_msgent_struct.proc_data);
			fflush(stdout);
		}
	else
		{
			strcpy(l_ms_msgent_struct.proc_data,APL_NULL_STRING); 
		}
	
   
	l_ms_msgent_struct.auto_tran_ind[0] = 'Y';
	l_ms_msgent_struct.auto_tran_ind[1] =APL_NULL_CHAR;
   l_ms_msgent_struct.status_ind[0] = 'R';
   l_ms_msgent_struct.status_ind[1] = APL_NULL_CHAR;
   l_ms_msgent_struct.swift_count = 0;
   l_ms_msgent_struct.gcn_count = 0;
   l_ms_msgent_struct.telex_count = 0;
   l_ms_msgent_struct.fax_count = 0;
   l_ms_msgent_struct.clts_count = 0;
	printf("\n  l_ms_msgent_struct.info_file is :%s:",l_ms_msgent_struct.info_file);
	fflush(stdout);

   if(APL_FAILURE == MS_Mod_MsgEntAdd(l_ms_msgent_struct,&int_retstat,l_debug_info_ptr))
   {
      CO_ProcMonitor(APL_OUT_FILE,"\nFailure in MS_Mod_MsgEntAdd. Called through MS_Proc_568Send\n\n",NULL,NULL);
      APL_GOBACK_FAIL
   }
   else
      APL_GOBACK_SUCCESS

RETURN_SUCCESS:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Proc_568Send\n",NULL,NULL);
        fclose(Data_File);
		  fclose(chr_finifile);
        return APL_SUCCESS;

RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of send568\n",NULL,NULL);
        fclose(Data_File);
		  fclose(chr_finifile);
        return APL_FAILURE;
}




int MS_Rtv_OTHValues563N02(char *chr_p_msgno,int p_rec_no,MS_STATIC_VAL *p_SEL_VAL,MS_STATIC_VAL *p_STAT_VAL,int *p_rownum,long *p_msg_seq_no,FILE *p_Data_File,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{


EXEC SQL BEGIN DECLARE SECTION;


char h_currencycode[APL_CCYCODE_LEN],h_instr_isin[13],h_instr_name[131],chr_h_tinstrdesc[131],h_typeofinstr[4],h_regbrflag[3];

short i_instr_isin=0;

char h_info1[51],chr_h_note2[51],chr_h_note3[51],chr_h_note4[51],chr_h_note5[51],chr_h_note6[51];
char chr_h_note7[51],chr_h_note8[51],h_note9[51],h_note10[51],chr_h_note11[51],chr_h_note12[51];
char chr_h_note13[51],chr_h_note14[51],chr_h_note15[51],chr_h_note16[51],chr_h_note17[51];
char chr_h_note18[51],h_note19[51],h_note20[51];

char chr_h_note1_new[51],chr_h_note2_new[51],chr_h_note3_new[51],chr_h_note4_new[51],chr_h_note5_new[51];
char chr_h_note6_new[51],chr_h_note7_new[51],chr_h_note8_new[51],h_note9_new[51],h_note10_new[51];

char chr_h_note11_new[51],chr_h_note12_new[51],chr_h_note13_new[51],chr_h_note14_new[51],chr_h_note15_new[51];
char chr_h_note16_new[51],chr_h_note17_new[51],chr_h_note18_new[51],h_note19_new[51],h_note20_new[51];
char chr_h_note21_new[51],chr_h_note22_new[51],chr_h_note23_new[51],chr_h_note24_new[51],chr_h_note25_new[51];
char chr_h_note26_new[51],chr_h_note27_new[51],chr_h_note28_new[51],h_note29_new[51],h_note30_new[51];

char chr_h_note31_new[51],chr_h_note32_new[51],chr_h_note33_new[51],chr_h_note34_new[51],chr_h_note35_new[51];
char chr_h_note36_new[51],chr_h_note37_new[51],chr_h_note38_new[51],h_note39_new[51],h_note40_new[51];
char chr_h_note41_new[51],chr_h_note42_new[51],chr_h_note43_new[51],chr_h_note44_new[51],chr_h_note45_new[51];
char chr_h_note46_new[51],chr_h_note47_new[51],chr_h_note48_new[51],h_note49_new[51],h_note50_new[51];
char chr_h_note51_new[51],chr_h_note52_new[51],chr_h_note53_new[51],chr_h_note54_new[51],chr_h_note55_new[51];
char chr_h_note56_new[51],chr_h_note57_new[51],chr_h_note58_new[51],h_note59_new[51],h_note60_new[51];


short i_info1=0,i_note2=0,i_note3=0,i_note4=0,i_note5=0,i_note6=0,i_ratio_pct_ind=0;
short i_note7=0,i_note8=0,i_note9=0,i_note10=0,i_note11=0,i_note12=0;
short i_note13=0,i_note14=0,i_note15=0,i_note16=0,i_note17=0,i_note18=0;
short i_note19=0,i_note20=0;


short i_note1_new=0,i_note2_new=0,i_note3_new=0,i_note4_new=0,i_note5_new=0;
short i_note6_new=0,i_note7_new=0,i_note8_new=0,i_note9_new=0,i_note10_new=0;
 
short i_note11_new=0,i_note12_new=0,i_note13_new=0,i_note14_new=0,i_note15_new=0;
short i_note16_new=0,i_note17_new=0,i_note18_new=0,i_note19_new=0,i_note20_new=0;
short i_note21_new=0,i_note22_new=0,i_note23_new=0,i_note24_new=0,i_note25_new=0;
short i_note26_new=0,i_note27_new=0,i_note28_new=0,i_note29_new=0,i_note30_new=0;

short i_note31_new=0,i_note32_new=0,i_note33_new=0,i_note34_new=0,i_note35_new=0;
short i_note36_new=0,i_note37_new=0,i_note38_new=0,i_note39_new=0,i_note40_new=0;
short i_note41_new=0,i_note42_new=0,i_note43_new=0,i_note44_new=0,i_note45_new=0;
short i_note46_new=0,i_note47_new=0,i_note48_new=0,i_note49_new=0,i_note50_new=0;
short i_note51_new=0,i_note52_new=0,i_note53_new=0,i_note54_new=0,i_note55_new=0;
short i_note56_new=0,i_note57_new=0,i_note58_new=0,i_note59_new=0,i_note60_new=0;


double h_nominal_value=0;

int int_used_no_of_chars = 0;
int int_nlen=0;
short l_cond_seven_dec=0;
short l_cond_ca_7dec=0;
char chr_h_seven_dec_str[12]=APL_NULL_STRING;


EXEC SQL VAR h_currencycode IS STRING;
EXEC SQL VAR h_instr_isin IS STRING;
EXEC SQL VAR h_instr_name IS STRING;
EXEC SQL VAR h_instr_name IS STRING;
EXEC SQL VAR chr_h_tinstrdesc IS STRING;
EXEC SQL VAR h_typeofinstr IS STRING;
EXEC SQL VAR h_regbrflag IS STRING;
EXEC SQL VAR h_info1 IS STRING;
EXEC SQL VAR chr_h_note2 IS STRING;
EXEC SQL VAR chr_h_note3 IS STRING;
EXEC SQL VAR chr_h_note4 IS STRING;
EXEC SQL VAR chr_h_note5 IS STRING;
EXEC SQL VAR chr_h_note6 IS STRING;
EXEC SQL VAR chr_h_note7 IS STRING;
EXEC SQL VAR chr_h_note8 IS STRING;
EXEC SQL VAR h_note9 IS STRING;
EXEC SQL VAR h_note10 IS STRING;
EXEC SQL VAR chr_h_note11 IS STRING;
EXEC SQL VAR chr_h_note12 IS STRING;
EXEC SQL VAR chr_h_note13 IS STRING;
EXEC SQL VAR chr_h_note14 IS STRING;
EXEC SQL VAR chr_h_note15 IS STRING;
EXEC SQL VAR chr_h_note16 IS STRING;
EXEC SQL VAR chr_h_note17 IS STRING;
EXEC SQL VAR chr_h_note18 IS STRING;
EXEC SQL VAR h_note19 IS STRING;
EXEC SQL VAR h_note20 IS STRING;


EXEC SQL VAR chr_h_note1_new IS STRING;
EXEC SQL VAR chr_h_note2_new IS STRING;
EXEC SQL VAR chr_h_note3_new IS STRING;
EXEC SQL VAR chr_h_note4_new IS STRING;
EXEC SQL VAR chr_h_note5_new IS STRING;
EXEC SQL VAR chr_h_note6_new IS STRING;
EXEC SQL VAR chr_h_note7_new IS STRING;
EXEC SQL VAR chr_h_note8_new IS STRING;
EXEC SQL VAR h_note9_new IS STRING;
EXEC SQL VAR h_note10_new IS STRING;
 
EXEC SQL VAR chr_h_note11_new IS STRING;
EXEC SQL VAR chr_h_note12_new IS STRING;
EXEC SQL VAR chr_h_note13_new IS STRING;
EXEC SQL VAR chr_h_note14_new IS STRING;
EXEC SQL VAR chr_h_note15_new IS STRING;
EXEC SQL VAR chr_h_note16_new IS STRING;
EXEC SQL VAR chr_h_note17_new IS STRING;
EXEC SQL VAR chr_h_note18_new IS STRING;
EXEC SQL VAR h_note19_new IS STRING;
EXEC SQL VAR h_note20_new IS STRING;
EXEC SQL VAR chr_h_note21_new IS STRING;
EXEC SQL VAR chr_h_note22_new IS STRING;
EXEC SQL VAR chr_h_note23_new IS STRING;
EXEC SQL VAR chr_h_note24_new IS STRING;
EXEC SQL VAR chr_h_note25_new IS STRING;
EXEC SQL VAR chr_h_note26_new IS STRING;
EXEC SQL VAR chr_h_note27_new IS STRING;
EXEC SQL VAR chr_h_note28_new IS STRING;
EXEC SQL VAR h_note29_new IS STRING;
EXEC SQL VAR h_note30_new IS STRING;
 
EXEC SQL VAR chr_h_note31_new IS STRING;
EXEC SQL VAR chr_h_note32_new IS STRING;
EXEC SQL VAR chr_h_note33_new IS STRING;
EXEC SQL VAR chr_h_note34_new IS STRING;
EXEC SQL VAR chr_h_note35_new IS STRING;
EXEC SQL VAR chr_h_note36_new IS STRING;
EXEC SQL VAR chr_h_note37_new IS STRING;
EXEC SQL VAR chr_h_note38_new IS STRING;
EXEC SQL VAR h_note39_new IS STRING;
EXEC SQL VAR h_note40_new IS STRING;
EXEC SQL VAR chr_h_note41_new IS STRING;
EXEC SQL VAR chr_h_note42_new IS STRING;
EXEC SQL VAR chr_h_note43_new IS STRING;
EXEC SQL VAR chr_h_note44_new IS STRING;
EXEC SQL VAR chr_h_note45_new IS STRING;
EXEC SQL VAR chr_h_note46_new IS STRING;
EXEC SQL VAR chr_h_note47_new IS STRING;
EXEC SQL VAR chr_h_note48_new IS STRING;
EXEC SQL VAR h_note49_new IS STRING;
EXEC SQL VAR h_note50_new IS STRING;
EXEC SQL VAR chr_h_note51_new IS STRING;
EXEC SQL VAR chr_h_note52_new IS STRING;
EXEC SQL VAR chr_h_note53_new IS STRING;
EXEC SQL VAR chr_h_note54_new IS STRING;
EXEC SQL VAR chr_h_note55_new IS STRING;
EXEC SQL VAR chr_h_note56_new IS STRING;
EXEC SQL VAR chr_h_note57_new IS STRING;
EXEC SQL VAR chr_h_note58_new IS STRING;
EXEC SQL VAR h_note59_new IS STRING;
EXEC SQL VAR h_note60_new IS STRING;

EXEC SQL END DECLARE SECTION;


#ifdef APL_THREADS
        APL_SET_CONTEXT
        EXEC SQL CONTEXT USE :my_ctx_local;
#endif

memset(h_currencycode,APL_NULL_CHAR,APL_CCYCODE_LEN);
memset(h_instr_isin,APL_NULL_CHAR,13);
memset(h_instr_name,APL_NULL_CHAR,131);
memset(chr_h_tinstrdesc,APL_NULL_CHAR,131);
memset(h_typeofinstr,APL_NULL_CHAR,4);
memset(h_regbrflag,APL_NULL_CHAR,4);

memset(h_info1,APL_NULL_CHAR,51);
memset(chr_h_note2,APL_NULL_CHAR,51);
memset(chr_h_note3,APL_NULL_CHAR,51);
memset(chr_h_note4,APL_NULL_CHAR,51);
memset(chr_h_note5,APL_NULL_CHAR,51);
memset(chr_h_note6,APL_NULL_CHAR,51);
memset(chr_h_note7,APL_NULL_CHAR,51);
memset(chr_h_note8,APL_NULL_CHAR,51);
memset(h_note9,APL_NULL_CHAR,51);
memset(h_note10,APL_NULL_CHAR,51);
memset(chr_h_note11,APL_NULL_CHAR,51);
memset(chr_h_note12,APL_NULL_CHAR,51);
memset(chr_h_note13,APL_NULL_CHAR,51);
memset(chr_h_note14,APL_NULL_CHAR,51);
memset(chr_h_note15,APL_NULL_CHAR,51);
memset(chr_h_note16,APL_NULL_CHAR,51);
memset(chr_h_note17,APL_NULL_CHAR,51);
memset(chr_h_note18,APL_NULL_CHAR,51);
memset(h_note19,APL_NULL_CHAR,51);
memset(h_note20,APL_NULL_CHAR,51);

memset(chr_h_note1_new,APL_NULL_CHAR,51);
memset(chr_h_note2_new,APL_NULL_CHAR,51);
memset(chr_h_note3_new,APL_NULL_CHAR,51);
memset(chr_h_note4_new,APL_NULL_CHAR,51);
memset(chr_h_note5_new,APL_NULL_CHAR,51);
memset(chr_h_note6_new,APL_NULL_CHAR,51);
memset(chr_h_note7_new,APL_NULL_CHAR,51);
memset(chr_h_note8_new,APL_NULL_CHAR,51);
memset(h_note9_new,APL_NULL_CHAR,51);
memset(h_note10_new,APL_NULL_CHAR,51);

memset(chr_h_note11_new,APL_NULL_CHAR,51);
memset(chr_h_note12_new,APL_NULL_CHAR,51);
memset(chr_h_note13_new,APL_NULL_CHAR,51);
memset(chr_h_note14_new,APL_NULL_CHAR,51);
memset(chr_h_note15_new,APL_NULL_CHAR,51);
memset(chr_h_note16_new,APL_NULL_CHAR,51);
memset(chr_h_note17_new,APL_NULL_CHAR,51);
memset(chr_h_note18_new,APL_NULL_CHAR,51);
memset(h_note19_new,APL_NULL_CHAR,51);
memset(h_note20_new,APL_NULL_CHAR,51);
memset(chr_h_note21_new,APL_NULL_CHAR,51);
memset(chr_h_note22_new,APL_NULL_CHAR,51);
memset(chr_h_note23_new,APL_NULL_CHAR,51);
memset(chr_h_note24_new,APL_NULL_CHAR,51);
memset(chr_h_note25_new,APL_NULL_CHAR,51);
memset(chr_h_note26_new,APL_NULL_CHAR,51);
memset(chr_h_note27_new,APL_NULL_CHAR,51);
memset(chr_h_note28_new,APL_NULL_CHAR,51);
memset(h_note29_new,APL_NULL_CHAR,51);
memset(h_note30_new,APL_NULL_CHAR,51);
 
memset(chr_h_note31_new,APL_NULL_CHAR,51);
memset(chr_h_note32_new,APL_NULL_CHAR,51);
memset(chr_h_note33_new,APL_NULL_CHAR,51);
memset(chr_h_note34_new,APL_NULL_CHAR,51);
memset(chr_h_note35_new,APL_NULL_CHAR,51);
memset(chr_h_note36_new,APL_NULL_CHAR,51);
memset(chr_h_note37_new,APL_NULL_CHAR,51);
memset(chr_h_note38_new,APL_NULL_CHAR,51);
memset(h_note39_new,APL_NULL_CHAR,51);
memset(h_note40_new,APL_NULL_CHAR,51);
memset(chr_h_note41_new,APL_NULL_CHAR,51);
memset(chr_h_note42_new,APL_NULL_CHAR,51);
memset(chr_h_note43_new,APL_NULL_CHAR,51);
memset(chr_h_note44_new,APL_NULL_CHAR,51);
memset(chr_h_note45_new,APL_NULL_CHAR,51);
memset(chr_h_note46_new,APL_NULL_CHAR,51);
memset(chr_h_note47_new,APL_NULL_CHAR,51);
memset(chr_h_note48_new,APL_NULL_CHAR,51);
memset(h_note49_new,APL_NULL_CHAR,51);
memset(h_note50_new,APL_NULL_CHAR,51);
memset(chr_h_note51_new,APL_NULL_CHAR,51);
memset(chr_h_note52_new,APL_NULL_CHAR,51);
memset(chr_h_note53_new,APL_NULL_CHAR,51);
memset(chr_h_note54_new,APL_NULL_CHAR,51);
memset(chr_h_note55_new,APL_NULL_CHAR,51);
memset(chr_h_note56_new,APL_NULL_CHAR,51);
memset(chr_h_note57_new,APL_NULL_CHAR,51);
memset(chr_h_note58_new,APL_NULL_CHAR,51);
memset(h_note59_new,APL_NULL_CHAR,51);
memset(h_note60_new,APL_NULL_CHAR,51);
l_cond_ca_7dec=0;
if (APL_FAILURE == CO_Chk_CntryEnabled("CA_QTY_LEN","SEVEN_DEC",&l_cond_ca_7dec,l_debug_info_ptr))
{
     APL_GOBACK_FAIL;
}


if( strcmp(p_SEL_VAL[0].link_val,"RES_INSTR_CODE") == 0)
{
 if(strcmp(p_SEL_VAL[0].link_tag," ")!=0 &&
   strcmp(p_SEL_VAL[0].link_tag,APL_NULL_STRING) !=0)
 {
   memset(h_currencycode,APL_NULL_CHAR,APL_CCYCODE_LEN);
	
   memset(h_instr_isin,APL_NULL_CHAR,13);
   memset(h_instr_name,APL_NULL_CHAR,131);
   memset(chr_h_tinstrdesc,APL_NULL_CHAR,131);
   memset(h_typeofinstr,APL_NULL_CHAR,4);
   memset(h_regbrflag,APL_NULL_CHAR,3);


   EXEC SQL SELECT instr_isin,substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,35),substr(replace(replace(instr_name,chr(13),NULL),chr(10),NULL),1,60),
                   currency_cd,INSTR_TYPE,REG_BR_IND,NOMINAL_VALUE
            INTO :h_instr_isin:i_instr_isin,:h_instr_name,:chr_h_tinstrdesc,:h_currencycode,:h_typeofinstr,
                 :h_regbrflag,:h_nominal_value
            FROM MT_INSTRUMENT 
            WHERE INSTR_CODE = :p_SEL_VAL[0].link_tag;

  IS_ANY_ORA_ERROR

  if(sqlca.sqlcode == 1403)
  {
           CO_InsertErr(l_debug_info_ptr,ERR_INSTR_NOTFND, p_SEL_VAL[1].link_tag,
                                                  APL_NULL_STRING,
 			  APL_NULL_STRING, __LINE__, __FILE__);
           APL_GOBACK_FAIL;
  }
    

  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RES_INSTR_CODE=",p_SEL_VAL[0].link_tag);
  fprintf(p_Data_File,"%d%s%s%c%s\n",*p_rownum,"RCCYCODE=/",h_currencycode,'/',h_regbrflag);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RTYPEOFINSTR=",h_typeofinstr);
  fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"RESNOMVAL=",h_nominal_value);

	

  if(strcmp(p_SEL_VAL[13].link_val,"QUANTITY_RECEIVED")==0)
  {
    if(l_cond_ca_7dec!=0)
    {
      memset(chr_h_seven_dec_str,APL_NULL_CHAR,12);
      sprintf(chr_h_seven_dec_str,"%s%d%s","%d%s%.",l_mt_core_sys_params_struct_h.qty_dec_len,"lf\n");
      fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"QTY_RECD=",p_SEL_VAL[13].NUM_VAL);
      fprintf(p_Data_File,chr_h_seven_dec_str,*p_rownum,"FQTY_RECD=",p_SEL_VAL[13].NUM_VAL*h_nominal_value);
    }
    else
    {
    	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"QTY_RECD=",p_SEL_VAL[13].NUM_VAL);
    	fprintf(p_Data_File,"%d%s%lf\n",*p_rownum,"FQTY_RECD=",p_SEL_VAL[13].NUM_VAL*h_nominal_value);
	 }
  }
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RISIN=",h_instr_isin);
  fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"RESINSTR_NAME=",h_instr_name);
  fprintf(p_Data_File,"%d%s",*p_rownum,"RESSECFLG=");
  if(strncmp(chr_p_msgno,"552",3) == 0 ||
     strncmp(chr_p_msgno,"562",3) == 0)
  	fprintf(p_Data_File,"%c\n",'Y');
  else if(strcmp(p_SEL_VAL[0].link_tag,p_SEL_VAL[4].link_tag) == 0)
  	fprintf(p_Data_File,"%c\n",'N');
  else
  	fprintf(p_Data_File,"%c\n",'Y');

 }
 else
 {
  fprintf(p_Data_File,"%d%s\n",*p_rownum,"RESSECFLG=N");
 } 
}





if( !(strcmp(p_SEL_VAL[6].link_val,"LNOTE_NBR"))  ||
    !(strcmp(p_SEL_VAL[6].link_val,"LENTNOTE_NO") ))
{
   if(strcmp(p_SEL_VAL[6].link_tag," ") != 0 &&
      strcmp(p_SEL_VAL[6].link_tag,"") != 0)
   {
   exec sql select decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),51,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),101,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),151,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),201,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),251,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),301,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),351,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),401,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),451,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),501,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),551,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),601,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),651,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),701,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),751,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),801,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),851,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),901,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),951,50)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),36,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),71,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),106,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),141,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),176,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),211,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),246,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),281,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),316,35)),
						 decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),351,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),386,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),421,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),456,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),491,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),526,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),561,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),596,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),631,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),666,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),701,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),736,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),771,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),806,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),841,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),876,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),911,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),946,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),981,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1016,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1016,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1051,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1086,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1121,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1156,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1191,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1226,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1261,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1296,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1331,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1366,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1401,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1436,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1471,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1506,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1541,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1576,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1611,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1646,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1681,35)),
                   decode(INFO_1,NULL,NULL,substr(replace(replace(INFO_1,chr(13),' '),chr(10),' '),1716,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),1,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),36,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),71,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),106,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),141,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),176,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),211,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),246,35)),
                   decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),281,35)),
						 decode(INFO_2,NULL,NULL,substr(replace(replace(INFO_2,chr(13),' '),chr(10),' '),316,35))
            into :h_info1:i_info1,
                 :chr_h_note2:i_note2,
                 :chr_h_note3:i_note3,
                 :chr_h_note4:i_note4,
                 :chr_h_note5:i_note5,
                 :chr_h_note6:i_note6,
                 :chr_h_note7:i_note7,
                 :chr_h_note8:i_note8,
                 :h_note9:i_note9,
                 :h_note10:i_note10,
                 :chr_h_note11:i_note11,
                 :chr_h_note12:i_note12,
                 :chr_h_note13:i_note13,
                 :chr_h_note14:i_note14,
                 :chr_h_note15:i_note15,
                 :chr_h_note16:i_note16,
                 :chr_h_note17:i_note17,
                 :chr_h_note18:i_note18,
                 :h_note19:i_note19,
                 :h_note20:i_note20,
                 :chr_h_note1_new:i_note1_new,
                 :chr_h_note2_new:i_note2_new,
                 :chr_h_note3_new:i_note3_new,
                 :chr_h_note4_new:i_note4_new,
                 :chr_h_note5_new:i_note5_new,
                 :chr_h_note6_new:i_note6_new,
                 :chr_h_note7_new:i_note7_new,
                 :chr_h_note8_new:i_note8_new,
                 :h_note9_new:i_note9_new,
                 :h_note10_new:i_note10_new,
                 :chr_h_note11_new:i_note11_new,
                 :chr_h_note12_new:i_note12_new,
                 :chr_h_note13_new:i_note13_new,
                 :chr_h_note14_new:i_note14_new,
                 :chr_h_note15_new:i_note15_new,
                 :chr_h_note16_new:i_note16_new,
                 :chr_h_note17_new:i_note17_new,
                 :chr_h_note18_new:i_note18_new,
                 :h_note19_new:i_note19_new,
                 :h_note20_new:i_note20_new,
                 :chr_h_note21_new:i_note21_new,
                 :chr_h_note22_new:i_note22_new,
                 :chr_h_note23_new:i_note23_new,
                 :chr_h_note24_new:i_note24_new,
                 :chr_h_note25_new:i_note25_new,
                 :chr_h_note26_new:i_note26_new,
                 :chr_h_note27_new:i_note27_new,
                 :chr_h_note28_new:i_note28_new,
                 :h_note29_new:i_note29_new,
                 :h_note30_new:i_note30_new,
	              :h_note30_new:i_note30_new,
                 :chr_h_note31_new:i_note31_new,
                 :chr_h_note32_new:i_note32_new,
                 :chr_h_note33_new:i_note33_new,
                 :chr_h_note34_new:i_note34_new,
                 :chr_h_note35_new:i_note35_new,
                 :chr_h_note36_new:i_note36_new,
                 :chr_h_note37_new:i_note37_new,
                 :chr_h_note38_new:i_note38_new,
                 :h_note39_new:i_note39_new,
                 :h_note40_new:i_note40_new,
                 :chr_h_note41_new:i_note41_new,
                 :chr_h_note42_new:i_note42_new,
                 :chr_h_note43_new:i_note43_new,
                 :chr_h_note44_new:i_note44_new,
                 :chr_h_note45_new:i_note45_new,
                 :chr_h_note46_new:i_note46_new,
                 :chr_h_note47_new:i_note47_new,
                 :chr_h_note48_new:i_note48_new,
                 :h_note49_new:i_note49_new,
                 :h_note50_new:i_note50_new,
                 :chr_h_note51_new:i_note51_new,
                 :chr_h_note52_new:i_note52_new,
                 :chr_h_note53_new:i_note53_new,
                 :chr_h_note54_new:i_note54_new,
                 :chr_h_note55_new:i_note55_new,
                 :chr_h_note56_new:i_note56_new,
                 :chr_h_note57_new:i_note57_new,
                 :chr_h_note58_new:i_note58_new,
                 :h_note59_new:i_note59_new,
                 :h_note60_new:i_note60_new
            from CANOTE
            where INFO_SEQ = :p_SEL_VAL[6].link_tag;

  IS_ANY_ORA_ERROR

 

   

	int_used_no_of_chars = 750 + strlen(p_SEL_VAL[2].link_tag);

  if ( (i_info1 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",h_info1);
        int_used_no_of_chars += strlen(h_info1);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE1=",APL_NULL_STRING);
  if ( (i_note2 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
      fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE2=",chr_h_note2);
      int_used_no_of_chars += strlen(chr_h_note2);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE2=",APL_NULL_STRING);
  if ( (i_note3 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE3=",chr_h_note3);
         int_used_no_of_chars += strlen(chr_h_note3);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE3=",APL_NULL_STRING);
  if ( (i_note4 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE4=",chr_h_note4);
         int_used_no_of_chars += strlen(chr_h_note4);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE4=",APL_NULL_STRING);
  if ( (i_note5 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE5=",chr_h_note5);
         int_used_no_of_chars += strlen(chr_h_note5);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE5=",APL_NULL_STRING);
  if ( (i_note6 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE6=",chr_h_note6);
         int_used_no_of_chars += strlen(chr_h_note6);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE6=",APL_NULL_STRING);
  if ( (i_note7 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE7=",chr_h_note7);
         int_used_no_of_chars += strlen(chr_h_note7);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE7=",APL_NULL_STRING);
  if ( (i_note8 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE8=",chr_h_note8);
         int_used_no_of_chars += strlen(chr_h_note8);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE8=",APL_NULL_STRING);
  if ( (i_note9 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE9=",h_note9);
         int_used_no_of_chars += strlen(h_note9);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE9=",APL_NULL_STRING);
  if ( (i_note10 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE10=",h_note10);
         int_used_no_of_chars += strlen(h_note10);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE10=",APL_NULL_STRING);
  if ( (i_note11 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE11=",chr_h_note11);
         int_used_no_of_chars += strlen(chr_h_note11);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE11=",APL_NULL_STRING);
  if ( (i_note12 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE12=",chr_h_note12);
         int_used_no_of_chars += strlen(chr_h_note12);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE12=",APL_NULL_STRING);
  if ( (i_note13 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {

        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE13=",chr_h_note13);
         int_used_no_of_chars += strlen(chr_h_note13);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE13=",APL_NULL_STRING);
  if ( (i_note14 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE14=",chr_h_note14);
         int_used_no_of_chars += strlen(chr_h_note14);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE14=",APL_NULL_STRING);
  if ( (i_note15 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE15=",chr_h_note15);
         int_used_no_of_chars += strlen(chr_h_note15);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE15=",APL_NULL_STRING);
  if ( (i_note16 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE16=",chr_h_note16);
         int_used_no_of_chars += strlen(chr_h_note16);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE16=",APL_NULL_STRING);
  if ( (i_note17 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE17=",chr_h_note17);
         int_used_no_of_chars += strlen(chr_h_note17);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE17=",APL_NULL_STRING);
  if ( (i_note18 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE18=",chr_h_note18);
         int_used_no_of_chars += strlen(chr_h_note18);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE18=",APL_NULL_STRING);
  if ( (i_note19 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE19=",h_note19);
         int_used_no_of_chars += strlen(h_note19);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE19=",APL_NULL_STRING);
  if ( (i_note20 != -1) && (int_used_no_of_chars < (MAXSWIFTLEN - 50)) )
  {
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE20=",h_note20);
         int_used_no_of_chars += strlen(h_note20);
  }
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NOTE20=",APL_NULL_STRING);
  
  if(i_note1_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE1=",chr_h_note1_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE1=",APL_NULL_STRING);
  if(i_note2_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE2=",chr_h_note2_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE2=",APL_NULL_STRING);
  if(i_note3_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE3=",chr_h_note3_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE3=",APL_NULL_STRING);
  if(i_note4_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE4=",chr_h_note4_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE4=",APL_NULL_STRING);
  if(i_note5_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE5=",chr_h_note5_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE5=",APL_NULL_STRING);
  if(i_note6_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE6=",chr_h_note6_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE6=",APL_NULL_STRING);
  if(i_note7_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE7=",chr_h_note7_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE7=",APL_NULL_STRING);
  if(i_note8_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE8=",chr_h_note8_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE8=",APL_NULL_STRING);
  if(i_note9_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE9=",h_note9_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE9=",APL_NULL_STRING);
  if(i_note10_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE10=",h_note10_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE10=",APL_NULL_STRING);
  
  
  if(i_note11_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE11=",chr_h_note11_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE11=",APL_NULL_STRING);
  if(i_note12_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE12=",chr_h_note12_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE12=",APL_NULL_STRING);
  if(i_note13_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE13=",chr_h_note13_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE13=",APL_NULL_STRING);
  if(i_note14_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE14=",chr_h_note14_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE14=",APL_NULL_STRING);
  if(i_note15_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE15=",chr_h_note15_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE15=",APL_NULL_STRING);
  if(i_note16_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE16=",chr_h_note16_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE16=",APL_NULL_STRING);
  if(i_note17_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE17=",chr_h_note17_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE17=",APL_NULL_STRING);
  if(i_note18_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE18=",chr_h_note18_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE18=",APL_NULL_STRING);
  if(i_note19_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE19=",h_note19_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE19=",APL_NULL_STRING);
  if(i_note20_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE20=",h_note20_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE20=",APL_NULL_STRING);
  if(i_note21_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE21=",chr_h_note21_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE21=",APL_NULL_STRING);
  if(i_note22_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE22=",chr_h_note22_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE22=",APL_NULL_STRING);
  if(i_note23_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE23=",chr_h_note23_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE23=",APL_NULL_STRING);
  if(i_note24_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE24=",chr_h_note24_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE24=",APL_NULL_STRING);
  if(i_note25_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE25=",chr_h_note25_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE25=",APL_NULL_STRING);
  if(i_note26_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE26=",chr_h_note26_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE26=",APL_NULL_STRING);
  if(i_note27_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE27=",chr_h_note27_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE27=",APL_NULL_STRING);
  if(i_note28_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE28=",chr_h_note28_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE28=",APL_NULL_STRING);
  if(i_note29_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE29=",h_note29_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE29=",APL_NULL_STRING);
  if(i_note30_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE30=",h_note30_new);
  else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE30=",APL_NULL_STRING);  
  if(i_note31_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE31=",chr_h_note31_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE31=",APL_NULL_STRING);
   if(i_note32_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE32=",chr_h_note32_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE32=",APL_NULL_STRING);
   if(i_note33_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE33=",chr_h_note33_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE33=",APL_NULL_STRING);
   if(i_note34_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE34=",chr_h_note34_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE34=",APL_NULL_STRING);
   if(i_note35_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE35=",chr_h_note35_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE35=",APL_NULL_STRING);
   if(i_note36_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE36=",chr_h_note36_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE36=",APL_NULL_STRING);
   if(i_note37_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE37=",chr_h_note37_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE37=",APL_NULL_STRING);
  if(i_note38_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE38=",chr_h_note38_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE38=",APL_NULL_STRING);
   if(i_note39_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE39=",h_note39_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE39=",APL_NULL_STRING);
   if(i_note40_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE40=",h_note40_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE40=",APL_NULL_STRING);
   if(i_note41_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE41=",chr_h_note41_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE41=",APL_NULL_STRING);
   if(i_note42_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE42=",chr_h_note42_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE42=",APL_NULL_STRING);
   if(i_note43_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE43=",chr_h_note43_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE43=",APL_NULL_STRING);
   if(i_note44_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE44=",chr_h_note44_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE44=",APL_NULL_STRING);
   if(i_note45_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE45=",chr_h_note45_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE45=",APL_NULL_STRING);
   if(i_note46_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE46=",chr_h_note46_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE46=",APL_NULL_STRING);
   if(i_note47_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE47=",chr_h_note47_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE47=",APL_NULL_STRING);
   if(i_note48_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE48=",chr_h_note48_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE48=",APL_NULL_STRING);
   if(i_note49_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE49=",h_note49_new);
  else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE49=",APL_NULL_STRING);
   if(i_note50_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE50=",h_note50_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE50=",APL_NULL_STRING);
   if(i_note51_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE51=",chr_h_note51_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE51=",APL_NULL_STRING);
   if(i_note52_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE52=",chr_h_note52_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE52=",APL_NULL_STRING);
   if(i_note53_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE53=",chr_h_note53_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE53=",APL_NULL_STRING);
   if(i_note54_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE54=",chr_h_note54_new);
   else
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE54=",APL_NULL_STRING);
   if(i_note55_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE55=",chr_h_note55_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE55=",APL_NULL_STRING);
   if(i_note56_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE56=",chr_h_note56_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE56=",APL_NULL_STRING);
   if(i_note57_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE57=",chr_h_note57_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE57=",APL_NULL_STRING);
   if(i_note58_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE58=",chr_h_note58_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE58=",APL_NULL_STRING);
   if(i_note59_new != -1)
        fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE59=",h_note59_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE59=",APL_NULL_STRING);
   if(i_note60_new != -1)
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE60=",h_note60_new);
   else
         fprintf(p_Data_File,"%d%s%s\n",*p_rownum,"NEW_NOTE60=",APL_NULL_STRING);

  }
  else
  {
      int_nlen = 1;
      while(int_nlen <= 60)
      {
        if(int_nlen <= 20)
        fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"INFO",int_nlen,'=',APL_NULL_STRING);
		  
	

   
        fprintf(p_Data_File,"%d%s%d%c%s\n",*p_rownum,"NEW_NOTE",int_nlen,'=',APL_NULL_STRING);
	


			int_nlen++;
      }
      int_nlen = 0;
  }
}

APL_GOBACK_SUCCESS // AIX - Warnings removal

RETURN_SUCCESS:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Rtv_OTHValues563N02\n",NULL,NULL);

        return APL_SUCCESS;

RETURN_FAILURE:
        CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of MS_Rtv_OTHValues563N02\n",NULL,NULL);
        return APL_FAILURE;

} 

   

int CA_Proc_FtNtData(char *chr_p_ca_id,char * chr_p_msgno, FILE *p_Data_File,int *p_rownum, DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   int   dbl_i =1;
   char h_info_nbr[CA_INFOSEQ_LEN]=APL_NULL_STRING;
   char h_info1[1751] = APL_NULL_STRING;
   char h_info_class[CA_INFOSEQ_LEN] = APL_NULL_STRING;
   char h_nser_info[CA_INFOSEQ_LEN] =APL_NULL_STRING;
   char h_nrep_date_a[CA_INFOSEQ_LEN] =APL_NULL_STRING;
   char h_comp_info1[CA_INFOSEQ_LEN] =APL_NULL_STRING;
   char h_inco_info1[CA_INFOSEQ_LEN] =APL_NULL_STRING;
   char h_corp_id[CORP_ID_LEN] =APL_NULL_STRING;
   char chr_h_nser_exer_note[1751] =APL_NULL_STRING;
   char chr_h_nser_buya_note[1751] =APL_NULL_STRING;
   char chr_h_comp_note1_note[1751] =APL_NULL_STRING;
   char chr_h_inco_note1_note[1751] =APL_NULL_STRING;
   char h_swift_msg_no[7]=APL_NULL_STRING;

   char chr_h_nser_exer2[351] =APL_NULL_STRING;
   char chr_h_nser_buya2[351] =APL_NULL_STRING;
   char chr_h_comp_note2[351] =APL_NULL_STRING;
   char chr_h_inco_note2[351] =APL_NULL_STRING;


   char chr_h_nser_exer3[36] =APL_NULL_STRING;
   char chr_h_nser_buya3[36] =APL_NULL_STRING;
   char chr_h_comp_note3[36] =APL_NULL_STRING;
   char chr_h_inco_note3[36] =APL_NULL_STRING;

   
   char h_txnr_info1[CA_INFOSEQ_LEN]          =  APL_NULL_STRING;
   char chr_h_txnr_note1_note[1751]  =  APL_NULL_STRING;
   char chr_h_txnr_note2[351]        =  APL_NULL_STRING;
   char chr_h_txnr_note3[36]         =  APL_NULL_STRING;
   

   short i_info_nbr =0;
   short i_info_class =0;
   short i_nser_info =0;
   short i_nrep_date_a =0;
   short i_comp_info1 =0;
   short i_inco_info1 =0;
   short i_nser_exer_note =0;
   short i_nser_buya_note =0;
   short i_comp_note1_note =0;
   short i_inco_note1_note =0;

   
   short i_txnr_info1      =  0;
   short i_txnr_note1_note =  0;
   

	memset(h_info_nbr,APL_NULL_CHAR,CA_INFOSEQ_LEN);
	memset(h_info1,APL_NULL_CHAR,1751);
	memset(h_info_class,APL_NULL_CHAR,CA_INFOSEQ_LEN);
	memset(h_nser_info,APL_NULL_CHAR,CA_INFOSEQ_LEN);
	memset(h_nrep_date_a,APL_NULL_CHAR,CA_INFOSEQ_LEN);
	memset(h_comp_info1,APL_NULL_CHAR,CA_INFOSEQ_LEN);
	memset(h_inco_info1,APL_NULL_CHAR,CA_INFOSEQ_LEN);
	memset(h_corp_id,APL_NULL_CHAR,CORP_ID_LEN);
	memset(chr_h_nser_exer_note,APL_NULL_CHAR,1751);
	memset(chr_h_nser_buya_note,APL_NULL_CHAR,1751);
	memset(chr_h_comp_note1_note,APL_NULL_CHAR,1751);
	memset(chr_h_inco_note1_note,APL_NULL_CHAR,1751);
	memset(h_swift_msg_no,APL_NULL_CHAR,7);
	memset(chr_h_nser_exer2,APL_NULL_CHAR,351);
	memset(chr_h_nser_buya2,APL_NULL_CHAR,351);
	memset(chr_h_comp_note2,APL_NULL_CHAR,351);
	memset(chr_h_inco_note2,APL_NULL_CHAR,351);
	memset(chr_h_nser_exer3,APL_NULL_CHAR,36);
	memset(chr_h_nser_buya3,APL_NULL_CHAR,36);
	memset(chr_h_comp_note3,APL_NULL_CHAR,36);
	memset(chr_h_inco_note3,APL_NULL_CHAR,36);

   
   memset(h_txnr_info1,APL_NULL_CHAR,CA_INFOSEQ_LEN);
   memset(chr_h_txnr_note1_note,APL_NULL_CHAR,1751);
   memset(chr_h_txnr_note2,APL_NULL_CHAR,351);
   memset(chr_h_txnr_note3,APL_NULL_CHAR,36);
   

   EXEC SQL VAR h_info_nbr IS STRING;
   EXEC SQL VAR h_info_class IS STRING;
   EXEC SQL VAR h_nser_info IS STRING;
   EXEC SQL VAR h_nrep_date_a IS STRING;
   EXEC SQL VAR h_comp_info1 IS STRING;
   EXEC SQL VAR h_inco_info1 IS STRING;
   EXEC SQL VAR h_corp_id IS STRING;
   EXEC SQL VAR chr_h_nser_exer_note IS STRING;
   EXEC SQL VAR chr_h_nser_buya_note IS STRING;
   EXEC SQL VAR chr_h_comp_note1_note IS STRING;
   EXEC SQL VAR chr_h_inco_note1_note IS STRING;

   EXEC SQL VAR chr_h_nser_exer2 IS STRING;
   EXEC SQL VAR chr_h_nser_buya2 IS STRING;
   EXEC SQL VAR chr_h_comp_note2 IS STRING;
   EXEC SQL VAR chr_h_inco_note2 IS STRING;

   EXEC SQL VAR chr_h_nser_exer3 IS STRING;
   EXEC SQL VAR chr_h_nser_buya3 IS STRING;
   EXEC SQL VAR chr_h_comp_note3 IS STRING;
   EXEC SQL VAR chr_h_inco_note3 IS STRING;

   
   EXEC SQL VAR h_txnr_info1        IS STRING;
   EXEC SQL VAR chr_h_txnr_note1_note   IS STRING;
   EXEC SQL VAR chr_h_txnr_note2        IS STRING;
   EXEC SQL VAR chr_h_txnr_note3        IS STRING;
   

   strcpy(h_corp_id,chr_p_ca_id);
   strcpy(h_swift_msg_no,chr_p_msgno);

   printf("Entered CA_Proc_FtNtData\n");
   fflush(stdout);
   printf("h_ca_id is %s\n",h_corp_id);
   fflush(stdout);
   printf("h_msg_no is %s\n",h_swift_msg_no);
   fflush(stdout);

   EXEC SQL SELECT NSER_E_INFO,
                   NSER_B_INFO,
                   COMP_INFO_A,
                   INCO_INFO_A,
						 TXNR_INFO_A          
                  INTO
                  :h_nser_info:i_nser_info,
                  :h_nrep_date_a:i_nrep_date_a,
                  :h_comp_info1:i_comp_info1,
                  :h_inco_info1:i_inco_info1,
                  :h_txnr_info1:i_txnr_info1    
               FROM CAEVENT
               WHERE CORP_ID=:h_corp_id;

   IS_ANY_ORA_ERROR;
   printf("h_nser_exer is %s\n",h_nser_info);
   fflush(stdout);
   printf("h_nser_buya %s\n",h_nrep_date_a);
   fflush(stdout);
   printf(" h_comp_info1 %s\n",h_comp_info1);
   fflush(stdout);
   printf("h_inco_note1 is %s\n",h_inco_info1);
   fflush(stdout);
	printf("h_txnr_note1 is %s\n",h_txnr_info1); 
	fflush(stdout);

   if(strcmp(h_nser_info,APL_NULL_STRING)!=0)
   {
      EXEC SQL SELECT replace(replace(INFO_1,chr(13),' ' ),chr(10),' ' )
               INTO :chr_h_nser_exer_note:i_nser_exer_note
               FROM CANOTE
               WHERE INFO_SEQ = :h_nser_info
					AND 	TYPEOF_INFO IN ('NSER','NAME');	
      IS_ANY_ORA_ERROR;
   }
   printf("h_nser_exer_note is %s\n",chr_h_nser_exer_note);
   fflush(stdout);
   if(strcmp(h_nrep_date_a,APL_NULL_STRING)!=0)
   {
      EXEC SQL SELECT replace(replace(INFO_1,chr(13),' '),chr(10),' ')
               INTO :chr_h_nser_buya_note:i_nser_buya_note
               FROM CANOTE
               WHERE INFO_SEQ = :h_nrep_date_a
					AND 	TYPEOF_INFO='NSER';
      IS_ANY_ORA_ERROR;
   }

   printf("h_nser_buya_note is %s\n",chr_h_nser_buya_note);
   fflush(stdout);

   if(strcmp(h_comp_info1,APL_NULL_STRING)!=0)
   {
      EXEC SQL SELECT replace(replace(INFO_1,chr(13),' ' ),chr(10),' ' )
               INTO :chr_h_comp_note1_note:i_comp_note1_note
               FROM CANOTE
               WHERE INFO_SEQ = :h_comp_info1
					AND   TYPEOF_INFO='COMP';
      IS_ANY_ORA_ERROR;
   }

   printf("h_comp_note1_note is %s\n",chr_h_comp_note1_note);
   fflush(stdout);

      printf("h_inco_note1 is %s\n",h_inco_info1);
	  fflush(stdout);
   if(strcmp(h_inco_info1,APL_NULL_STRING)!=0)
   {
      printf("h_inco_note1 is %s\n",h_inco_info1);
	  fflush(stdout);
      printf("Entered INCO CANOTE if iv_cond\n");
	  fflush(stdout);
      printf("h_inco_note1 is %s\n",h_inco_info1);
	  fflush(stdout);
      memset(chr_h_inco_note1_note,APL_NULL_CHAR,1751);
      i_inco_note1_note=0;
      printf("i_inco_note1_note is %d\n",i_inco_note1_note);
	  fflush(stdout);
      EXEC SQL SELECT replace(replace(INFO_1,chr(13),' ' ),chr(10),' ' )
               INTO :chr_h_inco_note1_note:i_inco_note1_note
               FROM CANOTE
               WHERE INFO_SEQ = :h_inco_info1
					AND   TYPEOF_INFO='INCO';
      IS_ANY_ORA_ERROR;
   printf("INSIDE chr_h_inco_note1_note is %s\n",chr_h_inco_note1_note);
   fflush(stdout);
   }

      printf("OUTSIDE h_inco_info1 is %s\n",h_inco_info1);
	  fflush(stdout);
   printf("h_inco_note1_note is %s\n",chr_h_inco_note1_note);
   fflush(stdout);

   
   if(strcmp(h_txnr_info1,APL_NULL_STRING)!=0)
   {
      EXEC SQL SELECT replace(replace(INFO_1,chr(13),' ' ),chr(10),' ' )
               INTO :chr_h_txnr_note1_note:i_txnr_note1_note
               FROM CANOTE
               WHERE INFO_SEQ = :h_txnr_info1
               AND   TYPEOF_INFO='TXNR';
      IS_ANY_ORA_ERROR;
   }
   printf("h_txnr_note1_note is %s\n",chr_h_txnr_note1_note);
   fflush(stdout);
   

   if (strlen(chr_h_nser_exer_note)!=0)
   {
      dbl_i=1;
      strncpy(chr_h_nser_exer2,chr_h_nser_exer_note,350);
      while((strlen(chr_h_nser_exer2)!=0) && ( dbl_i<=10))
      {
         printf("h_nser_exer2 is %s\n",chr_h_nser_exer2);
		 fflush(stdout);
         memset(chr_h_nser_exer3,APL_NULL_CHAR,36);
         strncpy(chr_h_nser_exer3,chr_h_nser_exer2,35);
         fprintf(p_Data_File,"%d%s%d%s%s\n",*p_rownum,"NSER_EXER",dbl_i,"=",chr_h_nser_exer3);
         memset(chr_h_nser_exer2,APL_NULL_CHAR,351);
			if(dbl_i!=10)
         strcpy(chr_h_nser_exer2,chr_h_nser_exer_note + (dbl_i*35));
         dbl_i = dbl_i  + 1;
      }
   }
   if(strlen(chr_h_nser_buya_note)!=0)
   {
      dbl_i=1;
      strncpy(chr_h_nser_buya2,chr_h_nser_buya_note,350);
      while((strlen(chr_h_nser_buya2)!=0) && ( dbl_i<=10))
      {
         printf("h_nser_buya2 is %s\n",chr_h_nser_buya2);
		 fflush(stdout);
         memset(chr_h_nser_buya3,APL_NULL_CHAR,36);
         strncpy(chr_h_nser_buya3,chr_h_nser_buya2,35);
         fprintf(p_Data_File,"%d%s%d%s%s\n",*p_rownum,"NSER_BUYA",dbl_i,"=",chr_h_nser_buya3);
         memset(chr_h_nser_buya2,APL_NULL_CHAR,351);
			if(dbl_i!=10)
         strcpy(chr_h_nser_buya2,chr_h_nser_buya_note + (dbl_i*35));
         dbl_i = dbl_i  + 1;
      }
   }
   if(strlen(chr_h_comp_note1_note)!=0)
   {
      dbl_i=1;
      strncpy(chr_h_comp_note2,chr_h_comp_note1_note,350);
      while((strlen(chr_h_comp_note2)!=0) && ( dbl_i<=10))
      {
         printf("h_comp_note2 is %s\n",chr_h_comp_note2);
		 fflush(stdout);
         memset(chr_h_comp_note3,APL_NULL_CHAR,36);
         strncpy(chr_h_comp_note3,chr_h_comp_note2,35);
         fprintf(p_Data_File,"%d%s%d%s%s\n",*p_rownum,"COMP_NOTE",dbl_i,"=",chr_h_comp_note3);
         memset(chr_h_comp_note2,APL_NULL_CHAR,351);
			if(dbl_i!=10)
         strcpy(chr_h_comp_note2,chr_h_comp_note1_note +(dbl_i* 35));
         dbl_i = dbl_i  + 1;
      }
   }
   //printf("h_inco_note1_note length is %d\n",strlen(chr_h_inco_note1_note));Changes done for AIX Migration
   printf("h_inco_note1_note length is %d\n",(int)strlen(chr_h_inco_note1_note));
   fflush(stdout);
   if(strlen(chr_h_inco_note1_note)!=0)
   {
      dbl_i=1;
      strncpy(chr_h_inco_note2,chr_h_inco_note1_note,350);
      while((strlen(chr_h_inco_note2)!=0) && ( dbl_i<=10))
      {
         printf("h_inco_note2 is %s\n",chr_h_inco_note2);
		 fflush(stdout);
         memset(chr_h_inco_note3,APL_NULL_CHAR,36);
         strncpy(chr_h_inco_note3,chr_h_inco_note2,35);
         fprintf(p_Data_File,"%d%s%d%s%s\n",*p_rownum,"INCO_NOTE",dbl_i,"=",chr_h_inco_note3);
         memset(chr_h_inco_note2,APL_NULL_CHAR,351);
			if(dbl_i!=10)
         strcpy(chr_h_inco_note2,chr_h_inco_note1_note + (dbl_i*35));
         dbl_i = dbl_i  + 1;
      }
   }

   
   if(strlen(chr_h_txnr_note1_note)!=0)
   {
      dbl_i=1;
      strncpy(chr_h_txnr_note2,chr_h_txnr_note1_note,350);
      while((strlen(chr_h_txnr_note2)!=0) && ( dbl_i<=10))
      {
         printf("h_txnr_note2 is %s\n",chr_h_txnr_note2);
		 fflush(stdout);
         memset(chr_h_txnr_note3,APL_NULL_CHAR,36);
         strncpy(chr_h_txnr_note3,chr_h_txnr_note2,35);
         chr_h_txnr_note3[35]=APL_NULL_CHAR;
         fprintf(p_Data_File,"%d%s%d%s%s\n",*p_rownum,"TXNR_NOTE",dbl_i,"=",chr_h_txnr_note3);
         memset(chr_h_txnr_note2,APL_NULL_CHAR,351);
         if(dbl_i!=10)
         strcpy(chr_h_txnr_note2,chr_h_txnr_note1_note +(dbl_i* 35));
         dbl_i = dbl_i  + 1;
      }
   }

APL_GOBACK_SUCCESS // AIX - Warnings removal   

RETURN_SUCCESS:
      CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of CA_Proc_FtNtData\n",NULL,NULL);
      return APL_SUCCESS;

RETURN_FAILURE:
      CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of CA_Proc_FtNtData\n",NULL,NULL);
      return APL_FAILURE;
}

int MS_Rtv_568Ind(char *p_prev_seme,char *chr_p_msgno, char *p_ind_val,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
   char chr_l_new_msgno[17] = APL_NULL_STRING;
   char chr_l_ind_val[5] = APL_NULL_STRING;

   EXEC SQL VAR chr_l_new_msgno IS STRING;

   memset(chr_l_new_msgno,NULL,17);
   memset(chr_l_ind_val,NULL,5);

   printf("Entered MS_Rtv_568Ind Function successfully with parameter [%s] [%s]\n",p_prev_seme,chr_p_msgno);
   fflush(stdout);

   EXEC SQL SELECT ISO_MSG_NO INTO :chr_l_new_msgno FROM MS_MSGCRF
                     WHERE SWIFT_MSG_NO = :chr_p_msgno and rownum < 2;
   IS_ANY_ORA_ERROR

   printf("\n Message Number is : |%s|",chr_l_new_msgno);
   fflush(stdout);

   if ((strcmp(chr_l_new_msgno,"564C01")== 0) || (strcmp(chr_l_new_msgno,"564C15")== 0) || (strcmp(chr_l_new_msgno,"564C22")== 0) || (strcmp(chr_l_new_msgno,"564C42")== 0) || (strcmp(chr_l_new_msgno,"564C61")== 0))
   {
      strcpy(chr_l_ind_val,"REPE");
   }
   else if ((strcmp(chr_l_new_msgno,"564N01")== 0) || (strcmp(chr_l_new_msgno,"564N11")== 0) || (strcmp(chr_l_new_msgno,"564N12")== 0) || (strcmp(chr_l_new_msgno,"564N21")== 0) || (strcmp(chr_l_new_msgno,"564N22")== 0) || (strcmp(chr_l_new_msgno,"564N42")== 0) || (strcmp(chr_l_new_msgno,"564N61")== 0) || (strcmp(chr_l_new_msgno,"564N88")== 0) || (strcmp(chr_l_new_msgno,"564N91")== 0))
   {

      if (strlen(p_prev_seme) > 0)
      {
         if ((strcmp(chr_l_new_msgno,"564N01")== 0) || (strcmp(chr_l_new_msgno,"564N12")==0)  || (strcmp(chr_l_new_msgno,"564N22")==0) || (strcmp(chr_l_new_msgno,"564N42")==0) || (strcmp(chr_l_new_msgno,"564N61")== 0))
         {
            strcpy(chr_l_ind_val,"REPE");
         }
         else
         {
            strcpy(chr_l_ind_val,"REPL");
         }
      }
      else
      {
         strcpy(chr_l_ind_val,"NEWM");
      }
   }
   else if (strcmp(chr_l_new_msgno,"564N99")== 0)
   {
      strcpy(chr_l_ind_val,"RMDR");
   }
   /* Vaibhav I-Solve ID:248 KOTAK   These ppl want CANC to be displayed in all Reverse 568 Messages.
      Currently it displayed as NEWM in Reverse 568 Message START*/ 

   /*Isolve:362*/
  else if( (strcmp(chr_l_new_msgno,"564R01")== 0) || (strcmp(chr_l_new_msgno,"564R13")== 0) || (strcmp(chr_l_new_msgno,"564R23")== 0) || (strcmp(chr_l_new_msgno,"564R42")== 0) || (strcmp(chr_l_new_msgno,"564R61")== 0) || (strcmp(chr_l_new_msgno,"564R21")== 0) || (strcmp(chr_l_new_msgno,"564R91")== 0) || (strcmp(chr_l_new_msgno,"566R01")== 0) || (strcmp(chr_l_new_msgno,"566R07")== 0) || (strcmp(chr_l_new_msgno,"566R08")== 0) || (strcmp(chr_l_new_msgno,"564R11")== 0) || (strcmp(chr_l_new_msgno,"564R88")== 0))
   {
      strcpy(chr_l_ind_val,"CANC"); 
   }
   /* Vaibhav I-Solve ID:248 KOTAK Changes END */
   else
   {
      strcpy(chr_l_ind_val,"NEWM");
   }
   memcpy(p_ind_val,&chr_l_ind_val,sizeof(chr_l_ind_val));

APL_GOBACK_SUCCESS // AIX - Warnings removal

   RETURN_SUCCESS:
   CO_ProcMonitor(APL_OUT_FILE,"Exiting successfully  out of MS_Rtv_568Ind\n",NULL,NULL);
	return APL_SUCCESS;

   RETURN_FAILURE:
   CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccesfully out of MS_Rtv_568Ind\n",NULL,NULL);
   return APL_FAILURE;
}
