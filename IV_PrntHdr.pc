



#include <CO_Commdef.h> 
#include <string.h>
#include "IV_Control_A.h"
EXEC SQL INCLUDE SQLCA.H;
extern int int_g_eu_condexists;


int IV_Proc_PrnHeader(FILE *bill,
					 FILE *fl_userlog,	
					char *chr_p_billdt,
					char *chr_p_client,
					SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct,
					IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct ,
					char p_mastsub,
					int  *int_currpos,
					DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{


char *chr_dupaddr;

char chr_tmpaddr[181]; 
char chr_l_h_corporate_addr[321];
int int_ilen;
int i;
int int_newlen =0;
char chr_t_billdt[11];
char chr_t_prevbilldt[APL_DATE_LEN];
char chr_f_prevbilldt[APL_DATE_LEN];
char chr_t_nxtbilldt[11];
double dbl_i_outstanding=0;

double h_bill_os_amount = 0;
char *chr_f_outst;
int int_headerlen = 15;
int int_ret= 0;
int int_outstret = 0;
int int_retstat =0;
char chr_l_cname[CNAME_LEN_A]; 
char chr_l_cname1[CNAME_LEN_A]; 
char chr_l_cname2[CNAME_LEN_A]; 
int int_nlength = 0;
char chr_prev[1];
int int_icount;
int int_jcount;
char chr_new[CNAME_LEN_A];
double int_num = 20;
double roundedoutst = 0.0;
char chr_f_outst_str[30];
static int int_l_populated = 0;  
char **chr_l_tmpaddr  = NULL;
int  number_a = 0;
int int_l_lines = 0;
char chr_l_codedesc[41];

char chr_l_vatcode[51];
char chr_l_vatfootnote[121];
short i_l_vatcode;
short i_l_vatfootnote;
char **chr_l_tmpfoot  = NULL;
char chr_l_temp_footer1[241]               =  APL_NULL_STRING;
int int_l_len_footer                       =  0;
int int_l_lines_footer                     =  0;
char *chr_l_temp_footer2                   =  NULL;
int int_l_counter                          =  0;
char chr_l_line_footer[241]         =  APL_NULL_STRING;
char chr_l_footnote[241];


char chr_p_invoiceno[14];

EXEC SQL BEGIN DECLARE SECTION;
	char chr_p_dismast[APL_CLIENT_LENGTH];
	char chr_p_dismast2[APL_CLIENT_LENGTH];
	int     int_p_diff =0;
	int 	  int_p_diff1	= 0;	
	short i_mstclt;
	short i_diff;


EXEC SQL VAR l_sys_ivcntl_param_struct.b_prev_date IS STRING;
EXEC SQL VAR chr_p_dismast IS STRING;
EXEC SQL VAR chr_p_dismast2 IS STRING;
EXEC SQL VAR l_sys_ivcntl_param_struct.b_upto_date IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.client IS STRING;
EXEC SQL VAR l_iv_clt_setup_struct.b_ccycd IS STRING;
EXEC SQL VAR chr_l_h_corporate_addr IS STRING; 
EXEC SQL VAR chr_l_cname2 IS STRING;

EXEC SQL VAR chr_l_vatcode IS STRING;
EXEC SQL VAR chr_l_vatfootnote IS STRING;
EXEC SQL VAR chr_l_footnote IS STRING;



EXEC SQL END DECLARE SECTION;

	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Entering IV_Proc_PrnHeader\n",NULL,NULL);
	}



chr_f_outst = (char *)calloc(20,sizeof(char));

	
	EXEC SQL SELECT REPLACE(REPLACE(ca_address,CHR(13),'|') ,CHR(10),'|') || '|' as corporate 
	INTO :chr_l_h_corporate_addr 
	FROM MT_COMMON_SYS_PARAMS;

	IS_ANY_ORA_ERROR

	if (APL_FAILURE == CO_SplitStr( chr_l_h_corporate_addr,'|',&number_a, &chr_l_tmpaddr))
	{
		fprintf(fl_userlog,"Failure  while splitting %s \n",chr_l_h_corporate_addr);
      APL_GOBACK_FAIL
   }	
	fprintf(fl_userlog,"num1 chr_value is: %d\n",number_a);
	
	int_l_lines = number_a/2;
	int_l_lines = int_l_lines+1;
	fprintf(fl_userlog,"l_lines chr_value is: %d\n",int_l_lines);

	
	
	memset(chr_l_cname, APL_NULL_CHAR, CNAME_LEN_A);
	memset(chr_l_cname1, APL_NULL_CHAR, CNAME_LEN_A);
	memset(chr_l_cname2, APL_NULL_CHAR, CNAME_LEN_A);
	memset(chr_new, APL_NULL_CHAR, CNAME_LEN_A);
   
   memset(chr_l_vatcode,APL_NULL_CHAR,50);
   memset(chr_l_vatfootnote,APL_NULL_CHAR,120);
   memset(chr_l_footnote, APL_NULL_CHAR, 241);
   
   
   memset(chr_p_invoiceno,APL_NULL_CHAR,14);

  
if ( int_g_eu_condexists != 0)
{
/*** SUBU - Commented Below for AIX ***/
/* if ( APL_FAILURE == IV_Rtv_IVNo(chr_p_client,p_mastsub,&chr_p_invoiceno,chr_p_billdt,l_iv_clt_setup_struct.b_gen_ind,&int_retstat,l_debug_info_ptr)) */
 if ( APL_FAILURE == IV_Rtv_IVNo(chr_p_client,p_mastsub,chr_p_invoiceno,chr_p_billdt,l_iv_clt_setup_struct.b_gen_ind,&int_retstat,l_debug_info_ptr)) 
   {
      fprintf(stderr, "Cannot get Invoice No for %s\n", chr_p_client);
      APL_GOBACK_FAIL
   }

   if (strlen(chr_p_invoiceno) > 0)
   {
     fprintf(bill,"INVOICE NO: %s\n",chr_p_invoiceno);
   }
}
 

	if (l_iv_clt_setup_struct.send_to_master_ind =='S')
	{
		fprintf(bill,"\n\nTO%5s:"," " );
		(*int_currpos)++;
		(*int_currpos)++;
		
		 
		if ( APL_FAILURE == IV_Rtv_GetCname(chr_p_client, chr_l_cname, &int_retstat, 
												  l_debug_info_ptr) )
		{
			fprintf(stderr, "Cannot get Corporate Name for %s\n", chr_p_client);
			APL_GOBACK_FAIL
		}
		
		int_nlength = strlen(chr_l_cname); 
      for (int_icount=0,int_jcount=0;int_icount<=int_nlength;)
      {
      	if (chr_l_cname[int_icount] == ' ' )
      	{
         	if (chr_prev[0] != ' ')
         	{
            	chr_new[int_jcount]=chr_l_cname[int_icount];
            	int_jcount=int_jcount+1;
         	}
         	chr_prev[0] = chr_l_cname[int_icount];
         	chr_prev[1] = '\0';
      	}
      	else
      	{
         	chr_new[int_jcount] = chr_l_cname[int_icount];
         	chr_prev[0] = 'u';
         	chr_prev[1] = '\0';
         	int_jcount=int_jcount+1;
      	}
      	int_icount= int_icount+1;
   	}
      sprintf(chr_l_cname1,"%s",chr_new);
		 
		fprintf(bill,"%s%s\n","      ",chr_l_cname1);
		(*int_currpos)++;
	}
	else 
	{

		

		if (APL_FAILURE == IV_Rtv_Dist_MastAcc(chr_p_client,chr_p_dismast,chr_p_billdt,&int_retstat,l_debug_info_ptr))
		{
			
			if (int_retstat == IV_CRITCAL_ERROR_IND)
			{
				APL_GOBACK_FAIL
			}
			else if (int_retstat == IV_NO_DATA_FOUND_ERR)
			{
				EXEC SQL SELECT cln_master into :chr_p_dismast
							  FROM MT_CLIENT
                      WHERE cln_code = :chr_p_client ;
				
				IS_ANY_ORA_ERROR
			}
		}

		fprintf(bill,"\n\nTO%5s:"," ");
		(*int_currpos)++;
		(*int_currpos)++;
		 
		if ( APL_FAILURE == IV_Rtv_GetCname(chr_p_dismast, chr_l_cname, &int_retstat, 
												  l_debug_info_ptr) )
		{
			fprintf(stderr, "Cannot get Corporate Name for %s\n", chr_p_dismast);
			APL_GOBACK_FAIL
		}
 
		

      int_nlength = strlen(chr_l_cname);
      for (int_icount=0,int_jcount=0;int_icount<=int_nlength;)
      {
         if (chr_l_cname[int_icount] == ' ' )
         {
            if (chr_prev[0] != ' ')
            {
               chr_new[int_jcount]=chr_l_cname[int_icount];
               int_jcount=int_jcount+1;
            }
            chr_prev[0] = chr_l_cname[int_icount];
            chr_prev[1] = '\0';
         }
         else
         {
            chr_new[int_jcount] = chr_l_cname[int_icount];
            chr_prev[0] = 'u';
            chr_prev[1] = '\0';
            int_jcount=int_jcount+1;
         }
         int_icount= int_icount+1;
      }
      sprintf(chr_l_cname1,"%s",chr_new);
      fprintf(bill,"%s%s\n","      ",chr_l_cname1);
      (*int_currpos)++;
		
	}
fprintf(bill,"FROM%3s:"," ");
fprintf(bill,"%6s%s\n"," ",(g_mt_commonsys_params_struct_h.ca_identname));
(*int_currpos)++;




	/* OPT:AIX chr_dupaddr = &g_mt_commonsys_params_struct_h.ca_address; */


	for (int_nlength=0;int_nlength<=number_a;)
	{
		fprintf(bill,"%14s%s\n"," ",chr_l_tmpaddr[int_nlength]);
		(*int_currpos)++;
		fprintf(fl_userlog,"The chr_value of int_nlength in the loop is: %d\n",int_nlength);
		int_nlength = int_nlength +2;
	}
	

	

	
	
	

	













	if (APL_FAILURE == CO_Pro_DateComp(l_sys_ivcntl_param_struct.b_prev_date,chr_p_billdt,&int_p_diff,l_debug_info_ptr))
	{	
		fprintf(fl_userlog,"Failed to compare bill prv chr_date and input chr_date\n");	
      APL_GOBACK_FAIL
	}
	
	if (int_p_diff <=0)
	{
		fprintf(bill,"UPTO%3s:"," ");
		strncpy(chr_t_billdt,chr_p_billdt,10);
		chr_t_billdt[10] = '\0';
		fprintf(bill,"%6s%s\n"," ",chr_t_billdt);
		(*int_currpos)++;
	}
	else
	{
        	fprintf(bill,"PERIOD :");

		
		if (APL_FAILURE == CO_Pro_AddDate(l_sys_ivcntl_param_struct.b_prev_date,1,chr_f_prevbilldt,l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Failed to add to bill prv chr_date\n");	
			APL_GOBACK_FAIL
		}
		strncpy(chr_t_prevbilldt,chr_f_prevbilldt,10);
		chr_t_prevbilldt[10] ='\0';
		fprintf(bill,"%6s%s"," ",chr_t_prevbilldt);

		fprintf(bill," TO");
		strncpy(chr_t_nxtbilldt,l_sys_ivcntl_param_struct.b_upto_date,10);
		chr_t_nxtbilldt[10] = '\0';
		fprintf(bill,"%s%s\n"," ",chr_t_nxtbilldt);
		(*int_currpos)++;

	}
	fprintf(bill,"REF%4s:%6sCUSTODY SERVICES BILL\n"," "," ");
	(*int_currpos)++;
   
	
	
	EXEC SQL SELECT cln_master, rtrim(SUBSTR(cln_name,1,35)) INTO :chr_p_dismast2, :chr_l_cname2
		      FROM MT_CLIENT
		     WHERE cln_code = :chr_p_client;
				IS_ANY_ORA_ERROR
	if (l_iv_clt_setup_struct.send_to_master_ind !='S')
	   {
	    fprintf(bill,"ACCOUNT NUMBER:");
	    fprintf(bill,"%6s%s %s\n"," ",chr_p_client,chr_l_cname2);
	   }
   else
		{
	    fprintf(bill,"ACCOUNT NUMBER:");
	    fprintf(bill,"%6s%s\n"," ",chr_p_client);
		}

     if ( int_g_eu_condexists != 0)
     {
       if ( p_mastsub == 'C' || (strcmp(chr_p_client,chr_p_dismast2) != 0  && l_iv_clt_setup_struct.b_gen_ind == 'S'))
       {
           EXEC SQL SELECT VAT_CD,VAT_NOTE
           INTO :chr_l_vatcode:i_l_vatcode,:chr_l_vatfootnote:i_l_vatfootnote
           FROM IV_CLIENTSETUP
           WHERE CLIENT = :chr_p_client;

           IS_ANY_ORA_ERROR;

           if(sqlca.sqlcode < 0)
           {
              fprintf(stderr,"Error in accessing table BCUSTSETUP.\n");
              fflush(stderr);
              APL_GOBACK_FAIL
           }

		    		fprintf(bill,"VAT CODE :");
          if (i_l_vatcode != -1) 
          {
               fprintf(bill,"%6s%s\n"," ",chr_l_vatcode);
			 }
			 else
			 {
				   fprintf(bill,"\n");	
          }	
               fprintf(bill,"VAT FOOTNOTE :");
			 if (i_l_vatfootnote != -1)
			 {	
               EXEC SQL SELECT REPLACE(REPLACE(:chr_l_vatfootnote, CHR(13),'|') ,CHR(10),'|') || '|' as information
               into :chr_l_footnote
               FROM DUAL;

               IS_ANY_ORA_ERROR
   
                if (APL_FAILURE == CO_SplitStr( chr_l_footnote,'|',&number_a, &chr_l_tmpfoot))
                {
                    fprintf(fl_userlog,"Failure  while splitting %s \n",chr_l_footnote);
                    APL_GOBACK_FAIL
                 }
   
                 int_l_lines = number_a/2;
                 int_l_lines = int_l_lines+1;
                 fprintf(fl_userlog,"l_lines chr_value is: %d\n",int_l_lines);
   
                 for (int_nlength=0;int_nlength<=number_a;)
                 {
                    strcpy(chr_l_temp_footer1,chr_l_tmpfoot[int_nlength]);
                    int_l_len_footer = strlen(chr_l_temp_footer1);
                    if(int_l_len_footer>40)
                    {
                       int_l_lines_footer = (int_l_len_footer / 40) ;
                       if(int_l_len_footer > (int_l_lines_footer * 40))
                       int_l_lines_footer++;
                       chr_l_temp_footer2 = chr_l_temp_footer1;
                       for (int_l_counter=1; int_l_counter<=int_l_lines_footer; int_l_counter++)
                       {
                          strncpy(chr_l_line_footer, chr_l_temp_footer2,40);
								  strcat(chr_l_line_footer,"\0"); //AIX - Warnings Removal
                          fprintf(bill, "\t%s\n",chr_l_line_footer);
                          chr_l_temp_footer2 = chr_l_temp_footer2 + 40;
                          if (int_l_counter < int_l_lines_footer)
								  {	
								  		fprintf(bill,"%12s"," ");
                          }	
                       }
                    }
                    else
                    {
                          fprintf(bill,"\t%s\n",chr_l_tmpfoot[int_nlength]);
                          (*int_currpos)++;
                          if ((*int_currpos) + 1 > PAGELENGTH)
                          {
                             fprintf(bill,"\f\n");
                             (*int_currpos) =1;
                          }
                    }
                       fprintf(fl_userlog,"The chr_value of int_nlength in the loop is: %d\n",int_nlength);
                       int_nlength = int_nlength +2;
                 }
          }
          else
          {
               fprintf(bill,"\n");
          }
      }
   }


	(*int_currpos)++;
	

	if ((p_mastsub=='C') || ((strcmp(chr_p_dismast2,chr_p_client) && l_iv_clt_setup_struct.b_gen_ind == 'S')))
	{
		fprintf(bill,"THIS IS THE CONSOLIDATED BILL FOR ALL YOUR ACCOUNTS\n\n");
		(*int_currpos)++;
		(*int_currpos)++;
	}
	
   if (APL_FAILURE == CO_Pro_DateComp(l_sys_ivcntl_param_struct.b_upto_date,chr_p_billdt,&int_p_diff1,l_debug_info_ptr))
   {
      fprintf(fl_userlog,"Failed to compare bill prv chr_date and input chr_date\n");
      APL_GOBACK_FAIL
   }
	
	
	 if ((l_sys_ivcntl_param_struct.generate_ind =='N') || (int_p_diff1 < 0)) 
		{
		printf(" entering N & int_p_diff1 < 0 :: l_iv_clt_setup_struct.last_lost_amt is %f\n",l_iv_clt_setup_struct.last_lost_amt); //AIX - Warnings Removal
		EXEC SQL SELECT B_OUTS_AMOUNT into :h_bill_os_amount  from IV_OUTSTANDINGAMT
		where client = :l_iv_clt_setup_struct.client
		and dateof_billing = :chr_p_billdt ;

		 IS_ANY_ORA_ERROR
		if (sqlca.sqlcode == 1403)
			dbl_i_outstanding = l_iv_clt_setup_struct.last_lost_amt; 
		else
			dbl_i_outstanding = h_bill_os_amount;	
		}
	else 
		dbl_i_outstanding = l_iv_clt_setup_struct.total_osamount;	

	
	

	if((p_mastsub == 'C') || ( (strcmp(chr_p_dismast2,chr_p_client) && l_iv_clt_setup_struct.b_gen_ind == 'S')))
	{
		if (dbl_i_outstanding >=0)
     			fprintf(bill,"OUTSTANDING BALANCE");
		else
		{
			fprintf(bill,"CREDIT BALANCE");
			dbl_i_outstanding = -dbl_i_outstanding; 
		}


	   fprintf(bill,"%5s%s"," ",l_iv_clt_setup_struct.b_ccycd);
		int_outstret = IV_Proc_Round(&dbl_i_outstanding,l_iv_clt_setup_struct.b_ccycd,chr_f_outst,l_debug_info_ptr);
		if (int_outstret == 1)
		{
		   memset(chr_f_outst_str, APL_NULL_CHAR, 30);
			sscanf(chr_f_outst,"%lf",&roundedoutst);
	      
			
			CO_Rtv_FormatAmtCcy(roundedoutst, chr_f_outst_str, 'Y', 'Y', l_iv_clt_setup_struct.b_ccycd,l_debug_info_ptr) ;
			strcpy(chr_f_outst, chr_f_outst_str + 10); 
			if ( roundedoutst != 0)
			    fprintf(bill,"%2s%s"," ",chr_f_outst);
		   else
			    fprintf(bill,"%2s          0.00"," ");
		}
		else
			APL_GOBACK_FAIL
	}
	

	
	if(l_iv_clt_setup_struct.comm_tax_amt > 0) 
	{

		fprintf(bill,"\n TAX AT %.2lf PERCENT IS INCLUDED IN THE BILL\n",l_iv_clt_setup_struct.comm_tax_amt);
	}
	


	fprintf(bill,"\nCURRENT PROCEEDS: \n\n");
	(*int_currpos)++;
	(*int_currpos)++;
	(*int_currpos)++;





	{
	RETURN_SUCCESS:
        APL_IF_DEBUG
		  {
				CO_ProcMonitor(APL_OUT_FILE,"Exiting peacefully out of IV_Proc_PrnHeader\n",NULL,NULL);
		  }
        	return(APL_SUCCESS);

	RETURN_FAILURE:
        APL_IF_DEBUG
		  {
				CO_ProcMonitor(APL_OUT_FILE,"Exiting unsuccessfully out of IV_Proc_PrnHeader\n",NULL,NULL);

		  }
       		return (APL_FAILURE);
	}

}
int IV_Rtv_GetCname(char *chr_p_client, char *chr_p_cname, int *int_p_retstat, DEBUG_INFO_STRUCT_H *l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

		char h_clnt_clr_name[CNAME_LEN_A];
		short int i_clnt_clr_name = 0;
		struct sqlca sqlca;

	EXEC SQL END DECLARE SECTION;

	memset(h_clnt_clr_name, APL_NULL_CHAR, CNAME_LEN_A);

	EXEC SQL SELECT CLN_NAME
				INTO :h_clnt_clr_name INDICATOR :i_clnt_clr_name
				FROM MT_CLIENT
				WHERE CLN_CODE = :chr_p_client;

	if ( sqlca.sqlcode < 0 )
	{
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
	}

	IS_ANY_ORA_ERROR

	if ( APL_ZERO_RESULT_SET )
	{
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;		
		APL_GOBACK_FAIL
	}

	strcpy(chr_p_cname, h_clnt_clr_name);
	*int_p_retstat = IV_SUCCESS;

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS:

		return APL_SUCCESS;

	RETURN_FAILURE:

		return APL_FAILURE;
}
