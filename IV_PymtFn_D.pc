













 
#include "stdio_64.h"
#include "IV_Control_A.h"
#include "CR_Common.h"


EXEC SQL INCLUDE SQLCA;

int   IV_Mod_IVPymt_ActGen_Dt( char					*p_batch_no, 
											int              *int_p_retstat,
                                 DEBUG_INFO_STRUCT_H     **l_debug_info_ptr)
{


   char  chr_h_system_date[APL_DATE_LEN] =APL_NULL_STRING;
   char  h_access_stamp[APL_DATE_LEN] =APL_NULL_STRING;

   EXEC SQL BEGIN DECLARE SECTION;
	char	h_proc_num[5];
	EXEC SQL VAR h_proc_num IS STRING;
      struct sqlca sqlca;

   EXEC SQL VAR chr_h_system_date is STRING;

   EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

	strcpy(h_proc_num,p_batch_no);

   

   if (APL_FAILURE == CO_RtvSysDt(chr_h_system_date,l_debug_info_ptr) )
   {
      printf("Could not get system chr_date \n");
      APL_GOBACK_FAIL;
   }

   if (APL_FAILURE == CO_RtvSysDtTime(h_access_stamp,l_debug_info_ptr) )
   {
      printf("Could not get real system time\n");
      APL_GOBACK_FAIL;
   }

   EXEC SQL UPDATE IV_CHEQUE
       SET AE_DT = :chr_h_system_date,
           ACCESS_STAMP = :h_access_stamp
     	 WHERE PROC_NUM = :h_proc_num; 

   if ( sqlca.sqlcode < 0 )
   {
      char chr_l_buffer[KEY_LENGTH];

      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

      ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

      *int_p_retstat = IV_CRITCAL_ERROR_IND;

      CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
                APL_NULL_STRING, APL_NULL_STRING,
                __LINE__, __FILE__);

      APL_GOBACK_FAIL
   }
   else if ( sqlca.sqlcode == 1403 )
   {
      *int_p_retstat = IV_NO_DATA_FOUND_ERR;

      APL_GOBACK_FAIL
   }

   *int_p_retstat = IV_SUCCESS;

   APL_GOBACK_SUCCESS;
	
	RETURN_SUCCESS:

      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of BBDbUpdBPAYMENTAccGendt().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }

      return APL_SUCCESS;

   RETURN_FAILURE:

      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of BBDbUpdBPAYMENTAccGenDt().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }

      return APL_FAILURE;
}

int   IV_Mod_IVPymt_Btch_No(IV_CHEQUE_STRUCT		*p_iv_cheque_struct, 
										char					*p_batch_no,
                               int              *int_p_retstat,
                               DEBUG_INFO_STRUCT_H     **l_debug_info_ptr)
{

   EXEC SQL BEGIN DECLARE SECTION;
	char		chr_h_system_date[APL_DATE_LEN]	= APL_NULL_STRING;

	short    i_proc_num 							= 0;
	short		i_system_date 						= 0;
      struct sqlca sqlca;
	
	EXEC SQL VAR chr_h_system_date IS STRING;
   EXEC SQL END DECLARE SECTION;

   #ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

	if (APL_FAILURE == CO_RtvSysDtTime(chr_h_system_date, l_debug_info_ptr ))
	{
		APL_GOBACK_FAIL
	}


   EXEC SQL UPDATE IV_CHEQUE
       SET PROC_NUM =:p_batch_no:i_proc_num,
				ACCESS_STAMP =:chr_h_system_date:i_system_date
       WHERE DATEOF_PAYMENT = :p_iv_cheque_struct->dateof_payment 
				 AND CLIENT = :p_iv_cheque_struct->client
				 AND INDEN_NUM = :p_iv_cheque_struct->inden_num;

	IS_ANY_ORA_ERROR;

   if ( sqlca.sqlcode < 0 )
   {
      char chr_l_buffer[KEY_LENGTH];

      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

      *int_p_retstat = IV_CRITCAL_ERROR_IND;

      CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
                APL_NULL_STRING, APL_NULL_STRING,
                __LINE__, __FILE__);

      APL_GOBACK_FAIL
   }
   else if ( sqlca.sqlcode == 1403 )
   {
      *int_p_retstat = IV_NO_DATA_FOUND_ERR;

      APL_GOBACK_FAIL
   }

   *int_p_retstat = IV_SUCCESS;

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of BBDbUpdBPAYMENBatchNo().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }

      return APL_SUCCESS;

   RETURN_FAILURE:

      APL_IF_DEBUG

		{
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of IV_Mod_IVPymt_Btch_No().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }

      return APL_FAILURE;
}







int   IV_Mod_IVPymt_NulBtch_No(char           *p_batch_no,
                                 int            *int_p_retstat,
                                 DEBUG_INFO_STRUCT_H   **l_debug_info_ptr)
{

   

   EXEC SQL BEGIN DECLARE SECTION;
	char		chr_h_system_date[APL_DATE_LEN] =APL_NULL_STRING;
   char     h_proc_num[5]     = APL_NULL_STRING;
   char     chr_h_upd_batch_no[5] = APL_NULL_STRING;

   short    i_upd_batch_no = -1;

	short		i_system_date  = 0;
      struct sqlca sqlca;

	EXEC SQL VAR chr_h_system_date IS STRING;
   EXEC SQL END DECLARE SECTION;


   #ifdef APL_THREADS
      APL_SET_CONTEXT
      EXEC SQL CONTEXT USE :my_ctx_local;
   #endif

	if (APL_FAILURE == CO_RtvSysDtTime(chr_h_system_date,l_debug_info_ptr))
	{
		APL_GOBACK_FAIL
	}	


	strcpy(h_proc_num,p_batch_no);


   EXEC SQL UPDATE IV_CHEQUE
            SET PROC_NUM = :chr_h_upd_batch_no:i_upd_batch_no,
					 ACCESS_STAMP = :chr_h_system_date:i_system_date
            WHERE PROC_NUM = :h_proc_num;

   if ( sqlca.sqlcode < 0 )
   {
      char chr_l_buffer[KEY_LENGTH];

      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

      ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

      CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
                APL_NULL_STRING, APL_NULL_STRING,
                __LINE__, __FILE__);

      APL_GOBACK_FAIL
   }
   else if ( sqlca.sqlcode == 1403 )
   {
      CO_InsertErr(l_debug_info_ptr,ERR_BATCHNO_NOTFND,
                     APL_NULL_STRING,APL_NULL_STRING,
                     APL_NULL_STRING,__LINE__,__FILE__);
      APL_GOBACK_FAIL
   }
   IS_ANY_ORA_ERROR;


   if ( sqlca.sqlcode < 0 )
   {
      char chr_l_buffer[KEY_LENGTH];

      memset(chr_l_buffer, APL_NULL_CHAR, KEY_LENGTH);

		ltoa_r(sqlca.sqlcode, chr_l_buffer, KEY_LENGTH - 1);

      *int_p_retstat = IV_CRITCAL_ERROR_IND;

      CO_InsertErr(l_debug_info_ptr, DB_ERR_NO, chr_l_buffer,
                APL_NULL_STRING, APL_NULL_STRING,
                __LINE__, __FILE__);

      APL_GOBACK_FAIL
   }
   else if ( sqlca.sqlcode == 1403 )
   {
      *int_p_retstat = IV_NO_DATA_FOUND_ERR;

      APL_GOBACK_FAIL
   }

   *int_p_retstat = IV_SUCCESS;

   APL_GOBACK_SUCCESS

   RETURN_SUCCESS:
      APL_IF_DEBUG
      {
         CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully out of BBDbUpdBPAYMENNUllBatchNo().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }

      return APL_SUCCESS;

   RETURN_FAILURE:

      APL_IF_DEBUG

		{
         CO_ProcMonitor(APL_OUT_FILE, "Exiting unsuccessfully out of IV_Mod_IVPymt_NulBtch_No().\n", (DEBUG_INFO_STRUCT_H **)NULL, (INTL_ENV_DATA_STRUCT_H *)NULL);
      }

      return APL_FAILURE;
}
