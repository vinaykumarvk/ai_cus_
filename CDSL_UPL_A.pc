/*
**    COPYRIGHT NOTICE
**
**   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
**
**   These materials are confidential and proprietary to
**    Polaris Software Lab Limited and no part of these materials should
**    be reproduced, published, transmitted or distributed in any form or
**    by any means, electronic, mechanical, photocopying, recording or
**    otherwise, or stored in any information storage or retrieval system
**    of any nature nor should the materials be disclosed to third parties
**    or used in any other manner for which this is not authorized, without
**    the prior express written authorization of Polaris Software Lab Limited.
**/
/*********************************************************************
**
** Module Name     :      DEAL PROCESSING
**
** File Name           :      CDSL_UPL_A.pc
**
** Description         :      Upload of Statement of Holding -CDSL (Line 01)
**
**
**
**            Version Control Block
**
** Date        Version     Author           Description        RFS No.
** ---------   --------  ---------------  ------------------   ---------
** 22/11/2006	  1.0     Amol Kulkarni
**************************************************************************/

#include<stdio_64.h>
#include <stdlib.h>
#include "Intellect_Common.h"
#include "Intellect_Interface.h"
#include "DL_Interface.h"
#include "BT_Common.h"
#include "Intellect_Error.h"
#include "CO_IndStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

int DL_ModDB_CDSL_UPL_A(CDSL_UPL_A_STRUCT_H *p_cdsl_upl_a_struct_h , INTL_ENV_DATA_STRUCT_H *p_intl_envdatastruct_h , DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	/* Variable Declarations */
	CDSL_UPL_A_STRUCT_I *l_cdsl_upl_a_struct_i;

	struct sqlca sqlca;

	printf("\n\n********************Inside DL_ModDB_CDSL_UPL_A*********************");

	/*Calloc*/
	l_cdsl_upl_a_struct_i=(CDSL_UPL_A_STRUCT_I*)calloc(1,sizeof(CDSL_UPL_A_STRUCT_I));
	APL_MALLOC_FAIL(l_cdsl_upl_a_struct_i)
	
   if(!strcmp(p_cdsl_upl_a_struct_h->h_line_ind,"01"))	/**Isolve-142:Changes:AmitB:200307:Only for RecordNo 01 **/
   {
	EXEC SQL UPDATE CDSL_UPL_A SET STATUS='CC';
	if(sqlca.sqlcode)
	{
		printf("\n SQLCODE for Update is |%d|\n ",sqlca.sqlcode);
	}
	IS_ANY_ORA_ERROR
	EXEC SQL COMMIT;
	IS_ANY_ORA_ERROR
	/*printf("\n\n********************After memory allocation*********************");*/

	if (!strlen(p_cdsl_upl_a_struct_h->h_line_ind)) l_cdsl_upl_a_struct_i->i_line_ind =-1;
	else l_cdsl_upl_a_struct_i->i_line_ind =0;

	if (!strlen(p_cdsl_upl_a_struct_h->h_dp_id)) l_cdsl_upl_a_struct_i->i_dp_id =-1;
	else l_cdsl_upl_a_struct_i->i_dp_id =0;

	if (!strlen(p_cdsl_upl_a_struct_h->h_client_cd)) l_cdsl_upl_a_struct_i->i_client_cd =-1;
	else l_cdsl_upl_a_struct_i->i_client_cd =0;

	if (!strlen(p_cdsl_upl_a_struct_h->h_upl_date)) l_cdsl_upl_a_struct_i->i_upl_date =-1;
	else l_cdsl_upl_a_struct_i->i_upl_date =0;
	
	if (!strlen(p_cdsl_upl_a_struct_h->h_status)) l_cdsl_upl_a_struct_i->i_status =-1;
	else l_cdsl_upl_a_struct_i->i_status =0;

	printf("\n\n*********************Before Insert*********************");
        //AIX- Warnings Removal -- Added (int)
	printf("\nLINE_IND |%s|, Length |%d|",p_cdsl_upl_a_struct_h->h_line_ind,(int)strlen(p_cdsl_upl_a_struct_h->h_line_ind));
	printf("\nDEPO_ID |%s|, Length |%d|",p_cdsl_upl_a_struct_h->h_dp_id,(int)strlen(p_cdsl_upl_a_struct_h->h_dp_id));
	printf("\nCLIENT_CD |%s|, Length |%d|",p_cdsl_upl_a_struct_h->h_client_cd,(int)strlen(p_cdsl_upl_a_struct_h->h_client_cd));
	printf("\nUPL_DATE |%s|, Length |%d|",p_cdsl_upl_a_struct_h->h_upl_date,(int)strlen(p_cdsl_upl_a_struct_h->h_upl_date));
	printf("\nSTATUS|%s|, Length |%d|",p_cdsl_upl_a_struct_h->h_status,(int)strlen(p_cdsl_upl_a_struct_h->h_status));

	
	EXEC SQL INSERT INTO CDSL_UPL_A VALUES (:p_cdsl_upl_a_struct_h:l_cdsl_upl_a_struct_i);
	if(sqlca.sqlcode)
	{
		printf("\n Failed SQLCODE is |%d|\n ",sqlca.sqlcode);
	}
	IS_ANY_ORA_ERROR

   }
	APL_GOBACK_SUCCESS		 		 		 		 		 		 		 

	RETURN_SUCCESS: 
		printf("\n Sucess Inside DL_ModDB_CDSL_UPL_A \n");		 		 
		return(APL_SUCCESS);

	RETURN_FAILURE:
		printf("\n Error Inside DL_ModDB_CDSL_UPL_A \n");
		return(APL_FAILURE);
}
