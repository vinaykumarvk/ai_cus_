


   
   
   
   
   
   
   
   
   
   
   
   




#include "CO_HostStructdef.h"

#define SEPERATOR			 9
#define CLIENT_LEN_B			11
#define CNAME_LEN				36
#define ADDRESS_LEN			106
#define CLT_GRP_LEN			5
#define CLH_CLIENT_LEN_B		11
#define CLIENT_REG_LEN				11
#define SAT_OPCD_LEN		11
#define PART_IND_LEN_A			2
#define AUTH_BUNCHIND_LEN	2
#define CLH_CLIENT_TYPE		3
#define BIC_CD_LEN			13
#define SHORT_NAME_LEN_A			13
#define DOMICILE_LEN			2
#define USE_ISIN_IND_LEN		2
#define EXT_CLHCLIENT_LEN  13
#define INTER_CLIENT_LEN		21

#define SEC_CD_LEN_B				9
#define INSTR_NAME_LEN_A			131
#define CORP_NAME_LEN			36
#define CORP_ADDRESS_LEN			106
#define INSTR_ISIN_LEN_G				13
#define CCY_CD_LEN			4
#define MAKER				15
#define CREATE_DATE 			20
#define CHECKER_LEN			15
#define AUTHORISE_DATE_LEN			20
#define SHORT_NAME_LEN_B		16
#define IPO_IND_LEN				2
#define VALID_IPO_DATE_LEN		20
#define TYPOF_SEC_LEN			4

#define FAIL_CD_LEN			3
#define SATUS_QUAL_LEN		5
#define STATUS_CD_LEN		7
#define REAS_QUAL_LEN			7
#define REAS_CD_LEN			5
#define FAIL_DET_LEN			33
#define FAIL_DESC_LEN			51
#define CODEWORD_LEN			21

#define H_DATE			20
#define H_TYPE			3	
#define H_REASON		31
#define BRNCH_HOL_IND_LEN	2
#define OLD_HOL_TYPE_LEN	3
#define OLD_HOL_REAS_LEN	31
#define OLD_BRNCH_HOL_IND_LEN 2

#define ASSIS_CD_LEN		13
#define LRBK_CD_LEN			11
#define LRBK_MASTCLT_LEN		11
#define LRBK_OPCD_LEN		11
#define MAST_CLT_LEN				11
#define CUSTODIAN_LEN			11
#define MAUAL_IND_LEN		2

EXEC SQL INCLUDE sqlca;

main(int argc,char **argv)
{
	DEBUG_INFO_STRUCT_H			*l_debug_info_ptr 		= NULL;
	FILE						*l_ptr_ini_file 	= NULL;
	FILE						*l_ptr_log_file 	= NULL;
	INTL_ENV_DATA_STRUCT_H	l_intl_envdatastruct_h;
	char						chr_l_inifile[PATH_LENGTH]  = APL_NULL_STRING;
	char						chr_uname[APL_USERID_LEN]   = APL_NULL_STRING;
	char						chr_passwd[APL_PASSWD_LEN]  = APL_NULL_STRING;
	char						chr_custody_id_b[APL_USERID_LEN]  = APL_NULL_STRING;
	int						int_l_flg  = 0;
	int						int_retval = 0;
	int						int_l_int_count = 0;
	char						chr_l_buf[BUFFER_LEN] = APL_NULL_STRING;
	struct sqlca			sqlca;

	memset(&l_intl_envdatastruct_h,NULL,sizeof(INTL_ENV_DATA_STRUCT_H));
	
	sqlca.sqlcode = 0;

	
	strcpy(l_intl_envdatastruct_h.usr, argv[3]);
	strcpy(l_intl_envdatastruct_h.h_mode, argv[4]);
	strcpy(l_intl_envdatastruct_h.processtion, argv[5]);
	strcpy(l_intl_envdatastruct_h.auth_req, argv[6]);
	strcpy(l_intl_envdatastruct_h.subprocess, argv[7]);
	strcpy(l_intl_envdatastruct_h.h_process, argv[8]);
	
	strcpy(chr_l_inifile,getenv("INTL_ROOT_PATH"));
	strcat(chr_l_inifile,"intl_sun.cfg");

	if ((l_ptr_ini_file = fopen(chr_l_inifile,"r")) == NULL)
		exit(-1);
	
	APL_FETCH_DB_LOGIN_DETAILS(l_ptr_ini_file,chr_custody_id_b,chr_uname,chr_passwd,APL_OUT_FILE,&l_debug_info_ptr)
	
	
	
	if (CO_Con_Db(chr_uname,chr_passwd,&l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL

	

	int_retval = CO_Rtv_RptFileName("6f",APL_LOGFILE_DESC,100,argv[5],argv,&l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

	

	EXEC SQL COMMIT WORK;
	
	if (sqlca.sqlcode != 0)
	{
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);

		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}
	
	memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
	sprintf(chr_l_buf,"SMI Handoff File - GREECE");
	
	fprintf(l_ptr_log_file,"\n");
	fprintf(l_ptr_log_file,"    		%s\n",chr_l_buf);
	fprintf(l_ptr_log_file,"    		-------------------------\n\n");
	fprintf(l_ptr_log_file,"Work Committed after chr_logfile creation \n");

	

	if (CO_RtvSysParams(&l_debug_info_ptr) != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to get system parameters - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL	
	}

	
	 
	int_retval = CO_Pro_LocRec(argv,l_ptr_log_file,&l_debug_info_ptr);

	if (int_retval != APL_SUCCESS)
	{
		CO_ProcMonitor(l_ptr_log_file,"Unable to lock BATCH_IN_PROC record - Rollback done \n",NULL,&l_intl_envdatastruct_h);
		EXEC SQL ROLLBACK WORK RELEASE;
		APL_GOBACK_FAIL
	}

	

   	EXEC SQL Select count(*) into :int_l_int_count from MT_COMMON_SYS_PARAMS where ei_smi_ind = 'Y' ;

		IS_ANY_ORA_ERROR

		if( !int_l_int_count )
		{
			CO_ProcMonitor(l_ptr_log_file,"SMI Not Installed!\n",NULL,&l_intl_envdatastruct_h);
			EXEC SQL ROLLBACK WORK RELEASE;
			APL_GOBACK_SUCCESS
		}

  if ( EOD_Proc_SMIHoff(argv,l_ptr_ini_file,l_ptr_log_file,&l_intl_envdatastruct_h,&l_debug_info_ptr) != APL_SUCCESS )
  {
		int_l_flg = 1;

	   CO_Mod_Batch_Status(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);
		
		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);
		}
		APL_GOBACK_FAIL	
	}
	else
	{
		int_l_flg = 0;

		CO_Mod_Batch_Status(argv,l_ptr_log_file,&l_debug_info_ptr,int_l_flg);

		if (CO_ChkErr(l_debug_info_ptr) == APL_SUCCESS)
		{
			CO_ProcMonitor(l_ptr_log_file,APL_NULL_STRING,&l_debug_info_ptr,&l_intl_envdatastruct_h);
			CO_FreeErrLst(&l_debug_info_ptr);
		}
		APL_GOBACK_SUCCESS
	}
	  
	APL_GOBACK_SUCCESS


	RETURN_SUCCESS	:
	{
		CO_ProcMonitor(l_ptr_log_file,"SUCCESS from SMI Hand-off h_file generation program \n",NULL,NULL);
		CO_ProcMonitor(l_ptr_log_file,"Exiting Main Function Successfully\n",NULL,NULL);
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);
		fclose(l_ptr_ini_file);
		exit(0);
	}

	RETURN_FAILURE	:
	{
		CO_ProcMonitor(l_ptr_log_file,"FAILURE from SMI Hand-off h_file generation program \n",NULL,&l_intl_envdatastruct_h);
		CO_ProcMonitor(l_ptr_log_file,"Exiting Main Function Unsuccessfully\n",NULL,NULL);
		CO_Proc_RptClose(l_ptr_log_file,&l_debug_info_ptr);
		fclose(l_ptr_ini_file);
  		exit(-1);
	}
}
 



 
int EOD_Proc_SMIHoff(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_e,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char chr_command[4*PATH_LENGTH]		        = APL_NULL_STRING ;
	char chr_l_str_hoffdir[PATH_LENGTH]		     = APL_NULL_STRING ;
	char chr_l_str_hofftempdir[PATH_LENGTH]	     = APL_NULL_STRING ;

	if( CR_Proc_SMIAccFile(argv,p_ptr_ini_file,p_ptr_log_file,p_intl_env_data_struct_h_e,l_debug_info_ptr) != APL_SUCCESS )
	{
	   CO_ProcMonitor(p_ptr_log_file, "CDBGenSmi_ACFn Failed \n",NULL,p_intl_env_data_struct_h_e);
	   APL_GOBACK_FAIL
   }

	if( CR_Proc_SMIInstrFile(argv,p_ptr_ini_file,p_ptr_log_file,p_intl_env_data_struct_h_e,l_debug_info_ptr) != APL_SUCCESS )
	{
	   CO_ProcMonitor(p_ptr_log_file, "CDBGenSmi_SEFn Failed \n",NULL,p_intl_env_data_struct_h_e);
	   APL_GOBACK_FAIL
   }

	if( CR_Proc_SMIFailCdFile(argv,p_ptr_ini_file,p_ptr_log_file,p_intl_env_data_struct_h_e,l_debug_info_ptr) != APL_SUCCESS )
	{
	   CO_ProcMonitor(p_ptr_log_file, "CDBGenSmi_FCFn Failed \n",NULL,p_intl_env_data_struct_h_e);
	   APL_GOBACK_FAIL
   }

	if( CR_Proc_SMIHolFile(argv,p_ptr_ini_file,p_ptr_log_file,p_intl_env_data_struct_h_e,l_debug_info_ptr) != APL_SUCCESS )
	{
	   CO_ProcMonitor(p_ptr_log_file, "CDBGenSmi_HYFn Failed \n",NULL,p_intl_env_data_struct_h_e);
	   APL_GOBACK_FAIL
   }

	if( CR_Proc_SMIAssisFile(argv,p_ptr_ini_file,p_ptr_log_file,p_intl_env_data_struct_h_e,l_debug_info_ptr) != APL_SUCCESS )
	{
	   CO_ProcMonitor(p_ptr_log_file, "CDBGenSmi_ASFn Failed \n",NULL,p_intl_env_data_struct_h_e);
	   APL_GOBACK_FAIL
   }

	if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_EIPATH",chr_l_str_hoffdir,l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL;

	if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_EIPATH_T",chr_l_str_hofftempdir,l_debug_info_ptr) != APL_SUCCESS)
		APL_GOBACK_FAIL;

	strcpy(chr_command,"mv -f ");
	strcat(chr_command,chr_l_str_hofftempdir);
	strcat(chr_command,"* "); 
	strcat(chr_command,chr_l_str_hoffdir);
	strcat(chr_command,".");
	system(chr_command);

	fprintf(p_ptr_log_file,"SMI HandOff Directory = %s\n",chr_l_str_hoffdir);
	fprintf(p_ptr_log_file, "Handoff Files Moved to the SMI HandOff Dir from temp dir\n");

 APL_GOBACK_SUCCESS

 
 RETURN_SUCCESS :
 {
  fprintf(p_ptr_log_file,"Leaving processtion EOD_Proc_SMIHoff successfully\n");
  CO_FreeErrLst(l_debug_info_ptr);
  return(APL_SUCCESS);
 }


 RETURN_FAILURE :
 {
	fprintf(p_ptr_log_file,"Leaving processtion EOD_Proc_SMIHoff with failure\n");
	CO_FreeErrLst(l_debug_info_ptr);
	return(APL_FAILURE);
 }


}






int CR_Proc_SMIAccFile(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		struct sqlca 		  		sqlca;
		FILE							*l_ptr_acfile 								= NULL;
		INTL_REPT_STRUCT_H 				*l_intl_rept_struct_ha     						= NULL;
		char							chr_l_handoff_dir[PATH_LENGTH] 			= APL_NULL_STRING;
		char							chr_l_str_acline[355] 						= APL_NULL_STRING;
		char							chr_l_rep_name[9]		 						= APL_NULL_STRING;

	   char							h_dl_client[CLIENT_LEN_B] 				= APL_NULL_STRING;
	   char							h_mstclt[CLIENT_LEN_B] 				= APL_NULL_STRING;
		char							h_clnt_clr_name[CNAME_LEN] 					= APL_NULL_STRING;
		char							h_contactinfo[ADDRESS_LEN] 				= APL_NULL_STRING;
		char							h_clt_grp[CLT_GRP_LEN] 				= APL_NULL_STRING; 
		char							h_clhclient[CLH_CLIENT_LEN_B] 		= APL_NULL_STRING;
		char 							h_cltreg[CLIENT_REG_LEN] 					= APL_NULL_STRING;
		char							h_sat_oper_cd[SAT_OPCD_LEN] 		= APL_NULL_STRING;
		char 							chr_h_partial[PART_IND_LEN_A] 				= APL_NULL_STRING;
		double						h_tolerance_val	= 0.0;
		char							h_maker[MAKER] 					= APL_NULL_STRING;
		char							h_checker[CHECKER_LEN] 				= APL_NULL_STRING;
		char 							h_maker_dt[CREATE_DATE] 				= APL_NULL_STRING;
		char 							h_checker_dt[AUTHORISE_DATE_LEN] 			= APL_NULL_STRING;
		char							h_authbunch_ind[AUTH_BUNCHIND_LEN]= APL_NULL_STRING;
		char							h_clnt_class[CLH_CLIENT_TYPE] 		= APL_NULL_STRING;
		char 							brk_cd[BIC_CD_LEN] 			= APL_NULL_STRING;
		char 							h_shortclr_name[SHORT_NAME_LEN_A] 			= APL_NULL_STRING;
		char							h_currencycode[CCY_CD_LEN] 				= APL_NULL_STRING;
		char							h_domestic[DOMICILE_LEN] 			= APL_NULL_STRING;
		char							h_instr_isinuseflg[USE_ISIN_IND_LEN] 		= APL_NULL_STRING;
		char							h_ext_clhclient[EXT_CLHCLIENT_LEN]	= APL_NULL_STRING;
		char							h_internal_clt[INTER_CLIENT_LEN]		= APL_NULL_STRING;
		char							chr_l_str_tolerance[8]							= APL_NULL_STRING;
	   
		char 							chr_l_sysdate_b[7]  = APL_NULL_STRING ;
		char							chr_l_acfile_name[PATH_LENGTH] = APL_NULL_STRING;
		char							chr_l_acfile[PATH_LENGTH] = APL_NULL_STRING;
		char							chr_l_fname[PATH_LENGTH] = APL_NULL_STRING;
	   
		short							i_dl_client 		= 0;
		short							i_mstclt 		= 0;
		short 						i_clnt_clr_name 			= 0;
		short							i_contactinfo 		= 0;
		short							i_clt_grp 		= 0;
		short							i_clhclient 	= 0;
		short 						i_cltreg 		= 0;
		short 						i_sat_oper_cd 	= 0;
		short 						i_partial 		= 0;
		short							i_tolerance_val		= 0;
		short							i_maker 			= 0;
		short 						i_checker 		= 0;
		short 						i_maker_dt 		= 0;
		short 						i_checker_dt 	= 0;
		short 						i_authbunch_flag 	= 0;
		short							i_clnt_class 	= 0;
		short 						i_brk_cd 		= 0;
		short							i_shortclr_name 	= 0;
		short							i_currencycode 		= 0;
		short 						i_domestic 		= 0;
		short 						i_instr_isinuseflg 	= 0;
		short 						i_ext_clhaccount 	= 0;
		short 						i_internal_clt 	= 0;

		EXEC SQL VAR h_dl_client 		IS STRING; 
		EXEC SQL VAR h_mstclt 		IS STRING; 
		EXEC SQL VAR h_clnt_clr_name 		IS STRING;
		EXEC SQL VAR h_contactinfo 		IS STRING;
		EXEC SQL VAR h_clt_grp 		IS STRING;
		EXEC SQL VAR h_clhclient 	IS STRING;
		EXEC SQL VAR h_cltreg 		IS STRING;
		EXEC SQL VAR h_sat_oper_cd 	IS STRING;
		EXEC SQL VAR chr_h_partial 		IS STRING;
		EXEC SQL VAR h_maker 		IS STRING;
		EXEC SQL VAR h_maker_dt 		IS STRING; 
		EXEC SQL VAR h_checker 		IS STRING;
		EXEC SQL VAR h_checker_dt 	IS STRING;
		EXEC SQL VAR h_authbunch_ind 	IS STRING;
		EXEC SQL VAR h_clnt_class 		IS STRING;
		EXEC SQL VAR brk_cd 		IS STRING;
		EXEC SQL VAR h_shortclr_name 		IS STRING;
		EXEC SQL VAR h_currencycode 			IS STRING;
		EXEC SQL VAR h_domestic			IS STRING;
		EXEC SQL VAR h_instr_isinuseflg		IS STRING;
		EXEC SQL VAR h_ext_clhclient	IS STRING;
		EXEC SQL VAR h_internal_clt	IS STRING;

		memset(h_dl_client,			APL_NULL_CHAR, CLIENT_LEN_B);
		memset(h_mstclt,			APL_NULL_CHAR, CLIENT_LEN_B);
		memset(h_clnt_clr_name,			APL_NULL_CHAR, CNAME_LEN);
		memset(h_contactinfo,			APL_NULL_CHAR, ADDRESS_LEN);
		memset(h_clt_grp,			APL_NULL_CHAR,	CLT_GRP_LEN);
		memset(h_clhclient,		APL_NULL_CHAR,	CLH_CLIENT_LEN_B);
		memset(h_cltreg,			APL_NULL_CHAR,	CLIENT_REG_LEN);
		memset(h_sat_oper_cd,		APL_NULL_CHAR,	SAT_OPCD_LEN);
		memset(chr_h_partial,			APL_NULL_CHAR,	PART_IND_LEN_A);
		memset(h_maker,			APL_NULL_CHAR,	MAKER);
		memset(h_maker_dt ,		APL_NULL_CHAR,	CREATE_DATE);
		memset(h_checker,			APL_NULL_CHAR,	AUTHORISE_DATE_LEN);
		memset(h_authbunch_ind,	APL_NULL_CHAR,	AUTH_BUNCHIND_LEN);
		memset(h_clnt_class,		APL_NULL_CHAR,	CLH_CLIENT_TYPE);
		memset(brk_cd,		APL_NULL_CHAR,	BIC_CD_LEN);
		memset(h_shortclr_name,		APL_NULL_CHAR,	SHORT_NAME_LEN_A);
		memset(h_currencycode,			APL_NULL_CHAR,	CCY_CD_LEN);
		memset(h_domestic,		APL_NULL_CHAR,	DOMICILE_LEN);
		memset(h_instr_isinuseflg,		APL_NULL_CHAR,	USE_ISIN_IND_LEN);
		memset(h_ext_clhclient,APL_NULL_CHAR,	EXT_CLHCLIENT_LEN);
		memset(h_internal_clt,	APL_NULL_CHAR,	INTER_CLIENT_LEN);
		
		memset(chr_l_str_tolerance,	APL_NULL_CHAR,	8);

		memset(chr_l_handoff_dir,APL_NULL_CHAR,sizeof(chr_l_handoff_dir));
		memset(chr_l_acfile_name,APL_NULL_CHAR,sizeof(chr_l_acfile_name));
		memset(chr_l_acfile,APL_NULL_CHAR,sizeof(chr_l_acfile));
		memset(chr_l_fname,APL_NULL_CHAR,sizeof(chr_l_fname));
		memset(chr_l_rep_name,APL_NULL_CHAR,sizeof(chr_l_rep_name));
		
		sqlca.sqlcode = 0;
		
		fprintf(p_ptr_log_file,"Entered processtion CR_Proc_SMIAccFile \n");

		l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha);

		if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_EIPATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
			return(APL_FAILURE);

		EXEC SQL select to_char(SYS_DATE,'mmddyy') into :chr_l_sysdate_b from pro_sys_date ;	

		strcat(chr_l_handoff_dir,"temp/");
      strcat(chr_l_fname,"AC");
		
		if (CR_Rtv_HFName(chr_l_acfile_name,chr_l_fname) != APL_SUCCESS) 
			return(APL_FAILURE);

		strcpy(chr_l_acfile,chr_l_handoff_dir);
		strcat(chr_l_acfile,chr_l_acfile_name);

		fprintf(p_ptr_log_file,"Accounts SMIHOFF h_file name=%s\n",chr_l_acfile);

		if ((l_ptr_acfile = fopen(chr_l_acfile,"w")) == NULL)
			return(APL_FAILURE);

 		strcpy(l_intl_rept_struct_ha->report_name, chr_l_acfile_name);
  		strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
  		strcat(l_intl_rept_struct_ha->report_desc, " : Accounts"); 
		strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	 	l_intl_rept_struct_ha->report_width = 100 ;
	  	strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha->usr, argv[3]);

		 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
			APL_GOBACK_FAIL

		EXEC SQL DECLARE caccount_cur CURSOR FOR
			SELECT 	A.CLN_CODE,A.CLN_NAME, replace(replace(A.CLN_CONTACT1,chr(13),NULL),chr(10),NULL) , A.CLN_GRP,A.CLN_CLH, 
						A.CLN_REG, A.CLN_SAT_OPER_CD, A.CLN_PARTIAL_IND,A.CLN_TOLERANCE,A.MAKER,A.MAKER_DT,
						A.CHECKER,A.CHECKER_DT,A.CLN_AUTHBUNCH_IND,A.CLN_TYPE,A.CLN_BRK_CD,
						A.CLN_SHORTNM,A.CLN_CURRENCY,A.CLN_DOMICILE,A.CLN_USE_ISIN_IND,substr(A.CLN_EXT_CLH,1,12),A.CLN_INTERNAL,
						A.CLN_MASTER
			FROM 		MT_CLIENT A
			WHERE		A.STATUS = 'AA';

		IS_ANY_ORA_ERROR  

		EXEC SQL OPEN caccount_cur;

		IS_ANY_ORA_ERROR

		for( ; ; )
		{
			EXEC SQL FETCH caccount_cur
			INTO 	:h_dl_client:i_dl_client,
					:h_clnt_clr_name:i_clnt_clr_name,
					:h_contactinfo:i_contactinfo,		
					:h_clt_grp:i_clt_grp,
					:h_clhclient:i_clhclient,
					:h_cltreg:i_cltreg,	
					:h_sat_oper_cd:i_sat_oper_cd,
					:chr_h_partial:i_partial,
					:h_tolerance_val:i_tolerance_val,
					:h_maker:i_maker,
					:h_maker_dt:i_maker_dt,
					:h_checker:i_checker,
					:h_checker_dt:i_checker_dt,
					:h_authbunch_ind:i_authbunch_flag,
					:h_clnt_class:i_clnt_class,
					:brk_cd:i_brk_cd,
					:h_shortclr_name:i_shortclr_name,
					:h_currencycode:i_currencycode,
					:h_domestic:i_domestic,
					:h_instr_isinuseflg:i_instr_isinuseflg,
					:h_ext_clhclient:i_ext_clhaccount,
					:h_internal_clt:i_internal_clt,
					:h_mstclt:i_mstclt;

			IS_ANY_ORA_ERROR

			if (APL_ZERO_RESULT_SET)
				break ;

			strcpy(chr_l_str_acline,"");
			CR_PadStrRight(chr_l_str_acline,h_dl_client,10,"Y");
			CR_PadStrRight(chr_l_str_acline,h_clnt_clr_name,35,"Y");
			CR_PadStrRight(chr_l_str_acline,h_contactinfo,105,"Y");
			CR_PadStrRight(chr_l_str_acline,h_clt_grp,4,"Y");
			CR_PadStrRight(chr_l_str_acline,h_clhclient,10,"Y");
			CR_PadStrRight(chr_l_str_acline,h_cltreg,10,"Y");
			CR_PadStrRight(chr_l_str_acline,h_sat_oper_cd,10,"Y");
			CR_PadStrRight(chr_l_str_acline,chr_h_partial,1,"Y");
			sprintf(chr_l_str_tolerance,"%0.2f",h_tolerance_val);
			CR_PadStrRight(chr_l_str_acline,chr_l_str_tolerance,7,"Y");
			CR_PadStrRight(chr_l_str_acline,h_maker,14,"Y");
			CR_PadStrRight(chr_l_str_acline,h_maker_dt,19,"Y");
			CR_PadStrRight(chr_l_str_acline,h_checker,14,"Y");
			CR_PadStrRight(chr_l_str_acline,h_checker_dt,19,"Y");
			CR_PadStrRight(chr_l_str_acline,h_authbunch_ind,1,"Y");
			CR_PadStrRight(chr_l_str_acline,h_clnt_class,2,"Y");
			CR_PadStrRight(chr_l_str_acline,brk_cd,12,"Y");
			CR_PadStrRight(chr_l_str_acline,h_shortclr_name,12,"Y");
			CR_PadStrRight(chr_l_str_acline,h_currencycode,3,"Y");
			CR_PadStrRight(chr_l_str_acline,h_domestic,1,"Y");
			CR_PadStrRight(chr_l_str_acline,h_instr_isinuseflg,1,"Y");
			CR_PadStrRight(chr_l_str_acline,h_ext_clhclient,12,"Y");
			CR_PadStrRight(chr_l_str_acline,h_internal_clt,20,"Y");
			CR_PadStrRight(chr_l_str_acline,h_mstclt,10,"N");

			fprintf(l_ptr_acfile,chr_l_str_acline);
			fprintf(l_ptr_acfile,"\n");
			
		}	

		EXEC SQL CLOSE caccount_cur ;

		IS_ANY_ORA_ERROR


	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CR_Proc_SMIAccFile successfully\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_acfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CR_Proc_SMIAccFile with failure\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_acfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_FAILURE);
	}
}





int CR_Proc_SMIInstrFile(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		struct sqlca 		  		sqlca;
		FILE							*l_ptr_sefile 								= NULL;
		INTL_REPT_STRUCT_H 				*l_intl_rept_struct_ha     						= NULL;
		char							chr_l_handoff_dir[PATH_LENGTH] 			= APL_NULL_STRING;
		char							chr_l_str_seline[411] 						= APL_NULL_STRING;
		char							chr_l_rep_name[9]		 						= APL_NULL_STRING;

	   char							h_instr_code[SEC_CD_LEN_B] 					= APL_NULL_STRING;
	   char							h_instr_name[INSTR_NAME_LEN_A] 				= APL_NULL_STRING;
	   char							h_ca_clr_name[CORP_NAME_LEN] 			= APL_NULL_STRING;
	   char							h_ca_addrdet[CORP_ADDRESS_LEN] 			= APL_NULL_STRING;
	   char							h_instr_isin[INSTR_ISIN_LEN_G] 						= APL_NULL_STRING;
	   char							h_currencycode[CCY_CD_LEN] 				= APL_NULL_STRING;
	   char							h_maker[MAKER] 					= APL_NULL_STRING;
	   char							h_maker_dt[CREATE_DATE] 				= APL_NULL_STRING;
	   char							h_checker[CHECKER_LEN] 				= APL_NULL_STRING;
	   char							h_checker_dt[AUTHORISE_DATE_LEN] 			= APL_NULL_STRING;
	   char							h_instr_shortnm[SHORT_NAME_LEN_B] 		= APL_NULL_STRING;
	   char							h_ipo_ind[IPO_IND_LEN] 					= APL_NULL_STRING;
	   char							h_ipo_valid_date[VALID_IPO_DATE_LEN]	= APL_NULL_STRING;
	  	char							h_typeofinstr[TYPOF_SEC_LEN]				= APL_NULL_STRING;

	   char 							chr_l_sysdate_b[7]  						= APL_NULL_STRING;
		char							chr_l_sefile_name[PATH_LENGTH] 	= APL_NULL_STRING;
		char							chr_l_sefile[PATH_LENGTH] 			= APL_NULL_STRING;
		char							chr_l_fname[PATH_LENGTH] 			= APL_NULL_STRING;

		short							i_instr_code 		= 0;
		short							i_instr_name 		= 0;
		short							i_ca_clr_name 	= 0;
		short							i_ca_addrdet 	= 0;
		short							i_instr_isin 			= 0;
		short							i_currencycode 		= 0;
		short							i_maker 			= 0;
		short							i_maker_dt 		= 0;
		short							i_checker 		= 0;
		short							i_checker_dt 	= 0;
		short							i_instr_shortnm 	= 0;
		short							i_ipo_ind 		= 0;
		short							i_ipo_valid_date = 0;
		short							i_typeofinstr		= 0;

		EXEC SQL VAR h_instr_code 			IS STRING;
		EXEC SQL VAR h_instr_name 			IS STRING;
		EXEC SQL VAR h_ca_clr_name	 	IS STRING;
		EXEC SQL VAR h_ca_addrdet		IS STRING;
		EXEC SQL VAR h_instr_isin				IS STRING;
		EXEC SQL VAR h_currencycode			IS STRING;
		EXEC SQL VAR h_maker 			IS STRING; 
		EXEC SQL VAR h_maker_dt 			IS STRING; 
		EXEC SQL VAR h_checker 			IS STRING;
		EXEC SQL VAR h_checker_dt 		IS STRING;
		EXEC SQL VAR h_instr_shortnm 		IS STRING;
		EXEC SQL VAR h_ipo_ind 			IS STRING;
		EXEC SQL VAR h_ipo_valid_date 	IS STRING;
		EXEC SQL VAR h_typeofinstr		 	IS STRING;

		memset(chr_l_handoff_dir,APL_NULL_CHAR,sizeof(chr_l_handoff_dir));
		memset(chr_l_sefile_name,APL_NULL_CHAR,sizeof(chr_l_sefile_name));
		memset(chr_l_sefile,APL_NULL_CHAR,sizeof(chr_l_sefile));
		memset(chr_l_fname,APL_NULL_CHAR,sizeof(chr_l_fname));

		memset(h_instr_code,APL_NULL_CHAR,SEC_CD_LEN_B);
		memset(h_instr_name,APL_NULL_CHAR,INSTR_NAME_LEN_A);
		memset(h_ca_clr_name,APL_NULL_CHAR,CORP_NAME_LEN);
		memset(h_ca_addrdet,APL_NULL_CHAR,CORP_ADDRESS_LEN);
		memset(h_instr_isin,APL_NULL_CHAR,INSTR_ISIN_LEN_G);
		memset(h_currencycode,APL_NULL_CHAR,CCY_CD_LEN);
		memset(h_maker,APL_NULL_CHAR,MAKER);
		memset(h_maker_dt,APL_NULL_CHAR,CREATE_DATE);
		memset(h_checker,APL_NULL_CHAR,CHECKER_LEN);
		memset(h_checker_dt,APL_NULL_CHAR,AUTHORISE_DATE_LEN);
		memset(h_instr_shortnm,APL_NULL_CHAR,SHORT_NAME_LEN_B);
		memset(h_ipo_ind,APL_NULL_CHAR,IPO_IND_LEN);
		memset(h_ipo_valid_date,APL_NULL_CHAR,VALID_IPO_DATE_LEN);
		memset(h_typeofinstr,APL_NULL_CHAR,TYPOF_SEC_LEN);
		
		memset(chr_l_sysdate_b,APL_NULL_CHAR,7);
		memset(chr_l_rep_name,APL_NULL_CHAR,sizeof(chr_l_rep_name));

		fprintf(p_ptr_log_file,"Entered processtion CR_Proc_SMIInstrFile \n");

		sqlca.sqlcode = 0;
		
		l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha);

		if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_EIPATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
			return(APL_FAILURE);

		EXEC SQL select to_char(SYS_DATE,'mmddyy') into :chr_l_sysdate_b from pro_sys_date ;	

		strcat(chr_l_handoff_dir,"temp/");
      strcat(chr_l_fname,"SE");
		
		if (CR_Rtv_HFName(chr_l_sefile_name,chr_l_fname) != APL_SUCCESS) 
			return(APL_FAILURE);

			strcpy(chr_l_sefile,chr_l_handoff_dir);
			strcat(chr_l_sefile,chr_l_sefile_name);

		fprintf(p_ptr_log_file,"Instrurities SMIHOFF h_file name=%s\n",chr_l_sefile);

		if ((l_ptr_sefile = fopen(chr_l_sefile,"w")) == NULL)
			return(APL_FAILURE);

 		strcpy(l_intl_rept_struct_ha->report_name, chr_l_sefile_name);
  		strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
  	   strcat(l_intl_rept_struct_ha->report_desc, " : Instrurities"); 
		strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	 	l_intl_rept_struct_ha->report_width = 100 ;
	  	strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha->usr, argv[3]);

		 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
			APL_GOBACK_FAIL

		EXEC SQL DECLARE cinstr_cur CURSOR FOR
			SELECT 	A.INSTR_CODE,REPLACE(REPLACE(SUBSTR(A.INSTR_NAME,1,35),CHR(13),' '),chr(10)), 
						REPLACE(REPLACE(SUBSTR(A.CA_NAME,1,35),CHR(13),' '),chr(10)),
						REPLACE(REPLACE(SUBSTR(A.CA_ADDRDET,1,105),CHR(13),' '),chr(10)),
						A.INSTR_ISIN, 
						A.CURRENCY_CD,A.MAKER,A.MAKER_DT,
						A.CHECKER,A.CHECKER_DT,A.INSTR_SHORTNM,A.IPO_IND,A.VALID_IPO_DATE,A.INSTR_TYPE
			FROM 		MT_INSTRUMENT A
			WHERE		A.STATUS = 'AA' and ( A.INSTR_TYPE = 'SHS' OR A.INSTR_TYPE = 'RTS' ) ;

		IS_ANY_ORA_ERROR  

		EXEC SQL OPEN cinstr_cur;

		IS_ANY_ORA_ERROR

		for( ; ; )
		{
			EXEC SQL FETCH cinstr_cur
			INTO 	:h_instr_code:i_instr_code,
					:h_instr_name:i_instr_name,
					:h_ca_clr_name:i_ca_clr_name,		
					:h_ca_addrdet:i_ca_addrdet,
					:h_instr_isin:i_instr_isin,
					:h_currencycode:i_currencycode,	
					:h_maker:i_maker,
					:h_maker_dt:i_maker_dt,
					:h_checker:i_checker,
					:h_checker_dt:i_checker_dt,
					:h_instr_shortnm:i_instr_shortnm,
					:h_ipo_ind:i_ipo_ind,
					:h_ipo_valid_date:i_ipo_valid_date, 
					:h_typeofinstr:i_typeofinstr;

			IS_ANY_ORA_ERROR

			if (APL_ZERO_RESULT_SET)
				break;

			strcpy(chr_l_str_seline,"");
			CR_PadStrRight(chr_l_str_seline,h_instr_code,8,"Y");
			CR_PadStrRight(chr_l_str_seline,h_instr_name,130,"Y");
			CR_PadStrRight(chr_l_str_seline,h_ca_clr_name,35,"Y");
			CR_PadStrRight(chr_l_str_seline,h_ca_addrdet,105,"Y");
			CR_PadStrRight(chr_l_str_seline,h_instr_isin,12,"Y");
			CR_PadStrRight(chr_l_str_seline,h_currencycode,3,"Y");
			CR_PadStrRight(chr_l_str_seline,h_maker,14,"Y");
			CR_PadStrRight(chr_l_str_seline,h_maker_dt,19,"Y");
			CR_PadStrRight(chr_l_str_seline,h_checker,14,"Y");
			CR_PadStrRight(chr_l_str_seline,h_checker_dt,19,"Y");
			CR_PadStrRight(chr_l_str_seline,h_instr_shortnm,15,"Y");
			CR_PadStrRight(chr_l_str_seline,h_ipo_ind,1,"Y");
			CR_PadStrRight(chr_l_str_seline,h_ipo_valid_date,19,"Y");
			CR_PadStrRight(chr_l_str_seline,h_typeofinstr,3,"N");

			fprintf(l_ptr_sefile,chr_l_str_seline);
			fprintf(l_ptr_sefile,"\n");
			
		}

		EXEC SQL CLOSE cinstr_cur ;

		IS_ANY_ORA_ERROR


	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CR_Proc_SMIInstrFile successfully\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_sefile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CDBGenSmiSEFn with failure\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_sefile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_FAILURE);
	}
}





int CR_Proc_SMIFailCdFile(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		struct sqlca 		  		sqlca;
		FILE							*l_ptr_fcfile 						= NULL;
		INTL_REPT_STRUCT_H 				*l_intl_rept_struct_ha     				= NULL;
		char							chr_l_handoff_dir[PATH_LENGTH] 	= APL_NULL_STRING;
		char							chr_l_str_fcline[134] 				= APL_NULL_STRING;
		char							chr_l_rep_name[9]		 				= APL_NULL_STRING;

	   char							h_fail_cd[FAIL_CD_LEN]		= APL_NULL_STRING;
		char							h_status_qual_ind[SATUS_QUAL_LEN] = APL_NULL_STRING;
		char							h_status_cd[STATUS_CD_LEN] = APL_NULL_STRING;
		char							h_reason_ql[REAS_QUAL_LEN]  = APL_NULL_STRING;
		char							h_reason_cd[REAS_CD_LEN]  = APL_NULL_STRING;
	   char							h_faildetail[FAIL_DET_LEN] 	= APL_NULL_STRING;
	   char							h_interdetail[FAIL_DESC_LEN] 	= APL_NULL_STRING;
	   char							h_mapword[CODEWORD_LEN] 	= APL_NULL_STRING;
	   int							h_subfailreas_cd = 0;
	   char							chr_l_str_subfailcode[3] 			= APL_NULL_STRING;

	   char 							chr_l_sysdate_b[7]  						= APL_NULL_STRING;
		char							chr_l_fcfile_name[PATH_LENGTH]		= APL_NULL_STRING;
		char							chr_l_fcfile[PATH_LENGTH]		= APL_NULL_STRING;
		char							chr_l_fname[PATH_LENGTH]		= APL_NULL_STRING;

		short							i_failreas_cd 		= 0;
		short							i_status_qual_ind  = 0;
		short							i_status_cd  = 0;
		short							i_reason_ql    = 0;
		short							i_reason_cd		= 0;
		short							i_faildetail 		= 0;
		short							i_interdetail 	= 0;
		short							i_mapword	 	= 0;
		short							i_subfailreas_cd 	= 0;

		EXEC SQL VAR h_fail_cd 			IS STRING;
		EXEC SQL VAR h_status_qual_ind			IS STRING;
		EXEC SQL VAR h_status_cd			IS STRING;
		EXEC SQL VAR h_reason_ql			IS STRING;
		EXEC SQL VAR h_reason_cd			IS STRING;
		EXEC SQL VAR h_faildetail 			IS STRING;
		EXEC SQL VAR h_interdetail	 		IS STRING;
		EXEC SQL VAR h_mapword				IS STRING;

		memset(h_fail_cd,APL_NULL_CHAR,FAIL_CD_LEN);
		memset(h_status_qual_ind,APL_NULL_CHAR,SATUS_QUAL_LEN);
		memset(h_status_cd,APL_NULL_CHAR,STATUS_CD_LEN);
		memset(h_reason_ql,APL_NULL_CHAR,REAS_QUAL_LEN);
		memset(h_reason_cd,APL_NULL_CHAR,REAS_CD_LEN);
		memset(h_faildetail,APL_NULL_CHAR,FAIL_DET_LEN);
		memset(h_interdetail,APL_NULL_CHAR,FAIL_DESC_LEN);
		memset(h_mapword,APL_NULL_CHAR,CODEWORD_LEN);
		memset(chr_l_str_subfailcode,APL_NULL_CHAR,3);

		memset(chr_l_handoff_dir,APL_NULL_CHAR,sizeof(chr_l_handoff_dir));
		memset(chr_l_fcfile_name,APL_NULL_CHAR,sizeof(chr_l_fcfile_name));
		memset(chr_l_fcfile,APL_NULL_CHAR,sizeof(chr_l_fcfile));
		memset(chr_l_fname,APL_NULL_CHAR,sizeof(chr_l_fname));
		memset(chr_l_sysdate_b,APL_NULL_CHAR,7);
		memset(chr_l_rep_name,APL_NULL_CHAR,sizeof(chr_l_rep_name));
		
		sqlca.sqlcode = 0;
		
		fprintf(p_ptr_log_file,"Entered processtion CR_Proc_SMIFailCdFile \n");

		l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha);

		if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_EIPATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
			return(APL_FAILURE);

		EXEC SQL select to_char(SYS_DATE,'mmddyy') into :chr_l_sysdate_b from pro_sys_date ;	

		strcat(chr_l_handoff_dir,"temp/");
      strcat(chr_l_fname,"FC");
		
		if (CR_Rtv_HFName(chr_l_fcfile_name,chr_l_fname) != APL_SUCCESS) 
			return(APL_FAILURE);

		strcpy(chr_l_fcfile,chr_l_handoff_dir);
		strcat(chr_l_fcfile,chr_l_fcfile_name);

		fprintf(p_ptr_log_file,"FailCodes SMIHOFF h_file name=%s\n",chr_l_fcfile);

		if ((l_ptr_fcfile = fopen(chr_l_fcfile,"w")) == NULL)
			return(APL_FAILURE);

 		strcpy(l_intl_rept_struct_ha->report_name, chr_l_fcfile_name);
  		strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
  		strcat(l_intl_rept_struct_ha->report_desc, " : Fail Codes"); 
		strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	 	l_intl_rept_struct_ha->report_width = 100 ;
	  	strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha->usr, argv[3]);

		 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
			APL_GOBACK_FAIL

		EXEC SQL DECLARE cfailcode_cur CURSOR FOR
			SELECT 	A.FAILREASON_CD, A.FAILREASON_DET, A.FAIL_DESC, A.MAPWORD ,A.SUB_FAIL_CD, A.STATUS_QUAL_IND,A.STATUS_CD,A.REASON_QL,A.REASON_CD
			FROM 		PRO_FAILCODES A  
			WHERE    A.SUPPORT_IND = 'Y'; 

		IS_ANY_ORA_ERROR  

		EXEC SQL OPEN cfailcode_cur;

		IS_ANY_ORA_ERROR

		for( ; ; )
		{
			EXEC SQL FETCH cfailcode_cur
			INTO 	:h_fail_cd:i_failreas_cd,
					:h_faildetail:i_faildetail,
					:h_interdetail:i_interdetail,
					:h_mapword:i_mapword,
					:h_subfailreas_cd:i_subfailreas_cd,
					:h_status_qual_ind:i_status_qual_ind,
					:h_status_cd:i_status_cd,
					:h_reason_ql:i_reason_ql,
					:h_reason_cd:i_reason_cd;

			IS_ANY_ORA_ERROR

			if (APL_ZERO_RESULT_SET)
				break;

			strcpy(chr_l_str_fcline,"");
			CR_PadStrRight(chr_l_str_fcline,h_fail_cd,2,"Y");
			CR_PadStrRight(chr_l_str_fcline,h_faildetail,32,"Y");
			CR_PadStrRight(chr_l_str_fcline,h_interdetail,50,"Y");
			CR_PadStrRight(chr_l_str_fcline,h_mapword,20,"Y");
			sprintf(chr_l_str_subfailcode,"%d",h_subfailreas_cd);
			CR_PadStrRight(chr_l_str_fcline,chr_l_str_subfailcode,2,"Y");
			CR_PadStrRight(chr_l_str_fcline,h_status_qual_ind,4,"Y");
			CR_PadStrRight(chr_l_str_fcline,h_status_cd,6,"Y");
			CR_PadStrRight(chr_l_str_fcline,h_reason_ql,6,"Y");
			CR_PadStrRight(chr_l_str_fcline,h_reason_cd,4,"N");

			fprintf(l_ptr_fcfile,chr_l_str_fcline);
			fprintf(l_ptr_fcfile,"\n");
			
		}

		EXEC SQL CLOSE cfailcode_cur ;

		IS_ANY_ORA_ERROR


	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CR_Proc_SMIFailCdFile successfully\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_fcfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CDBGenSmiFCFn with failure\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_fcfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_FAILURE);
	}
}




int CR_Proc_SMIHolFile(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		struct sqlca 		  		sqlca;
		FILE							*l_ptr_hyfile 								= NULL;
		INTL_REPT_STRUCT_H 				*l_intl_rept_struct_ha     						= NULL;
		char							chr_l_handoff_dir[PATH_LENGTH] 			= APL_NULL_STRING;
		char							chr_l_str_hyline[162] 						= APL_NULL_STRING;
		char							chr_l_rep_name[9]		 						= APL_NULL_STRING;

		char							h_holi_dt[H_DATE] 			= APL_NULL_STRING;
		char							h_holi_class[H_TYPE] 			= APL_NULL_STRING;
		char							h_h_reas[H_REASON] 	= APL_NULL_STRING;
		char							h_maker[MAKER] 					= APL_NULL_STRING;
		char							h_maker_dt[CREATE_DATE] 				= APL_NULL_STRING;
		char							h_checker[CHECKER_LEN] 				= APL_NULL_STRING;
		char							h_checker_dt[AUTHORISE_DATE_LEN] 			= APL_NULL_STRING;
		char							h_hol_flag[BRNCH_HOL_IND_LEN] 	= APL_NULL_STRING;
		char							h_old_holi_class[OLD_HOL_TYPE_LEN] 		= APL_NULL_STRING;
		char							h_old_h_reas[OLD_HOL_REAS_LEN] 			 = APL_NULL_STRING;
		char							h_old_hol_flag[OLD_BRNCH_HOL_IND_LEN] = APL_NULL_STRING;

	   char 							chr_l_sysdate_b[7]  						= APL_NULL_STRING;
		char							chr_l_hyfile_name[PATH_LENGTH] 	= APL_NULL_STRING;
		char							chr_l_hyname[PATH_LENGTH] 	= APL_NULL_STRING;
		char							chr_l_fname[PATH_LENGTH] 	= APL_NULL_STRING;

		short							i_holi_dt 			= 0;
		short							i_holi_class 			= 0;
		short							i_h_reas 			= 0;
		short							i_maker 					= 0;
		short							i_maker_dt 				= 0;
		short							i_checker 				= 0;
		short							i_checker_dt 			= 0;
		short							i_hol_flag 	= 0;
		short							i_old_holi_class 		= 0;
		short							i_old_h_reas 	= 0;
		short							i_old_hol_flag 	= 0;

		EXEC SQL VAR	h_holi_dt 			IS STRING;
		EXEC SQL VAR	h_holi_class 			IS STRING;
		EXEC SQL VAR	h_h_reas 			IS STRING;
		EXEC SQL VAR	h_maker 					IS STRING;
		EXEC SQL VAR	h_maker_dt 				IS STRING;
		EXEC SQL VAR	h_checker 				IS STRING;
		EXEC SQL VAR	h_checker_dt 			IS STRING;
		EXEC SQL VAR	h_hol_flag 	IS STRING;
		EXEC SQL VAR	h_old_holi_class 		IS STRING; 
		EXEC SQL VAR	h_old_h_reas 	IS STRING;
		EXEC SQL VAR	h_old_hol_flag IS STRING;

		memset(h_holi_dt	,APL_NULL_CHAR,	H_DATE);
		memset(h_holi_class	,APL_NULL_CHAR,	H_TYPE);
		memset(h_h_reas	,APL_NULL_CHAR,	H_REASON);
		memset(h_maker			,APL_NULL_CHAR,	MAKER);
		memset(h_maker_dt		,APL_NULL_CHAR,	CREATE_DATE);
		memset(h_checker		,APL_NULL_CHAR,	CHECKER_LEN);
		memset(h_checker_dt	,APL_NULL_CHAR,	AUTHORISE_DATE_LEN);
		memset(h_hol_flag		,APL_NULL_CHAR,	BRNCH_HOL_IND_LEN);
		memset(h_old_holi_class			,APL_NULL_CHAR,	OLD_HOL_TYPE_LEN);
		memset(h_old_h_reas		,APL_NULL_CHAR,	OLD_HOL_REAS_LEN);
		memset(h_old_hol_flag	,APL_NULL_CHAR,	OLD_BRNCH_HOL_IND_LEN);

		memset(chr_l_handoff_dir,NULL,sizeof(chr_l_handoff_dir));
		memset(chr_l_hyfile_name,NULL,sizeof(chr_l_hyfile_name));
		memset(chr_l_hyname,NULL,sizeof(chr_l_hyname));
		memset(chr_l_fname,NULL,sizeof(chr_l_fname));
		memset(chr_l_sysdate_b,APL_NULL_CHAR,7);
		memset(chr_l_rep_name,APL_NULL_CHAR,sizeof(chr_l_rep_name));
		
		fprintf(p_ptr_log_file,"Entered processtion CR_Proc_SMIHolFile \n");
		
		sqlca.sqlcode = 0;

		l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha);

		if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_EIPATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
			return(APL_FAILURE);

		EXEC SQL select to_char(SYS_DATE,'mmddyy') into :chr_l_sysdate_b from pro_sys_date ;	

		strcat(chr_l_handoff_dir,"temp/");
      strcat(chr_l_fname,"HY");
		
		if (CR_Rtv_HFName(chr_l_hyfile_name,chr_l_fname) != APL_SUCCESS) 
			return(APL_FAILURE);

		strcpy(chr_l_hyname,chr_l_handoff_dir);
		strcat(chr_l_hyname,chr_l_hyfile_name);

		fprintf(p_ptr_log_file,"Holidays SMIHOFF h_file name=%s\n",chr_l_hyname);

		if ((l_ptr_hyfile = fopen(chr_l_hyname,"w")) == NULL)
			return(APL_FAILURE);

 		strcpy(l_intl_rept_struct_ha->report_name, chr_l_hyfile_name);
  		strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
  		strcat(l_intl_rept_struct_ha->report_desc, " : Holidays"); 
		strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	 	l_intl_rept_struct_ha->report_width = 100 ;
	  	strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha->usr, argv[3]);

		 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
			APL_GOBACK_FAIL

		EXEC SQL DECLARE choliday_cur CURSOR FOR
		SELECT 	A.H_DATE,
					A.H_CLASS,
					A.H_REASON,
					A.MAKER,
					A.MAKER_DT,
					A.CHECKER,
					A.CHECKER_DT,
					A.HOL_IND,
					A.OLD_CLASS,
					A.OLD_REASON,
					A.OLD_BRNCH_HOL_IND
		FROM 		MT_HOLIDAY A WHERE A.STATUS = 'AA' ;/*Smita - Changed Col Name - HDFCCA Base Version*/

		IS_ANY_ORA_ERROR  

		EXEC SQL OPEN choliday_cur;

		IS_ANY_ORA_ERROR

		for( ; ; )
		{
			EXEC SQL FETCH choliday_cur
			INTO 	:h_holi_dt:i_holi_dt,
					:h_holi_class:i_holi_class,
					:h_h_reas:i_h_reas,
					:h_maker:i_maker,
					:h_maker_dt:i_maker_dt,
					:h_checker:i_checker,
					:h_checker_dt:i_checker_dt,
					:h_hol_flag:i_hol_flag,
					:h_old_holi_class:i_old_holi_class,
					:h_old_h_reas:i_old_h_reas,
					:h_old_hol_flag:i_old_hol_flag ;

			IS_ANY_ORA_ERROR

			if (APL_ZERO_RESULT_SET)
				break ;

			strcpy(chr_l_str_hyline,"");
			CR_PadStrRight(chr_l_str_hyline,h_holi_dt,19,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_holi_class,2,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_h_reas,30,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_maker,14,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_maker_dt,19,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_checker,14,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_checker_dt,19,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_hol_flag,1,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_old_holi_class,2,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_old_h_reas,30,"Y");
			CR_PadStrRight(chr_l_str_hyline,h_old_hol_flag,1,"N");

			fprintf(l_ptr_hyfile,chr_l_str_hyline);
			fprintf(l_ptr_hyfile,"\n");
			
		}	

		EXEC SQL CLOSE choliday_cur ;

		IS_ANY_ORA_ERROR


	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CR_Proc_SMIHolFile successfully\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_hyfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CDBGenSmiHYFn with failure\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_hyfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_FAILURE);
	}
}




int CR_Proc_SMIAssisFile(char **argv,FILE *p_ptr_ini_file,FILE *p_ptr_log_file,INTL_ENV_DATA_STRUCT_H *p_intl_env_data_struct_h_d,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		struct sqlca 		  		sqlca;
		FILE							*l_ptr_asfile 								= NULL;
		INTL_REPT_STRUCT_H 				*l_intl_rept_struct_ha     						= NULL;
		char							chr_l_handoff_dir[PATH_LENGTH] 			= APL_NULL_STRING;
		char							chr_l_str_asline[151]							= APL_NULL_STRING;
		char							chr_l_rep_name[9]		 						= APL_NULL_STRING;

		char							h_mhlp_code[ASSIS_CD_LEN]		= APL_NULL_STRING;
		char							h_lcl_brkcd[LRBK_CD_LEN] 			= APL_NULL_STRING;
		char							h_lbrk_mstclt[LRBK_MASTCLT_LEN] 	= APL_NULL_STRING;
		char							chr_h_lbrk_op_code[LRBK_OPCD_LEN] 	= APL_NULL_STRING;
		char							h_dl_client[CLIENT_LEN_B] 				= APL_NULL_STRING;
		char							h_mstclt[MAST_CLT_LEN] 					= APL_NULL_STRING;
		char							h_custodian_clt[CUSTODIAN_LEN] 			= APL_NULL_STRING;
		char							h_manual_ind_intn[MAUAL_IND_LEN]		= APL_NULL_STRING;
	   char							h_maker[MAKER] 					= APL_NULL_STRING;
	   char							h_maker_dt[CREATE_DATE] 				= APL_NULL_STRING;
	   char							h_checker[CHECKER_LEN] 				= APL_NULL_STRING;
	   char							h_checker_dt[AUTHORISE_DATE_LEN] 			= APL_NULL_STRING;
	   
		char 							chr_l_sysdate_b[7]  = APL_NULL_STRING ;
		char							chr_l_asfile_name[PATH_LENGTH] = APL_NULL_STRING;
		char							chr_l_asfile[PATH_LENGTH] = APL_NULL_STRING;
		char							chr_l_fname[PATH_LENGTH] = APL_NULL_STRING;

		short							i_mhlp_code 		= 0;
		short							i_lcl_brkcd 		= 0;
		short							i_lbrk_mstclt 		= 0;
		short							i_lbrk_op_code		= 0;
		short							i_dl_client 			= 0;
		short							i_mstclt 			= 0;
		short							i_custodian_clt 		= 0;
		short							i_manual_ind_intn 		= 0;
		short							i_maker 			= 0;
		short							i_maker_dt 		= 0;
		short							i_checker 		= 0;
		short							i_checker_dt 	= 0;

		EXEC SQL VAR	h_mhlp_code 			IS STRING;
		EXEC SQL VAR	h_lcl_brkcd 			IS STRING;
		EXEC SQL VAR	h_lbrk_mstclt 			IS STRING;
		EXEC SQL VAR	chr_h_lbrk_op_code			IS STRING;
		EXEC SQL VAR	h_dl_client 				IS STRING;
		EXEC SQL VAR	h_mstclt					IS STRING;
		EXEC SQL VAR	h_custodian_clt 			IS STRING;
		EXEC SQL VAR	h_manual_ind_intn 			IS STRING;
		EXEC SQL VAR 	h_maker 					IS STRING; 
		EXEC SQL VAR 	h_maker_dt 				IS STRING; 
		EXEC SQL VAR 	h_checker 				IS STRING;
		EXEC SQL VAR 	h_checker_dt 			IS STRING;

		memset(h_mhlp_code	,APL_NULL_CHAR,	ASSIS_CD_LEN);
		memset(h_lcl_brkcd	,APL_NULL_CHAR,	LRBK_CD_LEN);
		memset(h_lbrk_mstclt	,APL_NULL_CHAR,	LRBK_MASTCLT_LEN);
		memset(chr_h_lbrk_op_code,APL_NULL_CHAR,	LRBK_OPCD_LEN);
		memset(h_dl_client 		,APL_NULL_CHAR,	CLIENT_LEN_B);
		memset(h_mstclt		,APL_NULL_CHAR,	MAST_CLT_LEN);
		memset(h_custodian_clt	,APL_NULL_CHAR,	CUSTODIAN_LEN);
		memset(h_manual_ind_intn	,APL_NULL_CHAR,	MAUAL_IND_LEN);
		memset(h_maker,APL_NULL_CHAR,MAKER);
		memset(h_maker_dt,APL_NULL_CHAR,CREATE_DATE);
		memset(h_checker,APL_NULL_CHAR,CHECKER_LEN);
		memset(h_checker_dt,APL_NULL_CHAR,AUTHORISE_DATE_LEN);

		memset(chr_l_handoff_dir,APL_NULL_CHAR,sizeof(chr_l_handoff_dir));
		memset(chr_l_asfile_name,APL_NULL_CHAR,sizeof(chr_l_asfile_name));
		memset(chr_l_asfile,APL_NULL_CHAR,sizeof(chr_l_asfile));
		memset(chr_l_fname,APL_NULL_CHAR,sizeof(chr_l_fname));
		memset(chr_l_sysdate_b,APL_NULL_CHAR,7);
		memset(chr_l_rep_name,APL_NULL_CHAR,sizeof(chr_l_rep_name));

		sqlca.sqlcode = 0;
		
		fprintf(p_ptr_log_file,"Entered processtion CR_Proc_SMIAssisFile \n");

		l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)calloc(1, sizeof(INTL_REPT_STRUCT_H));
		APL_MALLOC_FAIL(l_intl_rept_struct_ha);

		if (CO_ReadToken(p_ptr_ini_file,"INTL_HF_EIPATH",chr_l_handoff_dir,l_debug_info_ptr) != APL_SUCCESS)
			return(APL_FAILURE);

		EXEC SQL select to_char(SYS_DATE,'mmddyy') into :chr_l_sysdate_b from pro_sys_date ;	

		strcat(chr_l_handoff_dir,"temp/");
      strcat(chr_l_fname,"AS");
		
		if (CR_Rtv_HFName(chr_l_asfile_name,chr_l_fname) != APL_SUCCESS) 
			return(APL_FAILURE);

		strcpy(chr_l_asfile,chr_l_handoff_dir);
		strcat(chr_l_asfile,chr_l_asfile_name);

		fprintf(p_ptr_log_file,"Assis Codes SMIHOFF h_file name=%s\n",chr_l_asfile);

		if ((l_ptr_asfile = fopen(chr_l_asfile,"w")) == NULL)
			return(APL_FAILURE);

 		strcpy(l_intl_rept_struct_ha->report_name, chr_l_asfile_name);
  		strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
  		strcat(l_intl_rept_struct_ha->report_desc, " : Assis Codes"); 
		strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
	 	l_intl_rept_struct_ha->report_width = 100 ;
	  	strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
		strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
		strcpy(l_intl_rept_struct_ha->usr, argv[3]);

		 if (APL_FAILURE == CO_Proc_DBRptIns( l_intl_rept_struct_ha,l_debug_info_ptr ))
			APL_GOBACK_FAIL

		EXEC SQL DECLARE cassis_cur CURSOR FOR
		SELECT 	A.MHLP_CODE,A.LCL_BRKCD,A.LCL_BRK_MAST,A.LCL_OPCD,A.CLIENT,A.MASTER_CLT,A.CUSTODIAN_CLT,A.MANUAL_IND,
					A.MAKER,A.MAKER_DT,A.CHECKER,A.CHECKER_DT
		FROM 		MHLP_CODE A WHERE A.MHLP_STAT = 'AA' ; 

		IS_ANY_ORA_ERROR  

		EXEC SQL OPEN cassis_cur;

		IS_ANY_ORA_ERROR

		for( ; ; )
		{
			EXEC SQL FETCH cassis_cur
			INTO 	:h_mhlp_code:i_mhlp_code,
					:h_lcl_brkcd:i_lcl_brkcd,
					:h_lbrk_mstclt:i_lbrk_mstclt,
					:chr_h_lbrk_op_code:i_lbrk_op_code,
					:h_dl_client:i_dl_client,
					:h_mstclt:i_mstclt,
					:h_custodian_clt:i_custodian_clt,
					:h_manual_ind_intn:i_manual_ind_intn, 
					:h_maker:i_maker,
					:h_maker_dt:i_maker_dt,
					:h_checker:i_checker,
					:h_checker_dt:i_checker_dt;

			IS_ANY_ORA_ERROR

			if (APL_ZERO_RESULT_SET)
				break ;

			strcpy(chr_l_str_asline,"");
			CR_PadStrRight(chr_l_str_asline,h_mhlp_code,12,"Y");
			CR_PadStrRight(chr_l_str_asline,h_lcl_brkcd,10,"Y");
			CR_PadStrRight(chr_l_str_asline,h_lbrk_mstclt,10,"Y");
			CR_PadStrRight(chr_l_str_asline,chr_h_lbrk_op_code,10,"Y");
			CR_PadStrRight(chr_l_str_asline,h_dl_client,10,"Y");
			CR_PadStrRight(chr_l_str_asline,h_mstclt,10,"Y");
			CR_PadStrRight(chr_l_str_asline,h_custodian_clt,10,"Y");
			CR_PadStrRight(chr_l_str_asline,h_manual_ind_intn,1,"Y");
			CR_PadStrRight(chr_l_str_asline,h_maker,14,"Y");
			CR_PadStrRight(chr_l_str_asline,h_maker_dt,19,"Y");
			CR_PadStrRight(chr_l_str_asline,h_checker,14,"Y");
			CR_PadStrRight(chr_l_str_asline,h_checker_dt,19,"N");

			fprintf(l_ptr_asfile,chr_l_str_asline);
			fprintf(l_ptr_asfile,"\n");
			
		}	

		EXEC SQL CLOSE cassis_cur ;

		IS_ANY_ORA_ERROR


	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CR_Proc_SMIAssisFile successfully\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_asfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		fprintf(p_ptr_log_file,"Leaving processtion CDBGenSmiASFn with failure\n");
		CO_ProcMonitor(p_ptr_log_file,APL_NULL_STRING,l_debug_info_ptr,p_intl_env_data_struct_h_d);
		fclose(l_ptr_asfile);
		APL_FREE(l_intl_rept_struct_ha);
		return(APL_FAILURE);
	}
}




int CR_PadStrRight(char *p_str_line , char *p_str_word , int p_int_num, char *p_pipe)
{
	int  int_l_int_strlen = 0 , int_l_int_ctr = 0 ;
	char *chr_l_str_newword  = NULL;
	char chr_l_sep[2] = APL_NULL_STRING ;

	sprintf(chr_l_sep,"%c",SEPERATOR);

	int_l_int_strlen  = strlen(p_str_word);
	chr_l_str_newword = (char *)malloc( sizeof(char) * (abs(p_int_num) + 1) ) ;

  if( p_int_num >= 0 )
  {
	if( p_int_num <= int_l_int_strlen)
	{
	  strcat(p_str_line,p_str_word);
	  
	  if( !strcmp(p_pipe,"Y") )
	   strcat(p_str_line,chr_l_sep);

	  APL_FREE(chr_l_str_newword);
	  return APL_SUCCESS;
	}
	strcpy(chr_l_str_newword,p_str_word);

	for(int_l_int_ctr = int_l_int_strlen ; int_l_int_ctr < p_int_num ; int_l_int_ctr++ )
	  chr_l_str_newword[int_l_int_ctr] = ' ';

	chr_l_str_newword[int_l_int_ctr] = '\0' ;

	strcat(p_str_line,chr_l_str_newword);

	if( !strcmp(p_pipe,"Y") )
	  strcat(p_str_line,chr_l_sep);

	APL_FREE(chr_l_str_newword);
	return APL_SUCCESS;
  
  }
  else  
  {
	p_int_num = -p_int_num ;

	if( p_int_num <= int_l_int_strlen)
	{
	  strcat(p_str_line,p_str_word);
	  
	  if( !strcmp(p_pipe,"Y") )
	   strcat(p_str_line,chr_l_sep);

	  APL_FREE(chr_l_str_newword);
	  return APL_SUCCESS;
	}

	for(int_l_int_ctr = 0 ; int_l_int_ctr < p_int_num - int_l_int_strlen ; int_l_int_ctr++ )
	  chr_l_str_newword[int_l_int_ctr] = ' ';
	  
	chr_l_str_newword[int_l_int_ctr] = '\0' ;
	
	strcat(chr_l_str_newword,p_str_word);
	strcat(p_str_line,chr_l_str_newword);

	APL_FREE(chr_l_str_newword);
	return APL_SUCCESS;
	
  }

}




int CR_Rtv_HFName(char *p_newname,char *p_oldname,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char chr_l_now[APL_DATE_LEN]  		= APL_NULL_STRING ;
	char chr_l_tnow[APL_DATE_LEN] 		= APL_NULL_STRING ;
	char chr_l_sjdate[4] 					= APL_NULL_STRING ;
	char chr_l_itime[8]               = APL_NULL_STRING ;
	int  int_l_jdate = 0 ;
	int  i = 0 , j = 0 ;

	strcpy(p_newname,p_oldname);

	if (APL_FAILURE == CO_RtvSysDtTime(	chr_l_now,
															l_debug_info_ptr ))
	{
		return(APL_FAILURE);
	}

	

	strcpy(chr_l_tnow, chr_l_now);

	chr_l_tnow[0] = '0';
	chr_l_tnow[1] = '1';
	chr_l_tnow[3] = '0';
	chr_l_tnow[4] = '1';

	if (APL_FAILURE == CO_Pro_DateComp(	chr_l_tnow,
												chr_l_now,
												&int_l_jdate,
												l_debug_info_ptr ))
	{
		return(APL_FAILURE);
	}

	if (int_l_jdate < 10)
	{
		sprintf(chr_l_sjdate, "00%d", int_l_jdate);
	}
	else if (int_l_jdate < 100)
	{
		sprintf(chr_l_sjdate, "0%d", int_l_jdate);
	}
	else
	{
		sprintf(chr_l_sjdate, "%d", int_l_jdate);
	}

	strcat(p_newname, chr_l_sjdate);

	

	for (	i=11,j=0; j<9; )
	{	 
		if (chr_l_now[i++] != ':') chr_l_itime[j++] = chr_l_now[i-1];
		if (j==3) chr_l_itime[j++] = '.';
	}
	
	strcat(p_newname,chr_l_itime);

	return(APL_SUCCESS);

}

