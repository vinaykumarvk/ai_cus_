


   
   
   
   
   
   
   
   
   
   
   
   



#include "CR_Common.h"

EXEC SQL INCLUDE SQLCA.H;



int CO_Con_Db(char *p_username,char *p_passwd,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca		sqlca;

	CO_ProcMonitor(APL_OUT_FILE,"Entered processtion CO_DB_Connection_O \n",NULL,NULL);
	sqlca.sqlcode = 0;

	EXEC SQL CONNECT :p_username IDENTIFIED BY :p_passwd;

	if (sqlca.sqlcode != 0)
		APL_GOBACK_FAIL

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_O SUCCESS \n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion CO_DB_Connection_O FAILURE \n",NULL,NULL);

		return(APL_FAILURE);
	}
}



int CO_Pro_LocRec(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	struct sqlca		sqlca;

	char l_temp_processing_status[51] = APL_NULL_STRING;
	short l_temp_processing_status_i =-1; //shailesh 031007 ISKB430 for indicator variable

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion LockRecFn1 \n",NULL,NULL);

	sqlca.sqlcode = 0;

	EXEC SQL SELECT processing_status into :l_temp_processing_status:l_temp_processing_status_i
	FROM SYS_BATCHPROC
	WHERE process_name = :argv[0]
	AND proc_init = :argv[1]
	AND STARTDATE = :argv[2]
	AND status = 'started'
	FOR UPDATE OF processing_status,status;

	IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion LockRecFn1 SUCCESS \n",NULL,NULL);
		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion LockRecFn1 FAILURE \n",NULL,NULL);

		return(APL_FAILURE);
	}
}



int CO_Mod_Batch_Status(char **argv,FILE *p_ptr_log_file,DEBUG_INFO_STRUCT_H **l_debug_info_ptr,int p_flg)
{
	struct sqlca		sqlca;
	char					chr_l_buf[100] = APL_NULL_STRING;

	CO_ProcMonitor(p_ptr_log_file,"Entered processtion DoFinalProcessingFn1 \n",NULL,NULL);
	sqlca.sqlcode = 0;

	if (p_flg == 0)
	{
		

		if (CO_ChkErr(*l_debug_info_ptr) != APL_SUCCESS)
		{
			memset(chr_l_buf,APL_NULL_CHAR,100);
			sprintf(chr_l_buf,"Finished Processing Records");

			EXEC SQL UPDATE SYS_BATCHPROC 
			SET stat_det = :chr_l_buf,
				 status = 'completed'
			WHERE process_name = :argv[0]
			AND proc_init = :argv[1]
			AND STARTDATE = :argv[2]
			AND status = 'started';

			IS_ANY_ORA_ERROR_AND_ZERO_RESULTSET(ERR_REC_NOTFND,APL_NULL_STRING,APL_NULL_STRING,APL_NULL_STRING)
		
		}

		EXEC SQL COMMIT WORK RELEASE;

		CO_ProcMonitor(p_ptr_log_file,"Work Committed \n",NULL,NULL);
	}
	else if (p_flg == 1)
	{
		EXEC SQL ROLLBACK WORK RELEASE;

		CO_ProcMonitor(p_ptr_log_file,"Rollback Done \n",NULL,NULL);
	}

	APL_GOBACK_SUCCESS

	RETURN_SUCCESS :
	{
		CO_ProcMonitor(p_ptr_log_file,"Leaving processtion DoFinalProcessingFn1 SUCCESS \n",NULL,NULL);

		return(APL_SUCCESS);
	}

	RETURN_FAILURE :
	{
		CO_ProcMonitor(APL_OUT_FILE,"Leaving processtion DoFinalProcessingFn1 FAILURE \n",NULL,NULL);

		return(APL_FAILURE);
	}
}
