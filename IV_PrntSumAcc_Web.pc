

 


#include "IV_Control_A.h"
#include "CO_OthStructdef.h"
#include "CO_Commdef.h"
#include <sys/types.h>    /* Added by Pravin for snow - CS0095530 */

#define APL_FILE_LENGTH 50
EXEC SQL INCLUDE SQLCA.H;
int int_g_eu_condexists = 0;

#define PIPESEP '|'
#define PARAMSEP ';'

int IV_PrntSumAccount_Web(char **argv,			
		FILE *fl_techlog,
		FILE *fl_userlog,
		INTL_ENV_DATA_STRUCT_H	*p_intlenv_data_struct_h,
		DEBUG_INFO_STRUCT_H **l_debug_info_ptr)

{	


	int 		i		= 0;
	int 		int_retstat	= 0;
	int 		int_ctr 	= 0;
	int 		int_p_diff	= 0;
	int		int_l_fetch_ctr	= 0;
	int		int_l_commit_count = 0;
	int      	int_h_count        = 0;
	char 		chr_bl_gen_date[APL_DATE_LEN] = APL_NULL_STRING;
	char 		chr_h_acc[APL_CLIENT_LENGTH]= APL_NULL_STRING;
	char 		h_mstclt[APL_CLIENT_LENGTH]= APL_NULL_STRING;
	char 		chr_premast[APL_CLIENT_LENGTH]= APL_NULL_STRING;
	char 		chr_h_restart_data[50]= APL_NULL_STRING;
	char		chr_p_dismast[APL_CLIENT_LENGTH]= APL_NULL_STRING;

	short 		i_restart	= 0;
	char 		*y,*a;
	char 		chr_p_billdt[APL_DATE_LEN]= APL_NULL_STRING;
	char 		chr_l_sys_date[APL_DATE_LEN]= APL_NULL_STRING;
	char		h_ora_rowid[APL_ROWID_LEN]= APL_NULL_STRING;
	char		chr_l_stat_info[71]= APL_NULL_STRING;
	char		chr_h_blable[2]= APL_NULL_STRING;

	char		chr_l_billprntpath[PATH_LENGTH]= APL_NULL_STRING;
	char		chr_l_printername[15]= APL_NULL_STRING;
	char		chr_l_icustinipath[PATH_LENGTH]= APL_NULL_STRING;
	char		chr_l_reportsdirpath[PATH_LENGTH]= APL_NULL_STRING;
	char		chr_l_billprntfilename[PATH_LENGTH]= APL_NULL_STRING;
	char		chr_l_bill[PATH_LENGTH]= APL_NULL_STRING;
	//FILE		*l_IcustIniFlPtr = (FILE *)NULL;
	FILE		*l_IcustIniFlPtr = NULL;
	//FILE		*bill = (FILE *)NULL;
	FILE		*bill = NULL;
	short		int_cond_exists=0;

	char chr_h_client1[APL_CLIENT_LENGTH]=APL_NULL_STRING;
	char chr_h_client2[APL_CLIENT_LENGTH]=APL_NULL_STRING;
	char chr_h_zero_mstacc[APL_CLIENT_LENGTH]=APL_NULL_STRING;

	short i_account1 = 0;
	short l_rus_flg = 0;
	short l_eu_condexists = 0;

	char l_param_value[4000] = APL_NULL_STRING;
	char **l_param_val = NULL;
	char **l_client_val = NULL;
	int l_param_count = 0;
	int l_client_count = 0;
	char l_client_flag[2] = APL_NULL_STRING;
	char l_print_date[20] = APL_NULL_STRING;
	char l_param_string[4000] = APL_NULL_STRING;
	char l_generate_flag[2] = APL_NULL_STRING;
	char l_client[11] = APL_NULL_STRING;
	char l_print_client[20] = APL_NULL_STRING;
	char     file_name[25] = APL_NULL_STRING;
   char     chr_reportstart[APL_DATE_LEN] = APL_NULL_STRING;
   char     chr_reportdesc[30]=APL_NULL_STRING;
   char     chr_user[20] = APL_NULL_STRING;
	/* Added by Anjaneyulu for ISKB_1737 - Starts */
	char l_compress_flag[2] = APL_NULL_STRING;
	char l_tar_path[2000]				= APL_NULL_STRING;
	char l_zip_path[2000]				= APL_NULL_STRING;
	char l_temp_path[400]				= APL_NULL_STRING;
	char new_temp_path[400]				= APL_NULL_STRING;    /*Added by Pravin for snow - CS0095530 */
	char l_remove_path[2000]			= APL_NULL_STRING;
	char l_move_path[2000]				= APL_NULL_STRING;
	char l_master_flag[2] = APL_NULL_STRING;
	char l_sub_client[11] = APL_NULL_STRING;
	char l_common_name[2000]			= APL_NULL_STRING;
	char l_time_stamp[30] = APL_NULL_STRING;
	char tar_file_area[30] = APL_NULL_STRING;    /*Added by Pravin for snow - CS0095530 */
	/* Added by Anjaneyulu for ISKB_1737 - Ends */
	

	
	Alert("Inside IV_PrntSumAccount_Web");
	fflush(stdout);

	//INTL_REPT_STRUCT_H *l_intl_rept_struct_ha;
	SYS_IVCONTROLPARAM_STRUCT l_sys_ivcntl_param_struct;
	IV_CLIENTSETUP_STRUCT l_iv_clt_setup_struct;

	Alert("After IV_PrntSumAccount_Web");
	fflush(stdout);

	EXEC SQL BEGIN DECLARE SECTION;

	struct sqlca sqlca;
	
	EXEC SQL VAR chr_h_acc 					IS STRING;
	EXEC SQL VAR h_mstclt 					IS STRING;
	EXEC SQL VAR chr_p_dismast				IS STRING;
	EXEC SQL VAR l_sys_ivcntl_param_struct.b_prev_date 	IS STRING;
	EXEC SQL VAR l_sys_ivcntl_param_struct.b_upto_date	IS STRING;
	EXEC SQL VAR chr_bl_gen_date 				IS STRING;
	EXEC SQL VAR chr_premast 				IS STRING;
	EXEC SQL VAR chr_h_restart_data 			IS STRING;
	EXEC SQL VAR chr_l_sys_date 				IS STRING;
	EXEC SQL VAR chr_p_billdt 				IS STRING;
	EXEC SQL VAR h_ora_rowid 				IS STRING;
	EXEC SQL VAR chr_l_stat_info				IS STRING;
	EXEC SQL VAR chr_h_blable 				IS STRING;
	EXEC SQL VAR chr_h_client1				IS STRING;
	EXEC SQL VAR chr_h_zero_mstacc				IS STRING;
	EXEC SQL VAR chr_h_client2				IS STRING;

	EXEC SQL VAR l_print_client				IS STRING;

   EXEC SQL VAR l_client            IS STRING;
   EXEC SQL VAR file_name IS STRING;
   EXEC SQL VAR chr_reportdesc IS STRING;
   EXEC SQL VAR chr_reportstart IS STRING;
   EXEC SQL VAR chr_user IS STRING;
   EXEC SQL VAR chr_l_bill IS STRING;
 /* Added by Anjaneyulu for ISKB_1737 - Starts */
   EXEC SQL VAR l_sub_client IS STRING;
   EXEC SQL VAR l_time_stamp IS STRING;
	EXEC SQL VAR tar_file_area IS STRING;    /*Added by Pravin for snow - CS0095530 */
   EXEC SQL VAR l_common_name IS STRING;
   EXEC SQL VAR l_compress_flag IS STRING;
   EXEC SQL VAR l_master_flag IS STRING;
   EXEC SQL VAR l_tar_path IS STRING;
   EXEC SQL VAR l_zip_path IS STRING;
   EXEC SQL VAR l_temp_path IS STRING;
   EXEC SQL VAR new_temp_path IS STRING;    /*Added by Pravin for snow - CS0095530 */
   EXEC SQL VAR l_remove_path IS STRING;
   EXEC SQL VAR l_move_path IS STRING;
/* Added by Anjaneyulu for ISKB_1737 - Ends */


	short i_acc;
	short i_mstclt; 
	short i_ora_rowid;
	short i_blable	 = 0;

	EXEC SQL END DECLARE SECTION;

	memset(chr_h_acc,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(chr_h_client1,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(chr_h_client2,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(h_mstclt,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(chr_p_dismast,APL_NULL_CHAR,APL_CLIENT_LENGTH);
	memset(chr_p_billdt,APL_NULL_CHAR,APL_DATE_LEN);
	memset(chr_h_restart_data,APL_NULL_CHAR,50);
	memset(chr_l_sys_date,APL_NULL_CHAR,APL_DATE_LEN);
	memset(chr_bl_gen_date,APL_NULL_CHAR,APL_DATE_LEN);
	memset(chr_l_billprntpath, APL_NULL_CHAR, PATH_LENGTH); 
	memset(chr_l_billprntfilename, APL_NULL_CHAR, PATH_LENGTH);
	
	memset(&l_sys_ivcntl_param_struct, NULL , sizeof(SYS_IVCONTROLPARAM_STRUCT) );
	memset(&l_iv_clt_setup_struct, NULL , sizeof(IV_CLIENTSETUP_STRUCT) );
	/* Added by Anjaneyulu for ISKB_1737 - Starts */
	memset(l_sub_client,APL_NULL_CHAR,sizeof(l_sub_client));
	memset(l_common_name,APL_NULL_CHAR,sizeof(l_common_name));
	memset(l_compress_flag,APL_NULL_CHAR,sizeof(l_compress_flag));
	memset(l_master_flag,APL_NULL_CHAR,sizeof(l_master_flag));
	memset(l_time_stamp,APL_NULL_CHAR,sizeof(l_time_stamp));
	memset(tar_file_area,APL_NULL_CHAR,sizeof(tar_file_area));	  /* Added by Pravin for Snow - */
	memset(l_tar_path,APL_NULL_CHAR,sizeof(l_tar_path));
	memset(l_zip_path,APL_NULL_CHAR,sizeof(l_zip_path));
	memset(l_temp_path,APL_NULL_CHAR,sizeof(l_temp_path));
	memset(new_temp_path,APL_NULL_CHAR,sizeof(new_temp_path));    /*Added by Pravin for snow - CS0095530 */
	memset(l_remove_path,APL_NULL_CHAR,sizeof(l_remove_path));
	memset(l_move_path,APL_NULL_CHAR,sizeof(l_move_path));
	memset(l_common_name,APL_NULL_CHAR,sizeof(l_common_name));
	memset(file_name,APL_NULL_CHAR,sizeof(file_name));
	memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
	/* Added by Anjaneyulu for ISKB_1737 - Ends */


	printf(" \n Before SYS_BATCHPROC -- :|%s||%s||%s|\n",argv[0],argv[1],argv[2]);

        EXEC SQL SELECT PROCESSING_STATUS,ROWID 
		INTO :chr_h_restart_data:i_restart, :h_ora_rowid:i_ora_rowid 
		FROM SYS_BATCHPROC
		WHERE ( PROCESS_NAME = :argv[0]
				AND PROC_INIT = :argv[1]
				AND STARTDATE = :argv[2]
				AND STATUS = 'started' )
		FOR UPDATE OF PROCESSING_STATUS,STATUS; 

	fprintf(fl_userlog, "After SYS_BATCHPROC ORA Error :|%d|\n", sqlca.sqlcode);

	if(sqlca.sqlcode <0)
	{
		fprintf(fl_userlog,"SYS_BATCHPROC cannot be locked \n");  
		fprintf(fl_techlog, "Failed to lock Batch \n");
		APL_GOBACK_FAIL
	}

	if(APL_ZERO_RESULT_SET)
	{
		fprintf(fl_userlog,"Record For Prog name [%s] n Startdate [%s] Not In Batch Table \n",argv[0], argv[2]);
		fprintf(fl_techlog, "Error: Record does not exist in Batch Table\n");
		CO_InsertErr(l_debug_info_ptr,
				ERR_REC_NOTFND,
				ltoa(sqlca.sqlcode),
				APL_NULL_STRING,
				APL_NULL_STRING,
				__LINE__,
				__FILE__);
		APL_GOBACK_FAIL
	}
       
	memset(chr_l_icustinipath, APL_NULL_CHAR, PATH_LENGTH);
	memset(chr_l_reportsdirpath, APL_NULL_CHAR, PATH_LENGTH);
	memset(chr_l_printername, APL_NULL_CHAR, 15);
	strcpy(chr_l_icustinipath, getenv("INTL_ROOT_PATH"));
	strcat(chr_l_icustinipath, "/intl_sun.cfg");

	if((l_IcustIniFlPtr = fopen(chr_l_icustinipath, "r")) == (FILE *)NULL )
	{
		fprintf(fl_techlog, "Failed to open intl_sun.cfg\n");
		APL_GOBACK_FAIL
	}

	/*if(APL_FAILURE == CO_ReadToken(l_IcustIniFlPtr, "INTL_HF_PATH", 
				chr_l_reportsdirpath, l_debug_info_ptr) )
	{
		fprintf(APL_OUT_FILE, "Token REPORTS DIR not set.\n");
		fprintf(fl_techlog, "Directory for Reports not set \n");
		APL_GOBACK_FAIL
	}*/ //commented by Anjaneyulu for ISKB_1737

	l_rus_flg=0;
	if (APL_FAILURE == CO_Chk_CntryEnabled(  "BILL_PRINTING",
				"ALL_CUSTOMERS",
				&l_rus_flg,
				l_debug_info_ptr ))
	{
		fprintf(fl_userlog, "Failed in CO_Chk_CntryEnabled for BILL_PRINTING and ALL_CUSTOMERS \n");
		fprintf(fl_techlog, "Failed in Country check \n");
		APL_GOBACK_FAIL
	}


	l_eu_condexists=0;
	if (APL_FAILURE == CO_Chk_CntryEnabled( "VAT_REGULATION",
				"EU_AND_TR_REGULATION",
				&l_eu_condexists,
				l_debug_info_ptr ))
	{
		fprintf(fl_userlog, "Failed in CO_Chk_CntryEnabled for VAT_REGULATION and EU_AND_TR_REGULATION \n");
		fprintf(fl_techlog, "Failed in Country check \n");
		APL_GOBACK_FAIL
	}
	int_g_eu_condexists = l_eu_condexists;

	/************* Changes Related to Summary bill : vinay kalaskar ***********************/

	strcpy(l_param_value,argv[9]);

	printf("l_param_value :|%s|\n", l_param_value);
	fprintf(fl_userlog, "Param string -- [%s] \n", l_param_value);

	if(CO_SplitStr(l_param_value,PIPESEP,&l_param_count,&l_param_val) == APL_FAILURE)
	{
		 APL_GOBACK_FAIL
	}

	for(i=0;i<l_param_count;i++)
	{
		if(i==0)
			strcpy(l_print_date,l_param_val[i]);
		else if(i==1)
			strcpy(l_client_flag,l_param_val[i]);
		else if(i==2)
			strcpy(l_param_string,l_param_val[i]);			
		/*Added by Anjaneyulu for ISKB_1737 - compression flag - Starts*/
		else if(i==3)
			strcpy(l_compress_flag,l_param_val[i]);
		else if(i==4)
			strcpy(l_master_flag,l_param_val[i]);
		/*Added by Anjaneyulu for ISKB_1737 - compression flag - Ends*/
	}
	
	/*Added by Anjaneyulu for ISKB_1737 - Starts*/
	if(strlen(l_compress_flag) > 0)
	{
		if (APL_FAILURE == CO_ReadToken(l_IcustIniFlPtr,"INTL_TEMP_PATH",l_temp_path,l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Error : INTL_TEMP_PATH not set in intl_sun.cfg File \n");
			printf("Error : INTL_TEMP_PATH not set in intl_sun.cfg File \n");
			APL_GOBACK_FAIL
		}
	
	if (APL_FAILURE == CO_ReadToken(l_IcustIniFlPtr,"INTL_HF_PATH",chr_l_reportsdirpath,l_debug_info_ptr))
	{
		fprintf(fl_userlog,"Error :\'INTL_HF_PATH \' not set in intl_sun.cfg File \n");
		printf("Error :\'INTL_HF_PATH \' not set in intl_sun.cfg File \n");
		APL_GOBACK_FAIL
	}

/*Added by Pravin for snow - CS0095530 */
		EXEC SQL SELECT TO_CHAR(SYSDATE,'DD_MON_YYYY')||CHR(95)||TO_CHAR(SYSDATE,'HH24_MI_SS')||CHR(47),'SUMMARY_'||TO_CHAR(SYSDATE,'DD_MON_YYYY')||CHR(95)||TO_CHAR(SYSDATE,'HH24_MI_SS')
		INTO :l_time_stamp,:tar_file_area
		FROM DUAL;
	
		strcpy(new_temp_path,l_temp_path);
        strcat(new_temp_path,"DETAIL_");
	    strcat(new_temp_path,l_time_stamp);
		
		printf("\n new TAR PATH :|%s|\n",new_temp_path);
		fprintf(fl_userlog,"New TAR PATH: |%s|\n",new_temp_path);
		
		mkdir(new_temp_path,0755);
/*Added by Pravin for snow - CS0095530 */
	}
	
	
	/*Added by Anjaneyulu for ISKB_1737 - Ends */


	fprintf(fl_userlog, "Print date -- |%s|\n", l_print_date);
	fprintf(fl_userlog, "Client flag -- |%s|\n", l_client_flag);
	fprintf(fl_userlog, "Compress flag -- |%s|\n", l_compress_flag);//Added by Anjaneyulu for ISKB_1737
	printf("l_param_string:|%s|\n",l_param_string);

	//y= &l_print_date;
	y = l_print_date;//AIX Warning Removal 

	printf("y :|%s|\n",y);

	if (!y)
	{
		fprintf(fl_userlog,"Mandatory Data Missing - Bill Date\n");
		fprintf(fl_techlog,"Error: Mandatory Data Missing - Bill Date\n");
		APL_DATA_MISSING("Bill Date", APL_NULL_STRING, APL_NULL_STRING);
		APL_GOBACK_FAIL
	}
	else
	{
		printf("Entering IV_Rtv_IVCNTLPARAM \n ");
		fprintf(fl_userlog, "Calling function IV_Rtv_IVCNTLPARAM \n");
		if (APL_FAILURE == IV_Rtv_IVCNTLPARAM(&l_sys_ivcntl_param_struct,
							&int_retstat,
							l_debug_info_ptr))
		{
			if (int_retstat == IV_CRITCAL_ERROR_IND)
			{
				fprintf(fl_userlog,"Fatal Error In Billing Control Parameters Table\n");
				fprintf(fl_techlog,"Fatal Error In Billing Control Parameters Table\n");
				CO_InsertErr(	l_debug_info_ptr,
										DB_ERR_NO,
										"BCNTLPARM",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);
					APL_GOBACK_FAIL
			}
			else if (int_retstat == IV_NO_DATA_FOUND_ERR)
			{
				fprintf(fl_userlog,"Bill Control Parameters Not Found");
				fprintf(fl_techlog,"Bill Control Parameters Not Found");
				CO_InsertErr(	l_debug_info_ptr,
						ERR_BILLCNTRL_PARAM_NOTFND,
						APL_NULL_STRING,
						APL_NULL_STRING,
						APL_NULL_STRING,
						__LINE__,
						__FILE__);
				APL_GOBACK_FAIL
			}
		}
		else
		{
			fprintf(fl_userlog, "Success from function IV_Rtv_IVCNTLPARAM \n");
		}

		printf("l_print_date :|%s|\n", l_print_date);
		fflush(stdout);

		strcpy(chr_p_billdt,l_print_date);

		strcpy(chr_l_sys_date,argv[2]);

		fprintf(fl_userlog, "Entering CO_Pro_DateComp :|%s||%s|\n",l_sys_ivcntl_param_struct.b_upto_date,chr_p_billdt);

		if (APL_FAILURE == CO_Pro_DateComp(l_sys_ivcntl_param_struct.b_upto_date,
					chr_p_billdt,
					&int_p_diff,
					l_debug_info_ptr))
		{
			fprintf(fl_userlog,"Failed To Compare Bill Upto Date And Input Date\n");
			fprintf(fl_techlog,"Failed To Compare Bill Upto Date And Input Date\n");
			APL_GOBACK_FAIL
		}
		fprintf(fl_userlog, "Difference between Bill upto Date n Input date -- [%d]\n", int_p_diff);

		if (int_p_diff>0)
		{
			CO_InsertErr(	l_debug_info_ptr,
					ERR_REC_NOTFND,
					APL_NULL_STRING,
					APL_NULL_STRING,
					APL_NULL_STRING,
					__LINE__,
					__FILE__);
			APL_GOBACK_FAIL
		}

		fprintf(fl_userlog, "Entering CO_Pro_DateComp :|%s||%s|\n", chr_l_sys_date, chr_p_billdt);

		if (APL_FAILURE == CO_Pro_DateComp(chr_l_sys_date,
					chr_p_billdt,
					&int_p_diff,
					l_debug_info_ptr))
		{
			fprintf(fl_techlog,"Failed To Compare System Date And Input Date\n");
			APL_GOBACK_FAIL
		}
		fprintf(fl_userlog, "Difference between System Date n Input date -- [%d]\n", int_p_diff);


		if (int_p_diff > 0 && l_sys_ivcntl_param_struct.generate_ind == 'N')
		{	
			fprintf(fl_userlog,"Date Cannot Be Future Date\n");
			CO_InsertErr(l_debug_info_ptr,
					ERR_DATE_CANT_GRT_TODAY,
					APL_NULL_STRING,
					APL_NULL_STRING,
					APL_NULL_STRING,
					__LINE__,
					__FILE__);
			APL_GOBACK_FAIL
		}


		int_cond_exists = 0;
		if (APL_FAILURE == CO_Chk_CntryEnabled(  "BILL_PRINTING",
					"NO_INVD_BILL_MST",
					&int_cond_exists,
					l_debug_info_ptr ))
		{
			fprintf(fl_userlog, "Failed in CO_Chk_CntryEnabled for BILL_PRINTING and NO_INVD_BILL_MST \n");
			fprintf(fl_techlog, "Failed in Country check \n");
			APL_GOBACK_FAIL
		}
		
		/******** Check Whether All clients Or Selected Clients **************************/

		Alert("l_client_flag :|%s|\n",l_client_flag);

		if(strcmp(l_client_flag,"A"))
		{		
			printf("l_param_string :|%s|\n",l_param_string);
			
			if(CO_SplitStr(l_param_string,PARAMSEP,&l_client_count,&l_client_val) == APL_FAILURE)
			{
				 CO_ProcMonitor(fl_userlog,"Failure from CO_SplitStr -- PIPESEP -- ", NULL, NULL);
				 fprintf(fl_techlog, "Failure to split paramstring \n");
				 APL_GOBACK_FAIL
			}
			
			/****** Consider only those clients which are eligible for printing ******/
			
			for(i=0;i<l_client_count;i++)
			{			
				memset(l_client,APL_NULL_CHAR,sizeof(l_client));
				strcpy(l_client,l_client_val[i]);
			
				printf("l_client :|%s|\n",l_client);
				fflush(stdout);
				printf("l_print_date :|%s|\n",l_print_date);
				fflush(stdout);
				/*Added by Anjaneyulu for ISKB_1737 - Starts*/
				if(!strcmp(l_master_flag,"M"))
				{
					EXEC SQL DECLARE allsub CURSOR FOR
						SELECT DISTINCT(A.CLIENT) AS CLN1 FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B
							WHERE A.CLIENT = B.CLIENT
							AND A.CLIENT IN(SELECT DISTINCT(C.CLN_CODE) FROM MT_CLIENT C 
							WHERE C.CLN_MASTER = :l_client)
							AND  A.DATEOF_BILLING = :l_print_date ORDER BY CLN1;
				
					IS_ANY_ORA_ERROR
				
					EXEC SQL OPEN allsub;
					
					for(;;)
					{
						memset(l_sub_client, APL_NULL_CHAR, sizeof(l_sub_client));

						EXEC SQL FETCH allsub INTO :l_sub_client;

						if(sqlca.sqlcode == 1403)
							break;

				fflush(stdout);
				
				memset(&l_iv_clt_setup_struct, NULL , sizeof(IV_CLIENTSETUP_STRUCT) );

						if (APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_sub_client,
							&l_iv_clt_setup_struct,
							&int_retstat,
							l_debug_info_ptr))
				{
					if ( int_retstat == IV_CRITCAL_ERROR_IND)
					{
						fprintf(fl_userlog,"Fatal Error In Billing Customer Setup Table\n");
						CO_InsertErr(	l_debug_info_ptr,
								DB_ERR_NO,
								"BCUSTSETUP",
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__);
						APL_GOBACK_FAIL
					}
					else if (int_retstat == IV_NO_DATA_FOUND_ERR) 
					{
								fprintf(fl_userlog,"Billing Setup Not Found For Account:%s\n",l_sub_client);
						CO_InsertErr(	l_debug_info_ptr,
								ERR_BILLCNTRL_PARAM_NOTFND,
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__);

						APL_GOBACK_FAIL
					}
				}		
				memset(chr_l_billprntfilename, APL_NULL_CHAR, sizeof(chr_l_billprntfilename));
						strcpy(chr_l_billprntfilename,l_sub_client);
				strcat(chr_l_billprntfilename,"_Summary.htm");
				memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));
					
						if(strlen(l_compress_flag) > 0)
						{
							strcpy(chr_l_bill,new_temp_path);    /*Added by Pravin for snow - CS0095530 */
							strcat(chr_l_bill,chr_l_billprntfilename);
						}
						else
						{
				strcpy(chr_l_bill,chr_l_reportsdirpath);
				strcat(chr_l_bill,chr_l_billprntfilename);
						}
                                /*Added for Bill Print fix by kotubabu-Start*/
                                Alert("Enter to the fun1 IV_Add_Bill_Prnt_Det");
                                fflush(stdout);
                                if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_sub_client,
                                                                        l_print_date,
                                                                        "SUMMARY BILL",
                                                                        chr_l_billprntfilename,
                                                                        "HTML",
                                                                        l_debug_info_ptr))
                                {
                                    fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                    printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                    APL_GOBACK_FAIL
                                }
                                /*Added for Bill Print fix by kotubabu-End*/

				if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
				{
					CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
							APL_NULL_STRING,APL_NULL_STRING,
							__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}
						
						/*Added by Anjaneyulu for ISKB_1737 for compression flag not selected - Starts*/
				if(strlen(l_compress_flag) == 0)
                                {
					memset(file_name,APL_NULL_CHAR,sizeof(file_name));
					strcpy(file_name,l_sub_client);
					strcat(file_name,"_Summary.htm");
					memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
					strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
					strcat(chr_reportdesc, " : HTML FORMAT");
					strcpy(chr_reportstart, argv[2] );
					strcpy(chr_user, argv[3] );

					EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
					IS_ANY_ORA_ERROR

					Alert("After CO_Proc_RptInsNew----");
				}
                                        fflush(stdout);
				/*Added by Anjaneyulu for ISKB_1737 for compression flag not selected - Ends*/
						
						if (APL_FAILURE == IV_PrntSumCovPg_Web(bill,
								fl_techlog,
								fl_userlog,
								chr_p_billdt,
								l_sub_client,
								l_sys_ivcntl_param_struct,
								l_iv_clt_setup_struct,
								l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",h_mstclt);
						fprintf(fl_techlog, "Failed to print Cover page for Client [%s] \n", l_sub_client);
                                        APL_GOBACK_FAIL
                                 }

					fprintf(bill,"</TABLE></BODY></HTML>");	
					fflush(bill);
					fclose(bill);
					}
				}
				/*Added by Anjaneyulu for ISKB_1737 - Ends*/
				else//for selected clients -start
				{
					printf("Entering IV_Rtv_IVCUSTSETUP :|%s|\n",y);
					fflush(stdout);
					
					memset(&l_iv_clt_setup_struct, NULL , sizeof(IV_CLIENTSETUP_STRUCT) );

					if (APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_client,
								&l_iv_clt_setup_struct,
								&int_retstat,
								l_debug_info_ptr))
					{
						if ( int_retstat == IV_CRITCAL_ERROR_IND)
						{
							fprintf(fl_userlog,"Fatal Error In Billing Customer Setup Table\n");
							CO_InsertErr(	l_debug_info_ptr,
									DB_ERR_NO,
									"BCUSTSETUP",
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__);
							APL_GOBACK_FAIL
						}
						else if (int_retstat == IV_NO_DATA_FOUND_ERR) 
						{
							fprintf(fl_userlog,"Billing Setup Not Found For Account:%s\n",l_client);
							CO_InsertErr(	l_debug_info_ptr,
									ERR_BILLCNTRL_PARAM_NOTFND,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__);

							APL_GOBACK_FAIL
						}
					}		

					memset(chr_l_billprntfilename, APL_NULL_CHAR, sizeof(chr_l_billprntfilename));
					strcpy(chr_l_billprntfilename,l_client);
					strcat(chr_l_billprntfilename,"_Summary.htm");
					memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));

                                        /*Added for Bill Print fix by  kotubabu-Start*/
                                        Alert("Enter to the fun2 IV_Add_Bill_Prnt_Det");
                                        fflush(stdout);
                                        if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_client,
                                                                                l_print_date,
                                                                                "SUMMARY BILL",
                                                                                chr_l_billprntfilename,
                                                                                "HTML",
                                                                                l_debug_info_ptr))
                                        {
                                          fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                          printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                          APL_GOBACK_FAIL
                                        }
                                       /*Added for Bill Print fix by kotubabu-End*/

					if(strlen(l_compress_flag) > 0)
					{
						strcpy(chr_l_bill,new_temp_path);    /*Added by Pravin for snow - CS0095530 */
						strcat(chr_l_bill,chr_l_billprntfilename);
					}
					else
					{
						strcpy(chr_l_bill,chr_l_reportsdirpath);
						strcat(chr_l_bill,chr_l_billprntfilename);
					}

					if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
				{
						CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
								APL_NULL_STRING,APL_NULL_STRING,
								__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}						
				
				if(strlen(l_compress_flag) == 0)
				{
				memset(file_name,APL_NULL_CHAR,sizeof(file_name));
            strcpy(file_name,l_client);
            strcat(file_name,"_Summary.htm");
            memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
            strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
            strcat(chr_reportdesc, " : HTML FORMAT");
            strcpy(chr_reportstart, argv[2] );
            strcpy(chr_user, argv[3] );

            EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
            IS_ANY_ORA_ERROR

				Alert("After CO_Proc_RptInsNew----");
				}
				fflush(stdout);

				if (APL_FAILURE == IV_PrntSumCovPg_Web(bill,
							fl_techlog,
							fl_userlog,
							chr_p_billdt,
							l_client,
							l_sys_ivcntl_param_struct,
							l_iv_clt_setup_struct,
							l_debug_info_ptr))
				{
					fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",h_mstclt);
					fprintf(fl_techlog, "Failed to print Cover page for Client [%s] \n", l_client);
					APL_GOBACK_FAIL
				}			
										 
				fprintf(bill,"</TABLE></BODY></HTML>");	
				fflush(bill);
				fclose(bill);
				//free(l_intl_rept_struct_ha);
				}//for selected clients-end
			}		
		}
		else
		{		
			/*Added by Anjaneyulu for ISKB_1737 for all clients - all masters - Starts*/
			if(!strcmp(l_master_flag,"C"))
			{
				/*EXEC SQL DECLARE allclient CURSOR FOR 
			SELECT DISTINCT(A.CLIENT) 
			FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B 
			WHERE A.CLIENT = B.CLIENT
			AND A.DATEOF_BILLING =:l_print_date
			UNION
			SELECT DISTINCT(A.MASTER_CLT) 
			FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B 
			WHERE A.CLIENT = B.CLIENT
			AND B.SEND_TO_MASTER_IND = 'M'
				AND A.DATEOF_BILLING =:l_print_date;*/ //Commented by Anjaneyulu
				
			/*	EXEC SQL DECLARE allclient CURSOR FOR
				SELECT DISTINCT(A.CLIENT)  AS CLN
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B ,MT_CLIENT C
				WHERE A.CLIENT = B.CLIENT
				AND A.CLIENT=C.CLN_CODE
				AND C.CLN_CODE<>C.CLN_MASTER
				AND A.DATEOF_BILLING =:l_print_date
				UNION
				SELECT DISTINCT(A.CLIENT) AS CLN 
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C 
				WHERE A.CLIENT = B.CLIENT
				AND A.CLIENT=C.CLN_CODE
				AND C.CLN_CODE<>C.CLN_MASTER
				AND B.SEND_TO_MASTER_IND = 'S'
				AND A.DATEOF_BILLING =:l_print_date ORDER BY CLN;*/
				
				/*query modified by shruthi kumbla for ISKB_1737 to fetch master clients whose bill generation is done but bill gen dobne for its sub accounts*/
				
				EXEC SQL DECLARE allclient CURSOR FOR
				SELECT DISTINCT(A.CLIENT) AS CLN 
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C 
				WHERE A.CLIENT = B.CLIENT
				AND B.CLIENT=C.CLN_CODE
				AND C.CLN_CODE!=C.CLN_MASTER
			    AND A.MASTER_CLT!=A.CLIENT
				AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date ORDER BY CLN;

			fprintf(fl_userlog, "ORA for Declaration of cursor allclient -- [%d] \n", sqlca.sqlcode);
			IS_ANY_ORA_ERROR

			EXEC SQL OPEN allclient;

			for(;;)
			{
				memset(l_client, APL_NULL_CHAR, sizeof(l_client));

				EXEC SQL FETCH allclient INTO :l_client;

				if(sqlca.sqlcode == 1403)
				break;

				int_ctr ++;

				Alert("Client We Got is = |%s|",l_client);
				fflush(stdout);

				memset(&l_iv_clt_setup_struct, NULL , sizeof(IV_CLIENTSETUP_STRUCT) );
				fflush(fl_userlog);
					
				if (APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_client,
							&l_iv_clt_setup_struct,
							&int_retstat,
							l_debug_info_ptr))
				{
					Alert("IV_PrntSumAcc_Web failure ");
					fflush(stdout);
					if ( int_retstat == IV_CRITCAL_ERROR_IND)
					{
						fprintf(fl_userlog,"Fatal Error In Billing Customer Setup Table\n");
						fflush(fl_userlog);
						CO_InsertErr(	l_debug_info_ptr,
								DB_ERR_NO,
								"IV_CLIENTSETUP",
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__);
						APL_GOBACK_FAIL
					}
					else if (int_retstat == IV_NO_DATA_FOUND_ERR) 
					{
						Alert("Billing Setup Not Found For Account: %s",l_client);
						fflush(stdout);
						fprintf(fl_userlog,"Billing Setup Not Found For Account: %s \n",l_client);
						fflush(fl_userlog);
						printf("\n\n ptr is =|%d| ", l_debug_info_ptr);
						fflush(stdout);

						CO_InsertErr(	l_debug_info_ptr,
								ERR_BILLCNTRL_PARAM_NOTFND,
								APL_NULL_STRING,
								APL_NULL_STRING,
								APL_NULL_STRING,
								__LINE__,
								__FILE__);
						Alert("Returned from CO_InsertErr");
						fflush(stdout);

						APL_GOBACK_FAIL
					}
				}
				memset(chr_l_billprntfilename, APL_NULL_CHAR, sizeof(chr_l_billprntfilename));
				strcpy(chr_l_billprntfilename,l_client);
				strcat(chr_l_billprntfilename,"_Summary.htm");
				Alert("chr_l_billprntfilename = |%s|",chr_l_billprntfilename);
				fflush(stdout);
			
                                /*Added for Bill Print fix by kotubabu-Start*/
                                Alert("Enter to the fun3 IV_Add_Bill_Prnt_Det");
                                fflush(stdout);
                                if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_client,
                                                                        l_print_date,
                                                                        "SUMMARY BILL",
                                                                        chr_l_billprntfilename,
                                                                        "HTML",
                                                                        l_debug_info_ptr))
                                {
                                  fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                  printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                  APL_GOBACK_FAIL
                                }
                                /*Added for Bill Print fix by kotubabu-End*/
	
				memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));
					if(strlen(l_compress_flag) > 0)
					{
							strcpy(chr_l_bill,new_temp_path);    /*Added by Pravin for snow - CS0095530 */
							strcat(chr_l_bill,chr_l_billprntfilename);
					}
					else
					{
				strcpy(chr_l_bill,chr_l_reportsdirpath);
				strcat(chr_l_bill,chr_l_billprntfilename);
				Alert("chr_l_bill= |%s|",chr_l_bill);
                         	}
				fflush(stdout);

				if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
				{
					CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
							APL_NULL_STRING,APL_NULL_STRING,
							__LINE__,__FILE__);
					APL_GOBACK_FAIL
				}
				/*
				if((l_intl_rept_struct_ha = (INTL_REPT_STRUCT_H *)(calloc(1,sizeof(INTL_REPT_STRUCT_H *)))) == NULL)
        			{
                			printf("\n Problem in memory allocation for l_intl_rept_struct_ha ............. \n");
                			fflush(stdout);
                			APL_GOBACK_FAIL
       				 }
				memset(l_intl_rept_struct_ha->report_name,APL_NULL_CHAR,51);
                                memset(l_intl_rept_struct_ha->report_desc,APL_NULL_CHAR,APL_REPDESC_LENGTH);
                                memset(l_intl_rept_struct_ha->report_date,APL_NULL_CHAR,APL_DATE_LEN);
                                memset(l_intl_rept_struct_ha->task_desc,APL_NULL_CHAR,61);
                                memset(l_intl_rept_struct_ha->fe_be_ind,APL_NULL_CHAR,APL_FLAG_LENGTH);
                                memset(l_intl_rept_struct_ha->usr,APL_NULL_CHAR,15);
				//sprintf(l_intl_rept_struct_ha->report_name,chr_l_billprntfilename);
				strcpy(l_intl_rept_struct_ha->report_name,chr_l_billprntfilename);
				Alert("Report Name here is |%s|",l_intl_rept_struct_ha->report_name);
				strcpy(l_intl_rept_struct_ha->report_desc, APL_HOFF_FILE_DESC);
				strcat(l_intl_rept_struct_ha->report_desc, " : HTML FORMAT");
				strcat(l_intl_rept_struct_ha->report_desc,"\0");
				strcpy(l_intl_rept_struct_ha->report_date, argv[2]);
				l_intl_rept_struct_ha->report_width = 100 ;
				strcpy(l_intl_rept_struct_ha->task_desc, argv[5]);
				strcpy(l_intl_rept_struct_ha->fe_be_ind, APL_BE_IND);
				strcpy(l_intl_rept_struct_ha->usr, argv[3]);

				if (APL_FAILURE == CO_Proc_RptInsNew( l_intl_rept_struct_ha,"INTL_HF_PATH", l_debug_info_ptr))
				{
					APL_GOBACK_FAIL
				}
				
				Alert("After CO_Proc_RptInsNew....");
				fflush(stdout);
				*/
									
				/* if(sqlca.sqlcode < 0)
				sqlca.sqlcode=0; */

				Alert("Client Being Passed to IV_PrntSumCovPg_Web = |%s|",l_client);
				fflush(stdout);

				fflush(APL_OUT_FILE);
				
					/*memset(file_name,APL_NULL_CHAR,sizeof(file_name));
					strcpy(file_name,l_client);
					strcat(file_name,"_Summary.htm");
					memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
					strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
					strcat(chr_reportdesc, " : HTML FORMAT");
					strcpy(chr_reportstart, argv[2] );
					strcpy(chr_user, argv[3] );

					EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
					IS_ANY_ORA_ERROR*/ //commented by Anjaneyulu
					
				if(strlen(l_compress_flag) == 0)
				{
				memset(file_name,APL_NULL_CHAR,sizeof(file_name));
            strcpy(file_name,l_client);
            strcat(file_name,"_Summary.htm");
            memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
            strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
            strcat(chr_reportdesc, " : HTML FORMAT");
            strcpy(chr_reportstart, argv[2] );
            strcpy(chr_user, argv[3] );

            EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
            IS_ANY_ORA_ERROR

					Alert("After CO_Proc_RptInsNew----");
				}
					fflush(stdout);

				if (APL_FAILURE == IV_PrntSumCovPg_Web(bill,
							fl_techlog,
							fl_userlog,
							chr_p_billdt,
							l_client,
							l_sys_ivcntl_param_struct,
							l_iv_clt_setup_struct,
							l_debug_info_ptr))
				{
					fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",h_mstclt);	
					APL_GOBACK_FAIL
				}			

				Alert("After IV_PrntSumCovPg_Web");
				fflush(stdout);
										 
				fprintf(bill,"</TABLE></BODY></HTML>");	
				fflush(bill);
				fclose(bill);
				//free(l_intl_rept_struct_ha);

			}
			EXEC SQL CLOSE allclient;
			}//all clients -if
			else if(!strcmp(l_master_flag,"M"))//for all - masters
			{
				/*EXEC SQL DECLARE allmastclient CURSOR FOR
				SELECT DISTINCT(A.CLIENT) AS CLN 
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B ,MT_CLIENT C
				WHERE A.CLIENT = B.CLIENT
				AND A.CLIENT=C.CLN_CODE
				AND C.CLN_CODE=C.CLN_MASTER
				AND A.DATEOF_BILLING =:l_print_date
				UNION
				SELECT DISTINCT(A.MASTER_CLT) AS CLN 
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C 
				WHERE A.CLIENT = B.CLIENT
				AND A.CLIENT=C.CLN_CODE
				AND C.CLN_CODE=C.CLN_MASTER
				AND B.SEND_TO_MASTER_IND = 'M'
				AND A.DATEOF_BILLING =:l_print_date ORDER BY CLN;*/
				
				/*query modified by shruthi kumbla for ISKB_1737 to fetch master clients whose bill generation is done but bill gen dobne for its sub accounts*/
				
				EXEC SQL DECLARE allmastclient CURSOR FOR
				SELECT DISTINCT(C.CLN_MASTER) AS CLN 
				FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B,MT_CLIENT C 
				WHERE A.CLIENT = B.CLIENT
				AND A.MASTER_CLT=C.CLN_MASTER
				AND A.CLIENT=C.CLN_CODE
				AND B.SEND_TO_MASTER_IND = 'S'
				AND TO_CHAR(A.DATEOF_BILLING,'DD/MM/YYYY hh24:mi:ss') =:l_print_date ORDER BY CLN;
			
					
				fprintf(fl_userlog, "ORA for Declaration of cursor allmastclient -- [%d] \n", sqlca.sqlcode);
				IS_ANY_ORA_ERROR

				EXEC SQL OPEN allmastclient;
				memset(l_client, APL_NULL_CHAR, sizeof(l_client));
				for(;;)
				{
					//memset(l_client, APL_NULL_CHAR, sizeof(l_client));

					EXEC SQL FETCH allmastclient INTO :l_client;
					Alert("clients We Got is = |%s|",l_client);
					if(sqlca.sqlcode == 1403)
					break;

					EXEC SQL DECLARE allmast_sub CURSOR FOR 
						SELECT DISTINCT(A.CLIENT) AS CLN1 FROM IV_SERVICE_CHRG A,IV_CLIENTSETUP B
							WHERE A.CLIENT = B.CLIENT
							AND A.CLIENT IN(SELECT DISTINCT(C.CLN_CODE) FROM MT_CLIENT C 
							WHERE C.CLN_MASTER = :l_client)
							AND A.DATEOF_BILLING =:l_print_date ORDER BY CLN1;
				
					fprintf(fl_userlog, "ORA for Declaration of cursor allmast_sub -- [%d] \n", sqlca.sqlcode);
					IS_ANY_ORA_ERROR
				
					EXEC SQL OPEN allmast_sub;
					
					for(;;)
					{
						memset(l_sub_client, APL_NULL_CHAR, sizeof(l_sub_client));

						EXEC SQL FETCH allmast_sub INTO :l_sub_client;

						if(sqlca.sqlcode == 1403)
							break;
						Alert("Client We Got is = |%s|",l_sub_client);
						fflush(stdout);
						
						memset(&l_iv_clt_setup_struct, NULL , sizeof(IV_CLIENTSETUP_STRUCT) );

						if (APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_sub_client,
								&l_iv_clt_setup_struct,
								&int_retstat,
								l_debug_info_ptr))
						{
							if ( int_retstat == IV_CRITCAL_ERROR_IND)
							{
								fprintf(fl_userlog,"Fatal Error In Billing Customer Setup Table\n");
								CO_InsertErr(	l_debug_info_ptr,
										DB_ERR_NO,
										"BCUSTSETUP",
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);
								APL_GOBACK_FAIL
							}
							else if (int_retstat == IV_NO_DATA_FOUND_ERR) 
							{
								fprintf(fl_userlog,"Billing Setup Not Found For Account:%s\n",l_sub_client);
								CO_InsertErr(	l_debug_info_ptr,
										ERR_BILLCNTRL_PARAM_NOTFND,
										APL_NULL_STRING,
										APL_NULL_STRING,
										APL_NULL_STRING,
										__LINE__,
										__FILE__);

								APL_GOBACK_FAIL
							}
						}
						memset(chr_l_billprntfilename, APL_NULL_CHAR, sizeof(chr_l_billprntfilename));
						strcpy(chr_l_billprntfilename,l_sub_client);
						strcat(chr_l_billprntfilename,"_Summary.htm");
						memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));
				
                                               /*Added for Bill Print fix by kotubabu-Start*/
                                               Alert("Enter to the fun4 IV_Add_Bill_Prnt_Det");
                                               fflush(stdout);
                                               if (APL_FAILURE == IV_Add_Bill_Prnt_Det(l_sub_client,
                                                                                       l_print_date,
                                                                                       "SUMMARY BILL",
                                                                                       chr_l_billprntfilename,
                                                                                       "HTML",
                                                                                       l_debug_info_ptr))
                                               {
                                                fprintf(fl_userlog,"Failed the function IV_Add_Bill_Prnt_Det\n");
                                                printf("Failed the function IV_Add_Bill_Prnt_Det \n");
                                                APL_GOBACK_FAIL
                                               }
                                              /*Added for Bill Print fix by kotubabu-End*/
	
						if(strlen(l_compress_flag) > 0)
						{
							strcpy(chr_l_bill,new_temp_path);    /*Added by Pravin for snow - CS0095530 */
							strcat(chr_l_bill,chr_l_billprntfilename);
						}
						else
						{
							strcpy(chr_l_bill,chr_l_reportsdirpath);
							strcat(chr_l_bill,chr_l_billprntfilename);
						}
					
						if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
						{
							CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
									APL_NULL_STRING,APL_NULL_STRING,
									__LINE__,__FILE__);
							APL_GOBACK_FAIL
						}
						
						/*Added by Anjaneyulu for ISKB_1737 for compression flag not selected - Starts*/
				if(strlen(l_compress_flag) == 0)
				{
					memset(file_name,APL_NULL_CHAR,sizeof(file_name));
					strcpy(file_name,l_sub_client);
					strcat(file_name,"_Summary.htm");
					memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
					strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
					strcat(chr_reportdesc, " : HTML FORMAT");
					strcpy(chr_reportstart, argv[2] );
					strcpy(chr_user, argv[3] );

					EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
					IS_ANY_ORA_ERROR

					Alert("After CO_Proc_RptInsNew----");
				}
					fflush(stdout);
				/*Added by Anjaneyulu for ISKB_1737 for compression flag not selected - Ends*/
						
						if (APL_FAILURE == IV_PrntSumCovPg_Web(bill,
								fl_techlog,
								fl_userlog,
								chr_p_billdt,
								l_sub_client,
								l_sys_ivcntl_param_struct,
								l_iv_clt_setup_struct,
								l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",h_mstclt);
						fprintf(fl_techlog, "Failed to print Cover page for Client [%s] \n", l_sub_client);
						APL_GOBACK_FAIL
					}			
											 
					fprintf(bill,"</TABLE></BODY></HTML>");	
					fflush(bill);
					fclose(bill);
					}
					EXEC SQL CLOSE allmast_sub;
					//commented by Anjaneyulu on 08/01/2016 - Starts
					/*if (APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_client,
								&l_iv_clt_setup_struct,
								&int_retstat,
								l_debug_info_ptr))
					{
						Alert("All - Master IV_PrntSumAcc_Web failure ");
						fflush(stdout);
						if ( int_retstat == IV_CRITCAL_ERROR_IND)
						{
							fprintf(fl_userlog,"All - Master Fatal Error In Billing Customer Setup Table\n");
							fflush(fl_userlog);
							CO_InsertErr(	l_debug_info_ptr,
									DB_ERR_NO,
									"IV_CLIENTSETUP",
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__);
							APL_GOBACK_FAIL
						}
						else if (int_retstat == IV_NO_DATA_FOUND_ERR) 
						{
							Alert("All - Master Billing Setup Not Found For Account: %s",l_client);
							fflush(stdout);
							fprintf(fl_userlog,"All - Master Billing Setup Not Found For Account: %s \n",l_client);
							fflush(fl_userlog);
							printf("\n\n All - Master ptr is =|%d| ", l_debug_info_ptr);
							fflush(stdout);

							CO_InsertErr(	l_debug_info_ptr,
									ERR_BILLCNTRL_PARAM_NOTFND,
									APL_NULL_STRING,
									APL_NULL_STRING,
									APL_NULL_STRING,
									__LINE__,
									__FILE__);
							Alert("Returned from CO_InsertErr");
							fflush(stdout);

							APL_GOBACK_FAIL
						}
					}
					memset(chr_l_billprntfilename, APL_NULL_CHAR, sizeof(chr_l_billprntfilename));
					strcpy(chr_l_billprntfilename,l_client);
					strcat(chr_l_billprntfilename,"_Summary.htm");
					Alert("All - Master chr_l_billprntfilename = |%s|",chr_l_billprntfilename);
					fflush(stdout);
				
					memset(chr_l_bill, APL_NULL_CHAR, sizeof(chr_l_bill));
					if(strlen(l_compress_flag) > 0)
					{
							strcpy(chr_l_bill,l_temp_path);
							strcat(chr_l_bill,chr_l_billprntfilename);
					}
					else
					{
							strcpy(chr_l_bill,chr_l_reportsdirpath);
							strcat(chr_l_bill,chr_l_billprntfilename);
					}

					Alert("All - Master chr_l_bill= |%s|",chr_l_bill);
					fflush(stdout);

					if ((bill = fopen (chr_l_bill,"w")) == (FILE *) NULL )
					{
						CO_InsertErr(l_debug_info_ptr,ERR_FILE_NOTFND,APL_NULL_STRING,
								APL_NULL_STRING,APL_NULL_STRING,
								__LINE__,__FILE__);
						APL_GOBACK_FAIL
					}
				
				if(strlen(l_compress_flag) == 0)
				{
					memset(file_name,APL_NULL_CHAR,sizeof(file_name));
					strcpy(file_name,l_client);
					strcat(file_name,"_Summary.htm");
					memset(chr_reportdesc,APL_NULL_CHAR, sizeof(chr_reportdesc));
					strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
					strcat(chr_reportdesc, " : HTML FORMAT");
					strcpy(chr_reportstart, argv[2] );
					strcpy(chr_user, argv[3] );

					EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :file_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_bill  );
					IS_ANY_ORA_ERROR

					Alert("After CO_Proc_RptInsNew----");
				}
					fflush(stdout);
				
					Alert("All - Master Client Being Passed to IV_PrntSumCovPg_Web = |%s|",l_client);
					fflush(stdout);

					fflush(APL_OUT_FILE);
					
					if (APL_FAILURE == IV_PrntSumCovPg_Web(bill,
							fl_techlog,
							fl_userlog,
							chr_p_billdt,
							l_client,
							l_sys_ivcntl_param_struct,
							l_iv_clt_setup_struct,
							l_debug_info_ptr))
					{
						fprintf(fl_userlog,"Failed To Print Cover Page:%s\n",h_mstclt);	
						APL_GOBACK_FAIL
					}			

					Alert("After IV_PrntSumCovPg_Web");
					fflush(stdout);
										 
					fprintf(bill,"</TABLE></BODY></HTML>");	
					fflush(bill);
					fclose(bill);*/ //commented by Anjaneyulu on 08/01/2016 -ends
					//free(l_intl_rept_struct_ha);

				}//outer for
				EXEC SQL CLOSE allmastclient;
			}//for all - masters
			
		}
		
		/* Added by Anjaneyulu for ISKB_1737 for zip the files - Starts */
/* 		EXEC SQL SELECT TO_CHAR(SYSDATE,'DD_MON_YYYY')||CHR(95)||TO_CHAR(SYSDATE,'HH24_MI_SS')
				INTO :l_time_stamp
				FROM DUAL; */		  /* Commented by Pravin for snow - CS0095530 */

		fprintf(fl_userlog,"TIME STAMP is :|%s|\n",l_time_stamp);

		if(strlen(l_compress_flag) > 0)
		{
					/*strcpy(l_tar_path,"tar -cvf ");
					strcat(l_tar_path,l_temp_path);
					strcat(l_tar_path,"Summary_");
					strcat(l_tar_path,l_time_stamp);
					strcat(l_tar_path,".tar ");
					strcat(l_tar_path,l_temp_path);
					strcat(l_tar_path,"*_Summary.htm");

					fprintf(fl_userlog,"TAR PATH :|%s|\n",l_tar_path);

					system(l_tar_path);

					strcpy(l_zip_path,"gzip -f ");
					strcat(l_zip_path,l_temp_path);
					strcat(l_zip_path,"Summary_");
					strcat(l_zip_path,l_time_stamp);
					strcat(l_zip_path,".tar");

					fprintf(fl_userlog,"ZIP PATH :|%s|\n",l_zip_path);
			
					system(l_zip_path);

					strcpy(l_remove_path,"rm -f ");
					strcat(l_remove_path,l_temp_path);
					strcat(l_remove_path,"*_");
					strcat(l_remove_path,"Summary.htm");

					fprintf(fl_userlog,"REMOVE PATH :|%s|\n",l_remove_path);
			
					system(l_remove_path);

					strcpy(l_move_path,"mv ");
					strcat(l_move_path,l_temp_path);
					strcat(l_move_path,"Summary");
					strcat(l_move_path,"_");
					strcat(l_move_path,l_time_stamp);
					strcat(l_move_path,".tar");
					strcat(l_move_path,".gz  ");
					strcat(l_move_path,chr_l_reportsdirpath);		Commented by Pravin for snow - CS0095530*/

/* Added by Pravin for snow - CS0095530*/
		
			strcpy(l_tar_path,"tar -cvhf ");
			strcat(l_tar_path,l_temp_path);
			strcat(l_tar_path,tar_file_area);
			strcat(l_tar_path,".tar ");
			strcat(l_tar_path,new_temp_path);

			fprintf(fl_userlog,"TAR PATH :|%s|\n",l_tar_path);

			system(l_tar_path);

			strcpy(l_zip_path,"gzip -f ");
			strcat(l_zip_path,l_temp_path);
		    strcat(l_zip_path,tar_file_area);
			strcat(l_zip_path,".tar");

			fprintf(fl_userlog,"ZIP PATH :|%s|\n",l_zip_path);

			system(l_zip_path);

			strcpy(l_remove_path,"rm -r ");
			strcat(l_remove_path,new_temp_path);

			fprintf(fl_userlog,"REMOVE PATH :|%s|\n",l_remove_path);

			system(l_remove_path);

			strcpy(l_move_path,"mv ");
			strcat(l_move_path,l_temp_path);
			strcat(l_move_path,tar_file_area);
			strcat(l_move_path,".tar");
			strcat(l_move_path,".gz  ");
					strcat(l_move_path,chr_l_reportsdirpath);

					fprintf(fl_userlog,"MOVE PATH :|%s|\n",l_move_path);
		
					system(l_move_path);
				
			strcpy(l_common_name,tar_file_area);
					strcat(l_common_name,".tar");
					strcat(l_common_name,".gz");
					strcpy(chr_reportdesc, APL_HOFF_FILE_DESC);
					strcat(chr_reportdesc, " : HTML FORMAT");
					strcpy(chr_reportstart, argv[2] );
					strcpy(chr_user, argv[3] );
					strcat(chr_l_reportsdirpath,l_common_name);
		
/* Added by Pravin for snow - CS0095530*/

            EXEC SQL INSERT INTO PRO_COMMON_REPORT VALUES ( :l_common_name, :chr_reportdesc, :chr_reportstart, 100, '','B', :chr_user, :chr_l_reportsdirpath  );
	
            IS_ANY_ORA_ERROR

				Alert("After CO_Proc_RptInsNew----");
				fflush(stdout);
			
		}
		/* Added by Anjaneyulu for ISKB_1737 for zip the files - Ends */
				  
	} 
	sprintf(chr_l_stat_info, "Record Comitted");


	EXEC SQL UPDATE SYS_BATCHPROC
		 SET STATUS	='completed',
		 STAT_DET	= :chr_l_stat_info
		 WHERE	ROWID	= :h_ora_rowid; 

	IS_ANY_ORA_ERROR

	if (sqlca.sqlcode == 1403)
	{
		fprintf(fl_userlog,"Failed to Update SYS_BATCHPROC because row id could not be found \n");
		fprintf(fl_techlog, "Failed to update status as completed in Batch table \n");
		APL_GOBACK_FAIL
	}


APL_GOBACK_SUCCESS

	RETURN_SUCCESS:
	/* APL_IF_DEBUG
	{ */
		//CO_ProcMonitor(APL_OUT_FILE,"Leaving IV_PrntSumAccount_Web successfully\n",NULL,NULL);
		Alert("Leaving IV_PrntSumAccount_Web successfully");
		fflush(stdout);
	//}
	fclose(l_IcustIniFlPtr);
	fclose(bill);

	return(APL_SUCCESS);

RETURN_FAILURE:
	/* APL_IF_DEBUG
	{ */
		//CO_ProcMonitor(APL_OUT_FILE,"Leaving IV_PrntSumAccount_Web unsuccessfully\n",NULL,NULL);
		Alert("Leaving IV_PrntSumAccount_Web unsuccessfully");
		fflush(stdout);
	//}
	fclose(l_IcustIniFlPtr);
	fclose(bill);

	return (APL_FAILURE);
}


