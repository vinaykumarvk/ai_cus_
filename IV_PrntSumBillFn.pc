



 
#include "stdio_64.h"
#include <string.h>
#include "IV_Control_A.h" 
#include "CO_OthStructdef.h"

EXEC SQL INCLUDE SQLCA.H;

//AIX Warning Removal - COmmented unused variables and removed '&' for l_debug_info_ptr in the file
int IV_CallSumBillPrnt(char *argv[])
{
	struct	sqlca sqlca;

	DEBUG_INFO_STRUCT_H 	**l_debug_info_ptr  =  NULL, *l_debug_info_struct=NULL ; // AIX - Warnings removal
	
	INTL_ENV_DATA_STRUCT_H 	*p_intlenv_data_struct_h = NULL;
	//int	int_retval				= 0;
	FILE 	*fl_techlog			= NULL; 
	FILE 	*fl_userlog			= NULL; 
	//FILE 	*chr_finifile			= NULL;

	
   p_intlenv_data_struct_h   =  (INTL_ENV_DATA_STRUCT_H*)calloc(1,sizeof(INTL_ENV_DATA_STRUCT_H));
   APL_MALLOC_FAIL(p_intlenv_data_struct_h);
 
   printf("Entering CO_Rtv_RptFileName-- 1SB -- :|%s|\n",argv[5]);
	fflush(stdout);

	l_debug_info_ptr = &l_debug_info_struct;

   if (APL_FAILURE == CO_Rtv_RptFileName("1SB",
                                       APL_LOGFILE_DESC,
                                       100,
                                       argv[5], 
                                       argv,
                                       &fl_userlog,
                                       l_debug_info_ptr) )
   {
      exit(-1);
   }

   printf("Entering CO_Rtv_RptFileName-- 1sb -- :|%s|\n",argv[5]);

   if (APL_FAILURE == CO_Rtv_RptFileName("1sb",
                                       APL_LOGFILE_DESC,
                                       100,
                                       argv[5], 
                                       argv,
                                       &fl_techlog,
                                       l_debug_info_ptr) )
   {
      exit(-1);
   }	

   EXEC SQL COMMIT;
   IS_ANY_ORA_ERROR
	

   strcpy(p_intlenv_data_struct_h->usr, argv[3]);
   strcpy(p_intlenv_data_struct_h->h_mode,   argv[4]);

   
   if (APL_FAILURE == CO_RtvSysParams(l_debug_info_ptr))
   {
      fprintf(fl_userlog,"Failed To Get System Parameters\n");
      APL_GOBACK_FAIL
   }
	Alert("After CO_RtvSysParams...");
	fflush(stdout);

	fprintf(fl_userlog,"Calling The Bill Printing Function\n");
	CO_FreeErrLst(l_debug_info_ptr);
		
	if (APL_FAILURE == IV_PrntSumAccount_Web(argv,
						fl_techlog,
						fl_userlog,
						p_intlenv_data_struct_h,
						l_debug_info_ptr))
	{
		fprintf(fl_userlog, "Bill Printing IV_PrntSumAccount_Web Function Returned Failure\n");
		Alert("Bill Printing IV_PrntSumAccount_Web Function Returned Failure");
		fflush(stdout);
		CO_ProcMonitor(fl_techlog,
					APL_NULL_STRING,
					l_debug_info_ptr,
					p_intlenv_data_struct_h);
		CO_FreeErrLst(l_debug_info_ptr);
		EXEC SQL ROLLBACK WORK RELEASE;		
		IS_ANY_ORA_ERROR
		APL_GOBACK_FAIL
	}	
	else
	{
		fprintf(fl_userlog,"Bill Printing IV_PrntSumAccount_Web Function Returned Success\n");
		Alert("Bill Printing IV_PrntSumAccount_Web Function Returned Success");
		fflush(stdout);
		EXEC SQL COMMIT WORK RELEASE;
		IS_ANY_ORA_ERROR
		APL_GOBACK_SUCCESS
	}

	APL_GOBACK_SUCCESS
	
	
	RETURN_SUCCESS:
	CO_Proc_RptClose(fl_techlog,l_debug_info_ptr);
	CO_Proc_RptClose(fl_userlog,l_debug_info_ptr);
	exit(0); 


	RETURN_FAILURE:
	CO_Proc_RptClose(fl_techlog,l_debug_info_ptr);
	CO_Proc_RptClose(fl_userlog,l_debug_info_ptr);
	exit(1); 

	
}

