













 
#include "IV_Control_A.h"

EXEC SQL INCLUDE SQLCA;



int IV_Proc_CountIVPymt (	char				   *chr_p_client,
								int 	 				*p_countpymnt, 
								int 	 				*int_p_retstat,
								DEBUG_INFO_STRUCT_H			**l_debug_info_ptr)
{
struct sqlca sqlca;
char h_dl_client[APL_CLIENT_LENGTH];
int int_h_countpymnt=0;	
short i_countpymnt;

EXEC SQL VAR h_dl_client IS STRING;
 
#ifdef APL_THREADS
		 APL_SET_CONTEXT
		 EXEC SQL CONTEXT USE :my_ctx_local;
#endif


strcpy(h_dl_client,chr_p_client);

EXEC SQL SELECT count(*)
INTO :int_h_countpymnt:i_countpymnt
FROM IV_CHEQUE
WHERE CLIENT=:h_dl_client
AND STATUS ='U';


if(sqlca.sqlcode < 0)
{
	 *int_p_retstat = IV_CRITCAL_ERROR_IND;
	 APL_GOBACK_FAIL;
}

 if(sqlca.sqlcode == 1403)
{
	 *int_p_retstat = IV_NO_DATA_FOUND_ERR;
	 APL_GOBACK_FAIL;
}
else
{	
	if (i_countpymnt == -1)
	{
		*int_p_retstat = IV_COLUMN_NULL_ERR;

	}
}
*int_p_retstat = IV_SUCCESS;
*p_countpymnt = int_h_countpymnt;

APL_GOBACK_SUCCESS;



RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of  BBDbCountPymnt successfully\n",NULL,NULL);
	}
	return APL_SUCCESS;

RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE,"Exiting out of  BBDbCountPymnt unsuccessfully\n",NULL,NULL);
	}
	return APL_FAILURE;
}




