/*
 *   COPYRIGHT NOTICE
 *   
 *   Copyright 2005 Polaris Software Lab Limited. All rights reserved.
 *   
 *   These materials are confidential and proprietary to
 *   Polaris Software Lab Limited and no part of these materials should
 *   be reproduced, published, transmitted or distributed in any form or
 *   by any means, electronic, mechanical, photocopying, recording or
 *   otherwise, or stored in any information storage or retrieval system
 *   of any nature nor should the materials be disclosed to third parties
 *   or used in any other manner for which this is not authorized, without
 *   the prior express written authorization of Polaris Software Lab Limited.
 */
/*******************************************************************************
 *  
 *    Module Name         :         Billing Module 
 *    
 *    File Name           :         IV_BillGenFn_D.pc
 *    
 *    
 *                Version Control Block
 *     
 *    Date        Version     Author              Description     RFS No.
 *   ---------   --------  ---------------  ----------------------------------
 *   08-Dec-2010  1.0.1.9   Siva Ganapathi	  Changes done for ISKB_2470 -- safekeeping charges of NAV based client
 *
 *******************************************************************************/

#include "stdio_64.h"
#include <string.h>
#include "IV_Control_A.h"

#ifdef BILLDEBUG
	extern FILE *TestRep;
#endif

EXEC SQL INCLUDE SQLCA;



int IV_Proc_OtherCharges(char *chr_p_client,char *p_cltt_str,char *p_mstclt_a,int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	EXEC SQL BEGIN DECLARE SECTION;

	char h_dl_client[APL_CLIENT_LENGTH]; 
	char chr_h_bl_upto_dt[APL_DATE_LEN],h_ca_event[3];
	char h_instr_code[9]; /* Bageshri for redemption */
	char h_pymt_ccy[4]; /* Bageshri for redemption */

	char chr_h_srv_ind[50];
	double h_serv_quantity=0,h_schdl_fee=0;
	double dbl_cd_cnt = 0, dbl_in_cnt = 0, dbl_rd_chrg = 0; /* Bageshri for redemption */
	long int_h_serv_code=0;
   int int_fclass_exist = 0; /* Bageshri for redemption */
	short i_serv_quantity=0,i_schdl_fee=0,i_service_cd=0; 
   short i_instr_code = 0, i_pymt_ccy = 0, i_rd_chrg = 0; /* Bageshri for redemption */
	
	EXEC SQL VAR h_dl_client IS STRING;
	EXEC SQL VAR chr_h_bl_upto_dt IS STRING;
	EXEC SQL VAR h_ca_event IS STRING;
	EXEC SQL VAR h_instr_code IS STRING;
	EXEC SQL VAR h_pymt_ccy IS STRING;

	EXEC SQL END DECLARE SECTION;


	double nFee = 0.0,srv_charge = 0.0, l_nfee=0.0, rd_charge =0.0, tot_rd_chrg = 0.0; /* Bageshri for redemption */
	char chr_acct_str[IV_CLT_LEN],chr_l_acct_str[IV_CLT_LEN];
	char chr_l_charge_type, chr_l_fee_type;
	char chr_l_charge_basis[IV_STRING_LEN],chr_l_fee_basis[IV_STRING_LEN];
	char chr_mstacctstr[IV_CLT_LEN],chr_l_buf[BUFFER_LEN];
	int int_retstat=0,int_fetch_cnt=0;
	int int_is_othsrv_cur_open_a = 0,int_is_paym_cur_open = 0;
	double l_nil_fees=0,l_minimumfee=0,l_maximum_fee=0;
	double l_minimumfee_adj=0,l_maximum_fee_adj=0,l_exchg_rt = 1.0;
	IV_CLIENT_SERV_BASIS_STRUCT l_iv_client_serv_basis_structa;
	IV_CLIENTSETUP_STRUCT l_iv_clientsetup_struct;
	int int_dv_cnt = 0, int_cashdiv_cnt = 0;  
	char chr_cd_param_val[IV_PARAM_LEN];  
	IV_DATA_STRUCT_H l_sun_port_param_struct[50]; 
	char l_clt_gen_flag[2] = APL_NULL_STRING;/*Added by siva.ganapathi for ISKB_2470 on 07-Dec-2010*/
	struct sqlca sqlca;
	sqlca.sqlcode = 0;

	memset(l_sun_port_param_struct[0].proc_data,APL_NULL_CHAR,100); 
	memset(chr_acct_str,APL_NULL_CHAR,IV_CLT_LEN);
	memset(chr_mstacctstr,APL_NULL_CHAR,IV_CLT_LEN);
	memset(chr_l_acct_str,APL_NULL_CHAR,IV_CLT_LEN);
	memset(chr_h_bl_upto_dt,APL_NULL_CHAR,APL_DATE_LEN);
	memset(h_ca_event,APL_NULL_CHAR,3);
	memset(chr_l_charge_basis,APL_NULL_CHAR,IV_STRING_LEN);
	memset(chr_l_fee_basis,APL_NULL_CHAR,IV_STRING_LEN);
	memset(chr_l_buf,APL_NULL_CHAR,BUFFER_LEN);
	memset(chr_h_srv_ind,APL_NULL_CHAR,50);

	strcpy(chr_acct_str,p_cltt_str);
	strcpy(chr_l_acct_str,p_cltt_str);
	strcpy(h_dl_client,chr_p_client);
	strcpy(chr_h_bl_upto_dt,chr_g_bl_upto_dt);

	*int_p_retstat = IV_SUCCESS;

	
printf("*** Generate Other Service for client |%s|",h_dl_client);
	

	EXEC SQL DECLARE othsrv_cur CURSOR FOR
   SELECT SERVICE_CD,SUM(NVL(SERVICE_QTY,0.0)),SUM(NVL(SCHDL_FEE,0.0)) 
   FROM IV_SERV_OTH 
	WHERE ((CLIENT = :h_dl_client) AND
			(B_UPTO_DATE = :chr_h_bl_upto_dt) AND
			(CHECKER IS NOT NULL))
	GROUP BY SERVICE_CD;

	EXEC SQL OPEN othsrv_cur;

	if(sqlca.sqlcode < 0)
	{
		fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
		fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
		fflush(fp);
		int_bl_err_level = 1;
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
	}

	IS_ANY_ORA_ERROR;

	int_is_othsrv_cur_open_a = 1;

	for( ; ; )
	{

		int_h_serv_code = 0;
		h_serv_quantity = 0;
		h_schdl_fee = 0;
		l_nfee =0;

		EXEC SQL FETCH othsrv_cur 
		INTO :int_h_serv_code:i_service_cd,
			  :h_serv_quantity:i_serv_quantity,
			  :h_schdl_fee:i_schdl_fee;

		if(sqlca.sqlcode == 1403)
			break;

		#ifdef BILLDEBUG 

			fprintf(TestRep, "Oth Srv for Account %s: Serv Code: %ld, Qty: %lf, Fee: %lf\n", 
						h_dl_client, int_h_serv_code, h_serv_quantity, h_schdl_fee);
			fflush(TestRep);

		#endif 

		APL_IF_DEBUG
    	{
       	CO_ProcMonitor(fp,"Generating charges for client ",NULL,NULL);
       	memset(chr_l_buf,NULL,BUFFER_LEN);
       	sprintf(chr_l_buf," %s for service %ld",h_dl_client,int_h_serv_code); //AIX - Warnings Removal
       	CO_ProcMonitor(fp,chr_l_buf,NULL,NULL);
    	}
	/*Added by siva.ganapathi for ISKB_2470 on 07-Dec-2010  -- started*/

	//printf("\n In other services the service code is %d",int_h_serv_code); Changes done for AIX Migration
	printf("\n In other services the service code is %ld",int_h_serv_code);
        fflush(stdout);

	if (IV_Chk_CltAEPass(h_dl_client,int_h_serv_code,&l_clt_gen_flag,&int_retstat,l_debug_info_ptr) == APL_FAILURE )
	{
			printf("\n Failed in the function IV_Chk_CltAEPass() function");
			APL_GOBACK_FAIL;
	}
	
	//printf("\n Client Bill generation flag for  service code %d is %s",int_h_serv_code,l_clt_gen_flag); Changes done for AIX Migration
	printf("\n Client Bill generation flag for  service code %ld is %s",int_h_serv_code,l_clt_gen_flag);
	fflush(stdout);

	if( strcmp(l_clt_gen_flag,"Y") == 0)
	{

		if((int_h_serv_code == UNDERBILLING) || (int_h_serv_code == OVERBILLING) || 
		    (int_h_serv_code == SPECIALBILLING))
		{
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Mod_NewIVTRANSAC(h_dl_client,int_h_serv_code,'I',
			    " "," ",h_schdl_fee * g_exchg_rt_fee_bl,h_serv_quantity,chr_g_bl_ccycode,h_serv_quantity,
			    p_mstclt_a, APL_NULL_STRING,&int_retstat,l_debug_info_ptr))           

			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}

				APL_GOBACK_FAIL; 
			}

			
			int_retstat = IV_SUCCESS;
			if ((int_h_serv_code == UNDERBILLING) || (int_h_serv_code == OVERBILLING) )
			{
				if(APL_FAILURE == IV_Mod_NewIVTRANSFee(h_dl_client,int_h_serv_code,'I',
			   	 " ",h_schdl_fee * g_exchg_rt_fee_bl," ", 0.0,h_serv_quantity,chr_g_bl_ccycode,h_serv_quantity,
			    	p_mstclt_a, APL_NULL_STRING,&int_retstat,l_debug_info_ptr))           

				{
					fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
					fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
						CO_FreeErrLst(l_debug_info_ptr);
					}

					APL_GOBACK_FAIL; 
				}
         }
			else if(int_h_serv_code == SPECIALBILLING)
			{
			   l_nfee = (h_schdl_fee / h_serv_quantity ) * g_exchg_rt_fee_bl;	
				if(APL_FAILURE == IV_Mod_NewIVTRANSFee(h_dl_client,int_h_serv_code,'I',
			   	 " ",h_schdl_fee * g_exchg_rt_fee_bl," ", l_nfee,h_serv_quantity,chr_g_bl_ccycode,h_serv_quantity,
			    	p_mstclt_a, APL_NULL_STRING,&int_retstat,l_debug_info_ptr))           

				{
					fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
					fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
						CO_FreeErrLst(l_debug_info_ptr);
					}

					APL_GOBACK_FAIL; 
				}
          }


			int_retstat = IV_SUCCESS;
			/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
			if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,0.0,
			    0.00,0.00,h_schdl_fee * g_exchg_rt_fee_bl,
			    chr_g_bl_ccycode,'I',int_h_serv_code,p_mstclt_a,'Y',&int_retstat,l_debug_info_ptr))  
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}

				APL_GOBACK_FAIL;
			}
		}
		else 
		{
			if(chr_g_bl_gen == 'M')
			{
				strcpy(chr_mstacctstr,p_mstclt_a);
				strcat(chr_mstacctstr,";");
				int_retstat = IV_SUCCESS;
				if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(p_mstclt_a,&l_iv_clientsetup_struct,&int_retstat,l_debug_info_ptr))
				{
					if(int_retstat == IV_CRITCAL_ERROR_IND)
					{
						fprintf(fp,"Error : Account %s  not found in billing system\n",p_mstclt_a);
						fflush(fp);
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
						int_bl_err_level = 1;
						if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
						{
							CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
							CO_FreeErrLst(l_debug_info_ptr);
						}

						APL_GOBACK_FAIL;
					}
				}

				strcat(chr_mstacctstr,l_iv_clientsetup_struct.default_feeclt);
				strcat(chr_mstacctstr,";");
				strcat(chr_mstacctstr,chr_g_cb_code);
				strcat(chr_mstacctstr,";");
				strcat(chr_mstacctstr,APL_NULL_STRING);

				if(APL_FAILURE == IV_Rtv_GetServBasis(chr_mstacctstr,int_h_serv_code,
						&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
				{
					fprintf(fp,"Error : Service basis not found for service %ld for master client of %s\n", int_h_serv_code,chr_p_client);
					fflush(fp);
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
						CO_FreeErrLst(l_debug_info_ptr);
					}
					*int_p_retstat = int_retstat;

					APL_GOBACK_FAIL;
				}
				
				chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas;
				chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
				strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
				strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
				/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
					l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';
			}
			else
			{	
				printf("Inside Else \n |%s| \n", h_dl_client);
				
				int_retstat = IV_SUCCESS;
				if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(h_dl_client,&l_iv_clientsetup_struct,&int_retstat,
				    l_debug_info_ptr))
				{
					if(int_retstat == IV_CRITCAL_ERROR_IND)
					{

						fprintf(fp,"Error : Account %s  not found in billing system\n",l_iv_client_serv_basis_structa.client);
						fflush(fp);
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
						int_bl_err_level = 1;
						if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
						{
							CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
							CO_FreeErrLst(l_debug_info_ptr);
						}
						APL_GOBACK_FAIL;
					}
				}
			}

			printf("Entering IV_Rtv_GetServBasis :|%s|\n",chr_acct_str);

			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_GetServBasis(chr_acct_str,int_h_serv_code,
					&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
			{
				//fprintf(fp,"Error : Service basis not found for service %d for master client of %s\n",int_h_serv_code, chr_p_client); Changes done for AIX Migration
				fprintf(fp,"Error : Service basis not found for service %ld for master client of %s\n",int_h_serv_code, chr_p_client);
				
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}
				*int_p_retstat = int_retstat;

				APL_GOBACK_FAIL;

			}

			if(chr_g_bl_gen != 'M')
			{
				strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
				strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
			}

			chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas;  
			chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
			l_nil_fees   = l_iv_client_serv_basis_structa.nil_fees;
			l_minimumfee   = l_iv_client_serv_basis_structa.minimumfee;
			l_maximum_fee   = l_iv_client_serv_basis_structa.maximum_fee;
			/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
					l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';

			#ifdef BILLDEBUG 

			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: Fee Basis: %s, Charge Basis: %s, \nFee Type: %c, Charge Type: %c\n", chr_l_fee_basis, chr_l_charge_basis, chr_l_fee_type, chr_l_charge_type);

			fprintf(TestRep, "Details obtained from client %s\n", l_iv_client_serv_basis_structa.client);
			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: NilFee : %lf, MinFee : %lf, MaxFee : %lf\n", 
						  l_nil_fees, l_minimumfee, l_maximum_fee);
		
			fflush(TestRep);

			#endif 			
			
			if(strcmp(l_iv_client_serv_basis_structa.client,h_dl_client) != 0)
			{
				int_retstat = IV_SUCCESS;
				Alert("Entering IV_Rtv_IVCUSTSETUP :|%s|\n",l_iv_client_serv_basis_structa.client);
				
				if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_iv_client_serv_basis_structa.client,
								&l_iv_clientsetup_struct,&int_retstat,
								l_debug_info_ptr))
				{
					if(int_retstat == IV_CRITCAL_ERROR_IND)
					{

						fprintf(fp,"Error : Account %s  not found in billing system\n",l_iv_client_serv_basis_structa.client);

						fflush(fp);
						*int_p_retstat = IV_CRITCAL_ERROR_IND;
						int_bl_err_level = 1;
						if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
						{
							CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
							CO_FreeErrLst(l_debug_info_ptr);
						}
						APL_GOBACK_FAIL;
					}
				}

				l_exchg_rt = 1.0;
				if(strcmp( l_iv_clientsetup_struct.fees_ccy,chr_g_fee_ccycode) != 0) 
				{
					int_retstat = IV_SUCCESS;
					if(APL_FAILURE == IV_Rtv_ExchRate(l_iv_clientsetup_struct.fees_ccy,
								chr_g_fee_ccycode,chr_g_bl_upto_dt,&l_exchg_rt,  
				   	 			&int_retstat,l_debug_info_ptr))
					{
						fprintf(fp,"Exchange Rate not found for currency %s %s\n",l_iv_clientsetup_struct.fees_ccy, chr_g_fee_ccycode);   
						fflush(fp);
						int_bl_err_level = 1;
						if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
						{
							CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
							CO_FreeErrLst(l_debug_info_ptr);
						}

						*int_p_retstat = int_retstat;
					}
				}

				#ifdef BILLDEBUG 

					fprintf(TestRep, "Exchange Rate: %lf\n", l_exchg_rt);
					fflush(TestRep);

				#endif 

            			CO_Round(l_nil_fees * l_exchg_rt, int_g_ccy_decimallen, &l_nil_fees);
            			CO_Round(l_minimumfee * l_exchg_rt, int_g_ccy_decimallen, &l_minimumfee);
            			CO_Round(l_maximum_fee * l_exchg_rt, int_g_ccy_decimallen, &l_maximum_fee);
			}

			l_nil_fees = l_nil_fees * g_exchg_rt_fee_bl; 
			l_minimumfee = l_minimumfee * g_exchg_rt_fee_bl; 
			l_maximum_fee = l_maximum_fee * g_exchg_rt_fee_bl; 

			srv_charge = 0.0;
			int_retstat = IV_SUCCESS;

			/***** NAV Changes By Vinay Kalaskar **************************************************/
			
			//printf("Other Service CD |%d| NAV |%c|\n",int_h_serv_code,l_iv_clientsetup_struct.nav_ind); Changes done for AIX Migration
			printf("Other Service CD |%ld| NAV |%c|\n",int_h_serv_code,l_iv_clientsetup_struct.nav_ind);
		
			if( int_h_serv_code == CUSTODYFEE && l_iv_clientsetup_struct.nav_ind == 'Y' )
			{			    
			    printf("chr_acct_str :|%s|\n",chr_acct_str);
			    printf("int_h_serv_code :|%ld|\n",int_h_serv_code);
			    printf("h_serv_quantity :|%lf|\n",h_serv_quantity);
			    printf("chr_l_charge_type :|%c|\n",chr_l_charge_type);
			    printf("chr_l_fee_type :|%c|\n",chr_l_fee_type);
			    printf("p_mstclt_a :|%s|\n",p_mstclt_a);
			    printf("chr_l_charge_basis :|%s|\n",chr_l_charge_basis);
			    printf("chr_l_fee_basis :|%s|\n",chr_l_fee_basis);
			    printf("chr_h_srv_ind :|%s|\n",chr_h_srv_ind);
		 	    
			    if(APL_FAILURE == IV_Proc_CalcFee("O",chr_acct_str,
			    				int_h_serv_code,
							";",
			    				APL_NULL_STRING,
							";",
							h_serv_quantity,
			    				h_serv_quantity,
			    				chr_l_charge_type,
			    				chr_l_fee_type,
							&srv_charge,
			    				l_sun_port_param_struct,
							'I',
			    				p_mstclt_a,
							chr_l_charge_basis,
			    				chr_l_fee_basis,
							chr_h_srv_ind,
			    				&int_retstat,l_debug_info_ptr)) 
				{
					if(int_retstat == IV_CRITCAL_ERROR_IND)
					{
						fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
						fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
						fflush(fp);
						int_bl_err_level = 1;
					
						if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
						{
							CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
							CO_FreeErrLst(l_debug_info_ptr);
						}
					
						*int_p_retstat = int_retstat;
					}
				}
			}
			else
			{	
				Alert("Calculating Other Service :|%ld|\n",int_h_serv_code);

				if(APL_FAILURE == IV_Proc_CalcFee("O",chr_acct_str,
								int_h_serv_code,
								";",
			    					APL_NULL_STRING,
								" ",
								h_serv_quantity,
			    					h_serv_quantity,
			    					chr_l_charge_type,
			    					chr_l_charge_type,
								&srv_charge,
			    					l_sun_port_param_struct,
								'I',
								p_mstclt_a,
								" ",
								" ",
								chr_h_srv_ind,&int_retstat,
								l_debug_info_ptr))
				{
					if(int_retstat == IV_CRITCAL_ERROR_IND)
					{
						fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
						
						fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
						fflush(fp);
						int_bl_err_level = 1;
	
						if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
						{
							CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
							CO_FreeErrLst(l_debug_info_ptr);
						}
						*int_p_retstat = int_retstat;
					}
				}
			}	
			

			if(srv_charge == 0.0 && l_nil_fees > 0.0)
			{
				int_retstat = IV_SUCCESS;
				/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
				if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,l_nil_fees, 0.0,0.0,0.0,chr_g_bl_ccycode,
				    'I',int_h_serv_code,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,&int_retstat,l_debug_info_ptr))
				{
					fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
					fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
					fflush(fp);
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
						CO_FreeErrLst(l_debug_info_ptr);
					}

					*int_p_retstat = int_retstat;

				}
			}
			else if(srv_charge > 0)
			{
				if(srv_charge < l_minimumfee)
					l_minimumfee_adj = l_minimumfee - srv_charge;
				else
					l_minimumfee_adj = 0;

				if((srv_charge > l_maximum_fee) && (l_maximum_fee != 0))
				{
					l_maximum_fee_adj =  l_maximum_fee - srv_charge;
				}
				else
					l_maximum_fee_adj = 0;

				int_retstat = IV_SUCCESS;
				/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
				if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,0.0,
				    l_minimumfee_adj,l_maximum_fee_adj,srv_charge,
				    chr_g_bl_ccycode,'I',int_h_serv_code,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,&int_retstat,l_debug_info_ptr))
				{
					fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
					fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}

					APL_GOBACK_FAIL;
				}
			} 
		} 
	 }/*Close if l_clt_gen_flag if loop */
	/*Added by siva.ganapathi for ISKB_2470 on 07-Dec-2010  -- Ended*/
	} 

	EXEC SQL CLOSE othsrv_cur;

	int_is_othsrv_cur_open_a = 0;

	
	
/*shailesh120208 changes for CAcharges.Only 2 service codes ofr CA(70,71)
	EXEC SQL SELECT NVL(COUNT(*),0)
	INTO :dbl_cd_cnt
	FROM CACHEQUE a, CAEVENT b
	WHERE	(b.CA_EVENT = 'CD' OR b.CA_EVENT = 'DV') AND
			a.CORP_ID = b.CORP_ID AND
			a.CLIENT = :h_dl_client AND
			a.CHECKER IS NOT NULL AND
			(a.DATEOFBILLING IS NULL OR
			a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
			a.STAT_PYMT != 'DL' AND 
			a.DATE_OF_INPUT <= :chr_h_bl_upto_dt; 

	if(sqlca.sqlcode < 0)
	{
		fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
		fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
		fflush(fp);
		int_bl_err_level = 1;
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
	}

	IS_ANY_ORA_ERROR
shailesh120208*/
	/*EXEC SQL SELECT NVL(COUNT(*),0)
	INTO :dbl_in_cnt
	FROM CACHEQUE a, CAEVENT b
	WHERE	b.CA_EVENT = 'BI' AND
			a.CORP_ID = b.CORP_ID AND
			a.CLIENT = :h_dl_client AND
			a.CHECKER IS NOT NULL AND
			(a.DATEOFBILLING IS NULL OR
			a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
			a.STAT_PYMT != 'DL' AND 
			a.DATE_OF_INPUT <= :chr_h_bl_upto_dt;*/
		
/* Bageshri for excluding BI charges if RD declared on same day */

/*shailesh120208
		EXEC SQL SELECT NVL(COUNT(*),0)
		INTO :dbl_in_cnt
		FROM CACHEQUE a, CAEVENT b
		WHERE b.CA_EVENT = 'BI' AND
		a.CORP_ID = b.CORP_ID AND
		a.CLIENT = :h_dl_client AND
		a.CHECKER IS NOT NULL AND
		(a.DATEOFBILLING IS NULL OR
		 a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
		a.STAT_PYMT != 'DL' AND
		a.DATE_OF_INPUT <= :chr_h_bl_upto_dt AND
		b.declare_dt||b.instr_code NOT IN (SELECT DISTINCT b.DECLARE_DT||b.INSTR_CODE
				FROM CACHEQUE a, CAEVENT b
				WHERE b.CA_EVENT = 'RD' AND
				a.CORP_ID = b.CORP_ID AND
				a.CLIENT = :h_dl_client AND
				a.CHECKER IS NOT NULL AND
				(a.DATEOFBILLING IS NULL OR
				 a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
				a.STAT_PYMT = 'CP' AND
				a.DATE_OF_INPUT <= :chr_h_bl_upto_dt);
																	 
									  
	if (sqlca.sqlcode < 0)
	{
		fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
		fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
		fflush(fp);
		int_bl_err_level = 1;
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
	}

	IS_ANY_ORA_ERROR
shailesh120208*/
		/* Bageshri for Bond Redemption Charges */

/*shailesh120208
		EXEC SQL SELECT NVL(COUNT(*),0)
		INTO :int_fclass_exist
		FROM IV_SERV_MAST c
		WHERE c.SERVICE_CD = '61' 
		AND c.FEES_CLASS ='P' 
		AND c.STATUS='AA';

	if (sqlca.sqlcode < 0)
	{
		fprintf(fp,"Error in accessing table IV_SERV_MAST. Please contact support\n");
		fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
		fflush(fp);
		int_bl_err_level = 1;
		*int_p_retstat = IV_CRITCAL_ERROR_IND;
	}

	IS_ANY_ORA_ERROR
 Alert("upto dt :|%s| ",chr_h_bl_upto_dt);
		if(int_fclass_exist == 1)
		{
			EXEC SQL DECLARE BondRedmCurr CURSOR FOR
				SELECT NVL(a.CURR_PYMT,0),b.INSTR_CODE,a.PAYMENT_CCY
				FROM CACHEQUE a, CAEVENT b
				WHERE b.CA_EVENT = 'RD' AND
				b.OP_EVT_CLASS IN ('PT','RD') AND
				a.DEAL_IDENTITY_NO LIKE 'REDMPT%' AND
				a.CORP_ID = b.CORP_ID AND
				a.CLIENT = :h_dl_client AND
			   a.CHECKER IS NOT NULL AND
				(a.DATEOFBILLING IS NULL OR a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
				a.STAT_PYMT = 'CP' AND
				a.DATE_OF_INPUT <= :chr_h_bl_upto_dt;

			EXEC SQL OPEN BondRedmCurr;
			shailesh120208*/

		/*	EXEC SQL SELECT NVL(SUM(a.CURR_PYMT),0)
				INTO :dbl_rd_chrg
				FROM CACHEQUE a, CAEVENT b
				WHERE b.CA_EVENT = 'RD' AND
				a.CORP_ID = b.CORP_ID AND
				a.CLIENT = :h_dl_client AND
				a.CHECKER IS NOT NULL AND
				(a.DATEOFBILLING IS NULL OR
				 a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
				a.STAT_PYMT = 'CP' AND
				a.DATE_OF_INPUT <= :chr_h_bl_upto_dt;*/

	/*shailesh120208
		Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
			IS_ANY_ORA_ERROR
			if(sqlca.sqlcode < 0)
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
			}


				for(;;)
				{
					dbl_rd_chrg = 0;
					strcpy(h_instr_code,APL_NULL_STRING);
					strcpy(h_pymt_ccy,APL_NULL_STRING);
					
					EXEC SQL FETCH BondRedmCurr
						INTO :dbl_rd_chrg:i_rd_chrg,
							  :h_instr_code:i_instr_code,
							  :h_pymt_ccy:i_pymt_ccy;

					if(sqlca.sqlcode == 1403)
						break;

					Alert("dbl_rd_chrg :|%lf|h_instr_code:|%s|h_pymt_ccy|%s|",dbl_rd_chrg,h_instr_code,h_pymt_ccy);

					int_retstat = IV_SUCCESS;
					l_exchg_rt = 1.0;

					if ( strcmp(h_pymt_ccy, chr_g_fee_ccycode) != 0 )
					{
						if(APL_FAILURE == IV_Rtv_ExchRate(h_pymt_ccy,chr_g_fee_ccycode,chr_g_bl_upto_dt,&l_exchg_rt,&int_retstat,l_debug_info_ptr))
						{
							fprintf(fp,"Error : Exchange Rate not found for currency %s %s\n",h_pymt_ccy, chr_g_fee_ccycode);
							fflush(fp);
							int_bl_err_level = 1;
							if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
							{
								CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

								CO_FreeErrLst(l_debug_info_ptr);
							}
							*int_p_retstat = int_retstat;
						}
					}
					         CO_Round(dbl_rd_chrg * l_exchg_rt, int_g_ccy_decimallen, &dbl_rd_chrg);
								Alert("rd chrg|%lf|,exch rate|%lf|,dec len |%d|",dbl_rd_chrg,l_exchg_rt,int_g_ccy_decimallen);
								tot_rd_chrg = tot_rd_chrg + dbl_rd_chrg;
								Alert(" total rd amt : |%lf| ",tot_rd_chrg);
				}
				EXEC SQL CLOSE BondRedmCurr;
					
		}
	printf("\nTOTAL REDEM CHARGE $$$$$$$$$$$$$$$$$ |%lf|",tot_rd_chrg);
shailesh120208*/
	/******************************/

/*shailesh120208
	#ifdef BILLDEBUG 

		fprintf(TestRep, "OTHSERV: No. Of CD : %lf, No of IN : |%lf||%lf|\n",dbl_cd_cnt, dbl_in_cnt, dbl_rd_chrg );
		fflush(TestRep);

	#endif 
shailesh120208*/

	if(dbl_cd_cnt > 0)
	{
		srv_charge = 0;
		int_h_serv_code = CASH_DIV_FEE;
		if(chr_g_bl_gen == 'M')
		{
			strcpy(chr_mstacctstr,p_mstclt_a);
			strcat(chr_mstacctstr,";");
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(p_mstclt_a,&l_iv_clientsetup_struct,&int_retstat,l_debug_info_ptr))
			{
				if(int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fp,"Error : Account %s  not found in billing system\n",p_mstclt_a);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}
					APL_GOBACK_FAIL;
				}
			}

			strcat(chr_mstacctstr,l_iv_clientsetup_struct.default_feeclt);
			strcat(chr_mstacctstr,";");
			strcat(chr_mstacctstr,chr_g_cb_code);
			strcat(chr_mstacctstr,";");
			strcat(chr_mstacctstr,APL_NULL_STRING);
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_GetServBasis(chr_mstacctstr,int_h_serv_code,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error : Service basis not found for service %ld for master client of %s\n",int_h_serv_code, h_dl_client);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

					CO_FreeErrLst(l_debug_info_ptr);
				}

				*int_p_retstat = int_retstat;

				APL_GOBACK_FAIL;
			}

			chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas;
			chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
			strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
			strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
			/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
					l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';

		} 

			int_retstat = IV_SUCCESS;
		if(APL_FAILURE == IV_Rtv_GetServBasis(chr_acct_str,int_h_serv_code,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
		{
			fprintf(fp,"Error : Service basis not found for service %ld for master client of %s\n",int_h_serv_code, h_dl_client);
			fflush(fp);
			int_bl_err_level = 1;
			if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
			{
				CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

				CO_FreeErrLst(l_debug_info_ptr);
			}
			*int_p_retstat = int_retstat;
			
			APL_GOBACK_FAIL;
		}
		
		if(chr_g_bl_gen != 'M')
		{
			strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
			strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
		}
		chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas; 
		chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
		l_nil_fees   = l_iv_client_serv_basis_structa.nil_fees;
		l_minimumfee   = l_iv_client_serv_basis_structa.minimumfee;
		l_maximum_fee   = l_iv_client_serv_basis_structa.maximum_fee;
		/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
				l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';

		#ifdef BILLDEBUG 

			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: CASH_DIV_FEE Fee Basis: %s, Charge Basis: %s,\nFee Type: %c, Charge Type: %c\n", 
					  chr_l_fee_basis, chr_l_charge_basis, chr_l_fee_type, chr_l_charge_type);
			fprintf(TestRep, "Details obtained from client %s\n", l_iv_client_serv_basis_structa.client);
			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: NilFee : %lf, MinFee : %lf, MaxFee : %lf\n", 
					  l_nil_fees, l_minimumfee, l_maximum_fee);
			fflush(TestRep);

		#endif 
		
		if(strcmp(l_iv_client_serv_basis_structa.client,h_dl_client) != 0)
		{
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_iv_client_serv_basis_structa.client,&l_iv_clientsetup_struct,&int_retstat,l_debug_info_ptr))
			{
				if(int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fp,"Error : Account %s  not found in billing system\n",l_iv_client_serv_basis_structa.client);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}
					APL_GOBACK_FAIL;
				}
			}

			int_retstat = IV_SUCCESS;
			l_exchg_rt = 1.0;

			if ( strcmp(l_iv_clientsetup_struct.fees_ccy, chr_g_fee_ccycode) != 0 ) 
			{
				if(APL_FAILURE == IV_Rtv_ExchRate(l_iv_clientsetup_struct.fees_ccy,chr_g_fee_ccycode,chr_g_bl_upto_dt,&l_exchg_rt,
				    &int_retstat,l_debug_info_ptr))
				{
					fprintf(fp,"Error : Exchange Rate not found for currency %s %s\n",l_iv_clientsetup_struct.fees_ccy, chr_g_fee_ccycode);
					fflush(fp);
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}
					*int_p_retstat = int_retstat;
				}
			}

			

         CO_Round(l_nil_fees * l_exchg_rt, int_g_ccy_decimallen, &l_nil_fees);
         CO_Round(l_minimumfee * l_exchg_rt, int_g_ccy_decimallen, &l_minimumfee);
         CO_Round(l_maximum_fee * l_exchg_rt, int_g_ccy_decimallen, &l_maximum_fee);
		}
		l_nil_fees = l_nil_fees * g_exchg_rt_fee_bl;  
		l_minimumfee = l_minimumfee * g_exchg_rt_fee_bl;  
		l_maximum_fee = l_maximum_fee * g_exchg_rt_fee_bl;  

		#ifdef BILLDEBUG 

			fprintf(TestRep, "Exchange Rate: %lf\n", l_exchg_rt);
			fflush(TestRep);

		#endif 

		int_retstat = IV_SUCCESS;
		srv_charge = 0.0;

		
		

                EXEC SQL SELECT NVL(COUNT(*),0)
                INTO :int_dv_cnt
                FROM CACHEQUE a, CAEVENT b
                WHERE   b.CA_EVENT = 'DV' AND
                        a.CORP_ID = b.CORP_ID AND
                        a.CLIENT = :h_dl_client AND
                        a.CHECKER IS NOT NULL AND
                        (a.DATEOFBILLING IS NULL OR
                        a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
                        a.STAT_PYMT != 'DL' AND
                        a.DATE_OF_INPUT <= :chr_h_bl_upto_dt;
               
	       
		
                int_cashdiv_cnt = dbl_cd_cnt - int_dv_cnt;
               
                
               
		sprintf(chr_cd_param_val,"%d;%d",int_cashdiv_cnt,int_dv_cnt);
		CO_ProcMonitor(TechRep,chr_cd_param_val,NULL,NULL);



		if(APL_FAILURE == IV_Proc_CalcFee("O",chr_acct_str,CASH_DIV_FEE,";",APL_NULL_STRING," ",dbl_cd_cnt,dbl_cd_cnt,
		    								chr_l_charge_type,chr_l_charge_type,&srv_charge,l_sun_port_param_struct,'I',p_mstclt_a,chr_l_charge_basis, chr_l_fee_basis,chr_h_srv_ind,&int_retstat,l_debug_info_ptr))
		{
			if(int_retstat == IV_CRITCAL_ERROR_IND)
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}
				*int_p_retstat = int_retstat;
			}
		}
		EXEC SQL UPDATE IV_DEAL SET  proc_data_val= :chr_cd_param_val 
		WHERE CLIENT =  :h_dl_client 
		AND DATEOF_BILLING = :chr_h_bl_upto_dt
		AND SERVICE_CD = '8';

		EXEC SQL UPDATE IV_DEAL_FEE  SET  proc_data_val= :chr_cd_param_val
		WHERE CLIENT =  :h_dl_client
		AND DATEOF_BILLING = :chr_h_bl_upto_dt
		AND SERVICE_CD = '8';

		if( (srv_charge == 0) && (l_nil_fees > 0.0))
		{
			int_retstat = IV_SUCCESS;
			/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
			if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,l_nil_fees, 0.0,0.0,0.0,chr_g_bl_ccycode,'I',
			    CASH_DIV_FEE,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,&int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}
				*int_p_retstat = int_retstat;
			}
		}
		else if(srv_charge > 0)
		{
			if(srv_charge < l_minimumfee)
				l_minimumfee_adj = l_minimumfee - srv_charge;
			else
				l_minimumfee_adj = 0;
			if((srv_charge > l_maximum_fee) && (l_maximum_fee != 0))
			{
				l_maximum_fee_adj = l_maximum_fee - srv_charge;
			}
			else
				l_maximum_fee_adj = 0;

			int_retstat = IV_SUCCESS;
			/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
			if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,0.0,
			    l_minimumfee_adj,l_maximum_fee_adj,srv_charge,
			    chr_g_bl_ccycode,'I',CASH_DIV_FEE,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,
			    &int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

					CO_FreeErrLst(l_debug_info_ptr);
				}

				APL_GOBACK_FAIL;
			}
		}
		

		EXEC SQL UPDATE CACHEQUE  
		SET DATEOFBILLING = :chr_h_bl_upto_dt
		WHERE	ROWID IN (SELECT a.ROWID FROM CACHEQUE a, CAEVENT b 
								WHERE (b.CA_EVENT = 'CD' OR b.CA_EVENT = 'DV') AND
								a.CORP_ID = b.CORP_ID AND
								a.CLIENT = :h_dl_client AND
								a.CHECKER IS NOT NULL AND
								(a.DATEOFBILLING IS NULL OR
								a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
								a.STAT_PYMT != 'DL' AND 
								a.DATE_OF_INPUT <= :chr_h_bl_upto_dt);
	} 

	if(dbl_in_cnt > 0)
	{
		srv_charge = 0;
		int_h_serv_code = IV_BONDINT_FEE;
		if(chr_g_bl_gen == 'M')
		{
			strcpy(chr_mstacctstr,p_mstclt_a);
			strcat(chr_mstacctstr,";");
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(p_mstclt_a,&l_iv_clientsetup_struct,&int_retstat,l_debug_info_ptr))
			{
				if(int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fp,"Error : Account %s  not found in billing system\n",p_mstclt_a);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}

					APL_GOBACK_FAIL;
				}
			}

			strcat(chr_mstacctstr,l_iv_clientsetup_struct.default_feeclt);
			strcat(chr_mstacctstr,";");
			strcat(chr_mstacctstr,chr_g_cb_code);
			strcat(chr_mstacctstr,";");
			strcat(chr_mstacctstr,APL_NULL_STRING);

			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_GetServBasis(chr_mstacctstr,int_h_serv_code,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error : Service basis not found for service %ld for client %s\n",int_h_serv_code, h_dl_client);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

					CO_FreeErrLst(l_debug_info_ptr);
				}
				*int_p_retstat = int_retstat;

				APL_GOBACK_FAIL;

			}

			chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas;
			chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
			strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
			strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
			/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
				l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';
		}

		int_retstat = IV_SUCCESS;
		if(APL_FAILURE == IV_Rtv_GetServBasis(chr_acct_str,int_h_serv_code,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
		{
			fprintf(fp,"Error : Service basis not found for service %ld for client %s\n",int_h_serv_code,h_dl_client);
			fflush(fp);
			int_bl_err_level = 1;
			if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
			{
				CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

				CO_FreeErrLst(l_debug_info_ptr);
			}

			*int_p_retstat = int_retstat;

			APL_GOBACK_FAIL;
		}

		if(chr_g_bl_gen != 'M')
		{
			strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
			strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
		}

		chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas; 
		chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
		l_nil_fees   = l_iv_client_serv_basis_structa.nil_fees;
		l_minimumfee   = l_iv_client_serv_basis_structa.minimumfee;
		l_maximum_fee   = l_iv_client_serv_basis_structa.maximum_fee;
		/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
				l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';

		#ifdef BILLDEBUG 

			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: IV_BONDINT_FEE Fee Basis: %s, Charge Basis: %s,\nFee Type: %c, Charge Type: %c\n", 
					  chr_l_fee_basis, chr_l_charge_basis, chr_l_fee_type, chr_l_charge_type);
			fprintf(TestRep, "Details obtained from client %s\n", l_iv_client_serv_basis_structa.client);
			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: NilFee : %lf, MinFee : %lf, MaxFee : %lf\n", 
					  l_nil_fees, l_minimumfee, l_maximum_fee);
			fflush(TestRep);

		#endif 

		if(strcmp(l_iv_client_serv_basis_structa.client,h_dl_client) != 0)
		{
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_iv_client_serv_basis_structa.client,&l_iv_clientsetup_struct,&int_retstat,l_debug_info_ptr))
			{
				if(int_retstat == IV_CRITCAL_ERROR_IND)
				{

					fprintf(fp,"Account %s  not found in billing system\n",l_iv_client_serv_basis_structa.client);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}

					APL_GOBACK_FAIL;
				}

			}

			l_exchg_rt = 1.0;
			int_retstat = IV_SUCCESS;

			if ( strcmp(l_iv_clientsetup_struct.fees_ccy, chr_g_fee_ccycode) != 0 ) 
			{
				if(APL_FAILURE == IV_Rtv_ExchRate(l_iv_clientsetup_struct.fees_ccy,chr_g_fee_ccycode,chr_g_bl_upto_dt,&l_exchg_rt,
													    &int_retstat,l_debug_info_ptr))
				{
					fprintf(fp,"Error : Exchange Rate not found for currency %s %s\n",l_iv_clientsetup_struct.fees_ccy, chr_g_fee_ccycode);
					fflush(fp);
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
						CO_FreeErrLst(l_debug_info_ptr);
					}

					*int_p_retstat = int_retstat;
				}
			}

			

         CO_Round(l_nil_fees * l_exchg_rt, int_g_ccy_decimallen, &l_nil_fees);
         CO_Round(l_minimumfee * l_exchg_rt, int_g_ccy_decimallen, &l_minimumfee);
         CO_Round(l_maximum_fee * l_exchg_rt, int_g_ccy_decimallen, &l_maximum_fee);
		}
		l_nil_fees = l_nil_fees * g_exchg_rt_fee_bl; 
		l_minimumfee = l_minimumfee * g_exchg_rt_fee_bl; 
		l_maximum_fee = l_maximum_fee * g_exchg_rt_fee_bl; 

		int_retstat = IV_SUCCESS;
		srv_charge = 0.0;


		if(APL_FAILURE == IV_Proc_CalcFee("O",chr_acct_str,IV_BONDINT_FEE,";",
		    APL_NULL_STRING," ",dbl_in_cnt,dbl_in_cnt,
		    chr_l_charge_type,
		    chr_l_charge_type,&srv_charge,
		    l_sun_port_param_struct,'I',p_mstclt_a,chr_l_charge_basis,chr_l_fee_basis,chr_h_srv_ind,&int_retstat,l_debug_info_ptr))
		{
			if(int_retstat == IV_CRITCAL_ERROR_IND)
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

					CO_FreeErrLst(l_debug_info_ptr);
				}
				*int_p_retstat = int_retstat;

			}
		}

		if(srv_charge == 0 && l_nil_fees > 0.0)
		{
			int_retstat = IV_SUCCESS;
			/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
			if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,l_nil_fees, 0.0,0.0,0.0,chr_g_bl_ccycode,'I',
			    IV_BONDINT_FEE,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,&int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}

				*int_p_retstat = int_retstat;
			}
		}

		if(srv_charge > 0)
		{
			if(srv_charge < l_minimumfee)
				l_minimumfee_adj = l_minimumfee - srv_charge;
			else
				l_minimumfee_adj = 0;

			if((srv_charge > l_maximum_fee) && (l_maximum_fee != 0))
			{
				l_maximum_fee_adj = l_maximum_fee - srv_charge;
			}
			else
				l_maximum_fee_adj = 0;

			int_retstat = IV_SUCCESS;
			/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
			if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,0.0,
			    l_minimumfee_adj,l_maximum_fee_adj,srv_charge,
			    chr_g_bl_ccycode,'I',IV_BONDINT_FEE,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,
			    &int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error in accessing table for client %s. Please  contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}

				APL_GOBACK_FAIL;
			}
		} 
		

		EXEC SQL UPDATE CACHEQUE 
		SET DATEOFBILLING = :chr_h_bl_upto_dt
		WHERE	ROWID IN (SELECT a.ROWID FROM CACHEQUE a, CAEVENT b 
								WHERE b.CA_EVENT = 'BI' AND
								a.CORP_ID = b.CORP_ID AND
								a.CLIENT = :h_dl_client AND
								a.CHECKER IS NOT NULL AND
								(a.DATEOFBILLING IS NULL OR
								a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
								a.STAT_PYMT != 'DL' AND 
								a.DATE_OF_INPUT <= :chr_h_bl_upto_dt);
	} 

	/* Bageshri for Calculating Bond Redemption Charges */	

   if(tot_rd_chrg > 0)
	{
		int_retstat = IV_SUCCESS;	
		printf("\n calling bond redemption fun for client |%s|",h_dl_client);
		srv_charge = 0;
		int_h_serv_code = BOND_RDM_FEE;
		if(chr_g_bl_gen == 'M')
		{
			strcpy(chr_mstacctstr,p_mstclt_a);
			strcat(chr_mstacctstr,";");
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(p_mstclt_a,&l_iv_clientsetup_struct,&int_retstat,l_debug_info_ptr))
			{
				if(int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fp,"Error : Account %s  not found in billing system\n",p_mstclt_a);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}
					APL_GOBACK_FAIL;
				}
			}

			strcat(chr_mstacctstr,l_iv_clientsetup_struct.default_feeclt);
			strcat(chr_mstacctstr,";");
			strcat(chr_mstacctstr,chr_g_cb_code);
			strcat(chr_mstacctstr,";");
			strcat(chr_mstacctstr,APL_NULL_STRING);
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_GetServBasis(chr_mstacctstr,int_h_serv_code,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error : Service basis not found for service %ld for master client of %s\n",int_h_serv_code, h_dl_client);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

					CO_FreeErrLst(l_debug_info_ptr);
				}

				*int_p_retstat = int_retstat;

				APL_GOBACK_FAIL;
			}

			chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas;
			chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
			strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
			strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
			/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
				l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';

		} 

			int_retstat = IV_SUCCESS;
		if(APL_FAILURE == IV_Rtv_GetServBasis(chr_acct_str,int_h_serv_code,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
		{
			fprintf(fp,"Error : Service basis not found for service %ld for master client of %s\n",int_h_serv_code, h_dl_client);
			fflush(fp);
			int_bl_err_level = 1;
			if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
			{
				CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

				CO_FreeErrLst(l_debug_info_ptr);
			}
			*int_p_retstat = int_retstat;
			
			APL_GOBACK_FAIL;
		}
		
		if(chr_g_bl_gen != 'M')
		{
			strcpy(chr_l_charge_basis,l_iv_client_serv_basis_structa.chrg_base);
			strcpy(chr_l_fee_basis,l_iv_client_serv_basis_structa.fees_base);
		}
		chr_l_charge_type = l_iv_client_serv_basis_structa.chrg_clas; 
		chr_l_fee_type = l_iv_client_serv_basis_structa.fees_class;
		l_nil_fees   = l_iv_client_serv_basis_structa.nil_fees;
		l_minimumfee   = l_iv_client_serv_basis_structa.minimumfee;
		l_maximum_fee   = l_iv_client_serv_basis_structa.maximum_fee;
		/*added by shruthi kumbla for ISKB_1901*/
			if((l_iv_client_serv_basis_structa.incld_in_ann_min_fee)!='Y')
				l_iv_client_serv_basis_structa.incld_in_ann_min_fee = 'N';

		#ifdef BILLDEBUG 

			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: BOND_RDM_FEE Fee Basis: %s, Charge Basis: %s,\nFee Type: %c, Charge Type: %c\n", 
					  chr_l_fee_basis, chr_l_charge_basis, chr_l_fee_type, chr_l_charge_type);
			fprintf(TestRep, "Details obtained from client %s\n", l_iv_client_serv_basis_structa.client);
			fprintf(TestRep, "IV_CLIENT_SERV_BASIS Details: NilFee : %lf, MinFee : %lf, MaxFee : %lf\n", 
					  l_nil_fees, l_minimumfee, l_maximum_fee);
			fflush(TestRep);

		#endif 
		
		if(strcmp(l_iv_client_serv_basis_structa.client,h_dl_client) != 0)
		{
			int_retstat = IV_SUCCESS;
			if(APL_FAILURE == IV_Rtv_IVCUSTSETUP(l_iv_client_serv_basis_structa.client,&l_iv_clientsetup_struct,&int_retstat,l_debug_info_ptr))
			{
				if(int_retstat == IV_CRITCAL_ERROR_IND)
				{
					fprintf(fp,"Error : Account %s  not found in billing system\n",l_iv_client_serv_basis_structa.client);
					fflush(fp);
					*int_p_retstat = IV_CRITCAL_ERROR_IND;
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}
					APL_GOBACK_FAIL;
				}
			}

			int_retstat = IV_SUCCESS;
			l_exchg_rt = 1.0;

			if ( strcmp(l_iv_clientsetup_struct.fees_ccy, chr_g_fee_ccycode) != 0 ) 
			{
				if(APL_FAILURE == IV_Rtv_ExchRate(l_iv_clientsetup_struct.fees_ccy,chr_g_fee_ccycode,chr_g_bl_upto_dt,&l_exchg_rt,
				    &int_retstat,l_debug_info_ptr))
				{
					fprintf(fp,"Error : Exchange Rate not found for currency %s %s\n",l_iv_clientsetup_struct.fees_ccy, chr_g_fee_ccycode);
					fflush(fp);
					int_bl_err_level = 1;
					if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
					{
						CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

						CO_FreeErrLst(l_debug_info_ptr);
					}
					*int_p_retstat = int_retstat;
				}
			}

			

         CO_Round(l_nil_fees * l_exchg_rt, int_g_ccy_decimallen, &l_nil_fees);
         CO_Round(l_minimumfee * l_exchg_rt, int_g_ccy_decimallen, &l_minimumfee);
         CO_Round(l_maximum_fee * l_exchg_rt, int_g_ccy_decimallen, &l_maximum_fee);
		}
		l_nil_fees = l_nil_fees * g_exchg_rt_fee_bl;  
		l_minimumfee = l_minimumfee * g_exchg_rt_fee_bl;  
		l_maximum_fee = l_maximum_fee * g_exchg_rt_fee_bl;  

		#ifdef BILLDEBUG 

			fprintf(TestRep, "Exchange Rate: %lf\n", l_exchg_rt);
			fflush(TestRep);

		#endif 

		int_retstat = IV_SUCCESS;
		srv_charge = 0.0;

		

		if(APL_FAILURE == IV_Proc_CalcFee("O",chr_acct_str,BOND_RDM_FEE,";",APL_NULL_STRING," ",tot_rd_chrg,tot_rd_chrg,chr_l_charge_type,chr_l_charge_type,&srv_charge,l_sun_port_param_struct,'I',p_mstclt_a,chr_l_charge_basis, chr_l_fee_basis,chr_h_srv_ind,&int_retstat,l_debug_info_ptr))
		{
			if(int_retstat == IV_CRITCAL_ERROR_IND)
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}
				*int_p_retstat = int_retstat;
			}
		}

		/*EXEC SQL UPDATE IV_DEAL SET  proc_data_val= :chr_cd_param_val 
		WHERE CLIENT =  :h_dl_client 
		AND DATEOF_BILLING = :chr_h_bl_upto_dt
		AND SERVICE_CD = '61';

		EXEC SQL UPDATE IV_DEAL_FEE  SET  proc_data_val= :chr_cd_param_val
		WHERE CLIENT =  :h_dl_client
		AND DATEOF_BILLING = :chr_h_bl_upto_dt
		AND SERVICE_CD = '61';*/

		if( (srv_charge == 0) && (l_nil_fees > 0.0))
		{
			int_retstat = IV_SUCCESS;
			
/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
			if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,l_nil_fees, 0.0,0.0,0.0,chr_g_bl_ccycode,'I',
			    BOND_RDM_FEE,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,&int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
					CO_FreeErrLst(l_debug_info_ptr);
				}
				*int_p_retstat = int_retstat;
			}
		}
		else if(srv_charge > 0)
		{
			if(srv_charge < l_minimumfee)
				l_minimumfee_adj = l_minimumfee - srv_charge;
			else
				l_minimumfee_adj = 0;
			if((srv_charge > l_maximum_fee) && (l_maximum_fee != 0))
			{
				l_maximum_fee_adj = l_maximum_fee - srv_charge;
			}
			else
				l_maximum_fee_adj = 0;

			int_retstat = IV_SUCCESS;
			
/*added incld_in_ann_min_fee by shruthi kumbla for ISKB_1901*/
			if(APL_FAILURE == IV_Mod_IVSRVCHRGNew(chr_h_bl_upto_dt,h_dl_client,0.0,
			    l_minimumfee_adj,l_maximum_fee_adj,srv_charge,
			    chr_g_bl_ccycode,'I',BOND_RDM_FEE,p_mstclt_a,l_iv_client_serv_basis_structa.incld_in_ann_min_fee,
			    &int_retstat,l_debug_info_ptr))
			{
				fprintf(fp,"Error in accessing table for client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				int_bl_err_level = 1;
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
				if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
				{
					CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);

					CO_FreeErrLst(l_debug_info_ptr);
				}

				APL_GOBACK_FAIL;
			}
		}
		

		EXEC SQL UPDATE CACHEQUE  
		SET DATEOFBILLING = :chr_h_bl_upto_dt
		WHERE	ROWID IN (SELECT a.ROWID FROM CACHEQUE a, CAEVENT b 
								WHERE b.CA_EVENT = 'RD' AND
								b.OP_EVT_CLASS IN ('PT','RD') AND
								a.DEAL_IDENTITY_NO LIKE 'REDMPT%' AND
								a.CORP_ID = b.CORP_ID AND
								a.CLIENT = :h_dl_client AND
								a.CHECKER IS NOT NULL AND
								(a.DATEOFBILLING IS NULL OR
								a.DATEOFBILLING = :chr_h_bl_upto_dt) AND
								a.STAT_PYMT = 'CP' AND 
								a.DATE_OF_INPUT <= :chr_h_bl_upto_dt);

	}
	/*****************************/

	if(*int_p_retstat != IV_SUCCESS)
	{
		APL_GOBACK_FAIL;
	}
	else
	{
		*int_p_retstat = IV_SUCCESS;
		APL_GOBACK_SUCCESS;
	}

RETURN_SUCCESS:

	if(int_is_othsrv_cur_open_a == 1)
	{
		exec sql close othsrv_cur;
	}

	return APL_SUCCESS;

RETURN_FAILURE:

	if(int_is_othsrv_cur_open_a == 1)
	{
		exec sql close othsrv_cur;
	}

	return APL_FAILURE;
}



int IV_Proc_TransactionFn(char *p_typeofdeal,int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

	EXEC SQL BEGIN DECLARE SECTION;
	char h_classofdl[3];
	char h_nation[APL_CTRY_CODE_LEN];
	EXEC SQL VAR h_nation IS STRING;
	EXEC SQL VAR h_classofdl IS STRING;
	EXEC SQL END DECLARE SECTION;

	int int_h_exists = 0;
	struct sqlca sqlca;
	sqlca.sqlcode = 0;

	memset(h_classofdl, APL_NULL_CHAR, 3);
	memset(h_nation, APL_NULL_CHAR, APL_CTRY_CODE_LEN);

	strcpy(h_classofdl,p_typeofdeal);
	strcat(h_classofdl,APL_NULL_STRING);
	strcpy(h_nation,chr_g_country);
	strcat(h_nation,APL_NULL_STRING);

	*int_p_retstat = IV_SUCCESS;

	EXEC SQL SELECT NVL(count(*),0)  
	INTO :int_h_exists
	FROM IV_DEAL_TYPE
	WHERE (NATION_CD = :h_nation OR
			NATION_CD = 'XX') AND
			DL_CLASS = :h_classofdl;

	if(sqlca.sqlcode < 0)
		*int_p_retstat = IV_CRITCAL_ERROR_IND;

	IS_ANY_ORA_ERROR

	if(int_h_exists > 0)
		*int_p_retstat = IV_SUCCESS;
	else
		*int_p_retstat = IV_NO_DATA_FOUND_ERR;

	if(*int_p_retstat != IV_SUCCESS)
	{
		APL_GOBACK_FAIL;
	}
	else
	{
		*int_p_retstat = IV_SUCCESS;
		APL_GOBACK_SUCCESS;
	}

RETURN_SUCCESS:
	return APL_SUCCESS;

RETURN_FAILURE:
	return APL_FAILURE;

}

int IV_Rtv_ServiceParam(char *p_cltt_str,long p_serv_code,
					  IV_CLIENTPARAM_STRUCT_H *p_iv_clientparam_struct_h ,
					  int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	char *chr_l_actcode=NULL,*k;
	int int_retstat = IV_SUCCESS;
	IV_CLIENTPARAM_STRUCT_H l_iv_clientparam_struct_hb;
	char chr_l_acct_str[IV_CLT_LEN];
  char h_apl_frm_date[9] = APL_NULL_STRING;  /* Added by monica for kotak ISKB_1737 */
  short i_apl_frm_date = 0;  /* Added by monica for kotak ISKB_1737 */
  EXEC SQL VAR h_apl_frm_date IS STRING;  /* Added by monica for kotak ISKB_1737 */

	*int_p_retstat = IV_SUCCESS;
	memset(chr_l_acct_str,APL_NULL_CHAR,IV_CLT_LEN);
	k= (char *) calloc (31,sizeof(char));

	strcpy(chr_l_acct_str,p_cltt_str);
	chr_l_actcode = strtok_r(chr_l_acct_str,";",&k);
	
Alert("inside IV_Rtv_ServiceParam");
	while(chr_l_actcode)
	{
	
		/* Added by monica for kotak ISKB_1737 starts */
	EXEC SQL SELECT to_char(MAX(to_date(apl_frm_date,'MM/YYYY')),'MON-YYYY') into :h_apl_frm_date:i_apl_frm_date FROM IV_CLIENT_SERV_BASIS,SYS_IVCONTROLPARAM 
	WHERE CLIENT = :chr_l_actcode AND service_cd = :p_serv_code AND  to_date(apl_frm_date,'MM/YYYY') <= B_UPTO_DATE;
	IS_ANY_ORA_ERROR
	printf("\n applicable from date |%s| \n",h_apl_frm_date);
	/* Added by monica for kotak ISKB_1737 ends */
		int_retstat = IV_SUCCESS;
		if(APL_FAILURE == IV_Rtv_IVCUSTPARAM(chr_l_actcode,p_serv_code,h_apl_frm_date,
		    &l_iv_clientparam_struct_hb,&int_retstat,l_debug_info_ptr))   	/* Added by monica for kotak ISKB_1737 */
		{
			if(int_retstat == IV_CRITCAL_ERROR_IND)
			{
				fprintf(fp,"Error : Fatal l_debuglist encountered in Service dependencies\n");
				fflush(fp);
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
				APL_GOBACK_FAIL;
			}
			else
				chr_l_actcode = strtok_r(NULL,";",&k);
		}
		else
			break;
	}
	*int_p_retstat = int_retstat;

	if(int_retstat != IV_SUCCESS)
	{
		if(int_retstat == IV_NO_DATA_FOUND_ERR)
		{
			if (chr_l_actcode) strcpy(l_iv_clientparam_struct_hb.client,chr_l_actcode);
			else strcpy(l_iv_clientparam_struct_hb.client,APL_NULL_STRING);
			l_iv_clientparam_struct_hb.service_cd = p_serv_code;
			strcpy(l_iv_clientparam_struct_hb.parameter_cd," ");
		}
		
		int_retstat = IV_SUCCESS;
		if(APL_FAILURE == IV_Rtv_IVParam_Type(p_serv_code,&int_retstat,l_debug_info_ptr))
		{
			if(int_retstat != IV_NO_DATA_FOUND_ERR)
			{
				fprintf(fp,"Error : Fatal l_debuglist encountered in Service Basis\n");
				fflush(fp);
				*int_p_retstat = IV_CRITCAL_ERROR_IND;
				APL_GOBACK_FAIL;
			}
			else
			{
				APL_GOBACK_SUCCESS;
			}

		}
		else
		{
			*int_p_retstat = IV_NO_DATA_FOUND_ERR;
			APL_GOBACK_FAIL;
		}
	}
	
	if(int_retstat == IV_SUCCESS)
	{
		APL_GOBACK_SUCCESS;
	}
	else
	{
		APL_GOBACK_FAIL;
	}

RETURN_SUCCESS:
	*p_iv_clientparam_struct_h = l_iv_clientparam_struct_hb;
	return APL_SUCCESS;

RETURN_FAILURE:
	*p_iv_clientparam_struct_h = l_iv_clientparam_struct_hb;
	return APL_FAILURE;

}

/************** For PUT charges By : vinay kalaskar ****************************************/
int IV_PutTradeCnt(char *p_client,double *p_no_of_trades,int *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	Alert("Inside IV_PutTradeCnt ");
	EXEC SQL BEGIN DECLARE SECTION;
	double no_of_trades=0.0;
	double l_ca_count=0.0;
	double l_put_count=0.0;
	struct sqlca sqlca;
	EXEC SQL END DECLARE SECTION;

	Alert("Before Query:|%s|",p_client);

	EXEC SQL SELECT COUNT(*)
		INTO :l_ca_count 
		FROM CAEVENT A,CACHEQUE B,SYS_IVCONTROLPARAM C
		WHERE A.CORP_ID=B.CORP_ID
		AND B.CLIENT=:p_client
		AND B.STAT_PYMT ='CP'
		AND A.OVER_SUBSCRP='Y'
		AND A.CA_EVENT = 'RD'
		AND A.OP_EVT_CLASS ='PO'
		AND (B.DATEOF_PAYMENT > C.B_PREV_DATE AND B.DATEOF_PAYMENT <= C.B_UPTO_DATE )
		AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = C.B_UPTO_DATE);

	
	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
   IS_ANY_ORA_ERROR

	EXEC SQL SELECT COUNT(*)
			INTO :l_put_count
			FROM CA_PUTCALL_APP A,SYS_IVCONTROLPARAM B
			WHERE A.CLN_CODE=:p_client
			AND (A.NOTICE_DATE > B.B_PREV_DATE AND A.NOTICE_DATE <= B.B_UPTO_DATE)
			AND A.STATUS='AA';

	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
	IS_ANY_ORA_ERROR

	if(sqlca.sqlcode < 0)
	{
		*int_p_retstat=IV_CRITCAL_ERROR_IND;
		APL_GOBACK_FAIL
	}

	Alert("l_ca_count:|%lf|l_put_count:|%lf|",l_ca_count,l_put_count);
	
	no_of_trades=l_ca_count+l_put_count;
	
	Alert("no_of_trades:|%lf|",no_of_trades);
	
	*p_no_of_trades=no_of_trades;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	return APL_SUCCESS;
	
RETURN_FAILURE:
	return APL_FAILURE;
	
}

/************** For CALL charges By : vinay kalaskar ****************************************/

int IV_CallTradeCnt(char *p_client,double *p_no_of_trades,int *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	Alert("Inside IV_CallTradeCnt ");
	EXEC SQL BEGIN DECLARE SECTION;
	double no_of_trades=0.0;
	struct sqlca sqlca;
	EXEC SQL END DECLARE SECTION;

	Alert("Before Query:|%s|",p_client);
	
	EXEC SQL SELECT COUNT(*)
		INTO :no_of_trades 
		FROM CAEVENT A,CACHEQUE B,SYS_IVCONTROLPARAM C
		WHERE A.CORP_ID=B.CORP_ID
		AND B.CLIENT=:p_client
		AND B.STAT_PYMT ='CP'
		AND A.OVER_SUBSCRP='Y'
		AND A.CA_EVENT = 'RD'
		AND A.OP_EVT_CLASS ='CA'
		AND (B.DATEOF_PAYMENT > C.B_PREV_DATE AND B.DATEOF_PAYMENT <= C.B_UPTO_DATE )
		AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = C.B_UPTO_DATE);

	
	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
   IS_ANY_ORA_ERROR

	if(sqlca.sqlcode < 0)
	{
		*int_p_retstat=IV_CRITCAL_ERROR_IND;
		APL_GOBACK_FAIL
	}

	Alert("no_of_trades:|%lf|",no_of_trades);
	*p_no_of_trades=no_of_trades;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	return APL_SUCCESS;
	
RETURN_FAILURE:
	return APL_FAILURE;
	
}

/************** For PTC charges By : vinay kalaskar ****************************************/

int IV_PtcAmountCalc(char *p_client,char *p_instr_code,double *p_total_amount,
							int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	Alert("Inside IV_PtcAmountCalc");
	EXEC SQL BEGIN DECLARE SECTION;

	struct sqlca sqlca;
	double total_amount=0.0,amount=0.0;
	double h_schdl_fee=0.0,h_ptc_value=0.0;
	char h_ptc_dt[APL_DATE_LEN];
	char chr_h_bl_upto_dt[APL_DATE_LEN];
	int no_days=0,counter=0;
	
	EXEC SQL END DECLARE SECTION;

	EXEC SQL VAR h_ptc_dt IS STRING;
	EXEC SQL VAR chr_h_bl_upto_dt IS STRING;

	memset(h_ptc_dt,NULL,sizeof(APL_DATE_LEN));
	memset(chr_h_bl_upto_dt,NULL,sizeof(APL_DATE_LEN));

	strcpy(chr_h_bl_upto_dt,chr_g_bl_upto_dt);

	Alert("chr_h_bl_upto_dt:|%s|p_instr_code:|%s|",chr_h_bl_upto_dt,p_instr_code);
	
	EXEC SQL DECLARE PtcAvgCurr CURSOR FOR 
	SELECT NVL(B.PTC_VALUE,0),TO_DATE(TO_CHAR(A.B_PROCESSDT,'DD/MM/YYYY'),'DD/MM/YYYY')-
				   				  TO_DATE(TO_CHAR(B.PTC_DT,'DD/MM/YYYY'),'DD/MM/YYYY') 
	FROM SYS_IVCONTROLPARAM A,MT_PTC_DET B
	WHERE B.INSTR_CODE=:p_instr_code
	order by B.PTC_DT;

	EXEC SQL OPEN PtcAvgCurr;
	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);

		for(;;)
		{
			Alert("Insie For Loop");
			EXEC SQL FETCH PtcAvgCurr
				INTO :h_ptc_value,:no_days;

			if(sqlca.sqlcode == 1403)
			break;	
			
			Alert("no_days:|%d|",no_days);
			if(no_days > 0)
			{
				amount=amount+h_ptc_value;
				counter++;
			}
			else
			{
				amount=amount+h_ptc_value;
				counter++;
				break;
			}
		}
		EXEC SQL CLOSE PtcAvgCurr;
		
		Alert("amount:|%lf|counter:|%d|",amount,counter);
		
		if((amount > 0)&&(counter > 0))
		total_amount=total_amount+(amount/counter);
			

	Alert("total_amount:|%lf|",total_amount);
	*p_total_amount=total_amount;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	return APL_SUCCESS;
	
RETURN_FAILURE:
	return APL_FAILURE;
	
	
}

/************** For Part PUT charges By : vinay kalaskar ****************************************/

int IV_PartPutChrg(char *p_client,double *p_total_amt,int *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	Alert("Inside IV_PartPutChrg ");
	
//SP-25-07-2007
char chr_h_bl_upto_dt[APL_DATE_LEN],h_ca_event[3];

	double total_amount=0.0,l_amount=0.0;
	int h_count=0;
	char h_instr_code[APL_INSTRUMENTCODE_LEN];
	
	EXEC SQL BEGIN DECLARE SECTION;
	struct sqlca sqlca;
	EXEC SQL VAR h_instr_code IS STRING;
 EXEC SQL VAR chr_h_bl_upto_dt IS STRING; //SP
	EXEC SQL END DECLARE SECTION;

	memset(h_instr_code,NULL,sizeof(APL_INSTRUMENTCODE_LEN));
memset(chr_h_bl_upto_dt,NULL,sizeof(APL_DATE_LEN));//SP

strcpy(chr_h_bl_upto_dt,chr_g_bl_upto_dt);
	
	Alert("Before Query:|%s|\n",p_client);
//SP -25-07-2007
//IF_COND_EXISTS("IV_TEST","PUTCALL")
IF_COND_NOT_EXISTS("IV_TEST","PUTCALL")
{
	EXEC SQL SELECT NVL(SUM(B.CURR_PYMT),0) 
	INTO :total_amount
	FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
	WHERE B.CLIENT=:p_client
	AND A.CORP_ID=B.CORP_ID
	AND C.INSTR_CODE=A.INSTR_CODE
	AND B.STAT_PYMT ='CP'
	AND A.REDEM_RT < C.NOMINAL_VALUE
	AND A.CA_EVENT='RD'
	AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
	AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
	AND A.OP_EVT_CLASS='PO';

	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
	IS_ANY_ORA_ERROR
			
	Alert("total_amount:|%lf|",total_amount);
	*p_total_amt=total_amount;
	*int_p_retstat=IV_SUCCESS;
	

} //end of if
else
{			//KB 

EXEC SQL SELECT NVL(SUM(B.CURR_PYMT),0) 
			INTO :total_amount
			FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
			WHERE B.CLIENT=:p_client
			AND A.CORP_ID=B.CORP_ID
			AND C.INSTR_CODE=A.INSTR_CODE
			AND B.STAT_PYMT ='CP'
			AND A.REDEM_RT < C.NOMINAL_VALUE
			AND A.CA_EVENT='RD'
			AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )                                                                                                                                                                       
			AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
			AND A.OP_EVT_CLASS IN ('CA','PO');



        Alert("total_amount:|%lf|",total_amount);
        *p_total_amt=total_amount;
        *int_p_retstat=IV_SUCCESS;


} //end of else --SP 25-07-2007
RETURN_SUCCESS:
	return APL_SUCCESS;
	
RETURN_FAILURE:
	return APL_FAILURE;
}


/************** For Part CALL charges By : vinay kalaskar ****************************************/

int IV_PartCallChrg(char *p_client,double *p_total_amt,int *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	Alert("Inside IV_PartCallChrg ");
	
	double total_amount=0.0,l_amount=0.0;
	int h_count=0;
	char h_instr_code[APL_INSTRUMENTCODE_LEN];
	
	EXEC SQL BEGIN DECLARE SECTION;
	struct sqlca sqlca;
	EXEC SQL VAR h_instr_code IS STRING;
	EXEC SQL END DECLARE SECTION;

	memset(h_instr_code,NULL,sizeof(APL_INSTRUMENTCODE_LEN));
	
	Alert("Before Query:|%s|\n",p_client);


	EXEC SQL SELECT NVL(SUM(B.CURR_PYMT),0) 
	INTO :total_amount
	FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
	WHERE B.CLIENT=:p_client
	AND A.CORP_ID=B.CORP_ID
	AND C.INSTR_CODE=A.INSTR_CODE
	AND B.STAT_PYMT ='CP'
	AND A.REDEM_RT < C.NOMINAL_VALUE
	AND A.CA_EVENT='RD'
	AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
	AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
	AND A.OP_EVT_CLASS='CA';

	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
	IS_ANY_ORA_ERROR
			
	Alert("total_amount:|%lf|",total_amount);
	*p_total_amt=total_amount;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	return APL_SUCCESS;
	
RETURN_FAILURE:
	return APL_FAILURE;
	
}


/************** For Part PTC charges By : vinay kalaskar ****************************************/


int IV_PartPtcChrg(char *p_client,double *p_total_amt,int *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	Alert("Inside IV_PartPtcChrg ");
	
	double total_amount=0.0,l_amount=0.0;
	int h_count=0;
	char h_instr_code[APL_INSTRUMENTCODE_LEN];
	
	EXEC SQL BEGIN DECLARE SECTION;
	struct sqlca sqlca;
	EXEC SQL VAR h_instr_code IS STRING;
	EXEC SQL END DECLARE SECTION;

	memset(h_instr_code,NULL,sizeof(APL_INSTRUMENTCODE_LEN));
	
	Alert("Before Query:|%s|\n",p_client);
	
	EXEC SQL SELECT NVL(SUM(B.CURR_PYMT),0) 
	INTO :total_amount
	FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
	WHERE B.CLIENT=:p_client
	AND A.CORP_ID=B.CORP_ID
	AND C.INSTR_CODE=A.INSTR_CODE
	AND B.STAT_PYMT ='CP'
	AND A.REDEM_RT < C.NOMINAL_VALUE
	AND A.CA_EVENT='RD'
	AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
	AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
	AND A.OP_EVT_CLASS='PT';

	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
	IS_ANY_ORA_ERROR
			
	Alert("total_amount:|%lf|",total_amount);
	*p_total_amt=total_amount;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	return APL_SUCCESS;
	
RETURN_FAILURE:
	return APL_FAILURE;
	
}


/************** For Part REDEMPTION charges By : vinay kalaskar ****************************************/

int IV_PartRedemChrg(char *p_client,double *p_total_amt,int *int_p_retstat,
								DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	Alert("Inside IV_PartRedemChrg ");
	
	double total_amount=0.0,l_amount=0.0;
	int h_count=0;
	char h_instr_code[APL_INSTRUMENTCODE_LEN];
	
	EXEC SQL BEGIN DECLARE SECTION;
	struct sqlca sqlca;
	EXEC SQL VAR h_instr_code IS STRING;
	EXEC SQL END DECLARE SECTION;

	memset(h_instr_code,NULL,sizeof(APL_INSTRUMENTCODE_LEN));
	
	Alert("Before Query:|%s|\n",p_client);
	
	EXEC SQL SELECT NVL(SUM(B.CURR_PYMT),0) 
	INTO :total_amount
	FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
	WHERE B.CLIENT=:p_client
	AND A.CORP_ID=B.CORP_ID
	AND C.INSTR_CODE=A.INSTR_CODE
	AND B.STAT_PYMT ='CP'
	AND A.REDEM_RT < C.NOMINAL_VALUE
	AND A.CA_EVENT='RD'
	AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
	AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
	AND A.OP_EVT_CLASS='RD';

	Alert("sqlca.sqlcode:|%d|",sqlca.sqlcode);
	IS_ANY_ORA_ERROR
			
	Alert("total_amount:|%lf|",total_amount);
	*p_total_amt=total_amount;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	return APL_SUCCESS;
	
RETURN_FAILURE:
	return APL_FAILURE;
	
}

/**********************************************************************************************/

//shailesh -06-02-2008 ,deleting the putcalltrade cnt function,since ca charges will be only for manatory and voluntary events.

//shailesh 11-02-2008 
int IV_Proc_CalcMandCAchrg(char *h_dl_client,char *input_setl_basis,char *chr_acct_str,double *p_total_chrg_qty,
							 IV_CLIENT_SERV_BASIS_STRUCT l_iv_client_serv_basis_structa,
							int *int_p_retstat,	DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
		printf("Inside IV_Proc_CalcMandCAchrg ");
		double total_charge_qty=0.0;
		int int_retstat=0;
		int mand_deal_cnt = 0,mand_payment_cnt = 0,mand_partial_cnt=0;
		double mand_deal_amt = 0,mand_payment_amt = 0,mand_partial_amt=0;

printf("\n 1.IV_BilGenFn_D.pc:INSIDE IV_Proc_CalcVoluCAchrg:input/settlement basis =[%s]",input_setl_basis);
if( strcmp(input_setl_basis,"INP") && strcmp(input_setl_basis,"ASD"))
		strcpy(input_setl_basis,chr_g_bill_dep);
printf("\n 2.IV_BilGenFn_D.pc:INSIDE IV_Proc_CalcVoluCAchrg:input/settlement basis =[%s]",input_setl_basis);

	
if(APL_FAILURE == IV_Rtv_GetServBasis(chr_acct_str,MANDATORY_CA_FEE,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
		{
			fprintf(fp,"Error : Service basis not found for service %d for client  %s\n",MANDATORY_CA_FEE,h_dl_client);
			fflush(fp);
			int_bl_err_level = 1;
			if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
			{
				CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
				CO_FreeErrLst(l_debug_info_ptr);
			}
			*int_p_retstat = int_retstat;
			APL_GOBACK_FAIL;

		}
printf("\n  l_iv_client_serv_basis_structa.fees_base = [%s]",l_iv_client_serv_basis_structa.fees_base);
printf("\n  l_iv_client_serv_basis_structa. chrg_base = [%s]",l_iv_client_serv_basis_structa.chrg_base);
/*	ISKB-1935	Remove Settle Status Condition for Input Basis	*/
if( strcmp(l_iv_client_serv_basis_structa.fees_base,"NO. OF TRADES") == 0 &&
			strcmp(l_iv_client_serv_basis_structa. chrg_base,"NO. OF TRADES") == 0)
	{
		//for BO,RD,CV,SP
		/*Query modified by siva.ganapathi for ISKB_2263 on 20/04/2009 -- started*/
		if(!strcmp(input_setl_basis,"INP")) //input date basis
		{
		EXEC SQL SELECT SUM(DEAL_CNT_1) INTO  :mand_deal_cnt FROM
           (
           SELECT COUNT(*) AS  DEAL_CNT_1
						FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 		
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
							 OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						/*	AND A.DEAL_STAT IN ('CS')	*/
						AND A.DEAL_STAT != 'DU'	/* ISKB-2247 Not to pick DU and DD deals */
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
            UNION ALL
            SELECT COUNT(*) AS  DEAL_CNT_1
						FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
								OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						/*	AND A.DEAL_STAT IN ('CS') 	*/
						AND A.DEAL_STAT != 'DD'	/* ISKB-2247 Not to pick DU and DD deals */
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
            );	
		}
		else //settlement date basis
		{
		EXEC SQL SELECT SUM(DEAL_CNT_1) INTO  :mand_deal_cnt FROM
           (
           SELECT COUNT(*) AS  DEAL_CNT_1 
						FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
							 OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						AND A.DEAL_STAT IN ('CS','SS') 
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND (A.INSTRUMENT_DT IS NOT NULL AND A.INSTRUMENT_DT <= D.B_UPTO_DATE)
            UNION ALL
            SELECT COUNT(*) AS  DEAL_CNT_1 
						FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
							 OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						AND A.DEAL_STAT IN ('CS','SS') 
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND (A.INSTRUMENT_DT IS NOT NULL AND A.INSTRUMENT_DT <= D.B_UPTO_DATE) 
			);
		   }	//--deal conditions 
		  /*Query modified by siva.ganapathi for ISKB_2263 on 20/04/2009 -- Ended*/

		   
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcMandCAchrg() for mand_deal_cnt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Mand.CA chrgs for mand_deal_cnt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
		

		EXEC SQL SELECT COUNT(*) INTO :mand_payment_cnt
				FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
				WHERE B.CLIENT=:h_dl_client
				AND A.CORP_ID=B.CORP_ID
				AND C.INSTR_CODE=A.INSTR_CODE
				AND B.STAT_PYMT ='CP' 
				AND A.CA_EVENT in ('DV')
				AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
				AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE);
	     
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcMandCAchrg() for mand_payment_cnt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Mand.CA chrgs for mand_payment_cnt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
		
//For Partial type charges
		EXEC SQL SELECT COUNT(*)
				INTO :mand_partial_cnt
				FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
				WHERE B.CLIENT=:h_dl_client
				AND A.CORP_ID=B.CORP_ID
				AND C.INSTR_CODE=A.INSTR_CODE
				AND B.STAT_PYMT IN ('CP','PP') 
				AND A.REDEM_RT < C.NOMINAL_VALUE
				AND A.CA_EVENT='RD' 
				AND A.OP_EVT_CLASS NOT IN ('PO') 
				AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
				AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE);	

			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcMandCAchrg() for mand_partial_cnt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Mand.CA chrgs for mand_partial_cnt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}

				total_charge_qty = mand_deal_cnt+mand_payment_cnt+mand_partial_cnt;
		}
	else
	{
			//for BO,RD,CV,SP
		/*Query modified by siva.ganapathi for ISKB_2263 on 20/04/2009 -- started*/
	if(!strcmp(input_setl_basis,"INP")) //input date basis
		{
		EXEC SQL SELECT SUM(DEAL_AMT_1) INTO  :mand_deal_amt FROM
           (
           SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  DEAL_AMT_1
						FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
							 OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						/*	AND A.DEAL_STAT IN ('CS') 	*/
						AND A.DEAL_STAT != 'DU'	/* ISKB-2247 Not to pick DU and DD deals */
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
            UNION ALL
            SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  DEAL_AMT_1
						FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/			
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
							 OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						/*	AND A.DEAL_STAT IN ('CS')  	*/
						AND A.DEAL_STAT != 'DD'	/* ISKB-2247 Not to pick DU and DD deals */
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
            );	
		}
		else //settlement date basis
		{
		EXEC SQL  SELECT SUM(DEAL_AMT_1) INTO  :mand_deal_amt FROM
           (
           SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  DEAL_AMT_1
						FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
							 OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						AND A.DEAL_STAT IN ('CS','SS') 
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND (A.INSTRUMENT_DT IS NOT NULL AND A.INSTRUMENT_DT <= D.B_UPTO_DATE) 
            UNION ALL
            SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  DEAL_AMT_1
						FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
						WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT||B.OP_EVT_CLASS != 'BO'||'DM')) OR (B.CA_EVENT||B.OP_EVT_CLASS = 'BO'||'DM')) 
						AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*/			
						AND A.DL_CLASS IN ('18','19') 
						AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
						AND (B.CA_EVENT IN ('BO','RD')
							 OR (B.CA_EVENT IN ('CV', 'CR','SP') AND (A.DEAL_CD = '1')))
						AND ( B.OP_EVT_CLASS != 'PO' OR B.OP_EVT_CLASS IS NULL)
						AND A.DEAL_STAT IN ('CS','SS')  
						AND A.CLIENT = :h_dl_client  
						AND A.checker IS NOT NULL 
						AND (A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
						( A.DATEOFBILLING != D.B_UPTO_DATE and A.AMEND_COUNT != A.NUMBER_A))  
						AND (A.INSTRUMENT_DT IS NOT NULL AND A.INSTRUMENT_DT <= D.B_UPTO_DATE) 
			);
		   }	//--deal conditions 
 		/*Query modified by siva.ganapathi for ISKB_2263 on 20/04/2009 -- started*/

		
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcMandCAchrg() for mand_deal_amt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Mand.CA chrgs for mand_deal_amt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}

			//--deal conditions 
			//for CR and DV
		EXEC SQL SELECT NVL(SUM(NVL(B.CURR_PYMT,0)),0) 
				INTO :mand_payment_amt
				FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
				WHERE B.CLIENT=:h_dl_client
				AND A.CORP_ID=B.CORP_ID
				AND C.INSTR_CODE=A.INSTR_CODE
				AND B.STAT_PYMT ='CP'
				AND A.CA_EVENT in ('DV') 
				AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
				AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE);
		
		
		if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcMandCAchrg() for mand_payment_amt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Mand.CA chrgs for mand_payment_amt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
		
		EXEC SQL SELECT NVL(SUM(NVL(B.CURR_PYMT,0)),0)
				INTO :mand_partial_amt
				FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
				WHERE B.CLIENT=:h_dl_client
				AND A.CORP_ID=B.CORP_ID
				AND C.INSTR_CODE=A.INSTR_CODE 
				AND B.STAT_PYMT IN ('CP','PP')  
				AND A.REDEM_RT < C.NOMINAL_VALUE
				AND A.CA_EVENT='RD'
				AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
				AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
				AND A.OP_EVT_CLASS IN ('CA','RD');

			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcMandCAchrg() for mand_partial_amt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Mand.CA chrgs for mand_partial_amt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
	
		total_charge_qty = mand_deal_amt+mand_payment_amt+mand_partial_amt;
			
	}

	*p_total_chrg_qty=total_charge_qty;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully Out Of IV_Proc_CalcMandCAchrg\n", NULL, NULL);
	}
	return APL_SUCCESS;
	
RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting Unsuccessfully Out Of IV_Proc_CalcMandCAchrg\n", NULL, NULL);
	}
	return APL_FAILURE;
}

int IV_Proc_CalcVoluCAchrg(char *h_dl_client,char *input_setl_basis,char *chr_acct_str,double *p_total_chrg_qty,
							 IV_CLIENT_SERV_BASIS_STRUCT l_iv_client_serv_basis_structa,
							int *int_p_retstat,	DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
printf("Inside IV_Proc_CalcVoluCAchrg ");
double total_charge_qty=0.0;
int volu_deal_cnt = 0,volu_rt_cnt = 0,volu_po_cnt = 0,volu_partial_cnt =0,int_retstat=0;
double volu_deal_amt = 0,volu_rt_amt = 0,volu_po_amt = 0,volu_partial_amt =0;

printf("\n 1.IV_BilGenFn_D.pc:INSIDE IV_Proc_CalcVoluCAchrg:input/settlement basis =[%s]",input_setl_basis);
if( strcmp(input_setl_basis,"INP") && strcmp(input_setl_basis,"ASD"))
		strcpy(input_setl_basis,chr_g_bill_dep);
printf("\n 2.IV_BilGenFn_D.pc:INSIDE IV_Proc_CalcVoluCAchrg:input/settlement basis =[%s]",input_setl_basis);

if(APL_FAILURE == IV_Rtv_GetServBasis(chr_acct_str,VOLUNTARY_CA_FEE,&l_iv_client_serv_basis_structa,&int_retstat,l_debug_info_ptr))
	{
		fprintf(fp,"Error   Service basis not found for service %d for client  %s\n",VOLUNTARY_CA_FEE,h_dl_client);
		fflush(fp);
		int_bl_err_level = 1;
		if(APL_SUCCESS == CO_ChkErr(*l_debug_info_ptr))
		{
			CO_ProcMonitor(TechRep,APL_NULL_STRING,l_debug_info_ptr,NULL);
			CO_FreeErrLst(l_debug_info_ptr);
		}

		*int_p_retstat = int_retstat;
		APL_GOBACK_FAIL;

	}
printf("\n  l_iv_client_serv_basis_structa.fees_base = [%s]",l_iv_client_serv_basis_structa.fees_base);
printf("\n  l_iv_client_serv_basis_structa. chrg_base = [%s]",l_iv_client_serv_basis_structa.chrg_base);

/*	ISKB-1935	Remove Settle Status Condition for Input Basis	*/

if( strcmp(l_iv_client_serv_basis_structa.fees_base,"NO. OF TRADES") == 0 &&
			strcmp(l_iv_client_serv_basis_structa. chrg_base,"NO. OF TRADES") == 0)
	{
			//for BB,NS,RT

		if(!strcmp(input_setl_basis,"INP")) //input date basis
		{

		EXEC SQL SELECT SUM(VOLU_DEAL_CNT_1) INTO :volu_deal_cnt FROM
         (
         SELECT COUNT(*) AS VOLU_DEAL_CNT_1
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT = 'CS' 	*/
					AND A.DEAL_STAT != 'DU'	/* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
          UNION ALL
          SELECT COUNT(*) AS VOLU_DEAL_CNT_1
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT = 'CS' 	*/
					AND A.DEAL_STAT != 'DD'	/* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
          );
		}
		else //settlement basis
		{
		 EXEC SQL SELECT SUM(VOLU_DEAL_CNT_1) INTO :volu_deal_cnt FROM
         (
         SELECT COUNT(*) AS VOLU_DEAL_CNT_1
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT in ('CS','SS') 
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE)
          UNION ALL
          SELECT COUNT(*) AS VOLU_DEAL_CNT_1
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT in ('CS','SS') 
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE)
          );
		}
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_deal_cnt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_deal_cnt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
			//--deal conditions 
			//IF RT consider only RVP trades
		if(!strcmp(input_setl_basis,"INP")) //input date basis
		{
			EXEC SQL SELECT SUM(VOLU_RT_CNT_1) INTO :volu_rt_cnt  FROM 
				(
				SELECT COUNT(*) AS  VOLU_RT_CNT_1
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT IN ('SS','CS') 	*/
					AND A.DEAL_STAT != 'DU'	/* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
			        UNION ALL
				SELECT COUNT(*) AS  VOLU_RT_CNT_1
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT IN ('SS','CS')  	*/
					AND A.DEAL_STAT != 'DD' /* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
				);
		}
		else//settlement date basis
		{	EXEC SQL SELECT SUM(VOLU_RT_CNT_1) INTO :volu_rt_cnt  FROM 
				(
				SELECT COUNT(*) AS  VOLU_RT_CNT_1
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT IN ('SS','CS')  
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE)
			        UNION ALL
				SELECT COUNT(*) AS  VOLU_RT_CNT_1
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT IN ('SS','CS') 
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE)
				);
		}

			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_rt_cnt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_rt_cnt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
					

			//--deal conditions 

			//For PO
			EXEC SQL SELECT COUNT(*)
					INTO :volu_po_cnt 
					FROM CAEVENT A,CACHEQUE B,SYS_IVCONTROLPARAM C
					WHERE A.CORP_ID=B.CORP_ID
					AND B.CLIENT=:h_dl_client
					AND B.STAT_PYMT ='CP'
					AND A.OVER_SUBSCRP='Y'
					AND A.CA_EVENT = 'RD'
					AND A.OP_EVT_CLASS ='PO'
					AND (B.DATEOF_PAYMENT > C.B_PREV_DATE AND B.DATEOF_PAYMENT <= C.B_UPTO_DATE )
					AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = C.B_UPTO_DATE);
					
			
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_po_cnt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_po_cnt of  client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
				//For partial type --PART PUT
			EXEC SQL SELECT COUNT(*) 
					INTO :volu_partial_cnt
					FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
					WHERE B.CLIENT=:h_dl_client
					AND A.CORP_ID=B.CORP_ID
					AND C.INSTR_CODE=A.INSTR_CODE
					AND B.STAT_PYMT  IN  ('PP','CP')
					AND A.REDEM_RT < C.NOMINAL_VALUE
					AND A.CA_EVENT='RD'
					AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE )
					AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
					AND A.OP_EVT_CLASS='PO';
			
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_partial_cnt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_partial_cnt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}	

					

					total_charge_qty = volu_deal_cnt+volu_rt_cnt+volu_po_cnt+volu_partial_cnt;
	}
	else
	{

		if(!strcmp(input_setl_basis,"INP")) //input date basis
		{
		EXEC SQL SELECT SUM(VOLU_DEAL_AMT_1) INTO :volu_deal_amt FROM
         (
         SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS VOLU_DEAL_AMT_1 
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT = 'CS' 	*/
					AND A.DEAL_STAT != 'DU' /* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
          UNION ALL
          SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS VOLU_DEAL_AMT_1 
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT = 'CS' 	*/
					AND A.DEAL_STAT != 'DD' /* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE 
          );
		}
		else //settlement basis
		{
		 EXEC SQL SELECT SUM(VOLU_DEAL_AMT_1) INTO :volu_deal_amt FROM
         (
         SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS VOLU_DEAL_AMT_1 
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT in ('CS','SS') 
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE) 
          UNION ALL
          SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS VOLU_DEAL_AMT_1 
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('BB','NS','RD')
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT in ('CS','SS') 
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE)
          );
		 }	
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_deal_amt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_deal_amt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}	
					
			//--deal conditions 
		if(!strcmp(input_setl_basis,"INP")) //input date basis
		{
			EXEC SQL SELECT SUM(VOLU_RT_AMT_1) INTO :volu_rt_amt  FROM 
				(
				SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  VOLU_RT_AMT_1 
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT IN ('SS','CS') 	*/
					AND A.DEAL_STAT != 'DU' /* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE  
			        UNION ALL
				SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  VOLU_RT_AMT_1
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					/*	AND A.DEAL_STAT IN ('SS','CS') 	*/
					AND A.DEAL_STAT != 'DD' /* ISKB-2247 Not to pick DU and DD deals */
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND A.DATEOF_INPUT<=D.B_UPTO_DATE  
				);
		}
		else//settlement date basis
		{	EXEC SQL SELECT SUM(VOLU_RT_AMT_1) INTO :volu_rt_amt  FROM 
				(
				SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  VOLU_RT_AMT_1 
					FROM DL_DEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT IN ('SS','CS')  
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE)
			        UNION ALL
				SELECT NVL(SUM(NVL(A.AMOUNT,0)),0) AS  VOLU_RT_AMT_1 
					FROM DL_HISDEAL A,CAEVENT B,SYS_IVCONTROLPARAM D 
					 WHERE (((A.INSTR_CODE=B.INSTR_CODE) AND (B.CA_EVENT != 'RT')) OR (B.CA_EVENT = 'RT')) /*modified by siva.ganapathi for ISKB_2273 on 22/04/2009*/
					AND /*(*/A.INFORMATON=B.CORP_ID /*OR A.INFORMATON IS NULL)*//*modified by siva.ganapathi for ISKB_2263 on 20/04/2009*/
					AND A.DL_CLASS IN ('18','19') 
					AND (A.PAY_MODE IS NULL OR A.PAY_MODE !='N') /*Added by siva.ganapathi for ISKB_2295*/
					AND B.CA_EVENT IN ('RT') AND A.DEAL_CD = 4
					AND ( B.OP_EVT_CLASS = 'PO' OR B.OP_EVT_CLASS IS NULL)
					AND A.DEAL_STAT IN ('SS','CS')  
					AND A.CLIENT = :h_dl_client 
					AND A.checker IS NOT NULL 
					AND	(A.DATEOFBILLING is null OR  A.DATEOFBILLING = D.B_UPTO_DATE OR 
					( A.DATEOFBILLING != D.B_UPTO_DATE and A.amend_count != A.NUMBER_A)) 
					AND (A.INSTRUMENT_DT is not null and A.INSTRUMENT_DT <= D.B_UPTO_DATE)
				);
		} 
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_rt_amt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_rt_amt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}	
					
							//--deal conditions 

			//For PO
			EXEC SQL SELECT NVL(SUM(NVL(B.CURR_PYMT,0)),0) 
					INTO :volu_po_amt 
					FROM CAEVENT A,CACHEQUE B,SYS_IVCONTROLPARAM C
					WHERE A.CORP_ID=B.CORP_ID
					AND B.CLIENT=:h_dl_client 
					AND B.STAT_PYMT ='CP'
					AND A.OVER_SUBSCRP='Y'
					AND A.CA_EVENT = 'RD'
					AND A.OP_EVT_CLASS ='PO'
					AND (B.DATEOF_PAYMENT > C.B_PREV_DATE AND B.DATEOF_PAYMENT <= C.B_UPTO_DATE )
					AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = C.B_UPTO_DATE);
			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_po_amt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_po_amt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}

					

			//For partial type part put
			EXEC SQL SELECT NVL(SUM(NVL(B.CURR_PYMT,0)),0) 
					INTO :volu_partial_amt
					FROM CAEVENT A,CACHEQUE B,MT_INSTRUMENT C,SYS_IVCONTROLPARAM D
					WHERE B.CLIENT=:h_dl_client 
					AND A.CORP_ID=B.CORP_ID
					AND C.INSTR_CODE=A.INSTR_CODE
					AND B.STAT_PYMT IN ('PP','CP') 
					AND A.REDEM_RT < C.NOMINAL_VALUE
					AND A.CA_EVENT='RD'
					AND (B.DATEOF_PAYMENT > D.B_PREV_DATE AND B.DATEOF_PAYMENT <= D.B_UPTO_DATE)
					AND (B.DATEOFBILLING IS NULL OR B.DATEOFBILLING = D.B_UPTO_DATE)	
					AND A.OP_EVT_CLASS='PO';

			if(sqlca.sqlcode !=0 )
			{
				printf("\n Error in IV_Proc_CalcVoluCAchrg() for volu_partial_amt,sqlca.sqlcode = [%d]",sqlca.sqlcode);
				fprintf(fp,"Error in calculating Volu.CA chrgs for volu_partial_amt of client %s. Please contact support\n",h_dl_client);
				fprintf(fp, "File: %s, Line: %d\n", __FILE__, __LINE__);
				fflush(fp);
				APL_GOBACK_FAIL
			}
					

    total_charge_qty = volu_deal_amt+volu_rt_amt+volu_po_amt+volu_partial_amt;
			
	}


	*p_total_chrg_qty=total_charge_qty;
	*int_p_retstat=IV_SUCCESS;
	
RETURN_SUCCESS:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting successfully Out Of IV_Proc_CalcVoluCAchrg\n", NULL, NULL);
	}
	return APL_SUCCESS;
	
RETURN_FAILURE:
	APL_IF_DEBUG
	{
		CO_ProcMonitor(APL_OUT_FILE, "Exiting Unsuccessfully Out Of IV_Proc_CalcVoluCAchrg\n", NULL, NULL);
	}
	return APL_FAILURE;
}

int IV_Proc_TrepesFn(char *h_dl_client,long p_serv_code,char *chr_g_bl_upto_dt,int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{

    printf("\n inside FUNCTION IV_Proc_TrepesFn \n");
	EXEC SQL BEGIN DECLARE SECTION;
	struct sqlca sqlca;
	EXEC SQL END DECLARE SECTION;
	sqlca.sqlcode = 0;

          
     
             //this query is used for insert data from from CSGLTREPS table into CUSTODY_TREPS_CHARGES   
	         EXEC SQL INSERT INTO CUSTODY_TREPS_CHARGES (CLIENT, SERVICE_CD, DATEOFBILLING, DEAL_DATE, SETL_DATE, Trans_Type,
			          COMM_AMT,AMOUNT,DEAL_TYPE,AUTH_ON,IDENTIY_NO) 
				      SELECT a.CSTRP_CUST_CODE ,2, NULL,a.CSTRP_VALUE_DATE,a.CSTRP_DEAL_DATE, a.CSTRP_PUR_SALE, 
				      0,a.CSTRP_RATE,a.CSTRP_DEAL_TYPE,
					  a.CSTRP_AUTH_ON,CSTRP_BRN_CODE||CSTRP_DEAL_TYPE||CSTRP_DEAL_YEAR||CSTRP_DEAL_SL AS IDENTIY_NO 
					  from CSGLTREPS_VW a,sys_ivcontrolparam b
				      where a.CSTRP_CUST_CODE = :h_dl_client AND  a.CSTRP_VALUE_DATE BETWEEN TO_DATE(TO_CHAR(to_date(b.B_PREV_DATE,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')||'12:00:00','DD/MM/YYYY HH24:MI:SS')
					  AND TO_DATE(TO_CHAR(to_date(:chr_g_bl_upto_dt,'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy')||'23:59:59','DD/MM/YYYY HH24:MI:SS')
					  AND a.CSTRP_DEAL_TYPE IN('TPL','TPB')
				      AND a.CSTRP_AUTH_ON is not NULL;
						
				if(sqlca.sqlcode !=0)
				  {
						printf("\n Error Inserting data to CUSTODY_TREPS_CHARGES data|%d|\n ");
						return;
				  }

		IS_ANY_ORA_ERROR
		
		*int_p_retstat = IV_SUCCESS;
	APL_GOBACK_SUCCESS;
				
RETURN_SUCCESS:
	APL_IF_DEBUG
	{
      CO_ProcMonitor(APL_OUT_FILE,"Exiting Successfully Out Of IV_Proc_TrepesFn\n", NULL, NULL);
	}
return APL_SUCCESS;

RETURN_FAILURE:
	APL_IF_DEBUG
	{
	   CO_ProcMonitor(APL_OUT_FILE,"Exiting Unsuccessfully Out Of IV_Proc_TrepesFn\n", NULL, NULL);
	}
return APL_FAILURE;

}

int IV_Mod_Trpes_BillDate(char *chr_p_client,int *int_p_retstat,DEBUG_INFO_STRUCT_H **l_debug_info_ptr)
{
	
   char *int_pos,*chr_h_upto_dt_temp ;
	EXEC SQL BEGIN DECLARE SECTION;

	char chr_h_sel_stmt[1200],h_dl_client[APL_CLIENT_LENGTH];
	char chr_h_bl_upto_dt[APL_DATE_LEN];
	struct sqlca sqlca;
	EXEC SQL VAR chr_h_sel_stmt IS STRING;
	EXEC SQL VAR chr_h_bl_upto_dt IS STRING;

	EXEC SQL END DECLARE SECTION;
	
	sqlca.sqlcode = 0;
	int_pos = (char *) calloc(APL_DATE_LEN,sizeof(char)); /* PJ */
	memset(chr_h_sel_stmt, APL_NULL_CHAR, 1200);
	memset(h_dl_client, APL_NULL_CHAR, APL_CLIENT_LENGTH);
	memset(chr_h_bl_upto_dt, APL_NULL_CHAR, APL_DATE_LEN);
		
	
	
    
	strcpy(h_dl_client,chr_p_client);
	strcpy(chr_h_bl_upto_dt,chr_g_bl_upto_dt);
	chr_h_upto_dt_temp = strtok_r(chr_h_bl_upto_dt," ",&int_pos);
   strcpy(chr_h_bl_upto_dt,chr_h_upto_dt_temp);	
	
	strcat(chr_h_bl_upto_dt," 23:59:59");
	
	strcpy(chr_h_sel_stmt,"UPDATE CUSTODY_TREPS_CHARGES ");
	strcat(chr_h_sel_stmt," SET DATEOFBILLING = '");
	strcat(chr_h_sel_stmt,chr_g_bl_upto_dt);
	strcat(chr_h_sel_stmt,"'");
	strcat(chr_h_sel_stmt," WHERE ");
	strcat(chr_h_sel_stmt,"client = '");
	strcat(chr_h_sel_stmt,h_dl_client);
	strcat(chr_h_sel_stmt,"' AND ");
	strcat(chr_h_sel_stmt," DATEOFBILLING IS NULL ");
	
	strcat(chr_h_sel_stmt,APL_NULL_STRING);
      	printf("%s",chr_h_sel_stmt);

	EXEC SQL EXECUTE IMMEDIATE :chr_h_sel_stmt;
    
	*int_p_retstat = IV_CRITCAL_ERROR_IND;
	
   
   if (sqlca.sqlcode !=0)
   {
      printf(" The updation is not succesful : %d",sqlca.sqlcode);
      printf("%s",chr_h_sel_stmt);
   }

	IS_ANY_ORA_ERROR;
	
		*int_p_retstat = IV_SUCCESS;
	APL_GOBACK_SUCCESS;
				
RETURN_SUCCESS:
	APL_IF_DEBUG
	{
      CO_ProcMonitor(APL_OUT_FILE,"Exiting Successfully Out Of IV_Mod_Trpes_BillDate\n", NULL, NULL);
	}
return APL_SUCCESS;

RETURN_FAILURE:
	APL_IF_DEBUG
	{
	   CO_ProcMonitor(APL_OUT_FILE,"Exiting Unsuccessfully Out Of IV_Mod_Trpes_BillDate\n", NULL, NULL);
	}
return APL_FAILURE;
	
	
}

